[
  {
    "signature": "org.joda.time.base.BasePeriod(int years, int months, int weeks, int days, int hours, int minutes, int seconds, int millis, org.joda.time.PeriodType type)",
    "name": "org.joda.time.base.BasePeriod",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "years"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "months"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "weeks"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "days"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hours"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minutes"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "seconds"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millis"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "years"
        },
        "comment": "amount of years in this period which . years is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "months"
        },
        "comment": "amount of months in this period which . months is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "weeks"
        },
        "comment": "amount of weeks in this period which . weeks is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "days"
        },
        "comment": "amount of days in this period which . days is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hours"
        },
        "comment": "amount of hours in this period which . hours is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minutes"
        },
        "comment": "amount of minutes in this period which . minutes is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "seconds"
        },
        "comment": "amount of seconds in this period which . seconds is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millis"
        },
        "comment": "amount of milliseconds in this period which . millis is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "which set of fields this period supports.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "period type is invalid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an unsupported field's value is non-zero.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.joda.time.base.BasePeriod(long startInstant, long endInstant, org.joda.time.PeriodType type, org.joda.time.Chronology chrono)",
    "name": "org.joda.time.base.BasePeriod",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "startInstant"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "endInstant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chrono"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "startInstant"
        },
        "comment": "interval start in milliseconds.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "endInstant"
        },
        "comment": "endInstant is interval. interval end in milliseconds.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "which set of fields this period supports. type is null means standard.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chrono"
        },
        "comment": "the chronology to use. chrono is null means ISO default.",
        "kind": "PARAM",
        "condition": "args[3]==null"
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "period type is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.joda.time.base.BasePeriod(org.joda.time.ReadableInstant startInstant, org.joda.time.ReadableInstant endInstant, org.joda.time.PeriodType type)",
    "name": "org.joda.time.base.BasePeriod",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableInstant",
          "name": "ReadableInstant",
          "isArray": false
        },
        "name": "startInstant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableInstant",
          "name": "ReadableInstant",
          "isArray": false
        },
        "name": "endInstant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableInstant",
            "name": "ReadableInstant",
            "isArray": false
          },
          "name": "startInstant"
        },
        "comment": "interval start. startInstant is null means now.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableInstant",
            "name": "ReadableInstant",
            "isArray": false
          },
          "name": "endInstant"
        },
        "comment": "interval end. endInstant is null means now.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "which set of fields this period supports. type is null means standard.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "period type is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.joda.time.base.BasePeriod(org.joda.time.ReadablePartial start, org.joda.time.ReadablePartial end, org.joda.time.PeriodType type)",
    "name": "org.joda.time.base.BasePeriod",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePartial",
          "name": "ReadablePartial",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePartial",
          "name": "ReadablePartial",
          "isArray": false
        },
        "name": "end"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePartial",
            "name": "ReadablePartial",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the start of the period. start is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePartial",
            "name": "ReadablePartial",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the end of the period. end is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "which set of fields this period supports. type is null means standard.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the partials are null or invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.joda.time.base.BasePeriod(org.joda.time.ReadableInstant startInstant, org.joda.time.ReadableDuration duration, org.joda.time.PeriodType type)",
    "name": "org.joda.time.base.BasePeriod",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableInstant",
          "name": "ReadableInstant",
          "isArray": false
        },
        "name": "startInstant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableDuration",
          "name": "ReadableDuration",
          "isArray": false
        },
        "name": "duration"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableInstant",
            "name": "ReadableInstant",
            "isArray": false
          },
          "name": "startInstant"
        },
        "comment": "the interval start. startInstant is null means now.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableDuration",
            "name": "ReadableDuration",
            "isArray": false
          },
          "name": "duration"
        },
        "comment": "the duration of the interval. duration is null means zero-length.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "which set of fields this period supports. type is null means standard.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.base.BasePeriod(org.joda.time.ReadableDuration duration, org.joda.time.ReadableInstant endInstant, org.joda.time.PeriodType type)",
    "name": "org.joda.time.base.BasePeriod",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableDuration",
          "name": "ReadableDuration",
          "isArray": false
        },
        "name": "duration"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableInstant",
          "name": "ReadableInstant",
          "isArray": false
        },
        "name": "endInstant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableDuration",
            "name": "ReadableDuration",
            "isArray": false
          },
          "name": "duration"
        },
        "comment": "the duration of the interval. duration is null means zero-length.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableInstant",
            "name": "ReadableInstant",
            "isArray": false
          },
          "name": "endInstant"
        },
        "comment": "the interval end. endInstant is null means now.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "which set of fields this period supports. type is null means standard.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.base.BasePeriod(long duration)",
    "name": "org.joda.time.base.BasePeriod",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "duration"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "duration"
        },
        "comment": "the duration in milliseconds.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.base.BasePeriod(long duration, org.joda.time.PeriodType type, org.joda.time.Chronology chrono)",
    "name": "org.joda.time.base.BasePeriod",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "duration"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chrono"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "duration"
        },
        "comment": "the duration in milliseconds.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "which set of fields this period supports. type is null means standard.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chrono"
        },
        "comment": "the chronology to use. chrono is null means ISO default.",
        "kind": "PARAM",
        "condition": "args[2]==null"
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "period type is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.joda.time.base.BasePeriod(java.lang.Object period, org.joda.time.PeriodType type, org.joda.time.Chronology chrono)",
    "name": "org.joda.time.base.BasePeriod",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "period"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chrono"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "period"
        },
        "comment": "the period to convert.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "which set of fields this period supports. type is null means use type from object.",
        "kind": "PARAM",
        "condition": "args[1]==null"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chrono"
        },
        "comment": "the chronology to use. chrono is null means ISO default.",
        "kind": "PARAM",
        "condition": "args[2]==null"
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "period is invalid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an unsupported field's value is non-zero.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.joda.time.base.BasePeriod(int[] values, org.joda.time.PeriodType type)",
    "name": "org.joda.time.base.BasePeriod",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "values"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[I",
            "name": "int[]",
            "isArray": true
          },
          "name": "values"
        },
        "comment": "the values to use not null. values is not cloned.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "which set of fields this period supports. type is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "checkPeriodType(org.joda.time.PeriodType type)",
    "name": "checkPeriodType",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.PeriodType",
      "name": "org.joda.time.PeriodType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "the type to check null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the validated type to use, not null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the period type is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getPeriodType()",
    "name": "getPeriodType",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.PeriodType",
      "name": "org.joda.time.PeriodType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the period type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the number of fields supported.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getFieldType(int index)",
    "name": "getFieldType",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.DurationFieldType",
      "name": "org.joda.time.DurationFieldType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index to retrieve.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the field at the specified index.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getValue(int index)",
    "name": "getValue",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index to retrieve.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value of the field at the specified index.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toDurationFrom(org.joda.time.ReadableInstant startInstant)",
    "name": "toDurationFrom",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Duration",
      "name": "org.joda.time.Duration",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableInstant",
          "name": "ReadableInstant",
          "isArray": false
        },
        "name": "startInstant"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableInstant",
            "name": "ReadableInstant",
            "isArray": false
          },
          "name": "startInstant"
        },
        "comment": "the instant to add the period to thus obtaining the duration.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the total length of the period as a duration relative to the start instant.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the millis exceeds the capacity of the duration.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toDurationTo(org.joda.time.ReadableInstant endInstant)",
    "name": "toDurationTo",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Duration",
      "name": "org.joda.time.Duration",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableInstant",
          "name": "ReadableInstant",
          "isArray": false
        },
        "name": "endInstant"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableInstant",
            "name": "ReadableInstant",
            "isArray": false
          },
          "name": "endInstant"
        },
        "comment": "the instant to subtract the period from thus obtaining the duration.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the total length of the period as a duration relative to the end instant.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the millis exceeds the capacity of the duration.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setPeriod(org.joda.time.ReadablePeriod period)",
    "name": "setPeriod",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePeriod",
          "name": "ReadablePeriod",
          "isArray": false
        },
        "name": "period"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePeriod",
            "name": "ReadablePeriod",
            "isArray": false
          },
          "name": "period"
        },
        "comment": "the period to copy from. period is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an unsupported field's value is non-zero.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setPeriod(int years, int months, int weeks, int days, int hours, int minutes, int seconds, int millis)",
    "name": "setPeriod",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "years"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "months"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "weeks"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "days"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hours"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minutes"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "seconds"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millis"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "years"
        },
        "comment": "amount of years in this period which . years is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "months"
        },
        "comment": "amount of months in this period which . months is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "weeks"
        },
        "comment": "amount of weeks in this period which . weeks is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "days"
        },
        "comment": "amount of days in this period which . days is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hours"
        },
        "comment": "amount of hours in this period which . hours is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minutes"
        },
        "comment": "amount of minutes in this period which . minutes is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "seconds"
        },
        "comment": "amount of seconds in this period which . seconds is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millis"
        },
        "comment": "amount of milliseconds in this period which . millis is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an unsupported field's value is non-zero.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setField(org.joda.time.DurationFieldType field, int value)",
    "name": "setField",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DurationFieldType",
          "name": "DurationFieldType",
          "isArray": false
        },
        "name": "field"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DurationFieldType",
            "name": "DurationFieldType",
            "isArray": false
          },
          "name": "field"
        },
        "comment": "the field to set.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "field is is null or not supported.",
        "kind": "THROWS",
        "condition": "args[0]==null || (receiverObjectID.isSupported(args[0])) == false"
      }
    ]
  },
  {
    "signature": "setFieldInto(int[] values, org.joda.time.DurationFieldType field, int value)",
    "name": "setFieldInto",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "values"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.DurationFieldType",
          "name": "DurationFieldType",
          "isArray": false
        },
        "name": "field"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[I",
            "name": "int[]",
            "isArray": true
          },
          "name": "values"
        },
        "comment": "the array of values to update.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DurationFieldType",
            "name": "DurationFieldType",
            "isArray": false
          },
          "name": "field"
        },
        "comment": "the field to set.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "field is null or not supported.",
        "kind": "THROWS",
        "condition": "args[1]==null || (receiverObjectID.isSupported(args[1])) == false"
      }
    ]
  },
  {
    "signature": "addField(org.joda.time.DurationFieldType field, int value)",
    "name": "addField",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DurationFieldType",
          "name": "DurationFieldType",
          "isArray": false
        },
        "name": "field"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DurationFieldType",
            "name": "DurationFieldType",
            "isArray": false
          },
          "name": "field"
        },
        "comment": "the field to set.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "field is is null or not supported.",
        "kind": "THROWS",
        "condition": "args[0]==null || (receiverObjectID.isSupported(args[0])) == false"
      }
    ]
  },
  {
    "signature": "addFieldInto(int[] values, org.joda.time.DurationFieldType field, int value)",
    "name": "addFieldInto",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "values"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.DurationFieldType",
          "name": "DurationFieldType",
          "isArray": false
        },
        "name": "field"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[I",
            "name": "int[]",
            "isArray": true
          },
          "name": "values"
        },
        "comment": "the array of values to update.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DurationFieldType",
            "name": "DurationFieldType",
            "isArray": false
          },
          "name": "field"
        },
        "comment": "the field to set.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "field is is null or not supported.",
        "kind": "THROWS",
        "condition": "args[1]==null || (receiverObjectID.isSupported(args[1])) == false"
      }
    ]
  },
  {
    "signature": "mergePeriod(org.joda.time.ReadablePeriod period)",
    "name": "mergePeriod",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePeriod",
          "name": "ReadablePeriod",
          "isArray": false
        },
        "name": "period"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePeriod",
            "name": "ReadablePeriod",
            "isArray": false
          },
          "name": "period"
        },
        "comment": "the period to add from. period is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an unsupported field's value is non-zero.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "mergePeriodInto(int[] values, org.joda.time.ReadablePeriod period)",
    "name": "mergePeriodInto",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int[]",
      "name": "int[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "values"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePeriod",
          "name": "ReadablePeriod",
          "isArray": false
        },
        "name": "period"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[I",
            "name": "int[]",
            "isArray": true
          },
          "name": "values"
        },
        "comment": "the array of values to update.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePeriod",
            "name": "ReadablePeriod",
            "isArray": false
          },
          "name": "period"
        },
        "comment": "the period to add from. period is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the updated values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an unsupported field's value is non-zero.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "addPeriod(org.joda.time.ReadablePeriod period)",
    "name": "addPeriod",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePeriod",
          "name": "ReadablePeriod",
          "isArray": false
        },
        "name": "period"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePeriod",
            "name": "ReadablePeriod",
            "isArray": false
          },
          "name": "period"
        },
        "comment": "the period to add from. period is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an unsupported field's value is non-zero.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "addPeriodInto(int[] values, org.joda.time.ReadablePeriod period)",
    "name": "addPeriodInto",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int[]",
      "name": "int[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "values"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePeriod",
          "name": "ReadablePeriod",
          "isArray": false
        },
        "name": "period"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[I",
            "name": "int[]",
            "isArray": true
          },
          "name": "values"
        },
        "comment": "the array of values to update.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePeriod",
            "name": "ReadablePeriod",
            "isArray": false
          },
          "name": "period"
        },
        "comment": "the period to add from. period is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the updated values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an unsupported field's value is non-zero.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setValue(int index, int value)",
    "name": "setValue",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setValues(int[] values)",
    "name": "setValues",
    "containingClass": {
      "qualifiedName": "org.joda.time.base.BasePeriod",
      "name": "BasePeriod",
      "isArray": false
    },
    "targetClass": "org.joda.time.base.BasePeriod",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "values"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[I",
            "name": "int[]",
            "isArray": true
          },
          "name": "values"
        },
        "comment": "the array of values.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  }
]