/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 20 01:03:48 GMT 2023
 */
package org.apache.commons.compress.archivers.tar;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import org.apache.commons.compress.archivers.ArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class TarArchiveOutputStream_ESTest extends TarArchiveOutputStream_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);
        tarArchiveOutputStream0.flush();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0, 223);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0, 1756, 1756);
        int int0 = tarArchiveOutputStream0.getRecordSize();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        MockPrintStream mockPrintStream0 = new MockPrintStream("V!^/XJ_6vB*2=");
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockPrintStream0);
        MockFile mockFile0 = new MockFile("", "V!^/XJ_6vB*2=");
        ArchiveEntry archiveEntry0 = tarArchiveOutputStream0.createArchiveEntry(mockFile0, "V!^/XJ_6vB*2=");
        tarArchiveOutputStream0.putArchiveEntry(archiveEntry0);
        tarArchiveOutputStream0.close();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);
        tarArchiveOutputStream0.close();
        tarArchiveOutputStream0.close();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(475);
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0, 475, 475);
        MockFile mockFile0 = new MockFile("org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy", "org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);
        tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2090);
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0, 2090, 2090);
        tarArchiveOutputStream0.setLongFileMode(1);
        File file0 = MockFile.createTempFile("org.apache.commons.compress.archivers.zip.ZipArchiveEntry", "org.apache.commons.compress.archivers.zip.ZipArchiveEntry");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);
        tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        MockFile mockFile0 = new MockFile("");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);
        tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);
        tarArchiveEntry0.getMode();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(475);
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0, 475, 475);
        tarArchiveOutputStream0.setLongFileMode(2);
        MockFile mockFile0 = new MockFile("org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy", "org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy");
        MockFile mockFile1 = new MockFile(mockFile0, "org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy");
        MockFile mockFile2 = new MockFile(mockFile1, "org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy");
        MockFile mockFile3 = new MockFile(mockFile2, "org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy");
        MockFile mockFile4 = new MockFile(mockFile3, "org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy");
        MockFile mockFile5 = new MockFile(mockFile4, "j?Kc})cITYM)`R!L");
        MockFile mockFile6 = new MockFile(mockFile5, "org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile6);
        tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(475);
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0, 475, 475);
        tarArchiveOutputStream0.setLongFileMode(2);
        MockFile mockFile0 = new MockFile("org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy", "org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy");
        MockFile mockFile1 = new MockFile(mockFile0, "org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy");
        MockFile mockFile2 = new MockFile(mockFile1, "org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy");
        MockFile mockFile3 = new MockFile(mockFile2, "org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy");
        MockFile mockFile4 = new MockFile(mockFile3, "org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy");
        MockFile mockFile5 = new MockFile(mockFile4, "j?Kc})cITYM)`R!L");
        MockFile mockFile6 = new MockFile(mockFile5, "org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile6);
        tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2090);
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0, 2090, 2090);
        tarArchiveOutputStream0.setLongFileMode(2);
        MockFile mockFile0 = new MockFile("org.apache.commons.compress.archivers.zip.ZipArchiveEntry", "org.apache.commons.compress.archivers.zip.ZipArchiveEntry");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);
        tarArchiveEntry0.setSize(1L);
        tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);
        tarArchiveOutputStream0.closeArchiveEntry();
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);
        tarArchiveOutputStream0.write(0);
    }

    @Test(timeout = 4000)
    public void test1112() throws Throwable {
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0, 455, 455);
        tarArchiveOutputStream0.setLongFileMode(2);
        MockFile mockFile0 = new MockFile("org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy", "org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy");
        MockFile mockFile1 = new MockFile(mockFile0, "org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy");
        MockFile mockFile2 = new MockFile(mockFile1, "org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy");
        MockFile mockFile3 = new MockFile(mockFile2, "org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy");
        MockFile mockFile4 = new MockFile(mockFile3, "org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy");
        MockFile mockFile5 = new MockFile(mockFile4, "org.apache.com+ons.compress.archivers.zip.ZipArchiveEntGy");
        TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile5);
        tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);
        byteArrayOutputStream0.size();
    }
}
