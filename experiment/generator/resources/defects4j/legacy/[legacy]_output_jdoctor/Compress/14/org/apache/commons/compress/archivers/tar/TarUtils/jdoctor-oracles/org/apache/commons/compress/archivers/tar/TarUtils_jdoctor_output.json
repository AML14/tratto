[
  {
    "signature": "parseOctal(byte[] buffer, int offset, int length)",
    "name": "parseOctal",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarUtils",
      "name": "TarUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "buffer"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "buffer"
        },
        "comment": "The buffer from which to parse.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "The offset into the buffer from which to parse.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "The maximum number of bytes to parse - . length is at least 2 bytes.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The long value of the octal string.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the trailing space/NUL is missing or if a invalid byte is detected.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "parseOctalOrBinary(byte[] buffer, int offset, int length)",
    "name": "parseOctalOrBinary",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarUtils",
      "name": "TarUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "buffer"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "buffer"
        },
        "comment": "The buffer from which to parse.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "The offset into the buffer from which to parse.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "The maximum number of bytes to parse.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The long value of the octal or binary string.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the trailing space/NUL is missing or an invalid byte is detected in an octal number or if a binary number would exceed the size of a signed long 64-bit integer.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "parseBoolean(byte[] buffer, int offset)",
    "name": "parseBoolean",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarUtils",
      "name": "TarUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "buffer"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "buffer"
        },
        "comment": "The buffer from which to parse.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "The offset into the buffer from which to parse.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The boolean value of the bytes.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an invalid byte is detected.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "parseName(byte[] buffer, int offset, int length)",
    "name": "parseName",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarUtils",
      "name": "TarUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "buffer"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "buffer"
        },
        "comment": "The buffer from which to parse.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "The offset into the buffer from which to parse.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "The maximum number of bytes to parse.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The entry name.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "formatNameBytes(java.lang.String name, byte[] buf, int offset, int length)",
    "name": "formatNameBytes",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarUtils",
      "name": "TarUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      },
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "buf"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "The header name from which to copy the characters.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "buf"
        },
        "comment": "The buffer where the name is to be stored.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "The starting offset into the buffer.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "The maximum number of header bytes to copy.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The updated offset, i.e. offset + length.",
      "kind": "RETURN",
      "condition": "true ? methodResultID==args[2]+args[3]"
    },
    "throwsTags": []
  },
  {
    "signature": "formatUnsignedOctalString(long value, byte[] buffer, int offset, int length)",
    "name": "formatUnsignedOctalString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarUtils",
      "name": "TarUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "value"
      },
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "buffer"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "number to convert to octal - treated as unsigned.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "buffer"
        },
        "comment": "destination buffer.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "starting offset in buffer.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "length of buffer to fill.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value will not fit in the buffer.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "formatOctalBytes(long value, byte[] buf, int offset, int length)",
    "name": "formatOctalBytes",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarUtils",
      "name": "TarUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "value"
      },
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "buf"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "The value to write.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "buf"
        },
        "comment": "The buffer to receive the output.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "The starting offset into the buffer.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "The size of the output buffer.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The updated offset, i.e offset+length.",
      "kind": "RETURN",
      "condition": "true ? methodResultID==args[2]+args[3]"
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value (and trailer) will not fit in the buffer.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "formatLongOctalBytes(long value, byte[] buf, int offset, int length)",
    "name": "formatLongOctalBytes",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarUtils",
      "name": "TarUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "value"
      },
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "buf"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "The value to write as octal.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "buf"
        },
        "comment": "The destinationbuffer.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "The starting offset into the buffer.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "The length of the buffer.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The updated offset.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value (and trailer) will not fit in the buffer.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "formatLongOctalOrBinaryBytes(long value, byte[] buf, int offset, int length)",
    "name": "formatLongOctalOrBinaryBytes",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarUtils",
      "name": "TarUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "value"
      },
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "buf"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "The value to write into the buffer.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "buf"
        },
        "comment": "The destination buffer.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "The starting offset into the buffer.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "The length of the buffer.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The updated offset.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value (and trailer) will not fit in the buffer.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "formatCheckSumOctalBytes(long value, byte[] buf, int offset, int length)",
    "name": "formatCheckSumOctalBytes",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarUtils",
      "name": "TarUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "value"
      },
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "buf"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "The value to convert.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "buf"
        },
        "comment": "The destination buffer.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "The starting offset into the buffer.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "The size of the buffer.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The updated value of offset, i.e. offset+length.",
      "kind": "RETURN",
      "condition": "true ? methodResultID==args[2]+args[3]"
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value (and trailer) will not fit in the buffer.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "computeCheckSum(byte[] buf)",
    "name": "computeCheckSum",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarUtils",
      "name": "TarUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "buf"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "buf"
        },
        "comment": "The tar entry's header buffer.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The computed checksum.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]