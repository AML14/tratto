[
  {
    "signature": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream(java.io.InputStream is)",
    "name": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
      "name": "TarArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "is"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.InputStream",
            "name": "InputStream",
            "isArray": false
          },
          "name": "is"
        },
        "comment": "the input stream to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream(java.io.InputStream is, int blockSize)",
    "name": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
      "name": "TarArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "is"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "blockSize"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.InputStream",
            "name": "InputStream",
            "isArray": false
          },
          "name": "is"
        },
        "comment": "the input stream to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "blockSize"
        },
        "comment": "the block size to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream(java.io.InputStream is, int blockSize, int recordSize)",
    "name": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
      "name": "TarArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "is"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "blockSize"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "recordSize"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.InputStream",
            "name": "InputStream",
            "isArray": false
          },
          "name": "is"
        },
        "comment": "the input stream to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "blockSize"
        },
        "comment": "the block size to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "recordSize"
        },
        "comment": "the record size to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "close()",
    "name": "close",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
      "name": "TarArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getRecordSize()",
    "name": "getRecordSize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
      "name": "TarArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The TarBuffer record size.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "available()",
    "name": "available",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
      "name": "TarArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The number of available bytes for the current entry.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "for signature.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "skip(long numToSkip)",
    "name": "skip",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
      "name": "TarArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "numToSkip"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "numToSkip"
        },
        "comment": "The number of bytes to skip.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the number actually skipped.",
      "kind": "RETURN",
      "condition": "true ? methodResultID == args[0]"
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "reset()",
    "name": "reset",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
      "name": "TarArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNextTarEntry()",
    "name": "getNextTarEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
      "name": "TarArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The next TarEntry in the archive, or null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "parsePaxHeaders(java.io.Reader br)",
    "name": "parsePaxHeaders",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
      "name": "TarArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map<java.lang.String, java.lang.String>",
      "name": "java.util.Map<java.lang.String, java.lang.String>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.Reader",
          "name": "Reader",
          "isArray": false
        },
        "name": "br"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNextEntry()",
    "name": "getNextEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
      "name": "TarArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.compress.archivers.ArchiveEntry",
      "name": "org.apache.commons.compress.archivers.ArchiveEntry",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "read(byte[] buf, int offset, int numToRead)",
    "name": "read",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
      "name": "TarArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "buf"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "numToRead"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "buf"
        },
        "comment": "The buffer into which to place bytes read.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "The offset at which to place bytes read.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "numToRead"
        },
        "comment": "The number of bytes to read.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The number of bytes read, or -1 at EOF.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry ae)",
    "name": "canReadEntryData",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
      "name": "TarArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.compress.archivers.ArchiveEntry",
          "name": "ArchiveEntry",
          "isArray": false
        },
        "name": "ae"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getCurrentEntry()",
    "name": "getCurrentEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
      "name": "TarArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setCurrentEntry(org.apache.commons.compress.archivers.tar.TarArchiveEntry e)",
    "name": "setCurrentEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
      "name": "TarArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
          "name": "TarArchiveEntry",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isAtEOF()",
    "name": "isAtEOF",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
      "name": "TarArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setAtEOF(boolean b)",
    "name": "setAtEOF",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
      "name": "TarArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "b"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "matches(byte[] signature, int length)",
    "name": "matches",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
      "name": "TarArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "signature"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "signature"
        },
        "comment": "the bytes to check.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the number of bytes to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true, if this stream is a tar archive stream, false otherwise.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]