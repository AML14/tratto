[
  {
    "signature": "org.apache.commons.compress.archivers.tar.TarArchiveEntry(java.lang.String name)",
    "name": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "the entry name.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.compress.archivers.tar.TarArchiveEntry(java.lang.String name, boolean preserveLeadingSlashes)",
    "name": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "preserveLeadingSlashes"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "the entry name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "preserveLeadingSlashes"
        },
        "comment": "whether to allow leading slashes in the name.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.compress.archivers.tar.TarArchiveEntry(java.lang.String name, byte linkFlag)",
    "name": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      },
      {
        "type": {
          "qualifiedName": "byte",
          "name": "byte",
          "isArray": false
        },
        "name": "linkFlag"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "the entry name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "byte",
            "name": "byte",
            "isArray": false
          },
          "name": "linkFlag"
        },
        "comment": "the entry link flag.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.compress.archivers.tar.TarArchiveEntry(java.lang.String name, byte linkFlag, boolean preserveLeadingSlashes)",
    "name": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      },
      {
        "type": {
          "qualifiedName": "byte",
          "name": "byte",
          "isArray": false
        },
        "name": "linkFlag"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "preserveLeadingSlashes"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "the entry name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "byte",
            "name": "byte",
            "isArray": false
          },
          "name": "linkFlag"
        },
        "comment": "the entry link flag.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "preserveLeadingSlashes"
        },
        "comment": "whether to allow leading slashes in the name.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.compress.archivers.tar.TarArchiveEntry(java.io.File file)",
    "name": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "file"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.File",
            "name": "File",
            "isArray": false
          },
          "name": "file"
        },
        "comment": "The file that the entry represents.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.compress.archivers.tar.TarArchiveEntry(java.io.File file, java.lang.String fileName)",
    "name": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "file"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fileName"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.File",
            "name": "File",
            "isArray": false
          },
          "name": "file"
        },
        "comment": "The file that the entry represents.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "fileName"
        },
        "comment": "the name to be used for the entry.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.compress.archivers.tar.TarArchiveEntry(byte[] headerBuf)",
    "name": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "headerBuf"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "headerBuf"
        },
        "comment": "The header bytes from a tar archive entry.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any of the numeric fields have an invalid format.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.apache.commons.compress.archivers.tar.TarArchiveEntry(byte[] headerBuf, org.apache.commons.compress.archivers.zip.ZipEncoding encoding)",
    "name": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "headerBuf"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipEncoding",
          "name": "ZipEncoding",
          "isArray": false
        },
        "name": "encoding"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "headerBuf"
        },
        "comment": "The header bytes from a tar archive entry.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipEncoding",
            "name": "ZipEncoding",
            "isArray": false
          },
          "name": "encoding"
        },
        "comment": "encoding to use for file names.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any of the numeric fields have an invalid format.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "equals(org.apache.commons.compress.archivers.tar.TarArchiveEntry it)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
          "name": "TarArchiveEntry",
          "isArray": false
        },
        "name": "it"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
            "name": "TarArchiveEntry",
            "isArray": false
          },
          "name": "it"
        },
        "comment": "Entry to be checked for equality.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the entries are equal.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "equals(java.lang.Object it)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "it"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "it"
        },
        "comment": "Entry to be checked for equality.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the entries are equal.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the entry hashcode.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isDescendent(org.apache.commons.compress.archivers.tar.TarArchiveEntry desc)",
    "name": "isDescendent",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
          "name": "TarArchiveEntry",
          "isArray": false
        },
        "name": "desc"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
            "name": "TarArchiveEntry",
            "isArray": false
          },
          "name": "desc"
        },
        "comment": "Entry to be checked as a descendent of this.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if entry is a descendant of this.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getName()",
    "name": "getName",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "This entry's name.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setName(java.lang.String name)",
    "name": "setName",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "This entry's new name.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setMode(int mode)",
    "name": "setMode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "mode"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "mode"
        },
        "comment": "the mode for this entry.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLinkName()",
    "name": "getLinkName",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "This entry's link name.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLinkName(java.lang.String link)",
    "name": "setLinkName",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "link"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "link"
        },
        "comment": "the link name to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getUserId()",
    "name": "getUserId",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "This entry's user id.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setUserId(int userId)",
    "name": "setUserId",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "userId"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "userId"
        },
        "comment": "This entry's new user id.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLongUserId()",
    "name": "getLongUserId",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "This entry's user id.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setUserId(long userId)",
    "name": "setUserId",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "userId"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "userId"
        },
        "comment": "This entry's new user id.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getGroupId()",
    "name": "getGroupId",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "This entry's group id.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setGroupId(int groupId)",
    "name": "setGroupId",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "groupId"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "groupId"
        },
        "comment": "This entry's new group id.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLongGroupId()",
    "name": "getLongGroupId",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "This entry's group id.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setGroupId(long groupId)",
    "name": "setGroupId",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "groupId"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "groupId"
        },
        "comment": "This entry's new group id.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getUserName()",
    "name": "getUserName",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "This entry's user name.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setUserName(java.lang.String userName)",
    "name": "setUserName",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "userName"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "userName"
        },
        "comment": "This entry's new user name.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getGroupName()",
    "name": "getGroupName",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "This entry's group name.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setGroupName(java.lang.String groupName)",
    "name": "setGroupName",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "groupName"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "groupName"
        },
        "comment": "This entry's new group name.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setIds(int userId, int groupId)",
    "name": "setIds",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "userId"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "groupId"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "userId"
        },
        "comment": "This entry's new user id.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "groupId"
        },
        "comment": "This entry's new group id.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setNames(java.lang.String userName, java.lang.String groupName)",
    "name": "setNames",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "userName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "groupName"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "userName"
        },
        "comment": "This entry's new user name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "groupName"
        },
        "comment": "This entry's new group name.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setModTime(long time)",
    "name": "setModTime",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "time"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "time"
        },
        "comment": "This entry's new modification time.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setModTime(java.util.Date time)",
    "name": "setModTime",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Date",
          "name": "Date",
          "isArray": false
        },
        "name": "time"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Date",
            "name": "Date",
            "isArray": false
          },
          "name": "time"
        },
        "comment": "This entry's new modification time.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getModTime()",
    "name": "getModTime",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Date",
      "name": "java.util.Date",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "time This entry's new modification time.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLastModifiedDate()",
    "name": "getLastModifiedDate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Date",
      "name": "java.util.Date",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isCheckSumOK()",
    "name": "isCheckSumOK",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "if the header checksum is reasonably correct.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getFile()",
    "name": "getFile",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.io.File",
      "name": "java.io.File",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "This entry's file.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMode()",
    "name": "getMode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "This entry's mode.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSize()",
    "name": "getSize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "This entry's file size.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setSize(long size)",
    "name": "setSize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "size"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "size"
        },
        "comment": "This entry's new file size.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the size is < 0.",
        "kind": "THROWS",
        "condition": "args[0]<0"
      }
    ]
  },
  {
    "signature": "getDevMajor()",
    "name": "getDevMajor",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "This entry's major device number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setDevMajor(int devNo)",
    "name": "setDevMajor",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "devNo"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "devNo"
        },
        "comment": "This entry's major device number.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the devNo is < 0.",
        "kind": "THROWS",
        "condition": "args[0]<0"
      }
    ]
  },
  {
    "signature": "getDevMinor()",
    "name": "getDevMinor",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "This entry's minor device number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setDevMinor(int devNo)",
    "name": "setDevMinor",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "devNo"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "devNo"
        },
        "comment": "This entry's minor device number.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the devNo is < 0.",
        "kind": "THROWS",
        "condition": "args[0]<0"
      }
    ]
  },
  {
    "signature": "isExtended()",
    "name": "isExtended",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if an extension oldgnu sparse header follows.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getRealSize()",
    "name": "getRealSize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "This entry's real file size.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isGNUSparse()",
    "name": "isGNUSparse",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if this is a sparse extension provided by GNU tar.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isOldGNUSparse()",
    "name": "isOldGNUSparse",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if this is a sparse extension provided by GNU tar or star.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isPaxGNUSparse()",
    "name": "isPaxGNUSparse",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if this is a sparse extension provided by GNU tar.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isStarSparse()",
    "name": "isStarSparse",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if this is a sparse extension provided by star.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isGNULongLinkEntry()",
    "name": "isGNULongLinkEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if this is a long name extension provided by GNU tar.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isGNULongNameEntry()",
    "name": "isGNULongNameEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if this is a long name extension provided by GNU tar.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isPaxHeader()",
    "name": "isPaxHeader",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if this is a Pax header.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isGlobalPaxHeader()",
    "name": "isGlobalPaxHeader",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if this is a Pax header.",
      "kind": "RETURN",
      "condition": "receiverObjectID.isPaxHeader() ? methodResultID == true : methodResultID == false"
    },
    "throwsTags": []
  },
  {
    "signature": "isDirectory()",
    "name": "isDirectory",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this entry is a directory.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isFile()",
    "name": "isFile",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is a \"normal file\"., false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSymbolicLink()",
    "name": "isSymbolicLink",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is a symbolic link., false otherwise",
      "kind": "RETURN",
      "condition": "receiverObjectID.isLink() ? methodResultID == true : methodResultID == false"
    },
    "throwsTags": []
  },
  {
    "signature": "isLink()",
    "name": "isLink",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is a link entry., false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isCharacterDevice()",
    "name": "isCharacterDevice",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is a character device., false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isBlockDevice()",
    "name": "isBlockDevice",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is a block device., false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isFIFO()",
    "name": "isFIFO",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is a FIFO entry., false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSparse()",
    "name": "isSparse",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is a sparse entry., false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDirectoryEntries()",
    "name": "getDirectoryEntries",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry[]",
      "name": "org.apache.commons.compress.archivers.tar.TarArchiveEntry[]",
      "isArray": true
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "An array of TarEntry's for this entry's children.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "writeEntryHeader(byte[] outbuf)",
    "name": "writeEntryHeader",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "outbuf"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "outbuf"
        },
        "comment": "The tar entry header buffer to fill in.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "writeEntryHeader(byte[] outbuf, org.apache.commons.compress.archivers.zip.ZipEncoding encoding, boolean starMode)",
    "name": "writeEntryHeader",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "outbuf"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipEncoding",
          "name": "ZipEncoding",
          "isArray": false
        },
        "name": "encoding"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "starMode"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "outbuf"
        },
        "comment": "The tar entry header buffer to fill in.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipEncoding",
            "name": "ZipEncoding",
            "isArray": false
          },
          "name": "encoding"
        },
        "comment": "encoding to use when writing the file name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "starMode"
        },
        "comment": "whether to use the star/GNU tar/BSD tar extension for numeric fields if their value doesn't fit in the maximum size of standard tar archives.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "parseTarHeader(byte[] header)",
    "name": "parseTarHeader",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "header"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "header"
        },
        "comment": "The tar entry header buffer to get information from.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any of the numeric fields have an invalid format.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "parseTarHeader(byte[] header, org.apache.commons.compress.archivers.zip.ZipEncoding encoding)",
    "name": "parseTarHeader",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "header"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipEncoding",
          "name": "ZipEncoding",
          "isArray": false
        },
        "name": "encoding"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "header"
        },
        "comment": "The tar entry header buffer to get information from.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipEncoding",
            "name": "ZipEncoding",
            "isArray": false
          },
          "name": "encoding"
        },
        "comment": "encoding to use for file names.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any of the numeric fields have an invalid format.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "fillGNUSparse0xData(java.util.Map<java.lang.String, java.lang.String> headers)",
    "name": "fillGNUSparse0xData",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "headers"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "fillGNUSparse1xData(java.util.Map<java.lang.String, java.lang.String> headers)",
    "name": "fillGNUSparse1xData",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "headers"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "fillStarSparseData(java.util.Map<java.lang.String, java.lang.String> headers)",
    "name": "fillStarSparseData",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
      "name": "TarArchiveEntry",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "headers"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]