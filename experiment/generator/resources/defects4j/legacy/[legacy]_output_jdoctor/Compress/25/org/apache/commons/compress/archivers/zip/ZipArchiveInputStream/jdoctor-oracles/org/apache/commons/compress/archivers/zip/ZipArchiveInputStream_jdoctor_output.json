[
  {
    "signature": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream(java.io.InputStream inputStream)",
    "name": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
      "name": "ZipArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "inputStream"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream(java.io.InputStream inputStream, java.lang.String encoding)",
    "name": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
      "name": "ZipArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "inputStream"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "encoding"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "encoding"
        },
        "comment": "the encoding to use for file names. encoding is use null for the platform's default encoding.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream(java.io.InputStream inputStream, java.lang.String encoding, boolean useUnicodeExtraFields)",
    "name": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
      "name": "ZipArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "inputStream"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "encoding"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "useUnicodeExtraFields"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "encoding"
        },
        "comment": "the encoding to use for file names. encoding is use null for the platform's default encoding.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "useUnicodeExtraFields"
        },
        "comment": "whether to use InfoZIP Unicode Extra Fields (if present) to set the file names.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream(java.io.InputStream inputStream, java.lang.String encoding, boolean useUnicodeExtraFields, boolean allowStoredEntriesWithDataDescriptor)",
    "name": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
      "name": "ZipArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "inputStream"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "encoding"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "useUnicodeExtraFields"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "allowStoredEntriesWithDataDescriptor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "encoding"
        },
        "comment": "the encoding to use for file names. encoding is use null for the platform's default encoding.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "useUnicodeExtraFields"
        },
        "comment": "whether to use InfoZIP Unicode Extra Fields (if present) to set the file names.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "allowStoredEntriesWithDataDescriptor"
        },
        "comment": "whether the stream will try to read STORED entries that use a data descriptor.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getNextZipEntry()",
    "name": "getNextZipEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
      "name": "ZipArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
      "name": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNextEntry()",
    "name": "getNextEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
      "name": "ZipArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.compress.archivers.ArchiveEntry",
      "name": "org.apache.commons.compress.archivers.ArchiveEntry",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry ae)",
    "name": "canReadEntryData",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
      "name": "ZipArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.compress.archivers.ArchiveEntry",
          "name": "ArchiveEntry",
          "isArray": false
        },
        "name": "ae"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "read(byte[] buffer, int offset, int length)",
    "name": "read",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
      "name": "ZipArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "buffer"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "close()",
    "name": "close",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
      "name": "ZipArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "skip(long value)",
    "name": "skip",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
      "name": "ZipArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the number of bytes to be skipped.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the actual number of bytes skipped.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "- if an I/O error occurs.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "- if value is negative.",
        "kind": "THROWS",
        "condition": "args[0]<0"
      }
    ]
  },
  {
    "signature": "matches(byte[] signature, int length)",
    "name": "matches",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
      "name": "ZipArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "signature"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "signature"
        },
        "comment": "the bytes to check.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the number of bytes to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true, if this stream is a zip archive stream, false otherwise.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]