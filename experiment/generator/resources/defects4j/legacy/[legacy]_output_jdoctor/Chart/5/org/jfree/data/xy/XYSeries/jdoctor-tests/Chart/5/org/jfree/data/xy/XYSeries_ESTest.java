/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 11 01:53:20 GMT 2023
 */
package org.jfree.data.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.jfree.data.statistics.SimpleHistogramBin;
import org.jfree.data.time.Day;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Minute;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.Second;
import org.jfree.data.time.SerialDate;
import org.jfree.data.time.Year;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.XYDataItem;
import org.jfree.data.xy.XYSeries;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class XYSeries_ESTest extends XYSeries_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test010() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        xYSeries0.setMaximumItemCount(0);
        Object object0 = xYSeries0.clone();
        xYSeries0.setMaximumItemCount(9999);
        boolean boolean0 = xYSeries0.equals(object0);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        xYSeries0.setMaximumItemCount(0);
        Object object0 = xYSeries0.clone();
        xYSeries0.setMaximumItemCount(9999);
        boolean boolean0 = xYSeries0.equals(object0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Year year0 = new Year();
        XYSeries xYSeries0 = new XYSeries(year0, false, false);
        Float float0 = new Float((double) 9999);
        xYSeries0.addOrUpdate((Number) 9999, (Number) float0);
        xYSeries0.addOrUpdate((Number) 9999, (Number) 9999);
        xYSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, false);
        Float float0 = new Float((float) 1L);
        xYSeries0.add((Number) float0, (Number) float0, true);
        xYSeries0.add((double) 1L, (Number) float0);
        xYSeries0.addOrUpdate((double) 1L, 1876.0);
        xYSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        Integer integer0 = new Integer((-9999));
        XYDataItem xYDataItem0 = new XYDataItem((Number) 9999, (Number) 9999);
        xYSeries0.add(xYDataItem0);
        xYSeries0.add((double) integer0, 495.8750692);
        xYSeries0.update(9999, integer0);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        MockDate mockDate0 = new MockDate();
        Day day0 = new Day(mockDate0);
        Hour hour0 = new Hour(0, day0);
        XYSeries xYSeries0 = new XYSeries(hour0, false);
        xYSeries0.addOrUpdate(0.0, 0.0);
        xYSeries0.delete(0, 2);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Hour hour0 = new Hour();
        XYSeries xYSeries0 = new XYSeries(hour0, true);
        xYSeries0.addOrUpdate((Number) 23, (Number) 0);
        xYSeries0.delete(0, 0);
        xYSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        SerialDate serialDate0 = SerialDate.createInstance(3019);
        XYSeries xYSeries0 = new XYSeries(serialDate0);
        xYSeries0.add((double) 1, (Number) 6, true);
        xYSeries0.add(1680.0022375513813, (Number) 0, false);
        xYSeries0.add((Number) 2, (Number) 2);
        xYSeries0.add(Double.NaN, (Number) 2958465);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Year year0 = new Year((-4));
        XYSeries xYSeries0 = new XYSeries(year0, true);
        Short short0 = new Short((short) (-1));
        xYSeries0.add(1.0, (Number) short0, true);
        xYSeries0.updateByIndex(0, 9999);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        Integer integer0 = new Integer((-9999));
        xYSeries0.add((double) integer0, 495.8750692);
        xYSeries0.update((-9999), (-9999));
        xYSeries0.remove((Number) integer0);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        XYSeries xYSeries0 = new XYSeries("rg.frWe.data.Ra_ge", false, true);
        Integer integer0 = JLayeredPane.DEFAULT_LAYER;
        xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
        xYSeries0.remove((Number) integer0);
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        XYSeries xYSeries0 = new XYSeries("rg.frWe.data.Ra_ge", false, true);
        Integer integer0 = JLayeredPane.DEFAULT_LAYER;
        xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
        xYSeries0.remove((Number) integer0);
        xYSeries0.getAllowDuplicateXValues();
    }

    @Test(timeout = 4000)
    public void test1012() throws Throwable {
        XYSeries xYSeries0 = new XYSeries("rg.frWe.data.Ra_ge", false, true);
        Integer integer0 = JLayeredPane.DEFAULT_LAYER;
        xYSeries0.addOrUpdate((Number) integer0, (Number) integer0);
        xYSeries0.remove((Number) integer0);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test1113() throws Throwable {
        Second second0 = new Second();
        XYSeries xYSeries0 = new XYSeries(second0, true, true);
        xYSeries0.add((double) 59, (Number) 59, false);
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test1114() throws Throwable {
        Second second0 = new Second();
        XYSeries xYSeries0 = new XYSeries(second0, true, true);
        xYSeries0.add((double) 59, (Number) 59, false);
        xYSeries0.remove((Number) 59);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test1215() throws Throwable {
        MockDate mockDate0 = new MockDate();
        Day day0 = new Day(mockDate0);
        Hour hour0 = new Hour(0, day0);
        XYSeries xYSeries0 = new XYSeries(hour0, false);
        xYSeries0.addOrUpdate((Number) 23, (Number) 0);
        XYDataItem xYDataItem0 = xYSeries0.remove(0);
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test1216() throws Throwable {
        MockDate mockDate0 = new MockDate();
        Day day0 = new Day(mockDate0);
        Hour hour0 = new Hour(0, day0);
        XYSeries xYSeries0 = new XYSeries(hour0, false);
        xYSeries0.addOrUpdate((Number) 23, (Number) 0);
        XYDataItem xYDataItem0 = xYSeries0.remove(0);
        xYSeries0.getAllowDuplicateXValues();
    }

    @Test(timeout = 4000)
    public void test1217() throws Throwable {
        MockDate mockDate0 = new MockDate();
        Day day0 = new Day(mockDate0);
        Hour hour0 = new Hour(0, day0);
        XYSeries xYSeries0 = new XYSeries(hour0, false);
        xYSeries0.addOrUpdate((Number) 23, (Number) 0);
        XYDataItem xYDataItem0 = xYSeries0.remove(0);
        xYDataItem0.getYValue();
    }

    @Test(timeout = 4000)
    public void test1218() throws Throwable {
        MockDate mockDate0 = new MockDate();
        Day day0 = new Day(mockDate0);
        Hour hour0 = new Hour(0, day0);
        XYSeries xYSeries0 = new XYSeries(hour0, false);
        xYSeries0.addOrUpdate((Number) 23, (Number) 0);
        XYDataItem xYDataItem0 = xYSeries0.remove(0);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test1319() throws Throwable {
        Hour hour0 = new Hour();
        XYSeries xYSeries0 = new XYSeries(hour0);
        xYSeries0.addOrUpdate((Number) 23, (Number) 23);
        xYSeries0.remove(0);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test1320() throws Throwable {
        Hour hour0 = new Hour();
        XYSeries xYSeries0 = new XYSeries(hour0);
        xYSeries0.addOrUpdate((Number) 23, (Number) 23);
        xYSeries0.remove(0);
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test1421() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        XYDataItem xYDataItem0 = new XYDataItem((Number) 9999, (Number) 9999);
        xYSeries0.add(xYDataItem0);
        xYSeries0.add((double) 0, 495.8750692);
        int int0 = xYSeries0.indexOf(9999);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test1422() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        XYDataItem xYDataItem0 = new XYDataItem((Number) 9999, (Number) 9999);
        xYSeries0.add(xYDataItem0);
        xYSeries0.add((double) 0, 495.8750692);
        int int0 = xYSeries0.indexOf(9999);
    }

    @Test(timeout = 4000)
    public void test1523() throws Throwable {
        Minute minute0 = new Minute();
        XYSeries xYSeries0 = new XYSeries(minute0, false);
        XYDataItem xYDataItem0 = new XYDataItem(Double.POSITIVE_INFINITY, (double) 0);
        xYSeries0.add(xYDataItem0);
        xYSeries0.getY(0);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test1524() throws Throwable {
        Minute minute0 = new Minute();
        XYSeries xYSeries0 = new XYSeries(minute0, false);
        XYDataItem xYDataItem0 = new XYDataItem(Double.POSITIVE_INFINITY, (double) 0);
        xYSeries0.add(xYDataItem0);
        xYSeries0.getY(0);
        xYSeries0.getAllowDuplicateXValues();
    }

    @Test(timeout = 4000)
    public void test1525() throws Throwable {
        Minute minute0 = new Minute();
        XYSeries xYSeries0 = new XYSeries(minute0, false);
        XYDataItem xYDataItem0 = new XYDataItem(Double.POSITIVE_INFINITY, (double) 0);
        xYSeries0.add(xYDataItem0);
        xYSeries0.getY(0);
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test1626() throws Throwable {
        Minute minute0 = new Minute();
        XYSeries xYSeries0 = new XYSeries(minute0, false);
        xYSeries0.addOrUpdate((double) Integer.MAX_VALUE, (-1011.0262385));
        Number number0 = xYSeries0.getY(0);
    }

    @Test(timeout = 4000)
    public void test1627() throws Throwable {
        Minute minute0 = new Minute();
        XYSeries xYSeries0 = new XYSeries(minute0, false);
        xYSeries0.addOrUpdate((double) Integer.MAX_VALUE, (-1011.0262385));
        Number number0 = xYSeries0.getY(0);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test1628() throws Throwable {
        Minute minute0 = new Minute();
        XYSeries xYSeries0 = new XYSeries(minute0, false);
        xYSeries0.addOrUpdate((double) Integer.MAX_VALUE, (-1011.0262385));
        Number number0 = xYSeries0.getY(0);
        xYSeries0.getAllowDuplicateXValues();
    }

    @Test(timeout = 4000)
    public void test1629() throws Throwable {
        Minute minute0 = new Minute();
        XYSeries xYSeries0 = new XYSeries(minute0, false);
        xYSeries0.addOrUpdate((double) Integer.MAX_VALUE, (-1011.0262385));
        Number number0 = xYSeries0.getY(0);
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test1730() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        xYSeries0.add((double) 0, 495.8750692);
        Number number0 = xYSeries0.getX(0);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test1731() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        xYSeries0.add((double) 0, 495.8750692);
        Number number0 = xYSeries0.getX(0);
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test1732() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        xYSeries0.add((double) 0, 495.8750692);
        Number number0 = xYSeries0.getX(0);
    }

    @Test(timeout = 4000)
    public void test1833() throws Throwable {
        Hour hour0 = new Hour();
        XYSeries xYSeries0 = new XYSeries(hour0);
        xYSeries0.addOrUpdate((Number) 23, (Number) 23);
        xYSeries0.getX(0);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test1834() throws Throwable {
        Hour hour0 = new Hour();
        XYSeries xYSeries0 = new XYSeries(hour0);
        xYSeries0.addOrUpdate((Number) 23, (Number) 23);
        xYSeries0.getX(0);
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test1935() throws Throwable {
        SerialDate serialDate0 = SerialDate.createInstance(3019);
        XYSeries xYSeries0 = new XYSeries(serialDate0);
        xYSeries0.add((-1597.7069284375646), (Number) 0);
        Number number0 = xYSeries0.getX(0);
    }

    @Test(timeout = 4000)
    public void test1936() throws Throwable {
        SerialDate serialDate0 = SerialDate.createInstance(3019);
        XYSeries xYSeries0 = new XYSeries(serialDate0);
        xYSeries0.add((-1597.7069284375646), (Number) 0);
        Number number0 = xYSeries0.getX(0);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test1937() throws Throwable {
        SerialDate serialDate0 = SerialDate.createInstance(3019);
        XYSeries xYSeries0 = new XYSeries(serialDate0);
        xYSeries0.add((-1597.7069284375646), (Number) 0);
        Number number0 = xYSeries0.getX(0);
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test2038() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        xYSeries0.setMaximumItemCount(0);
        int int0 = xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test2139() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, false);
        Float float0 = new Float((float) 1L);
        xYSeries0.add((double) 1L, (Number) float0);
        xYSeries0.getItemCount();
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test2140() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, false);
        Float float0 = new Float((float) 1L);
        xYSeries0.add((double) 1L, (Number) float0);
        xYSeries0.getItemCount();
        xYSeries0.getAllowDuplicateXValues();
    }

    @Test(timeout = 4000)
    public void test2141() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, false);
        Float float0 = new Float((float) 1L);
        xYSeries0.add((double) 1L, (Number) float0);
        xYSeries0.getItemCount();
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test2242() throws Throwable {
        Minute minute0 = new Minute();
        XYSeries xYSeries0 = new XYSeries(minute0, false, true);
        xYSeries0.add((Number) 0, (Number) 0);
        xYSeries0.getDataItem(0);
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test2243() throws Throwable {
        Minute minute0 = new Minute();
        XYSeries xYSeries0 = new XYSeries(minute0, false, true);
        xYSeries0.add((Number) 0, (Number) 0);
        xYSeries0.getDataItem(0);
        xYSeries0.getAllowDuplicateXValues();
    }

    @Test(timeout = 4000)
    public void test2244() throws Throwable {
        Minute minute0 = new Minute();
        XYSeries xYSeries0 = new XYSeries(minute0, false, true);
        xYSeries0.add((Number) 0, (Number) 0);
        xYSeries0.getDataItem(0);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test2345() throws Throwable {
        Hour hour0 = new Hour();
        XYSeries xYSeries0 = new XYSeries(hour0);
        xYSeries0.addOrUpdate(1537.2601524381548, (double) 23);
        xYSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test2346() throws Throwable {
        Hour hour0 = new Hour();
        XYSeries xYSeries0 = new XYSeries(hour0);
        xYSeries0.addOrUpdate(1537.2601524381548, (double) 23);
        XYDataItem xYDataItem0 = xYSeries0.getDataItem(0);
        xYDataItem0.getXValue();
    }

    @Test(timeout = 4000)
    public void test2447() throws Throwable {
        Quarter quarter0 = new Quarter();
        XYSeries xYSeries0 = new XYSeries(quarter0, false);
        boolean boolean0 = xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test2448() throws Throwable {
        Quarter quarter0 = new Quarter();
        XYSeries xYSeries0 = new XYSeries(quarter0, false);
        boolean boolean0 = xYSeries0.getAutoSort();
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test2449() throws Throwable {
        Quarter quarter0 = new Quarter();
        XYSeries xYSeries0 = new XYSeries(quarter0, false);
        boolean boolean0 = xYSeries0.getAutoSort();
        xYSeries0.getAllowDuplicateXValues();
    }

    @Test(timeout = 4000)
    public void test2550() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(0L);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, true, true);
        xYSeries0.getAllowDuplicateXValues();
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test2551() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(0L);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, true, true);
        xYSeries0.getAllowDuplicateXValues();
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test2652() throws Throwable {
        Hour hour0 = new Hour();
        XYSeries xYSeries0 = new XYSeries(hour0);
        xYSeries0.setNotify(false);
        XYSeries xYSeries1 = xYSeries0.createCopy(0, 0);
    }

    @Test(timeout = 4000)
    public void test2653() throws Throwable {
        Hour hour0 = new Hour();
        XYSeries xYSeries0 = new XYSeries(hour0);
        xYSeries0.setNotify(false);
        XYSeries xYSeries1 = xYSeries0.createCopy(0, 0);
        xYSeries1.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test2654() throws Throwable {
        Hour hour0 = new Hour();
        XYSeries xYSeries0 = new XYSeries(hour0);
        xYSeries0.setNotify(false);
        XYSeries xYSeries1 = xYSeries0.createCopy(0, 0);
        xYSeries1.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test2755() throws Throwable {
        MockDate mockDate0 = new MockDate();
        Day day0 = new Day(mockDate0);
        Hour hour0 = new Hour(0, day0);
        XYSeries xYSeries0 = new XYSeries(hour0, false);
        xYSeries0.setMaximumItemCount(0);
        xYSeries0.createCopy(2, 0);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test2856() throws Throwable {
        Year year0 = new Year();
        XYSeries xYSeries0 = new XYSeries(year0, false, false);
        Float float0 = new Float((double) (-9999));
        xYSeries0.addOrUpdate((Number) 9999, (Number) float0);
        xYSeries0.addOrUpdate((Number) 9999, (Number) 9999);
        xYSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test2957() throws Throwable {
        Year year0 = new Year();
        XYSeries xYSeries0 = new XYSeries(year0);
        xYSeries0.data = null;
        xYSeries0.updateByIndex(1969, 9999);
    }

    @Test(timeout = 4000)
    public void test3058() throws Throwable {
        Integer integer0 = Integer.valueOf((-1314));
        XYSeries xYSeries0 = new XYSeries(integer0);
        xYSeries0.updateByIndex((-1314), integer0);
    }

    @Test(timeout = 4000)
    public void test3159() throws Throwable {
        Year year0 = new Year();
        XYSeries xYSeries0 = new XYSeries(year0);
        xYSeries0.data = null;
        xYSeries0.update(9999, (-9999));
    }

    @Test(timeout = 4000)
    public void test3260() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        BigInteger bigInteger0 = BigInteger.ONE;
        xYSeries0.update((Number) null, bigInteger0);
    }

    @Test(timeout = 4000)
    public void test3361() throws Throwable {
        Integer integer0 = JLayeredPane.DRAG_LAYER;
        XYSeries xYSeries0 = new XYSeries(integer0);
        xYSeries0.setMaximumItemCount((-1858));
    }

    @Test(timeout = 4000)
    public void test3462() throws Throwable {
        Second second0 = new Second();
        XYSeries xYSeries0 = new XYSeries(second0, true, true);
        LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
        xYSeries0.data = (List) linkedList0;
        xYSeries0.remove((Number) 0);
    }

    @Test(timeout = 4000)
    public void test3563() throws Throwable {
        XYDataItem xYDataItem0 = new XYDataItem((double) 1605, 0.0);
        XYSeries xYSeries0 = new XYSeries(xYDataItem0, true, true);
        xYSeries0.remove((Number) null);
    }

    @Test(timeout = 4000)
    public void test3664() throws Throwable {
        Year year0 = new Year();
        XYSeries xYSeries0 = new XYSeries(year0, true, false);
        xYSeries0.data = null;
        xYSeries0.remove((-9999));
    }

    @Test(timeout = 4000)
    public void test3765() throws Throwable {
        Quarter quarter0 = new Quarter();
        XYSeries xYSeries0 = new XYSeries(quarter0, true);
        java.util.Vector<String> vector0 = new java.util.Vector<String>();
        xYSeries0.data = (List) vector0;
        xYSeries0.addOrUpdate((Number) 1, (Number) 1);
        vector0.add("Lt](Tf@6cg0.UC2!");
        xYSeries0.remove(1);
    }

    @Test(timeout = 4000)
    public void test3866() throws Throwable {
        Hour hour0 = new Hour();
        XYSeries xYSeries0 = new XYSeries(hour0);
        xYSeries0.remove((-607));
    }

    @Test(timeout = 4000)
    public void test3967() throws Throwable {
        Minute minute0 = new Minute();
        XYSeries xYSeries0 = new XYSeries(minute0, false, false);
        xYSeries0.data = null;
        xYSeries0.getY(8);
    }

    @Test(timeout = 4000)
    public void test4068() throws Throwable {
        Minute minute0 = new Minute();
        XYSeries xYSeries0 = new XYSeries(minute0, false);
        ArrayList<Object> arrayList0 = new ArrayList<Object>();
        xYSeries0.data = (List) arrayList0;
        arrayList0.add((Object) minute0);
        xYSeries0.getY(0);
    }

    @Test(timeout = 4000)
    public void test4169() throws Throwable {
        MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
        Date date0 = mockSimpleDateFormat0.get2DigitYearStart();
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(date0);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, false);
        xYSeries0.getY((-1));
    }

    @Test(timeout = 4000)
    public void test4270() throws Throwable {
        XYSeries xYSeries0 = new XYSeries("No observation for x = ", false, false);
        xYSeries0.getX((-915));
    }

    @Test(timeout = 4000)
    public void test4371() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, false, false);
        xYSeries0.data = null;
        xYSeries0.getItems();
    }

    @Test(timeout = 4000)
    public void test4472() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, true, false);
        xYSeries0.getDataItem(6);
    }

    @Test(timeout = 4000)
    public void test4573() throws Throwable {
        MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-413), (-1869), (-413));
        XYSeries xYSeries0 = new XYSeries(mockGregorianCalendar0, true);
        xYSeries0.delete((-413), 748);
    }

    @Test(timeout = 4000)
    public void test4674() throws Throwable {
        Hour hour0 = new Hour();
        XYSeries xYSeries0 = new XYSeries(hour0);
        xYSeries0.addOrUpdate((Number) 23, (Number) 23);
        xYSeries0.createCopy(0, 120);
    }

    @Test(timeout = 4000)
    public void test4775() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(0L);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, true, true);
        xYSeries0.add(0.0, 0.0);
        xYSeries0.createCopy((-602), 4173);
    }

    @Test(timeout = 4000)
    public void test4876() throws Throwable {
        Quarter quarter0 = new Quarter();
        XYSeries xYSeries0 = new XYSeries(quarter0, true);
        java.util.Vector<String> vector0 = new java.util.Vector<String>();
        xYSeries0.data = (List) vector0;
        vector0.add("");
        xYSeries0.addOrUpdate((Number) 1, (Number) 1);
    }

    @Test(timeout = 4000)
    public void test4977() throws Throwable {
        Year year0 = new Year((-3235));
        XYSeries xYSeries0 = new XYSeries(year0, true);
        XYSeries xYSeries1 = xYSeries0.createCopy((-3235), 9999);
        List list0 = xYSeries1.getItems();
        xYSeries1.data = list0;
        xYSeries1.addOrUpdate(3863.0, 3863.0);
    }

    @Test(timeout = 4000)
    public void test5078() throws Throwable {
        SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin((-1297.567131072433), 0.0);
        XYSeries xYSeries0 = new XYSeries(simpleHistogramBin0, false);
        xYSeries0.add((Number) null, (Number) null, false);
    }

    @Test(timeout = 4000)
    public void test5179() throws Throwable {
        XYSeries xYSeries0 = new XYSeries("", false, false);
        Integer integer0 = JLayeredPane.MODAL_LAYER;
        XYDataItem xYDataItem0 = new XYDataItem((Number) integer0, (Number) integer0);
        xYSeries0.add(xYDataItem0, false);
        xYSeries0.add((Number) integer0, (Number) integer0);
    }

    @Test(timeout = 4000)
    public void test5280() throws Throwable {
        XYSeries xYSeries0 = new XYSeries("No observation for x = ", false, false);
        xYSeries0.add((Number) null, (Number) null);
    }

    @Test(timeout = 4000)
    public void test5381() throws Throwable {
        XYSeries xYSeries0 = null;
        xYSeries0 = new XYSeries((Comparable) null, false, false);
    }

    @Test(timeout = 4000)
    public void test5482() throws Throwable {
        XYSeries xYSeries0 = null;
        xYSeries0 = new XYSeries((Comparable) null, false);
    }

    @Test(timeout = 4000)
    public void test5583() throws Throwable {
        XYSeries xYSeries0 = null;
        xYSeries0 = new XYSeries((Comparable) null);
    }

    @Test(timeout = 4000)
    public void test5684() throws Throwable {
        Year year0 = new Year(0);
        XYSeries xYSeries0 = new XYSeries(year0, false, false);
        xYSeries0.addOrUpdate((Number) 9999, (Number) 9999);
        int int0 = xYSeries0.indexOf(9999);
        xYSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test5685() throws Throwable {
        Year year0 = new Year(0);
        XYSeries xYSeries0 = new XYSeries(year0, false, false);
        xYSeries0.addOrUpdate((Number) 9999, (Number) 9999);
        int int0 = xYSeries0.indexOf(9999);
    }

    @Test(timeout = 4000)
    public void test5786() throws Throwable {
        MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
        Date date0 = mockSimpleDateFormat0.get2DigitYearStart();
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(date0);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, false);
        XYDataItem xYDataItem0 = new XYDataItem(0.0, 1.0);
        xYSeries0.add(xYDataItem0, false);
        Double double0 = new Double(1.0);
        int int0 = xYSeries0.indexOf(double0);
    }

    @Test(timeout = 4000)
    public void test5787() throws Throwable {
        MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
        Date date0 = mockSimpleDateFormat0.get2DigitYearStart();
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(date0);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, false);
        XYDataItem xYDataItem0 = new XYDataItem(0.0, 1.0);
        xYSeries0.add(xYDataItem0, false);
        Double double0 = new Double(1.0);
        int int0 = xYSeries0.indexOf(double0);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test5788() throws Throwable {
        MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
        Date date0 = mockSimpleDateFormat0.get2DigitYearStart();
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(date0);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, false);
        XYDataItem xYDataItem0 = new XYDataItem(0.0, 1.0);
        xYSeries0.add(xYDataItem0, false);
        Double double0 = new Double(1.0);
        int int0 = xYSeries0.indexOf(double0);
        xYSeries0.getAllowDuplicateXValues();
    }

    @Test(timeout = 4000)
    public void test5889() throws Throwable {
        MockDate mockDate0 = new MockDate();
        OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-3988.109824807), (-2171.037731516), (-3988.109824807), 0.0, 0.0);
        XYSeries xYSeries0 = new XYSeries(oHLCDataItem0);
        xYSeries0.indexOf((Number) null);
    }

    @Test(timeout = 4000)
    public void test5990() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        xYSeries0.setMaximumItemCount(0);
        xYSeries0.addOrUpdate((Number) 9999, (Number) year0.MINIMUM_YEAR);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test6091() throws Throwable {
        Year year0 = new Year(1431);
        XYSeries xYSeries0 = new XYSeries(year0);
        xYSeries0.add((double) 9999, (Number) 9999, true);
        XYDataItem xYDataItem0 = new XYDataItem((Number) (-9999), (Number) 1);
        xYSeries0.add(xYDataItem0);
        xYSeries0.add(xYDataItem0, true);
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test6092() throws Throwable {
        Year year0 = new Year(1431);
        XYSeries xYSeries0 = new XYSeries(year0);
        xYSeries0.add((double) 9999, (Number) 9999, true);
        XYDataItem xYDataItem0 = new XYDataItem((Number) (-9999), (Number) 1);
        xYSeries0.add(xYDataItem0);
        xYSeries0.add(xYDataItem0, true);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test6193() throws Throwable {
        Year year0 = new Year();
        XYSeries xYSeries0 = new XYSeries(year0, true, false);
        xYSeries0.add((XYDataItem) null, false);
    }

    @Test(timeout = 4000)
    public void test6294() throws Throwable {
        Hour hour0 = new Hour();
        XYSeries xYSeries0 = new XYSeries(hour0);
        xYSeries0.getX(0);
    }

    @Test(timeout = 4000)
    public void test6395() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, true);
        xYSeries0.getDataItem((-688));
    }

    @Test(timeout = 4000)
    public void test6496() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        xYSeries0.remove(1);
    }

    @Test(timeout = 4000)
    public void test6597() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, false);
        xYSeries0.getItemCount();
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test6598() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, false);
        xYSeries0.getItemCount();
        xYSeries0.getAllowDuplicateXValues();
    }

    @Test(timeout = 4000)
    public void test6599() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, false);
        xYSeries0.getItemCount();
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test66100() throws Throwable {
        XYSeries xYSeries0 = new XYSeries("", false, false);
        xYSeries0.hashCode();
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test66101() throws Throwable {
        XYSeries xYSeries0 = new XYSeries("", false, false);
        xYSeries0.hashCode();
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test67102() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        xYSeries0.add((double) 9999, 495.8750692);
        xYSeries0.add((double) 0, (Number) (-9999), false);
        xYSeries0.hashCode();
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test67103() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        xYSeries0.add((double) 9999, 495.8750692);
        xYSeries0.add((double) 0, (Number) (-9999), false);
        xYSeries0.hashCode();
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test68104() throws Throwable {
        XYSeries xYSeries0 = new XYSeries("", false, false);
        XYSeries xYSeries1 = xYSeries0.createCopy(1556, 1556);
        xYSeries1.equals((Object) xYSeries0);
    }

    @Test(timeout = 4000)
    public void test68105() throws Throwable {
        XYSeries xYSeries0 = new XYSeries("", false, false);
        XYSeries xYSeries1 = xYSeries0.createCopy(1556, 1556);
        Integer integer0 = JLayeredPane.MODAL_LAYER;
        XYDataItem xYDataItem0 = new XYDataItem((Number) integer0, (Number) integer0);
        xYSeries1.add(xYDataItem0, false);
        boolean boolean0 = xYSeries0.equals(xYSeries1);
        xYSeries1.equals((Object) xYSeries0);
    }

    @Test(timeout = 4000)
    public void test68106() throws Throwable {
        XYSeries xYSeries0 = new XYSeries("", false, false);
        XYSeries xYSeries1 = xYSeries0.createCopy(1556, 1556);
        Integer integer0 = JLayeredPane.MODAL_LAYER;
        XYDataItem xYDataItem0 = new XYDataItem((Number) integer0, (Number) integer0);
        xYSeries1.add(xYDataItem0, false);
        boolean boolean0 = xYSeries0.equals(xYSeries1);
    }

    @Test(timeout = 4000)
    public void test69107() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, false);
        XYSeries xYSeries1 = new XYSeries(fixedMillisecond0, false, false);
        boolean boolean0 = xYSeries0.equals(xYSeries1);
        xYSeries1.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test69108() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, false);
        XYSeries xYSeries1 = new XYSeries(fixedMillisecond0, false, false);
        boolean boolean0 = xYSeries0.equals(xYSeries1);
    }

    @Test(timeout = 4000)
    public void test69109() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, false);
        XYSeries xYSeries1 = new XYSeries(fixedMillisecond0, false, false);
        boolean boolean0 = xYSeries0.equals(xYSeries1);
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test70110() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, false);
        XYSeries xYSeries1 = new XYSeries(fixedMillisecond0, true);
        boolean boolean0 = xYSeries0.equals(xYSeries1);
        xYSeries1.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test70111() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, false);
        XYSeries xYSeries1 = new XYSeries(fixedMillisecond0, true);
        boolean boolean0 = xYSeries0.equals(xYSeries1);
        xYSeries1.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test70112() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, false);
        XYSeries xYSeries1 = new XYSeries(fixedMillisecond0, true);
        boolean boolean0 = xYSeries0.equals(xYSeries1);
    }

    @Test(timeout = 4000)
    public void test70113() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, false);
        XYSeries xYSeries1 = new XYSeries(fixedMillisecond0, true);
        boolean boolean0 = xYSeries0.equals(xYSeries1);
        xYSeries0.getAllowDuplicateXValues();
    }

    @Test(timeout = 4000)
    public void test71114() throws Throwable {
        MockDate mockDate0 = new MockDate();
        Day day0 = new Day(mockDate0);
        Hour hour0 = new Hour((-18), day0);
        XYSeries xYSeries0 = new XYSeries(hour0, false);
        XYSeries xYSeries1 = xYSeries0.createCopy(23, 0);
        xYSeries1.setMaximumItemCount(0);
        boolean boolean0 = xYSeries1.equals(xYSeries0);
        xYSeries1.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test71115() throws Throwable {
        MockDate mockDate0 = new MockDate();
        Day day0 = new Day(mockDate0);
        Hour hour0 = new Hour((-18), day0);
        XYSeries xYSeries0 = new XYSeries(hour0, false);
        XYSeries xYSeries1 = xYSeries0.createCopy(23, 0);
        xYSeries1.setMaximumItemCount(0);
        boolean boolean0 = xYSeries1.equals(xYSeries0);
    }

    @Test(timeout = 4000)
    public void test72116() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
        RegularTimePeriod regularTimePeriod0 = fixedMillisecond0.previous();
        XYSeries xYSeries0 = new XYSeries(regularTimePeriod0, false);
        xYSeries0.setKey(fixedMillisecond0);
        XYSeries xYSeries1 = new XYSeries(regularTimePeriod0, false, false);
        boolean boolean0 = xYSeries0.equals(xYSeries1);
        xYSeries0.getAllowDuplicateXValues();
    }

    @Test(timeout = 4000)
    public void test72117() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
        RegularTimePeriod regularTimePeriod0 = fixedMillisecond0.previous();
        XYSeries xYSeries0 = new XYSeries(regularTimePeriod0, false);
        xYSeries0.setKey(fixedMillisecond0);
        XYSeries xYSeries1 = new XYSeries(regularTimePeriod0, false, false);
        boolean boolean0 = xYSeries0.equals(xYSeries1);
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test72118() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
        RegularTimePeriod regularTimePeriod0 = fixedMillisecond0.previous();
        XYSeries xYSeries0 = new XYSeries(regularTimePeriod0, false);
        xYSeries0.setKey(fixedMillisecond0);
        XYSeries xYSeries1 = new XYSeries(regularTimePeriod0, false, false);
        boolean boolean0 = xYSeries0.equals(xYSeries1);
    }

    @Test(timeout = 4000)
    public void test72119() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
        RegularTimePeriod regularTimePeriod0 = fixedMillisecond0.previous();
        XYSeries xYSeries0 = new XYSeries(regularTimePeriod0, false);
        xYSeries0.setKey(fixedMillisecond0);
        XYSeries xYSeries1 = new XYSeries(regularTimePeriod0, false, false);
        boolean boolean0 = xYSeries0.equals(xYSeries1);
        xYSeries1.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test73120() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        boolean boolean0 = xYSeries0.equals(xYSeries0);
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test73121() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        boolean boolean0 = xYSeries0.equals(xYSeries0);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test73122() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        boolean boolean0 = xYSeries0.equals(xYSeries0);
    }

    @Test(timeout = 4000)
    public void test74123() throws Throwable {
        MockDate mockDate0 = new MockDate();
        Day day0 = new Day(mockDate0);
        Hour hour0 = new Hour((-18), day0);
        XYSeries xYSeries0 = new XYSeries(hour0, false);
        boolean boolean0 = xYSeries0.equals(hour0);
        xYSeries0.getAllowDuplicateXValues();
    }

    @Test(timeout = 4000)
    public void test74124() throws Throwable {
        MockDate mockDate0 = new MockDate();
        Day day0 = new Day(mockDate0);
        Hour hour0 = new Hour((-18), day0);
        XYSeries xYSeries0 = new XYSeries(hour0, false);
        boolean boolean0 = xYSeries0.equals(hour0);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test74125() throws Throwable {
        MockDate mockDate0 = new MockDate();
        Day day0 = new Day(mockDate0);
        Hour hour0 = new Hour((-18), day0);
        XYSeries xYSeries0 = new XYSeries(hour0, false);
        boolean boolean0 = xYSeries0.equals(hour0);
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test74126() throws Throwable {
        MockDate mockDate0 = new MockDate();
        Day day0 = new Day(mockDate0);
        Hour hour0 = new Hour((-18), day0);
        XYSeries xYSeries0 = new XYSeries(hour0, false);
        boolean boolean0 = xYSeries0.equals(hour0);
    }

    @Test(timeout = 4000)
    public void test75127() throws Throwable {
        Hour hour0 = new Hour();
        XYSeries xYSeries0 = new XYSeries(hour0);
        xYSeries0.addOrUpdate((Number) 23, (Number) 23);
        xYSeries0.createCopy(0, 0);
        xYSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test76128() throws Throwable {
        MockDate mockDate0 = new MockDate();
        Day day0 = new Day(mockDate0);
        Hour hour0 = new Hour((-18), day0);
        XYSeries xYSeries0 = new XYSeries(hour0, false);
        XYSeries xYSeries1 = xYSeries0.createCopy(23, 0);
        boolean boolean0 = xYSeries1.equals(xYSeries0);
    }

    @Test(timeout = 4000)
    public void test76129() throws Throwable {
        MockDate mockDate0 = new MockDate();
        Day day0 = new Day(mockDate0);
        Hour hour0 = new Hour((-18), day0);
        XYSeries xYSeries0 = new XYSeries(hour0, false);
        XYSeries xYSeries1 = xYSeries0.createCopy(23, 0);
        boolean boolean0 = xYSeries1.equals(xYSeries0);
    }

    @Test(timeout = 4000)
    public void test76130() throws Throwable {
        MockDate mockDate0 = new MockDate();
        Day day0 = new Day(mockDate0);
        Hour hour0 = new Hour((-18), day0);
        XYSeries xYSeries0 = new XYSeries(hour0, false);
        XYSeries xYSeries1 = xYSeries0.createCopy(23, 0);
        boolean boolean0 = xYSeries1.equals(xYSeries0);
        xYSeries1.getAllowDuplicateXValues();
    }

    @Test(timeout = 4000)
    public void test76131() throws Throwable {
        MockDate mockDate0 = new MockDate();
        Day day0 = new Day(mockDate0);
        Hour hour0 = new Hour((-18), day0);
        XYSeries xYSeries0 = new XYSeries(hour0, false);
        XYSeries xYSeries1 = xYSeries0.createCopy(23, 0);
        boolean boolean0 = xYSeries1.equals(xYSeries0);
        xYSeries1.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test76132() throws Throwable {
        MockDate mockDate0 = new MockDate();
        Day day0 = new Day(mockDate0);
        Hour hour0 = new Hour((-18), day0);
        XYSeries xYSeries0 = new XYSeries(hour0, false);
        XYSeries xYSeries1 = xYSeries0.createCopy(23, 0);
        boolean boolean0 = xYSeries1.equals(xYSeries0);
        xYSeries1.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test77133() throws Throwable {
        Minute minute0 = new Minute();
        XYSeries xYSeries0 = new XYSeries(minute0, false);
        xYSeries0.addOrUpdate((Number) 0, (Number) null);
        xYSeries0.toArray();
        xYSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test78134() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        xYSeries0.add((double) year0.MINIMUM_YEAR, 495.8750692);
        xYSeries0.addOrUpdate((Number) (-9999), (Number) 9999);
    }

    @Test(timeout = 4000)
    public void test79135() throws Throwable {
        XYDataItem xYDataItem0 = new XYDataItem((double) 1611, (double) 1611);
        XYSeries xYSeries0 = new XYSeries(xYDataItem0, true, true);
        xYSeries0.addOrUpdate((Number) null, (Number) null);
    }

    @Test(timeout = 4000)
    public void test80136() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        xYSeries0.update((-9999), (-9999));
    }

    @Test(timeout = 4000)
    public void test81137() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1L);
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, false);
        Float float0 = new Float((float) 1L);
        xYSeries0.add((double) 1L, (Number) float0);
        xYSeries0.clear();
        xYSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test82138() throws Throwable {
        Minute minute0 = new Minute();
        XYSeries xYSeries0 = new XYSeries(minute0, false);
        xYSeries0.clear();
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test82139() throws Throwable {
        Minute minute0 = new Minute();
        XYSeries xYSeries0 = new XYSeries(minute0, false);
        xYSeries0.clear();
        xYSeries0.getAllowDuplicateXValues();
    }

    @Test(timeout = 4000)
    public void test82140() throws Throwable {
        Minute minute0 = new Minute();
        XYSeries xYSeries0 = new XYSeries(minute0, false);
        xYSeries0.clear();
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test83141() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        XYDataItem xYDataItem0 = new XYDataItem((Number) 9999, (Number) 9999);
        xYSeries0.setMaximumItemCount(0);
        xYSeries0.add(xYDataItem0, false);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test84142() throws Throwable {
        XYSeries xYSeries0 = new XYSeries("", false, false);
        Integer integer0 = JLayeredPane.MODAL_LAYER;
        XYDataItem xYDataItem0 = new XYDataItem((Number) integer0, (Number) integer0);
        xYSeries0.add(xYDataItem0, false);
        xYSeries0.add(xYDataItem0, false);
    }

    @Test(timeout = 4000)
    public void test85143() throws Throwable {
        Year year0 = new Year();
        XYSeries xYSeries0 = new XYSeries(year0, true, false);
        Float float0 = new Float((double) 9999);
        xYSeries0.addOrUpdate((Number) 9999, (Number) float0);
        XYDataItem xYDataItem0 = xYSeries0.addOrUpdate((Number) 9999, (Number) 9999);
        xYSeries0.add(xYDataItem0, false);
    }

    @Test(timeout = 4000)
    public void test86144() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        xYSeries0.add((double) 0, 495.8750692);
        xYSeries0.add((double) 0, (Number) (-9999), false);
        xYSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test86145() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        xYSeries0.add((double) 0, 495.8750692);
        xYSeries0.add((double) 0, (Number) (-9999), false);
        XYDataItem xYDataItem0 = xYSeries0.remove(1);
        xYDataItem0.getYValue();
    }

    @Test(timeout = 4000)
    public void test87146() throws Throwable {
        MockDate mockDate0 = new MockDate();
        Day day0 = new Day(mockDate0);
        Hour hour0 = new Hour((-18), day0);
        XYSeries xYSeries0 = new XYSeries(hour0, false);
        xYSeries0.add((XYDataItem) null);
    }

    @Test(timeout = 4000)
    public void test88147() throws Throwable {
        Quarter quarter0 = new Quarter();
        XYSeries xYSeries0 = new XYSeries(quarter0, true);
        boolean boolean0 = xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test88148() throws Throwable {
        Quarter quarter0 = new Quarter();
        XYSeries xYSeries0 = new XYSeries(quarter0, true);
        boolean boolean0 = xYSeries0.getAutoSort();
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test88149() throws Throwable {
        Quarter quarter0 = new Quarter();
        XYSeries xYSeries0 = new XYSeries(quarter0, true);
        boolean boolean0 = xYSeries0.getAutoSort();
        xYSeries0.getAllowDuplicateXValues();
    }

    @Test(timeout = 4000)
    public void test89150() throws Throwable {
        Year year0 = new Year();
        XYSeries xYSeries0 = new XYSeries(year0, true, false);
        boolean boolean0 = xYSeries0.getAllowDuplicateXValues();
    }

    @Test(timeout = 4000)
    public void test89151() throws Throwable {
        Year year0 = new Year();
        XYSeries xYSeries0 = new XYSeries(year0, true, false);
        boolean boolean0 = xYSeries0.getAllowDuplicateXValues();
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test89152() throws Throwable {
        Year year0 = new Year();
        XYSeries xYSeries0 = new XYSeries(year0, true, false);
        boolean boolean0 = xYSeries0.getAllowDuplicateXValues();
        xYSeries0.getAutoSort();
    }

    @Test(timeout = 4000)
    public void test90153() throws Throwable {
        Second second0 = new Second();
        XYSeries xYSeries0 = new XYSeries(second0, true, true);
        xYSeries0.remove((Number) 59);
    }

    @Test(timeout = 4000)
    public void test91154() throws Throwable {
        Year year0 = new Year(1433);
        XYSeries xYSeries0 = new XYSeries(year0);
        XYDataItem xYDataItem0 = new XYDataItem((Number) 9999, (Number) 9999);
        xYSeries0.add(xYDataItem0);
        xYSeries0.setMaximumItemCount(0);
        xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test92155() throws Throwable {
        Year year0 = new Year(1431);
        XYSeries xYSeries0 = new XYSeries(year0);
        xYSeries0.updateByIndex(1431, (-9999));
    }

    @Test(timeout = 4000)
    public void test93156() throws Throwable {
        Second second0 = new Second();
        XYSeries xYSeries0 = new XYSeries(second0, true, true);
        xYSeries0.getY(0);
    }

    @Test(timeout = 4000)
    public void test94157() throws Throwable {
        Second second0 = new Second();
        XYSeries xYSeries0 = new XYSeries(second0, true, true);
        xYSeries0.add((double) 59, (Number) 59, false);
        xYSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test94158() throws Throwable {
        Second second0 = new Second();
        XYSeries xYSeries0 = new XYSeries(second0, true, true);
        xYSeries0.add((double) 59, (Number) 59, false);
        Number number0 = xYSeries0.getY(0);
    }

    @Test(timeout = 4000)
    public void test95159() throws Throwable {
        Minute minute0 = new Minute();
        XYSeries xYSeries0 = new XYSeries(minute0, false);
        xYSeries0.add((double) 0, (double) 59, false);
        xYSeries0.toArray();
        xYSeries0.getItemCount();
    }

    @Test(timeout = 4000)
    public void test96160() throws Throwable {
        FixedMillisecond fixedMillisecond0 = new FixedMillisecond((-13L));
        XYSeries xYSeries0 = new XYSeries(fixedMillisecond0, true);
        Float float0 = new Float((float) (-13L));
        xYSeries0.add((double) (-13L), (Number) float0);
        xYSeries0.addOrUpdate((double) (-13L), 1876.0);
    }

    @Test(timeout = 4000)
    public void test97161() throws Throwable {
        XYSeries xYSeries0 = new XYSeries("No observation for x = ", false, false);
        int int0 = xYSeries0.getMaximumItemCount();
    }

    @Test(timeout = 4000)
    public void test97162() throws Throwable {
        XYSeries xYSeries0 = new XYSeries("No observation for x = ", false, false);
        int int0 = xYSeries0.getMaximumItemCount();
        xYSeries0.getAllowDuplicateXValues();
    }

    @Test(timeout = 4000)
    public void test97163() throws Throwable {
        XYSeries xYSeries0 = new XYSeries("No observation for x = ", false, false);
        int int0 = xYSeries0.getMaximumItemCount();
        xYSeries0.getAutoSort();
    }
}
