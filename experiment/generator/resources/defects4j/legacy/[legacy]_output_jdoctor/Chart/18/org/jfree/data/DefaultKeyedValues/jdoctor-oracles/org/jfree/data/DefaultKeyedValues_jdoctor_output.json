[
  {
    "signature": "org.jfree.data.DefaultKeyedValues()",
    "name": "org.jfree.data.DefaultKeyedValues",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getItemCount()",
    "name": "getItemCount",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The item count.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getValue(int item)",
    "name": "getValue",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Number",
      "name": "java.lang.Number",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "item"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "item"
        },
        "comment": "the item of interest (zero-based index).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The value (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "item is out of bounds.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getKey(int index)",
    "name": "getKey",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Comparable",
      "name": "java.lang.Comparable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the item index (zero-based).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The row key.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "item is out of bounds.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getIndex(java.lang.Comparable key)",
    "name": "getIndex",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The index, or -1 if the key is not recognised.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "key is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "getKeys()",
    "name": "getKeys",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "java.util.List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The keys (never null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getValue(java.lang.Comparable key)",
    "name": "getValue",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Number",
      "name": "java.lang.Number",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The value (possibly null).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.jfree.data.UnknownKeyException",
          "name": "UnknownKeyException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the key is not recognised.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "addValue(java.lang.Comparable key, double value)",
    "name": "addValue",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "addValue(java.lang.Comparable key, java.lang.Number value)",
    "name": "addValue",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Number",
          "name": "Number",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Number",
            "name": "Number",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setValue(java.lang.Comparable key, double value)",
    "name": "setValue",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setValue(java.lang.Comparable key, java.lang.Number value)",
    "name": "setValue",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Number",
          "name": "Number",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Number",
            "name": "Number",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "insertValue(int position, java.lang.Comparable key, double value)",
    "name": "insertValue",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "position"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "position"
        },
        "comment": "the position (in the range 0 to getItemCount()).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "insertValue(int position, java.lang.Comparable key, java.lang.Number value)",
    "name": "insertValue",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "position"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Number",
          "name": "Number",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "position"
        },
        "comment": "the position (in the range 0 to getItemCount()).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Number",
            "name": "Number",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "removeValue(int index)",
    "name": "removeValue",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index of the item to remove (in the range 0 to getItemCount() - 1).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "index is not within the specified range.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "removeValue(java.lang.Comparable key)",
    "name": "removeValue",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the item key (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "key is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "org.jfree.data.UnknownKeyException",
          "name": "UnknownKeyException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "key is not recognised.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "sortByKeys(org.jfree.chart.util.SortOrder order)",
    "name": "sortByKeys",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.chart.util.SortOrder",
          "name": "SortOrder",
          "isArray": false
        },
        "name": "order"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.util.SortOrder",
            "name": "SortOrder",
            "isArray": false
          },
          "name": "order"
        },
        "comment": "the sort order (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "sortByValues(org.jfree.chart.util.SortOrder order)",
    "name": "sortByValues",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jfree.chart.util.SortOrder",
          "name": "SortOrder",
          "isArray": false
        },
        "name": "order"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jfree.chart.util.SortOrder",
            "name": "SortOrder",
            "isArray": false
          },
          "name": "order"
        },
        "comment": "the sort order (null not permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "equals(java.lang.Object obj)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "the object (null permitted).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A boolean.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A hash code.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "clone()",
    "name": "clone",
    "containingClass": {
      "qualifiedName": "org.jfree.data.DefaultKeyedValues",
      "name": "DefaultKeyedValues",
      "isArray": false
    },
    "targetClass": "org.jfree.data.DefaultKeyedValues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A clone.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.CloneNotSupportedException",
          "name": "CloneNotSupportedException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "this class will not throw this exception but subclasses might.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]