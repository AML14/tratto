{
  "test1213" : {
    "methodSignature" : "public static int readFully(InputStream input, byte[] b) throws IOException",
    "methodName" : "readFully",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1213() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);\n    byte[] byteArray0 = new byte[5];\n    IOUtils.readFully((InputStream) dataInputStream0, byteArray0);\n}",
    "testName" : "test1213"
  },
  "test2224" : {
    "methodSignature" : "public static int readFully(InputStream input, byte[] b) throws IOException",
    "methodName" : "readFully",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2224() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);\n    int int0 = IOUtils.readFully((InputStream) sequenceInputStream0, byteArray0);\n}",
    "testName" : "test2224"
  },
  "test1314" : {
    "methodSignature" : "public static long copy(final InputStream input, final OutputStream output, int buffersize) throws IOException",
    "methodName" : "copy",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1314() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    IOUtils.copy((InputStream) null, (OutputStream) byteArrayOutputStream0, 0);\n}",
    "testName" : "test1314"
  },
  "test2325" : {
    "methodSignature" : "public static int readFully(InputStream input, byte[] b, int offset, int len) throws IOException",
    "methodName" : "readFully",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2325() throws Throwable {\n    byte[] byteArray0 = new byte[3];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    IOUtils.readFully((InputStream) byteArrayInputStream0, byteArray0, 543, 8024);\n}",
    "testName" : "test2325"
  },
  "test1011" : {
    "methodSignature" : "public static int readFully(InputStream input, byte[] b, int offset, int len) throws IOException",
    "methodName" : "readFully",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1011() throws Throwable {\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);\n    IOUtils.readFully((InputStream) dataInputStream0, (byte[]) null, 543, 8024);\n}",
    "testName" : "test1011"
  },
  "test2022" : {
    "methodSignature" : "public static void closeQuietly(Closeable c)",
    "methodName" : "closeQuietly",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2022() throws Throwable {\n    Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false, true).when(enumeration0).hasMoreElements();\n    doReturn((Object) null).when(enumeration0).nextElement();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    IOUtils.closeQuietly(sequenceInputStream0);\n}",
    "testName" : "test2022"
  },
  "test1112" : {
    "methodSignature" : "public static int readFully(InputStream input, byte[] b) throws IOException",
    "methodName" : "readFully",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1112() throws Throwable {\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);\n    IOUtils.readFully((InputStream) pushbackInputStream0, (byte[]) null);\n}",
    "testName" : "test1112"
  },
  "test2123" : {
    "methodSignature" : "public static void closeQuietly(Closeable c)",
    "methodName" : "closeQuietly",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2123() throws Throwable {\n    IOUtils.closeQuietly((Closeable) null);\n}",
    "testName" : "test2123"
  },
  "test2629" : {
    "methodSignature" : "public static long skip(InputStream input, long numToSkip) throws IOException",
    "methodName" : "skip",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2629() throws Throwable {\n    byte[] byteArray0 = new byte[3];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 69, 0);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);\n    long long0 = IOUtils.skip(pushbackInputStream0, 1291L);\n}",
    "testName" : "test2629"
  },
  "test012" : {
    "methodSignature" : "public static long skip(InputStream input, long numToSkip) throws IOException",
    "methodName" : "skip",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test012() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    long long0 = IOUtils.skip(byteArrayInputStream0, 0L);\n}",
    "testName" : "test012"
  },
  "test034" : {
    "methodSignature" : "public static byte[] toByteArray(final InputStream input) throws IOException",
    "methodName" : "toByteArray",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    byte[] byteArray0 = new byte[1];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    byte[] byteArray1 = IOUtils.toByteArray(byteArrayInputStream0);\n}",
    "testName" : "test034"
  },
  "test056" : {
    "methodSignature" : "public static byte[] toByteArray(final InputStream input) throws IOException",
    "methodName" : "toByteArray",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056() throws Throwable {\n    IOUtils.toByteArray((InputStream) null);\n}",
    "testName" : "test056"
  },
  "test078" : {
    "methodSignature" : "public static byte[] toByteArray(final InputStream input) throws IOException",
    "methodName" : "toByteArray",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    IOUtils.toByteArray(pipedInputStream0);\n}",
    "testName" : "test078"
  },
  "test1617" : {
    "methodSignature" : "public static long copy(final InputStream input, final OutputStream output) throws IOException",
    "methodName" : "copy",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1617() throws Throwable {\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);\n    IOUtils.copy((InputStream) pushbackInputStream0, (OutputStream) null);\n}",
    "testName" : "test1617"
  },
  "test1718" : {
    "methodSignature" : "public static int readFully(InputStream input, byte[] b, int offset, int len) throws IOException",
    "methodName" : "readFully",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1718() throws Throwable {\n    byte[] byteArray0 = new byte[3];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    int int0 = IOUtils.readFully((InputStream) byteArrayInputStream0, byteArray0, 0, (int) (byte) 0);\n}",
    "testName" : "test1718"
  },
  "test1415" : {
    "methodSignature" : "public static long copy(final InputStream input, final OutputStream output, int buffersize) throws IOException",
    "methodName" : "copy",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1415() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(528);\n    IOUtils.copy((InputStream) pipedInputStream0, (OutputStream) byteArrayOutputStream0, 528);\n}",
    "testName" : "test1415"
  },
  "test2426" : {
    "methodSignature" : "public static int readFully(InputStream input, byte[] b, int offset, int len) throws IOException",
    "methodName" : "readFully",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2426() throws Throwable {\n    byte[] byteArray0 = new byte[4];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    IOUtils.readFully((InputStream) byteArrayInputStream0, byteArray0, (int) (byte) (-44), 0);\n}",
    "testName" : "test2426"
  },
  "test1516" : {
    "methodSignature" : "public static long copy(final InputStream input, final OutputStream output) throws IOException",
    "methodName" : "copy",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1516() throws Throwable {\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"@9R#W8%Q&dA}l\\\"\");\n    IOUtils.copy((InputStream) null, (OutputStream) mockPrintStream0);\n}",
    "testName" : "test1516"
  },
  "test2527" : {
    "methodSignature" : "public static int readFully(InputStream input, byte[] b, int offset, int len) throws IOException",
    "methodName" : "readFully",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2527() throws Throwable {\n    byte[] byteArray0 = new byte[1];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 1, (-809));\n    IOUtils.readFully((InputStream) byteArrayInputStream0, byteArray0, (int) (byte) 1, (-322));\n}",
    "testName" : "test2527"
  },
  "test2730" : {
    "methodSignature" : "public static long skip(InputStream input, long numToSkip) throws IOException",
    "methodName" : "skip",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2730() throws Throwable {\n    byte[] byteArray0 = new byte[3];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    long long0 = IOUtils.skip(byteArrayInputStream0, (-1157L));\n}",
    "testName" : "test2730"
  },
  "test1820" : {
    "methodSignature" : "public static long copy(final InputStream input, final OutputStream output, int buffersize) throws IOException",
    "methodName" : "copy",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1820() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    long long0 = IOUtils.copy((InputStream) byteArrayInputStream0, (OutputStream) byteArrayOutputStream0, (int) (byte) 114);\n}",
    "testName" : "test1820"
  },
  "test2831" : {
    "methodSignature" : "public static long copy(final InputStream input, final OutputStream output) throws IOException",
    "methodName" : "copy",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2831() throws Throwable {\n    byte[] byteArray0 = new byte[3];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    MockFile mockFile0 = new MockFile(\"qayi\", \"/GC`\");\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);\n    long long0 = IOUtils.copy((InputStream) byteArrayInputStream0, (OutputStream) mockFileOutputStream0);\n}",
    "testName" : "test2831"
  },
  "test001" : {
    "methodSignature" : "public static int readFully(InputStream input, byte[] b) throws IOException",
    "methodName" : "readFully",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test001() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    byteArrayInputStream0.read();\n    int int0 = IOUtils.readFully((InputStream) byteArrayInputStream0, byteArray0);\n}",
    "testName" : "test001"
  },
  "test045" : {
    "methodSignature" : "public static long copy(final InputStream input, final OutputStream output) throws IOException",
    "methodName" : "copy",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test045() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    long long0 = IOUtils.copy((InputStream) byteArrayInputStream0, (OutputStream) null);\n}",
    "testName" : "test045"
  },
  "test067" : {
    "methodSignature" : "public static byte[] toByteArray(final InputStream input) throws IOException",
    "methodName" : "toByteArray",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), 2752);\n    IOUtils.toByteArray(byteArrayInputStream0);\n}",
    "testName" : "test067"
  },
  "test089" : {
    "methodSignature" : "public static long skip(InputStream input, long numToSkip) throws IOException",
    "methodName" : "skip",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089() throws Throwable {\n    IOUtils.skip((InputStream) null, 2792L);\n}",
    "testName" : "test089"
  },
  "test2933" : {
    "methodSignature" : "public static byte[] toByteArray(final InputStream input) throws IOException",
    "methodName" : "toByteArray",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2933() throws Throwable {\n    Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    byte[] byteArray0 = IOUtils.toByteArray(sequenceInputStream0);\n}",
    "testName" : "test2933"
  },
  "test1921" : {
    "methodSignature" : "public static long copy(final InputStream input, final OutputStream output, int buffersize) throws IOException",
    "methodName" : "copy",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1921() throws Throwable {\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"a E!VIPqv^n? *\");\n    long long0 = IOUtils.copy((InputStream) sequenceInputStream0, (OutputStream) mockFileOutputStream0, 0);\n}",
    "testName" : "test1921"
  },
  "test0910" : {
    "methodSignature" : "public static long skip(InputStream input, long numToSkip) throws IOException",
    "methodName" : "skip",
    "className" : "org.apache.commons.compress.utils.IOUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0910() throws Throwable {\n    BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);\n    DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);\n    IOUtils.skip(dataInputStream0, 1622L);\n}",
    "testName" : "test0910"
  }
}