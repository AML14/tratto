{
  "test1212" : {
    "methodSignature" : "void writePaxHeaders(TarArchiveEntry entry, String entryName, Map<String, String> headers) throws IOException",
    "methodName" : "writePaxHeaders",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"U,/rHn#&l+?3L1w\");\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"U,/rHn#&l+?3L1w\");\n    Map<String, String> map0 = ZoneId.SHORT_IDS;\n    tarArchiveOutputStream0.writePaxHeaders(tarArchiveEntry0, \"U,/rHn#&l+?3L1w\", map0);\n}",
    "testName" : "test1212"
  },
  "test2323" : {
    "methodSignature" : "void writePaxHeaders(TarArchiveEntry entry, String entryName, Map<String, String> headers) throws IOException",
    "methodName" : "writePaxHeaders",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"=d,\\\"Cu\");\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    hashMap0.put(\"\", \"\");\n    tarArchiveOutputStream0.writePaxHeaders(tarArchiveEntry0, \"=d,\\\"Cu\", hashMap0);\n}",
    "testName" : "test2323"
  },
  "test1313" : {
    "methodSignature" : "void writePaxHeaders(TarArchiveEntry entry, String entryName, Map<String, String> headers) throws IOException",
    "methodName" : "writePaxHeaders",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"=d,\\\"Cu\");\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    tarArchiveOutputStream0.writePaxHeaders(tarArchiveEntry0, \"=d,\\\"Cu\", hashMap0);\n}",
    "testName" : "test1313"
  },
  "test2424" : {
    "methodSignature" : "public TarArchiveEntry(String name)",
    "methodName" : "TarArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    String string0 = \"U,/rHn#&l+?3L1w\";\n    String string1 = \"\";\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"\");\n    MockFile mockFile0 = new MockFile(\"U,/rHn#&l+?3L1w\", \"\");\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);\n    tarArchiveOutputStream0.close();\n    tarArchiveOutputStream0.createArchiveEntry(mockFile0, \"fuvDK`!h1Y\");\n    TarArchiveEntry tarArchiveEntry0 = null;\n    tarArchiveEntry0 = new TarArchiveEntry(string1);\n}",
    "testName" : "test2424"
  },
  "test3535" : {
    "methodSignature" : "void writePaxHeaders(TarArchiveEntry entry, String entryName, Map<String, String> headers) throws IOException",
    "methodName" : "writePaxHeaders",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\\"<~C<|U r?]j\");\n    tarArchiveEntry0.setLinkName(\"\\\"<~C<|U r?]j\");\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    tarArchiveOutputStream0.writePaxHeaders(tarArchiveEntry0, \"\\\"<~C<|U r?]j\", hashMap0);\n    tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);\n    tarArchiveOutputStream0.writePaxHeaders(tarArchiveEntry0, \"\\\"<~C<|U r?]j\", hashMap0);\n}",
    "testName" : "test3535"
  },
  "test1010" : {
    "methodSignature" : "public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException",
    "methodName" : "putArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);\n    tarArchiveOutputStream0.putArchiveEntry((ArchiveEntry) null);\n}",
    "testName" : "test1010"
  },
  "test2121" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(bufferedOutputStream0);\n    tarArchiveOutputStream0.flush();\n    BufferedOutputStream bufferedOutputStream1 = new BufferedOutputStream(tarArchiveOutputStream0);\n    byte[] byteArray0 = new byte[0];\n    tarArchiveOutputStream0.close();\n    tarArchiveOutputStream0.close();\n}",
    "testName" : "test2121"
  },
  "test1111" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);\n    tarArchiveOutputStream0.close();\n}",
    "testName" : "test1111"
  },
  "test2222" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);\n    tarArchiveOutputStream0.finish();\n    tarArchiveOutputStream0.close();\n}",
    "testName" : "test2222"
  },
  "test3333" : {
    "methodSignature" : "public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException",
    "methodName" : "putArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"U,/rHn#&l+?3L1Tw\");\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"U,/rHn#&l+?3L1Tw\");\n    MockDate mockDate0 = new MockDate(31, 31, 3251, 33188, 1);\n    tarArchiveEntry0.setModTime((Date) mockDate0);\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    tarArchiveOutputStream0.writePaxHeaders(tarArchiveEntry0, \"U,/rHn#&l+?3L1Tw\", hashMap0);\n    tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);\n}",
    "testName" : "test3333"
  },
  "test011" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);\n    TarArchiveOutputStream tarArchiveOutputStream1 = new TarArchiveOutputStream(tarArchiveOutputStream0, 0, \"org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE\");\n    tarArchiveOutputStream1.close();\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public void closeArchiveEntry() throws IOException",
    "methodName" : "closeArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);\n    tarArchiveOutputStream0.closeArchiveEntry();\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    tarArchiveOutputStream0.setBigNumberMode((-1573));\n    tarArchiveOutputStream0.getCount();\n    String string0 = \"=(3\";\n    MockURI.URI(\"=(3\", \"Error parsing extra fields for entry: \", \"Error parsing extra fields for entry: \", \"=(3\", \"Error parsing extra fields for entry: \");\n    int int0 = 383;\n    TarArchiveOutputStream tarArchiveOutputStream1 = new TarArchiveOutputStream(tarArchiveOutputStream0, int0, string0);\n    tarArchiveOutputStream0.close();\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public void setBigNumberMode(int bigNumberMode)",
    "methodName" : "setBigNumberMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(bufferedOutputStream0);\n    tarArchiveOutputStream0.flush();\n    tarArchiveOutputStream0.setBigNumberMode(0);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "void writePaxHeaders(TarArchiveEntry entry, String entryName, Map<String, String> headers) throws IOException",
    "methodName" : "writePaxHeaders",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);\n    tarArchiveOutputStream0.setAddPaxHeadersForNonAsciiNames(true);\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\");\n    Map<String, String> map0 = ZoneId.SHORT_IDS;\n    tarArchiveOutputStream0.writePaxHeaders(tarArchiveEntry0, \"\", map0);\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "void writePaxHeaders(TarArchiveEntry entry, String entryName, Map<String, String> headers) throws IOException",
    "methodName" : "writePaxHeaders",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    TarArchiveOutputStream tarArchiveOutputStream1 = new TarArchiveOutputStream(tarArchiveOutputStream0);\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader\");\n    tarArchiveOutputStream1.writePaxHeaders(tarArchiveEntry0, \"ustar\\u0000\", hashMap0);\n}",
    "testName" : "test1616"
  },
  "test2727" : {
    "methodSignature" : "void writePaxHeaders(TarArchiveEntry entry, String entryName, Map<String, String> headers) throws IOException",
    "methodName" : "writePaxHeaders",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\");\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    tarArchiveOutputStream0.writePaxHeaders(tarArchiveEntry0, \"\", hashMap0);\n}",
    "testName" : "test2727"
  },
  "test2828" : {
    "methodSignature" : "public void finish() throws IOException",
    "methodName" : "finish",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);\n    tarArchiveOutputStream0.finish();\n    tarArchiveOutputStream0.finish();\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"1?dV6#bN?N\");\n    MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, true);\n    PrintStream printStream0 = mockPrintStream1.append((CharSequence) \"1?dV6#bN?N\");\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(printStream0);\n    File file0 = MockFile.createTempFile(\"1?dV6#bN?N\", \"1?dV6#bN?N\");\n    file0.setWritable(true);\n    file0.getCanonicalFile();\n    mockPrintStream1.flush();\n    file0.setReadable(true);\n    tarArchiveOutputStream0.createArchiveEntry(file0, \"R:'\");\n    tarArchiveOutputStream0.finish();\n    tarArchiveOutputStream0.getRecordSize();\n    tarArchiveOutputStream0.setBigNumberMode(33188);\n    tarArchiveOutputStream0.close();\n}",
    "testName" : "test1414"
  },
  "test2525" : {
    "methodSignature" : "public void closeArchiveEntry() throws IOException",
    "methodName" : "closeArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\" \\u0000\");\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);\n    tarArchiveOutputStream0.close();\n    tarArchiveOutputStream0.closeArchiveEntry();\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public ArchiveEntry createArchiveEntry(File inputFile, String entryName) throws IOException",
    "methodName" : "createArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\" \\u0000\");\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);\n    MockFile mockFile0 = new MockFile(\", fileSpecPosition=\", \"px&K\");\n    tarArchiveOutputStream0.createArchiveEntry(mockFile0, \" \\u0000\");\n}",
    "testName" : "test1515"
  },
  "test2626" : {
    "methodSignature" : "void writePaxHeaders(TarArchiveEntry entry, String entryName, Map<String, String> headers) throws IOException",
    "methodName" : "writePaxHeaders",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);\n    Map<String, String> map0 = ZoneId.SHORT_IDS;\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\");\n    tarArchiveOutputStream0.writePaxHeaders(tarArchiveEntry0, \"\", map0);\n}",
    "testName" : "test2626"
  },
  "test3030" : {
    "methodSignature" : "public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException",
    "methodName" : "putArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"0+f\");\n    MockFile mockFile0 = new MockFile(\"U,/rHn#<l+?3L1P\", \"0+f\");\n    File file0 = MockFile.createTempFile(\"U,/rHn#<l+?3L1P\", \"U,/rHn#<l+?3L1P\", (File) mockFile0);\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);\n    tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);\n}",
    "testName" : "test3030"
  },
  "test2020" : {
    "methodSignature" : "public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException",
    "methodName" : "putArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\" \\u0000\");\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);\n    tarArchiveOutputStream0.close();\n    CpioArchiveEntry cpioArchiveEntry0 = new CpioArchiveEntry(\" \\u0000\");\n    tarArchiveOutputStream0.putArchiveEntry(cpioArchiveEntry0);\n}",
    "testName" : "test2020"
  },
  "test3131" : {
    "methodSignature" : "public void closeArchiveEntry() throws IOException",
    "methodName" : "closeArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader\");\n    tarArchiveEntry0.setModTime((-4708L));\n    tarArchiveOutputStream0.writePaxHeaders(tarArchiveEntry0, \"ustar\\u0000\", hashMap0);\n    tarArchiveOutputStream0.closeArchiveEntry();\n}",
    "testName" : "test3131"
  },
  "test000" : {
    "methodSignature" : "public void write(byte[] wBuf, int wOffset, int numToWrite) throws IOException",
    "methodName" : "write",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);\n    tarArchiveOutputStream0.write((byte[]) null, (-3923), (-3923));\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream((OutputStream) null);\n    TarArchiveOutputStream tarArchiveOutputStream1 = new TarArchiveOutputStream(tarArchiveOutputStream0, 0);\n    tarArchiveOutputStream1.close();\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public void closeArchiveEntry() throws IOException",
    "methodName" : "closeArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);\n    tarArchiveOutputStream0.setLongFileMode(1694);\n    tarArchiveOutputStream0.closeArchiveEntry();\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public void closeArchiveEntry() throws IOException",
    "methodName" : "closeArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0, \"UNKNOWN\");\n    tarArchiveOutputStream0.closeArchiveEntry();\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);\n    tarArchiveOutputStream0.setBigNumberMode(2);\n    tarArchiveOutputStream0.close();\n}",
    "testName" : "test088"
  },
  "test1818" : {
    "methodSignature" : "void writePaxHeaders(TarArchiveEntry entry, String entryName, Map<String, String> headers) throws IOException",
    "methodName" : "writePaxHeaders",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"U,/rHn#&l+?3L1w\");\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"U,/rHn#&l+?3L1w\");\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    tarArchiveOutputStream0.writePaxHeaders(tarArchiveEntry0, \"U,/rHn#&l+?3L1w\", hashMap0);\n}",
    "testName" : "test1818"
  },
  "test2929" : {
    "methodSignature" : "public void closeArchiveEntry() throws IOException",
    "methodName" : "closeArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream((OutputStream) null, 2268, 2268);\n    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(tarArchiveOutputStream0);\n    TarArchiveOutputStream tarArchiveOutputStream1 = new TarArchiveOutputStream(bufferedOutputStream0, (-744), (String) null);\n    tarArchiveOutputStream1.close();\n    tarArchiveOutputStream1.closeArchiveEntry();\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"U,/rHn#&l+?3QL1w\");\n    MockFile mockFile0 = new MockFile(\"HzXff{LO[+G`'\", \" exceeds maximum signed long\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);\n    tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);\n    tarArchiveOutputStream0.close();\n}",
    "testName" : "test1919"
  }
}