{
  "test1114" : {
    "methodSignature" : "public int getRecordSize()",
    "methodName" : "getRecordSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1114() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0);\n    int int0 = tarArchiveInputStream0.available();\n    tarArchiveInputStream0.getRecordSize();\n}",
    "testName" : "test1114"
  },
  "test1115" : {
    "methodSignature" : "public int available() throws IOException",
    "methodName" : "available",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1115() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0);\n    int int0 = tarArchiveInputStream0.available();\n}",
    "testName" : "test1115"
  },
  "test1830" : {
    "methodSignature" : "public boolean canReadEntryData(ArchiveEntry ae)",
    "methodName" : "canReadEntryData",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1830() throws Throwable {\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream((InputStream) null);\n    boolean boolean0 = tarArchiveInputStream0.canReadEntryData((ArchiveEntry) null);\n}",
    "testName" : "test1830"
  },
  "test1013" : {
    "methodSignature" : "public int getRecordSize()",
    "methodName" : "getRecordSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1013() throws Throwable {\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream((InputStream) null, (-1108));\n    tarArchiveInputStream0.mark(3483);\n    tarArchiveInputStream0.getRecordSize();\n}",
    "testName" : "test1013"
  },
  "test011" : {
    "methodSignature" : "public int getRecordSize()",
    "methodName" : "getRecordSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 10, (byte) 10);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0, (byte) 10, (byte) 0);\n    byte[] byteArray1 = tarArchiveInputStream0.getLongNameData();\n    tarArchiveInputStream0.getRecordSize();\n}",
    "testName" : "test011"
  },
  "test1319" : {
    "methodSignature" : "public int getRecordSize()",
    "methodName" : "getRecordSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1319() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0);\n    byte[] byteArray1 = tarArchiveInputStream0.getLongNameData();\n    tarArchiveInputStream0.getNextTarEntry();\n    tarArchiveInputStream0.getRecordSize();\n}",
    "testName" : "test1319"
  },
  "test012" : {
    "methodSignature" : "public long getBytesRead()",
    "methodName" : "getBytesRead",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test012() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 10, (byte) 10);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0, (byte) 10, (byte) 0);\n    byte[] byteArray1 = tarArchiveInputStream0.getLongNameData();\n    tarArchiveInputStream0.getBytesRead();\n}",
    "testName" : "test012"
  },
  "test1216" : {
    "methodSignature" : "public int getRecordSize()",
    "methodName" : "getRecordSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1216() throws Throwable {\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream((InputStream) null, (-1104));\n    long long0 = tarArchiveInputStream0.skip((-1104));\n    tarArchiveInputStream0.getRecordSize();\n}",
    "testName" : "test1216"
  },
  "test1931" : {
    "methodSignature" : "public int getRecordSize()",
    "methodName" : "getRecordSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1931() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"CP437\");\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(pipedInputStream0, 16877);\n    boolean boolean0 = tarArchiveInputStream0.canReadEntryData(tarArchiveEntry0);\n    tarArchiveInputStream0.getRecordSize();\n}",
    "testName" : "test1931"
  },
  "test1217" : {
    "methodSignature" : "public long skip(final long n) throws IOException",
    "methodName" : "skip",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1217() throws Throwable {\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream((InputStream) null, (-1104));\n    long long0 = tarArchiveInputStream0.skip((-1104));\n}",
    "testName" : "test1217"
  },
  "test1932" : {
    "methodSignature" : "public boolean canReadEntryData(ArchiveEntry ae)",
    "methodName" : "canReadEntryData",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1932() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"CP437\");\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(pipedInputStream0, 16877);\n    boolean boolean0 = tarArchiveInputStream0.canReadEntryData(tarArchiveEntry0);\n}",
    "testName" : "test1932"
  },
  "test1318" : {
    "methodSignature" : "protected byte[] getLongNameData() throws IOException",
    "methodName" : "getLongNameData",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1318() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0);\n    byte[] byteArray1 = tarArchiveInputStream0.getLongNameData();\n}",
    "testName" : "test1318"
  },
  "test1829" : {
    "methodSignature" : "public int getRecordSize()",
    "methodName" : "getRecordSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1829() throws Throwable {\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream((InputStream) null);\n    boolean boolean0 = tarArchiveInputStream0.canReadEntryData((ArchiveEntry) null);\n    tarArchiveInputStream0.getRecordSize();\n}",
    "testName" : "test1829"
  },
  "test024" : {
    "methodSignature" : "public int getRecordSize()",
    "methodName" : "getRecordSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test024() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0);\n    tarArchiveInputStream0.setAtEOF(true);\n    tarArchiveInputStream0.getRecordSize();\n}",
    "testName" : "test024"
  },
  "test047" : {
    "methodSignature" : "public int getRecordSize()",
    "methodName" : "getRecordSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test047() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 10, (byte) 0);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0, 524, (String) null);\n    tarArchiveInputStream0.reset();\n    tarArchiveInputStream0.getRecordSize();\n}",
    "testName" : "test047"
  },
  "test069" : {
    "methodSignature" : "protected byte[] getLongNameData() throws IOException",
    "methodName" : "getLongNameData",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test069() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"CP437\");\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(pipedInputStream0, 16877);\n    tarArchiveInputStream0.setCurrentEntry(tarArchiveEntry0);\n    tarArchiveInputStream0.getLongNameData();\n}",
    "testName" : "test069"
  },
  "test1421" : {
    "methodSignature" : "protected boolean isEOFRecord(byte[] record)",
    "methodName" : "isEOFRecord",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1421() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    byteArray0[0] = (byte) 10;\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 10, (byte) 10);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0, (byte) 0, (String) null);\n    boolean boolean0 = tarArchiveInputStream0.isEOFRecord(byteArray0);\n}",
    "testName" : "test1421"
  },
  "test1422" : {
    "methodSignature" : "public int getRecordSize()",
    "methodName" : "getRecordSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1422() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    byteArray0[0] = (byte) 10;\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 10, (byte) 10);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0, (byte) 0, (String) null);\n    boolean boolean0 = tarArchiveInputStream0.isEOFRecord(byteArray0);\n    tarArchiveInputStream0.getRecordSize();\n}",
    "testName" : "test1422"
  },
  "test1523" : {
    "methodSignature" : "public int getRecordSize()",
    "methodName" : "getRecordSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1523() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0);\n    tarArchiveInputStream0.parsePaxHeaders(byteArrayInputStream0);\n    tarArchiveInputStream0.getRecordSize();\n}",
    "testName" : "test1523"
  },
  "test2033" : {
    "methodSignature" : "public static boolean matches(byte[] signature, int length)",
    "methodName" : "matches",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2033() throws Throwable {\n    byte[] byteArray0 = new byte[13];\n    TarArchiveInputStream.matches(byteArray0, 1329);\n}",
    "testName" : "test2033"
  },
  "test1320" : {
    "methodSignature" : "public int getCount()",
    "methodName" : "getCount",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1320() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0);\n    byte[] byteArray1 = tarArchiveInputStream0.getLongNameData();\n    tarArchiveInputStream0.getNextTarEntry();\n    tarArchiveInputStream0.getCount();\n}",
    "testName" : "test1320"
  },
  "test2134" : {
    "methodSignature" : "public static boolean matches(byte[] signature, int length)",
    "methodName" : "matches",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2134() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    boolean boolean0 = TarArchiveInputStream.matches(byteArray0, (byte) 10);\n}",
    "testName" : "test2134"
  },
  "test000" : {
    "methodSignature" : "public int getRecordSize()",
    "methodName" : "getRecordSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    byte[] byteArray0 = new byte[8];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0);\n    tarArchiveInputStream0.close();\n    tarArchiveInputStream0.getRecordSize();\n}",
    "testName" : "test000"
  },
  "test0912" : {
    "methodSignature" : "protected byte[] getLongNameData() throws IOException",
    "methodName" : "getLongNameData",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0912() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 10, (byte) 10);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0, (byte) 0, (String) null);\n    TarArchiveInputStream tarArchiveInputStream1 = new TarArchiveInputStream(tarArchiveInputStream0, (byte) 0, (byte) 0);\n    tarArchiveInputStream1.getLongNameData();\n}",
    "testName" : "test0912"
  },
  "test1627" : {
    "methodSignature" : "public int read(byte[] buf, int offset, int numToRead) throws IOException",
    "methodName" : "read",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1627() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0);\n    byte[] byteArray1 = tarArchiveInputStream0.getLongNameData();\n    int int0 = tarArchiveInputStream0.read(byteArray0, (-1), (-1));\n}",
    "testName" : "test1627"
  },
  "test1728" : {
    "methodSignature" : "public int read(byte[] buf, int offset, int numToRead) throws IOException",
    "methodName" : "read",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1728() throws Throwable {\n    byte[] byteArray0 = new byte[5];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1439, 512);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0, 1439, 1439);\n    tarArchiveInputStream0.skip(4013L);\n    tarArchiveInputStream0.read(byteArray0, 1556, 1439);\n}",
    "testName" : "test1728"
  },
  "test0710" : {
    "methodSignature" : "public int getRecordSize()",
    "methodName" : "getRecordSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0710() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0, \"WORLD_READ\");\n    tarArchiveInputStream0.getRecordSize();\n}",
    "testName" : "test0710"
  },
  "test0811" : {
    "methodSignature" : "public int getRecordSize()",
    "methodName" : "getRecordSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0811() throws Throwable {\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream((InputStream) null, (-1104));\n    tarArchiveInputStream0.getCurrentEntry();\n    tarArchiveInputStream0.getRecordSize();\n}",
    "testName" : "test0811"
  },
  "test1625" : {
    "methodSignature" : "public int getRecordSize()",
    "methodName" : "getRecordSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1625() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0);\n    byte[] byteArray1 = tarArchiveInputStream0.getLongNameData();\n    int int0 = tarArchiveInputStream0.read(byteArray0, (-1), (-1));\n    tarArchiveInputStream0.getRecordSize();\n}",
    "testName" : "test1625"
  },
  "test1626" : {
    "methodSignature" : "public int getCount()",
    "methodName" : "getCount",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1626() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0);\n    byte[] byteArray1 = tarArchiveInputStream0.getLongNameData();\n    int int0 = tarArchiveInputStream0.read(byteArray0, (-1), (-1));\n    tarArchiveInputStream0.getCount();\n}",
    "testName" : "test1626"
  },
  "test013" : {
    "methodSignature" : "protected byte[] getLongNameData() throws IOException",
    "methodName" : "getLongNameData",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test013() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 10, (byte) 10);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0, (byte) 10, (byte) 0);\n    byte[] byteArray1 = tarArchiveInputStream0.getLongNameData();\n}",
    "testName" : "test013"
  },
  "test035" : {
    "methodSignature" : "protected final boolean isAtEOF()",
    "methodName" : "isAtEOF",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test035() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0);\n    boolean boolean0 = tarArchiveInputStream0.isAtEOF();\n}",
    "testName" : "test035"
  },
  "test036" : {
    "methodSignature" : "public int getRecordSize()",
    "methodName" : "getRecordSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test036() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream(byteArrayInputStream0);\n    boolean boolean0 = tarArchiveInputStream0.isAtEOF();\n    tarArchiveInputStream0.getRecordSize();\n}",
    "testName" : "test036"
  },
  "test058" : {
    "methodSignature" : "public int getRecordSize()",
    "methodName" : "getRecordSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test058() throws Throwable {\n    TarArchiveInputStream tarArchiveInputStream0 = new TarArchiveInputStream((InputStream) null, (-1104));\n    int int0 = tarArchiveInputStream0.getRecordSize();\n}",
    "testName" : "test058"
  }
}