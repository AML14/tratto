project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    CpioArchiveInputStream cpioArchiveInputStream0 = new CpioArchiveInputStream((InputStream) null, ""w"");
    assertEquals(0, cpioArchiveInputStream0.getCount());
}",0,
project,0,test011,"public void test011() throws Throwable {
    byte[] byteArray0 = new byte[9];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    CpioArchiveInputStream cpioArchiveInputStream0 = new CpioArchiveInputStream(byteArrayInputStream0);
    cpioArchiveInputStream0.close();
    try {
        cpioArchiveInputStream0.getNextCPIOEntry();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream"", e);
    }
}",0,
project,0,test022,"public void test022() throws Throwable {
    byte[] byteArray0 = new byte[9];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 0, 1364);
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
    CpioArchiveInputStream cpioArchiveInputStream0 = new CpioArchiveInputStream(sequenceInputStream0, 1439);
    cpioArchiveInputStream0.close();
    cpioArchiveInputStream0.close();
    assertEquals(0L, cpioArchiveInputStream0.getBytesRead());
}",0,"assertEquals(0, cpioArchiveInputStream0.getBytesRead())"
project,0,test033,"public void test033() throws Throwable {
    CpioArchiveInputStream cpioArchiveInputStream0 = new CpioArchiveInputStream((InputStream) null);
    // Undeclared exception!
    try {
        cpioArchiveInputStream0.getNextEntry();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.utils.IOUtils"", e);
    }
}",0,
project,0,test044,"public void test044() throws Throwable {
    CpioArchiveInputStream cpioArchiveInputStream0 = new CpioArchiveInputStream((InputStream) null, 1089);
    int int0 = cpioArchiveInputStream0.available();
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test055,"public void test055() throws Throwable {
    CpioArchiveInputStream cpioArchiveInputStream0 = new CpioArchiveInputStream((InputStream) null);
    long long0 = cpioArchiveInputStream0.skip(134630224L);
    assertEquals(0L, long0);
}",1,
project,0,test056,"public void test056() throws Throwable {
    CpioArchiveInputStream cpioArchiveInputStream0 = new CpioArchiveInputStream((InputStream) null);
    long long0 = cpioArchiveInputStream0.skip(134630224L);
    int int0 = cpioArchiveInputStream0.available();
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test067,"public void test067() throws Throwable {
    byte[] byteArray0 = new byte[9];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    CpioArchiveInputStream cpioArchiveInputStream0 = new CpioArchiveInputStream(byteArrayInputStream0);
    try {
        cpioArchiveInputStream0.getNextCPIOEntry();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unknown magic [\u0000\u0000\u0000\u0000\u0000\u0000]. Occured at byte: 6
        //
        verifyException(""org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream"", e);
    }
}",0,
project,0,test078,"public void test078() throws Throwable {
    byte[] byteArray0 = new byte[2];
    CpioArchiveInputStream cpioArchiveInputStream0 = new CpioArchiveInputStream((InputStream) null);
    // Undeclared exception!
    try {
        cpioArchiveInputStream0.read(byteArray0, (-1), 666);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream"", e);
    }
}",1,
project,0,test089,"public void test089() throws Throwable {
    byte[] byteArray0 = new byte[2];
    CpioArchiveInputStream cpioArchiveInputStream0 = new CpioArchiveInputStream((InputStream) null, (byte) 50);
    // Undeclared exception!
    try {
        cpioArchiveInputStream0.read(byteArray0, (int) (byte) 50, (-642));
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream"", e);
    }
}",1,
project,0,test0910,"public void test0910() throws Throwable {
    byte[] byteArray0 = new byte[2];
    CpioArchiveInputStream cpioArchiveInputStream0 = new CpioArchiveInputStream((InputStream) null);
    // Undeclared exception!
    try {
        cpioArchiveInputStream0.read(byteArray0, 4091, 4091);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream"", e);
    }
}",1,
project,0,test1112,"public void test1112() throws Throwable {
    byte[] byteArray0 = new byte[2];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    CpioArchiveInputStream cpioArchiveInputStream0 = new CpioArchiveInputStream(byteArrayInputStream0);
    try {
        cpioArchiveInputStream0.getNextCPIOEntry();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream"", e);
    }
}",0,
project,0,test1213,"public void test1213() throws Throwable {
    CpioArchiveInputStream cpioArchiveInputStream0 = new CpioArchiveInputStream((InputStream) null);
    // Undeclared exception!
    try {
        cpioArchiveInputStream0.skip((-3453L));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // negative skip length
        //
        verifyException(""org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream"", e);
    }
}",1,
project,0,test1314,"public void test1314() throws Throwable {
    CpioArchiveInputStream cpioArchiveInputStream0 = new CpioArchiveInputStream((InputStream) null);
    long long0 = cpioArchiveInputStream0.skip(0L);
    assertEquals(0L, long0);
}",1,
project,0,test1415,"public void test1415() throws Throwable {
    CpioArchiveInputStream cpioArchiveInputStream0 = new CpioArchiveInputStream((InputStream) null, (byte) 50);
    long long0 = cpioArchiveInputStream0.skip(3776L);
    assertEquals(0L, long0);
}",1,
project,0,test1516,"public void test1516() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[0] = (byte) 113;
    CpioArchiveInputStream.matches(byteArray0, (byte) 113);
}",0,
project,0,test1617,"public void test1617() throws Throwable {
    byte[] byteArray0 = new byte[9];
    byteArray0[1] = (byte) 113;
    CpioArchiveInputStream.matches(byteArray0, 204);
}",0,
