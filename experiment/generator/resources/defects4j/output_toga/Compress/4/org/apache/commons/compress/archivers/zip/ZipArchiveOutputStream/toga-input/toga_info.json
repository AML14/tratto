{
  "test1114" : {
    "methodSignature" : "public String getEncoding()",
    "methodName" : "getEncoding",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1114() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(byteArrayOutputStream0);\n    zipArchiveOutputStream0.setUseLanguageEncodingFlag(true);\n    zipArchiveOutputStream0.getEncoding();\n}",
    "testName" : "test1114"
  },
  "test2026" : {
    "methodSignature" : "public void setLevel(int level)",
    "methodName" : "setLevel",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2026() throws Throwable {\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream((OutputStream) null);\n    zipArchiveOutputStream0.setLevel((-437));\n}",
    "testName" : "test2026"
  },
  "test2127" : {
    "methodSignature" : "public void setLevel(int level)",
    "methodName" : "setLevel",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2127() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(byteArrayOutputStream0);\n    zipArchiveOutputStream0.setLevel(2048);\n}",
    "testName" : "test2127"
  },
  "test1012" : {
    "methodSignature" : "public String getEncoding()",
    "methodName" : "getEncoding",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1012() throws Throwable {\n    String string0 = \"!O\\\\uHYC<\";\n    MockFile mockFile0 = new MockFile(\"\", string0);\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(mockFile0);\n    boolean boolean0 = zipArchiveOutputStream0.isSeekable();\n    zipArchiveOutputStream0.getEncoding();\n}",
    "testName" : "test1012"
  },
  "test1013" : {
    "methodSignature" : "public boolean isSeekable()",
    "methodName" : "isSeekable",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1013() throws Throwable {\n    String string0 = \"!O\\\\uHYC<\";\n    MockFile mockFile0 = new MockFile(\"\", string0);\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(mockFile0);\n    boolean boolean0 = zipArchiveOutputStream0.isSeekable();\n}",
    "testName" : "test1013"
  },
  "test011" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    ZipArchiveEntry zipArchiveEntry0 = new ZipArchiveEntry();\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(byteArrayOutputStream0);\n    zipArchiveOutputStream0.putArchiveEntry(zipArchiveEntry0);\n    zipArchiveOutputStream0.close();\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public String getEncoding()",
    "methodName" : "getEncoding",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(pipedOutputStream0);\n    zipArchiveOutputStream0.setFallbackToUTF8(true);\n    zipArchiveOutputStream0.getEncoding();\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public ArchiveEntry createArchiveEntry(File inputFile, String entryName) throws IOException",
    "methodName" : "createArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream((OutputStream) null);\n    zipArchiveOutputStream0.createArchiveEntry((File) null, \"Invalid compression level: \");\n}",
    "testName" : "test055"
  },
  "test099" : {
    "methodSignature" : "public String getEncoding()",
    "methodName" : "getEncoding",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"g&>96:qIxO^90966vs\");\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(mockFile0);\n    ZipArchiveOutputStream zipArchiveOutputStream1 = new ZipArchiveOutputStream(zipArchiveOutputStream0);\n    boolean boolean0 = zipArchiveOutputStream1.isSeekable();\n    zipArchiveOutputStream1.getEncoding();\n}",
    "testName" : "test099"
  },
  "test1419" : {
    "methodSignature" : "public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException",
    "methodName" : "putArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1419() throws Throwable {\n    ZipArchiveEntry zipArchiveEntry0 = new ZipArchiveEntry();\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(byteArrayOutputStream0);\n    zipArchiveEntry0.setCrc(3);\n    zipArchiveEntry0.setSize(0);\n    zipArchiveOutputStream0.setMethod(0);\n    zipArchiveOutputStream0.putArchiveEntry(zipArchiveEntry0);\n    zipArchiveOutputStream0.putArchiveEntry(zipArchiveEntry0);\n}",
    "testName" : "test1419"
  },
  "test2228" : {
    "methodSignature" : "public String getEncoding()",
    "methodName" : "getEncoding",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2228() throws Throwable {\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"] for UniCode path extra data.\");\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(mockPrintStream0);\n    zipArchiveOutputStream0.setLevel((-1));\n    zipArchiveOutputStream0.getEncoding();\n}",
    "testName" : "test2228"
  },
  "test2329" : {
    "methodSignature" : "public void write(byte[] b, int offset, int length) throws IOException",
    "methodName" : "write",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2329() throws Throwable {\n    ZipArchiveEntry zipArchiveEntry0 = new ZipArchiveEntry();\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(byteArrayOutputStream0);\n    zipArchiveOutputStream0.putArchiveEntry(zipArchiveEntry0);\n    zipArchiveEntry0.setMethod(0);\n    zipArchiveOutputStream0.write((byte[]) null, 3, 8249);\n}",
    "testName" : "test2329"
  },
  "test1520" : {
    "methodSignature" : "public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException",
    "methodName" : "putArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1520() throws Throwable {\n    ZipArchiveEntry zipArchiveEntry0 = new ZipArchiveEntry();\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(byteArrayOutputStream0);\n    zipArchiveEntry0.setCrc(0);\n    zipArchiveEntry0.setSize(8);\n    zipArchiveOutputStream0.setMethod(0);\n    zipArchiveOutputStream0.putArchiveEntry(zipArchiveEntry0);\n    zipArchiveOutputStream0.putArchiveEntry(zipArchiveEntry0);\n}",
    "testName" : "test1520"
  },
  "test3445" : {
    "methodSignature" : "protected void writeCentralFileHeader(ZipArchiveEntry ze) throws IOException",
    "methodName" : "writeCentralFileHeader",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3445() throws Throwable {\n    ZipArchiveEntry zipArchiveEntry0 = new ZipArchiveEntry();\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    zipArchiveEntry0.setComment(\"S3k?iq%%csEW>(QI\");\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(byteArrayOutputStream0);\n    zipArchiveOutputStream0.writeCentralFileHeader(zipArchiveEntry0);\n}",
    "testName" : "test3445"
  },
  "test1621" : {
    "methodSignature" : "public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException",
    "methodName" : "putArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1621() throws Throwable {\n    ZipArchiveEntry zipArchiveEntry0 = new ZipArchiveEntry();\n    MockFile mockFile0 = new MockFile(\"not encodeable\", \"not encodeable\");\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(mockFile0);\n    zipArchiveOutputStream0.setMethod(0);\n    zipArchiveOutputStream0.putArchiveEntry(zipArchiveEntry0);\n}",
    "testName" : "test1621"
  },
  "test2633" : {
    "methodSignature" : "public void write(byte[] b, int offset, int length) throws IOException",
    "methodName" : "write",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2633() throws Throwable {\n    ZipArchiveEntry zipArchiveEntry0 = new ZipArchiveEntry();\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(byteArrayOutputStream0);\n    byte[] byteArray0 = new byte[1];\n    zipArchiveOutputStream0.putArchiveEntry(zipArchiveEntry0);\n    zipArchiveOutputStream0.write(byteArray0, 0, 8263);\n}",
    "testName" : "test2633"
  },
  "test2430" : {
    "methodSignature" : "protected void writeCentralFileHeader(ZipArchiveEntry ze) throws IOException",
    "methodName" : "writeCentralFileHeader",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2430() throws Throwable {\n    ZipArchiveEntry zipArchiveEntry0 = new ZipArchiveEntry();\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(byteArrayOutputStream0);\n    zipArchiveOutputStream0.putArchiveEntry(zipArchiveEntry0);\n    ZipArchiveOutputStream zipArchiveOutputStream1 = new ZipArchiveOutputStream(zipArchiveOutputStream0);\n    zipArchiveOutputStream1.writeCentralFileHeader(zipArchiveEntry0);\n}",
    "testName" : "test2430"
  },
  "test3243" : {
    "methodSignature" : "public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException",
    "methodName" : "putArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3243() throws Throwable {\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream((OutputStream) null);\n    ZipArchiveOutputStream.UnicodeExtraFieldPolicy zipArchiveOutputStream_UnicodeExtraFieldPolicy0 = ZipArchiveOutputStream.UnicodeExtraFieldPolicy.NOT_ENCODEABLE;\n    zipArchiveOutputStream0.setCreateUnicodeExtraFields(zipArchiveOutputStream_UnicodeExtraFieldPolicy0);\n    ZipArchiveEntry zipArchiveEntry0 = new ZipArchiveEntry();\n    zipArchiveEntry0.setComment(\"org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField\");\n    zipArchiveOutputStream0.putArchiveEntry(zipArchiveEntry0);\n}",
    "testName" : "test3243"
  },
  "test000" : {
    "methodSignature" : "public String getEncoding()",
    "methodName" : "getEncoding",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"|Z<S)|q:+V;KN8Ck`#\");\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(mockFile0);\n    String string0 = zipArchiveOutputStream0.getEncoding();\n}",
    "testName" : "test000"
  },
  "test044" : {
    "methodSignature" : "public String getEncoding()",
    "methodName" : "getEncoding",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(byteArrayOutputStream0);\n    zipArchiveOutputStream0.setEncoding(\"93Z\");\n    zipArchiveOutputStream0.setUseLanguageEncodingFlag(true);\n    zipArchiveOutputStream0.getEncoding();\n}",
    "testName" : "test044"
  },
  "test1722" : {
    "methodSignature" : "public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException",
    "methodName" : "putArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1722() throws Throwable {\n    ZipArchiveEntry zipArchiveEntry0 = new ZipArchiveEntry();\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(byteArrayOutputStream0);\n    zipArchiveOutputStream0.setMethod(0);\n    zipArchiveOutputStream0.putArchiveEntry(zipArchiveEntry0);\n}",
    "testName" : "test1722"
  },
  "test3648" : {
    "methodSignature" : "public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException",
    "methodName" : "putArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3648() throws Throwable {\n    ZipArchiveEntry zipArchiveEntry0 = new ZipArchiveEntry();\n    MockFile mockFile0 = new MockFile(\"Q6x$|*^L+fM(\");\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(mockFile0);\n    zipArchiveOutputStream0.putArchiveEntry(zipArchiveEntry0);\n}",
    "testName" : "test3648"
  },
  "test0910" : {
    "methodSignature" : "public boolean isSeekable()",
    "methodName" : "isSeekable",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0910() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"g&>96:qIxO^90966vs\");\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(mockFile0);\n    ZipArchiveOutputStream zipArchiveOutputStream1 = new ZipArchiveOutputStream(zipArchiveOutputStream0);\n    boolean boolean0 = zipArchiveOutputStream1.isSeekable();\n}",
    "testName" : "test0910"
  },
  "test1823" : {
    "methodSignature" : "public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException",
    "methodName" : "putArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1823() throws Throwable {\n    ZipArchiveEntry zipArchiveEntry0 = new ZipArchiveEntry();\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(byteArrayOutputStream0);\n    zipArchiveEntry0.setSize(8);\n    zipArchiveOutputStream0.setMethod(0);\n    zipArchiveOutputStream0.putArchiveEntry(zipArchiveEntry0);\n}",
    "testName" : "test1823"
  },
  "test2836" : {
    "methodSignature" : "public String getEncoding()",
    "methodName" : "getEncoding",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2836() throws Throwable {\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream((OutputStream) null);\n    ZipArchiveOutputStream zipArchiveOutputStream1 = new ZipArchiveOutputStream(zipArchiveOutputStream0);\n    zipArchiveOutputStream1.flush();\n    zipArchiveOutputStream1.getEncoding();\n}",
    "testName" : "test2836"
  },
  "test0911" : {
    "methodSignature" : "public String getEncoding()",
    "methodName" : "getEncoding",
    "className" : "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0911() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"g&>96:qIxO^90966vs\");\n    ZipArchiveOutputStream zipArchiveOutputStream0 = new ZipArchiveOutputStream(mockFile0);\n    ZipArchiveOutputStream zipArchiveOutputStream1 = new ZipArchiveOutputStream(zipArchiveOutputStream0);\n    boolean boolean0 = zipArchiveOutputStream1.isSeekable();\n    zipArchiveOutputStream0.getEncoding();\n}",
    "testName" : "test0911"
  }
}