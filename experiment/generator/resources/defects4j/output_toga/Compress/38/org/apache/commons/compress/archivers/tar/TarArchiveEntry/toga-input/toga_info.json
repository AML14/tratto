{
  "test0002" : {
    "methodSignature" : "public boolean isFIFO()",
    "methodName" : "isFIFO",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0002() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    boolean boolean0 = tarArchiveEntry0.isFIFO();\n}",
    "testName" : "test0002"
  },
  "test087379" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test087379() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"org.apache.commons.compress.archivers.tar.TarArchiveEntry\", (byte) 108);\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test087379"
  },
  "test0003" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0003() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    boolean boolean0 = tarArchiveEntry0.isFIFO();\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test0003"
  },
  "test0004" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0004() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    boolean boolean0 = tarArchiveEntry0.isFIFO();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test0004"
  },
  "test0000" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    boolean boolean0 = tarArchiveEntry0.isFIFO();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test0000"
  },
  "test0001" : {
    "methodSignature" : "public boolean isGNULongNameEntry()",
    "methodName" : "isGNULongNameEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0001() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    boolean boolean0 = tarArchiveEntry0.isFIFO();\n    tarArchiveEntry0.isGNULongNameEntry();\n}",
    "testName" : "test0001"
  },
  "test062194" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test062194() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"TmT\");\n    tarArchiveEntry0.isStarSparse();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test062194"
  },
  "test062195" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test062195() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"TmT\");\n    tarArchiveEntry0.isStarSparse();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test062195"
  },
  "test062193" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test062193() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"TmT\");\n    tarArchiveEntry0.isStarSparse();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test062193"
  },
  "test062198" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test062198() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"TmT\");\n    tarArchiveEntry0.isStarSparse();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test062198"
  },
  "test087376" : {
    "methodSignature" : "public boolean isGNULongLinkEntry()",
    "methodName" : "isGNULongLinkEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test087376() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"org.apache.commons.compress.archivers.tar.TarArchiveEntry\", (byte) 108);\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n}",
    "testName" : "test087376"
  },
  "test062196" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test062196() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"TmT\");\n    tarArchiveEntry0.isStarSparse();\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test062196"
  },
  "test087377" : {
    "methodSignature" : "public boolean isCharacterDevice()",
    "methodName" : "isCharacterDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test087377() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"org.apache.commons.compress.archivers.tar.TarArchiveEntry\", (byte) 108);\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.isCharacterDevice();\n}",
    "testName" : "test087377"
  },
  "test062197" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test062197() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"TmT\");\n    tarArchiveEntry0.isStarSparse();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test062197"
  },
  "test087378" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test087378() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"org.apache.commons.compress.archivers.tar.TarArchiveEntry\", (byte) 108);\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test087378"
  },
  "test078306" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078306() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test078306"
  },
  "test112547" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112547() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.hashCode();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test112547"
  },
  "test075279" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test075279() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", true);\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test075279"
  },
  "test078307" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078307() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test078307"
  },
  "test112548" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112548() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.hashCode();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test112548"
  },
  "test078304" : {
    "methodSignature" : "public boolean isGNUSparse()",
    "methodName" : "isGNUSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078304() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFile();\n    tarArchiveEntry0.isGNUSparse();\n}",
    "testName" : "test078304"
  },
  "test112549" : {
    "methodSignature" : "public boolean isGNULongNameEntry()",
    "methodName" : "isGNULongNameEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112549() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.hashCode();\n    tarArchiveEntry0.isGNULongNameEntry();\n}",
    "testName" : "test112549"
  },
  "test078305" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078305() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test078305"
  },
  "test030126" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test030126() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"XJG&E\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"XJG&E\");\n    tarArchiveEntry0.getFile();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test030126"
  },
  "test030124" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test030124() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"XJG&E\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"XJG&E\");\n    tarArchiveEntry0.getFile();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test030124"
  },
  "test030125" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test030125() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"XJG&E\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"XJG&E\");\n    tarArchiveEntry0.getFile();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test030125"
  },
  "test030122" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test030122() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"XJG&E\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"XJG&E\");\n    tarArchiveEntry0.getFile();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test030122"
  },
  "test052153" : {
    "methodSignature" : "public TarArchiveEntry(final String name)",
    "methodName" : "TarArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test052153() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = null;\n    tarArchiveEntry0 = new TarArchiveEntry((String) null);\n}",
    "testName" : "test052153"
  },
  "test030123" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test030123() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"XJG&E\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"XJG&E\");\n    tarArchiveEntry0.getFile();\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test030123"
  },
  "test075274" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test075274() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", true);\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test075274"
  },
  "test075273" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test075273() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", true);\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test075273"
  },
  "test112542" : {
    "methodSignature" : "public boolean isGNULongLinkEntry()",
    "methodName" : "isGNULongLinkEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112542() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.hashCode();\n    tarArchiveEntry0.isGNULongLinkEntry();\n}",
    "testName" : "test112542"
  },
  "test075276" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test075276() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", true);\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test075276"
  },
  "test078302" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078302() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test078302"
  },
  "test112543" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112543() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.hashCode();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test112543"
  },
  "test075275" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test075275() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", true);\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test075275"
  },
  "test078303" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078303() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test078303"
  },
  "test112544" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112544() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.hashCode();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test112544"
  },
  "test075278" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test075278() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", true);\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test075278"
  },
  "test078300" : {
    "methodSignature" : "public boolean isFile()",
    "methodName" : "isFile",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078300() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFile();\n}",
    "testName" : "test078300"
  },
  "test112545" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112545() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.hashCode();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test112545"
  },
  "test075277" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test075277() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", true);\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test075277"
  },
  "test078301" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078301() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test078301"
  },
  "test112546" : {
    "methodSignature" : "public boolean isBlockDevice()",
    "methodName" : "isBlockDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112546() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.hashCode();\n    tarArchiveEntry0.isBlockDevice();\n}",
    "testName" : "test112546"
  },
  "test100448" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100448() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"TmT\");\n    int int0 = tarArchiveEntry0.getUserId();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test100448"
  },
  "test100447" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100447() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"TmT\");\n    int int0 = tarArchiveEntry0.getUserId();\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test100447"
  },
  "test0015" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0015() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"Minor device number is out of range: \");\n    tarArchiveEntry0.isBlockDevice();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test0015"
  },
  "test0016" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0016() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"Minor device number is out of range: \");\n    tarArchiveEntry0.isBlockDevice();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test0016"
  },
  "test100449" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100449() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"TmT\");\n    int int0 = tarArchiveEntry0.getUserId();\n}",
    "testName" : "test100449"
  },
  "test087382" : {
    "methodSignature" : "public boolean isPaxHeader()",
    "methodName" : "isPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test087382() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"org.apache.commons.compress.archivers.tar.TarArchiveEntry\", (byte) 108);\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.isPaxHeader();\n}",
    "testName" : "test087382"
  },
  "test041142" : {
    "methodSignature" : "public void parseTarHeader(final byte[] header)",
    "methodName" : "parseTarHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test041142() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"TmT\");\n    tarArchiveEntry0.parseTarHeader((byte[]) null);\n}",
    "testName" : "test041142"
  },
  "test087383" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test087383() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"org.apache.commons.compress.archivers.tar.TarArchiveEntry\", (byte) 108);\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test087383"
  },
  "test087384" : {
    "methodSignature" : "public boolean isSymbolicLink()",
    "methodName" : "isSymbolicLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test087384() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"org.apache.commons.compress.archivers.tar.TarArchiveEntry\", (byte) 108);\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.isSymbolicLink();\n}",
    "testName" : "test087384"
  },
  "test087385" : {
    "methodSignature" : "public boolean isGNULongNameEntry()",
    "methodName" : "isGNULongNameEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test087385() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"org.apache.commons.compress.archivers.tar.TarArchiveEntry\", (byte) 108);\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.isGNULongNameEntry();\n}",
    "testName" : "test087385"
  },
  "test0017" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0017() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"Minor device number is out of range: \");\n    tarArchiveEntry0.isBlockDevice();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test0017"
  },
  "test087386" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test087386() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"org.apache.commons.compress.archivers.tar.TarArchiveEntry\", (byte) 108);\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test087386"
  },
  "test0018" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0018() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"Minor device number is out of range: \");\n    tarArchiveEntry0.isBlockDevice();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test0018"
  },
  "test0019" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0019() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"Minor device number is out of range: \");\n    tarArchiveEntry0.isBlockDevice();\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test0019"
  },
  "test01687" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01687() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    tarArchiveEntry0.setSize(2104L);\n    long long0 = tarArchiveEntry0.getSize();\n}",
    "testName" : "test01687"
  },
  "test087380" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test087380() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"org.apache.commons.compress.archivers.tar.TarArchiveEntry\", (byte) 108);\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test087380"
  },
  "test087381" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test087381() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"org.apache.commons.compress.archivers.tar.TarArchiveEntry\", (byte) 108);\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test087381"
  },
  "test066210" : {
    "methodSignature" : "public boolean isFIFO()",
    "methodName" : "isFIFO",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066210() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    tarArchiveEntry0.getDirectoryEntries();\n    tarArchiveEntry0.isFIFO();\n}",
    "testName" : "test066210"
  },
  "test100451" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100451() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"TmT\");\n    int int0 = tarArchiveEntry0.getUserId();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test100451"
  },
  "test100450" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100450() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"TmT\");\n    int int0 = tarArchiveEntry0.getUserId();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test100450"
  },
  "test066213" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066213() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    tarArchiveEntry0.getDirectoryEntries();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test066213"
  },
  "test066212" : {
    "methodSignature" : "public boolean isSparse()",
    "methodName" : "isSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066212() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    tarArchiveEntry0.getDirectoryEntries();\n    tarArchiveEntry0.isSparse();\n}",
    "testName" : "test066212"
  },
  "test066211" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066211() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    tarArchiveEntry0.getDirectoryEntries();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test066211"
  },
  "test01796" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01796() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) 4);\n    String string0 = tarArchiveEntry0.getName();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test01796"
  },
  "test01795" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01795() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) 4);\n    String string0 = tarArchiveEntry0.getName();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test01795"
  },
  "test020100" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test020100() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\");\n    tarArchiveEntry0.setIds(33188, 0);\n    long long0 = tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test020100"
  },
  "test066207" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066207() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    tarArchiveEntry0.getDirectoryEntries();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test066207"
  },
  "test066206" : {
    "methodSignature" : "public boolean isGNULongLinkEntry()",
    "methodName" : "isGNULongLinkEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066206() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    tarArchiveEntry0.getDirectoryEntries();\n    tarArchiveEntry0.isGNULongLinkEntry();\n}",
    "testName" : "test066206"
  },
  "test066209" : {
    "methodSignature" : "public boolean isPaxHeader()",
    "methodName" : "isPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066209() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    tarArchiveEntry0.getDirectoryEntries();\n    tarArchiveEntry0.isPaxHeader();\n}",
    "testName" : "test066209"
  },
  "test066208" : {
    "methodSignature" : "public boolean isGlobalPaxHeader()",
    "methodName" : "isGlobalPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066208() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    tarArchiveEntry0.getDirectoryEntries();\n    tarArchiveEntry0.isGlobalPaxHeader();\n}",
    "testName" : "test066208"
  },
  "test01790" : {
    "methodSignature" : "public boolean isGNULongLinkEntry()",
    "methodName" : "isGNULongLinkEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01790() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) 4);\n    String string0 = tarArchiveEntry0.getName();\n    tarArchiveEntry0.isGNULongLinkEntry();\n}",
    "testName" : "test01790"
  },
  "test01794" : {
    "methodSignature" : "public boolean isFIFO()",
    "methodName" : "isFIFO",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01794() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) 4);\n    String string0 = tarArchiveEntry0.getName();\n    tarArchiveEntry0.isFIFO();\n}",
    "testName" : "test01794"
  },
  "test01793" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01793() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) 4);\n    String string0 = tarArchiveEntry0.getName();\n}",
    "testName" : "test01793"
  },
  "test01792" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01792() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) 4);\n    String string0 = tarArchiveEntry0.getName();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test01792"
  },
  "test01791" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01791() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) 4);\n    String string0 = tarArchiveEntry0.getName();\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test01791"
  },
  "test00213" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00213() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    boolean boolean0 = tarArchiveEntry0.isCharacterDevice();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test00213"
  },
  "test00214" : {
    "methodSignature" : "public boolean isLink()",
    "methodName" : "isLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00214() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    boolean boolean0 = tarArchiveEntry0.isCharacterDevice();\n    tarArchiveEntry0.isLink();\n}",
    "testName" : "test00214"
  },
  "test00211" : {
    "methodSignature" : "public boolean isCharacterDevice()",
    "methodName" : "isCharacterDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00211() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    boolean boolean0 = tarArchiveEntry0.isCharacterDevice();\n}",
    "testName" : "test00211"
  },
  "test00212" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00212() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    boolean boolean0 = tarArchiveEntry0.isCharacterDevice();\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test00212"
  },
  "test00217" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00217() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    boolean boolean0 = tarArchiveEntry0.isCharacterDevice();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test00217"
  },
  "test031127" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test031127() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    tarArchiveEntry0.setDevMinor(9561);\n    int int0 = tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test031127"
  },
  "test00215" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00215() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    boolean boolean0 = tarArchiveEntry0.isCharacterDevice();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test00215"
  },
  "test01789" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01789() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) 4);\n    String string0 = tarArchiveEntry0.getName();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test01789"
  },
  "test00216" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00216() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    boolean boolean0 = tarArchiveEntry0.isCharacterDevice();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test00216"
  },
  "test01788" : {
    "methodSignature" : "public boolean isCharacterDevice()",
    "methodName" : "isCharacterDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01788() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) 4);\n    String string0 = tarArchiveEntry0.getName();\n    tarArchiveEntry0.isCharacterDevice();\n}",
    "testName" : "test01788"
  },
  "test112550" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112550() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.hashCode();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test112550"
  },
  "test112551" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112551() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.hashCode();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test112551"
  },
  "test086368" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test086368() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) 75, true);\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test086368"
  },
  "test086369" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test086369() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) 75, true);\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test086369"
  },
  "test00210" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00210() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    boolean boolean0 = tarArchiveEntry0.isCharacterDevice();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test00210"
  },
  "test01897" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01897() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\");\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test01897"
  },
  "test074268" : {
    "methodSignature" : "public boolean isFile()",
    "methodName" : "isFile",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test074268() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000/\");\n    boolean boolean0 = tarArchiveEntry0.isFile();\n}",
    "testName" : "test074268"
  },
  "test099445" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099445() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    String string0 = tarArchiveEntry0.getGroupName();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test099445"
  },
  "test074267" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test074267() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000/\");\n    boolean boolean0 = tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test074267"
  },
  "test099444" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099444() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    String string0 = tarArchiveEntry0.getGroupName();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test099444"
  },
  "test113559" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113559() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    tarArchiveEntry0.isCheckSumOK();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test113559"
  },
  "test00321" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00321() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000\", (byte) 82);\n    tarArchiveEntry0.isLink();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test00321"
  },
  "test099443" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099443() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    String string0 = tarArchiveEntry0.getGroupName();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test099443"
  },
  "test00322" : {
    "methodSignature" : "public boolean isBlockDevice()",
    "methodName" : "isBlockDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00322() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000\", (byte) 82);\n    tarArchiveEntry0.isLink();\n    tarArchiveEntry0.isBlockDevice();\n}",
    "testName" : "test00322"
  },
  "test074269" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test074269() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000/\");\n    boolean boolean0 = tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test074269"
  },
  "test099442" : {
    "methodSignature" : "public String getGroupName()",
    "methodName" : "getGroupName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099442() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    String string0 = tarArchiveEntry0.getGroupName();\n}",
    "testName" : "test099442"
  },
  "test099441" : {
    "methodSignature" : "public boolean isGNULongNameEntry()",
    "methodName" : "isGNULongNameEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099441() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    String string0 = tarArchiveEntry0.getGroupName();\n    tarArchiveEntry0.isGNULongNameEntry();\n}",
    "testName" : "test099441"
  },
  "test01898" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01898() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\");\n    tarArchiveEntry0.setMode(0);\n    int int0 = tarArchiveEntry0.getMode();\n}",
    "testName" : "test01898"
  },
  "test113552" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113552() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    tarArchiveEntry0.isCheckSumOK();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test113552"
  },
  "test113554" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113554() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    tarArchiveEntry0.isCheckSumOK();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test113554"
  },
  "test113553" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113553() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    tarArchiveEntry0.isCheckSumOK();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test113553"
  },
  "test113556" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113556() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    tarArchiveEntry0.isCheckSumOK();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test113556"
  },
  "test113555" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113555() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    tarArchiveEntry0.isCheckSumOK();\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test113555"
  },
  "test074266" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test074266() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000/\");\n    boolean boolean0 = tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test074266"
  },
  "test113558" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113558() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    tarArchiveEntry0.isCheckSumOK();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test113558"
  },
  "test074265" : {
    "methodSignature" : "public boolean isBlockDevice()",
    "methodName" : "isBlockDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test074265() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000/\");\n    boolean boolean0 = tarArchiveEntry0.isFile();\n    tarArchiveEntry0.isBlockDevice();\n}",
    "testName" : "test074265"
  },
  "test099446" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099446() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    String string0 = tarArchiveEntry0.getGroupName();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test099446"
  },
  "test113557" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113557() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    tarArchiveEntry0.isCheckSumOK();\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test113557"
  },
  "test086370" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test086370() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) 75, true);\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test086370"
  },
  "test101452" : {
    "methodSignature" : "public boolean isLink()",
    "methodName" : "isLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101452() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\");\n    tarArchiveEntry0.equals((Object) tarArchiveEntry0);\n    tarArchiveEntry0.isLink();\n}",
    "testName" : "test101452"
  },
  "test086371" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test086371() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) 75, true);\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test086371"
  },
  "test086372" : {
    "methodSignature" : "public boolean isGNULongLinkEntry()",
    "methodName" : "isGNULongLinkEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test086372() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) 75, true);\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n}",
    "testName" : "test086372"
  },
  "test101454" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101454() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\");\n    tarArchiveEntry0.equals((Object) tarArchiveEntry0);\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test101454"
  },
  "test086373" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test086373() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) 75, true);\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test086373"
  },
  "test101453" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101453() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\");\n    tarArchiveEntry0.equals((Object) tarArchiveEntry0);\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test101453"
  },
  "test086374" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test086374() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) 75, true);\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test086374"
  },
  "test101456" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101456() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\");\n    tarArchiveEntry0.equals((Object) tarArchiveEntry0);\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test101456"
  },
  "test00320" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00320() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000\", (byte) 82);\n    tarArchiveEntry0.isLink();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test00320"
  },
  "test064200" : {
    "methodSignature" : "public void parseTarHeader(final byte[] header, final ZipEncoding encoding) throws IOException",
    "methodName" : "parseTarHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test064200() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"r&5L\", (byte) 2, true);\n    ZipEncoding zipEncoding0 = mock(ZipEncoding.class, new ViolatedAssumptionAnswer());\n    tarArchiveEntry0.parseTarHeader((byte[]) null, zipEncoding0);\n}",
    "testName" : "test064200"
  },
  "test086375" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test086375() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) 75, true);\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test086375"
  },
  "test101455" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101455() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\");\n    tarArchiveEntry0.equals((Object) tarArchiveEntry0);\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test101455"
  },
  "test101458" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101458() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\");\n    tarArchiveEntry0.equals((Object) tarArchiveEntry0);\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test101458"
  },
  "test101457" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101457() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\");\n    tarArchiveEntry0.equals((Object) tarArchiveEntry0);\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test101457"
  },
  "test074271" : {
    "methodSignature" : "public boolean isFIFO()",
    "methodName" : "isFIFO",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test074271() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000/\");\n    boolean boolean0 = tarArchiveEntry0.isFile();\n    tarArchiveEntry0.isFIFO();\n}",
    "testName" : "test074271"
  },
  "test074270" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test074270() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000/\");\n    boolean boolean0 = tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test074270"
  },
  "test00318" : {
    "methodSignature" : "public boolean isGNULongLinkEntry()",
    "methodName" : "isGNULongLinkEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00318() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000\", (byte) 82);\n    tarArchiveEntry0.isLink();\n    tarArchiveEntry0.isGNULongLinkEntry();\n}",
    "testName" : "test00318"
  },
  "test039140" : {
    "methodSignature" : "public void setModTime(final Date time)",
    "methodName" : "setModTime",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test039140() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Z;R\", (byte) (-47), false);\n    tarArchiveEntry0.setModTime((Date) null);\n}",
    "testName" : "test039140"
  },
  "test00319" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00319() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000\", (byte) 82);\n    tarArchiveEntry0.isLink();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test00319"
  },
  "test074272" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test074272() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000/\");\n    boolean boolean0 = tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test074272"
  },
  "test065205" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test065205() throws Throwable {\n    File file0 = MockFile.createTempFile(\"f.22n?U7cyST-\", \"f.22n?U7cyST-\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    tarArchiveEntry0.getDirectoryEntries();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test065205"
  },
  "test065204" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test065204() throws Throwable {\n    File file0 = MockFile.createTempFile(\"f.22n?U7cyST-\", \"f.22n?U7cyST-\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    tarArchiveEntry0.getDirectoryEntries();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test065204"
  },
  "test065203" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test065203() throws Throwable {\n    File file0 = MockFile.createTempFile(\"f.22n?U7cyST-\", \"f.22n?U7cyST-\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    tarArchiveEntry0.getDirectoryEntries();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test065203"
  },
  "test040141" : {
    "methodSignature" : "public void parseTarHeader(final byte[] header, final ZipEncoding encoding) throws IOException",
    "methodName" : "parseTarHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test040141() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-95));\n    byte[] byteArray0 = new byte[3];\n    ZipEncoding zipEncoding0 = mock(ZipEncoding.class, new ViolatedAssumptionAnswer());\n    tarArchiveEntry0.parseTarHeader(byteArray0, zipEncoding0);\n}",
    "testName" : "test040141"
  },
  "test065202" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test065202() throws Throwable {\n    File file0 = MockFile.createTempFile(\"f.22n?U7cyST-\", \"f.22n?U7cyST-\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    tarArchiveEntry0.getDirectoryEntries();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test065202"
  },
  "test065201" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test065201() throws Throwable {\n    File file0 = MockFile.createTempFile(\"f.22n?U7cyST-\", \"f.22n?U7cyST-\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    tarArchiveEntry0.getDirectoryEntries();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test065201"
  },
  "test029119" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test029119() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"Minor device number is out of range: \");\n    tarArchiveEntry0.getFile();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test029119"
  },
  "test00423" : {
    "methodSignature" : "public boolean isSymbolicLink()",
    "methodName" : "isSymbolicLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00423() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"\");\n    boolean boolean0 = tarArchiveEntry0.isSymbolicLink();\n}",
    "testName" : "test00423"
  },
  "test00426" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00426() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"\");\n    boolean boolean0 = tarArchiveEntry0.isSymbolicLink();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test00426"
  },
  "test00427" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00427() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"\");\n    boolean boolean0 = tarArchiveEntry0.isSymbolicLink();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test00427"
  },
  "test01999" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01999() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    tarArchiveEntry0.setMode((-3501));\n    int int0 = tarArchiveEntry0.getMode();\n}",
    "testName" : "test01999"
  },
  "test00424" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00424() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"\");\n    boolean boolean0 = tarArchiveEntry0.isSymbolicLink();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test00424"
  },
  "test029117" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test029117() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"Minor device number is out of range: \");\n    tarArchiveEntry0.getFile();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test029117"
  },
  "test00425" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00425() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"\");\n    boolean boolean0 = tarArchiveEntry0.isSymbolicLink();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test00425"
  },
  "test029118" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test029118() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"Minor device number is out of range: \");\n    tarArchiveEntry0.getFile();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test029118"
  },
  "test00428" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00428() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"\");\n    boolean boolean0 = tarArchiveEntry0.isSymbolicLink();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test00428"
  },
  "test061192" : {
    "methodSignature" : "public void parseTarHeader(final byte[] header)",
    "methodName" : "parseTarHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test061192() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"cu(%MZ>C\");\n    byte[] byteArray0 = new byte[5];\n    tarArchiveEntry0.parseTarHeader(byteArray0);\n}",
    "testName" : "test061192"
  },
  "test029120" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test029120() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"Minor device number is out of range: \");\n    tarArchiveEntry0.getFile();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test029120"
  },
  "test029121" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test029121() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"Minor device number is out of range: \");\n    tarArchiveEntry0.getFile();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test029121"
  },
  "test00532" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00532() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Z$$4i|&L\\\"`qI8p\");\n    boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test00532"
  },
  "test00533" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00533() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Z$$4i|&L\\\"`qI8p\");\n    boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test00533"
  },
  "test00530" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00530() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Z$$4i|&L\\\"`qI8p\");\n    boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test00530"
  },
  "test00531" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00531() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Z$$4i|&L\\\"`qI8p\");\n    boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test00531"
  },
  "test098440" : {
    "methodSignature" : "void fillGNUSparse1xData(final Map<String, String> headers)",
    "methodName" : "fillGNUSparse1xData",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098440() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    Map<String, String> map0 = ZoneId.SHORT_IDS;\n    tarArchiveEntry0.fillGNUSparse1xData(map0);\n}",
    "testName" : "test098440"
  },
  "test051152" : {
    "methodSignature" : "public TarArchiveEntry(final String name, final byte linkFlag)",
    "methodName" : "TarArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test051152() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = null;\n    tarArchiveEntry0 = new TarArchiveEntry((String) null, (byte) (-53));\n}",
    "testName" : "test051152"
  },
  "test059188" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test059188() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    Date date0 = tarArchiveEntry0.getModTime();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test059188"
  },
  "test059187" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test059187() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    Date date0 = tarArchiveEntry0.getModTime();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test059187"
  },
  "test059186" : {
    "methodSignature" : "public boolean isGNULongNameEntry()",
    "methodName" : "isGNULongNameEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test059186() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    Date date0 = tarArchiveEntry0.getModTime();\n    tarArchiveEntry0.isGNULongNameEntry();\n}",
    "testName" : "test059186"
  },
  "test059185" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test059185() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    Date date0 = tarArchiveEntry0.getModTime();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test059185"
  },
  "test027110" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test027110() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Cs#\");\n    tarArchiveEntry0.setGroupId((-1850L));\n    int int0 = tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test027110"
  },
  "test109526" : {
    "methodSignature" : "public boolean isSparse()",
    "methodName" : "isSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109526() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    long long0 = tarArchiveEntry0.getLongGroupId();\n    tarArchiveEntry0.isSparse();\n}",
    "testName" : "test109526"
  },
  "test109525" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109525() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    long long0 = tarArchiveEntry0.getLongGroupId();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test109525"
  },
  "test106496" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106496() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    String string0 = tarArchiveEntry0.getLinkName();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test106496"
  },
  "test109522" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109522() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    long long0 = tarArchiveEntry0.getLongGroupId();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test109522"
  },
  "test109521" : {
    "methodSignature" : "public boolean isSymbolicLink()",
    "methodName" : "isSymbolicLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109521() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    long long0 = tarArchiveEntry0.getLongGroupId();\n    tarArchiveEntry0.isSymbolicLink();\n}",
    "testName" : "test109521"
  },
  "test073257" : {
    "methodSignature" : "public boolean isCharacterDevice()",
    "methodName" : "isCharacterDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test073257() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isSymbolicLink();\n    tarArchiveEntry0.isCharacterDevice();\n}",
    "testName" : "test073257"
  },
  "test109524" : {
    "methodSignature" : "public boolean isPaxHeader()",
    "methodName" : "isPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109524() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    long long0 = tarArchiveEntry0.getLongGroupId();\n    tarArchiveEntry0.isPaxHeader();\n}",
    "testName" : "test109524"
  },
  "test073258" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test073258() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isSymbolicLink();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test073258"
  },
  "test109523" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109523() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    long long0 = tarArchiveEntry0.getLongGroupId();\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test109523"
  },
  "test073259" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test073259() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isSymbolicLink();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test073259"
  },
  "test106492" : {
    "methodSignature" : "public boolean isSymbolicLink()",
    "methodName" : "isSymbolicLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106492() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    String string0 = tarArchiveEntry0.getLinkName();\n    tarArchiveEntry0.isSymbolicLink();\n}",
    "testName" : "test106492"
  },
  "test106493" : {
    "methodSignature" : "public String getLinkName()",
    "methodName" : "getLinkName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106493() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    String string0 = tarArchiveEntry0.getLinkName();\n}",
    "testName" : "test106493"
  },
  "test106494" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106494() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    String string0 = tarArchiveEntry0.getLinkName();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test106494"
  },
  "test109520" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109520() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    long long0 = tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test109520"
  },
  "test106495" : {
    "methodSignature" : "public boolean isLink()",
    "methodName" : "isLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106495() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    String string0 = tarArchiveEntry0.getLinkName();\n    tarArchiveEntry0.isLink();\n}",
    "testName" : "test106495"
  },
  "test110529" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110529() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    int int0 = tarArchiveEntry0.getGroupId();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test110529"
  },
  "test106490" : {
    "methodSignature" : "public boolean isPaxHeader()",
    "methodName" : "isPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106490() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    String string0 = tarArchiveEntry0.getLinkName();\n    tarArchiveEntry0.isPaxHeader();\n}",
    "testName" : "test106490"
  },
  "test110528" : {
    "methodSignature" : "public boolean isGlobalPaxHeader()",
    "methodName" : "isGlobalPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110528() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    int int0 = tarArchiveEntry0.getGroupId();\n    tarArchiveEntry0.isGlobalPaxHeader();\n}",
    "testName" : "test110528"
  },
  "test106491" : {
    "methodSignature" : "public boolean isFIFO()",
    "methodName" : "isFIFO",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106491() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    String string0 = tarArchiveEntry0.getLinkName();\n    tarArchiveEntry0.isFIFO();\n}",
    "testName" : "test106491"
  },
  "test110527" : {
    "methodSignature" : "public boolean isFIFO()",
    "methodName" : "isFIFO",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110527() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    int int0 = tarArchiveEntry0.getGroupId();\n    tarArchiveEntry0.isFIFO();\n}",
    "testName" : "test110527"
  },
  "test059189" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test059189() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    Date date0 = tarArchiveEntry0.getModTime();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test059189"
  },
  "test085365" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test085365() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test085365"
  },
  "test085364" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test085364() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test085364"
  },
  "test085363" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test085363() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test085363"
  },
  "test085362" : {
    "methodSignature" : "public boolean isPaxHeader()",
    "methodName" : "isPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test085362() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();\n    tarArchiveEntry0.isPaxHeader();\n}",
    "testName" : "test085362"
  },
  "test085361" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test085361() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test085361"
  },
  "test085360" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test085360() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test085360"
  },
  "test038139" : {
    "methodSignature" : "public void setName(final String name)",
    "methodName" : "setName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test038139() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    tarArchiveEntry0.setName((String) null);\n}",
    "testName" : "test038139"
  },
  "test01177" : {
    "methodSignature" : "public boolean isStarSparse()",
    "methodName" : "isStarSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01177() throws Throwable {\n    MockFile mockFile0 = new MockFile((File) null, \"GNU.sparse.realsize\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"GNU.sparse.realsize\");\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    tarArchiveEntry0.fillStarSparseData(hashMap0);\n    boolean boolean0 = tarArchiveEntry0.isStarSparse();\n}",
    "testName" : "test01177"
  },
  "test01176" : {
    "methodSignature" : "public boolean isSparse()",
    "methodName" : "isSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01176() throws Throwable {\n    MockFile mockFile0 = new MockFile((File) null, \"GNU.sparse.realsize\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"GNU.sparse.realsize\");\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    tarArchiveEntry0.fillStarSparseData(hashMap0);\n    boolean boolean0 = tarArchiveEntry0.isStarSparse();\n    tarArchiveEntry0.isSparse();\n}",
    "testName" : "test01176"
  },
  "test085367" : {
    "methodSignature" : "public boolean isLink()",
    "methodName" : "isLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test085367() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();\n    tarArchiveEntry0.isLink();\n}",
    "testName" : "test085367"
  },
  "test085366" : {
    "methodSignature" : "public boolean isGNULongNameEntry()",
    "methodName" : "isGNULongNameEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test085366() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();\n}",
    "testName" : "test085366"
  },
  "test122613" : {
    "methodSignature" : "public TarArchiveEntry(final byte[] headerBuf)",
    "methodName" : "TarArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test122613() throws Throwable {\n    byte[] byteArray0 = new byte[3];\n    TarArchiveEntry tarArchiveEntry0 = null;\n    tarArchiveEntry0 = new TarArchiveEntry(byteArray0);\n}",
    "testName" : "test122613"
  },
  "test073260" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test073260() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isSymbolicLink();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test073260"
  },
  "test073261" : {
    "methodSignature" : "public boolean isSymbolicLink()",
    "methodName" : "isSymbolicLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test073261() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isSymbolicLink();\n}",
    "testName" : "test073261"
  },
  "test073262" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test073262() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isSymbolicLink();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test073262"
  },
  "test073263" : {
    "methodSignature" : "public boolean isGNULongNameEntry()",
    "methodName" : "isGNULongNameEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test073263() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isSymbolicLink();\n    tarArchiveEntry0.isGNULongNameEntry();\n}",
    "testName" : "test073263"
  },
  "test073264" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test073264() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isSymbolicLink();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test073264"
  },
  "test01280" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01280() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, \", \");\n    boolean boolean0 = tarArchiveEntry0.isDescendent(tarArchiveEntry1);\n    tarArchiveEntry1.getDevMinor();\n}",
    "testName" : "test01280"
  },
  "test060191" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test060191() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    tarArchiveEntry0.setUserId(1L);\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test060191"
  },
  "test123619" : {
    "methodSignature" : "public String getUserName()",
    "methodName" : "getUserName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test123619() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    String string0 = tarArchiveEntry0.getUserName();\n}",
    "testName" : "test123619"
  },
  "test01282" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01282() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, \", \");\n    boolean boolean0 = tarArchiveEntry0.isDescendent(tarArchiveEntry1);\n    tarArchiveEntry1.getLongUserId();\n}",
    "testName" : "test01282"
  },
  "test123618" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test123618() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    String string0 = tarArchiveEntry0.getUserName();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test123618"
  },
  "test01281" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01281() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, \", \");\n    boolean boolean0 = tarArchiveEntry0.isDescendent(tarArchiveEntry1);\n    tarArchiveEntry1.getGroupId();\n}",
    "testName" : "test01281"
  },
  "test123617" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test123617() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    String string0 = tarArchiveEntry0.getUserName();\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test123617"
  },
  "test119592" : {
    "methodSignature" : "public boolean isSparse()",
    "methodName" : "isSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119592() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isSparse();\n}",
    "testName" : "test119592"
  },
  "test123616" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test123616() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    String string0 = tarArchiveEntry0.getUserName();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test123616"
  },
  "test119591" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119591() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isSparse();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test119591"
  },
  "test123615" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test123615() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    String string0 = tarArchiveEntry0.getUserName();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test123615"
  },
  "test119590" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119590() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isSparse();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test119590"
  },
  "test123614" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test123614() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    String string0 = tarArchiveEntry0.getUserName();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test123614"
  },
  "test01279" : {
    "methodSignature" : "public boolean isDescendent(final TarArchiveEntry desc)",
    "methodName" : "isDescendent",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01279() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, \", \");\n    boolean boolean0 = tarArchiveEntry0.isDescendent(tarArchiveEntry1);\n}",
    "testName" : "test01279"
  },
  "test01278" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01278() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, \", \");\n    boolean boolean0 = tarArchiveEntry0.isDescendent(tarArchiveEntry1);\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test01278"
  },
  "test050151" : {
    "methodSignature" : "public TarArchiveEntry(final String name, final byte linkFlag, final boolean preserveLeadingSlashes)",
    "methodName" : "TarArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test050151() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = null;\n    tarArchiveEntry0 = new TarArchiveEntry((String) null, (byte) 37, true);\n}",
    "testName" : "test050151"
  },
  "test119585" : {
    "methodSignature" : "public boolean isGNULongNameEntry()",
    "methodName" : "isGNULongNameEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119585() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isSparse();\n    tarArchiveEntry0.isGNULongNameEntry();\n}",
    "testName" : "test119585"
  },
  "test119584" : {
    "methodSignature" : "public boolean isCharacterDevice()",
    "methodName" : "isCharacterDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119584() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isSparse();\n    tarArchiveEntry0.isCharacterDevice();\n}",
    "testName" : "test119584"
  },
  "test119583" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119583() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isSparse();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test119583"
  },
  "test119589" : {
    "methodSignature" : "public boolean isBlockDevice()",
    "methodName" : "isBlockDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119589() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isSparse();\n    tarArchiveEntry0.isBlockDevice();\n}",
    "testName" : "test119589"
  },
  "test119588" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119588() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isSparse();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test119588"
  },
  "test119587" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119587() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isSparse();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test119587"
  },
  "test119586" : {
    "methodSignature" : "public boolean isPaxHeader()",
    "methodName" : "isPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119586() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    boolean boolean0 = tarArchiveEntry0.isSparse();\n    tarArchiveEntry0.isPaxHeader();\n}",
    "testName" : "test119586"
  },
  "test049150" : {
    "methodSignature" : "public TarArchiveEntry(String name, final boolean preserveLeadingSlashes)",
    "methodName" : "TarArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test049150() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = null;\n    tarArchiveEntry0 = new TarArchiveEntry((String) null, false);\n}",
    "testName" : "test049150"
  },
  "test028111" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test028111() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    tarArchiveEntry0.getFile();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test028111"
  },
  "test059190" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test059190() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    Date date0 = tarArchiveEntry0.getModTime();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test059190"
  },
  "test028112" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test028112() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    tarArchiveEntry0.getFile();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test028112"
  },
  "test028113" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test028113() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    tarArchiveEntry0.getFile();\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test028113"
  },
  "test107497" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107497() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    long long0 = tarArchiveEntry0.getRealSize();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test107497"
  },
  "test110533" : {
    "methodSignature" : "public boolean isLink()",
    "methodName" : "isLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110533() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    int int0 = tarArchiveEntry0.getGroupId();\n    tarArchiveEntry0.isLink();\n}",
    "testName" : "test110533"
  },
  "test097432" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097432() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"bXJ`I2+'9,vz!Fg?*\", true);\n    long long0 = tarArchiveEntry0.getLongUserId();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test097432"
  },
  "test107498" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107498() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    long long0 = tarArchiveEntry0.getRealSize();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test107498"
  },
  "test110532" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110532() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    int int0 = tarArchiveEntry0.getGroupId();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test110532"
  },
  "test107499" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107499() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    long long0 = tarArchiveEntry0.getRealSize();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test107499"
  },
  "test110531" : {
    "methodSignature" : "public boolean isBlockDevice()",
    "methodName" : "isBlockDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110531() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    int int0 = tarArchiveEntry0.getGroupId();\n    tarArchiveEntry0.isBlockDevice();\n}",
    "testName" : "test110531"
  },
  "test110530" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110530() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    int int0 = tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test110530"
  },
  "test028114" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test028114() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    tarArchiveEntry0.getFile();\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test028114"
  },
  "test028115" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test028115() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    tarArchiveEntry0.getFile();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test028115"
  },
  "test028116" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test028116() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    tarArchiveEntry0.getFile();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test028116"
  },
  "test097439" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097439() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"bXJ`I2+'9,vz!Fg?*\", true);\n    long long0 = tarArchiveEntry0.getLongUserId();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test097439"
  },
  "test097437" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097437() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"bXJ`I2+'9,vz!Fg?*\", true);\n    long long0 = tarArchiveEntry0.getLongUserId();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test097437"
  },
  "test097438" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097438() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"bXJ`I2+'9,vz!Fg?*\", true);\n    long long0 = tarArchiveEntry0.getLongUserId();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test097438"
  },
  "test097435" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097435() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"bXJ`I2+'9,vz!Fg?*\", true);\n    long long0 = tarArchiveEntry0.getLongUserId();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test097435"
  },
  "test097436" : {
    "methodSignature" : "public boolean isLink()",
    "methodName" : "isLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097436() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"bXJ`I2+'9,vz!Fg?*\", true);\n    long long0 = tarArchiveEntry0.getLongUserId();\n    tarArchiveEntry0.isLink();\n}",
    "testName" : "test097436"
  },
  "test097433" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097433() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"bXJ`I2+'9,vz!Fg?*\", true);\n    long long0 = tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test097433"
  },
  "test097434" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097434() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"bXJ`I2+'9,vz!Fg?*\", true);\n    long long0 = tarArchiveEntry0.getLongUserId();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test097434"
  },
  "test058175" : {
    "methodSignature" : "public boolean isLink()",
    "methodName" : "isLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test058175() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"EgTf$\", true);\n    tarArchiveEntry0.isPaxGNUSparse();\n    tarArchiveEntry0.isLink();\n}",
    "testName" : "test058175"
  },
  "test058176" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test058176() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"EgTf$\", true);\n    tarArchiveEntry0.isPaxGNUSparse();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test058176"
  },
  "test01383" : {
    "methodSignature" : "public String getUserName()",
    "methodName" : "getUserName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01383() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\":'^od||M },BT6w\");\n    tarArchiveEntry0.setUserName(\":'^od||M },BT6w\");\n    tarArchiveEntry0.getUserName();\n    tarArchiveEntry0.getUserName();\n}",
    "testName" : "test01383"
  },
  "test111535" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111535() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.isDescendent(tarArchiveEntry0);\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test111535"
  },
  "test111536" : {
    "methodSignature" : "public boolean isBlockDevice()",
    "methodName" : "isBlockDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111536() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.isDescendent(tarArchiveEntry0);\n    tarArchiveEntry0.isBlockDevice();\n}",
    "testName" : "test111536"
  },
  "test111537" : {
    "methodSignature" : "public boolean isSymbolicLink()",
    "methodName" : "isSymbolicLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111537() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.isDescendent(tarArchiveEntry0);\n    tarArchiveEntry0.isSymbolicLink();\n}",
    "testName" : "test111537"
  },
  "test111538" : {
    "methodSignature" : "public boolean isGlobalPaxHeader()",
    "methodName" : "isGlobalPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111538() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.isDescendent(tarArchiveEntry0);\n    tarArchiveEntry0.isGlobalPaxHeader();\n}",
    "testName" : "test111538"
  },
  "test026108" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test026108() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    tarArchiveEntry0.setIds((-3501), 4098);\n    int int0 = tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test026108"
  },
  "test111539" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111539() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.isDescendent(tarArchiveEntry0);\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test111539"
  },
  "test058179" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test058179() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"EgTf$\", true);\n    tarArchiveEntry0.isPaxGNUSparse();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test058179"
  },
  "test058177" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test058177() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"EgTf$\", true);\n    tarArchiveEntry0.isPaxGNUSparse();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test058177"
  },
  "test058178" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test058178() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"EgTf$\", true);\n    tarArchiveEntry0.isPaxGNUSparse();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test058178"
  },
  "test111534" : {
    "methodSignature" : "public boolean isCharacterDevice()",
    "methodName" : "isCharacterDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111534() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.isDescendent(tarArchiveEntry0);\n    tarArchiveEntry0.isCharacterDevice();\n}",
    "testName" : "test111534"
  },
  "test120596" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test120596() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    int int0 = tarArchiveEntry0.getMode();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test120596"
  },
  "test120595" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test120595() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    int int0 = tarArchiveEntry0.getMode();\n}",
    "testName" : "test120595"
  },
  "test120598" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test120598() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    int int0 = tarArchiveEntry0.getMode();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test120598"
  },
  "test120597" : {
    "methodSignature" : "public boolean isLink()",
    "methodName" : "isLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test120597() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    int int0 = tarArchiveEntry0.getMode();\n    tarArchiveEntry0.isLink();\n}",
    "testName" : "test120597"
  },
  "test123620" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test123620() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    String string0 = tarArchiveEntry0.getUserName();\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test123620"
  },
  "test120594" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test120594() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    int int0 = tarArchiveEntry0.getMode();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test120594"
  },
  "test120593" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test120593() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    int int0 = tarArchiveEntry0.getMode();\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test120593"
  },
  "test084359" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test084359() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isPaxHeader();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test084359"
  },
  "test084358" : {
    "methodSignature" : "public boolean isPaxHeader()",
    "methodName" : "isPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test084358() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isPaxHeader();\n}",
    "testName" : "test084358"
  },
  "test084357" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test084357() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isPaxHeader();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test084357"
  },
  "test084356" : {
    "methodSignature" : "public boolean isGNUSparse()",
    "methodName" : "isGNUSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test084356() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isPaxHeader();\n    tarArchiveEntry0.isGNUSparse();\n}",
    "testName" : "test084356"
  },
  "test120599" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test120599() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    int int0 = tarArchiveEntry0.getMode();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test120599"
  },
  "test084355" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test084355() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isPaxHeader();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test084355"
  },
  "test084354" : {
    "methodSignature" : "public boolean isLink()",
    "methodName" : "isLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test084354() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isPaxHeader();\n    tarArchiveEntry0.isLink();\n}",
    "testName" : "test084354"
  },
  "test072254" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test072254() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    boolean boolean0 = tarArchiveEntry0.isLink();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test072254"
  },
  "test072255" : {
    "methodSignature" : "public boolean isLink()",
    "methodName" : "isLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test072255() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    boolean boolean0 = tarArchiveEntry0.isLink();\n}",
    "testName" : "test072255"
  },
  "test072256" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test072256() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    boolean boolean0 = tarArchiveEntry0.isLink();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test072256"
  },
  "test072251" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test072251() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    boolean boolean0 = tarArchiveEntry0.isLink();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test072251"
  },
  "test072252" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test072252() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    boolean boolean0 = tarArchiveEntry0.isLink();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test072252"
  },
  "test072253" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test072253() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    boolean boolean0 = tarArchiveEntry0.isLink();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test072253"
  },
  "test083351" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test083351() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test083351"
  },
  "test083352" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test083352() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test083352"
  },
  "test083350" : {
    "methodSignature" : "public boolean isSparse()",
    "methodName" : "isSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test083350() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();\n    tarArchiveEntry0.isSparse();\n}",
    "testName" : "test083350"
  },
  "test037138" : {
    "methodSignature" : "public void writeEntryHeader(final byte[] outbuf)",
    "methodName" : "writeEntryHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test037138() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"@&<5ZiR]4;W\", (byte) 103);\n    tarArchiveEntry0.writeEntryHeader((byte[]) null);\n}",
    "testName" : "test037138"
  },
  "test096429" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096429() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    tarArchiveEntry0.setModTime((-2697L));\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test096429"
  },
  "test01485" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01485() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\", \", (byte) (-28), true);\n    tarArchiveEntry0.setIds(32, (byte) (-28));\n    int int0 = tarArchiveEntry0.getUserId();\n}",
    "testName" : "test01485"
  },
  "test01484" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01484() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\", \", (byte) (-28), true);\n    tarArchiveEntry0.setIds(32, (byte) (-28));\n    int int0 = tarArchiveEntry0.getUserId();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test01484"
  },
  "test083353" : {
    "methodSignature" : "public boolean isFIFO()",
    "methodName" : "isFIFO",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test083353() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();\n    tarArchiveEntry0.isFIFO();\n}",
    "testName" : "test083353"
  },
  "test096430" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096430() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    tarArchiveEntry0.setModTime((-2697L));\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test096430"
  },
  "test096431" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096431() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    tarArchiveEntry0.setModTime((-2697L));\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test096431"
  },
  "test071250" : {
    "methodSignature" : "public boolean isLink()",
    "methodName" : "isLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test071250() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"+ c\\\"3u\", (byte) 49, false);\n    boolean boolean0 = tarArchiveEntry0.isLink();\n}",
    "testName" : "test071250"
  },
  "test058182" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test058182() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"EgTf$\", true);\n    tarArchiveEntry0.isPaxGNUSparse();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test058182"
  },
  "test058183" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test058183() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"EgTf$\", true);\n    tarArchiveEntry0.isPaxGNUSparse();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test058183"
  },
  "test058180" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test058180() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"EgTf$\", true);\n    tarArchiveEntry0.isPaxGNUSparse();\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test058180"
  },
  "test058181" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test058181() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"EgTf$\", true);\n    tarArchiveEntry0.isPaxGNUSparse();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test058181"
  },
  "test01586" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01586() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"`711./t<5S\", (byte) (-28), true);\n    tarArchiveEntry0.setIds((-2431), (byte) (-28));\n    int int0 = tarArchiveEntry0.getUserId();\n}",
    "testName" : "test01586"
  },
  "test027109" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test027109() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Cs#\");\n    tarArchiveEntry0.setGroupId((-1850L));\n    int int0 = tarArchiveEntry0.getGroupId();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test027109"
  },
  "test048149" : {
    "methodSignature" : "public TarArchiveEntry(final byte[] headerBuf)",
    "methodName" : "TarArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test048149() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = null;\n    tarArchiveEntry0 = new TarArchiveEntry((byte[]) null);\n}",
    "testName" : "test048149"
  },
  "test096427" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096427() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    tarArchiveEntry0.setModTime((-2697L));\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test096427"
  },
  "test096428" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096428() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    tarArchiveEntry0.setModTime((-2697L));\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test096428"
  },
  "test096425" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096425() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    tarArchiveEntry0.setModTime((-2697L));\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test096425"
  },
  "test111540" : {
    "methodSignature" : "public boolean isPaxHeader()",
    "methodName" : "isPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111540() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.isDescendent(tarArchiveEntry0);\n    tarArchiveEntry0.isPaxHeader();\n}",
    "testName" : "test111540"
  },
  "test096426" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096426() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    tarArchiveEntry0.setModTime((-2697L));\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test096426"
  },
  "test111541" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111541() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.isDescendent(tarArchiveEntry0);\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test111541"
  },
  "test035136" : {
    "methodSignature" : "public void writeEntryHeader(final byte[] outbuf, final ZipEncoding encoding, final boolean starMode) throws IOException",
    "methodName" : "writeEntryHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test035136() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    ZipEncoding zipEncoding0 = mock(ZipEncoding.class, new ViolatedAssumptionAnswer());\n    doReturn((ByteBuffer) null).when(zipEncoding0).encode(anyString());\n    tarArchiveEntry0.writeEntryHeader((byte[]) null, zipEncoding0, true);\n}",
    "testName" : "test035136"
  },
  "test107505" : {
    "methodSignature" : "public boolean isLink()",
    "methodName" : "isLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107505() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    long long0 = tarArchiveEntry0.getRealSize();\n    tarArchiveEntry0.isLink();\n}",
    "testName" : "test107505"
  },
  "test046147" : {
    "methodSignature" : "void fillGNUSparse0xData(final Map<String, String> headers)",
    "methodName" : "fillGNUSparse0xData",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test046147() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) 90, true);\n    tarArchiveEntry0.fillGNUSparse0xData((Map<String, String>) null);\n}",
    "testName" : "test046147"
  },
  "test107501" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107501() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    long long0 = tarArchiveEntry0.getRealSize();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test107501"
  },
  "test120600" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test120600() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    int int0 = tarArchiveEntry0.getMode();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test120600"
  },
  "test107502" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107502() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    long long0 = tarArchiveEntry0.getRealSize();\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test107502"
  },
  "test107503" : {
    "methodSignature" : "public long getRealSize()",
    "methodName" : "getRealSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107503() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    long long0 = tarArchiveEntry0.getRealSize();\n}",
    "testName" : "test107503"
  },
  "test107504" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107504() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    long long0 = tarArchiveEntry0.getRealSize();\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test107504"
  },
  "test120601" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test120601() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    int int0 = tarArchiveEntry0.getMode();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test120601"
  },
  "test107500" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107500() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    long long0 = tarArchiveEntry0.getRealSize();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test107500"
  },
  "test104474" : {
    "methodSignature" : "public TarArchiveEntry(final byte[] headerBuf, final ZipEncoding encoding) throws IOException",
    "methodName" : "TarArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104474() throws Throwable {\n    ZipEncoding zipEncoding0 = mock(ZipEncoding.class, new ViolatedAssumptionAnswer());\n    TarArchiveEntry tarArchiveEntry0 = null;\n    tarArchiveEntry0 = new TarArchiveEntry((byte[]) null, zipEncoding0);\n}",
    "testName" : "test104474"
  },
  "test057169" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test057169() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"~;YwP'q|e8v# {(3\", \"v0?>bzMh%/\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"]\");\n    boolean boolean0 = tarArchiveEntry0.isGNUSparse();\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test057169"
  },
  "test116570" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test116570() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"Minor device number is out of range: \");\n    MockFile.createTempFile(\" exceeds maximum signed long\", \", /\", (File) mockFile0);\n    tarArchiveEntry0.getDirectoryEntries();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test116570"
  },
  "test116571" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test116571() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"Minor device number is out of range: \");\n    MockFile.createTempFile(\" exceeds maximum signed long\", \", /\", (File) mockFile0);\n    tarArchiveEntry0.getDirectoryEntries();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test116571"
  },
  "test083348" : {
    "methodSignature" : "public boolean isGlobalPaxHeader()",
    "methodName" : "isGlobalPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test083348() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();\n}",
    "testName" : "test083348"
  },
  "test083349" : {
    "methodSignature" : "public boolean isGNULongNameEntry()",
    "methodName" : "isGNULongNameEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test083349() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();\n    tarArchiveEntry0.isGNULongNameEntry();\n}",
    "testName" : "test083349"
  },
  "test083346" : {
    "methodSignature" : "public boolean isBlockDevice()",
    "methodName" : "isBlockDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test083346() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();\n    tarArchiveEntry0.isBlockDevice();\n}",
    "testName" : "test083346"
  },
  "test083347" : {
    "methodSignature" : "public boolean isLink()",
    "methodName" : "isLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test083347() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();\n    tarArchiveEntry0.isLink();\n}",
    "testName" : "test083347"
  },
  "test083344" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test083344() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test083344"
  },
  "test083345" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test083345() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test083345"
  },
  "test025107" : {
    "methodSignature" : "public String getGroupName()",
    "methodName" : "getGroupName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test025107() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"Minor device number is out of range: \");\n    tarArchiveEntry0.setNames(\"uh=IXCm.X*%\", \" exceeds maximum signed long\");\n    tarArchiveEntry0.getGroupName();\n    tarArchiveEntry0.getGroupName();\n}",
    "testName" : "test025107"
  },
  "test071249" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test071249() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"+ c\\\"3u\", (byte) 49, false);\n    boolean boolean0 = tarArchiveEntry0.isLink();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test071249"
  },
  "test071248" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test071248() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"+ c\\\"3u\", (byte) 49, false);\n    boolean boolean0 = tarArchiveEntry0.isLink();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test071248"
  },
  "test071247" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test071247() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"+ c\\\"3u\", (byte) 49, false);\n    boolean boolean0 = tarArchiveEntry0.isLink();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test071247"
  },
  "test071246" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test071246() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"+ c\\\"3u\", (byte) 49, false);\n    boolean boolean0 = tarArchiveEntry0.isLink();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test071246"
  },
  "test082340" : {
    "methodSignature" : "public boolean isCharacterDevice()",
    "methodName" : "isCharacterDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test082340() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.isCharacterDevice();\n}",
    "testName" : "test082340"
  },
  "test117572" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test117572() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"\");\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test117572"
  },
  "test070239" : {
    "methodSignature" : "public boolean isGlobalPaxHeader()",
    "methodName" : "isGlobalPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test070239() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isCharacterDevice();\n    tarArchiveEntry0.isGlobalPaxHeader();\n}",
    "testName" : "test070239"
  },
  "test117573" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test117573() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"\");\n    tarArchiveEntry0.setName(\"\");\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test117573"
  },
  "test070238" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test070238() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isCharacterDevice();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test070238"
  },
  "test082343" : {
    "methodSignature" : "public boolean isLink()",
    "methodName" : "isLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test082343() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.isLink();\n}",
    "testName" : "test082343"
  },
  "test082341" : {
    "methodSignature" : "public boolean isBlockDevice()",
    "methodName" : "isBlockDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test082341() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.isBlockDevice();\n}",
    "testName" : "test082341"
  },
  "test082342" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test082342() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test082342"
  },
  "test070240" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test070240() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isCharacterDevice();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test070240"
  },
  "test047148" : {
    "methodSignature" : "public TarArchiveEntry(final byte[] headerBuf, final ZipEncoding encoding) throws IOException",
    "methodName" : "TarArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test047148() throws Throwable {\n    byte[] byteArray0 = new byte[2];\n    TarArchiveEntry tarArchiveEntry0 = null;\n    tarArchiveEntry0 = new TarArchiveEntry(byteArray0, (ZipEncoding) null);\n}",
    "testName" : "test047148"
  },
  "test082338" : {
    "methodSignature" : "public boolean isGNULongNameEntry()",
    "methodName" : "isGNULongNameEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test082338() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.isGNULongNameEntry();\n}",
    "testName" : "test082338"
  },
  "test082339" : {
    "methodSignature" : "public boolean isSymbolicLink()",
    "methodName" : "isSymbolicLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test082339() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.isSymbolicLink();\n}",
    "testName" : "test082339"
  },
  "test092399" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092399() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"TmT\");\n    tarArchiveEntry0.equals((Object) \"\");\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test092399"
  },
  "test095424" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095424() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    tarArchiveEntry0.getFile();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test095424"
  },
  "test070245" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test070245() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isCharacterDevice();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test070245"
  },
  "test070244" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test070244() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isCharacterDevice();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test070244"
  },
  "test095421" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095421() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    tarArchiveEntry0.getFile();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test095421"
  },
  "test070243" : {
    "methodSignature" : "public boolean isCharacterDevice()",
    "methodName" : "isCharacterDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test070243() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isCharacterDevice();\n}",
    "testName" : "test070243"
  },
  "test070242" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test070242() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isCharacterDevice();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test070242"
  },
  "test095423" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095423() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    tarArchiveEntry0.getFile();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test095423"
  },
  "test070241" : {
    "methodSignature" : "public boolean isBlockDevice()",
    "methodName" : "isBlockDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test070241() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    boolean boolean0 = tarArchiveEntry0.isCharacterDevice();\n    tarArchiveEntry0.isBlockDevice();\n}",
    "testName" : "test070241"
  },
  "test095422" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095422() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    tarArchiveEntry0.getFile();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test095422"
  },
  "test057174" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test057174() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"~;YwP'q|e8v# {(3\", \"v0?>bzMh%/\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"]\");\n    boolean boolean0 = tarArchiveEntry0.isGNUSparse();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test057174"
  },
  "test057172" : {
    "methodSignature" : "public boolean isGNUSparse()",
    "methodName" : "isGNUSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test057172() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"~;YwP'q|e8v# {(3\", \"v0?>bzMh%/\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"]\");\n    boolean boolean0 = tarArchiveEntry0.isGNUSparse();\n}",
    "testName" : "test057172"
  },
  "test057173" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test057173() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"~;YwP'q|e8v# {(3\", \"v0?>bzMh%/\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"]\");\n    boolean boolean0 = tarArchiveEntry0.isGNUSparse();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test057173"
  },
  "test057170" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test057170() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"~;YwP'q|e8v# {(3\", \"v0?>bzMh%/\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"]\");\n    boolean boolean0 = tarArchiveEntry0.isGNUSparse();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test057170"
  },
  "test036137" : {
    "methodSignature" : "public void writeEntryHeader(final byte[] outbuf, final ZipEncoding encoding, final boolean starMode) throws IOException",
    "methodName" : "writeEntryHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test036137() throws Throwable {\n    String string0 = \"4(7z< exM*tBz6;Us\";\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"4(7z< exM*tBz6;Us\", true);\n    byte[] byteArray0 = new byte[7];\n    byteArray0[0] = (byte) (-31);\n    byteArray0[1] = (byte) 21;\n    byte byte0 = (byte) 75;\n    byteArray0[2] = (byte) 75;\n    byteArray0[3] = (byte) 0;\n    tarArchiveEntry0.setUserId((int) (byte) (-31));\n    byteArray0[4] = (byte) 0;\n    byteArray0[5] = (byte) 51;\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    tarArchiveEntry0.fillStarSparseData(hashMap0);\n    byteArray0[6] = (byte) (-92);\n    ByteBuffer byteBuffer0 = ByteBuffer.allocate(1000);\n    ZipEncoding zipEncoding0 = mock(ZipEncoding.class, new ViolatedAssumptionAnswer());\n    doReturn(byteBuffer0, (ByteBuffer) null).when(zipEncoding0).encode(anyString());\n    tarArchiveEntry0.writeEntryHeader(byteArray0, zipEncoding0, true);\n}",
    "testName" : "test036137"
  },
  "test057171" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test057171() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"~;YwP'q|e8v# {(3\", \"v0?>bzMh%/\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"]\");\n    boolean boolean0 = tarArchiveEntry0.isGNUSparse();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test057171"
  },
  "test108507" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108507() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    tarArchiveEntry0.isExtended();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test108507"
  },
  "test105479" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105479() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    Date date0 = tarArchiveEntry0.getLastModifiedDate();\n    tarArchiveEntry0.setModTime(date0);\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test105479"
  },
  "test108506" : {
    "methodSignature" : "public boolean isGNULongLinkEntry()",
    "methodName" : "isGNULongLinkEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108506() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    tarArchiveEntry0.isExtended();\n    tarArchiveEntry0.isGNULongLinkEntry();\n}",
    "testName" : "test108506"
  },
  "test105478" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105478() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    Date date0 = tarArchiveEntry0.getLastModifiedDate();\n    tarArchiveEntry0.setModTime(date0);\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test105478"
  },
  "test108509" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108509() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    tarArchiveEntry0.isExtended();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test108509"
  },
  "test105477" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105477() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    Date date0 = tarArchiveEntry0.getLastModifiedDate();\n    tarArchiveEntry0.setModTime(date0);\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test105477"
  },
  "test108508" : {
    "methodSignature" : "public boolean isFIFO()",
    "methodName" : "isFIFO",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108508() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    tarArchiveEntry0.isExtended();\n    tarArchiveEntry0.isFIFO();\n}",
    "testName" : "test108508"
  },
  "test105476" : {
    "methodSignature" : "public boolean isGNULongLinkEntry()",
    "methodName" : "isGNULongLinkEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105476() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    Date date0 = tarArchiveEntry0.getLastModifiedDate();\n    tarArchiveEntry0.setModTime(date0);\n    tarArchiveEntry0.isGNULongLinkEntry();\n}",
    "testName" : "test105476"
  },
  "test105475" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105475() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    Date date0 = tarArchiveEntry0.getLastModifiedDate();\n    tarArchiveEntry0.setModTime(date0);\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test105475"
  },
  "test121610" : {
    "methodSignature" : "public boolean isSymbolicLink()",
    "methodName" : "isSymbolicLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121610() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\", \", (byte) (-28), true);\n    long long0 = tarArchiveEntry0.getSize();\n    tarArchiveEntry0.isSymbolicLink();\n}",
    "testName" : "test121610"
  },
  "test069229" : {
    "methodSignature" : "public boolean isSymbolicLink()",
    "methodName" : "isSymbolicLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test069229() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isBlockDevice();\n    tarArchiveEntry0.isSymbolicLink();\n}",
    "testName" : "test069229"
  },
  "test108518" : {
    "methodSignature" : "public boolean isCharacterDevice()",
    "methodName" : "isCharacterDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108518() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    tarArchiveEntry0.isExtended();\n    tarArchiveEntry0.isCharacterDevice();\n}",
    "testName" : "test108518"
  },
  "test108517" : {
    "methodSignature" : "public boolean isPaxHeader()",
    "methodName" : "isPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108517() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    tarArchiveEntry0.isExtended();\n    tarArchiveEntry0.isPaxHeader();\n}",
    "testName" : "test108517"
  },
  "test108514" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108514() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    tarArchiveEntry0.isExtended();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test108514"
  },
  "test108513" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108513() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    tarArchiveEntry0.isExtended();\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test108513"
  },
  "test108516" : {
    "methodSignature" : "public boolean isGNUSparse()",
    "methodName" : "isGNUSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108516() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    tarArchiveEntry0.isExtended();\n    tarArchiveEntry0.isGNUSparse();\n}",
    "testName" : "test108516"
  },
  "test121611" : {
    "methodSignature" : "public boolean isGNUSparse()",
    "methodName" : "isGNUSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121611() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\", \", (byte) (-28), true);\n    long long0 = tarArchiveEntry0.getSize();\n    tarArchiveEntry0.isGNUSparse();\n}",
    "testName" : "test121611"
  },
  "test108515" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108515() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    tarArchiveEntry0.isExtended();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test108515"
  },
  "test121612" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121612() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\", \", (byte) (-28), true);\n    long long0 = tarArchiveEntry0.getSize();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test121612"
  },
  "test105483" : {
    "methodSignature" : "public boolean isGlobalPaxHeader()",
    "methodName" : "isGlobalPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105483() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    Date date0 = tarArchiveEntry0.getLastModifiedDate();\n    tarArchiveEntry0.setModTime(date0);\n    tarArchiveEntry0.isGlobalPaxHeader();\n}",
    "testName" : "test105483"
  },
  "test108510" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108510() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    tarArchiveEntry0.isExtended();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test108510"
  },
  "test105481" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105481() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    Date date0 = tarArchiveEntry0.getLastModifiedDate();\n    tarArchiveEntry0.setModTime(date0);\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test105481"
  },
  "test108512" : {
    "methodSignature" : "public boolean isGNULongNameEntry()",
    "methodName" : "isGNULongNameEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108512() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    tarArchiveEntry0.isExtended();\n    tarArchiveEntry0.isGNULongNameEntry();\n}",
    "testName" : "test108512"
  },
  "test105480" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105480() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    Date date0 = tarArchiveEntry0.getLastModifiedDate();\n    tarArchiveEntry0.setModTime(date0);\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test105480"
  },
  "test108511" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108511() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    tarArchiveEntry0.isExtended();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test108511"
  },
  "test121608" : {
    "methodSignature" : "public boolean isPaxHeader()",
    "methodName" : "isPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121608() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\", \", (byte) (-28), true);\n    long long0 = tarArchiveEntry0.getSize();\n    tarArchiveEntry0.isPaxHeader();\n}",
    "testName" : "test121608"
  },
  "test105484" : {
    "methodSignature" : "public boolean isFIFO()",
    "methodName" : "isFIFO",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105484() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    Date date0 = tarArchiveEntry0.getLastModifiedDate();\n    tarArchiveEntry0.setModTime(date0);\n    tarArchiveEntry0.isFIFO();\n}",
    "testName" : "test105484"
  },
  "test121609" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121609() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\", \", (byte) (-28), true);\n    long long0 = tarArchiveEntry0.getSize();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test121609"
  },
  "test034135" : {
    "methodSignature" : "public void writeEntryHeader(final byte[] outbuf, final ZipEncoding encoding, final boolean starMode) throws IOException",
    "methodName" : "writeEntryHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034135() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\", \"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);\n    byte[] byteArray0 = new byte[9];\n    ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect((byte) 54);\n    ZipEncoding zipEncoding0 = mock(ZipEncoding.class, new ViolatedAssumptionAnswer());\n    doReturn(byteBuffer0).when(zipEncoding0).encode(anyString());\n    tarArchiveEntry0.writeEntryHeader(byteArray0, zipEncoding0, false);\n}",
    "testName" : "test034135"
  },
  "test094417" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094417() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isGNUSparse();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test094417"
  },
  "test094416" : {
    "methodSignature" : "public boolean isGNUSparse()",
    "methodName" : "isGNUSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094416() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isGNUSparse();\n}",
    "testName" : "test094416"
  },
  "test094419" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094419() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isGNUSparse();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test094419"
  },
  "test094418" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094418() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isGNUSparse();\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test094418"
  },
  "test082336" : {
    "methodSignature" : "public boolean isPaxHeader()",
    "methodName" : "isPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test082336() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.isPaxHeader();\n}",
    "testName" : "test082336"
  },
  "test121606" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121606() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\", \", (byte) (-28), true);\n    long long0 = tarArchiveEntry0.getSize();\n}",
    "testName" : "test121606"
  },
  "test082337" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test082337() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test082337"
  },
  "test121607" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121607() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\", \", (byte) (-28), true);\n    long long0 = tarArchiveEntry0.getSize();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test121607"
  },
  "test082334" : {
    "methodSignature" : "public boolean isGlobalPaxHeader()",
    "methodName" : "isGlobalPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test082334() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.isGlobalPaxHeader();\n}",
    "testName" : "test082334"
  },
  "test121604" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121604() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\", \", (byte) (-28), true);\n    long long0 = tarArchiveEntry0.getSize();\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test121604"
  },
  "test045146" : {
    "methodSignature" : "void fillGNUSparse0xData(final Map<String, String> headers)",
    "methodName" : "fillGNUSparse0xData",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test045146() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) 112, false);\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    tarArchiveEntry0.fillGNUSparse0xData(hashMap0);\n}",
    "testName" : "test045146"
  },
  "test082335" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test082335() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test082335"
  },
  "test121605" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121605() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\", \", (byte) (-28), true);\n    long long0 = tarArchiveEntry0.getSize();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test121605"
  },
  "test121602" : {
    "methodSignature" : "public boolean isCharacterDevice()",
    "methodName" : "isCharacterDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121602() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\", \", (byte) (-28), true);\n    long long0 = tarArchiveEntry0.getSize();\n    tarArchiveEntry0.isCharacterDevice();\n}",
    "testName" : "test121602"
  },
  "test082333" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test082333() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test082333"
  },
  "test121603" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121603() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\", \", (byte) (-28), true);\n    long long0 = tarArchiveEntry0.getSize();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test121603"
  },
  "test094420" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094420() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isGNUSparse();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test094420"
  },
  "test091398" : {
    "methodSignature" : "public void setSize(final long size)",
    "methodName" : "setSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test091398() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"H*>9Vyg1xA)'kdQ+\", (byte) 23);\n    tarArchiveEntry0.setSize((-2657L));\n}",
    "testName" : "test091398"
  },
  "test118582" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118582() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    String string0 = tarArchiveEntry0.getName();\n}",
    "testName" : "test118582"
  },
  "test118581" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118581() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    String string0 = tarArchiveEntry0.getName();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test118581"
  },
  "test081330" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081330() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\", \"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);\n    tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test081330"
  },
  "test118580" : {
    "methodSignature" : "public boolean isGNULongLinkEntry()",
    "methodName" : "isGNULongLinkEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118580() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    String string0 = tarArchiveEntry0.getName();\n    tarArchiveEntry0.isGNULongLinkEntry();\n}",
    "testName" : "test118580"
  },
  "test081332" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081332() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\", \"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);\n    tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test081332"
  },
  "test081331" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081331() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\", \"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);\n    tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test081331"
  },
  "test024105" : {
    "methodSignature" : "public String getLinkName()",
    "methodName" : "getLinkName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test024105() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar\\u0000\", (byte) (-41));\n    tarArchiveEntry0.getLinkName();\n}",
    "testName" : "test024105"
  },
  "test081327" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081327() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\", \"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);\n    tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test081327"
  },
  "test024106" : {
    "methodSignature" : "public String getLinkName()",
    "methodName" : "getLinkName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test024106() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar\\u0000\", (byte) (-41));\n    tarArchiveEntry0.setLinkName(\"ustar\\u0000\");\n    String string0 = tarArchiveEntry0.getLinkName();\n}",
    "testName" : "test024106"
  },
  "test081326" : {
    "methodSignature" : "public boolean isBlockDevice()",
    "methodName" : "isBlockDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081326() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\", \"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);\n    tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.isBlockDevice();\n}",
    "testName" : "test081326"
  },
  "test081329" : {
    "methodSignature" : "public boolean isFIFO()",
    "methodName" : "isFIFO",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081329() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\", \"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);\n    tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.isFIFO();\n}",
    "testName" : "test081329"
  },
  "test081328" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081328() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\", \"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0);\n    tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test081328"
  },
  "test094415" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094415() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isGNUSparse();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test094415"
  },
  "test056163" : {
    "methodSignature" : "public boolean isOldGNUSparse()",
    "methodName" : "isOldGNUSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056163() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();\n}",
    "testName" : "test056163"
  },
  "test056162" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056162() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test056162"
  },
  "test01071" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01071() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", false);\n    tarArchiveEntry0.setSize(0L);\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test01071"
  },
  "test118577" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118577() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    String string0 = tarArchiveEntry0.getName();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test118577"
  },
  "test01070" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01070() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", false);\n    tarArchiveEntry0.setSize(0L);\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test01070"
  },
  "test118576" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118576() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    String string0 = tarArchiveEntry0.getName();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test118576"
  },
  "test118575" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118575() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    String string0 = tarArchiveEntry0.getName();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test118575"
  },
  "test118574" : {
    "methodSignature" : "public boolean isPaxHeader()",
    "methodName" : "isPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118574() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    String string0 = tarArchiveEntry0.getName();\n    tarArchiveEntry0.isPaxHeader();\n}",
    "testName" : "test118574"
  },
  "test01075" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01075() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", false);\n    tarArchiveEntry0.setSize(0L);\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test01075"
  },
  "test069237" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test069237() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isBlockDevice();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test069237"
  },
  "test109519" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109519() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    long long0 = tarArchiveEntry0.getLongGroupId();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test109519"
  },
  "test01074" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01074() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", false);\n    tarArchiveEntry0.setSize(0L);\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test01074"
  },
  "test069236" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test069236() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isBlockDevice();\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test069236"
  },
  "test01073" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01073() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", false);\n    tarArchiveEntry0.setSize(0L);\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test01073"
  },
  "test01072" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01072() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", false);\n    tarArchiveEntry0.setSize(0L);\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test01072"
  },
  "test069233" : {
    "methodSignature" : "public boolean isBlockDevice()",
    "methodName" : "isBlockDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test069233() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isBlockDevice();\n}",
    "testName" : "test069233"
  },
  "test106489" : {
    "methodSignature" : "public boolean isGNULongNameEntry()",
    "methodName" : "isGNULongNameEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106489() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    String string0 = tarArchiveEntry0.getLinkName();\n    tarArchiveEntry0.isGNULongNameEntry();\n}",
    "testName" : "test106489"
  },
  "test069232" : {
    "methodSignature" : "public boolean isLink()",
    "methodName" : "isLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test069232() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isBlockDevice();\n    tarArchiveEntry0.isLink();\n}",
    "testName" : "test069232"
  },
  "test069235" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test069235() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isBlockDevice();\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test069235"
  },
  "test069234" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test069234() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isBlockDevice();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test069234"
  },
  "test106485" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106485() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    String string0 = tarArchiveEntry0.getLinkName();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test106485"
  },
  "test106486" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106486() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    String string0 = tarArchiveEntry0.getLinkName();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test106486"
  },
  "test069231" : {
    "methodSignature" : "public boolean isGlobalPaxHeader()",
    "methodName" : "isGlobalPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test069231() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isBlockDevice();\n    tarArchiveEntry0.isGlobalPaxHeader();\n}",
    "testName" : "test069231"
  },
  "test106487" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106487() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    String string0 = tarArchiveEntry0.getLinkName();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test106487"
  },
  "test01069" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01069() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", false);\n    tarArchiveEntry0.setSize(0L);\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test01069"
  },
  "test069230" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test069230() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isBlockDevice();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test069230"
  },
  "test106488" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106488() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    String string0 = tarArchiveEntry0.getLinkName();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test106488"
  },
  "test078298" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078298() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test078298"
  },
  "test056168" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056168() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test056168"
  },
  "test078299" : {
    "methodSignature" : "public boolean isGNULongLinkEntry()",
    "methodName" : "isGNULongLinkEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078299() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFile();\n    tarArchiveEntry0.isGNULongLinkEntry();\n}",
    "testName" : "test078299"
  },
  "test118579" : {
    "methodSignature" : "public boolean isOldGNUSparse()",
    "methodName" : "isOldGNUSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118579() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    String string0 = tarArchiveEntry0.getName();\n    tarArchiveEntry0.isOldGNUSparse();\n}",
    "testName" : "test118579"
  },
  "test118578" : {
    "methodSignature" : "public boolean isLink()",
    "methodName" : "isLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118578() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    String string0 = tarArchiveEntry0.getName();\n    tarArchiveEntry0.isLink();\n}",
    "testName" : "test118578"
  },
  "test056165" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056165() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test056165"
  },
  "test056164" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056164() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test056164"
  },
  "test056167" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056167() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test056167"
  },
  "test056166" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056166() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test056166"
  },
  "test068217" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068217() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFIFO();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test068217"
  },
  "test077293" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077293() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"Minor device number is out of range: \");\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test077293"
  },
  "test114560" : {
    "methodSignature" : "public void writeEntryHeader(final byte[] outbuf)",
    "methodName" : "writeEntryHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test114560() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"EgTf$\", true);\n    byte[] byteArray0 = new byte[8];\n    tarArchiveEntry0.writeEntryHeader(byteArray0);\n}",
    "testName" : "test114560"
  },
  "test068218" : {
    "methodSignature" : "public boolean isCharacterDevice()",
    "methodName" : "isCharacterDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068218() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFIFO();\n    tarArchiveEntry0.isCharacterDevice();\n}",
    "testName" : "test068218"
  },
  "test077294" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077294() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"Minor device number is out of range: \");\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test077294"
  },
  "test068219" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068219() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFIFO();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test068219"
  },
  "test068216" : {
    "methodSignature" : "public boolean isGNULongNameEntry()",
    "methodName" : "isGNULongNameEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068216() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFIFO();\n    tarArchiveEntry0.isGNULongNameEntry();\n}",
    "testName" : "test068216"
  },
  "test102459" : {
    "methodSignature" : "public boolean isCharacterDevice()",
    "methodName" : "isCharacterDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102459() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    int int0 = tarArchiveEntry0.getDevMinor();\n    tarArchiveEntry0.isCharacterDevice();\n}",
    "testName" : "test102459"
  },
  "test090392" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090392() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.setDevMajor(0);\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test090392"
  },
  "test090391" : {
    "methodSignature" : "public boolean isFIFO()",
    "methodName" : "isFIFO",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090391() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.setDevMajor(0);\n    tarArchiveEntry0.isFIFO();\n}",
    "testName" : "test090391"
  },
  "test090390" : {
    "methodSignature" : "public boolean isCharacterDevice()",
    "methodName" : "isCharacterDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090390() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.setDevMajor(0);\n    tarArchiveEntry0.isCharacterDevice();\n}",
    "testName" : "test090390"
  },
  "test022103" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022103() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\");\n    tarArchiveEntry0.setGroupId(508);\n    long long0 = tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test022103"
  },
  "test00529" : {
    "methodSignature" : "public boolean isGlobalPaxHeader()",
    "methodName" : "isGlobalPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00529() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Z$$4i|&L\\\"`qI8p\");\n    boolean boolean0 = tarArchiveEntry0.isGlobalPaxHeader();\n}",
    "testName" : "test00529"
  },
  "test077297" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077297() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"Minor device number is out of range: \");\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test077297"
  },
  "test090396" : {
    "methodSignature" : "public boolean isGNULongLinkEntry()",
    "methodName" : "isGNULongLinkEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090396() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.setDevMajor(0);\n    tarArchiveEntry0.isGNULongLinkEntry();\n}",
    "testName" : "test090396"
  },
  "test090395" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090395() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.setDevMajor(0);\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test090395"
  },
  "test077295" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077295() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"Minor device number is out of range: \");\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test077295"
  },
  "test090394" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090394() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.setDevMajor(0);\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test090394"
  },
  "test077296" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077296() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"Minor device number is out of range: \");\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test077296"
  },
  "test090393" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090393() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.setDevMajor(0);\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test090393"
  },
  "test090397" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090397() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.setDevMajor(0);\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test090397"
  },
  "test093408" : {
    "methodSignature" : "public boolean isLink()",
    "methodName" : "isLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093408() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    tarArchiveEntry0.equals((Object) null);\n    tarArchiveEntry0.isLink();\n}",
    "testName" : "test093408"
  },
  "test093409" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093409() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    tarArchiveEntry0.equals((Object) null);\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test093409"
  },
  "test093407" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093407() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    tarArchiveEntry0.equals((Object) null);\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test093407"
  },
  "test102465" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102465() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    int int0 = tarArchiveEntry0.getDevMinor();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test102465"
  },
  "test102466" : {
    "methodSignature" : "public boolean isPaxHeader()",
    "methodName" : "isPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102466() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    int int0 = tarArchiveEntry0.getDevMinor();\n    tarArchiveEntry0.isPaxHeader();\n}",
    "testName" : "test102466"
  },
  "test033129" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033129() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, \", \");\n    boolean boolean0 = tarArchiveEntry0.equals(tarArchiveEntry1);\n    tarArchiveEntry1.getDevMinor();\n}",
    "testName" : "test033129"
  },
  "test102463" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102463() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    int int0 = tarArchiveEntry0.getDevMinor();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test102463"
  },
  "test102464" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102464() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    int int0 = tarArchiveEntry0.getDevMinor();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test102464"
  },
  "test102467" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102467() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    int int0 = tarArchiveEntry0.getDevMinor();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test102467"
  },
  "test102468" : {
    "methodSignature" : "public boolean isGNUSparse()",
    "methodName" : "isGNUSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102468() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    int int0 = tarArchiveEntry0.getDevMinor();\n    tarArchiveEntry0.isGNUSparse();\n}",
    "testName" : "test102468"
  },
  "test00750" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00750() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000\", (byte) 82, true);\n    boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test00750"
  },
  "test00635" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00635() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    boolean boolean0 = tarArchiveEntry0.isPaxHeader();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test00635"
  },
  "test102461" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102461() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    int int0 = tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test102461"
  },
  "test00636" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00636() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    boolean boolean0 = tarArchiveEntry0.isPaxHeader();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test00636"
  },
  "test102462" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102462() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    int int0 = tarArchiveEntry0.getDevMinor();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test102462"
  },
  "test00634" : {
    "methodSignature" : "public boolean isGNULongNameEntry()",
    "methodName" : "isGNULongNameEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00634() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    boolean boolean0 = tarArchiveEntry0.isPaxHeader();\n    tarArchiveEntry0.isGNULongNameEntry();\n}",
    "testName" : "test00634"
  },
  "test102460" : {
    "methodSignature" : "public boolean isBlockDevice()",
    "methodName" : "isBlockDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102460() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"/AJeNewn|eBElUQ!=\", (byte) (-120));\n    int int0 = tarArchiveEntry0.getDevMinor();\n    tarArchiveEntry0.isBlockDevice();\n}",
    "testName" : "test102460"
  },
  "test00639" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00639() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    boolean boolean0 = tarArchiveEntry0.isPaxHeader();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test00639"
  },
  "test093411" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093411() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    tarArchiveEntry0.equals((Object) null);\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test093411"
  },
  "test093412" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093412() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    tarArchiveEntry0.equals((Object) null);\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test093412"
  },
  "test00637" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00637() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    boolean boolean0 = tarArchiveEntry0.isPaxHeader();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test00637"
  },
  "test093413" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093413() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    tarArchiveEntry0.equals((Object) null);\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test093413"
  },
  "test00638" : {
    "methodSignature" : "public boolean isPaxHeader()",
    "methodName" : "isPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00638() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"ustar \", (byte) 76, false);\n    boolean boolean0 = tarArchiveEntry0.isPaxHeader();\n}",
    "testName" : "test00638"
  },
  "test093414" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093414() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    tarArchiveEntry0.equals((Object) null);\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test093414"
  },
  "test090389" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090389() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.setDevMajor(0);\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test090389"
  },
  "test093410" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093410() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"SCHILY.realsize\");\n    tarArchiveEntry0.equals((Object) null);\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test093410"
  },
  "test033130" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033130() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, \", \");\n    boolean boolean0 = tarArchiveEntry0.equals(tarArchiveEntry1);\n    tarArchiveEntry1.getDevMajor();\n}",
    "testName" : "test033130"
  },
  "test055160" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055160() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Z$$4i|&L\\\"`qI8p\");\n    boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test055160"
  },
  "test033131" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033131() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, \", \");\n    boolean boolean0 = tarArchiveEntry0.equals(tarArchiveEntry1);\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test033131"
  },
  "test033132" : {
    "methodSignature" : "public boolean equals(final TarArchiveEntry it)",
    "methodName" : "equals",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033132() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, \", \");\n    boolean boolean0 = tarArchiveEntry0.equals(tarArchiveEntry1);\n}",
    "testName" : "test033132"
  },
  "test033133" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033133() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, \", \");\n    boolean boolean0 = tarArchiveEntry0.equals(tarArchiveEntry1);\n    tarArchiveEntry1.getUserId();\n}",
    "testName" : "test033133"
  },
  "test055161" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055161() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Z$$4i|&L\\\"`qI8p\");\n    boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test055161"
  },
  "test033134" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033134() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    TarArchiveEntry tarArchiveEntry1 = new TarArchiveEntry(file0, \", \");\n    boolean boolean0 = tarArchiveEntry0.equals(tarArchiveEntry1);\n    tarArchiveEntry1.getLongGroupId();\n}",
    "testName" : "test033134"
  },
  "test080322" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test080322() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\");\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test080322"
  },
  "test080321" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test080321() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\");\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test080321"
  },
  "test044145" : {
    "methodSignature" : "void fillGNUSparse1xData(final Map<String, String> headers)",
    "methodName" : "fillGNUSparse1xData",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044145() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"g9fN-2\");\n    tarArchiveEntry0.fillGNUSparse1xData((Map<String, String>) null);\n}",
    "testName" : "test044145"
  },
  "test080324" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test080324() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\");\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test080324"
  },
  "test080323" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test080323() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\");\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test080323"
  },
  "test080320" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test080320() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\");\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test080320"
  },
  "test00741" : {
    "methodSignature" : "public boolean isGNULongNameEntry()",
    "methodName" : "isGNULongNameEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00741() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000\", (byte) 82, true);\n    boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();\n}",
    "testName" : "test00741"
  },
  "test080319" : {
    "methodSignature" : "public boolean isFile()",
    "methodName" : "isFile",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test080319() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\");\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.isFile();\n}",
    "testName" : "test080319"
  },
  "test00742" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00742() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000\", (byte) 82, true);\n    boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test00742"
  },
  "test080318" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test080318() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\");\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test080318"
  },
  "test00740" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00740() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000\", (byte) 82, true);\n    boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test00740"
  },
  "test00745" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00745() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000\", (byte) 82, true);\n    boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test00745"
  },
  "test00746" : {
    "methodSignature" : "public boolean isBlockDevice()",
    "methodName" : "isBlockDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00746() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000\", (byte) 82, true);\n    boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();\n    tarArchiveEntry0.isBlockDevice();\n}",
    "testName" : "test00746"
  },
  "test00743" : {
    "methodSignature" : "public boolean isFIFO()",
    "methodName" : "isFIFO",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00743() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000\", (byte) 82, true);\n    boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();\n    tarArchiveEntry0.isFIFO();\n}",
    "testName" : "test00743"
  },
  "test080317" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test080317() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\");\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test080317"
  },
  "test00744" : {
    "methodSignature" : "public boolean isCharacterDevice()",
    "methodName" : "isCharacterDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00744() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000\", (byte) 82, true);\n    boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();\n    tarArchiveEntry0.isCharacterDevice();\n}",
    "testName" : "test00744"
  },
  "test080316" : {
    "methodSignature" : "public boolean isFIFO()",
    "methodName" : "isFIFO",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test080316() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\");\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.isFIFO();\n}",
    "testName" : "test080316"
  },
  "test00749" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00749() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000\", (byte) 82, true);\n    boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test00749"
  },
  "test00747" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00747() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000\", (byte) 82, true);\n    boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test00747"
  },
  "test00748" : {
    "methodSignature" : "public boolean isOldGNUSparse()",
    "methodName" : "isOldGNUSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00748() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000\", (byte) 82, true);\n    boolean boolean0 = tarArchiveEntry0.isGNULongNameEntry();\n    tarArchiveEntry0.isOldGNUSparse();\n}",
    "testName" : "test00748"
  },
  "test068228" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068228() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFIFO();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test068228"
  },
  "test068224" : {
    "methodSignature" : "public boolean isFIFO()",
    "methodName" : "isFIFO",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068224() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFIFO();\n}",
    "testName" : "test068224"
  },
  "test068225" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068225() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFIFO();\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test068225"
  },
  "test068226" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068226() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFIFO();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test068226"
  },
  "test068227" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068227() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFIFO();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test068227"
  },
  "test068220" : {
    "methodSignature" : "public boolean isPaxHeader()",
    "methodName" : "isPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068220() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFIFO();\n    tarArchiveEntry0.isPaxHeader();\n}",
    "testName" : "test068220"
  },
  "test068221" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068221() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFIFO();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test068221"
  },
  "test089388" : {
    "methodSignature" : "public void setDevMajor(final int devNo)",
    "methodName" : "setDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089388() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"}/\", false);\n    tarArchiveEntry0.setDevMajor((-28));\n}",
    "testName" : "test089388"
  },
  "test068222" : {
    "methodSignature" : "public boolean isSparse()",
    "methodName" : "isSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068222() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFIFO();\n    tarArchiveEntry0.isSparse();\n}",
    "testName" : "test068222"
  },
  "test068223" : {
    "methodSignature" : "public boolean isGNULongLinkEntry()",
    "methodName" : "isGNULongLinkEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068223() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) (-19), false);\n    boolean boolean0 = tarArchiveEntry0.isFIFO();\n    tarArchiveEntry0.isGNULongLinkEntry();\n}",
    "testName" : "test068223"
  },
  "test00851" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00851() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Length \");\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test00851"
  },
  "test00852" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00852() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Length \");\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test00852"
  },
  "test00855" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00855() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Length \");\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test00855"
  },
  "test023104" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test023104() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"p$\");\n    tarArchiveEntry0.setIds(1, (-2506));\n    long long0 = tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test023104"
  },
  "test00856" : {
    "methodSignature" : "public boolean isGNULongLinkEntry()",
    "methodName" : "isGNULongLinkEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00856() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Length \");\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n}",
    "testName" : "test00856"
  },
  "test080325" : {
    "methodSignature" : "public boolean isBlockDevice()",
    "methodName" : "isBlockDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test080325() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\");\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.isBlockDevice();\n}",
    "testName" : "test080325"
  },
  "test00853" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00853() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Length \");\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test00853"
  },
  "test00854" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00854() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Length \");\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test00854"
  },
  "test055157" : {
    "methodSignature" : "public boolean isOldGNUSparse()",
    "methodName" : "isOldGNUSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055157() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Z$$4i|&L\\\"`qI8p\");\n    boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();\n}",
    "testName" : "test055157"
  },
  "test055156" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055156() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Z$$4i|&L\\\"`qI8p\");\n    boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test055156"
  },
  "test00857" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00857() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Length \");\n    boolean boolean0 = tarArchiveEntry0.isGNULongLinkEntry();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test00857"
  },
  "test055159" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055159() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Z$$4i|&L\\\"`qI8p\");\n    boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test055159"
  },
  "test055158" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055158() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"Z$$4i|&L\\\"`qI8p\");\n    boolean boolean0 = tarArchiveEntry0.isOldGNUSparse();\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test055158"
  },
  "test076281" : {
    "methodSignature" : "public boolean isGNULongNameEntry()",
    "methodName" : "isGNULongNameEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076281() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) 0, false);\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.isGNULongNameEntry();\n}",
    "testName" : "test076281"
  },
  "test092403" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092403() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"TmT\");\n    tarArchiveEntry0.equals((Object) \"\");\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test092403"
  },
  "test076282" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076282() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) 0, false);\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test076282"
  },
  "test092404" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092404() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"TmT\");\n    tarArchiveEntry0.equals((Object) \"\");\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test092404"
  },
  "test092405" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092405() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"TmT\");\n    tarArchiveEntry0.equals((Object) \"\");\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test092405"
  },
  "test076280" : {
    "methodSignature" : "public boolean isLink()",
    "methodName" : "isLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076280() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) 0, false);\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.isLink();\n}",
    "testName" : "test076280"
  },
  "test092406" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092406() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"TmT\");\n    tarArchiveEntry0.equals((Object) \"\");\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test092406"
  },
  "test042143" : {
    "methodSignature" : "public boolean isDescendent(final TarArchiveEntry desc)",
    "methodName" : "isDescendent",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test042143() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.isDescendent((TarArchiveEntry) null);\n}",
    "testName" : "test042143"
  },
  "test088387" : {
    "methodSignature" : "public void setDevMinor(final int devNo)",
    "methodName" : "setDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088387() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"bXJ`I2+'9,vz!Fg?*\", true);\n    tarArchiveEntry0.setDevMinor((-2151));\n}",
    "testName" : "test088387"
  },
  "test103469" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103469() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    tarArchiveEntry0.equals(tarArchiveEntry0);\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test103469"
  },
  "test00961" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00961() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.setDevMinor(0);\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test00961"
  },
  "test00962" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00962() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.setDevMinor(0);\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test00962"
  },
  "test00960" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00960() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.setDevMinor(0);\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test00960"
  },
  "test00965" : {
    "methodSignature" : "public boolean isGlobalPaxHeader()",
    "methodName" : "isGlobalPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00965() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.setDevMinor(0);\n    tarArchiveEntry0.isGlobalPaxHeader();\n}",
    "testName" : "test00965"
  },
  "test00966" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00966() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.setDevMinor(0);\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test00966"
  },
  "test00963" : {
    "methodSignature" : "public boolean isFIFO()",
    "methodName" : "isFIFO",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00963() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.setDevMinor(0);\n    tarArchiveEntry0.isFIFO();\n}",
    "testName" : "test00963"
  },
  "test00964" : {
    "methodSignature" : "public boolean isSymbolicLink()",
    "methodName" : "isSymbolicLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00964() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.setDevMinor(0);\n    tarArchiveEntry0.isSymbolicLink();\n}",
    "testName" : "test00964"
  },
  "test076285" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076285() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) 0, false);\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test076285"
  },
  "test079311" : {
    "methodSignature" : "public boolean isOldGNUSparse()",
    "methodName" : "isOldGNUSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079311() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.isOldGNUSparse();\n}",
    "testName" : "test079311"
  },
  "test076286" : {
    "methodSignature" : "public boolean isOldGNUSparse()",
    "methodName" : "isOldGNUSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076286() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) 0, false);\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.isOldGNUSparse();\n}",
    "testName" : "test076286"
  },
  "test079310" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079310() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test079310"
  },
  "test00967" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00967() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.setDevMinor(0);\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test00967"
  },
  "test076283" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076283() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) 0, false);\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test076283"
  },
  "test00968" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00968() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.setDevMinor(0);\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test00968"
  },
  "test076284" : {
    "methodSignature" : "public boolean isPaxHeader()",
    "methodName" : "isPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076284() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) 0, false);\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.isPaxHeader();\n}",
    "testName" : "test076284"
  },
  "test076289" : {
    "methodSignature" : "public boolean isSymbolicLink()",
    "methodName" : "isSymbolicLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076289() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) 0, false);\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.isSymbolicLink();\n}",
    "testName" : "test076289"
  },
  "test079315" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079315() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test079315"
  },
  "test079314" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079314() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test079314"
  },
  "test076287" : {
    "methodSignature" : "public boolean isBlockDevice()",
    "methodName" : "isBlockDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076287() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) 0, false);\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.isBlockDevice();\n}",
    "testName" : "test076287"
  },
  "test079313" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079313() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test079313"
  },
  "test076288" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076288() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) 0, false);\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test076288"
  },
  "test079312" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079312() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test079312"
  },
  "test076292" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076292() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) 0, false);\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test076292"
  },
  "test115561" : {
    "methodSignature" : "public boolean isBlockDevice()",
    "methodName" : "isBlockDevice",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115561() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"\");\n    int int0 = tarArchiveEntry0.getDevMajor();\n    tarArchiveEntry0.isBlockDevice();\n}",
    "testName" : "test115561"
  },
  "test076290" : {
    "methodSignature" : "public boolean isGlobalPaxHeader()",
    "methodName" : "isGlobalPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076290() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) 0, false);\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.isGlobalPaxHeader();\n}",
    "testName" : "test076290"
  },
  "test115563" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115563() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"\");\n    int int0 = tarArchiveEntry0.getDevMajor();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test115563"
  },
  "test076291" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076291() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"!S\", (byte) 0, false);\n    tarArchiveEntry0.isFile();\n    tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test076291"
  },
  "test115562" : {
    "methodSignature" : "public int getMode()",
    "methodName" : "getMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115562() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"\");\n    int int0 = tarArchiveEntry0.getDevMajor();\n    tarArchiveEntry0.getMode();\n}",
    "testName" : "test115562"
  },
  "test063199" : {
    "methodSignature" : "public String getGroupName()",
    "methodName" : "getGroupName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test063199() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\");\n    tarArchiveEntry0.setGroupName(\"0\\u0000\");\n    tarArchiveEntry0.getGroupName();\n}",
    "testName" : "test063199"
  },
  "test103470" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103470() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    tarArchiveEntry0.equals(tarArchiveEntry0);\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test103470"
  },
  "test021101" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test021101() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    tarArchiveEntry0.setIds((-3501), 4098);\n    long long0 = tarArchiveEntry0.getLongUserId();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test021101"
  },
  "test103473" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103473() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    tarArchiveEntry0.equals(tarArchiveEntry0);\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test103473"
  },
  "test103471" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103471() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    tarArchiveEntry0.equals(tarArchiveEntry0);\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test103471"
  },
  "test021102" : {
    "methodSignature" : "public long getLongUserId()",
    "methodName" : "getLongUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test021102() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"6+\\\"|M&Us47]k\", true);\n    tarArchiveEntry0.setIds((-3501), 4098);\n    long long0 = tarArchiveEntry0.getLongUserId();\n}",
    "testName" : "test021102"
  },
  "test103472" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103472() throws Throwable {\n    File file0 = MockFile.createTempFile(\" byte binary number\", \" byte binary number\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(file0);\n    tarArchiveEntry0.equals(tarArchiveEntry0);\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test103472"
  },
  "test00958" : {
    "methodSignature" : "public boolean isPaxHeader()",
    "methodName" : "isPaxHeader",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00958() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.setDevMinor(0);\n    tarArchiveEntry0.isPaxHeader();\n}",
    "testName" : "test00958"
  },
  "test053154" : {
    "methodSignature" : "public TarArchiveEntry(final File file, final String fileName)",
    "methodName" : "TarArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test053154() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = null;\n    tarArchiveEntry0 = new TarArchiveEntry((File) null, \"\");\n}",
    "testName" : "test053154"
  },
  "test115565" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115565() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"\");\n    int int0 = tarArchiveEntry0.getDevMajor();\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test115565"
  },
  "test00959" : {
    "methodSignature" : "public long getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00959() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", (byte) (-126));\n    tarArchiveEntry0.setDevMinor(0);\n    tarArchiveEntry0.getSize();\n}",
    "testName" : "test00959"
  },
  "test092400" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092400() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"TmT\");\n    tarArchiveEntry0.equals((Object) \"\");\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test092400"
  },
  "test115564" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115564() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"\");\n    int int0 = tarArchiveEntry0.getDevMajor();\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test115564"
  },
  "test092401" : {
    "methodSignature" : "public boolean isLink()",
    "methodName" : "isLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092401() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"TmT\");\n    tarArchiveEntry0.equals((Object) \"\");\n    tarArchiveEntry0.isLink();\n}",
    "testName" : "test092401"
  },
  "test115567" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115567() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"\");\n    int int0 = tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test115567"
  },
  "test092402" : {
    "methodSignature" : "public int getDevMinor()",
    "methodName" : "getDevMinor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092402() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"TmT\");\n    tarArchiveEntry0.equals((Object) \"\");\n    tarArchiveEntry0.getDevMinor();\n}",
    "testName" : "test092402"
  },
  "test115566" : {
    "methodSignature" : "public int getUserId()",
    "methodName" : "getUserId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115566() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"\");\n    int int0 = tarArchiveEntry0.getDevMajor();\n    tarArchiveEntry0.getUserId();\n}",
    "testName" : "test115566"
  },
  "test032128" : {
    "methodSignature" : "public int getDevMajor()",
    "methodName" : "getDevMajor",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test032128() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\");\n    tarArchiveEntry0.setDevMajor(180);\n    int int0 = tarArchiveEntry0.getDevMajor();\n}",
    "testName" : "test032128"
  },
  "test054155" : {
    "methodSignature" : "public TarArchiveEntry(final File file)",
    "methodName" : "TarArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test054155() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = null;\n    tarArchiveEntry0 = new TarArchiveEntry((File) null);\n}",
    "testName" : "test054155"
  },
  "test116568" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test116568() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"Minor device number is out of range: \");\n    MockFile.createTempFile(\" exceeds maximum signed long\", \", /\", (File) mockFile0);\n    tarArchiveEntry0.getDirectoryEntries();\n    tarArchiveEntry0.getName();\n}",
    "testName" : "test116568"
  },
  "test116569" : {
    "methodSignature" : "public long getLongGroupId()",
    "methodName" : "getLongGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test116569() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(mockFile0, \"Minor device number is out of range: \");\n    MockFile.createTempFile(\" exceeds maximum signed long\", \", /\", (File) mockFile0);\n    tarArchiveEntry0.getDirectoryEntries();\n    tarArchiveEntry0.getLongGroupId();\n}",
    "testName" : "test116569"
  },
  "test043144" : {
    "methodSignature" : "void fillStarSparseData(final Map<String, String> headers)",
    "methodName" : "fillStarSparseData",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test043144() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\", false);\n    tarArchiveEntry0.fillStarSparseData((Map<String, String>) null);\n}",
    "testName" : "test043144"
  },
  "test067214" : {
    "methodSignature" : "public boolean isSparse()",
    "methodName" : "isSparse",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067214() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    tarArchiveEntry0.isSparse();\n}",
    "testName" : "test067214"
  },
  "test067215" : {
    "methodSignature" : "public boolean isLink()",
    "methodName" : "isLink",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067215() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"US-ASCII\", (byte) 124);\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    tarArchiveEntry0.fillStarSparseData(hashMap0);\n    tarArchiveEntry0.isSparse();\n    tarArchiveEntry0.isLink();\n}",
    "testName" : "test067215"
  },
  "test079308" : {
    "methodSignature" : "public boolean isDirectory()",
    "methodName" : "isDirectory",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079308() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n}",
    "testName" : "test079308"
  },
  "test079309" : {
    "methodSignature" : "public int getGroupId()",
    "methodName" : "getGroupId",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079309() throws Throwable {\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"\\u0000\\u0000//\", (byte) 83);\n    boolean boolean0 = tarArchiveEntry0.isDirectory();\n    tarArchiveEntry0.getGroupId();\n}",
    "testName" : "test079309"
  }
}