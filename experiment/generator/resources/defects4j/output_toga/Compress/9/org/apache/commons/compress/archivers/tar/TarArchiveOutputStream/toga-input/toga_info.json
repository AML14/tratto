{
  "test1212" : {
    "methodSignature" : "public TarArchiveOutputStream(OutputStream os, int blockSize, int recordSize)",
    "methodName" : "TarArchiveOutputStream",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"' bytes for entry '\");\n    TarArchiveOutputStream tarArchiveOutputStream0 = null;\n    tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0, (-4869), (-1));\n}",
    "testName" : "test1212"
  },
  "test2323" : {
    "methodSignature" : "public void finish() throws IOException",
    "methodName" : "finish",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(dataOutputStream0, 10240);\n    MockFile mockFile0 = new MockFile(\"\");\n    ArchiveEntry archiveEntry0 = tarArchiveOutputStream0.createArchiveEntry(mockFile0, \"\");\n    tarArchiveOutputStream0.putArchiveEntry(archiveEntry0);\n    tarArchiveOutputStream0.finish();\n}",
    "testName" : "test2323"
  },
  "test1313" : {
    "methodSignature" : "public TarArchiveOutputStream(OutputStream os, int blockSize, int recordSize)",
    "methodName" : "TarArchiveOutputStream",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Unknown header type\");\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockPrintStream0);\n    TarArchiveOutputStream tarArchiveOutputStream1 = null;\n    tarArchiveOutputStream1 = new TarArchiveOutputStream(tarArchiveOutputStream0, 512, 0);\n}",
    "testName" : "test1313"
  },
  "test2424" : {
    "methodSignature" : "public void finish() throws IOException",
    "methodName" : "finish",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\" but is \");\n    DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(dataOutputStream0, false);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockPrintStream0);\n    tarArchiveOutputStream0.close();\n    tarArchiveOutputStream0.finish();\n}",
    "testName" : "test2424"
  },
  "test1010" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    File file0 = MockFile.createTempFile(\"Z6N!L8e6!=J?(JzYNZQ\", \"Z6N!L8e6!=J?(JzYNZQ\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(file0);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockPrintStream0, 55, 5567);\n    tarArchiveOutputStream0.close();\n}",
    "testName" : "test1010"
  },
  "test2121" : {
    "methodSignature" : "public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException",
    "methodName" : "putArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"b&WezVn38K\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockPrintStream0, 553);\n    tarArchiveOutputStream0.finish();\n    TarArchiveEntry tarArchiveEntry0 = new TarArchiveEntry(\"GZb,`{Y\\rtz&,y\", (byte) (-53));\n    tarArchiveOutputStream0.putArchiveEntry(tarArchiveEntry0);\n}",
    "testName" : "test2121"
  },
  "test1111" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    MockFile mockFile0 = new MockFile(\",\", \",\");\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0, 4665, 4665);\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    tarArchiveOutputStream0.close();\n}",
    "testName" : "test1111"
  },
  "test2222" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"xfe!*`l@X1\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockPrintStream0);\n    tarArchiveOutputStream0.close();\n    tarArchiveOutputStream0.close();\n}",
    "testName" : "test2222"
  },
  "test011" : {
    "methodSignature" : "public String getUserName()",
    "methodName" : "getUserName",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    URI uRI0 = MockURI.aFileURI;\n    MockFile mockFile0 = new MockFile(uRI0);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n    PrintStream printStream0 = mockPrintStream0.append('W');\n    DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(dataOutputStream0);\n    TarArchiveEntry tarArchiveEntry0 = (TarArchiveEntry) tarArchiveOutputStream0.createArchiveEntry(mockFile0, \"\");\n    tarArchiveEntry0.getUserName();\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException",
    "methodName" : "putArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"'@\", \"D(i:WAj-XQ83E8\");\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0, 54);\n    ArchiveEntry archiveEntry0 = tarArchiveOutputStream0.createArchiveEntry(mockFile0, \"\");\n    tarArchiveOutputStream0.putArchiveEntry(archiveEntry0);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public void finish() throws IOException",
    "methodName" : "finish",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream((OutputStream) null);\n    tarArchiveOutputStream0.finish();\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public ArchiveEntry createArchiveEntry(File inputFile, String entryName) throws IOException",
    "methodName" : "createArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"P7\");\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);\n    tarArchiveOutputStream0.createArchiveEntry((File) null, \"\");\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream((OutputStream) null, 0, 1);\n    tarArchiveOutputStream0.close();\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "public void write(byte[] wBuf, int wOffset, int numToWrite) throws IOException",
    "methodName" : "write",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\" bytes)\", false);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);\n    byte[] byteArray0 = new byte[2];\n    tarArchiveOutputStream0.write(byteArray0, (int) (byte) (-39), (int) (byte) 100);\n}",
    "testName" : "test1616"
  },
  "test2727" : {
    "methodSignature" : "public int getCount()",
    "methodName" : "getCount",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"!\", \"!\");\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);\n    tarArchiveOutputStream0.flush();\n    tarArchiveOutputStream0.getCount();\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "public long getBytesWritten()",
    "methodName" : "getBytesWritten",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\" bytes)\", false);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);\n    byte[] byteArray0 = new byte[2];\n    tarArchiveOutputStream0.write(byteArray0, (int) (byte) (-39), (int) (byte) (-124));\n    tarArchiveOutputStream0.getBytesWritten();\n}",
    "testName" : "test1717"
  },
  "test2828" : {
    "methodSignature" : "public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException",
    "methodName" : "putArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(pipedOutputStream0);\n    tarArchiveOutputStream0.putArchiveEntry((ArchiveEntry) null);\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public TarArchiveOutputStream(OutputStream os, int blockSize)",
    "methodName" : "TarArchiveOutputStream",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    TarArchiveOutputStream tarArchiveOutputStream0 = null;\n    tarArchiveOutputStream0 = new TarArchiveOutputStream((OutputStream) null, (-374));\n}",
    "testName" : "test1414"
  },
  "test2525" : {
    "methodSignature" : "public void setLongFileMode(int longFileMode)",
    "methodName" : "setLongFileMode",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"xfe!*`l@X1\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockPrintStream0);\n    tarArchiveOutputStream0.setLongFileMode((-653));\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public ArchiveEntry createArchiveEntry(File inputFile, String entryName) throws IOException",
    "methodName" : "createArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"xfe!*`l@X1\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockPrintStream0);\n    tarArchiveOutputStream0.close();\n    MockFile mockFile0 = new MockFile(\"' bytes specified in the header were written\", \"iuKQ=,{jc2|fvlSo_j\");\n    tarArchiveOutputStream0.createArchiveEntry(mockFile0, \"\");\n}",
    "testName" : "test1515"
  },
  "test2626" : {
    "methodSignature" : "public int getRecordSize()",
    "methodName" : "getRecordSize",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"'@\", \"D(i:WAj-XQ83E8\");\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0, 54);\n    int int0 = tarArchiveOutputStream0.getRecordSize();\n}",
    "testName" : "test2626"
  },
  "test2020" : {
    "methodSignature" : "public int getCount()",
    "methodName" : "getCount",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\" bytes)\", false);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);\n    MockFile mockFile0 = new MockFile(\" bytes)\", \"S\");\n    ArchiveEntry archiveEntry0 = tarArchiveOutputStream0.createArchiveEntry(mockFile0, \"~X\\\"GRO_L&04gj6OR|G\");\n    tarArchiveOutputStream0.putArchiveEntry(archiveEntry0);\n    tarArchiveOutputStream0.closeArchiveEntry();\n    tarArchiveOutputStream0.getCount();\n}",
    "testName" : "test2020"
  },
  "test000" : {
    "methodSignature" : "public long getBytesWritten()",
    "methodName" : "getBytesWritten",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(byteArrayOutputStream0);\n    byteArrayOutputStream0.writeTo(tarArchiveOutputStream0);\n    tarArchiveOutputStream0.getBytesWritten();\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException",
    "methodName" : "putArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\" bytes)\", false);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);\n    ArArchiveEntry arArchiveEntry0 = new ArArchiveEntry(\"\", 63L);\n    tarArchiveOutputStream0.putArchiveEntry(arArchiveEntry0);\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public void flush() throws IOException",
    "methodName" : "flush",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream((OutputStream) null);\n    tarArchiveOutputStream0.flush();\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public void finish() throws IOException",
    "methodName" : "finish",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"G?Gx\", \"G?Gx\");\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(tarArchiveOutputStream0, false);\n    TarArchiveOutputStream tarArchiveOutputStream1 = new TarArchiveOutputStream(mockPrintStream0, 2);\n    tarArchiveOutputStream1.finish();\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(pipedOutputStream0, 10240, 10240);\n    // Undeclared exception!\n    tarArchiveOutputStream0.close();\n}",
    "testName" : "test088"
  },
  "test1818" : {
    "methodSignature" : "public void closeArchiveEntry() throws IOException",
    "methodName" : "closeArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    PipedInputStream pipedInputStream0 = new PipedInputStream(10240);\n    pipedOutputStream0.connect(pipedInputStream0);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(pipedOutputStream0);\n    tarArchiveOutputStream0.close();\n    tarArchiveOutputStream0.closeArchiveEntry();\n}",
    "testName" : "test1818"
  },
  "test2929" : {
    "methodSignature" : "public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException",
    "methodName" : "putArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream((OutputStream) null, 10240, 10240);\n    MockFile mockFile0 = new MockFile(\"\");\n    ArchiveEntry archiveEntry0 = tarArchiveOutputStream0.createArchiveEntry(mockFile0, \"\");\n    // Undeclared exception!\n    tarArchiveOutputStream0.putArchiveEntry(archiveEntry0);\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public void closeArchiveEntry() throws IOException",
    "methodName" : "closeArchiveEntry",
    "className" : "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\" bytes)\", false);\n    TarArchiveOutputStream tarArchiveOutputStream0 = new TarArchiveOutputStream(mockFileOutputStream0);\n    tarArchiveOutputStream0.closeArchiveEntry();\n}",
    "testName" : "test1919"
  }
}