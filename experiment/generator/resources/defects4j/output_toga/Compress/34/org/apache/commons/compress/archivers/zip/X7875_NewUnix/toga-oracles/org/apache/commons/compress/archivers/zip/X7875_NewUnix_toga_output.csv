project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    x7875_NewUnix0.setUID((-2518L));
    byte[] byteArray0 = x7875_NewUnix0.getLocalFileDataData();
    assertArrayEquals(new byte[] { (byte) 1, (byte) 4, (byte) 42, (byte) (-10), (byte) (-1), (byte) (-1), (byte) 2, (byte) (-24), (byte) 3 }, byteArray0);
}",0,
project,0,test012,"public void test012() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    byte[] byteArray0 = new byte[4];
    x7875_NewUnix0.parseFromLocalFileData(byteArray0, 1, 1);
    x7875_NewUnix0.hashCode();
}",0,
project,0,test023,"public void test023() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    byte[] byteArray0 = new byte[4];
    Object object0 = x7875_NewUnix0.clone();
    assertTrue(object0.equals((Object) x7875_NewUnix0));
}",0,
project,0,test024,"public void test024() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    byte[] byteArray0 = new byte[4];
    Object object0 = x7875_NewUnix0.clone();
    byteArray0[0] = (byte) (-1);
    x7875_NewUnix0.parseFromLocalFileData(byteArray0, (byte) 0, (-1285));
    boolean boolean0 = x7875_NewUnix0.equals(object0);
    assertFalse(object0.equals((Object) x7875_NewUnix0));
}",0,
project,0,test025,"public void test025() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    byte[] byteArray0 = new byte[4];
    Object object0 = x7875_NewUnix0.clone();
    byteArray0[0] = (byte) (-1);
    x7875_NewUnix0.parseFromLocalFileData(byteArray0, (byte) 0, (-1285));
    boolean boolean0 = x7875_NewUnix0.equals(object0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test036,"public void test036() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    x7875_NewUnix0.setUID(0L);
    ZipShort zipShort0 = x7875_NewUnix0.getCentralDirectoryLength();
    assertEquals(6, zipShort0.getValue());
}",0,"assertEquals(0, zipShort0.getValue())"
project,0,test047,"public void test047() throws Throwable {
    byte[] byteArray0 = new byte[3];
    byte[] byteArray1 = X7875_NewUnix.trimLeadingZeroesForceMinLength(byteArray0);
    assertEquals(1, byteArray1.length);
}",0,
project,0,test058,"public void test058() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    byte[] byteArray0 = new byte[13];
    x7875_NewUnix0.parseFromLocalFileData(byteArray0, (byte) 0, (byte) 0);
    long long0 = x7875_NewUnix0.getUID();
    assertEquals(0L, long0);
}",0,"assertEquals(0, long0)"
project,0,test069,"public void test069() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    x7875_NewUnix0.setGID(0L);
    long long0 = x7875_NewUnix0.getGID();
    assertEquals(0L, long0);
}",0,"assertEquals(1, long0)"
project,0,test0710,"public void test0710() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    // Undeclared exception!
    try {
        x7875_NewUnix0.parseFromLocalFileData((byte[]) null, (-1234567), (byte) (-57));
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.compress.archivers.zip.X7875_NewUnix"", e);
    }
}",1,
project,0,test0811,"public void test0811() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    byte[] byteArray0 = new byte[9];
    byteArray0[4] = (byte) 3;
    byteArray0[8] = (byte) 117;
    // Undeclared exception!
    try {
        x7875_NewUnix0.parseFromLocalFileData(byteArray0, (byte) 3, (-1174));
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",1,
project,0,test0912,"public void test0912() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    ZipShort zipShort0 = x7875_NewUnix0.getLocalFileDataLength();
    assertEquals(7, zipShort0.getValue());
}",0,"assertEquals(1, zipShort0.getValue())"
project,0,test1013,"public void test1013() throws Throwable {
    byte[] byteArray0 = X7875_NewUnix.trimLeadingZeroesForceMinLength((byte[]) null);
    assertNull(byteArray0);
}",0,
project,0,test1114,"public void test1114() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    X7875_NewUnix x7875_NewUnix1 = new X7875_NewUnix();
    assertTrue(x7875_NewUnix1.equals((Object) x7875_NewUnix0));
}",0,
project,0,test1115,"public void test1115() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    X7875_NewUnix x7875_NewUnix1 = new X7875_NewUnix();
    x7875_NewUnix0.setGID((-16L));
    boolean boolean0 = x7875_NewUnix0.equals(x7875_NewUnix1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1217,"public void test1217() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    X7875_NewUnix x7875_NewUnix1 = new X7875_NewUnix();
    x7875_NewUnix1.setUID(1167L);
    boolean boolean0 = x7875_NewUnix0.equals(x7875_NewUnix1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1319,"public void test1319() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    byte[] byteArray0 = new byte[4];
    Object object0 = x7875_NewUnix0.clone();
    x7875_NewUnix0.parseFromLocalFileData(byteArray0, (byte) 0, (-1285));
    boolean boolean0 = x7875_NewUnix0.equals(object0);
    assertFalse(object0.equals((Object) x7875_NewUnix0));
}",0,
project,0,test1320,"public void test1320() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    byte[] byteArray0 = new byte[4];
    Object object0 = x7875_NewUnix0.clone();
    x7875_NewUnix0.parseFromLocalFileData(byteArray0, (byte) 0, (-1285));
    boolean boolean0 = x7875_NewUnix0.equals(object0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1421,"public void test1421() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    boolean boolean0 = x7875_NewUnix0.equals(x7875_NewUnix0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test1522,"public void test1522() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    boolean boolean0 = x7875_NewUnix0.equals(""0x7875 Zip Extra Field: UID=1000 GID=0"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1623,"public void test1623() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    byte[] byteArray0 = new byte[8];
    x7875_NewUnix0.parseFromCentralDirectoryData(byteArray0, 0, (byte) 84);
    assertEquals(8, byteArray0.length);
}",1,
project,0,test1724,"public void test1724() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    long long0 = x7875_NewUnix0.getGID();
    assertEquals(1000L, long0);
}",0,"assertEquals(0, long0)"
project,0,test1825,"public void test1825() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    x7875_NewUnix0.hashCode();
}",0,
project,0,test1926,"public void test1926() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    byte[] byteArray0 = x7875_NewUnix0.getCentralDirectoryData();
    assertEquals(0, byteArray0.length);
}",0,
project,0,test2027,"public void test2027() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    ZipShort zipShort0 = x7875_NewUnix0.getHeaderId();
    assertEquals(30837, zipShort0.getValue());
}",0,"assertEquals(0, zipShort0.getValue())"
project,0,test2128,"public void test2128() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    long long0 = x7875_NewUnix0.getUID();
    assertEquals(1000L, long0);
}",0,"assertEquals(0, long0)"
project,0,test2229,"public void test2229() throws Throwable {
    X7875_NewUnix x7875_NewUnix0 = new X7875_NewUnix();
    String string0 = x7875_NewUnix0.toString();
    assertEquals(""0x7875 Zip Extra Field: UID=1000 GID=1000"", string0);
}",0,
