project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    DefaultKeyedValues defaultKeyedValues1 = new DefaultKeyedValues();
    assertTrue(defaultKeyedValues1.equals((Object) defaultKeyedValues0));
}",0,
project,0,test001,"public void test001() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    DefaultKeyedValues defaultKeyedValues1 = new DefaultKeyedValues();
    Double double0 = Double.valueOf((-418.7609164));
    defaultKeyedValues0.addValue((Comparable) double0, (Number) null);
    defaultKeyedValues1.setValue((Comparable) double0, (double) 1);
    boolean boolean0 = defaultKeyedValues0.equals(defaultKeyedValues1);
    assertFalse(defaultKeyedValues1.equals((Object) defaultKeyedValues0));
}",0,
project,0,test002,"public void test002() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    DefaultKeyedValues defaultKeyedValues1 = new DefaultKeyedValues();
    Double double0 = Double.valueOf((-418.7609164));
    defaultKeyedValues0.addValue((Comparable) double0, (Number) null);
    defaultKeyedValues1.setValue((Comparable) double0, (double) 1);
    boolean boolean0 = defaultKeyedValues0.equals(defaultKeyedValues1);
    assertFalse(boolean0);
}",0,
project,0,test013,"public void test013() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    // Undeclared exception!
    try {
        defaultKeyedValues0.insertValue(0, (Comparable) null, (double) 0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'key' argument.
        //
        verifyException(""org.jfree.data.DefaultKeyedValues"", e);
    }
}",1,
project,0,test035,"public void test035() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    // Undeclared exception!
    try {
        defaultKeyedValues0.getValue((Comparable) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'key' argument.
        //
        verifyException(""org.jfree.data.DefaultKeyedValues"", e);
    }
}",1,
project,0,test046,"public void test046() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    Float float0 = new Float((float) 1);
    defaultKeyedValues0.addValue((Comparable) float0, (Number) float0);
    // Undeclared exception!
    try {
        defaultKeyedValues0.insertValue(1, (Comparable) float0, (Number) float0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",1,
project,0,test057,"public void test057() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    Integer integer0 = new Integer(0);
    defaultKeyedValues0.setValue((Comparable) integer0, (Number) integer0);
    Number number0 = defaultKeyedValues0.getValue((Comparable) integer0);
    assertEquals(0, number0);
}",0,"assertEquals(0, number0)"
project,0,test068,"public void test068() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    Double double0 = new Double(3778.1961882888086);
    // Undeclared exception!
    try {
        defaultKeyedValues0.getValue((Comparable) double0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Key not found: 3778.1961882888086
        //
        verifyException(""org.jfree.data.DefaultKeyedValues"", e);
    }
}",1,
project,0,test079,"public void test079() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    // Undeclared exception!
    try {
        defaultKeyedValues0.setValue((Comparable) null, (-2740.4470689125));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'key' argument.
        //
        verifyException(""org.jfree.data.DefaultKeyedValues"", e);
    }
}",0,
project,0,test0810,"public void test0810() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    Integer integer0 = Integer.valueOf(0);
    defaultKeyedValues0.setValue((Comparable) integer0, (Number) integer0);
    defaultKeyedValues0.addValue((Comparable) integer0, (double) 0);
    assertEquals(1, defaultKeyedValues0.getItemCount());
}",0,"assertEquals(0, defaultKeyedValues0.getItemCount())"
project,0,test0911,"public void test0911() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    Short short0 = new Short((short) (-18));
    // Undeclared exception!
    try {
        defaultKeyedValues0.insertValue((int) (short) (-18), (Comparable) short0, (double) (short) (-18));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // 'position' out of bounds.
        //
        verifyException(""org.jfree.data.DefaultKeyedValues"", e);
    }
}",0,
project,0,test1012,"public void test1012() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    Short short0 = new Short((short) 12);
    // Undeclared exception!
    try {
        defaultKeyedValues0.insertValue((int) (short) 12, (Comparable) short0, (double) (short) 12);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // 'position' out of bounds.
        //
        verifyException(""org.jfree.data.DefaultKeyedValues"", e);
    }
}",0,
project,0,test1113,"public void test1113() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    Short short0 = new Short((short) 0);
    defaultKeyedValues0.insertValue((int) (short) 0, (Comparable) short0, (double) (short) 0);
    defaultKeyedValues0.insertValue((int) (short) 0, (Comparable) short0, (double) (short) 0);
    assertEquals(1, defaultKeyedValues0.getItemCount());
}",0,"assertEquals(1, defaultKeyedValues0.getItemCount())"
project,0,test1214,"public void test1214() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    Short short0 = new Short((short) 0);
    defaultKeyedValues0.insertValue((int) (short) 0, (Comparable) short0, (double) (short) 0);
    defaultKeyedValues0.removeValue((Comparable) short0);
    assertEquals(1, defaultKeyedValues0.getItemCount());
}",0,"assertEquals(0, defaultKeyedValues0.getItemCount())"
project,0,test1315,"public void test1315() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    defaultKeyedValues0.setValue((Comparable) 1, 343.5962409665);
    Integer integer0 = Integer.valueOf(0);
    defaultKeyedValues0.setValue((Comparable) integer0, (Number) integer0);
    defaultKeyedValues0.removeValue(0);
    assertEquals(1, defaultKeyedValues0.getItemCount());
}",0,"assertEquals(0, defaultKeyedValues0.getItemCount())"
project,0,test1416,"public void test1416() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    Float float0 = new Float(4501.0F);
    defaultKeyedValues0.removeValue((Comparable) float0);
    assertEquals(0, defaultKeyedValues0.getItemCount());
}",0,"assertEquals(0, defaultKeyedValues0.getItemCount())"
project,0,test1517,"public void test1517() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    defaultKeyedValues0.setValue((Comparable) 0, (double) 0);
    SortOrder sortOrder0 = SortOrder.ASCENDING;
    defaultKeyedValues0.sortByKeys(sortOrder0);
    assertEquals(1, defaultKeyedValues0.getItemCount());
}",0,"assertEquals(0, defaultKeyedValues0.getItemCount())"
project,0,test1618,"public void test1618() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    defaultKeyedValues0.setValue((Comparable) 0, (double) 0);
    SortOrder sortOrder0 = SortOrder.ASCENDING;
    defaultKeyedValues0.sortByValues(sortOrder0);
    assertEquals(1, defaultKeyedValues0.getItemCount());
}",0,"assertEquals(0, defaultKeyedValues0.getItemCount())"
project,0,test1719,"public void test1719() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    boolean boolean0 = defaultKeyedValues0.equals(defaultKeyedValues0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test1820,"public void test1820() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    boolean boolean0 = defaultKeyedValues0.equals(""org.jfree.data.DefaultKeyedValue"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1921,"public void test1921() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    defaultKeyedValues0.setValue((Comparable) 0, (double) 0);
    DefaultKeyedValues defaultKeyedValues1 = new DefaultKeyedValues();
    boolean boolean0 = defaultKeyedValues0.equals(defaultKeyedValues1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1922,"public void test1922() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    defaultKeyedValues0.setValue((Comparable) 0, (double) 0);
    DefaultKeyedValues defaultKeyedValues1 = new DefaultKeyedValues();
    boolean boolean0 = defaultKeyedValues0.equals(defaultKeyedValues1);
    assertFalse(defaultKeyedValues1.equals((Object) defaultKeyedValues0));
}",0,
project,0,test2023,"public void test2023() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    Double double0 = Double.valueOf(1647.2540407);
    defaultKeyedValues0.setValue((Comparable) double0, (Number) double0);
    Integer integer0 = Integer.valueOf(0);
    DefaultKeyedValues defaultKeyedValues1 = new DefaultKeyedValues();
    defaultKeyedValues1.setValue((Comparable) integer0, (double) 0);
    boolean boolean0 = defaultKeyedValues0.equals(defaultKeyedValues1);
    assertFalse(defaultKeyedValues1.equals((Object) defaultKeyedValues0));
}",0,
project,0,test2024,"public void test2024() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    Double double0 = Double.valueOf(1647.2540407);
    defaultKeyedValues0.setValue((Comparable) double0, (Number) double0);
    Integer integer0 = Integer.valueOf(0);
    DefaultKeyedValues defaultKeyedValues1 = new DefaultKeyedValues();
    defaultKeyedValues1.setValue((Comparable) integer0, (double) 0);
    boolean boolean0 = defaultKeyedValues0.equals(defaultKeyedValues1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2125,"public void test2125() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    defaultKeyedValues0.setValue((Comparable) 0, (double) 0);
    Object object0 = defaultKeyedValues0.clone();
    boolean boolean0 = defaultKeyedValues0.equals(object0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2227,"public void test2227() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    Byte byte0 = Byte.valueOf((byte) (-112));
    defaultKeyedValues0.addValue((Comparable) byte0, (Number) null);
    Object object0 = defaultKeyedValues0.clone();
    boolean boolean0 = defaultKeyedValues0.equals(object0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2329,"public void test2329() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    Integer integer0 = Integer.valueOf(1578);
    defaultKeyedValues0.setValue((Comparable) integer0, (double) 1578);
    DefaultKeyedValues defaultKeyedValues1 = new DefaultKeyedValues();
    defaultKeyedValues1.setValue((Comparable) integer0, (Number) integer0);
    boolean boolean0 = defaultKeyedValues0.equals(defaultKeyedValues1);
    assertFalse(defaultKeyedValues1.equals((Object) defaultKeyedValues0));
}",0,
project,0,test2330,"public void test2330() throws Throwable {
    DefaultKeyedValues defaultKeyedValues0 = new DefaultKeyedValues();
    Integer integer0 = Integer.valueOf(1578);
    defaultKeyedValues0.setValue((Comparable) integer0, (double) 1578);
    DefaultKeyedValues defaultKeyedValues1 = new DefaultKeyedValues();
    defaultKeyedValues1.setValue((Comparable) integer0, (Number) integer0);
    boolean boolean0 = defaultKeyedValues0.equals(defaultKeyedValues1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
