project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test0001,"public void test0001() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setInteriorGap(0.0);
    assertEquals(0.0, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test0012,"public void test0012() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.isCircular();
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test0013,"public void test0013() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.isCircular();
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test0014,"public void test0014() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.isCircular();
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test0015,"public void test0015() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.isCircular();
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test0016,"public void test0016() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.isCircular();
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test0017,"public void test0017() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.isCircular();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0018,"public void test0018() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.isCircular();
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test0019,"public void test0019() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.isCircular();
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test00110,"public void test00110() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.isCircular();
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,"assertEquals(0, piePlot3D0.getPieIndex())"
project,0,test00111,"public void test00111() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.isCircular();
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test00112,"public void test00112() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.isCircular();
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test00213,"public void test00213() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setShadowPaint((Paint) null);
    Paint paint0 = piePlot0.getShadowPaint();
    assertTrue(piePlot0.isCircular());
}",0,assertFalse(piePlot0.isCircular())
project,0,test00214,"public void test00214() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setShadowPaint((Paint) null);
    Paint paint0 = piePlot0.getShadowPaint();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test00215,"public void test00215() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setShadowPaint((Paint) null);
    Paint paint0 = piePlot0.getShadowPaint();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test00216,"public void test00216() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setShadowPaint((Paint) null);
    Paint paint0 = piePlot0.getShadowPaint();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test00217,"public void test00217() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setShadowPaint((Paint) null);
    Paint paint0 = piePlot0.getShadowPaint();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test00218,"public void test00218() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setShadowPaint((Paint) null);
    Paint paint0 = piePlot0.getShadowPaint();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test00219,"public void test00219() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setShadowPaint((Paint) null);
    Paint paint0 = piePlot0.getShadowPaint();
    assertNull(paint0);
}",0,
project,0,test00220,"public void test00220() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setShadowPaint((Paint) null);
    Paint paint0 = piePlot0.getShadowPaint();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test00221,"public void test00221() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setShadowPaint((Paint) null);
    Paint paint0 = piePlot0.getShadowPaint();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test00222,"public void test00222() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setShadowPaint((Paint) null);
    Paint paint0 = piePlot0.getShadowPaint();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test00223,"public void test00223() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setShadowPaint((Paint) null);
    Paint paint0 = piePlot0.getShadowPaint();
    assertEquals(0, piePlot0.getPieIndex());
}",0,
project,0,test00224,"public void test00224() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setShadowPaint((Paint) null);
    Paint paint0 = piePlot0.getShadowPaint();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test00325,"public void test00325() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Day day0 = new Day();
    piePlot3D0.getSectionOutlineStroke(day0);
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test00326,"public void test00326() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Day day0 = new Day();
    piePlot3D0.getSectionOutlineStroke(day0);
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test00327,"public void test00327() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Day day0 = new Day();
    piePlot3D0.getSectionOutlineStroke(day0);
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test00328,"public void test00328() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Day day0 = new Day();
    piePlot3D0.getSectionOutlineStroke(day0);
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test00329,"public void test00329() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Day day0 = new Day();
    piePlot3D0.getSectionOutlineStroke(day0);
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,"assertEquals(0, piePlot3D0.getPieIndex())"
project,0,test00330,"public void test00330() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Day day0 = new Day();
    piePlot3D0.getSectionOutlineStroke(day0);
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test00331,"public void test00331() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Day day0 = new Day();
    piePlot3D0.getSectionOutlineStroke(day0);
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test00332,"public void test00332() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Day day0 = new Day();
    piePlot3D0.getSectionOutlineStroke(day0);
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test00333,"public void test00333() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Day day0 = new Day();
    piePlot3D0.getSectionOutlineStroke(day0);
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test00334,"public void test00334() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Day day0 = new Day();
    piePlot3D0.getSectionOutlineStroke(day0);
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test00335,"public void test00335() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Day day0 = new Day();
    piePlot3D0.getSectionOutlineStroke(day0);
    assertFalse(piePlot3D0.isCircular());
}",0,
project,0,test00436,"public void test00436() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
    MockDate mockDate0 = new MockDate(10, (-820), (-820));
    Quarter quarter0 = new Quarter(mockDate0);
    piePlot3D0.getSectionOutlinePaint(quarter0);
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test00437,"public void test00437() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
    MockDate mockDate0 = new MockDate(10, (-820), (-820));
    Quarter quarter0 = new Quarter(mockDate0);
    piePlot3D0.getSectionOutlinePaint(quarter0);
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test00438,"public void test00438() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
    MockDate mockDate0 = new MockDate(10, (-820), (-820));
    Quarter quarter0 = new Quarter(mockDate0);
    piePlot3D0.getSectionOutlinePaint(quarter0);
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,"assertEquals(0, piePlot3D0.getPieIndex())"
project,0,test00439,"public void test00439() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
    MockDate mockDate0 = new MockDate(10, (-820), (-820));
    Quarter quarter0 = new Quarter(mockDate0);
    piePlot3D0.getSectionOutlinePaint(quarter0);
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test00440,"public void test00440() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
    MockDate mockDate0 = new MockDate(10, (-820), (-820));
    Quarter quarter0 = new Quarter(mockDate0);
    piePlot3D0.getSectionOutlinePaint(quarter0);
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test00441,"public void test00441() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
    MockDate mockDate0 = new MockDate(10, (-820), (-820));
    Quarter quarter0 = new Quarter(mockDate0);
    piePlot3D0.getSectionOutlinePaint(quarter0);
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test00442,"public void test00442() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
    MockDate mockDate0 = new MockDate(10, (-820), (-820));
    Quarter quarter0 = new Quarter(mockDate0);
    piePlot3D0.getSectionOutlinePaint(quarter0);
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test00443,"public void test00443() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
    MockDate mockDate0 = new MockDate(10, (-820), (-820));
    Quarter quarter0 = new Quarter(mockDate0);
    piePlot3D0.getSectionOutlinePaint(quarter0);
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test00444,"public void test00444() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
    MockDate mockDate0 = new MockDate(10, (-820), (-820));
    Quarter quarter0 = new Quarter(mockDate0);
    piePlot3D0.getSectionOutlinePaint(quarter0);
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test00445,"public void test00445() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
    MockDate mockDate0 = new MockDate(10, (-820), (-820));
    Quarter quarter0 = new Quarter(mockDate0);
    piePlot3D0.getSectionOutlinePaint(quarter0);
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test00446,"public void test00446() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
    MockDate mockDate0 = new MockDate(10, (-820), (-820));
    Quarter quarter0 = new Quarter(mockDate0);
    piePlot3D0.getSectionOutlinePaint(quarter0);
    assertFalse(piePlot3D0.isCircular());
}",0,assertTrue(piePlot3D0.isCircular())
project,0,test00547,"public void test00547() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getDataset();
    assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test00548,"public void test00548() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getDataset();
    assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
}",0,
project,0,test00549,"public void test00549() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getDataset();
    assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
}",0,
project,0,test00550,"public void test00550() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getDataset();
    assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
}",0,
project,0,test00551,"public void test00551() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getDataset();
    assertEquals(0, ringPlot0.getPieIndex());
}",0,"assertEquals(0, ringPlot0.getPieIndex())"
project,0,test00552,"public void test00552() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getDataset();
    assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test00553,"public void test00553() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getDataset();
    assertTrue(ringPlot0.getSectionOutlinesVisible());
}",0,assertTrue(ringPlot0.getSectionOutlinesVisible())
project,0,test00554,"public void test00554() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getDataset();
    assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test00555,"public void test00555() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getDataset();
    assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test00556,"public void test00556() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getDataset();
    assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test00557,"public void test00557() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getDataset();
    assertTrue(ringPlot0.isCircular());
}",0,assertFalse(ringPlot0.isCircular())
project,0,test00658,"public void test00658() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.4, 1.0F, 10, 10);
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.689678651025, 4201.65208, 2866.689678651025);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test00659,"public void test00659() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.4, 1.0F, 10, 10);
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.689678651025, 4201.65208, 2866.689678651025);
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test00660,"public void test00660() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.4, 1.0F, 10, 10);
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.689678651025, 4201.65208, 2866.689678651025);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test00661,"public void test00661() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.4, 1.0F, 10, 10);
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.689678651025, 4201.65208, 2866.689678651025);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test00662,"public void test00662() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.4, 1.0F, 10, 10);
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.689678651025, 4201.65208, 2866.689678651025);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test00663,"public void test00663() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.4, 1.0F, 10, 10);
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.689678651025, 4201.65208, 2866.689678651025);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test00664,"public void test00664() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.4, 1.0F, 10, 10);
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.689678651025, 4201.65208, 2866.689678651025);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test00665,"public void test00665() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.4, 1.0F, 10, 10);
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.689678651025, 4201.65208, 2866.689678651025);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test00667,"public void test00667() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.4, 1.0F, 10, 10);
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.689678651025, 4201.65208, 2866.689678651025);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test00768,"public void test00768() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    rectangle2D_Double0.height = 90.0;
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.110985, 4201.65208, 2866.110985);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test00769,"public void test00769() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    rectangle2D_Double0.height = 90.0;
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.110985, 4201.65208, 2866.110985);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test00770,"public void test00770() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    rectangle2D_Double0.height = 90.0;
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.110985, 4201.65208, 2866.110985);
    assertNotSame(rectangle2D0, rectangle2D_Double0);
}",0,
project,0,test00771,"public void test00771() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    rectangle2D_Double0.height = 90.0;
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.110985, 4201.65208, 2866.110985);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test00772,"public void test00772() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    rectangle2D_Double0.height = 90.0;
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.110985, 4201.65208, 2866.110985);
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test00774,"public void test00774() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    rectangle2D_Double0.height = 90.0;
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.110985, 4201.65208, 2866.110985);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test00775,"public void test00775() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    rectangle2D_Double0.height = 90.0;
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.110985, 4201.65208, 2866.110985);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test00776,"public void test00776() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    rectangle2D_Double0.height = 90.0;
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.110985, 4201.65208, 2866.110985);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test00777,"public void test00777() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    rectangle2D_Double0.height = 90.0;
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.110985, 4201.65208, 2866.110985);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test00778,"public void test00778() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    rectangle2D_Double0.height = 90.0;
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.110985, 4201.65208, 2866.110985);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test00879,"public void test00879() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(14);
    FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
    Rectangle2D rectangle2D0 = piePlot0.DEFAULT_LABEL_FONT.getStringBounds(""Null 'distributor' argument."", fontRenderContext0);
    Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double) piePlot0.getArcBounds(rectangle2D0, rectangle2D0, 14, (-2.147483648E9), 1.0F);
    assertTrue(piePlot0.isCircular());
}",0,
project,0,test00880,"public void test00880() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(14);
    FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
    Rectangle2D rectangle2D0 = piePlot0.DEFAULT_LABEL_FONT.getStringBounds(""Null 'distributor' argument."", fontRenderContext0);
    Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double) piePlot0.getArcBounds(rectangle2D0, rectangle2D0, 14, (-2.147483648E9), 1.0F);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test00881,"public void test00881() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(14);
    FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
    Rectangle2D rectangle2D0 = piePlot0.DEFAULT_LABEL_FONT.getStringBounds(""Null 'distributor' argument."", fontRenderContext0);
    Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double) piePlot0.getArcBounds(rectangle2D0, rectangle2D0, 14, (-2.147483648E9), 1.0F);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test00882,"public void test00882() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(14);
    FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
    Rectangle2D rectangle2D0 = piePlot0.DEFAULT_LABEL_FONT.getStringBounds(""Null 'distributor' argument."", fontRenderContext0);
    Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double) piePlot0.getArcBounds(rectangle2D0, rectangle2D0, 14, (-2.147483648E9), 1.0F);
    assertEquals((-9.66796875), rectangle2D_Double0.y, 0.01);
}",0,
project,0,test00883,"public void test00883() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(14);
    FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
    Rectangle2D rectangle2D0 = piePlot0.DEFAULT_LABEL_FONT.getStringBounds(""Null 'distributor' argument."", fontRenderContext0);
    Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double) piePlot0.getArcBounds(rectangle2D0, rectangle2D0, 14, (-2.147483648E9), 1.0F);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test00884,"public void test00884() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(14);
    FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
    Rectangle2D rectangle2D0 = piePlot0.DEFAULT_LABEL_FONT.getStringBounds(""Null 'distributor' argument."", fontRenderContext0);
    Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double) piePlot0.getArcBounds(rectangle2D0, rectangle2D0, 14, (-2.147483648E9), 1.0F);
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test00885,"public void test00885() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(14);
    FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
    Rectangle2D rectangle2D0 = piePlot0.DEFAULT_LABEL_FONT.getStringBounds(""Null 'distributor' argument."", fontRenderContext0);
    Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double) piePlot0.getArcBounds(rectangle2D0, rectangle2D0, 14, (-2.147483648E9), 1.0F);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test00886,"public void test00886() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(14);
    FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
    Rectangle2D rectangle2D0 = piePlot0.DEFAULT_LABEL_FONT.getStringBounds(""Null 'distributor' argument."", fontRenderContext0);
    Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double) piePlot0.getArcBounds(rectangle2D0, rectangle2D0, 14, (-2.147483648E9), 1.0F);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test00887,"public void test00887() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(14);
    FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
    Rectangle2D rectangle2D0 = piePlot0.DEFAULT_LABEL_FONT.getStringBounds(""Null 'distributor' argument."", fontRenderContext0);
    Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double) piePlot0.getArcBounds(rectangle2D0, rectangle2D0, 14, (-2.147483648E9), 1.0F);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test00889,"public void test00889() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(14);
    FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
    Rectangle2D rectangle2D0 = piePlot0.DEFAULT_LABEL_FONT.getStringBounds(""Null 'distributor' argument."", fontRenderContext0);
    Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double) piePlot0.getArcBounds(rectangle2D0, rectangle2D0, 14, (-2.147483648E9), 1.0F);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test00890,"public void test00890() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(14);
    FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
    Rectangle2D rectangle2D0 = piePlot0.DEFAULT_LABEL_FONT.getStringBounds(""Null 'distributor' argument."", fontRenderContext0);
    Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double) piePlot0.getArcBounds(rectangle2D0, rectangle2D0, 14, (-2.147483648E9), 1.0F);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test00891,"public void test00891() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(14);
    FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
    Rectangle2D rectangle2D0 = piePlot0.DEFAULT_LABEL_FONT.getStringBounds(""Null 'distributor' argument."", fontRenderContext0);
    Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double) piePlot0.getArcBounds(rectangle2D0, rectangle2D0, 14, (-2.147483648E9), 1.0F);
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test00992,"public void test00992() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    rectangle2D_Double0.x = (-4.0);
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.110985, 4201.65208, 2866.110985);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test00993,"public void test00993() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    rectangle2D_Double0.x = (-4.0);
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.110985, 4201.65208, 2866.110985);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test00994,"public void test00994() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    rectangle2D_Double0.x = (-4.0);
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.110985, 4201.65208, 2866.110985);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test00995,"public void test00995() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    rectangle2D_Double0.x = (-4.0);
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.110985, 4201.65208, 2866.110985);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test00996,"public void test00996() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    rectangle2D_Double0.x = (-4.0);
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.110985, 4201.65208, 2866.110985);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test00997,"public void test00997() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    rectangle2D_Double0.x = (-4.0);
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.110985, 4201.65208, 2866.110985);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test00998,"public void test00998() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    rectangle2D_Double0.x = (-4.0);
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.110985, 4201.65208, 2866.110985);
    assertTrue(piePlot0.isCircular());
}",0,assertFalse(piePlot0.isCircular())
project,0,test00999,"public void test00999() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    rectangle2D_Double0.x = (-4.0);
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.110985, 4201.65208, 2866.110985);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test009101,"public void test009101() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    rectangle2D_Double0.x = (-4.0);
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.110985, 4201.65208, 2866.110985);
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test009102,"public void test009102() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    rectangle2D_Double0.x = (-4.0);
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 2866.110985, 4201.65208, 2866.110985);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test010103,"public void test010103() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    // Undeclared exception!
    try {
        piePlot0.lookupSectionPaint((Comparable) null, false);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'key' argument.
        //
        verifyException(""org.jfree.chart.PaintMap"", e);
    }
}",0,
project,0,test011104,"public void test011104() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    // Undeclared exception!
    try {
        piePlot0.lookupSectionOutlineStroke((Comparable) null, false);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'key' argument.
        //
        verifyException(""org.jfree.chart.StrokeMap"", e);
    }
}",0,
project,0,test012105,"public void test012105() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    // Undeclared exception!
    try {
        piePlot3D0.lookupSectionOutlineStroke((Comparable) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'key' argument.
        //
        verifyException(""org.jfree.chart.StrokeMap"", e);
    }
}",0,
project,0,test013106,"public void test013106() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    // Undeclared exception!
    try {
        piePlot3D0.lookupSectionOutlinePaint((Comparable) null, false);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'key' argument.
        //
        verifyException(""org.jfree.chart.PaintMap"", e);
    }
}",0,
project,0,test014107,"public void test014107() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    // Undeclared exception!
    try {
        piePlot0.lookupSectionOutlinePaint((Comparable) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'key' argument.
        //
        verifyException(""org.jfree.chart.PaintMap"", e);
    }
}",0,
project,0,test015108,"public void test015108() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    // Undeclared exception!
    try {
        ringPlot0.getMaximumExplodePercent();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.plot.PiePlot"", e);
    }
}",0,
project,0,test016109,"public void test016109() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
    BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
    Graphics2D graphics2D0 = bufferedImage0.createGraphics();
    PiePlotState piePlotState0 = new PiePlotState((PlotRenderingInfo) null);
    TextBlock textBlock0 = new TextBlock();
    TextBox textBox0 = new TextBox(textBlock0);
    PieLabelRecord pieLabelRecord0 = new PieLabelRecord(1.0F, 1.5707963267948966, (-939.337), textBox0, 1.0E-100, (-6719.1425893), (-939.337));
    // Undeclared exception!
    try {
        piePlot3D0.drawRightLabel(graphics2D0, piePlotState0, pieLabelRecord0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.plot.PiePlot"", e);
    }
}",0,
project,0,test017110,"public void test017110() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
    Point2D point2D0 = combinedDomainXYPlot0.getQuadrantOrigin();
    PlotState plotState0 = new PlotState();
    JFreeChart jFreeChart0 = new JFreeChart(""SerialDate.monthCodeToString: month outside valid range."", piePlot3D0);
    ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
    ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
    PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
    // Undeclared exception!
    try {
        piePlot3D0.draw((Graphics2D) null, (Rectangle2D) null, point2D0, plotState0, plotRenderingInfo0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.util.RectangleInsets"", e);
    }
}",0,
project,0,test018111,"public void test018111() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    ringPlot0.setDrawingSupplier((DrawingSupplier) null);
    // Undeclared exception!
    try {
        ringPlot0.clone();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'object' argument.
        //
        verifyException(""org.jfree.chart.util.ObjectUtilities"", e);
    }
}",0,
project,0,test019112,"public void test019112() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(4.0, piePlot1.getShadowYOffset(), 0.01);
}",0,
project,0,test019113,"public void test019113() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(90.0, piePlot1.getStartAngle(), 0.01);
}",0,
project,0,test019114,"public void test019114() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(1.0E-5, piePlot1.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test019115,"public void test019115() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(0.025, piePlot1.getLabelLinkMargin(), 0.01);
}",0,
project,0,test019116,"public void test019116() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(0.025, piePlot1.getLabelGap(), 0.01);
}",0,
project,0,test019117,"public void test019117() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(0.14, piePlot1.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test019118,"public void test019118() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertTrue(piePlot1.getSectionOutlinesVisible());
}",0,assertTrue(piePlot1.getSectionOutlinesVisible())
project,0,test019119,"public void test019119() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(4.0, piePlot1.getShadowXOffset(), 0.01);
}",0,
project,0,test019120,"public void test019120() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(0.08, piePlot1.getInteriorGap(), 0.01);
}",0,
project,0,test019121,"public void test019121() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertTrue(piePlot1.isCircular());
}",0,
project,0,test019122,"public void test019122() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(0, piePlot1.getPieIndex());
}",0,"assertEquals(0, piePlot1.getPieIndex())"
project,0,test019123,"public void test019123() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertTrue(boolean0);
}",0,
project,0,test020124,"public void test020124() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    boolean boolean0 = piePlot0.equals(""Fp"");
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test020125,"public void test020125() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    boolean boolean0 = piePlot0.equals(""Fp"");
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test020126,"public void test020126() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    boolean boolean0 = piePlot0.equals(""Fp"");
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test020127,"public void test020127() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    boolean boolean0 = piePlot0.equals(""Fp"");
    assertFalse(boolean0);
}",0,
project,0,test020128,"public void test020128() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    boolean boolean0 = piePlot0.equals(""Fp"");
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test020129,"public void test020129() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    boolean boolean0 = piePlot0.equals(""Fp"");
    assertEquals(0, piePlot0.getPieIndex());
}",0,
project,0,test020130,"public void test020130() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    boolean boolean0 = piePlot0.equals(""Fp"");
    assertTrue(piePlot0.isCircular());
}",0,assertFalse(piePlot0.isCircular())
project,0,test020131,"public void test020131() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    boolean boolean0 = piePlot0.equals(""Fp"");
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test020132,"public void test020132() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    boolean boolean0 = piePlot0.equals(""Fp"");
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test020133,"public void test020133() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    boolean boolean0 = piePlot0.equals(""Fp"");
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test020134,"public void test020134() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    boolean boolean0 = piePlot0.equals(""Fp"");
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test020135,"public void test020135() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    boolean boolean0 = piePlot0.equals(""Fp"");
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test021136,"public void test021136() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    boolean boolean0 = piePlot0.equals(piePlot0);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test021137,"public void test021137() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    boolean boolean0 = piePlot0.equals(piePlot0);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test021138,"public void test021138() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    boolean boolean0 = piePlot0.equals(piePlot0);
    assertTrue(boolean0);
}",0,
project,0,test021139,"public void test021139() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    boolean boolean0 = piePlot0.equals(piePlot0);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test021140,"public void test021140() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    boolean boolean0 = piePlot0.equals(piePlot0);
    assertTrue(piePlot0.isCircular());
}",0,assertFalse(piePlot0.isCircular())
project,0,test021141,"public void test021141() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    boolean boolean0 = piePlot0.equals(piePlot0);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test021142,"public void test021142() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    boolean boolean0 = piePlot0.equals(piePlot0);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test021143,"public void test021143() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    boolean boolean0 = piePlot0.equals(piePlot0);
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test021144,"public void test021144() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    boolean boolean0 = piePlot0.equals(piePlot0);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test021145,"public void test021145() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    boolean boolean0 = piePlot0.equals(piePlot0);
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test021146,"public void test021146() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    boolean boolean0 = piePlot0.equals(piePlot0);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test021147,"public void test021147() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    boolean boolean0 = piePlot0.equals(piePlot0);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test022148,"public void test022148() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getLegendItems();
    assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test022149,"public void test022149() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getLegendItems();
    assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
}",0,
project,0,test022150,"public void test022150() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getLegendItems();
    assertTrue(ringPlot0.isCircular());
}",1,
project,0,test022151,"public void test022151() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getLegendItems();
    assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
}",0,
project,0,test022152,"public void test022152() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getLegendItems();
    assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test022153,"public void test022153() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getLegendItems();
    assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test022154,"public void test022154() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getLegendItems();
    assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
}",0,
project,0,test022155,"public void test022155() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getLegendItems();
    assertTrue(ringPlot0.getSectionOutlinesVisible());
}",0,assertTrue(ringPlot0.getSectionOutlinesVisible())
project,0,test022156,"public void test022156() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getLegendItems();
    assertEquals(0, ringPlot0.getPieIndex());
}",0,"assertEquals(0, ringPlot0.getPieIndex())"
project,0,test022157,"public void test022157() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getLegendItems();
    assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test022158,"public void test022158() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getLegendItems();
    assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test023159,"public void test023159() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setCircular(true, true);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test023160,"public void test023160() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setCircular(true, true);
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test023161,"public void test023161() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setCircular(true, true);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test023162,"public void test023162() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setCircular(true, true);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test023163,"public void test023163() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setCircular(true, true);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test023164,"public void test023164() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setCircular(true, true);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test023165,"public void test023165() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setCircular(true, true);
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test023166,"public void test023166() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setCircular(true, true);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test023167,"public void test023167() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setCircular(true, true);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test023168,"public void test023168() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setCircular(true, true);
    assertTrue(piePlot0.isCircular());
}",0,assertTrue(piePlot0.isCircular())
project,0,test023169,"public void test023169() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setCircular(true, true);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test024170,"public void test024170() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    double double0 = piePlot0.getInteriorGap();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test024171,"public void test024171() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    double double0 = piePlot0.getInteriorGap();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test024172,"public void test024172() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    double double0 = piePlot0.getInteriorGap();
    assertTrue(piePlot0.isCircular());
}",0,
project,0,test024173,"public void test024173() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    double double0 = piePlot0.getInteriorGap();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test024174,"public void test024174() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    double double0 = piePlot0.getInteriorGap();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test024175,"public void test024175() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    double double0 = piePlot0.getInteriorGap();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test024176,"public void test024176() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    double double0 = piePlot0.getInteriorGap();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test024177,"public void test024177() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    double double0 = piePlot0.getInteriorGap();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test024178,"public void test024178() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    double double0 = piePlot0.getInteriorGap();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test024179,"public void test024179() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    double double0 = piePlot0.getInteriorGap();
    assertEquals(0.08, double0, 0.01);
}",0,
project,0,test024180,"public void test024180() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    double double0 = piePlot0.getInteriorGap();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test025181,"public void test025181() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    double double0 = piePlot0.getMaximumLabelWidth();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test025182,"public void test025182() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    double double0 = piePlot0.getMaximumLabelWidth();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test025183,"public void test025183() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    double double0 = piePlot0.getMaximumLabelWidth();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test025184,"public void test025184() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    double double0 = piePlot0.getMaximumLabelWidth();
    assertTrue(piePlot0.isCircular());
}",0,assertTrue(piePlot0.isCircular())
project,0,test025185,"public void test025185() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    double double0 = piePlot0.getMaximumLabelWidth();
    assertEquals(0.14, double0, 0.01);
}",0,
project,0,test025186,"public void test025186() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    double double0 = piePlot0.getMaximumLabelWidth();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test025187,"public void test025187() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    double double0 = piePlot0.getMaximumLabelWidth();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test025188,"public void test025188() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    double double0 = piePlot0.getMaximumLabelWidth();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test025189,"public void test025189() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    double double0 = piePlot0.getMaximumLabelWidth();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test025190,"public void test025190() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    double double0 = piePlot0.getMaximumLabelWidth();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test025191,"public void test025191() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    double double0 = piePlot0.getMaximumLabelWidth();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test026192,"public void test026192() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.isCircular();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test026193,"public void test026193() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.isCircular();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test026194,"public void test026194() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.isCircular();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test026195,"public void test026195() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.isCircular();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test026196,"public void test026196() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.isCircular();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test026197,"public void test026197() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.isCircular();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test026198,"public void test026198() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.isCircular();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test026199,"public void test026199() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.isCircular();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test026200,"public void test026200() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.isCircular();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test026201,"public void test026201() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.isCircular();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test026202,"public void test026202() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.isCircular();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test027203,"public void test027203() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getLabelGap();
    assertEquals(0.025, double0, 0.01);
}",0,
project,0,test027204,"public void test027204() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getLabelGap();
    assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
}",0,
project,0,test027205,"public void test027205() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getLabelGap();
    assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test027206,"public void test027206() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getLabelGap();
    assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test027207,"public void test027207() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getLabelGap();
    assertTrue(ringPlot0.getSectionOutlinesVisible());
}",0,assertTrue(ringPlot0.getSectionOutlinesVisible())
project,0,test027208,"public void test027208() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getLabelGap();
    assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test027209,"public void test027209() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getLabelGap();
    assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test027210,"public void test027210() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getLabelGap();
    assertEquals(0, ringPlot0.getPieIndex());
}",0,"assertEquals(0, ringPlot0.getPieIndex())"
project,0,test027211,"public void test027211() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getLabelGap();
    assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test027212,"public void test027212() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getLabelGap();
    assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
}",0,
project,0,test027213,"public void test027213() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getLabelGap();
    assertTrue(ringPlot0.isCircular());
}",0,assertFalse(ringPlot0.isCircular())
project,0,test028214,"public void test028214() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double[][] doubleArray0 = new double[4][5];
    DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
    MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
    JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(128, 10, 10, (ChartRenderingInfo) null);
    Graphics2D graphics2D0 = bufferedImage0.createGraphics();
    // Undeclared exception!
    try {
        piePlot3D0.initialise(graphics2D0, (Rectangle2D) null, piePlot3D0, (Integer) 10, (PlotRenderingInfo) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'dataset' argument.
        //
        verifyException(""org.jfree.data.general.DatasetUtilities"", e);
    }
}",0,
project,0,test029215,"public void test029215() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    RingPlot ringPlot1 = (RingPlot) ringPlot0.clone();
    assertNotSame(ringPlot1, ringPlot0);
}",0,
project,0,test029216,"public void test029216() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    RingPlot ringPlot1 = (RingPlot) ringPlot0.clone();
    assertEquals(0.08, ringPlot1.getInteriorGap(), 0.01);
}",0,
project,0,test029217,"public void test029217() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    RingPlot ringPlot1 = (RingPlot) ringPlot0.clone();
    assertTrue(ringPlot1.equals((Object) ringPlot0));
}",0,
project,0,test029218,"public void test029218() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    RingPlot ringPlot1 = (RingPlot) ringPlot0.clone();
    assertEquals(4.0, ringPlot1.getShadowXOffset(), 0.01);
}",0,
project,0,test029219,"public void test029219() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    RingPlot ringPlot1 = (RingPlot) ringPlot0.clone();
    assertEquals(1.0E-5, ringPlot1.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test029220,"public void test029220() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    RingPlot ringPlot1 = (RingPlot) ringPlot0.clone();
    assertEquals(0.025, ringPlot1.getLabelLinkMargin(), 0.01);
}",0,
project,0,test029221,"public void test029221() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    RingPlot ringPlot1 = (RingPlot) ringPlot0.clone();
    assertTrue(ringPlot1.isCircular());
}",0,
project,0,test029222,"public void test029222() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    RingPlot ringPlot1 = (RingPlot) ringPlot0.clone();
    assertEquals(0.025, ringPlot1.getLabelGap(), 0.01);
}",0,
project,0,test029223,"public void test029223() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    RingPlot ringPlot1 = (RingPlot) ringPlot0.clone();
    assertEquals(0, ringPlot1.getPieIndex());
}",0,
project,0,test029224,"public void test029224() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    RingPlot ringPlot1 = (RingPlot) ringPlot0.clone();
    assertEquals(0.14, ringPlot1.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test029225,"public void test029225() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    RingPlot ringPlot1 = (RingPlot) ringPlot0.clone();
    assertEquals(90.0, ringPlot1.getStartAngle(), 0.01);
}",0,
project,0,test029226,"public void test029226() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    RingPlot ringPlot1 = (RingPlot) ringPlot0.clone();
    assertEquals(4.0, ringPlot1.getShadowYOffset(), 0.01);
}",0,
project,0,test029227,"public void test029227() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    RingPlot ringPlot1 = (RingPlot) ringPlot0.clone();
    assertTrue(ringPlot1.getSectionOutlinesVisible());
}",0,assertTrue(ringPlot1.getSectionOutlinesVisible())
project,0,test030228,"public void test030228() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
    assertEquals(1.0E-5, piePlot3D1.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test030229,"public void test030229() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
    assertEquals(0.025, piePlot3D1.getLabelLinkMargin(), 0.01);
}",0,
project,0,test030230,"public void test030230() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
    assertEquals(4.0, piePlot3D1.getShadowYOffset(), 0.01);
}",0,
project,0,test030231,"public void test030231() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
    assertEquals(90.0, piePlot3D1.getStartAngle(), 0.01);
}",0,
project,0,test030232,"public void test030232() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
    assertEquals(0.025, piePlot3D1.getLabelGap(), 0.01);
}",0,
project,0,test030233,"public void test030233() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
    assertEquals(0, piePlot3D1.getPieIndex());
}",0,
project,0,test030234,"public void test030234() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
    assertEquals(0.08, piePlot3D1.getInteriorGap(), 0.01);
}",0,
project,0,test030235,"public void test030235() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
    assertNotSame(piePlot3D1, piePlot3D0);
}",0,
project,0,test030236,"public void test030236() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
    assertTrue(piePlot3D1.equals((Object) piePlot3D0));
}",0,
project,0,test030237,"public void test030237() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
    assertEquals(4.0, piePlot3D1.getShadowXOffset(), 0.01);
}",0,
project,0,test030238,"public void test030238() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
    assertTrue(piePlot3D1.getSectionOutlinesVisible());
}",0,
project,0,test030239,"public void test030239() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
    assertEquals(0.14, piePlot3D1.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test030240,"public void test030240() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PiePlot3D piePlot3D1 = (PiePlot3D) piePlot3D0.clone();
    assertFalse(piePlot3D1.isCircular());
}",0,
project,0,test031241,"public void test031241() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PiePlot3D piePlot3D1 = new PiePlot3D();
    assertTrue(piePlot3D1.equals((Object) piePlot3D0));
}",0,
project,0,test031242,"public void test031242() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PiePlot3D piePlot3D1 = new PiePlot3D();
    piePlot3D0.setLabelPadding(piePlot3D1.DEFAULT_INSETS);
    boolean boolean0 = piePlot3D1.equals(piePlot3D0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test032243,"public void test032243() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    assertTrue(piePlot1.equals((Object) piePlot0));
}",0,
project,0,test032244,"public void test032244() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot1.setSectionOutlineStroke(10, piePlot0.DEFAULT_OUTLINE_STROKE);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertFalse(boolean0);
}",0,
project,0,test033245,"public void test033245() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setCircular(false, false);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertFalse(boolean0);
}",0,
project,0,test033246,"public void test033246() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setCircular(false, false);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertFalse(piePlot0.isCircular());
}",0,
project,0,test034247,"public void test034247() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setBackgroundImageAlignment(100);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(0.14, piePlot1.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test034248,"public void test034248() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setBackgroundImageAlignment(100);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertTrue(piePlot1.getSectionOutlinesVisible());
}",0,assertTrue(piePlot1.getSectionOutlinesVisible())
project,0,test034249,"public void test034249() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setBackgroundImageAlignment(100);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(4.0, piePlot1.getShadowYOffset(), 0.01);
}",0,
project,0,test034250,"public void test034250() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setBackgroundImageAlignment(100);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(90.0, piePlot1.getStartAngle(), 0.01);
}",0,
project,0,test034251,"public void test034251() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setBackgroundImageAlignment(100);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(1.0E-5, piePlot1.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test034252,"public void test034252() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setBackgroundImageAlignment(100);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(0.025, piePlot1.getLabelLinkMargin(), 0.01);
}",0,
project,0,test034253,"public void test034253() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setBackgroundImageAlignment(100);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(4.0, piePlot1.getShadowXOffset(), 0.01);
}",0,
project,0,test034254,"public void test034254() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setBackgroundImageAlignment(100);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(0.08, piePlot1.getInteriorGap(), 0.01);
}",0,
project,0,test034255,"public void test034255() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setBackgroundImageAlignment(100);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertFalse(boolean0);
}",0,
project,0,test034256,"public void test034256() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setBackgroundImageAlignment(100);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(0, piePlot1.getPieIndex());
}",0,"assertEquals(0, piePlot1.getPieIndex())"
project,0,test034257,"public void test034257() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setBackgroundImageAlignment(100);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertTrue(piePlot1.isCircular());
}",0,assertTrue(piePlot1.isCircular())
project,0,test034258,"public void test034258() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setBackgroundImageAlignment(100);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(0.025, piePlot1.getLabelGap(), 0.01);
}",0,
project,0,test035259,"public void test035259() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 0.0, (-920.87242462), 0.0);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test035260,"public void test035260() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 0.0, (-920.87242462), 0.0);
    assertTrue(piePlot0.isCircular());
}",0,
project,0,test035261,"public void test035261() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 0.0, (-920.87242462), 0.0);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test035262,"public void test035262() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 0.0, (-920.87242462), 0.0);
    assertEquals(0, piePlot0.getPieIndex());
}",0,
project,0,test035263,"public void test035263() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 0.0, (-920.87242462), 0.0);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test035264,"public void test035264() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 0.0, (-920.87242462), 0.0);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test035265,"public void test035265() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 0.0, (-920.87242462), 0.0);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test035266,"public void test035266() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 0.0, (-920.87242462), 0.0);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test035267,"public void test035267() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 0.0, (-920.87242462), 0.0);
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test035268,"public void test035268() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 0.0, (-920.87242462), 0.0);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test035269,"public void test035269() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 0.0, (-920.87242462), 0.0);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test035270,"public void test035270() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle2D rectangle2D0 = piePlot0.getArcBounds(rectangle2D_Double0, rectangle2D_Double0, 0.0, (-920.87242462), 0.0);
    assertSame(rectangle2D0, rectangle2D_Double0);
}",0,
project,0,test036271,"public void test036271() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLegendItems();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test036272,"public void test036272() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLegendItems();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test036273,"public void test036273() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLegendItems();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test036274,"public void test036274() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLegendItems();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test036275,"public void test036275() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLegendItems();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test036276,"public void test036276() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLegendItems();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test036277,"public void test036277() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLegendItems();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test036278,"public void test036278() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLegendItems();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test036279,"public void test036279() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLegendItems();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test036280,"public void test036280() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLegendItems();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test036281,"public void test036281() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLegendItems();
    assertTrue(piePlot0.isCircular());
}",0,assertTrue(piePlot0.isCircular())
project,0,test037282,"public void test037282() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    JFreeChart jFreeChart0 = new JFreeChart(ringPlot0);
    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(36, 10, 10, chartRenderingInfo0);
    Graphics2D graphics2D0 = bufferedImage0.createGraphics();
    // Undeclared exception!
    try {
        ringPlot0.drawPie(graphics2D0, (Rectangle2D) null, (PlotRenderingInfo) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'dataset' argument.
        //
        verifyException(""org.jfree.data.general.DatasetUtilities"", e);
    }
}",0,
project,0,test038283,"public void test038283() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    // Undeclared exception!
    try {
        piePlot0.setLegendLabelGenerator((PieSectionLabelGenerator) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'generator' argument.
        //
        verifyException(""org.jfree.chart.plot.PiePlot"", e);
    }
}",0,
project,0,test039284,"public void test039284() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    // Undeclared exception!
    try {
        ringPlot0.setLegendItemShape((Shape) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'shape' argument.
        //
        verifyException(""org.jfree.chart.plot.PiePlot"", e);
    }
}",0,
project,0,test040285,"public void test040285() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle rectangle0 = rectangle2D_Double0.getBounds();
    piePlot0.setLegendItemShape(rectangle0);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test040286,"public void test040286() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle rectangle0 = rectangle2D_Double0.getBounds();
    piePlot0.setLegendItemShape(rectangle0);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test040287,"public void test040287() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle rectangle0 = rectangle2D_Double0.getBounds();
    piePlot0.setLegendItemShape(rectangle0);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test040288,"public void test040288() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle rectangle0 = rectangle2D_Double0.getBounds();
    piePlot0.setLegendItemShape(rectangle0);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test040289,"public void test040289() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle rectangle0 = rectangle2D_Double0.getBounds();
    piePlot0.setLegendItemShape(rectangle0);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test040290,"public void test040290() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle rectangle0 = rectangle2D_Double0.getBounds();
    piePlot0.setLegendItemShape(rectangle0);
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test040291,"public void test040291() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle rectangle0 = rectangle2D_Double0.getBounds();
    piePlot0.setLegendItemShape(rectangle0);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test040292,"public void test040292() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle rectangle0 = rectangle2D_Double0.getBounds();
    piePlot0.setLegendItemShape(rectangle0);
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test040293,"public void test040293() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle rectangle0 = rectangle2D_Double0.getBounds();
    piePlot0.setLegendItemShape(rectangle0);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test040294,"public void test040294() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle rectangle0 = rectangle2D_Double0.getBounds();
    piePlot0.setLegendItemShape(rectangle0);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test040295,"public void test040295() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Rectangle rectangle0 = rectangle2D_Double0.getBounds();
    piePlot0.setLegendItemShape(rectangle0);
    assertTrue(piePlot0.isCircular());
}",0,assertTrue(piePlot0.isCircular())
project,0,test041296,"public void test041296() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    // Undeclared exception!
    try {
        piePlot0.setLabelDistributor((AbstractPieLabelDistributor) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'distributor' argument.
        //
        verifyException(""org.jfree.chart.plot.PiePlot"", e);
    }
}",1,
project,0,test042297,"public void test042297() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    AbstractPieLabelDistributor abstractPieLabelDistributor0 = ringPlot0.getLabelDistributor();
    ringPlot0.setLabelDistributor(abstractPieLabelDistributor0);
    assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test042298,"public void test042298() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    AbstractPieLabelDistributor abstractPieLabelDistributor0 = ringPlot0.getLabelDistributor();
    ringPlot0.setLabelDistributor(abstractPieLabelDistributor0);
    assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test042299,"public void test042299() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    AbstractPieLabelDistributor abstractPieLabelDistributor0 = ringPlot0.getLabelDistributor();
    ringPlot0.setLabelDistributor(abstractPieLabelDistributor0);
    assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
}",0,
project,0,test042300,"public void test042300() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    AbstractPieLabelDistributor abstractPieLabelDistributor0 = ringPlot0.getLabelDistributor();
    ringPlot0.setLabelDistributor(abstractPieLabelDistributor0);
    assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
}",0,
project,0,test042301,"public void test042301() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    AbstractPieLabelDistributor abstractPieLabelDistributor0 = ringPlot0.getLabelDistributor();
    ringPlot0.setLabelDistributor(abstractPieLabelDistributor0);
    assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
}",0,
project,0,test042302,"public void test042302() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    AbstractPieLabelDistributor abstractPieLabelDistributor0 = ringPlot0.getLabelDistributor();
    ringPlot0.setLabelDistributor(abstractPieLabelDistributor0);
    assertTrue(ringPlot0.getSectionOutlinesVisible());
}",0,assertTrue(ringPlot0.getSectionOutlinesVisible())
project,0,test042303,"public void test042303() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    AbstractPieLabelDistributor abstractPieLabelDistributor0 = ringPlot0.getLabelDistributor();
    ringPlot0.setLabelDistributor(abstractPieLabelDistributor0);
    assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test042304,"public void test042304() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    AbstractPieLabelDistributor abstractPieLabelDistributor0 = ringPlot0.getLabelDistributor();
    ringPlot0.setLabelDistributor(abstractPieLabelDistributor0);
    assertEquals(0, ringPlot0.getPieIndex());
}",0,"assertEquals(0, ringPlot0.getPieIndex())"
project,0,test042305,"public void test042305() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    AbstractPieLabelDistributor abstractPieLabelDistributor0 = ringPlot0.getLabelDistributor();
    ringPlot0.setLabelDistributor(abstractPieLabelDistributor0);
    assertTrue(ringPlot0.isCircular());
}",0,
project,0,test042306,"public void test042306() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    AbstractPieLabelDistributor abstractPieLabelDistributor0 = ringPlot0.getLabelDistributor();
    ringPlot0.setLabelDistributor(abstractPieLabelDistributor0);
    assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test042307,"public void test042307() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    AbstractPieLabelDistributor abstractPieLabelDistributor0 = ringPlot0.getLabelDistributor();
    ringPlot0.setLabelDistributor(abstractPieLabelDistributor0);
    assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test043308,"public void test043308() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    // Undeclared exception!
    try {
        ringPlot0.setSimpleLabelOffset((RectangleInsets) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'offset' argument.
        //
        verifyException(""org.jfree.chart.plot.PiePlot"", e);
    }
}",0,
project,0,test044309,"public void test044309() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setSimpleLabelOffset(piePlot0.DEFAULT_INSETS);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test044310,"public void test044310() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setSimpleLabelOffset(piePlot0.DEFAULT_INSETS);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test044311,"public void test044311() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setSimpleLabelOffset(piePlot0.DEFAULT_INSETS);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test044312,"public void test044312() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setSimpleLabelOffset(piePlot0.DEFAULT_INSETS);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test044313,"public void test044313() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setSimpleLabelOffset(piePlot0.DEFAULT_INSETS);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test044314,"public void test044314() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setSimpleLabelOffset(piePlot0.DEFAULT_INSETS);
    assertTrue(piePlot0.isCircular());
}",0,assertFalse(piePlot0.isCircular())
project,0,test044315,"public void test044315() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setSimpleLabelOffset(piePlot0.DEFAULT_INSETS);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test044316,"public void test044316() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setSimpleLabelOffset(piePlot0.DEFAULT_INSETS);
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test044317,"public void test044317() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setSimpleLabelOffset(piePlot0.DEFAULT_INSETS);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test044318,"public void test044318() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setSimpleLabelOffset(piePlot0.DEFAULT_INSETS);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test044319,"public void test044319() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setSimpleLabelOffset(piePlot0.DEFAULT_INSETS);
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test045320,"public void test045320() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    // Undeclared exception!
    try {
        piePlot0.setLabelPaint((Paint) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'paint' argument.
        //
        verifyException(""org.jfree.chart.plot.PiePlot"", e);
    }
}",0,
project,0,test046321,"public void test046321() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    Object[][] objectArray0 = new Object[6][7];
    DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[1]);
    DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
    JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
    Color color0 = jTable0.getGridColor();
    ringPlot0.setLabelPaint(color0);
    assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
}",0,
project,0,test046322,"public void test046322() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    Object[][] objectArray0 = new Object[6][7];
    DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[1]);
    DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
    JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
    Color color0 = jTable0.getGridColor();
    ringPlot0.setLabelPaint(color0);
    assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test046323,"public void test046323() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    Object[][] objectArray0 = new Object[6][7];
    DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[1]);
    DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
    JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
    Color color0 = jTable0.getGridColor();
    ringPlot0.setLabelPaint(color0);
    assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
}",0,
project,0,test046324,"public void test046324() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    Object[][] objectArray0 = new Object[6][7];
    DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[1]);
    DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
    JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
    Color color0 = jTable0.getGridColor();
    ringPlot0.setLabelPaint(color0);
    assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
}",0,
project,0,test046325,"public void test046325() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    Object[][] objectArray0 = new Object[6][7];
    DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[1]);
    DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
    JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
    Color color0 = jTable0.getGridColor();
    ringPlot0.setLabelPaint(color0);
    assertEquals(0, ringPlot0.getPieIndex());
}",0,"assertEquals(0, ringPlot0.getPieIndex())"
project,0,test046326,"public void test046326() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    Object[][] objectArray0 = new Object[6][7];
    DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[1]);
    DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
    JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
    Color color0 = jTable0.getGridColor();
    ringPlot0.setLabelPaint(color0);
    assertTrue(ringPlot0.getSectionOutlinesVisible());
}",0,assertTrue(ringPlot0.getSectionOutlinesVisible())
project,0,test046327,"public void test046327() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    Object[][] objectArray0 = new Object[6][7];
    DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[1]);
    DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
    JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
    Color color0 = jTable0.getGridColor();
    ringPlot0.setLabelPaint(color0);
    assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test046328,"public void test046328() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    Object[][] objectArray0 = new Object[6][7];
    DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[1]);
    DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
    JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
    Color color0 = jTable0.getGridColor();
    ringPlot0.setLabelPaint(color0);
    assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test046329,"public void test046329() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    Object[][] objectArray0 = new Object[6][7];
    DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[1]);
    DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
    JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
    Color color0 = jTable0.getGridColor();
    ringPlot0.setLabelPaint(color0);
    assertTrue(ringPlot0.isCircular());
}",0,assertTrue(ringPlot0.isCircular())
project,0,test046330,"public void test046330() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    Object[][] objectArray0 = new Object[6][7];
    DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[1]);
    DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
    JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
    Color color0 = jTable0.getGridColor();
    ringPlot0.setLabelPaint(color0);
    assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test046331,"public void test046331() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    Object[][] objectArray0 = new Object[6][7];
    DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[1]);
    DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
    JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
    Color color0 = jTable0.getGridColor();
    ringPlot0.setLabelPaint(color0);
    assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test047332,"public void test047332() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    // Undeclared exception!
    try {
        ringPlot0.setLabelFont((Font) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'font' argument.
        //
        verifyException(""org.jfree.chart.plot.PiePlot"", e);
    }
}",1,
project,0,test048333,"public void test048333() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
    ringPlot0.setLabelFont(candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT);
    assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
}",0,
project,0,test048334,"public void test048334() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
    ringPlot0.setLabelFont(candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT);
    assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test048335,"public void test048335() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
    ringPlot0.setLabelFont(candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT);
    assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
}",0,
project,0,test048336,"public void test048336() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
    ringPlot0.setLabelFont(candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT);
    assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test048337,"public void test048337() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
    ringPlot0.setLabelFont(candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT);
    assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test048338,"public void test048338() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
    ringPlot0.setLabelFont(candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT);
    assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test048339,"public void test048339() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
    ringPlot0.setLabelFont(candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT);
    assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test048340,"public void test048340() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
    ringPlot0.setLabelFont(candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT);
    assertTrue(ringPlot0.getSectionOutlinesVisible());
}",0,assertTrue(ringPlot0.getSectionOutlinesVisible())
project,0,test048341,"public void test048341() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
    ringPlot0.setLabelFont(candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT);
    assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
}",0,
project,0,test048342,"public void test048342() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
    ringPlot0.setLabelFont(candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT);
    assertEquals(0, ringPlot0.getPieIndex());
}",0,"assertEquals(0, ringPlot0.getPieIndex())"
project,0,test048343,"public void test048343() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
    ringPlot0.setLabelFont(candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT);
    assertTrue(ringPlot0.isCircular());
}",0,
project,0,test049344,"public void test049344() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    PiePlot3D piePlot3D0 = new PiePlot3D(defaultPieDataset0);
    // Undeclared exception!
    try {
        piePlot3D0.setLabelLinkStroke((Stroke) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'stroke' argument.
        //
        verifyException(""org.jfree.chart.plot.PiePlot"", e);
    }
}",0,
project,0,test050345,"public void test050345() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
    Stroke stroke0 = spiderWebPlot0.getSeriesOutlineStroke(10);
    piePlot0.setLabelLinkStroke(stroke0);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test050346,"public void test050346() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
    Stroke stroke0 = spiderWebPlot0.getSeriesOutlineStroke(10);
    piePlot0.setLabelLinkStroke(stroke0);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test050347,"public void test050347() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
    Stroke stroke0 = spiderWebPlot0.getSeriesOutlineStroke(10);
    piePlot0.setLabelLinkStroke(stroke0);
    assertEquals(0, piePlot0.getPieIndex());
}",0,
project,0,test050348,"public void test050348() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
    Stroke stroke0 = spiderWebPlot0.getSeriesOutlineStroke(10);
    piePlot0.setLabelLinkStroke(stroke0);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test050349,"public void test050349() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
    Stroke stroke0 = spiderWebPlot0.getSeriesOutlineStroke(10);
    piePlot0.setLabelLinkStroke(stroke0);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test050350,"public void test050350() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
    Stroke stroke0 = spiderWebPlot0.getSeriesOutlineStroke(10);
    piePlot0.setLabelLinkStroke(stroke0);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test050351,"public void test050351() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
    Stroke stroke0 = spiderWebPlot0.getSeriesOutlineStroke(10);
    piePlot0.setLabelLinkStroke(stroke0);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test050352,"public void test050352() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
    Stroke stroke0 = spiderWebPlot0.getSeriesOutlineStroke(10);
    piePlot0.setLabelLinkStroke(stroke0);
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test050353,"public void test050353() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
    Stroke stroke0 = spiderWebPlot0.getSeriesOutlineStroke(10);
    piePlot0.setLabelLinkStroke(stroke0);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test050354,"public void test050354() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
    Stroke stroke0 = spiderWebPlot0.getSeriesOutlineStroke(10);
    piePlot0.setLabelLinkStroke(stroke0);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test050355,"public void test050355() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
    Stroke stroke0 = spiderWebPlot0.getSeriesOutlineStroke(10);
    piePlot0.setLabelLinkStroke(stroke0);
    assertTrue(piePlot0.isCircular());
}",0,
project,0,test051356,"public void test051356() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    // Undeclared exception!
    try {
        ringPlot0.setLabelLinkPaint((Paint) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'paint' argument.
        //
        verifyException(""org.jfree.chart.plot.PiePlot"", e);
    }
}",0,
project,0,test052357,"public void test052357() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinkPaint(piePlot0.DEFAULT_OUTLINE_PAINT);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test052358,"public void test052358() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinkPaint(piePlot0.DEFAULT_OUTLINE_PAINT);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test052359,"public void test052359() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinkPaint(piePlot0.DEFAULT_OUTLINE_PAINT);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test052360,"public void test052360() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinkPaint(piePlot0.DEFAULT_OUTLINE_PAINT);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test052361,"public void test052361() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinkPaint(piePlot0.DEFAULT_OUTLINE_PAINT);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test052362,"public void test052362() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinkPaint(piePlot0.DEFAULT_OUTLINE_PAINT);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test052363,"public void test052363() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinkPaint(piePlot0.DEFAULT_OUTLINE_PAINT);
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test052364,"public void test052364() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinkPaint(piePlot0.DEFAULT_OUTLINE_PAINT);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test052365,"public void test052365() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinkPaint(piePlot0.DEFAULT_OUTLINE_PAINT);
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test052366,"public void test052366() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinkPaint(piePlot0.DEFAULT_OUTLINE_PAINT);
    assertTrue(piePlot0.isCircular());
}",0,assertTrue(piePlot0.isCircular())
project,0,test052367,"public void test052367() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinkPaint(piePlot0.DEFAULT_OUTLINE_PAINT);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test053368,"public void test053368() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    Instant instant0 = MockInstant.ofEpochSecond((-1430L), (long) 0);
    Date date0 = Date.from(instant0);
    Year year0 = new Year(date0);
    TextBox textBox0 = new TextBox("""");
    PieLabelRecord pieLabelRecord0 = new PieLabelRecord(year0, 0, 0, textBox0, (-1430L), 0.0, 0);
    defaultPieDataset0.insertValue(0, (Comparable) pieLabelRecord0, 0.0);
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    double double0 = piePlot0.getMaximumExplodePercent();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test053369,"public void test053369() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    Instant instant0 = MockInstant.ofEpochSecond((-1430L), (long) 0);
    Date date0 = Date.from(instant0);
    Year year0 = new Year(date0);
    TextBox textBox0 = new TextBox("""");
    PieLabelRecord pieLabelRecord0 = new PieLabelRecord(year0, 0, 0, textBox0, (-1430L), 0.0, 0);
    defaultPieDataset0.insertValue(0, (Comparable) pieLabelRecord0, 0.0);
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    double double0 = piePlot0.getMaximumExplodePercent();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test053370,"public void test053370() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    Instant instant0 = MockInstant.ofEpochSecond((-1430L), (long) 0);
    Date date0 = Date.from(instant0);
    Year year0 = new Year(date0);
    TextBox textBox0 = new TextBox("""");
    PieLabelRecord pieLabelRecord0 = new PieLabelRecord(year0, 0, 0, textBox0, (-1430L), 0.0, 0);
    defaultPieDataset0.insertValue(0, (Comparable) pieLabelRecord0, 0.0);
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    double double0 = piePlot0.getMaximumExplodePercent();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test053371,"public void test053371() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    Instant instant0 = MockInstant.ofEpochSecond((-1430L), (long) 0);
    Date date0 = Date.from(instant0);
    Year year0 = new Year(date0);
    TextBox textBox0 = new TextBox("""");
    PieLabelRecord pieLabelRecord0 = new PieLabelRecord(year0, 0, 0, textBox0, (-1430L), 0.0, 0);
    defaultPieDataset0.insertValue(0, (Comparable) pieLabelRecord0, 0.0);
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    double double0 = piePlot0.getMaximumExplodePercent();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test053372,"public void test053372() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    Instant instant0 = MockInstant.ofEpochSecond((-1430L), (long) 0);
    Date date0 = Date.from(instant0);
    Year year0 = new Year(date0);
    TextBox textBox0 = new TextBox("""");
    PieLabelRecord pieLabelRecord0 = new PieLabelRecord(year0, 0, 0, textBox0, (-1430L), 0.0, 0);
    defaultPieDataset0.insertValue(0, (Comparable) pieLabelRecord0, 0.0);
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    double double0 = piePlot0.getMaximumExplodePercent();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test053373,"public void test053373() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    Instant instant0 = MockInstant.ofEpochSecond((-1430L), (long) 0);
    Date date0 = Date.from(instant0);
    Year year0 = new Year(date0);
    TextBox textBox0 = new TextBox("""");
    PieLabelRecord pieLabelRecord0 = new PieLabelRecord(year0, 0, 0, textBox0, (-1430L), 0.0, 0);
    defaultPieDataset0.insertValue(0, (Comparable) pieLabelRecord0, 0.0);
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    double double0 = piePlot0.getMaximumExplodePercent();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test053374,"public void test053374() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    Instant instant0 = MockInstant.ofEpochSecond((-1430L), (long) 0);
    Date date0 = Date.from(instant0);
    Year year0 = new Year(date0);
    TextBox textBox0 = new TextBox("""");
    PieLabelRecord pieLabelRecord0 = new PieLabelRecord(year0, 0, 0, textBox0, (-1430L), 0.0, 0);
    defaultPieDataset0.insertValue(0, (Comparable) pieLabelRecord0, 0.0);
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    double double0 = piePlot0.getMaximumExplodePercent();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test053375,"public void test053375() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    Instant instant0 = MockInstant.ofEpochSecond((-1430L), (long) 0);
    Date date0 = Date.from(instant0);
    Year year0 = new Year(date0);
    TextBox textBox0 = new TextBox("""");
    PieLabelRecord pieLabelRecord0 = new PieLabelRecord(year0, 0, 0, textBox0, (-1430L), 0.0, 0);
    defaultPieDataset0.insertValue(0, (Comparable) pieLabelRecord0, 0.0);
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    double double0 = piePlot0.getMaximumExplodePercent();
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test053376,"public void test053376() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    Instant instant0 = MockInstant.ofEpochSecond((-1430L), (long) 0);
    Date date0 = Date.from(instant0);
    Year year0 = new Year(date0);
    TextBox textBox0 = new TextBox("""");
    PieLabelRecord pieLabelRecord0 = new PieLabelRecord(year0, 0, 0, textBox0, (-1430L), 0.0, 0);
    defaultPieDataset0.insertValue(0, (Comparable) pieLabelRecord0, 0.0);
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    double double0 = piePlot0.getMaximumExplodePercent();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test053377,"public void test053377() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    Instant instant0 = MockInstant.ofEpochSecond((-1430L), (long) 0);
    Date date0 = Date.from(instant0);
    Year year0 = new Year(date0);
    TextBox textBox0 = new TextBox("""");
    PieLabelRecord pieLabelRecord0 = new PieLabelRecord(year0, 0, 0, textBox0, (-1430L), 0.0, 0);
    defaultPieDataset0.insertValue(0, (Comparable) pieLabelRecord0, 0.0);
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    double double0 = piePlot0.getMaximumExplodePercent();
    assertTrue(piePlot0.isCircular());
}",0,assertTrue(piePlot0.isCircular())
project,0,test053378,"public void test053378() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    Instant instant0 = MockInstant.ofEpochSecond((-1430L), (long) 0);
    Date date0 = Date.from(instant0);
    Year year0 = new Year(date0);
    TextBox textBox0 = new TextBox("""");
    PieLabelRecord pieLabelRecord0 = new PieLabelRecord(year0, 0, 0, textBox0, (-1430L), 0.0, 0);
    defaultPieDataset0.insertValue(0, (Comparable) pieLabelRecord0, 0.0);
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    double double0 = piePlot0.getMaximumExplodePercent();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test053379,"public void test053379() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    Instant instant0 = MockInstant.ofEpochSecond((-1430L), (long) 0);
    Date date0 = Date.from(instant0);
    Year year0 = new Year(date0);
    TextBox textBox0 = new TextBox("""");
    PieLabelRecord pieLabelRecord0 = new PieLabelRecord(year0, 0, 0, textBox0, (-1430L), 0.0, 0);
    defaultPieDataset0.insertValue(0, (Comparable) pieLabelRecord0, 0.0);
    PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
    double double0 = piePlot0.getMaximumExplodePercent();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test054380,"public void test054380() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    // Undeclared exception!
    try {
        piePlot0.setExplodePercent((Comparable) null, 10);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'key' argument.
        //
        verifyException(""org.jfree.chart.plot.PiePlot"", e);
    }
}",1,
project,0,test055381,"public void test055381() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setExplodePercent(1.0F, 10);
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test055382,"public void test055382() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setExplodePercent(1.0F, 10);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test055383,"public void test055383() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setExplodePercent(1.0F, 10);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test055384,"public void test055384() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setExplodePercent(1.0F, 10);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test055385,"public void test055385() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setExplodePercent(1.0F, 10);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test055386,"public void test055386() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setExplodePercent(1.0F, 10);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test055387,"public void test055387() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setExplodePercent(1.0F, 10);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test055388,"public void test055388() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setExplodePercent(1.0F, 10);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test055389,"public void test055389() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setExplodePercent(1.0F, 10);
    assertTrue(piePlot0.isCircular());
}",0,
project,0,test055390,"public void test055390() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setExplodePercent(1.0F, 10);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test055391,"public void test055391() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setExplodePercent(1.0F, 10);
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test056392,"public void test056392() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond(2294L);
    double double0 = ringPlot0.getExplodePercent(fixedMillisecond0);
    assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test056393,"public void test056393() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond(2294L);
    double double0 = ringPlot0.getExplodePercent(fixedMillisecond0);
    assertTrue(ringPlot0.isCircular());
}",0,
project,0,test056394,"public void test056394() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond(2294L);
    double double0 = ringPlot0.getExplodePercent(fixedMillisecond0);
    assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test056395,"public void test056395() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond(2294L);
    double double0 = ringPlot0.getExplodePercent(fixedMillisecond0);
    assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test056396,"public void test056396() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond(2294L);
    double double0 = ringPlot0.getExplodePercent(fixedMillisecond0);
    assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test056397,"public void test056397() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond(2294L);
    double double0 = ringPlot0.getExplodePercent(fixedMillisecond0);
    assertTrue(ringPlot0.getSectionOutlinesVisible());
}",0,assertTrue(ringPlot0.getSectionOutlinesVisible())
project,0,test056398,"public void test056398() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond(2294L);
    double double0 = ringPlot0.getExplodePercent(fixedMillisecond0);
    assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
}",0,
project,0,test056399,"public void test056399() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond(2294L);
    double double0 = ringPlot0.getExplodePercent(fixedMillisecond0);
    assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
}",0,
project,0,test056400,"public void test056400() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond(2294L);
    double double0 = ringPlot0.getExplodePercent(fixedMillisecond0);
    assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test056401,"public void test056401() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond(2294L);
    double double0 = ringPlot0.getExplodePercent(fixedMillisecond0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test056402,"public void test056402() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond(2294L);
    double double0 = ringPlot0.getExplodePercent(fixedMillisecond0);
    assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
}",0,
project,0,test056403,"public void test056403() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond(2294L);
    double double0 = ringPlot0.getExplodePercent(fixedMillisecond0);
    assertEquals(0, ringPlot0.getPieIndex());
}",0,"assertEquals(0, ringPlot0.getPieIndex())"
project,0,test057404,"public void test057404() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    PiePlot3D piePlot3D0 = new PiePlot3D(defaultPieDataset0);
    // Undeclared exception!
    try {
        piePlot3D0.getExplodePercent((Comparable) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.TreeMap"", e);
    }
}",0,
project,0,test058405,"public void test058405() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    // Undeclared exception!
    try {
        piePlot0.setBaseSectionOutlineStroke((Stroke) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'stroke' argument.
        //
        verifyException(""org.jfree.chart.plot.PiePlot"", e);
    }
}",0,
project,0,test059406,"public void test059406() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    BasicStroke basicStroke0 = (BasicStroke) PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
    ringPlot0.setBaseSectionOutlineStroke(basicStroke0);
    assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test059407,"public void test059407() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    BasicStroke basicStroke0 = (BasicStroke) PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
    ringPlot0.setBaseSectionOutlineStroke(basicStroke0);
    assertTrue(ringPlot0.getSectionOutlinesVisible());
}",0,assertTrue(ringPlot0.getSectionOutlinesVisible())
project,0,test059408,"public void test059408() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    BasicStroke basicStroke0 = (BasicStroke) PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
    ringPlot0.setBaseSectionOutlineStroke(basicStroke0);
    assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test059409,"public void test059409() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    BasicStroke basicStroke0 = (BasicStroke) PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
    ringPlot0.setBaseSectionOutlineStroke(basicStroke0);
    assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
}",0,
project,0,test059410,"public void test059410() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    BasicStroke basicStroke0 = (BasicStroke) PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
    ringPlot0.setBaseSectionOutlineStroke(basicStroke0);
    assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test059411,"public void test059411() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    BasicStroke basicStroke0 = (BasicStroke) PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
    ringPlot0.setBaseSectionOutlineStroke(basicStroke0);
    assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test059412,"public void test059412() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    BasicStroke basicStroke0 = (BasicStroke) PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
    ringPlot0.setBaseSectionOutlineStroke(basicStroke0);
    assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test059413,"public void test059413() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    BasicStroke basicStroke0 = (BasicStroke) PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
    ringPlot0.setBaseSectionOutlineStroke(basicStroke0);
    assertEquals(0, ringPlot0.getPieIndex());
}",0,"assertEquals(0, ringPlot0.getPieIndex())"
project,0,test059414,"public void test059414() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    BasicStroke basicStroke0 = (BasicStroke) PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
    ringPlot0.setBaseSectionOutlineStroke(basicStroke0);
    assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
}",0,
project,0,test059415,"public void test059415() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    BasicStroke basicStroke0 = (BasicStroke) PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
    ringPlot0.setBaseSectionOutlineStroke(basicStroke0);
    assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
}",0,
project,0,test059416,"public void test059416() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    BasicStroke basicStroke0 = (BasicStroke) PeriodAxisLabelInfo.DEFAULT_DIVIDER_STROKE;
    ringPlot0.setBaseSectionOutlineStroke(basicStroke0);
    assertTrue(ringPlot0.isCircular());
}",0,assertTrue(ringPlot0.isCircular())
project,0,test060417,"public void test060417() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    LogAxis logAxis0 = new LogAxis(""Mx'wM@\""J <w,&aBP"");
    NumberTickUnit numberTickUnit0 = logAxis0.getTickUnit();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(numberTickUnit0, true);
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test060418,"public void test060418() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    LogAxis logAxis0 = new LogAxis(""Mx'wM@\""J <w,&aBP"");
    NumberTickUnit numberTickUnit0 = logAxis0.getTickUnit();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(numberTickUnit0, true);
    assertFalse(piePlot3D0.isCircular());
}",0,
project,0,test060419,"public void test060419() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    LogAxis logAxis0 = new LogAxis(""Mx'wM@\""J <w,&aBP"");
    NumberTickUnit numberTickUnit0 = logAxis0.getTickUnit();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(numberTickUnit0, true);
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test060420,"public void test060420() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    LogAxis logAxis0 = new LogAxis(""Mx'wM@\""J <w,&aBP"");
    NumberTickUnit numberTickUnit0 = logAxis0.getTickUnit();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(numberTickUnit0, true);
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test060421,"public void test060421() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    LogAxis logAxis0 = new LogAxis(""Mx'wM@\""J <w,&aBP"");
    NumberTickUnit numberTickUnit0 = logAxis0.getTickUnit();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(numberTickUnit0, true);
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test060422,"public void test060422() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    LogAxis logAxis0 = new LogAxis(""Mx'wM@\""J <w,&aBP"");
    NumberTickUnit numberTickUnit0 = logAxis0.getTickUnit();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(numberTickUnit0, true);
    assertNotNull(basicStroke0);
}",0,
project,0,test060423,"public void test060423() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    LogAxis logAxis0 = new LogAxis(""Mx'wM@\""J <w,&aBP"");
    NumberTickUnit numberTickUnit0 = logAxis0.getTickUnit();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(numberTickUnit0, true);
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,
project,0,test060424,"public void test060424() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    LogAxis logAxis0 = new LogAxis(""Mx'wM@\""J <w,&aBP"");
    NumberTickUnit numberTickUnit0 = logAxis0.getTickUnit();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(numberTickUnit0, true);
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test060425,"public void test060425() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    LogAxis logAxis0 = new LogAxis(""Mx'wM@\""J <w,&aBP"");
    NumberTickUnit numberTickUnit0 = logAxis0.getTickUnit();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(numberTickUnit0, true);
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test060426,"public void test060426() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    LogAxis logAxis0 = new LogAxis(""Mx'wM@\""J <w,&aBP"");
    NumberTickUnit numberTickUnit0 = logAxis0.getTickUnit();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(numberTickUnit0, true);
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test060428,"public void test060428() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    LogAxis logAxis0 = new LogAxis(""Mx'wM@\""J <w,&aBP"");
    NumberTickUnit numberTickUnit0 = logAxis0.getTickUnit();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(numberTickUnit0, true);
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test060429,"public void test060429() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    LogAxis logAxis0 = new LogAxis(""Mx'wM@\""J <w,&aBP"");
    NumberTickUnit numberTickUnit0 = logAxis0.getTickUnit();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.lookupSectionOutlineStroke(numberTickUnit0, true);
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test061430,"public void test061430() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    // Undeclared exception!
    try {
        ringPlot0.setBaseSectionOutlinePaint((Paint) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'paint' argument.
        //
        verifyException(""org.jfree.chart.plot.PiePlot"", e);
    }
}",1,
project,0,test062431,"public void test062431() throws Throwable {
    CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setBaseSectionOutlinePaint(combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT);
    assertTrue(ringPlot0.isCircular());
}",0,
project,0,test062432,"public void test062432() throws Throwable {
    CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setBaseSectionOutlinePaint(combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT);
    assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test062433,"public void test062433() throws Throwable {
    CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setBaseSectionOutlinePaint(combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT);
    assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test062434,"public void test062434() throws Throwable {
    CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setBaseSectionOutlinePaint(combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT);
    assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
}",0,
project,0,test062435,"public void test062435() throws Throwable {
    CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setBaseSectionOutlinePaint(combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT);
    assertEquals(0, ringPlot0.getPieIndex());
}",0,"assertEquals(0, ringPlot0.getPieIndex())"
project,0,test062436,"public void test062436() throws Throwable {
    CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setBaseSectionOutlinePaint(combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT);
    assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
}",0,
project,0,test062437,"public void test062437() throws Throwable {
    CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setBaseSectionOutlinePaint(combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT);
    assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test062438,"public void test062438() throws Throwable {
    CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setBaseSectionOutlinePaint(combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT);
    assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test062439,"public void test062439() throws Throwable {
    CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setBaseSectionOutlinePaint(combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT);
    assertTrue(ringPlot0.getSectionOutlinesVisible());
}",0,assertTrue(ringPlot0.getSectionOutlinesVisible())
project,0,test062440,"public void test062440() throws Throwable {
    CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setBaseSectionOutlinePaint(combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT);
    assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
}",0,
project,0,test062441,"public void test062441() throws Throwable {
    CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setBaseSectionOutlinePaint(combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT);
    assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test063442,"public void test063442() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(""Mx'wM@\""J <w,&aBP"", true);
    assertNotNull(color0);
}",0,
project,0,test063443,"public void test063443() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(""Mx'wM@\""J <w,&aBP"", true);
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test063445,"public void test063445() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(""Mx'wM@\""J <w,&aBP"", true);
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test063446,"public void test063446() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(""Mx'wM@\""J <w,&aBP"", true);
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,
project,0,test063447,"public void test063447() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(""Mx'wM@\""J <w,&aBP"", true);
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test063448,"public void test063448() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(""Mx'wM@\""J <w,&aBP"", true);
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test063449,"public void test063449() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(""Mx'wM@\""J <w,&aBP"", true);
    assertFalse(piePlot3D0.isCircular());
}",0,
project,0,test063450,"public void test063450() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(""Mx'wM@\""J <w,&aBP"", true);
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test063451,"public void test063451() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(""Mx'wM@\""J <w,&aBP"", true);
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test063452,"public void test063452() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(""Mx'wM@\""J <w,&aBP"", true);
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test063453,"public void test063453() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(""Mx'wM@\""J <w,&aBP"", true);
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test063454,"public void test063454() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint(""Mx'wM@\""J <w,&aBP"", true);
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test064455,"public void test064455() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    RingPlot ringPlot0 = new RingPlot(defaultPieDataset0);
    // Undeclared exception!
    try {
        ringPlot0.setBaseSectionPaint((Paint) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'paint' argument.
        //
        verifyException(""org.jfree.chart.plot.PiePlot"", e);
    }
}",1,
project,0,test065456,"public void test065456() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    LogAxis logAxis0 = new LogAxis();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    piePlot3D0.setBaseSectionPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test065457,"public void test065457() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    LogAxis logAxis0 = new LogAxis();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    piePlot3D0.setBaseSectionPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test065458,"public void test065458() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    LogAxis logAxis0 = new LogAxis();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    piePlot3D0.setBaseSectionPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test065459,"public void test065459() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    LogAxis logAxis0 = new LogAxis();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    piePlot3D0.setBaseSectionPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,"assertEquals(0, piePlot3D0.getPieIndex())"
project,0,test065460,"public void test065460() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    LogAxis logAxis0 = new LogAxis();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    piePlot3D0.setBaseSectionPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test065461,"public void test065461() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    LogAxis logAxis0 = new LogAxis();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    piePlot3D0.setBaseSectionPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test065462,"public void test065462() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    LogAxis logAxis0 = new LogAxis();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    piePlot3D0.setBaseSectionPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test065463,"public void test065463() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    LogAxis logAxis0 = new LogAxis();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    piePlot3D0.setBaseSectionPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test065464,"public void test065464() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    LogAxis logAxis0 = new LogAxis();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    piePlot3D0.setBaseSectionPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test065465,"public void test065465() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    LogAxis logAxis0 = new LogAxis();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    piePlot3D0.setBaseSectionPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test065466,"public void test065466() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    LogAxis logAxis0 = new LogAxis();
    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
    piePlot3D0.setBaseSectionPaint(combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
    assertFalse(piePlot3D0.isCircular());
}",0,
project,0,test066467,"public void test066467() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Comparable comparable0 = piePlot0.getSectionKey((-1117));
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test066468,"public void test066468() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Comparable comparable0 = piePlot0.getSectionKey((-1117));
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test066469,"public void test066469() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Comparable comparable0 = piePlot0.getSectionKey((-1117));
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test066470,"public void test066470() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Comparable comparable0 = piePlot0.getSectionKey((-1117));
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test066471,"public void test066471() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Comparable comparable0 = piePlot0.getSectionKey((-1117));
    assertEquals((-1117), comparable0);
}",0,"assertEquals(0, comparable0)"
project,0,test066472,"public void test066472() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Comparable comparable0 = piePlot0.getSectionKey((-1117));
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test066473,"public void test066473() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Comparable comparable0 = piePlot0.getSectionKey((-1117));
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test066474,"public void test066474() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Comparable comparable0 = piePlot0.getSectionKey((-1117));
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test066475,"public void test066475() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Comparable comparable0 = piePlot0.getSectionKey((-1117));
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test066476,"public void test066476() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Comparable comparable0 = piePlot0.getSectionKey((-1117));
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test066477,"public void test066477() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Comparable comparable0 = piePlot0.getSectionKey((-1117));
    assertTrue(piePlot0.isCircular());
}",0,
project,0,test066478,"public void test066478() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Comparable comparable0 = piePlot0.getSectionKey((-1117));
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test067480,"public void test067480() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    Comparable comparable0 = piePlot3D0.getSectionKey(100);
    assertNotNull(comparable0);
}",0,
project,0,test067481,"public void test067481() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    Comparable comparable0 = piePlot3D0.getSectionKey(100);
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test067482,"public void test067482() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    Comparable comparable0 = piePlot3D0.getSectionKey(100);
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test067483,"public void test067483() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    Comparable comparable0 = piePlot3D0.getSectionKey(100);
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test067484,"public void test067484() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    Comparable comparable0 = piePlot3D0.getSectionKey(100);
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,
project,0,test067486,"public void test067486() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    Comparable comparable0 = piePlot3D0.getSectionKey(100);
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test067487,"public void test067487() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    Comparable comparable0 = piePlot3D0.getSectionKey(100);
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test067488,"public void test067488() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    Comparable comparable0 = piePlot3D0.getSectionKey(100);
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test067489,"public void test067489() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    Comparable comparable0 = piePlot3D0.getSectionKey(100);
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test067490,"public void test067490() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    Comparable comparable0 = piePlot3D0.getSectionKey(100);
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test067491,"public void test067491() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    Comparable comparable0 = piePlot3D0.getSectionKey(100);
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test067492,"public void test067492() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    Comparable comparable0 = piePlot3D0.getSectionKey(100);
    assertFalse(piePlot3D0.isCircular());
}",0,
project,0,test068493,"public void test068493() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Comparable comparable0 = piePlot0.getSectionKey((-1455));
    assertEquals((-1455), comparable0);
}",1,
project,0,test068494,"public void test068494() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Comparable comparable0 = piePlot0.getSectionKey((-1455));
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test068496,"public void test068496() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Comparable comparable0 = piePlot0.getSectionKey((-1455));
    assertTrue(piePlot0.isCircular());
}",0,
project,0,test068497,"public void test068497() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Comparable comparable0 = piePlot0.getSectionKey((-1455));
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test068498,"public void test068498() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Comparable comparable0 = piePlot0.getSectionKey((-1455));
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test068499,"public void test068499() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Comparable comparable0 = piePlot0.getSectionKey((-1455));
    assertEquals(0, piePlot0.getPieIndex());
}",0,
project,0,test068500,"public void test068500() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Comparable comparable0 = piePlot0.getSectionKey((-1455));
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test068501,"public void test068501() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Comparable comparable0 = piePlot0.getSectionKey((-1455));
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test068502,"public void test068502() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Comparable comparable0 = piePlot0.getSectionKey((-1455));
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test068503,"public void test068503() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Comparable comparable0 = piePlot0.getSectionKey((-1455));
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test068504,"public void test068504() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Comparable comparable0 = piePlot0.getSectionKey((-1455));
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test068505,"public void test068505() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Comparable comparable0 = piePlot0.getSectionKey((-1455));
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test069506,"public void test069506() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
    Paint paint0 = piePlot3D0.lookupSectionPaint(fixedMillisecond0, true);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(fixedMillisecond0);
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test069507,"public void test069507() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
    Paint paint0 = piePlot3D0.lookupSectionPaint(fixedMillisecond0, true);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(fixedMillisecond0);
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test069508,"public void test069508() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
    Paint paint0 = piePlot3D0.lookupSectionPaint(fixedMillisecond0, true);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(fixedMillisecond0);
    assertSame(color0, paint0);
}",0,
project,0,test069510,"public void test069510() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
    Paint paint0 = piePlot3D0.lookupSectionPaint(fixedMillisecond0, true);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(fixedMillisecond0);
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test069511,"public void test069511() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
    Paint paint0 = piePlot3D0.lookupSectionPaint(fixedMillisecond0, true);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(fixedMillisecond0);
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test069512,"public void test069512() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
    Paint paint0 = piePlot3D0.lookupSectionPaint(fixedMillisecond0, true);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(fixedMillisecond0);
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test069513,"public void test069513() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
    Paint paint0 = piePlot3D0.lookupSectionPaint(fixedMillisecond0, true);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(fixedMillisecond0);
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test069514,"public void test069514() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
    Paint paint0 = piePlot3D0.lookupSectionPaint(fixedMillisecond0, true);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(fixedMillisecond0);
    assertFalse(piePlot3D0.isCircular());
}",0,assertFalse(piePlot3D0.isCircular())
project,0,test069515,"public void test069515() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
    Paint paint0 = piePlot3D0.lookupSectionPaint(fixedMillisecond0, true);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(fixedMillisecond0);
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,"assertEquals(0, piePlot3D0.getPieIndex())"
project,0,test069516,"public void test069516() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
    Paint paint0 = piePlot3D0.lookupSectionPaint(fixedMillisecond0, true);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(fixedMillisecond0);
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test069517,"public void test069517() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
    Paint paint0 = piePlot3D0.lookupSectionPaint(fixedMillisecond0, true);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(fixedMillisecond0);
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test069519,"public void test069519() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
    Paint paint0 = piePlot3D0.lookupSectionPaint(fixedMillisecond0, true);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(fixedMillisecond0);
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test070520,"public void test070520() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test070521,"public void test070521() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setInteriorGap(0.08);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test070522,"public void test070522() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setInteriorGap(0.08);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test070523,"public void test070523() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setInteriorGap(0.08);
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test070524,"public void test070524() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setInteriorGap(0.08);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test070525,"public void test070525() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setInteriorGap(0.08);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test070526,"public void test070526() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setInteriorGap(0.08);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test070527,"public void test070527() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setInteriorGap(0.08);
    assertTrue(piePlot0.isCircular());
}",0,
project,0,test070528,"public void test070528() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setInteriorGap(0.08);
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test070529,"public void test070529() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setInteriorGap(0.08);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test070530,"public void test070530() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setInteriorGap(0.08);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test071531,"public void test071531() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setInteriorGap(0.14);
    assertEquals(0.14, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test072532,"public void test072532() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    // Undeclared exception!
    try {
        piePlot3D0.setInteriorGap((byte) 10);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid 'percent' (10.0) argument.
        //
        verifyException(""org.jfree.chart.plot.PiePlot"", e);
    }
}",1,
project,0,test073533,"public void test073533() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    // Undeclared exception!
    try {
        ringPlot0.setInteriorGap((-381.597372));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid 'percent' (-381.597372) argument.
        //
        verifyException(""org.jfree.chart.plot.PiePlot"", e);
    }
}",1,
project,0,test074534,"public void test074534() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rotation rotation0 = Rotation.CLOCKWISE;
    piePlot0.setDirection(rotation0);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test074535,"public void test074535() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rotation rotation0 = Rotation.CLOCKWISE;
    piePlot0.setDirection(rotation0);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test074536,"public void test074536() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rotation rotation0 = Rotation.CLOCKWISE;
    piePlot0.setDirection(rotation0);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test074537,"public void test074537() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rotation rotation0 = Rotation.CLOCKWISE;
    piePlot0.setDirection(rotation0);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test074538,"public void test074538() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rotation rotation0 = Rotation.CLOCKWISE;
    piePlot0.setDirection(rotation0);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test074539,"public void test074539() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rotation rotation0 = Rotation.CLOCKWISE;
    piePlot0.setDirection(rotation0);
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test074540,"public void test074540() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rotation rotation0 = Rotation.CLOCKWISE;
    piePlot0.setDirection(rotation0);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test074541,"public void test074541() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rotation rotation0 = Rotation.CLOCKWISE;
    piePlot0.setDirection(rotation0);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test074542,"public void test074542() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rotation rotation0 = Rotation.CLOCKWISE;
    piePlot0.setDirection(rotation0);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test074543,"public void test074543() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rotation rotation0 = Rotation.CLOCKWISE;
    piePlot0.setDirection(rotation0);
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test074544,"public void test074544() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Rotation rotation0 = Rotation.CLOCKWISE;
    piePlot0.setDirection(rotation0);
    assertTrue(piePlot0.isCircular());
}",0,assertTrue(piePlot0.isCircular())
project,0,test075545,"public void test075545() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setDataset((PieDataset) null);
    assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test075546,"public void test075546() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setDataset((PieDataset) null);
    assertTrue(ringPlot0.isCircular());
}",0,assertFalse(ringPlot0.isCircular())
project,0,test075547,"public void test075547() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setDataset((PieDataset) null);
    assertEquals(0, ringPlot0.getPieIndex());
}",0,"assertEquals(0, ringPlot0.getPieIndex())"
project,0,test075548,"public void test075548() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setDataset((PieDataset) null);
    assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
}",0,
project,0,test075549,"public void test075549() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setDataset((PieDataset) null);
    assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
}",0,
project,0,test075550,"public void test075550() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setDataset((PieDataset) null);
    assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test075551,"public void test075551() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setDataset((PieDataset) null);
    assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test075552,"public void test075552() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setDataset((PieDataset) null);
    assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test075553,"public void test075553() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setDataset((PieDataset) null);
    assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
}",0,
project,0,test075554,"public void test075554() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setDataset((PieDataset) null);
    assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test075555,"public void test075555() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setDataset((PieDataset) null);
    assertTrue(ringPlot0.getSectionOutlinesVisible());
}",0,assertTrue(ringPlot0.getSectionOutlinesVisible())
project,0,test076556,"public void test076556() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setDataset(defaultKeyedValuesDataset0);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test076557,"public void test076557() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setDataset(defaultKeyedValuesDataset0);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test076558,"public void test076558() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setDataset(defaultKeyedValuesDataset0);
    assertTrue(piePlot0.isCircular());
}",0,assertTrue(piePlot0.isCircular())
project,0,test076559,"public void test076559() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setDataset(defaultKeyedValuesDataset0);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test076560,"public void test076560() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setDataset(defaultKeyedValuesDataset0);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test076561,"public void test076561() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setDataset(defaultKeyedValuesDataset0);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test076562,"public void test076562() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setDataset(defaultKeyedValuesDataset0);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test076563,"public void test076563() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setDataset(defaultKeyedValuesDataset0);
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test076564,"public void test076564() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setDataset(defaultKeyedValuesDataset0);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test076565,"public void test076565() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setDataset(defaultKeyedValuesDataset0);
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test076566,"public void test076566() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setDataset(defaultKeyedValuesDataset0);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test077567,"public void test077567() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
    piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test077568,"public void test077568() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
    piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test077569,"public void test077569() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
    piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
    assertFalse(piePlot3D0.isCircular());
}",0,
project,0,test077570,"public void test077570() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
    piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test077571,"public void test077571() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
    piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test077572,"public void test077572() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
    piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test077573,"public void test077573() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
    piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test077574,"public void test077574() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
    piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,"assertEquals(0, piePlot3D0.getPieIndex())"
project,0,test077575,"public void test077575() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
    piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test077576,"public void test077576() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
    piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test077577,"public void test077577() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot3D0.getLabelGenerator();
    piePlot3D0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test078578,"public void test078578() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendLabelToolTipGenerator();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test078579,"public void test078579() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendLabelToolTipGenerator();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test078580,"public void test078580() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendLabelToolTipGenerator();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test078581,"public void test078581() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendLabelToolTipGenerator();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test078582,"public void test078582() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendLabelToolTipGenerator();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test078583,"public void test078583() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendLabelToolTipGenerator();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test078584,"public void test078584() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendLabelToolTipGenerator();
    assertTrue(piePlot0.isCircular());
}",0,assertTrue(piePlot0.isCircular())
project,0,test078585,"public void test078585() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendLabelToolTipGenerator();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test078586,"public void test078586() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendLabelToolTipGenerator();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test078587,"public void test078587() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendLabelToolTipGenerator();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test078588,"public void test078588() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendLabelToolTipGenerator();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test079589,"public void test079589() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getSectionPaint(1.0F);
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test079590,"public void test079590() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getSectionPaint(1.0F);
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test079591,"public void test079591() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getSectionPaint(1.0F);
    assertFalse(piePlot3D0.isCircular());
}",1,
project,0,test079592,"public void test079592() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getSectionPaint(1.0F);
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test079593,"public void test079593() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getSectionPaint(1.0F);
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test079594,"public void test079594() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getSectionPaint(1.0F);
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test079595,"public void test079595() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getSectionPaint(1.0F);
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test079596,"public void test079596() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getSectionPaint(1.0F);
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,"assertEquals(0, piePlot3D0.getPieIndex())"
project,0,test079597,"public void test079597() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getSectionPaint(1.0F);
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test079598,"public void test079598() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getSectionPaint(1.0F);
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test079599,"public void test079599() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getSectionPaint(1.0F);
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test080600,"public void test080600() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Color color0 = (Color) piePlot0.getLabelPaint();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test080601,"public void test080601() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Color color0 = (Color) piePlot0.getLabelPaint();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test080602,"public void test080602() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Color color0 = (Color) piePlot0.getLabelPaint();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test080603,"public void test080603() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Color color0 = (Color) piePlot0.getLabelPaint();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test080604,"public void test080604() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Color color0 = (Color) piePlot0.getLabelPaint();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test080605,"public void test080605() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Color color0 = (Color) piePlot0.getLabelPaint();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test080606,"public void test080606() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Color color0 = (Color) piePlot0.getLabelPaint();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test080607,"public void test080607() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Color color0 = (Color) piePlot0.getLabelPaint();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test080608,"public void test080608() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Color color0 = (Color) piePlot0.getLabelPaint();
    assertTrue(piePlot0.isCircular());
}",0,
project,0,test080609,"public void test080609() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Color color0 = (Color) piePlot0.getLabelPaint();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test080610,"public void test080610() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    Color color0 = (Color) piePlot0.getLabelPaint();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test081612,"public void test081612() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelBackgroundPaint();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test081613,"public void test081613() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelBackgroundPaint();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test081614,"public void test081614() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelBackgroundPaint();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test081615,"public void test081615() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelBackgroundPaint();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test081616,"public void test081616() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelBackgroundPaint();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test081617,"public void test081617() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelBackgroundPaint();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test081618,"public void test081618() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelBackgroundPaint();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test081619,"public void test081619() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelBackgroundPaint();
    assertTrue(piePlot0.isCircular());
}",0,
project,0,test081620,"public void test081620() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelBackgroundPaint();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test081621,"public void test081621() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelBackgroundPaint();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test081623,"public void test081623() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelBackgroundPaint();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test082624,"public void test082624() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.getBaseSectionOutlineStroke();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test082625,"public void test082625() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.getBaseSectionOutlineStroke();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test082626,"public void test082626() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.getBaseSectionOutlineStroke();
    assertTrue(piePlot0.isCircular());
}",0,
project,0,test082627,"public void test082627() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.getBaseSectionOutlineStroke();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test082628,"public void test082628() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.getBaseSectionOutlineStroke();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test082629,"public void test082629() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.getBaseSectionOutlineStroke();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test082630,"public void test082630() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.getBaseSectionOutlineStroke();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test082631,"public void test082631() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.getBaseSectionOutlineStroke();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test082632,"public void test082632() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.getBaseSectionOutlineStroke();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test082633,"public void test082633() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.getBaseSectionOutlineStroke();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test082634,"public void test082634() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.getBaseSectionOutlineStroke();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test083635,"public void test083635() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendItemShape();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test083636,"public void test083636() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendItemShape();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test083637,"public void test083637() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendItemShape();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test083638,"public void test083638() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendItemShape();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test083639,"public void test083639() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendItemShape();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test083640,"public void test083640() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendItemShape();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test083641,"public void test083641() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendItemShape();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test083642,"public void test083642() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendItemShape();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test083643,"public void test083643() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendItemShape();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test083644,"public void test083644() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendItemShape();
    assertTrue(piePlot0.isCircular());
}",0,assertTrue(piePlot0.isCircular())
project,0,test083645,"public void test083645() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLegendItemShape();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test084646,"public void test084646() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.setLabelGap(1663.0);
    assertEquals(1663.0, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test085647,"public void test085647() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.getLabelLinkStroke();
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test085648,"public void test085648() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.getLabelLinkStroke();
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test085649,"public void test085649() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.getLabelLinkStroke();
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,"assertEquals(0, piePlot3D0.getPieIndex())"
project,0,test085650,"public void test085650() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.getLabelLinkStroke();
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test085651,"public void test085651() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.getLabelLinkStroke();
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test085652,"public void test085652() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.getLabelLinkStroke();
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test085653,"public void test085653() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.getLabelLinkStroke();
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test085654,"public void test085654() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.getLabelLinkStroke();
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test085655,"public void test085655() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.getLabelLinkStroke();
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test085656,"public void test085656() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.getLabelLinkStroke();
    assertFalse(piePlot3D0.isCircular());
}",0,assertTrue(piePlot3D0.isCircular())
project,0,test085657,"public void test085657() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    BasicStroke basicStroke0 = (BasicStroke) piePlot3D0.getLabelLinkStroke();
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test086659,"public void test086659() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getStartAngle();
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test086660,"public void test086660() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getStartAngle();
    assertFalse(piePlot3D0.isCircular());
}",0,
project,0,test086661,"public void test086661() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getStartAngle();
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test086662,"public void test086662() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getStartAngle();
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test086663,"public void test086663() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getStartAngle();
    assertEquals(90.0, double0, 0.01);
}",0,
project,0,test086664,"public void test086664() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getStartAngle();
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test086665,"public void test086665() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getStartAngle();
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test086666,"public void test086666() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getStartAngle();
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test086667,"public void test086667() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getStartAngle();
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test086668,"public void test086668() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getStartAngle();
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test086669,"public void test086669() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getStartAngle();
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,
project,0,test087670,"public void test087670() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Locale locale0 = Locale.UK;
    StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator(locale0);
    piePlot3D0.setLabelGenerator(standardPieSectionLabelGenerator0);
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test087671,"public void test087671() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Locale locale0 = Locale.UK;
    StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator(locale0);
    piePlot3D0.setLabelGenerator(standardPieSectionLabelGenerator0);
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test087672,"public void test087672() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Locale locale0 = Locale.UK;
    StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator(locale0);
    piePlot3D0.setLabelGenerator(standardPieSectionLabelGenerator0);
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test087673,"public void test087673() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Locale locale0 = Locale.UK;
    StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator(locale0);
    piePlot3D0.setLabelGenerator(standardPieSectionLabelGenerator0);
    assertFalse(piePlot3D0.isCircular());
}",0,
project,0,test087674,"public void test087674() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Locale locale0 = Locale.UK;
    StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator(locale0);
    piePlot3D0.setLabelGenerator(standardPieSectionLabelGenerator0);
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test087675,"public void test087675() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Locale locale0 = Locale.UK;
    StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator(locale0);
    piePlot3D0.setLabelGenerator(standardPieSectionLabelGenerator0);
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,"assertEquals(0, piePlot3D0.getPieIndex())"
project,0,test087676,"public void test087676() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Locale locale0 = Locale.UK;
    StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator(locale0);
    piePlot3D0.setLabelGenerator(standardPieSectionLabelGenerator0);
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test087677,"public void test087677() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Locale locale0 = Locale.UK;
    StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator(locale0);
    piePlot3D0.setLabelGenerator(standardPieSectionLabelGenerator0);
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test087678,"public void test087678() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Locale locale0 = Locale.UK;
    StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator(locale0);
    piePlot3D0.setLabelGenerator(standardPieSectionLabelGenerator0);
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test087679,"public void test087679() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Locale locale0 = Locale.UK;
    StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator(locale0);
    piePlot3D0.setLabelGenerator(standardPieSectionLabelGenerator0);
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test087680,"public void test087680() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Locale locale0 = Locale.UK;
    StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator(locale0);
    piePlot3D0.setLabelGenerator(standardPieSectionLabelGenerator0);
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test088681,"public void test088681() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test088682,"public void test088682() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    ringPlot0.setMinimumArcAngleToDraw(0.0);
    assertEquals(0.0, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test089683,"public void test089683() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    BasicStroke basicStroke0 = (BasicStroke) piePlot0.lookupSectionOutlineStroke(true);
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test089684,"public void test089684() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    BasicStroke basicStroke0 = (BasicStroke) piePlot0.lookupSectionOutlineStroke(true);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test089685,"public void test089685() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    BasicStroke basicStroke0 = (BasicStroke) piePlot0.lookupSectionOutlineStroke(true);
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test089686,"public void test089686() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    BasicStroke basicStroke0 = (BasicStroke) piePlot0.lookupSectionOutlineStroke(true);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test089687,"public void test089687() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    BasicStroke basicStroke0 = (BasicStroke) piePlot0.lookupSectionOutlineStroke(true);
    assertNotNull(basicStroke0);
}",0,assertNotNull(basicStroke0)
project,0,test089688,"public void test089688() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    BasicStroke basicStroke0 = (BasicStroke) piePlot0.lookupSectionOutlineStroke(true);
    assertTrue(piePlot0.isCircular());
}",0,assertTrue(piePlot0.isCircular())
project,0,test089689,"public void test089689() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    BasicStroke basicStroke0 = (BasicStroke) piePlot0.lookupSectionOutlineStroke(true);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test089691,"public void test089691() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    BasicStroke basicStroke0 = (BasicStroke) piePlot0.lookupSectionOutlineStroke(true);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test089692,"public void test089692() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    BasicStroke basicStroke0 = (BasicStroke) piePlot0.lookupSectionOutlineStroke(true);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test089693,"public void test089693() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    BasicStroke basicStroke0 = (BasicStroke) piePlot0.lookupSectionOutlineStroke(true);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test089694,"public void test089694() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    BasicStroke basicStroke0 = (BasicStroke) piePlot0.lookupSectionOutlineStroke(true);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test089695,"public void test089695() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    BasicStroke basicStroke0 = (BasicStroke) piePlot0.lookupSectionOutlineStroke(true);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test090696,"public void test090696() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setPieIndex(0);
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test090697,"public void test090697() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setPieIndex(0);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test090698,"public void test090698() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setPieIndex(0);
    assertEquals(0, piePlot0.getPieIndex());
}",0,
project,0,test090699,"public void test090699() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setPieIndex(0);
    assertTrue(piePlot0.isCircular());
}",0,
project,0,test090700,"public void test090700() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setPieIndex(0);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test090701,"public void test090701() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setPieIndex(0);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test090702,"public void test090702() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setPieIndex(0);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test090703,"public void test090703() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setPieIndex(0);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test090704,"public void test090704() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setPieIndex(0);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test090705,"public void test090705() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setPieIndex(0);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test090706,"public void test090706() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setPieIndex(0);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test091707,"public void test091707() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getSimpleLabels();
    assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test091708,"public void test091708() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getSimpleLabels();
    assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test091709,"public void test091709() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getSimpleLabels();
    assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
}",0,
project,0,test091710,"public void test091710() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getSimpleLabels();
    assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test091711,"public void test091711() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getSimpleLabels();
    assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test091712,"public void test091712() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getSimpleLabels();
    assertTrue(ringPlot0.getSectionOutlinesVisible());
}",0,assertTrue(ringPlot0.getSectionOutlinesVisible())
project,0,test091713,"public void test091713() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getSimpleLabels();
    assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
}",0,
project,0,test091714,"public void test091714() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getSimpleLabels();
    assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test091715,"public void test091715() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getSimpleLabels();
    assertEquals(0, ringPlot0.getPieIndex());
}",0,"assertEquals(0, ringPlot0.getPieIndex())"
project,0,test091716,"public void test091716() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getSimpleLabels();
    assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
}",0,
project,0,test091717,"public void test091717() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.getSimpleLabels();
    assertTrue(ringPlot0.isCircular());
}",0,assertTrue(ringPlot0.isCircular())
project,0,test092718,"public void test092718() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLabelFont();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test092719,"public void test092719() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLabelFont();
    assertTrue(piePlot0.isCircular());
}",0,
project,0,test092720,"public void test092720() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLabelFont();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test092721,"public void test092721() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLabelFont();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test092722,"public void test092722() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLabelFont();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test092723,"public void test092723() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLabelFont();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test092724,"public void test092724() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLabelFont();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test092725,"public void test092725() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLabelFont();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test092726,"public void test092726() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLabelFont();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test092727,"public void test092727() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLabelFont();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test092728,"public void test092728() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getLabelFont();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test093729,"public void test093729() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    ringPlot0.setShadowXOffset(2597.28394812988);
    assertEquals(2597.28394812988, ringPlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test094730,"public void test094730() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getToolTipGenerator();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test094731,"public void test094731() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getToolTipGenerator();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test094732,"public void test094732() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getToolTipGenerator();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test094733,"public void test094733() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getToolTipGenerator();
    assertTrue(piePlot0.isCircular());
}",0,assertTrue(piePlot0.isCircular())
project,0,test094734,"public void test094734() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getToolTipGenerator();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test094735,"public void test094735() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getToolTipGenerator();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test094736,"public void test094736() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getToolTipGenerator();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test094737,"public void test094737() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getToolTipGenerator();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test094738,"public void test094738() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getToolTipGenerator();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test094739,"public void test094739() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getToolTipGenerator();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test094740,"public void test094740() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getToolTipGenerator();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test095741,"public void test095741() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    ringPlot0.getPlotType();
    assertTrue(ringPlot0.getSectionOutlinesVisible());
}",0,assertTrue(ringPlot0.getSectionOutlinesVisible())
project,0,test095742,"public void test095742() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    ringPlot0.getPlotType();
    assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
}",0,
project,0,test095743,"public void test095743() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    ringPlot0.getPlotType();
    assertEquals(0, ringPlot0.getPieIndex());
}",0,"assertEquals(0, ringPlot0.getPieIndex())"
project,0,test095744,"public void test095744() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    ringPlot0.getPlotType();
    assertTrue(ringPlot0.isCircular());
}",0,
project,0,test095745,"public void test095745() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    ringPlot0.getPlotType();
    assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test095746,"public void test095746() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    ringPlot0.getPlotType();
    assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test095747,"public void test095747() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    ringPlot0.getPlotType();
    assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test095748,"public void test095748() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    ringPlot0.getPlotType();
    assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test095749,"public void test095749() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    ringPlot0.getPlotType();
    assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
}",0,
project,0,test095750,"public void test095750() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    ringPlot0.getPlotType();
    assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
}",0,
project,0,test095751,"public void test095751() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
    ringPlot0.getPlotType();
    assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test096752,"public void test096752() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getURLGenerator();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test096753,"public void test096753() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getURLGenerator();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test096754,"public void test096754() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getURLGenerator();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test096755,"public void test096755() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getURLGenerator();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test096756,"public void test096756() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getURLGenerator();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test096757,"public void test096757() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getURLGenerator();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test096758,"public void test096758() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getURLGenerator();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test096759,"public void test096759() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getURLGenerator();
    assertTrue(piePlot0.isCircular());
}",0,
project,0,test096760,"public void test096760() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getURLGenerator();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test096761,"public void test096761() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getURLGenerator();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test096762,"public void test096762() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getURLGenerator();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test097763,"public void test097763() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    DateAxis dateAxis0 = new DateAxis(""1Q|(6Lb#&?lg)EI\u0004"");
    ringPlot0.setSectionPaint(""1Q|(6Lb#&?lg)EI\u0004"", dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
    assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test097764,"public void test097764() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    DateAxis dateAxis0 = new DateAxis(""1Q|(6Lb#&?lg)EI\u0004"");
    ringPlot0.setSectionPaint(""1Q|(6Lb#&?lg)EI\u0004"", dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
    assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
}",0,
project,0,test097765,"public void test097765() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    DateAxis dateAxis0 = new DateAxis(""1Q|(6Lb#&?lg)EI\u0004"");
    ringPlot0.setSectionPaint(""1Q|(6Lb#&?lg)EI\u0004"", dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
    assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
}",0,
project,0,test097766,"public void test097766() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    DateAxis dateAxis0 = new DateAxis(""1Q|(6Lb#&?lg)EI\u0004"");
    ringPlot0.setSectionPaint(""1Q|(6Lb#&?lg)EI\u0004"", dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
    assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
}",0,
project,0,test097767,"public void test097767() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    DateAxis dateAxis0 = new DateAxis(""1Q|(6Lb#&?lg)EI\u0004"");
    ringPlot0.setSectionPaint(""1Q|(6Lb#&?lg)EI\u0004"", dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
    assertEquals(0, ringPlot0.getPieIndex());
}",0,"assertEquals(0, ringPlot0.getPieIndex())"
project,0,test097768,"public void test097768() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    DateAxis dateAxis0 = new DateAxis(""1Q|(6Lb#&?lg)EI\u0004"");
    ringPlot0.setSectionPaint(""1Q|(6Lb#&?lg)EI\u0004"", dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
    assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test097769,"public void test097769() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    DateAxis dateAxis0 = new DateAxis(""1Q|(6Lb#&?lg)EI\u0004"");
    ringPlot0.setSectionPaint(""1Q|(6Lb#&?lg)EI\u0004"", dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
    assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test097770,"public void test097770() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    DateAxis dateAxis0 = new DateAxis(""1Q|(6Lb#&?lg)EI\u0004"");
    ringPlot0.setSectionPaint(""1Q|(6Lb#&?lg)EI\u0004"", dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
    assertTrue(ringPlot0.isCircular());
}",0,
project,0,test097771,"public void test097771() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    DateAxis dateAxis0 = new DateAxis(""1Q|(6Lb#&?lg)EI\u0004"");
    ringPlot0.setSectionPaint(""1Q|(6Lb#&?lg)EI\u0004"", dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
    assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test097772,"public void test097772() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    DateAxis dateAxis0 = new DateAxis(""1Q|(6Lb#&?lg)EI\u0004"");
    ringPlot0.setSectionPaint(""1Q|(6Lb#&?lg)EI\u0004"", dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
    assertTrue(ringPlot0.getSectionOutlinesVisible());
}",0,assertTrue(ringPlot0.getSectionOutlinesVisible())
project,0,test097773,"public void test097773() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    DateAxis dateAxis0 = new DateAxis(""1Q|(6Lb#&?lg)EI\u0004"");
    ringPlot0.setSectionPaint(""1Q|(6Lb#&?lg)EI\u0004"", dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
    assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test098774,"public void test098774() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator();
    piePlot3D0.setURLGenerator(standardPieURLGenerator0);
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test098775,"public void test098775() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator();
    piePlot3D0.setURLGenerator(standardPieURLGenerator0);
    assertFalse(piePlot3D0.isCircular());
}",0,
project,0,test098776,"public void test098776() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator();
    piePlot3D0.setURLGenerator(standardPieURLGenerator0);
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test098777,"public void test098777() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator();
    piePlot3D0.setURLGenerator(standardPieURLGenerator0);
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test098778,"public void test098778() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator();
    piePlot3D0.setURLGenerator(standardPieURLGenerator0);
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test098779,"public void test098779() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator();
    piePlot3D0.setURLGenerator(standardPieURLGenerator0);
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test098780,"public void test098780() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator();
    piePlot3D0.setURLGenerator(standardPieURLGenerator0);
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test098781,"public void test098781() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator();
    piePlot3D0.setURLGenerator(standardPieURLGenerator0);
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,"assertEquals(0, piePlot3D0.getPieIndex())"
project,0,test098782,"public void test098782() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator();
    piePlot3D0.setURLGenerator(standardPieURLGenerator0);
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test098783,"public void test098783() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator();
    piePlot3D0.setURLGenerator(standardPieURLGenerator0);
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test098784,"public void test098784() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator();
    piePlot3D0.setURLGenerator(standardPieURLGenerator0);
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test099785,"public void test099785() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint((byte) 10);
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test099786,"public void test099786() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint((byte) 10);
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test099787,"public void test099787() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint((byte) 10);
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test099788,"public void test099788() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint((byte) 10);
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test099789,"public void test099789() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint((byte) 10);
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test099790,"public void test099790() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint((byte) 10);
    assertNotNull(color0);
}",0,assertNotNull(color0)
project,0,test099791,"public void test099791() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint((byte) 10);
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test099793,"public void test099793() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint((byte) 10);
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test099794,"public void test099794() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint((byte) 10);
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,
project,0,test099795,"public void test099795() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint((byte) 10);
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test099796,"public void test099796() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint((byte) 10);
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test099797,"public void test099797() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.lookupSectionOutlinePaint((byte) 10);
    assertFalse(piePlot3D0.isCircular());
}",0,assertTrue(piePlot3D0.isCircular())
project,0,test100798,"public void test100798() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test100799,"public void test100799() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test100800,"public void test100800() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test100801,"public void test100801() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test100802,"public void test100802() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test100803,"public void test100803() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
    assertFalse(piePlot3D0.isCircular());
}",0,
project,0,test100804,"public void test100804() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test100805,"public void test100805() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test100806,"public void test100806() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test100807,"public void test100807() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test100809,"public void test100809() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionOutlinePaint();
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,
project,0,test101810,"public void test101810() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreNullValues();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test101811,"public void test101811() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreNullValues();
    assertEquals(0, piePlot0.getPieIndex());
}",0,
project,0,test101812,"public void test101812() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreNullValues();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test101813,"public void test101813() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreNullValues();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test101814,"public void test101814() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreNullValues();
    assertTrue(piePlot0.isCircular());
}",0,assertTrue(piePlot0.isCircular())
project,0,test101815,"public void test101815() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreNullValues();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test101816,"public void test101816() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreNullValues();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test101817,"public void test101817() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreNullValues();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test101818,"public void test101818() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreNullValues();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test101819,"public void test101819() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreNullValues();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test101820,"public void test101820() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreNullValues();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test102821,"public void test102821() throws Throwable {
    TableOrder tableOrder0 = TableOrder.BY_ROW;
    CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset((CategoryDataset) null, tableOrder0, 293);
    PiePlot3D piePlot3D0 = new PiePlot3D(categoryToPieDataset0);
    piePlot3D0.setMaximumLabelWidth(2.0);
    assertEquals(2.0, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test103822,"public void test103822() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
    // Undeclared exception!
    try {
        piePlot3D0.getSectionOutlinePaint((Comparable) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'key' argument.
        //
        verifyException(""org.jfree.chart.PaintMap"", e);
    }
}",0,
project,0,test104823,"public void test104823() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator(""llDX)"", ""llDX)"");
    piePlot3D0.setLegendLabelURLGenerator(standardPieURLGenerator0);
    piePlot3D0.getLegendLabelURLGenerator();
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test104824,"public void test104824() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator(""llDX)"", ""llDX)"");
    piePlot3D0.setLegendLabelURLGenerator(standardPieURLGenerator0);
    piePlot3D0.getLegendLabelURLGenerator();
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,"assertEquals(0, piePlot3D0.getPieIndex())"
project,0,test104825,"public void test104825() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator(""llDX)"", ""llDX)"");
    piePlot3D0.setLegendLabelURLGenerator(standardPieURLGenerator0);
    piePlot3D0.getLegendLabelURLGenerator();
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test104826,"public void test104826() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator(""llDX)"", ""llDX)"");
    piePlot3D0.setLegendLabelURLGenerator(standardPieURLGenerator0);
    piePlot3D0.getLegendLabelURLGenerator();
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test104827,"public void test104827() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator(""llDX)"", ""llDX)"");
    piePlot3D0.setLegendLabelURLGenerator(standardPieURLGenerator0);
    piePlot3D0.getLegendLabelURLGenerator();
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test104828,"public void test104828() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator(""llDX)"", ""llDX)"");
    piePlot3D0.setLegendLabelURLGenerator(standardPieURLGenerator0);
    piePlot3D0.getLegendLabelURLGenerator();
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test104829,"public void test104829() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator(""llDX)"", ""llDX)"");
    piePlot3D0.setLegendLabelURLGenerator(standardPieURLGenerator0);
    piePlot3D0.getLegendLabelURLGenerator();
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test104830,"public void test104830() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator(""llDX)"", ""llDX)"");
    piePlot3D0.setLegendLabelURLGenerator(standardPieURLGenerator0);
    piePlot3D0.getLegendLabelURLGenerator();
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test104831,"public void test104831() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator(""llDX)"", ""llDX)"");
    piePlot3D0.setLegendLabelURLGenerator(standardPieURLGenerator0);
    piePlot3D0.getLegendLabelURLGenerator();
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test104832,"public void test104832() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator(""llDX)"", ""llDX)"");
    piePlot3D0.setLegendLabelURLGenerator(standardPieURLGenerator0);
    piePlot3D0.getLegendLabelURLGenerator();
    assertFalse(piePlot3D0.isCircular());
}",0,assertTrue(piePlot3D0.isCircular())
project,0,test104833,"public void test104833() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    StandardPieURLGenerator standardPieURLGenerator0 = new StandardPieURLGenerator(""llDX)"", ""llDX)"");
    piePlot3D0.setLegendLabelURLGenerator(standardPieURLGenerator0);
    piePlot3D0.getLegendLabelURLGenerator();
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test105834,"public void test105834() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setIgnoreNullValues(false);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test105835,"public void test105835() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setIgnoreNullValues(false);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test105836,"public void test105836() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setIgnoreNullValues(false);
    assertTrue(piePlot0.isCircular());
}",0,
project,0,test105837,"public void test105837() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setIgnoreNullValues(false);
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test105838,"public void test105838() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setIgnoreNullValues(false);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test105839,"public void test105839() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setIgnoreNullValues(false);
    assertFalse(piePlot0.getIgnoreNullValues());
}",0,assertFalse(piePlot0.getIgnoreNullValues())
project,0,test105840,"public void test105840() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setIgnoreNullValues(false);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test105841,"public void test105841() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setIgnoreNullValues(false);
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test105842,"public void test105842() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setIgnoreNullValues(false);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test105843,"public void test105843() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setIgnoreNullValues(false);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test105844,"public void test105844() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setIgnoreNullValues(false);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test105845,"public void test105845() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setIgnoreNullValues(false);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test106846,"public void test106846() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test106847,"public void test106847() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test106848,"public void test106848() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test106849,"public void test106849() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test106850,"public void test106850() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test106851,"public void test106851() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,"assertEquals(0, piePlot3D0.getPieIndex())"
project,0,test106852,"public void test106852() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test106853,"public void test106853() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test106854,"public void test106854() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test106855,"public void test106855() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
    assertFalse(piePlot3D0.isCircular());
}",0,assertTrue(piePlot3D0.isCircular())
project,0,test106856,"public void test106856() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
    assertEquals(2.0, rectangleInsets0.getTop(), 0.01);
}",0,
project,0,test106857,"public void test106857() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getLabelPadding();
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test107858,"public void test107858() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getSimpleLabelOffset();
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test107859,"public void test107859() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getSimpleLabelOffset();
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,"assertEquals(0, piePlot3D0.getPieIndex())"
project,0,test107860,"public void test107860() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getSimpleLabelOffset();
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test107861,"public void test107861() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getSimpleLabelOffset();
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test107862,"public void test107862() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getSimpleLabelOffset();
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test107863,"public void test107863() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getSimpleLabelOffset();
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test107864,"public void test107864() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getSimpleLabelOffset();
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test107865,"public void test107865() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getSimpleLabelOffset();
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test107866,"public void test107866() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getSimpleLabelOffset();
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test107867,"public void test107867() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getSimpleLabelOffset();
    assertFalse(piePlot3D0.isCircular());
}",0,assertTrue(piePlot3D0.isCircular())
project,0,test107868,"public void test107868() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getSimpleLabelOffset();
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test107869,"public void test107869() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    RectangleInsets rectangleInsets0 = piePlot3D0.getSimpleLabelOffset();
    assertEquals(0.18, rectangleInsets0.getTop(), 0.01);
}",0,
project,0,test108870,"public void test108870() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
    piePlot3D0.setCircular(true);
    assertTrue(piePlot3D0.isCircular());
}",0,assertTrue(piePlot3D0.isCircular())
project,0,test109871,"public void test109871() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    PiePlot3D piePlot3D0 = new PiePlot3D(defaultPieDataset0);
    piePlot3D0.setStartAngle(0.025);
    assertEquals(0.025, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test110872,"public void test110872() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test110873,"public void test110873() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.setShadowYOffset(0.0);
    assertTrue(piePlot0.isCircular());
}",0,assertTrue(piePlot0.isCircular())
project,0,test111874,"public void test111874() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_PAINT;
    piePlot0.setSectionOutlinePaint("""", color0);
    Color color1 = (Color) piePlot0.lookupSectionOutlinePaint("""", false);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test111875,"public void test111875() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_PAINT;
    piePlot0.setSectionOutlinePaint("""", color0);
    Color color1 = (Color) piePlot0.lookupSectionOutlinePaint("""", false);
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test111876,"public void test111876() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_PAINT;
    piePlot0.setSectionOutlinePaint("""", color0);
    Color color1 = (Color) piePlot0.lookupSectionOutlinePaint("""", false);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test111877,"public void test111877() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_PAINT;
    piePlot0.setSectionOutlinePaint("""", color0);
    Color color1 = (Color) piePlot0.lookupSectionOutlinePaint("""", false);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test111878,"public void test111878() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_PAINT;
    piePlot0.setSectionOutlinePaint("""", color0);
    Color color1 = (Color) piePlot0.lookupSectionOutlinePaint("""", false);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test111879,"public void test111879() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_PAINT;
    piePlot0.setSectionOutlinePaint("""", color0);
    Color color1 = (Color) piePlot0.lookupSectionOutlinePaint("""", false);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test111880,"public void test111880() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_PAINT;
    piePlot0.setSectionOutlinePaint("""", color0);
    Color color1 = (Color) piePlot0.lookupSectionOutlinePaint("""", false);
    assertTrue(piePlot0.isCircular());
}",0,assertTrue(piePlot0.isCircular())
project,0,test111881,"public void test111881() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_PAINT;
    piePlot0.setSectionOutlinePaint("""", color0);
    Color color1 = (Color) piePlot0.lookupSectionOutlinePaint("""", false);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test111882,"public void test111882() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_PAINT;
    piePlot0.setSectionOutlinePaint("""", color0);
    Color color1 = (Color) piePlot0.lookupSectionOutlinePaint("""", false);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test111884,"public void test111884() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_PAINT;
    piePlot0.setSectionOutlinePaint("""", color0);
    Color color1 = (Color) piePlot0.lookupSectionOutlinePaint("""", false);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test111885,"public void test111885() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) SpiderWebPlot.DEFAULT_LABEL_OUTLINE_PAINT;
    piePlot0.setSectionOutlinePaint("""", color0);
    Color color1 = (Color) piePlot0.lookupSectionOutlinePaint("""", false);
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test112886,"public void test112886() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getShadowYOffset();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test112887,"public void test112887() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getShadowYOffset();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test112888,"public void test112888() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getShadowYOffset();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test112889,"public void test112889() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getShadowYOffset();
    assertEquals(4.0, double0, 0.01);
}",0,
project,0,test112890,"public void test112890() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getShadowYOffset();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test112891,"public void test112891() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getShadowYOffset();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test112892,"public void test112892() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getShadowYOffset();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test112893,"public void test112893() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getShadowYOffset();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test112894,"public void test112894() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getShadowYOffset();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test112895,"public void test112895() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getShadowYOffset();
    assertEquals(0, piePlot0.getPieIndex());
}",0,
project,0,test112896,"public void test112896() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getShadowYOffset();
    assertTrue(piePlot0.isCircular());
}",0,assertTrue(piePlot0.isCircular())
project,0,test113897,"public void test113897() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot piePlot0 = new PiePlot(jDBCPieDataset0);
    boolean boolean0 = piePlot0.getLabelLinksVisible();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test113898,"public void test113898() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot piePlot0 = new PiePlot(jDBCPieDataset0);
    boolean boolean0 = piePlot0.getLabelLinksVisible();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test113899,"public void test113899() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot piePlot0 = new PiePlot(jDBCPieDataset0);
    boolean boolean0 = piePlot0.getLabelLinksVisible();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test113900,"public void test113900() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot piePlot0 = new PiePlot(jDBCPieDataset0);
    boolean boolean0 = piePlot0.getLabelLinksVisible();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test113901,"public void test113901() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot piePlot0 = new PiePlot(jDBCPieDataset0);
    boolean boolean0 = piePlot0.getLabelLinksVisible();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test113902,"public void test113902() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot piePlot0 = new PiePlot(jDBCPieDataset0);
    boolean boolean0 = piePlot0.getLabelLinksVisible();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test113903,"public void test113903() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot piePlot0 = new PiePlot(jDBCPieDataset0);
    boolean boolean0 = piePlot0.getLabelLinksVisible();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test113904,"public void test113904() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot piePlot0 = new PiePlot(jDBCPieDataset0);
    boolean boolean0 = piePlot0.getLabelLinksVisible();
    assertTrue(piePlot0.isCircular());
}",0,assertTrue(piePlot0.isCircular())
project,0,test113905,"public void test113905() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot piePlot0 = new PiePlot(jDBCPieDataset0);
    boolean boolean0 = piePlot0.getLabelLinksVisible();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test113906,"public void test113906() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot piePlot0 = new PiePlot(jDBCPieDataset0);
    boolean boolean0 = piePlot0.getLabelLinksVisible();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(1, piePlot0.getPieIndex())"
project,0,test113907,"public void test113907() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot piePlot0 = new PiePlot(jDBCPieDataset0);
    boolean boolean0 = piePlot0.getLabelLinksVisible();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test113908,"public void test113908() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot piePlot0 = new PiePlot(jDBCPieDataset0);
    boolean boolean0 = piePlot0.getLabelLinksVisible();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test114909,"public void test114909() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator(""69%N#p"");
    ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
    assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test114910,"public void test114910() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator(""69%N#p"");
    ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
    assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
}",0,
project,0,test114911,"public void test114911() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator(""69%N#p"");
    ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
    assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
}",0,
project,0,test114912,"public void test114912() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator(""69%N#p"");
    ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
    assertTrue(ringPlot0.isCircular());
}",0,assertFalse(ringPlot0.isCircular())
project,0,test114913,"public void test114913() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator(""69%N#p"");
    ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
    assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test114914,"public void test114914() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator(""69%N#p"");
    ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
    assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test114915,"public void test114915() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator(""69%N#p"");
    ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
    assertTrue(ringPlot0.getSectionOutlinesVisible());
}",0,assertTrue(ringPlot0.getSectionOutlinesVisible())
project,0,test114916,"public void test114916() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator(""69%N#p"");
    ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
    assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
}",0,
project,0,test114917,"public void test114917() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator(""69%N#p"");
    ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
    assertEquals(0, ringPlot0.getPieIndex());
}",0,"assertEquals(0, ringPlot0.getPieIndex())"
project,0,test114918,"public void test114918() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator(""69%N#p"");
    ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
    assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test114919,"public void test114919() throws Throwable {
    RingPlot ringPlot0 = new RingPlot((PieDataset) null);
    StandardPieToolTipGenerator standardPieToolTipGenerator0 = new StandardPieToolTipGenerator(""69%N#p"");
    ringPlot0.setToolTipGenerator(standardPieToolTipGenerator0);
    assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test115920,"public void test115920() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
    TableOrder tableOrder0 = TableOrder.BY_COLUMN;
    CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(jDBCCategoryDataset0, tableOrder0, 55);
    PiePlot piePlot0 = new PiePlot(categoryToPieDataset0);
    // Undeclared exception!
    try {
        piePlot0.getSectionOutlineStroke((Comparable) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'key' argument.
        //
        verifyException(""org.jfree.chart.StrokeMap"", e);
    }
}",1,
project,0,test116921,"public void test116921() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test116922,"public void test116922() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setSectionOutlinesVisible(false);
    assertFalse(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test117923,"public void test117923() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionPaint();
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test117924,"public void test117924() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionPaint();
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test117925,"public void test117925() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionPaint();
    assertFalse(piePlot3D0.isCircular());
}",0,
project,0,test117926,"public void test117926() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionPaint();
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test117927,"public void test117927() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionPaint();
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test117928,"public void test117928() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionPaint();
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test117929,"public void test117929() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionPaint();
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test117930,"public void test117930() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionPaint();
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,"assertEquals(0, piePlot3D0.getPieIndex())"
project,0,test117931,"public void test117931() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionPaint();
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test117933,"public void test117933() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionPaint();
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test117934,"public void test117934() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getBaseSectionPaint();
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test118935,"public void test118935() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setLabelBackgroundPaint((Paint) null);
    Paint paint0 = piePlot0.getLabelBackgroundPaint();
    assertNull(paint0);
}",0,assertNotNull(paint0)
project,0,test118936,"public void test118936() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setLabelBackgroundPaint((Paint) null);
    Paint paint0 = piePlot0.getLabelBackgroundPaint();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test118937,"public void test118937() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setLabelBackgroundPaint((Paint) null);
    Paint paint0 = piePlot0.getLabelBackgroundPaint();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test118938,"public void test118938() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setLabelBackgroundPaint((Paint) null);
    Paint paint0 = piePlot0.getLabelBackgroundPaint();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test118939,"public void test118939() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setLabelBackgroundPaint((Paint) null);
    Paint paint0 = piePlot0.getLabelBackgroundPaint();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test118940,"public void test118940() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setLabelBackgroundPaint((Paint) null);
    Paint paint0 = piePlot0.getLabelBackgroundPaint();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test118941,"public void test118941() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setLabelBackgroundPaint((Paint) null);
    Paint paint0 = piePlot0.getLabelBackgroundPaint();
    assertTrue(piePlot0.isCircular());
}",0,
project,0,test118942,"public void test118942() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setLabelBackgroundPaint((Paint) null);
    Paint paint0 = piePlot0.getLabelBackgroundPaint();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test118943,"public void test118943() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setLabelBackgroundPaint((Paint) null);
    Paint paint0 = piePlot0.getLabelBackgroundPaint();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test118944,"public void test118944() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setLabelBackgroundPaint((Paint) null);
    Paint paint0 = piePlot0.getLabelBackgroundPaint();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test118945,"public void test118945() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setLabelBackgroundPaint((Paint) null);
    Paint paint0 = piePlot0.getLabelBackgroundPaint();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test118946,"public void test118946() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setLabelBackgroundPaint((Paint) null);
    Paint paint0 = piePlot0.getLabelBackgroundPaint();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test119947,"public void test119947() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getShadowXOffset();
    assertEquals(0, ringPlot0.getPieIndex());
}",0,"assertEquals(0, ringPlot0.getPieIndex())"
project,0,test119948,"public void test119948() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getShadowXOffset();
    assertTrue(ringPlot0.getSectionOutlinesVisible());
}",0,assertTrue(ringPlot0.getSectionOutlinesVisible())
project,0,test119949,"public void test119949() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getShadowXOffset();
    assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
}",0,
project,0,test119950,"public void test119950() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getShadowXOffset();
    assertTrue(ringPlot0.isCircular());
}",1,
project,0,test119951,"public void test119951() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getShadowXOffset();
    assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
}",0,
project,0,test119952,"public void test119952() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getShadowXOffset();
    assertEquals(4.0, double0, 0.01);
}",0,
project,0,test119953,"public void test119953() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getShadowXOffset();
    assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
}",0,
project,0,test119954,"public void test119954() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getShadowXOffset();
    assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test119955,"public void test119955() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getShadowXOffset();
    assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test119956,"public void test119956() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getShadowXOffset();
    assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test119957,"public void test119957() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    double double0 = ringPlot0.getShadowXOffset();
    assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test120958,"public void test120958() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    piePlot3D0.setIgnoreZeroValues(true);
    assertTrue(piePlot3D0.getIgnoreZeroValues());
}",0,assertTrue(piePlot3D0.getIgnoreZeroValues())
project,0,test121959,"public void test121959() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot0.getLegendLabelGenerator();
    piePlot0.setLegendLabelGenerator(pieSectionLabelGenerator0);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test121960,"public void test121960() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot0.getLegendLabelGenerator();
    piePlot0.setLegendLabelGenerator(pieSectionLabelGenerator0);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test121961,"public void test121961() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot0.getLegendLabelGenerator();
    piePlot0.setLegendLabelGenerator(pieSectionLabelGenerator0);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test121962,"public void test121962() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot0.getLegendLabelGenerator();
    piePlot0.setLegendLabelGenerator(pieSectionLabelGenerator0);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test121963,"public void test121963() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot0.getLegendLabelGenerator();
    piePlot0.setLegendLabelGenerator(pieSectionLabelGenerator0);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test121964,"public void test121964() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot0.getLegendLabelGenerator();
    piePlot0.setLegendLabelGenerator(pieSectionLabelGenerator0);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test121965,"public void test121965() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot0.getLegendLabelGenerator();
    piePlot0.setLegendLabelGenerator(pieSectionLabelGenerator0);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test121966,"public void test121966() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot0.getLegendLabelGenerator();
    piePlot0.setLegendLabelGenerator(pieSectionLabelGenerator0);
    assertTrue(piePlot0.isCircular());
}",0,assertTrue(piePlot0.isCircular())
project,0,test121967,"public void test121967() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot0.getLegendLabelGenerator();
    piePlot0.setLegendLabelGenerator(pieSectionLabelGenerator0);
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test121968,"public void test121968() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot0.getLegendLabelGenerator();
    piePlot0.setLegendLabelGenerator(pieSectionLabelGenerator0);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test121969,"public void test121969() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    PieSectionLabelGenerator pieSectionLabelGenerator0 = piePlot0.getLegendLabelGenerator();
    piePlot0.setLegendLabelGenerator(pieSectionLabelGenerator0);
    assertEquals(0, piePlot0.getPieIndex());
}",0,
project,0,test122970,"public void test122970() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getLegendLabelURLGenerator();
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test122971,"public void test122971() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getLegendLabelURLGenerator();
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test122972,"public void test122972() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getLegendLabelURLGenerator();
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test122973,"public void test122973() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getLegendLabelURLGenerator();
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test122974,"public void test122974() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getLegendLabelURLGenerator();
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test122975,"public void test122975() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getLegendLabelURLGenerator();
    assertFalse(piePlot3D0.isCircular());
}",0,assertTrue(piePlot3D0.isCircular())
project,0,test122976,"public void test122976() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getLegendLabelURLGenerator();
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test122977,"public void test122977() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getLegendLabelURLGenerator();
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test122978,"public void test122978() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getLegendLabelURLGenerator();
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test122979,"public void test122979() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getLegendLabelURLGenerator();
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test122980,"public void test122980() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    piePlot3D0.getLegendLabelURLGenerator();
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,"assertEquals(0, piePlot3D0.getPieIndex())"
project,0,test123981,"public void test123981() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelOutlineStroke(piePlot0.DEFAULT_LABEL_OUTLINE_STROKE);
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test123982,"public void test123982() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelOutlineStroke(piePlot0.DEFAULT_LABEL_OUTLINE_STROKE);
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test123983,"public void test123983() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelOutlineStroke(piePlot0.DEFAULT_LABEL_OUTLINE_STROKE);
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test123984,"public void test123984() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelOutlineStroke(piePlot0.DEFAULT_LABEL_OUTLINE_STROKE);
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test123985,"public void test123985() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelOutlineStroke(piePlot0.DEFAULT_LABEL_OUTLINE_STROKE);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test123986,"public void test123986() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelOutlineStroke(piePlot0.DEFAULT_LABEL_OUTLINE_STROKE);
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test123987,"public void test123987() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelOutlineStroke(piePlot0.DEFAULT_LABEL_OUTLINE_STROKE);
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test123988,"public void test123988() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelOutlineStroke(piePlot0.DEFAULT_LABEL_OUTLINE_STROKE);
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test123989,"public void test123989() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelOutlineStroke(piePlot0.DEFAULT_LABEL_OUTLINE_STROKE);
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test123990,"public void test123990() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelOutlineStroke(piePlot0.DEFAULT_LABEL_OUTLINE_STROKE);
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test123991,"public void test123991() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelOutlineStroke(piePlot0.DEFAULT_LABEL_OUTLINE_STROKE);
    assertTrue(piePlot0.isCircular());
}",0,assertFalse(piePlot0.isCircular())
project,0,test124992,"public void test124992() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelLinkPaint();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test124993,"public void test124993() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelLinkPaint();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test124994,"public void test124994() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelLinkPaint();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test124995,"public void test124995() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelLinkPaint();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test124996,"public void test124996() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelLinkPaint();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test124997,"public void test124997() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelLinkPaint();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test124998,"public void test124998() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelLinkPaint();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test124999,"public void test124999() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelLinkPaint();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test1241000,"public void test1241000() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelLinkPaint();
    assertTrue(piePlot0.isCircular());
}",0,
project,0,test1241001,"public void test1241001() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelLinkPaint();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(1, piePlot0.getPieIndex())"
project,0,test1241003,"public void test1241003() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelLinkPaint();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test1251004,"public void test1251004() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getShadowPaint();
    piePlot3D0.setLabelOutlinePaint(color0);
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test1251005,"public void test1251005() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getShadowPaint();
    piePlot3D0.setLabelOutlinePaint(color0);
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test1251006,"public void test1251006() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getShadowPaint();
    piePlot3D0.setLabelOutlinePaint(color0);
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test1251007,"public void test1251007() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getShadowPaint();
    piePlot3D0.setLabelOutlinePaint(color0);
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,"assertEquals(0, piePlot3D0.getPieIndex())"
project,0,test1251008,"public void test1251008() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getShadowPaint();
    piePlot3D0.setLabelOutlinePaint(color0);
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test1251009,"public void test1251009() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getShadowPaint();
    piePlot3D0.setLabelOutlinePaint(color0);
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test1251011,"public void test1251011() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getShadowPaint();
    piePlot3D0.setLabelOutlinePaint(color0);
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test1251012,"public void test1251012() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getShadowPaint();
    piePlot3D0.setLabelOutlinePaint(color0);
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test1251013,"public void test1251013() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getShadowPaint();
    piePlot3D0.setLabelOutlinePaint(color0);
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test1251014,"public void test1251014() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getShadowPaint();
    piePlot3D0.setLabelOutlinePaint(color0);
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test1251015,"public void test1251015() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    Color color0 = (Color) piePlot3D0.getShadowPaint();
    piePlot3D0.setLabelOutlinePaint(color0);
    assertFalse(piePlot3D0.isCircular());
}",0,
project,0,test1261016,"public void test1261016() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getMinimumArcAngleToDraw();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test1261017,"public void test1261017() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getMinimumArcAngleToDraw();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test1261018,"public void test1261018() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getMinimumArcAngleToDraw();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test1261019,"public void test1261019() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getMinimumArcAngleToDraw();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test1261020,"public void test1261020() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getMinimumArcAngleToDraw();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test1261021,"public void test1261021() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getMinimumArcAngleToDraw();
    assertTrue(piePlot0.isCircular());
}",0,assertTrue(piePlot0.isCircular())
project,0,test1261022,"public void test1261022() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getMinimumArcAngleToDraw();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test1261023,"public void test1261023() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getMinimumArcAngleToDraw();
    assertEquals(1.0E-5, double0, 0.01);
}",0,
project,0,test1261024,"public void test1261024() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getMinimumArcAngleToDraw();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test1261025,"public void test1261025() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getMinimumArcAngleToDraw();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test1261026,"public void test1261026() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    double double0 = piePlot0.getMinimumArcAngleToDraw();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test1271027,"public void test1271027() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelShadowPaint();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test1271028,"public void test1271028() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelShadowPaint();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test1271029,"public void test1271029() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelShadowPaint();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test1271030,"public void test1271030() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelShadowPaint();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test1271031,"public void test1271031() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelShadowPaint();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test1271032,"public void test1271032() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelShadowPaint();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test1271033,"public void test1271033() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelShadowPaint();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test1271034,"public void test1271034() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelShadowPaint();
    assertTrue(piePlot0.isCircular());
}",1,
project,0,test1271035,"public void test1271035() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelShadowPaint();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test1271036,"public void test1271036() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelShadowPaint();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test1271037,"public void test1271037() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    Color color0 = (Color) piePlot0.getLabelShadowPaint();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test1281039,"public void test1281039() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    piePlot3D0.getDataset();
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test1281040,"public void test1281040() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    piePlot3D0.getDataset();
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test1281041,"public void test1281041() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    piePlot3D0.getDataset();
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test1281042,"public void test1281042() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    piePlot3D0.getDataset();
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test1281043,"public void test1281043() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    piePlot3D0.getDataset();
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test1281044,"public void test1281044() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    piePlot3D0.getDataset();
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,"assertEquals(0, piePlot3D0.getPieIndex())"
project,0,test1281045,"public void test1281045() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    piePlot3D0.getDataset();
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test1281046,"public void test1281046() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    piePlot3D0.getDataset();
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test1281047,"public void test1281047() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    piePlot3D0.getDataset();
    assertFalse(piePlot3D0.isCircular());
}",0,assertTrue(piePlot3D0.isCircular())
project,0,test1281048,"public void test1281048() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    piePlot3D0.getDataset();
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test1281049,"public void test1281049() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    piePlot3D0.getDataset();
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test1291050,"public void test1291050() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinksVisible(false);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(0.025, piePlot1.getLabelLinkMargin(), 0.01);
}",0,
project,0,test1291051,"public void test1291051() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinksVisible(false);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(1.0E-5, piePlot1.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test1291052,"public void test1291052() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinksVisible(false);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertTrue(piePlot1.isCircular());
}",0,assertTrue(piePlot1.isCircular())
project,0,test1291053,"public void test1291053() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinksVisible(false);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(0.14, piePlot1.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test1291054,"public void test1291054() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinksVisible(false);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertFalse(boolean0);
}",0,
project,0,test1291055,"public void test1291055() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinksVisible(false);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(0.025, piePlot1.getLabelGap(), 0.01);
}",0,
project,0,test1291056,"public void test1291056() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinksVisible(false);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(0.08, piePlot1.getInteriorGap(), 0.01);
}",0,
project,0,test1291057,"public void test1291057() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinksVisible(false);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(90.0, piePlot1.getStartAngle(), 0.01);
}",0,
project,0,test1291058,"public void test1291058() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinksVisible(false);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(4.0, piePlot1.getShadowYOffset(), 0.01);
}",0,
project,0,test1291059,"public void test1291059() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinksVisible(false);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertTrue(piePlot1.getSectionOutlinesVisible());
}",0,
project,0,test1291060,"public void test1291060() throws Throwable {
    PiePlot piePlot0 = new PiePlot((PieDataset) null);
    piePlot0.setLabelLinksVisible(false);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot1 = new PiePlot(defaultKeyedValuesDataset0);
    boolean boolean0 = piePlot0.equals(piePlot1);
    assertEquals(4.0, piePlot1.getShadowXOffset(), 0.01);
}",0,
project,0,test1301061,"public void test1301061() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    int int0 = piePlot3D0.getPieIndex();
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test1301062,"public void test1301062() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    int int0 = piePlot3D0.getPieIndex();
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test1301063,"public void test1301063() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    int int0 = piePlot3D0.getPieIndex();
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test1301064,"public void test1301064() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    int int0 = piePlot3D0.getPieIndex();
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test1301065,"public void test1301065() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    int int0 = piePlot3D0.getPieIndex();
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test1301066,"public void test1301066() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    int int0 = piePlot3D0.getPieIndex();
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test1301067,"public void test1301067() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    int int0 = piePlot3D0.getPieIndex();
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test1301068,"public void test1301068() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    int int0 = piePlot3D0.getPieIndex();
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test1301069,"public void test1301069() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    int int0 = piePlot3D0.getPieIndex();
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test1301070,"public void test1301070() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    int int0 = piePlot3D0.getPieIndex();
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test1301071,"public void test1301071() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCPieDataset jDBCPieDataset0 = new JDBCPieDataset(connection0);
    PiePlot3D piePlot3D0 = new PiePlot3D(jDBCPieDataset0);
    int int0 = piePlot3D0.getPieIndex();
    assertFalse(piePlot3D0.isCircular());
}",0,assertTrue(piePlot3D0.isCircular())
project,0,test1311072,"public void test1311072() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test1311073,"public void test1311073() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test1311074,"public void test1311074() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test1311075,"public void test1311075() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,
project,0,test1311076,"public void test1311076() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test1311077,"public void test1311077() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test1311078,"public void test1311078() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
    assertFalse(piePlot3D0.isCircular());
}",0,assertTrue(piePlot3D0.isCircular())
project,0,test1311079,"public void test1311079() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test1311080,"public void test1311080() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test1311081,"public void test1311081() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test1311082,"public void test1311082() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    boolean boolean0 = piePlot3D0.getSectionOutlinesVisible();
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test1321083,"public void test1321083() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLabelOutlineStroke();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test1321084,"public void test1321084() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLabelOutlineStroke();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test1321085,"public void test1321085() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLabelOutlineStroke();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test1321086,"public void test1321086() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLabelOutlineStroke();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test1321087,"public void test1321087() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLabelOutlineStroke();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test1321088,"public void test1321088() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLabelOutlineStroke();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test1321089,"public void test1321089() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLabelOutlineStroke();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test1321090,"public void test1321090() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLabelOutlineStroke();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test1321091,"public void test1321091() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLabelOutlineStroke();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test1321092,"public void test1321092() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLabelOutlineStroke();
    assertTrue(piePlot0.isCircular());
}",0,
project,0,test1321093,"public void test1321093() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getLabelOutlineStroke();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(1, piePlot0.getPieIndex())"
project,0,test1331094,"public void test1331094() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    XYDataItem xYDataItem0 = new XYDataItem((Number) 0.08, (Number) 1.0F);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(xYDataItem0);
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test1331095,"public void test1331095() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    XYDataItem xYDataItem0 = new XYDataItem((Number) 0.08, (Number) 1.0F);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(xYDataItem0);
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test1331096,"public void test1331096() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    XYDataItem xYDataItem0 = new XYDataItem((Number) 0.08, (Number) 1.0F);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(xYDataItem0);
    assertEquals(0.025, piePlot3D0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test1331097,"public void test1331097() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    XYDataItem xYDataItem0 = new XYDataItem((Number) 0.08, (Number) 1.0F);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(xYDataItem0);
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test1331098,"public void test1331098() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    XYDataItem xYDataItem0 = new XYDataItem((Number) 0.08, (Number) 1.0F);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(xYDataItem0);
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test1331099,"public void test1331099() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    XYDataItem xYDataItem0 = new XYDataItem((Number) 0.08, (Number) 1.0F);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(xYDataItem0);
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,"assertEquals(0, piePlot3D0.getPieIndex())"
project,0,test1331100,"public void test1331100() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    XYDataItem xYDataItem0 = new XYDataItem((Number) 0.08, (Number) 1.0F);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(xYDataItem0);
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test1331101,"public void test1331101() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    XYDataItem xYDataItem0 = new XYDataItem((Number) 0.08, (Number) 1.0F);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(xYDataItem0);
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test1331103,"public void test1331103() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    XYDataItem xYDataItem0 = new XYDataItem((Number) 0.08, (Number) 1.0F);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(xYDataItem0);
    assertNotNull(color0);
}",0,assertNotNull(color0)
project,0,test1331104,"public void test1331104() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    XYDataItem xYDataItem0 = new XYDataItem((Number) 0.08, (Number) 1.0F);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(xYDataItem0);
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test1331105,"public void test1331105() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    XYDataItem xYDataItem0 = new XYDataItem((Number) 0.08, (Number) 1.0F);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(xYDataItem0);
    assertFalse(piePlot3D0.isCircular());
}",0,assertTrue(piePlot3D0.isCircular())
project,0,test1331106,"public void test1331106() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    XYDataItem xYDataItem0 = new XYDataItem((Number) 0.08, (Number) 1.0F);
    Color color0 = (Color) piePlot3D0.lookupSectionPaint(xYDataItem0);
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test1341107,"public void test1341107() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreZeroValues();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test1341108,"public void test1341108() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreZeroValues();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test1341109,"public void test1341109() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreZeroValues();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test1341110,"public void test1341110() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreZeroValues();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test1341111,"public void test1341111() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreZeroValues();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test1341112,"public void test1341112() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreZeroValues();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test1341113,"public void test1341113() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreZeroValues();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test1341114,"public void test1341114() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreZeroValues();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test1341115,"public void test1341115() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreZeroValues();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test1341116,"public void test1341116() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreZeroValues();
    assertTrue(piePlot0.isCircular());
}",0,assertTrue(piePlot0.isCircular())
project,0,test1341117,"public void test1341117() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot piePlot0 = new PiePlot(defaultKeyedValuesDataset0);
    piePlot0.getIgnoreZeroValues();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test1351118,"public void test1351118() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test1351119,"public void test1351119() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.setLabelLinkMargin(1.0);
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test1361120,"public void test1361120() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getDirection();
    assertTrue(piePlot0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot0.getSectionOutlinesVisible())
project,0,test1361121,"public void test1361121() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getDirection();
    assertEquals(0.025, piePlot0.getLabelGap(), 0.01);
}",0,
project,0,test1361122,"public void test1361122() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getDirection();
    assertEquals(0, piePlot0.getPieIndex());
}",0,"assertEquals(0, piePlot0.getPieIndex())"
project,0,test1361123,"public void test1361123() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getDirection();
    assertTrue(piePlot0.isCircular());
}",0,assertFalse(piePlot0.isCircular())
project,0,test1361124,"public void test1361124() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getDirection();
    assertEquals(0.14, piePlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test1361125,"public void test1361125() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getDirection();
    assertEquals(0.025, piePlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test1361126,"public void test1361126() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getDirection();
    assertEquals(4.0, piePlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test1361127,"public void test1361127() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getDirection();
    assertEquals(0.08, piePlot0.getInteriorGap(), 0.01);
}",0,
project,0,test1361128,"public void test1361128() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getDirection();
    assertEquals(90.0, piePlot0.getStartAngle(), 0.01);
}",0,
project,0,test1361129,"public void test1361129() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getDirection();
    assertEquals(1.0E-5, piePlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test1361130,"public void test1361130() throws Throwable {
    PiePlot piePlot0 = new PiePlot();
    piePlot0.getDirection();
    assertEquals(4.0, piePlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test1371131,"public void test1371131() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
    assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
}",0,
project,0,test1371132,"public void test1371132() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
    assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test1371133,"public void test1371133() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
    assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test1371134,"public void test1371134() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
    assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test1371135,"public void test1371135() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
    assertTrue(ringPlot0.getSectionOutlinesVisible());
}",0,assertTrue(ringPlot0.getSectionOutlinesVisible())
project,0,test1371136,"public void test1371136() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
    assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
}",0,
project,0,test1371137,"public void test1371137() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
    assertTrue(ringPlot0.isCircular());
}",0,
project,0,test1371138,"public void test1371138() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
    assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test1371139,"public void test1371139() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
    assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test1371141,"public void test1371141() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
    assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
}",0,
project,0,test1371142,"public void test1371142() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    Color color0 = (Color) ringPlot0.getLabelOutlinePaint();
    assertEquals(0, ringPlot0.getPieIndex());
}",0,"assertEquals(0, ringPlot0.getPieIndex())"
project,0,test1381143,"public void test1381143() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getLabelLinkMargin();
    assertEquals(1.0E-5, piePlot3D0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test1381144,"public void test1381144() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getLabelLinkMargin();
    assertFalse(piePlot3D0.isCircular());
}",0,
project,0,test1381145,"public void test1381145() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getLabelLinkMargin();
    assertEquals(4.0, piePlot3D0.getShadowYOffset(), 0.01);
}",0,
project,0,test1381146,"public void test1381146() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getLabelLinkMargin();
    assertEquals(4.0, piePlot3D0.getShadowXOffset(), 0.01);
}",0,
project,0,test1381147,"public void test1381147() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getLabelLinkMargin();
    assertEquals(90.0, piePlot3D0.getStartAngle(), 0.01);
}",0,
project,0,test1381148,"public void test1381148() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getLabelLinkMargin();
    assertTrue(piePlot3D0.getSectionOutlinesVisible());
}",0,assertTrue(piePlot3D0.getSectionOutlinesVisible())
project,0,test1381149,"public void test1381149() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getLabelLinkMargin();
    assertEquals(0.025, piePlot3D0.getLabelGap(), 0.01);
}",0,
project,0,test1381150,"public void test1381150() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getLabelLinkMargin();
    assertEquals(0.025, double0, 0.01);
}",0,
project,0,test1381151,"public void test1381151() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getLabelLinkMargin();
    assertEquals(0.14, piePlot3D0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test1381152,"public void test1381152() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getLabelLinkMargin();
    assertEquals(0, piePlot3D0.getPieIndex());
}",0,"assertEquals(0, piePlot3D0.getPieIndex())"
project,0,test1381153,"public void test1381153() throws Throwable {
    PiePlot3D piePlot3D0 = new PiePlot3D();
    double double0 = piePlot3D0.getLabelLinkMargin();
    assertEquals(0.08, piePlot3D0.getInteriorGap(), 0.01);
}",0,
project,0,test1391154,"public void test1391154() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setLabelShadowPaint((Paint) null);
    assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
}",0,
project,0,test1391155,"public void test1391155() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setLabelShadowPaint((Paint) null);
    assertEquals(0, ringPlot0.getPieIndex());
}",0,"assertEquals(0, ringPlot0.getPieIndex())"
project,0,test1391156,"public void test1391156() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setLabelShadowPaint((Paint) null);
    assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
}",0,
project,0,test1391157,"public void test1391157() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setLabelShadowPaint((Paint) null);
    assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
}",0,
project,0,test1391158,"public void test1391158() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setLabelShadowPaint((Paint) null);
    assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
}",0,
project,0,test1391159,"public void test1391159() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setLabelShadowPaint((Paint) null);
    assertTrue(ringPlot0.isCircular());
}",0,assertTrue(ringPlot0.isCircular())
project,0,test1391160,"public void test1391160() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setLabelShadowPaint((Paint) null);
    assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
}",0,
project,0,test1391161,"public void test1391161() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setLabelShadowPaint((Paint) null);
    assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
}",0,
project,0,test1391162,"public void test1391162() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setLabelShadowPaint((Paint) null);
    assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
}",0,
project,0,test1391163,"public void test1391163() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setLabelShadowPaint((Paint) null);
    assertTrue(ringPlot0.getSectionOutlinesVisible());
}",0,assertTrue(ringPlot0.getSectionOutlinesVisible())
project,0,test1391164,"public void test1391164() throws Throwable {
    RingPlot ringPlot0 = new RingPlot();
    ringPlot0.setLabelShadowPaint((Paint) null);
    assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
}",0,
project,0,test1401165,"public void test1401165() throws Throwable {
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    PiePlot3D piePlot3D0 = new PiePlot3D(defaultKeyedValuesDataset0);
    piePlot3D0.setSimpleLabels(true);
    assertTrue(piePlot3D0.getSimpleLabels());
}",0,assertFalse(piePlot3D0.getSimpleLabels())
