project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Polygon polygon0 = new Polygon();
    polygon0.addPoint(185, 185);
    Rectangle2D rectangle2D0 = polygon0.getBounds2D();
    boolean boolean0 = ShapeUtilities.intersects(rectangle2D0, rectangle2D0);
    assertTrue(boolean0);
}",0,
project,0,test011,"public void test011() throws Throwable {
    DefaultCaret defaultCaret0 = new DefaultCaret();
    defaultCaret0.x = (-247);
    boolean boolean0 = ShapeUtilities.intersects(defaultCaret0, defaultCaret0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test022,"public void test022() throws Throwable {
    Line2D.Double line2D_Double0 = new Line2D.Double(2048.46317711122, (-1493.883F), (-681.16286390269), 2494.0);
    Rectangle rectangle0 = line2D_Double0.getBounds();
    Rectangle rectangle1 = new Rectangle();
    boolean boolean0 = ShapeUtilities.intersects(rectangle0, rectangle1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test033,"public void test033() throws Throwable {
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    SystemColor systemColor0 = SystemColor.activeCaption;
    StyledEditorKit.ForegroundAction styledEditorKit_ForegroundAction0 = new StyledEditorKit.ForegroundAction(""/{/w'yG(K"", systemColor0);
    JMenu jMenu0 = new JMenu(styledEditorKit_ForegroundAction0);
    JScrollPane jScrollPane0 = new JScrollPane(jMenu0);
    Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
    boolean boolean0 = ShapeUtilities.contains(rectangle2D_Double0, rectangle0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test044,"public void test044() throws Throwable {
    RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
    Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0, 0, 0, 2366.91F);
    Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D_Float0, rectangleAnchor0);
    Size2D size2D0 = new Size2D();
    rectangle2D_Float0.setFrameFromCenter(point2D0, point2D0);
    Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 0.0, 1858.0, rectangleAnchor0);
    boolean boolean0 = ShapeUtilities.contains(rectangle2D0, rectangle2D_Float0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test055,"public void test055() throws Throwable {
    Rectangle rectangle0 = new Rectangle(665, (-1898));
    boolean boolean0 = ShapeUtilities.contains(rectangle0, rectangle0);
    assertTrue(boolean0);
}",0,
project,0,test066,"public void test066() throws Throwable {
    SystemColor systemColor0 = SystemColor.windowText;
    BevelBorder bevelBorder0 = new BevelBorder(2147483646, systemColor0, systemColor0, systemColor0, systemColor0);
    RenderingHints[] renderingHintsArray0 = new RenderingHints[0];
    JList<RenderingHints> jList0 = new JList<RenderingHints>(renderingHintsArray0);
    Rectangle rectangle0 = bevelBorder0.getInteriorRectangle((Component) jList0, (-984), 1, 1717, (-1));
    Point2D.Double point2D_Double0 = (Point2D.Double) ShapeUtilities.getPointInRectangle(0.0F, 244, rectangle0);
    assertEquals(3.0, point2D_Double0.y, 0.01);
}",0,
project,0,test1011,"public void test1011() throws Throwable {
    GeneralPath generalPath0 = (GeneralPath) ShapeUtilities.createDiagonalCross((-890.63F), (-890.63F));
    GeneralPath generalPath1 = new GeneralPath(0);
    boolean boolean0 = ShapeUtilities.equal(generalPath0, generalPath1);
    assertFalse(boolean0);
}",0,
project,0,test1112,"public void test1112() throws Throwable {
    Polygon polygon0 = new Polygon();
    Polygon polygon1 = new Polygon(polygon0.ypoints, polygon0.ypoints, 0);
    polygon1.addPoint(93, (-2114510075));
    boolean boolean0 = ShapeUtilities.equal(polygon0, polygon1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1213,"public void test1213() throws Throwable {
    Arc2D.Double arc2D_Double0 = new Arc2D.Double();
    Arc2D.Float arc2D_Float0 = new Arc2D.Float();
    boolean boolean0 = ShapeUtilities.equal((Arc2D) arc2D_Double0, (Arc2D) arc2D_Float0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test1314,"public void test1314() throws Throwable {
    GeneralPath generalPath0 = new GeneralPath();
    AffineTransform affineTransform0 = new AffineTransform(1528.768001, 132.190692698574, 0.0, 132.190692698574, 132.190692698574, 0.0);
    Shape shape0 = generalPath0.createTransformedShape(affineTransform0);
    boolean boolean0 = ShapeUtilities.equal((Shape) generalPath0, shape0);
    assertTrue(boolean0);
}",0,
project,0,test1415,"public void test1415() throws Throwable {
    Polygon polygon0 = new Polygon();
    Polygon polygon1 = new Polygon(polygon0.ypoints, polygon0.ypoints, 0);
    boolean boolean0 = ShapeUtilities.equal((Shape) polygon1, (Shape) polygon0);
    assertFalse(boolean0);
}",0,
project,0,test1516,"public void test1516() throws Throwable {
    Rectangle rectangle0 = new Rectangle(644, (-1898));
    // Undeclared exception!
    try {
        ShapeUtilities.intersects(rectangle0, (Rectangle2D) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.util.ShapeUtilities"", e);
    }
}",0,
project,0,test1617,"public void test1617() throws Throwable {
    // Undeclared exception!
    try {
        ShapeUtilities.getPointInRectangle(0.0, 517.878022, (Rectangle2D) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.util.ShapeUtilities"", e);
    }
}",0,
project,0,test1718,"public void test1718() throws Throwable {
    BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
    Graphics2D graphics2D0 = bufferedImage0.createGraphics();
    // Undeclared exception!
    try {
        ShapeUtilities.drawRotatedShape(graphics2D0, (Shape) null, 1.7976931348623157E308, 2588.56F, 0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.awt.geom.Path2D$Float"", e);
    }
}",0,
project,0,test1819,"public void test1819() throws Throwable {
    // Undeclared exception!
    try {
        ShapeUtilities.createLineRegion((Line2D) null, 0.0F);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.util.ShapeUtilities"", e);
    }
}",0,
project,0,test1920,"public void test1920() throws Throwable {
    // Undeclared exception!
    try {
        ShapeUtilities.contains((Rectangle2D) null, (Rectangle2D) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jfree.chart.util.ShapeUtilities"", e);
    }
}",0,
project,0,test2021,"public void test2021() throws Throwable {
    GeneralPath generalPath0 = (GeneralPath) ShapeUtilities.createDownTriangle(1.0F);
    boolean boolean0 = ShapeUtilities.equal(generalPath0, generalPath0);
    assertTrue(boolean0);
}",0,
project,0,test2122,"public void test2122() throws Throwable {
    Polygon polygon0 = new Polygon();
    boolean boolean0 = ShapeUtilities.equal(polygon0, polygon0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2223,"public void test2223() throws Throwable {
    Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float((-1.0F), 48.993F, (-1.0F), 0.0F);
    boolean boolean0 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Float0, (Ellipse2D) ellipse2D_Float0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2324,"public void test2324() throws Throwable {
    Line2D.Double line2D_Double0 = new Line2D.Double(1519.77001953125, 512.432386, (-6), Double.NaN);
    boolean boolean0 = ShapeUtilities.equal((Line2D) line2D_Double0, (Line2D) line2D_Double0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2425,"public void test2425() throws Throwable {
    Line2D.Float line2D_Float0 = new Line2D.Float(63.8F, 4504.17F, 0.0F, 4504.17F);
    boolean boolean0 = ShapeUtilities.equal((Line2D) line2D_Float0, (Line2D) line2D_Float0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2526,"public void test2526() throws Throwable {
    DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
    JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
    Rectangle rectangle0 = jTableHeader0.getHeaderRect(1061);
    Rectangle rectangle1 = new Rectangle(0, (-2135938036));
    boolean boolean0 = ShapeUtilities.intersects(rectangle1, rectangle0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2627,"public void test2627() throws Throwable {
    DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
    JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
    Rectangle rectangle0 = jTableHeader0.getHeaderRect(1061);
    Rectangle rectangle1 = new Rectangle((-2450), (-2135938036));
    boolean boolean0 = ShapeUtilities.intersects(rectangle1, rectangle0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2728,"public void test2728() throws Throwable {
    Rectangle rectangle0 = new Rectangle(665, (-1898));
    boolean boolean0 = ShapeUtilities.intersects(rectangle0, rectangle0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2829,"public void test2829() throws Throwable {
    Rectangle rectangle0 = new Rectangle((-1888), (-1898));
    boolean boolean0 = ShapeUtilities.intersects(rectangle0, rectangle0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2930,"public void test2930() throws Throwable {
    DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
    JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
    Rectangle rectangle0 = jTableHeader0.getHeaderRect(1061);
    Rectangle rectangle1 = new Rectangle((-2450), (-2135938036));
    boolean boolean0 = ShapeUtilities.contains(rectangle1, rectangle0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3031,"public void test3031() throws Throwable {
    SystemColor systemColor0 = SystemColor.windowText;
    BevelBorder bevelBorder0 = new BevelBorder(2147483646, systemColor0, systemColor0, systemColor0, systemColor0);
    RenderingHints[] renderingHintsArray0 = new RenderingHints[1];
    JList<RenderingHints> jList0 = new JList<RenderingHints>(renderingHintsArray0);
    Rectangle rectangle0 = bevelBorder0.getInteriorRectangle((Component) jList0, (-984), 1, 1703, (-1));
    DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
    JTable jTable0 = new JTable((TableModel) null, defaultTableColumnModel0);
    JTableHeader jTableHeader0 = jTable0.getTableHeader();
    Rectangle rectangle1 = jTableHeader0.getHeaderRect((-315));
    boolean boolean0 = ShapeUtilities.contains(rectangle0, rectangle1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3132,"public void test3132() throws Throwable {
    Rectangle rectangle0 = new Rectangle((-897), (-897), (-897), 3718);
    rectangle0.x = 3718;
    JTable jTable0 = new JTable(0, 0);
    Rectangle rectangle1 = jTable0.getCellRect(272, 3718, false);
    boolean boolean0 = ShapeUtilities.contains(rectangle0, rectangle1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3233,"public void test3233() throws Throwable {
    Shape shape0 = ShapeUtilities.rotateShape((Shape) null, 0.0, (-617.0F), (-617.0F));
    assertNull(shape0);
}",0,
project,0,test3435,"public void test3435() throws Throwable {
    Rectangle rectangle0 = new Rectangle((-897), (-897), (-897), 3718);
    // Undeclared exception!
    try {
        ShapeUtilities.createTranslatedShape((Shape) rectangle0, (RectangleAnchor) null, (double) 1159, (double) 1.0F);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'anchor' argument.
        //
        verifyException(""org.jfree.chart.util.ShapeUtilities"", e);
    }
}",1,
project,0,test3536,"public void test3536() throws Throwable {
    RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
    // Undeclared exception!
    try {
        ShapeUtilities.createTranslatedShape((Shape) null, rectangleAnchor0, (-1362.0), 14.9);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'shape' argument.
        //
        verifyException(""org.jfree.chart.util.ShapeUtilities"", e);
    }
}",1,
project,0,test3637,"public void test3637() throws Throwable {
    // Undeclared exception!
    try {
        ShapeUtilities.createTranslatedShape((Shape) null, (double) 0.0F, (-725.769));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'shape' argument.
        //
        verifyException(""org.jfree.chart.util.ShapeUtilities"", e);
    }
}",0,
project,0,test3839,"public void test3839() throws Throwable {
    GeneralPath generalPath0 = new GeneralPath(0);
    boolean boolean0 = ShapeUtilities.equal(generalPath0, generalPath0);
    assertTrue(boolean0);
}",0,
project,0,test3940,"public void test3940() throws Throwable {
    GeneralPath generalPath0 = (GeneralPath) ShapeUtilities.createDiamond(0);
    GeneralPath generalPath1 = new GeneralPath(0);
    boolean boolean0 = ShapeUtilities.equal(generalPath1, generalPath0);
    assertFalse(boolean0);
}",0,
project,0,test4041,"public void test4041() throws Throwable {
    GeneralPath generalPath0 = new GeneralPath();
    boolean boolean0 = ShapeUtilities.equal(generalPath0, (GeneralPath) null);
    assertFalse(boolean0);
}",0,
project,0,test4142,"public void test4142() throws Throwable {
    GeneralPath generalPath0 = (GeneralPath) ShapeUtilities.createDiagonalCross(0.0F, 0.0F);
    boolean boolean0 = ShapeUtilities.equal((GeneralPath) null, generalPath0);
    assertFalse(boolean0);
}",0,
project,0,test4243,"public void test4243() throws Throwable {
    boolean boolean0 = ShapeUtilities.equal((GeneralPath) null, (GeneralPath) null);
    assertTrue(boolean0);
}",0,
project,0,test4344,"public void test4344() throws Throwable {
    Polygon polygon0 = new Polygon();
    Polygon polygon1 = new Polygon(polygon0.ypoints, polygon0.ypoints, 0);
    polygon1.xpoints = polygon0.ypoints;
    boolean boolean0 = ShapeUtilities.equal(polygon0, polygon1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4445,"public void test4445() throws Throwable {
    Polygon polygon0 = new Polygon();
    Polygon polygon1 = new Polygon(polygon0.ypoints, polygon0.ypoints, 0);
    boolean boolean0 = ShapeUtilities.equal(polygon0, polygon1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4546,"public void test4546() throws Throwable {
    Polygon polygon0 = new Polygon();
    polygon0.addPoint(244, 1861);
    Polygon polygon1 = new Polygon();
    boolean boolean0 = ShapeUtilities.equal(polygon0, polygon1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4647,"public void test4647() throws Throwable {
    Polygon polygon0 = new Polygon();
    boolean boolean0 = ShapeUtilities.equal(polygon0, (Polygon) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4748,"public void test4748() throws Throwable {
    Polygon polygon0 = new Polygon();
    boolean boolean0 = ShapeUtilities.equal((Polygon) null, polygon0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4849,"public void test4849() throws Throwable {
    boolean boolean0 = ShapeUtilities.equal((Polygon) null, (Polygon) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4950,"public void test4950() throws Throwable {
    Arc2D.Double arc2D_Double0 = new Arc2D.Double(0, (-9.855929016800612), (-9.855929016800612), (-9.855929016800612), (-9.855929016800612), 0, 0);
    Point2D.Double point2D_Double0 = new Point2D.Double();
    arc2D_Double0.setArcByTangent(point2D_Double0, point2D_Double0, point2D_Double0, (-9.855929016800612));
    boolean boolean0 = ShapeUtilities.equal((Arc2D) arc2D_Double0, (Arc2D) arc2D_Double0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test5051,"public void test5051() throws Throwable {
    Arc2D.Double arc2D_Double0 = new Arc2D.Double(1);
    boolean boolean0 = ShapeUtilities.equal((Arc2D) arc2D_Double0, (Arc2D) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test5152,"public void test5152() throws Throwable {
    boolean boolean0 = ShapeUtilities.equal((Arc2D) null, (Arc2D) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test5253,"public void test5253() throws Throwable {
    SystemColor systemColor0 = SystemColor.windowText;
    BevelBorder bevelBorder0 = new BevelBorder(2147483646, systemColor0, systemColor0, systemColor0, systemColor0);
    RenderingHints[] renderingHintsArray0 = new RenderingHints[0];
    JList<RenderingHints> jList0 = new JList<RenderingHints>(renderingHintsArray0);
    Rectangle rectangle0 = bevelBorder0.getInteriorRectangle((Component) jList0, (-984), 1, 1717, (-1));
    Arc2D.Float arc2D_Float0 = new Arc2D.Float(rectangle0, 1717, (-726.63544F), 1);
    boolean boolean0 = ShapeUtilities.equal((Arc2D) null, (Arc2D) arc2D_Float0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test5354,"public void test5354() throws Throwable {
    Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float((-1.0F), 48.993F, (-1.0F), 424.01743F);
    Ellipse2D.Float ellipse2D_Float1 = new Ellipse2D.Float();
    boolean boolean0 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Float0, (Ellipse2D) ellipse2D_Float1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test5455,"public void test5455() throws Throwable {
    Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
    boolean boolean0 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Double0, (Ellipse2D) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test5556,"public void test5556() throws Throwable {
    Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double((-1.0), (-1.0), 588.0, 588.0);
    boolean boolean0 = ShapeUtilities.equal((Ellipse2D) null, (Ellipse2D) ellipse2D_Double0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test5657,"public void test5657() throws Throwable {
    boolean boolean0 = ShapeUtilities.equal((Ellipse2D) null, (Ellipse2D) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test5758,"public void test5758() throws Throwable {
    Line2D.Double line2D_Double0 = new Line2D.Double(1047.703, 0.0, 1047.703, 0.0);
    Shape shape0 = ShapeUtilities.clone(line2D_Double0);
    assertNotNull(shape0);
}",0,assertNotNull(shape0)
project,0,test5759,"public void test5759() throws Throwable {
    Line2D.Double line2D_Double0 = new Line2D.Double(1047.703, 0.0, 1047.703, 0.0);
    Shape shape0 = ShapeUtilities.clone(line2D_Double0);
    line2D_Double0.y2 = 1.5;
    boolean boolean0 = ShapeUtilities.equal(shape0, (Shape) line2D_Double0);
    assertFalse(boolean0);
}",0,
project,0,test5860,"public void test5860() throws Throwable {
    Line2D.Double line2D_Double0 = new Line2D.Double(Double.POSITIVE_INFINITY, 185, (-1149.476076061802), 0.0F);
    Line2D.Float line2D_Float0 = new Line2D.Float(0.0F, 0.0F, 185, 0.0F);
    boolean boolean0 = ShapeUtilities.equal((Line2D) line2D_Float0, (Line2D) line2D_Double0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test5961,"public void test5961() throws Throwable {
    Line2D.Double line2D_Double0 = new Line2D.Double();
    boolean boolean0 = ShapeUtilities.equal((Line2D) line2D_Double0, (Line2D) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test6062,"public void test6062() throws Throwable {
    Line2D.Float line2D_Float0 = new Line2D.Float();
    boolean boolean0 = ShapeUtilities.equal((Line2D) null, (Line2D) line2D_Float0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test6163,"public void test6163() throws Throwable {
    boolean boolean0 = ShapeUtilities.equal((Line2D) null, (Line2D) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test6264,"public void test6264() throws Throwable {
    Polygon polygon0 = new Polygon();
    Arc2D.Double arc2D_Double0 = new Arc2D.Double(0, (-9.855929016800612), (-9.855929016800612), (-9.855929016800612), (-9.855929016800612), 0, 0);
    boolean boolean0 = ShapeUtilities.equal((Shape) polygon0, (Shape) arc2D_Double0);
    assertFalse(boolean0);
}",0,
project,0,test6365,"public void test6365() throws Throwable {
    Arc2D.Double arc2D_Double0 = new Arc2D.Double();
    boolean boolean0 = ShapeUtilities.equal((Shape) arc2D_Double0, (Shape) arc2D_Double0);
    assertTrue(boolean0);
}",0,
project,0,test6466,"public void test6466() throws Throwable {
    Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float((-1.0F), 48.993F, (-1.0F), 424.01743F);
    RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
    Shape shape0 = ShapeUtilities.createTranslatedShape((Shape) ellipse2D_Float0, rectangleAnchor0, (double) (-175.63376F), (double) 424.01743F);
    Arc2D.Float arc2D_Float0 = new Arc2D.Float();
    boolean boolean0 = ShapeUtilities.equal((Shape) arc2D_Float0, shape0);
    assertFalse(boolean0);
}",0,
project,0,test6567,"public void test6567() throws Throwable {
    Shape shape0 = ShapeUtilities.createDiamond((-1603.3816F));
    Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
    boolean boolean0 = ShapeUtilities.equal((Shape) ellipse2D_Double0, shape0);
    assertFalse(boolean0);
}",0,
project,0,test6668,"public void test6668() throws Throwable {
    Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float((-1617.77F), (-1617.77F), 2971.176F, (-1893.385F));
    boolean boolean0 = ShapeUtilities.equal((Shape) ellipse2D_Float0, (Shape) ellipse2D_Float0);
    assertTrue(boolean0);
}",0,
project,0,test6769,"public void test6769() throws Throwable {
    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
    Point2D point2D0 = ShapeUtilities.getPointInRectangle(82.0, 82.0, rectangle2D_Double0);
    Line2D.Double line2D_Double0 = new Line2D.Double(point2D0, point2D0);
    boolean boolean0 = ShapeUtilities.equal((Shape) line2D_Double0, (Shape) rectangle2D_Double0);
    assertEquals(0.0, line2D_Double0.y2, 0.01);
}",0,
project,0,test6872,"public void test6872() throws Throwable {
    Line2D.Double line2D_Double0 = new Line2D.Double(1047.703, 0.0, 1047.703, 0.0);
    Shape shape0 = ShapeUtilities.createRegularCross(0, (-1153.61F));
    boolean boolean0 = ShapeUtilities.equal(shape0, (Shape) line2D_Double0);
    assertFalse(boolean0);
}",0,
project,0,test6973,"public void test6973() throws Throwable {
    Polygon polygon0 = new Polygon();
    Shape shape0 = ShapeUtilities.clone(polygon0);
    assertNull(shape0);
}",0,
project,0,test7175,"public void test7175() throws Throwable {
    Shape shape0 = ShapeUtilities.createDownTriangle((-1718.7449F));
    BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
    SunGraphics2D sunGraphics2D0 = (SunGraphics2D) bufferedImage0.createGraphics();
    ShapeUtilities.drawRotatedShape(sunGraphics2D0, shape0, (-10.0), (-1.0F), (-1.0F));
    assertEquals(0, sunGraphics2D0.transformState);
}",0,
