project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""><8,KGM>"");
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(2545, 0);
    timePeriodValues0.add((TimePeriod) minute0, (Number) 0);
    boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
    assertEquals(0, timePeriodValues0.getMinStartIndex());
}",0,
project,0,test001,"public void test001() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""><8,KGM>"");
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(2545, 0);
    timePeriodValues0.add((TimePeriod) minute0, (Number) 0);
    boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
    assertFalse(timePeriodValues1.equals((Object) timePeriodValues0));
}",0,
project,0,test002,"public void test002() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""><8,KGM>"");
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(2545, 0);
    timePeriodValues0.add((TimePeriod) minute0, (Number) 0);
    boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test013,"public void test013() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    TimePeriodValue timePeriodValue0 = new TimePeriodValue((TimePeriod) millisecond0, (Number) 0);
    timePeriodValues0.add(timePeriodValue0);
    timePeriodValues0.delete(0, 0);
    assertEquals(0, timePeriodValues0.getItemCount());
}",0,"assertEquals(0, timePeriodValues0.getItemCount())"
project,0,test024,"public void test024() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    MockDate mockDate0 = new MockDate(37, 23, 640, (-1285), 29, 29);
    TimeZone timeZone0 = TimeZone.getTimeZone(""nIgn_xMf}8Te"");
    Hour hour1 = new Hour(mockDate0, timeZone0);
    timePeriodValues0.add((TimePeriod) hour1, (Number) 23);
    timePeriodValues0.add((TimePeriod) hour1, 0.0);
    assertEquals(1, timePeriodValues0.getMinEndIndex());
}",0,
project,0,test035,"public void test035() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""><8,KGM>"");
    TimePeriodValue timePeriodValue0 = new TimePeriodValue((TimePeriod) minute0, (double) 59);
    timePeriodValues0.add(timePeriodValue0);
    timePeriodValues0.update(0, 0);
    assertEquals(0, timePeriodValues0.getMinEndIndex());
}",0,
project,0,test036,"public void test036() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""><8,KGM>"");
    TimePeriodValue timePeriodValue0 = new TimePeriodValue((TimePeriod) minute0, (double) 59);
    timePeriodValues0.add(timePeriodValue0);
    timePeriodValues0.update(0, 0);
    assertEquals(0, timePeriodValues0.getMaxEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxEndIndex())"
project,0,test047,"public void test047() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""ex"", ""ex"");
    boolean boolean0 = timePeriodValues0.equals(timePeriodValues0);
    assertEquals((-1), timePeriodValues0.getMaxMiddleIndex());
}",0,
project,0,test048,"public void test048() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""ex"", ""ex"");
    boolean boolean0 = timePeriodValues0.equals(timePeriodValues0);
    assertEquals(""ex"", timePeriodValues0.getDomainDescription());
}",0,assertNotNull(timePeriodValues0.getDomainDescription())
project,0,test049,"public void test049() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""ex"", ""ex"");
    boolean boolean0 = timePeriodValues0.equals(timePeriodValues0);
    assertEquals(""ex"", timePeriodValues0.getRangeDescription());
}",0,assertNotNull(timePeriodValues0.getRangeDescription())
project,0,test0410,"public void test0410() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""ex"", ""ex"");
    boolean boolean0 = timePeriodValues0.equals(timePeriodValues0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test0411,"public void test0411() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""ex"", ""ex"");
    boolean boolean0 = timePeriodValues0.equals(timePeriodValues0);
    assertEquals((-1), timePeriodValues0.getMinStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinStartIndex())"
project,0,test0412,"public void test0412() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""ex"", ""ex"");
    boolean boolean0 = timePeriodValues0.equals(timePeriodValues0);
    assertEquals((-1), timePeriodValues0.getMaxStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxStartIndex())"
project,0,test0413,"public void test0413() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""ex"", ""ex"");
    boolean boolean0 = timePeriodValues0.equals(timePeriodValues0);
    assertEquals((-1), timePeriodValues0.getMaxEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxEndIndex())"
project,0,test0414,"public void test0414() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""ex"", ""ex"");
    boolean boolean0 = timePeriodValues0.equals(timePeriodValues0);
    assertEquals((-1), timePeriodValues0.getMinMiddleIndex());
}",0,
project,0,test0415,"public void test0415() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""ex"", ""ex"");
    boolean boolean0 = timePeriodValues0.equals(timePeriodValues0);
    assertEquals((-1), timePeriodValues0.getMinEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinEndIndex())"
project,0,test0516,"public void test0516() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    timePeriodValues0.add((TimePeriod) quarter0, (Number) 4);
    timePeriodValues0.add((TimePeriod) quarter0, (-1315.4242));
    timePeriodValues0.getValue(1);
    assertEquals(0, timePeriodValues0.getMaxStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxStartIndex())"
project,0,test0617,"public void test0617() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    timePeriodValues0.getValue(0);
    assertEquals(0, timePeriodValues0.getMaxStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxStartIndex())"
project,0,test0618,"public void test0618() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    timePeriodValues0.getValue(0);
    assertEquals(0, timePeriodValues0.getMaxEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxEndIndex())"
project,0,test0719,"public void test0719() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    timePeriodValues0.add((TimePeriod) quarter0, (Number) 4);
    timePeriodValues0.add((TimePeriod) quarter0, (Number) 4);
    timePeriodValues0.getValue(1);
    assertEquals(0, timePeriodValues0.getMinMiddleIndex());
}",0,
project,0,test0820,"public void test0820() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    timePeriodValues0.getTimePeriod(0);
    assertEquals(0, timePeriodValues0.getMinEndIndex());
}",0,
project,0,test0821,"public void test0821() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    timePeriodValues0.getTimePeriod(0);
    assertEquals(0, timePeriodValues0.getMinStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinStartIndex())"
project,0,test0922,"public void test0922() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals((-1), timePeriodValues0.getMaxMiddleIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxMiddleIndex())"
project,0,test0923,"public void test0923() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals((-1), timePeriodValues0.getMaxStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxStartIndex())"
project,0,test0924,"public void test0924() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals((-1), timePeriodValues0.getMaxEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxEndIndex())"
project,0,test0925,"public void test0925() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals((-1), timePeriodValues0.getMinEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinEndIndex())"
project,0,test0926,"public void test0926() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals(""Value"", string0);
}",0,
project,0,test0927,"public void test0927() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals(""Time"", timePeriodValues0.getDomainDescription());
}",0,assertNotNull(timePeriodValues0.getDomainDescription())
project,0,test0928,"public void test0928() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals((-1), timePeriodValues0.getMinMiddleIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinMiddleIndex())"
project,0,test0929,"public void test0929() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals((-1), timePeriodValues0.getMinStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinStartIndex())"
project,0,test1030,"public void test1030() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, """", """");
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals((-1), timePeriodValues0.getMinEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinEndIndex())"
project,0,test1031,"public void test1031() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, """", """");
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals((-1), timePeriodValues0.getMaxMiddleIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxMiddleIndex())"
project,0,test1032,"public void test1032() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, """", """");
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals((-1), timePeriodValues0.getMinStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinStartIndex())"
project,0,test1033,"public void test1033() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, """", """");
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals("""", timePeriodValues0.getDomainDescription());
}",0,assertNotNull(timePeriodValues0.getDomainDescription())
project,0,test1034,"public void test1034() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, """", """");
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals((-1), timePeriodValues0.getMinMiddleIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinMiddleIndex())"
project,0,test1035,"public void test1035() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, """", """");
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test1036,"public void test1036() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, """", """");
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals((-1), timePeriodValues0.getMaxEndIndex());
}",0,
project,0,test1037,"public void test1037() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, """", """");
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals((-1), timePeriodValues0.getMaxStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxStartIndex())"
project,0,test1138,"public void test1138() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    int int0 = timePeriodValues0.getMinStartIndex();
    assertEquals(0, timePeriodValues0.getMaxMiddleIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxMiddleIndex())"
project,0,test1139,"public void test1139() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    int int0 = timePeriodValues0.getMinStartIndex();
    assertEquals(0, timePeriodValues0.getMaxEndIndex());
}",0,
project,0,test1140,"public void test1140() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    int int0 = timePeriodValues0.getMinStartIndex();
    assertEquals(0, int0);
}",0,
project,0,test1241,"public void test1241() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    MockDate mockDate0 = new MockDate(37, 23, 640, (-1285), 29, 29);
    TimeZone timeZone0 = TimeZone.getTimeZone(""nIgn_xMf}8Te"");
    Hour hour1 = new Hour(mockDate0, timeZone0);
    timePeriodValues0.add((TimePeriod) hour1, (Number) 23);
    int int0 = timePeriodValues0.getMinStartIndex();
    assertEquals(0, timePeriodValues0.getMaxMiddleIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxMiddleIndex())"
project,0,test1242,"public void test1242() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    MockDate mockDate0 = new MockDate(37, 23, 640, (-1285), 29, 29);
    TimeZone timeZone0 = TimeZone.getTimeZone(""nIgn_xMf}8Te"");
    Hour hour1 = new Hour(mockDate0, timeZone0);
    timePeriodValues0.add((TimePeriod) hour1, (Number) 23);
    int int0 = timePeriodValues0.getMinStartIndex();
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test1343,"public void test1343() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    int int0 = timePeriodValues0.getMinMiddleIndex();
    assertEquals(0, timePeriodValues0.getMaxEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxEndIndex())"
project,0,test1344,"public void test1344() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    int int0 = timePeriodValues0.getMinMiddleIndex();
    assertEquals(0, timePeriodValues0.getMaxStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxStartIndex())"
project,0,test1345,"public void test1345() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    int int0 = timePeriodValues0.getMinMiddleIndex();
    assertEquals(0, int0);
}",0,
project,0,test1446,"public void test1446() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    MockDate mockDate0 = new MockDate(37, 23, 640, (-1285), 29, 29);
    TimeZone timeZone0 = TimeZone.getTimeZone(""nIgn_xMf}8Te"");
    Hour hour1 = new Hour(mockDate0, timeZone0);
    timePeriodValues0.add((TimePeriod) hour1, (Number) 23);
    int int0 = timePeriodValues0.getMinMiddleIndex();
    assertEquals(1, timePeriodValues0.getMinEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinEndIndex())"
project,0,test1447,"public void test1447() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    MockDate mockDate0 = new MockDate(37, 23, 640, (-1285), 29, 29);
    TimeZone timeZone0 = TimeZone.getTimeZone(""nIgn_xMf}8Te"");
    Hour hour1 = new Hour(mockDate0, timeZone0);
    timePeriodValues0.add((TimePeriod) hour1, (Number) 23);
    int int0 = timePeriodValues0.getMinMiddleIndex();
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test1548,"public void test1548() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    int int0 = timePeriodValues0.getMinEndIndex();
    assertEquals(0, timePeriodValues0.getMinStartIndex());
}",0,
project,0,test1549,"public void test1549() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    int int0 = timePeriodValues0.getMinEndIndex();
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test1650,"public void test1650() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    MockDate mockDate0 = new MockDate(37, 23, 640, (-1285), 29, 29);
    TimeZone timeZone0 = TimeZone.getTimeZone(""nIgn_xMf}8Te"");
    Hour hour1 = new Hour(mockDate0, timeZone0);
    timePeriodValues0.add((TimePeriod) hour1, (Number) 23);
    int int0 = timePeriodValues0.getMinEndIndex();
    assertEquals(0, timePeriodValues0.getMaxEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxEndIndex())"
project,0,test1651,"public void test1651() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    MockDate mockDate0 = new MockDate(37, 23, 640, (-1285), 29, 29);
    TimeZone timeZone0 = TimeZone.getTimeZone(""nIgn_xMf}8Te"");
    Hour hour1 = new Hour(mockDate0, timeZone0);
    timePeriodValues0.add((TimePeriod) hour1, (Number) 23);
    int int0 = timePeriodValues0.getMinEndIndex();
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test1752,"public void test1752() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    timePeriodValues0.add((TimePeriod) quarter0, (Number) 4);
    int int0 = timePeriodValues0.getMaxStartIndex();
    assertEquals(0, timePeriodValues0.getMaxEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxEndIndex())"
project,0,test1753,"public void test1753() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    timePeriodValues0.add((TimePeriod) quarter0, (Number) 4);
    int int0 = timePeriodValues0.getMaxStartIndex();
    assertEquals(0, timePeriodValues0.getMaxMiddleIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxMiddleIndex())"
project,0,test1754,"public void test1754() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    timePeriodValues0.add((TimePeriod) quarter0, (Number) 4);
    int int0 = timePeriodValues0.getMaxStartIndex();
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test1855,"public void test1855() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    MockDate mockDate0 = new MockDate(640, 10, 640);
    TimeZone timeZone0 = TimeZone.getTimeZone(""nIgn_xMf}8Te"");
    Hour hour1 = new Hour(mockDate0, timeZone0);
    timePeriodValues0.add((TimePeriod) hour1, (Number) 23);
    int int0 = timePeriodValues0.getMaxStartIndex();
    assertEquals(1, timePeriodValues0.getMaxEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxEndIndex())"
project,0,test1856,"public void test1856() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    MockDate mockDate0 = new MockDate(640, 10, 640);
    TimeZone timeZone0 = TimeZone.getTimeZone(""nIgn_xMf}8Te"");
    Hour hour1 = new Hour(mockDate0, timeZone0);
    timePeriodValues0.add((TimePeriod) hour1, (Number) 23);
    int int0 = timePeriodValues0.getMaxStartIndex();
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test1957,"public void test1957() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    int int0 = timePeriodValues0.getMaxMiddleIndex();
    assertEquals(0, timePeriodValues0.getMaxEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxEndIndex())"
project,0,test1958,"public void test1958() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    int int0 = timePeriodValues0.getMaxMiddleIndex();
    assertEquals(0, timePeriodValues0.getMinMiddleIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinMiddleIndex())"
project,0,test1959,"public void test1959() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    int int0 = timePeriodValues0.getMaxMiddleIndex();
    assertEquals(0, int0);
}",0,
project,0,test2060,"public void test2060() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    MockDate mockDate0 = new MockDate(640, 10, 640);
    TimeZone timeZone0 = TimeZone.getTimeZone(""nIgn_xMf}8Te"");
    Hour hour1 = new Hour(mockDate0, timeZone0);
    timePeriodValues0.add((TimePeriod) hour1, (Number) 23);
    int int0 = timePeriodValues0.getMaxMiddleIndex();
    assertEquals(0, timePeriodValues0.getMinMiddleIndex());
}",0,
project,0,test2061,"public void test2061() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    MockDate mockDate0 = new MockDate(640, 10, 640);
    TimeZone timeZone0 = TimeZone.getTimeZone(""nIgn_xMf}8Te"");
    Hour hour1 = new Hour(mockDate0, timeZone0);
    timePeriodValues0.add((TimePeriod) hour1, (Number) 23);
    int int0 = timePeriodValues0.getMaxMiddleIndex();
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test2162,"public void test2162() throws Throwable {
    Day day0 = new Day();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0, ""org.jfree.data.time.TimeSeries"", ""?{\""4C"");
    Long long0 = new Long(1645L);
    timePeriodValues0.add((TimePeriod) day0, (Number) long0);
    int int0 = timePeriodValues0.getMaxEndIndex();
    assertEquals(0, timePeriodValues0.getMinEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinEndIndex())"
project,0,test2163,"public void test2163() throws Throwable {
    Day day0 = new Day();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0, ""org.jfree.data.time.TimeSeries"", ""?{\""4C"");
    Long long0 = new Long(1645L);
    timePeriodValues0.add((TimePeriod) day0, (Number) long0);
    int int0 = timePeriodValues0.getMaxEndIndex();
    assertEquals(0, timePeriodValues0.getMaxStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxStartIndex())"
project,0,test2164,"public void test2164() throws Throwable {
    Day day0 = new Day();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0, ""org.jfree.data.time.TimeSeries"", ""?{\""4C"");
    Long long0 = new Long(1645L);
    timePeriodValues0.add((TimePeriod) day0, (Number) long0);
    int int0 = timePeriodValues0.getMaxEndIndex();
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test2265,"public void test2265() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""><8,KGM>"");
    timePeriodValues0.add((TimePeriod) minute0, (Number) 0);
    Second second0 = new Second(59, minute0);
    timePeriodValues0.add((TimePeriod) second0, (double) 0);
    int int0 = timePeriodValues0.getMaxEndIndex();
    assertEquals(0, timePeriodValues0.getMinEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinEndIndex())"
project,0,test2266,"public void test2266() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""><8,KGM>"");
    timePeriodValues0.add((TimePeriod) minute0, (Number) 0);
    Second second0 = new Second(59, minute0);
    timePeriodValues0.add((TimePeriod) second0, (double) 0);
    int int0 = timePeriodValues0.getMaxEndIndex();
    assertEquals(1, int0);
}",0,
project,0,test2367,"public void test2367() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    timePeriodValues0.getItemCount();
    assertEquals(0, timePeriodValues0.getMinStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinStartIndex())"
project,0,test2368,"public void test2368() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    timePeriodValues0.getItemCount();
    assertEquals(0, timePeriodValues0.getMaxStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxStartIndex())"
project,0,test2469,"public void test2469() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals((-1), timePeriodValues0.getMaxStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxStartIndex())"
project,0,test2470,"public void test2470() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals((-1), timePeriodValues0.getMinStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinStartIndex())"
project,0,test2471,"public void test2471() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals((-1), timePeriodValues0.getMinMiddleIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinMiddleIndex())"
project,0,test2472,"public void test2472() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals(""Value"", timePeriodValues0.getRangeDescription());
}",0,assertNotNull(timePeriodValues0.getRangeDescription())
project,0,test2473,"public void test2473() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals(""Time"", string0);
}",0,
project,0,test2474,"public void test2474() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals((-1), timePeriodValues0.getMaxMiddleIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxMiddleIndex())"
project,0,test2475,"public void test2475() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals((-1), timePeriodValues0.getMaxEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxEndIndex())"
project,0,test2476,"public void test2476() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals((-1), timePeriodValues0.getMinEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinEndIndex())"
project,0,test2577,"public void test2577() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, """", ""ql(=UKz+F"");
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals((-1), timePeriodValues0.getMinMiddleIndex());
}",0,
project,0,test2578,"public void test2578() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, """", ""ql(=UKz+F"");
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals(""ql(=UKz+F"", timePeriodValues0.getRangeDescription());
}",0,assertNotNull(timePeriodValues0.getRangeDescription())
project,0,test2579,"public void test2579() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, """", ""ql(=UKz+F"");
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals((-1), timePeriodValues0.getMinStartIndex());
}",0,
project,0,test2580,"public void test2580() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, """", ""ql(=UKz+F"");
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals((-1), timePeriodValues0.getMaxStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxStartIndex())"
project,0,test2581,"public void test2581() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, """", ""ql(=UKz+F"");
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test2582,"public void test2582() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, """", ""ql(=UKz+F"");
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals((-1), timePeriodValues0.getMaxEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxEndIndex())"
project,0,test2583,"public void test2583() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, """", ""ql(=UKz+F"");
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals((-1), timePeriodValues0.getMaxMiddleIndex());
}",0,
project,0,test2584,"public void test2584() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, """", ""ql(=UKz+F"");
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals((-1), timePeriodValues0.getMinEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinEndIndex())"
project,0,test2685,"public void test2685() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    timePeriodValues0.getDataItem(0);
    assertEquals(0, timePeriodValues0.getMaxStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxStartIndex())"
project,0,test2686,"public void test2686() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    timePeriodValues0.getDataItem(0);
    assertEquals(0, timePeriodValues0.getMinEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinEndIndex())"
project,0,test2787,"public void test2787() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""><8,KGM>"");
    timePeriodValues0.setNotify(false);
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(59, 59);
    assertEquals((-1), timePeriodValues1.getMaxMiddleIndex());
}",0,
project,0,test2788,"public void test2788() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""><8,KGM>"");
    timePeriodValues0.setNotify(false);
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(59, 59);
    assertEquals(""iMPL^G+;TH#Qv"", timePeriodValues1.getDomainDescription());
}",0,assertNotNull(timePeriodValues1.getDomainDescription())
project,0,test2789,"public void test2789() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""><8,KGM>"");
    timePeriodValues0.setNotify(false);
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(59, 59);
    assertNotSame(timePeriodValues1, timePeriodValues0);
}",0,
project,0,test2790,"public void test2790() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""><8,KGM>"");
    timePeriodValues0.setNotify(false);
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(59, 59);
    assertEquals((-1), timePeriodValues1.getMinStartIndex());
}",0,
project,0,test2791,"public void test2791() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""><8,KGM>"");
    timePeriodValues0.setNotify(false);
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(59, 59);
    assertEquals((-1), timePeriodValues1.getMinMiddleIndex());
}",0,
project,0,test2792,"public void test2792() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""><8,KGM>"");
    timePeriodValues0.setNotify(false);
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(59, 59);
    assertEquals((-1), timePeriodValues1.getMinEndIndex());
}",0,
project,0,test2793,"public void test2793() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""><8,KGM>"");
    timePeriodValues0.setNotify(false);
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(59, 59);
    assertEquals(""><8,KGM>"", timePeriodValues1.getRangeDescription());
}",0,
project,0,test2794,"public void test2794() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""><8,KGM>"");
    timePeriodValues0.setNotify(false);
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(59, 59);
    assertEquals((-1), timePeriodValues1.getMaxEndIndex());
}",0,
project,0,test2795,"public void test2795() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""><8,KGM>"");
    timePeriodValues0.setNotify(false);
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(59, 59);
    assertEquals((-1), timePeriodValues1.getMaxStartIndex());
}",0,
project,0,test2896,"public void test2896() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    MockDate mockDate0 = new MockDate(640, 10, 640);
    TimeZone timeZone0 = TimeZone.getTimeZone(""nIgn_xMf}8Te"");
    Hour hour1 = new Hour(mockDate0, timeZone0);
    timePeriodValues0.add((TimePeriod) hour1, (Number) 23);
    timePeriodValues0.createCopy(2283, 59);
    assertEquals(2, timePeriodValues0.getItemCount());
}",0,"assertEquals(0, timePeriodValues0.getItemCount())"
project,0,test2997,"public void test2997() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    TimePeriodValue timePeriodValue0 = new TimePeriodValue((TimePeriod) millisecond0, (Number) 0);
    timePeriodValues0.add(timePeriodValue0);
    timePeriodValues0.createCopy(0, 0);
    assertEquals(0, timePeriodValues0.getMinStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinStartIndex())"
project,0,test3098,"public void test3098() throws Throwable {
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond(0L);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(fixedMillisecond0, """", ""d\"""");
    Float float0 = new Float(0.0F);
    // Undeclared exception!
    try {
        timePeriodValues0.update((-9), float0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test3199,"public void test3199() throws Throwable {
    Month month0 = new Month();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0);
    MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
    PropertyChangeListener propertyChangeListener0 = metalComboBoxUI0.createPropertyChangeListener();
    timePeriodValues0.addPropertyChangeListener(propertyChangeListener0);
    // Undeclared exception!
    try {
        timePeriodValues0.setDomainDescription((String) null);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.jfree.data.time.TimePeriodValues cannot be cast to javax.swing.JComboBox
        //
        verifyException(""javax.swing.plaf.basic.BasicComboBoxUI$Handler"", e);
    }
}",0,
project,0,test32100,"public void test32100() throws Throwable {
    MockDate mockDate0 = new MockDate();
    ZoneInfo zoneInfo0 = (ZoneInfo) RegularTimePeriod.DEFAULT_TIME_ZONE;
    Minute minute0 = new Minute(mockDate0, zoneInfo0);
    Day day0 = minute0.getDay();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0);
    // Undeclared exception!
    try {
        timePeriodValues0.getValue((-30));
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test33101,"public void test33101() throws Throwable {
    Day day0 = new Day();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(day0);
    // Undeclared exception!
    try {
        timePeriodValues0.getTimePeriod((-1299));
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test34102,"public void test34102() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    // Undeclared exception!
    try {
        timePeriodValues0.getDataItem((-990));
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test35103,"public void test35103() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0);
    // Undeclared exception!
    try {
        timePeriodValues0.delete((-1789), 120);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test36104,"public void test36104() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    TimePeriodValue timePeriodValue0 = new TimePeriodValue((TimePeriod) millisecond0, (Number) 0);
    timePeriodValues0.add(timePeriodValue0);
    // Undeclared exception!
    try {
        timePeriodValues0.createCopy(0, 1067);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 1
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test37105,"public void test37105() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    MockDate mockDate0 = new MockDate(37, 23, 640, (-1285), 29, 29);
    TimeZone timeZone0 = TimeZone.getTimeZone(""nIgn_xMf}8Te"");
    Hour hour1 = new Hour(mockDate0, timeZone0);
    timePeriodValues0.add((TimePeriod) hour1, (Number) 23);
    // Undeclared exception!
    try {
        timePeriodValues0.clone();
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 1
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test38106,"public void test38106() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""p><8,KGM>"");
    TimePeriodValue timePeriodValue0 = new TimePeriodValue((TimePeriod) minute0, (double) 59);
    timePeriodValues0.add(timePeriodValue0);
    MockDate mockDate0 = new MockDate((-2153307112000L));
    Second second0 = new Second(mockDate0);
    timePeriodValues0.add((TimePeriod) second0, (double) 59);
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(2545, 59);
    // Undeclared exception!
    try {
        timePeriodValues1.add((TimePeriod) minute0, (Number) 59);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 1
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test39107,"public void test39107() throws Throwable {
    MockDate mockDate0 = new MockDate();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Quarter quarter0 = new Quarter(mockDate0, timeZone0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(quarter0);
    // Undeclared exception!
    try {
        timePeriodValues0.add((TimePeriod) null, (Number) 4);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'period' argument.
        //
        verifyException(""org.jfree.data.time.TimePeriodValue"", e);
    }
}",0,
project,0,test40108,"public void test40108() throws Throwable {
    MockDate mockDate0 = new MockDate(3426L);
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond(mockDate0);
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(fixedMillisecond0);
    // Undeclared exception!
    try {
        timePeriodValues0.add((TimePeriod) null, (double) 3426L);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'period' argument.
        //
        verifyException(""org.jfree.data.time.TimePeriodValue"", e);
    }
}",0,
project,0,test41109,"public void test41109() throws Throwable {
    TimePeriodValues timePeriodValues0 = null;
    try {
        timePeriodValues0 = new TimePeriodValues((Comparable) null, ""z*EG>~.ppng% "", ""Failed to add cloned item."");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'key' argument.
        //
        verifyException(""org.jfree.data.general.Series"", e);
    }
}",0,
project,0,test42110,"public void test42110() throws Throwable {
    TimePeriodValues timePeriodValues0 = null;
    try {
        timePeriodValues0 = new TimePeriodValues((Comparable) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null 'key' argument.
        //
        verifyException(""org.jfree.data.general.Series"", e);
    }
}",0,
project,0,test43111,"public void test43111() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals((-1), timePeriodValues0.getMaxMiddleIndex());
}",0,
project,0,test43112,"public void test43112() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals((-1), timePeriodValues0.getMinStartIndex());
}",0,
project,0,test43113,"public void test43113() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals((-1), timePeriodValues0.getMinMiddleIndex());
}",0,
project,0,test43114,"public void test43114() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals((-1), timePeriodValues0.getMinEndIndex());
}",0,
project,0,test43115,"public void test43115() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    String string0 = timePeriodValues0.getDomainDescription();
    assertNull(string0);
}",0,
project,0,test43116,"public void test43116() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals((-1), timePeriodValues0.getMaxStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxStartIndex())"
project,0,test43117,"public void test43117() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    String string0 = timePeriodValues0.getDomainDescription();
    assertEquals((-1), timePeriodValues0.getMaxEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxEndIndex())"
project,0,test44118,"public void test44118() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    // Undeclared exception!
    try {
        timePeriodValues0.getDataItem(0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test45119,"public void test45119() throws Throwable {
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(fixedMillisecond0, ""|#8%_F&&?:?[Cv).[{"", (String) null);
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals((-1), timePeriodValues0.getMaxMiddleIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxMiddleIndex())"
project,0,test45120,"public void test45120() throws Throwable {
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(fixedMillisecond0, ""|#8%_F&&?:?[Cv).[{"", (String) null);
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals(""|#8%_F&&?:?[Cv).[{"", timePeriodValues0.getDomainDescription());
}",0,assertNotNull(timePeriodValues0.getDomainDescription())
project,0,test45121,"public void test45121() throws Throwable {
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(fixedMillisecond0, ""|#8%_F&&?:?[Cv).[{"", (String) null);
    String string0 = timePeriodValues0.getRangeDescription();
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test45122,"public void test45122() throws Throwable {
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(fixedMillisecond0, ""|#8%_F&&?:?[Cv).[{"", (String) null);
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals((-1), timePeriodValues0.getMinStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinStartIndex())"
project,0,test45123,"public void test45123() throws Throwable {
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(fixedMillisecond0, ""|#8%_F&&?:?[Cv).[{"", (String) null);
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals((-1), timePeriodValues0.getMinMiddleIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinMiddleIndex())"
project,0,test45124,"public void test45124() throws Throwable {
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(fixedMillisecond0, ""|#8%_F&&?:?[Cv).[{"", (String) null);
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals((-1), timePeriodValues0.getMaxEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxEndIndex())"
project,0,test45125,"public void test45125() throws Throwable {
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(fixedMillisecond0, ""|#8%_F&&?:?[Cv).[{"", (String) null);
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals((-1), timePeriodValues0.getMinEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinEndIndex())"
project,0,test45126,"public void test45126() throws Throwable {
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(fixedMillisecond0, ""|#8%_F&&?:?[Cv).[{"", (String) null);
    String string0 = timePeriodValues0.getRangeDescription();
    assertEquals((-1), timePeriodValues0.getMaxStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxStartIndex())"
project,0,test46127,"public void test46127() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    timePeriodValues0.getItemCount();
    assertEquals((-1), timePeriodValues0.getMinMiddleIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinMiddleIndex())"
project,0,test46128,"public void test46128() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    timePeriodValues0.getItemCount();
    assertEquals("""", timePeriodValues0.getRangeDescription());
}",0,assertNotNull(timePeriodValues0.getRangeDescription())
project,0,test46129,"public void test46129() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    timePeriodValues0.getItemCount();
    assertEquals((-1), timePeriodValues0.getMaxStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxStartIndex())"
project,0,test46130,"public void test46130() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    timePeriodValues0.getItemCount();
    assertEquals("""", timePeriodValues0.getDomainDescription());
}",0,assertNotNull(timePeriodValues0.getDomainDescription())
project,0,test46131,"public void test46131() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    timePeriodValues0.getItemCount();
    assertEquals((-1), timePeriodValues0.getMaxEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxEndIndex())"
project,0,test46132,"public void test46132() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    timePeriodValues0.getItemCount();
    assertEquals((-1), timePeriodValues0.getMinStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinStartIndex())"
project,0,test46133,"public void test46133() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    timePeriodValues0.getItemCount();
    assertEquals((-1), timePeriodValues0.getMinEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinEndIndex())"
project,0,test46134,"public void test46134() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    timePeriodValues0.getItemCount();
    assertEquals((-1), timePeriodValues0.getMaxMiddleIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxMiddleIndex())"
project,0,test47135,"public void test47135() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    TimePeriodValue timePeriodValue0 = new TimePeriodValue((TimePeriod) millisecond0, (Number) 0);
    timePeriodValues0.add(timePeriodValue0);
    // Undeclared exception!
    try {
        timePeriodValues0.createCopy((-1823), 408);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test48136,"public void test48136() throws Throwable {
    Month month0 = new Month();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0);
    assertEquals(""Value"", timePeriodValues0.getRangeDescription());
}",0,assertNotNull(timePeriodValues0.getRangeDescription())
project,0,test48137,"public void test48137() throws Throwable {
    Month month0 = new Month();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0);
    timePeriodValues0.setRangeDescription((String) null);
    timePeriodValues0.hashCode();
    assertEquals((-1), timePeriodValues0.getMinStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinStartIndex())"
project,0,test48138,"public void test48138() throws Throwable {
    Month month0 = new Month();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0);
    timePeriodValues0.setRangeDescription((String) null);
    timePeriodValues0.hashCode();
    assertEquals((-1), timePeriodValues0.getMaxStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxStartIndex())"
project,0,test48139,"public void test48139() throws Throwable {
    Month month0 = new Month();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0);
    timePeriodValues0.setRangeDescription((String) null);
    timePeriodValues0.hashCode();
    assertEquals((-1), timePeriodValues0.getMaxEndIndex());
}",0,
project,0,test48140,"public void test48140() throws Throwable {
    Month month0 = new Month();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0);
    timePeriodValues0.setRangeDescription((String) null);
    timePeriodValues0.hashCode();
    assertEquals(""Time"", timePeriodValues0.getDomainDescription());
}",0,assertNotNull(timePeriodValues0.getDomainDescription())
project,0,test48141,"public void test48141() throws Throwable {
    Month month0 = new Month();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0);
    timePeriodValues0.setRangeDescription((String) null);
    timePeriodValues0.hashCode();
    assertEquals((-1), timePeriodValues0.getMinEndIndex());
}",0,
project,0,test49142,"public void test49142() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    timePeriodValues0.hashCode();
    assertEquals((-1), timePeriodValues0.getMaxMiddleIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxMiddleIndex())"
project,0,test49143,"public void test49143() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    timePeriodValues0.hashCode();
    assertEquals((-1), timePeriodValues0.getMinStartIndex());
}",0,
project,0,test49144,"public void test49144() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    timePeriodValues0.hashCode();
    assertEquals((-1), timePeriodValues0.getMinEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinEndIndex())"
project,0,test49145,"public void test49145() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    timePeriodValues0.hashCode();
    assertEquals((-1), timePeriodValues0.getMaxEndIndex());
}",0,
project,0,test50146,"public void test50146() throws Throwable {
    Month month0 = new Month();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0);
    assertEquals(""Time"", timePeriodValues0.getDomainDescription());
}",0,
project,0,test50147,"public void test50147() throws Throwable {
    Month month0 = new Month();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0);
    timePeriodValues0.setDomainDescription((String) null);
    timePeriodValues0.hashCode();
    assertEquals((-1), timePeriodValues0.getMinEndIndex());
}",0,
project,0,test50148,"public void test50148() throws Throwable {
    Month month0 = new Month();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0);
    timePeriodValues0.setDomainDescription((String) null);
    timePeriodValues0.hashCode();
    assertEquals(""Value"", timePeriodValues0.getRangeDescription());
}",0,assertNotNull(timePeriodValues0.getRangeDescription())
project,0,test50149,"public void test50149() throws Throwable {
    Month month0 = new Month();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0);
    timePeriodValues0.setDomainDescription((String) null);
    timePeriodValues0.hashCode();
    assertEquals((-1), timePeriodValues0.getMaxMiddleIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxMiddleIndex())"
project,0,test50150,"public void test50150() throws Throwable {
    Month month0 = new Month();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0);
    timePeriodValues0.setDomainDescription((String) null);
    timePeriodValues0.hashCode();
    assertEquals((-1), timePeriodValues0.getMinMiddleIndex());
}",0,
project,0,test50151,"public void test50151() throws Throwable {
    Month month0 = new Month();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0);
    timePeriodValues0.setDomainDescription((String) null);
    timePeriodValues0.hashCode();
    assertEquals((-1), timePeriodValues0.getMinStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinStartIndex())"
project,0,test51152,"public void test51152() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPQUL^G+;TH#mv"", ""iMPQUL^G+;TH#mv"");
    TimePeriodValue timePeriodValue0 = new TimePeriodValue((TimePeriod) minute0, (double) 59);
    timePeriodValue0.setValue(59);
    timePeriodValues0.add(timePeriodValue0);
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(2545, 59);
    timePeriodValues1.add((TimePeriod) minute0, (Number) 59);
    boolean boolean0 = timePeriodValues1.equals(timePeriodValues0);
    assertEquals(1, timePeriodValues0.getItemCount());
}",0,"assertEquals(0, timePeriodValues0.getItemCount())"
project,0,test51153,"public void test51153() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPQUL^G+;TH#mv"", ""iMPQUL^G+;TH#mv"");
    TimePeriodValue timePeriodValue0 = new TimePeriodValue((TimePeriod) minute0, (double) 59);
    timePeriodValue0.setValue(59);
    timePeriodValues0.add(timePeriodValue0);
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(2545, 59);
    timePeriodValues1.add((TimePeriod) minute0, (Number) 59);
    boolean boolean0 = timePeriodValues1.equals(timePeriodValues0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test52154,"public void test52154() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""iMPL^G+;TH#Qv"");
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(2545, 0);
    TimePeriodValue timePeriodValue0 = new TimePeriodValue((TimePeriod) minute0, (double) 59);
    timePeriodValues1.add(timePeriodValue0);
    timePeriodValues0.add((TimePeriod) minute0, (Number) 59);
    boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
    assertEquals(1, timePeriodValues1.getItemCount());
}",0,"assertEquals(0, timePeriodValues1.getItemCount())"
project,0,test52155,"public void test52155() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""iMPL^G+;TH#Qv"");
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(2545, 0);
    TimePeriodValue timePeriodValue0 = new TimePeriodValue((TimePeriod) minute0, (double) 59);
    timePeriodValues1.add(timePeriodValue0);
    timePeriodValues0.add((TimePeriod) minute0, (Number) 59);
    boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test53156,"public void test53156() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""iMPL^G+;TH#Qv"");
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(2545, 0);
    timePeriodValues1.add((TimePeriod) minute0, (Number) 59);
    boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
    assertEquals(0, timePeriodValues1.getMinMiddleIndex());
}",0,
project,0,test53157,"public void test53157() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""iMPL^G+;TH#Qv"");
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(2545, 0);
    timePeriodValues1.add((TimePeriod) minute0, (Number) 59);
    boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
    assertFalse(timePeriodValues1.equals((Object) timePeriodValues0));
}",0,
project,0,test53158,"public void test53158() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""iMPL^G+;TH#Qv"");
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(2545, 0);
    timePeriodValues1.add((TimePeriod) minute0, (Number) 59);
    boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test54159,"public void test54159() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Q9"", """");
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(0, 59);
    timePeriodValues1.setRangeDescription(""iMPL^G+;TH#Q9"");
    boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test54160,"public void test54160() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Q9"", """");
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(0, 59);
    timePeriodValues1.setRangeDescription(""iMPL^G+;TH#Q9"");
    boolean boolean0 = timePeriodValues0.equals(timePeriodValues1);
    assertEquals(""iMPL^G+;TH#Q9"", timePeriodValues1.getRangeDescription());
}",0,assertNotNull(timePeriodValues1.getRangeDescription())
project,0,test55161,"public void test55161() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(999, 0);
    assertTrue(timePeriodValues1.equals((Object) timePeriodValues0));
}",0,
project,0,test55162,"public void test55162() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(999, 0);
    timePeriodValues0.setDescription("""");
    boolean boolean0 = timePeriodValues1.equals(timePeriodValues0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test55163,"public void test55163() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(999, 0);
    timePeriodValues0.setDescription("""");
    boolean boolean0 = timePeriodValues1.equals(timePeriodValues0);
    assertFalse(timePeriodValues1.equals((Object) timePeriodValues0));
}",0,
project,0,test56164,"public void test56164() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0);
    Object object0 = new Object();
    boolean boolean0 = timePeriodValues0.equals(object0);
    assertEquals((-1), timePeriodValues0.getMinMiddleIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinMiddleIndex())"
project,0,test56165,"public void test56165() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0);
    Object object0 = new Object();
    boolean boolean0 = timePeriodValues0.equals(object0);
    assertEquals(""Value"", timePeriodValues0.getRangeDescription());
}",0,
project,0,test56166,"public void test56166() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0);
    Object object0 = new Object();
    boolean boolean0 = timePeriodValues0.equals(object0);
    assertEquals(""Time"", timePeriodValues0.getDomainDescription());
}",0,
project,0,test56167,"public void test56167() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0);
    Object object0 = new Object();
    boolean boolean0 = timePeriodValues0.equals(object0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test56168,"public void test56168() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0);
    Object object0 = new Object();
    boolean boolean0 = timePeriodValues0.equals(object0);
    assertEquals((-1), timePeriodValues0.getMaxStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxStartIndex())"
project,0,test56169,"public void test56169() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0);
    Object object0 = new Object();
    boolean boolean0 = timePeriodValues0.equals(object0);
    assertEquals((-1), timePeriodValues0.getMinStartIndex());
}",0,
project,0,test56170,"public void test56170() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0);
    Object object0 = new Object();
    boolean boolean0 = timePeriodValues0.equals(object0);
    assertEquals((-1), timePeriodValues0.getMaxMiddleIndex());
}",0,
project,0,test56171,"public void test56171() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0);
    Object object0 = new Object();
    boolean boolean0 = timePeriodValues0.equals(object0);
    assertEquals((-1), timePeriodValues0.getMaxEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxEndIndex())"
project,0,test56172,"public void test56172() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0);
    Object object0 = new Object();
    boolean boolean0 = timePeriodValues0.equals(object0);
    assertEquals((-1), timePeriodValues0.getMinEndIndex());
}",0,
project,0,test57173,"public void test57173() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(999, 0);
    timePeriodValues0.setDomainDescription(""^tpu."");
    boolean boolean0 = timePeriodValues1.equals(timePeriodValues0);
    assertEquals(""^tpu."", timePeriodValues0.getDomainDescription());
}",0,assertNotNull(timePeriodValues0.getDomainDescription())
project,0,test57174,"public void test57174() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    TimePeriodValues timePeriodValues1 = timePeriodValues0.createCopy(999, 0);
    timePeriodValues0.setDomainDescription(""^tpu."");
    boolean boolean0 = timePeriodValues1.equals(timePeriodValues0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test58175,"public void test58175() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    // Undeclared exception!
    try {
        timePeriodValues0.delete(0, 0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test59176,"public void test59176() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    TimePeriodValue timePeriodValue0 = new TimePeriodValue((TimePeriod) millisecond0, (Number) 0);
    timePeriodValues0.add(timePeriodValue0);
    timePeriodValues0.delete(9, 0);
    assertEquals(0, timePeriodValues0.getMinEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinEndIndex())"
project,0,test60177,"public void test60177() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    timePeriodValues0.add((TimePeriod) hour0, (Number) 0);
    MockDate mockDate0 = new MockDate(640, 29, 37);
    TimeZone timeZone0 = TimeZone.getTimeZone(""nIgn_xMf}8Te"");
    Hour hour1 = new Hour(mockDate0, timeZone0);
    timePeriodValues0.add((TimePeriod) hour1, (Number) 23);
    // Undeclared exception!
    try {
        timePeriodValues0.clone();
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 1
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test61178,"public void test61178() throws Throwable {
    MockDate mockDate0 = new MockDate();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(mockDate0, ""org.jfree.data.UnknownKeyException"", ""org.jfree.data.UnknownKeyException"");
    // Undeclared exception!
    try {
        timePeriodValues0.add((TimePeriodValue) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null item not allowed.
        //
        verifyException(""org.jfree.data.time.TimePeriodValues"", e);
    }
}",1,
project,0,test62179,"public void test62179() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    int int0 = timePeriodValues0.getMinMiddleIndex();
    assertEquals((-1), timePeriodValues0.getMinEndIndex());
}",0,
project,0,test62180,"public void test62180() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    int int0 = timePeriodValues0.getMinMiddleIndex();
    assertEquals((-1), timePeriodValues0.getMaxEndIndex());
}",0,
project,0,test62181,"public void test62181() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    int int0 = timePeriodValues0.getMinMiddleIndex();
    assertEquals((-1), timePeriodValues0.getMaxStartIndex());
}",0,
project,0,test62182,"public void test62182() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    int int0 = timePeriodValues0.getMinMiddleIndex();
    assertEquals("""", timePeriodValues0.getRangeDescription());
}",0,assertNotNull(timePeriodValues0.getRangeDescription())
project,0,test62183,"public void test62183() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    int int0 = timePeriodValues0.getMinMiddleIndex();
    assertEquals((-1), timePeriodValues0.getMinStartIndex());
}",0,
project,0,test62184,"public void test62184() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    int int0 = timePeriodValues0.getMinMiddleIndex();
    assertEquals("""", timePeriodValues0.getDomainDescription());
}",0,assertNotNull(timePeriodValues0.getDomainDescription())
project,0,test62185,"public void test62185() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    int int0 = timePeriodValues0.getMinMiddleIndex();
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test62186,"public void test62186() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    int int0 = timePeriodValues0.getMinMiddleIndex();
    assertEquals((-1), timePeriodValues0.getMaxMiddleIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxMiddleIndex())"
project,0,test63187,"public void test63187() throws Throwable {
    Month month0 = new Month();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(month0);
    Long long0 = new Long((byte) 34);
    // Undeclared exception!
    try {
        timePeriodValues0.update(0, long0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test64188,"public void test64188() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Q9"", """");
    int int0 = timePeriodValues0.getMaxEndIndex();
    assertEquals((-1), timePeriodValues0.getMaxMiddleIndex());
}",0,
project,0,test64189,"public void test64189() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Q9"", """");
    int int0 = timePeriodValues0.getMaxEndIndex();
    assertEquals(""iMPL^G+;TH#Q9"", timePeriodValues0.getDomainDescription());
}",0,assertNotNull(timePeriodValues0.getDomainDescription())
project,0,test64190,"public void test64190() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Q9"", """");
    int int0 = timePeriodValues0.getMaxEndIndex();
    assertEquals((-1), timePeriodValues0.getMinStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinStartIndex())"
project,0,test64191,"public void test64191() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Q9"", """");
    int int0 = timePeriodValues0.getMaxEndIndex();
    assertEquals("""", timePeriodValues0.getRangeDescription());
}",0,assertNotNull(timePeriodValues0.getRangeDescription())
project,0,test64192,"public void test64192() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Q9"", """");
    int int0 = timePeriodValues0.getMaxEndIndex();
    assertEquals((-1), timePeriodValues0.getMinMiddleIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinMiddleIndex())"
project,0,test64193,"public void test64193() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Q9"", """");
    int int0 = timePeriodValues0.getMaxEndIndex();
    assertEquals((-1), timePeriodValues0.getMinEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinEndIndex())"
project,0,test64194,"public void test64194() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Q9"", """");
    int int0 = timePeriodValues0.getMaxEndIndex();
    assertEquals((-1), int0);
}",0,
project,0,test64195,"public void test64195() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Q9"", """");
    int int0 = timePeriodValues0.getMaxEndIndex();
    assertEquals((-1), timePeriodValues0.getMaxStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxStartIndex())"
project,0,test65196,"public void test65196() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    // Undeclared exception!
    try {
        timePeriodValues0.getTimePeriod(0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test66197,"public void test66197() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    int int0 = timePeriodValues0.getMinStartIndex();
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test66198,"public void test66198() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    int int0 = timePeriodValues0.getMinStartIndex();
    assertEquals((-1), timePeriodValues0.getMaxEndIndex());
}",0,
project,0,test66199,"public void test66199() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    int int0 = timePeriodValues0.getMinStartIndex();
    assertEquals((-1), timePeriodValues0.getMinEndIndex());
}",0,
project,0,test66200,"public void test66200() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    int int0 = timePeriodValues0.getMinStartIndex();
    assertEquals((-1), timePeriodValues0.getMaxMiddleIndex());
}",0,
project,0,test66201,"public void test66201() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    int int0 = timePeriodValues0.getMinStartIndex();
    assertEquals("""", timePeriodValues0.getRangeDescription());
}",0,assertNotNull(timePeriodValues0.getRangeDescription())
project,0,test66202,"public void test66202() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    int int0 = timePeriodValues0.getMinStartIndex();
    assertEquals((-1), timePeriodValues0.getMaxStartIndex());
}",0,
project,0,test66203,"public void test66203() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    int int0 = timePeriodValues0.getMinStartIndex();
    assertEquals("""", timePeriodValues0.getDomainDescription());
}",0,assertNotNull(timePeriodValues0.getDomainDescription())
project,0,test66204,"public void test66204() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    int int0 = timePeriodValues0.getMinStartIndex();
    assertEquals((-1), timePeriodValues0.getMinMiddleIndex());
}",0,
project,0,test67205,"public void test67205() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0);
    int int0 = timePeriodValues0.getMaxStartIndex();
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test67206,"public void test67206() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0);
    int int0 = timePeriodValues0.getMaxStartIndex();
    assertEquals((-1), timePeriodValues0.getMinEndIndex());
}",0,
project,0,test67207,"public void test67207() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0);
    int int0 = timePeriodValues0.getMaxStartIndex();
    assertEquals(""Value"", timePeriodValues0.getRangeDescription());
}",0,assertNotNull(timePeriodValues0.getRangeDescription())
project,0,test67208,"public void test67208() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0);
    int int0 = timePeriodValues0.getMaxStartIndex();
    assertEquals((-1), timePeriodValues0.getMaxEndIndex());
}",0,
project,0,test67209,"public void test67209() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0);
    int int0 = timePeriodValues0.getMaxStartIndex();
    assertEquals(""Time"", timePeriodValues0.getDomainDescription());
}",0,assertNotNull(timePeriodValues0.getDomainDescription())
project,0,test67210,"public void test67210() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0);
    int int0 = timePeriodValues0.getMaxStartIndex();
    assertEquals((-1), timePeriodValues0.getMinMiddleIndex());
}",0,
project,0,test67211,"public void test67211() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0);
    int int0 = timePeriodValues0.getMaxStartIndex();
    assertEquals((-1), timePeriodValues0.getMaxMiddleIndex());
}",0,
project,0,test67212,"public void test67212() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0);
    int int0 = timePeriodValues0.getMaxStartIndex();
    assertEquals((-1), timePeriodValues0.getMinStartIndex());
}",0,
project,0,test68213,"public void test68213() throws Throwable {
    Second second0 = new Second();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
    int int0 = timePeriodValues0.getMinEndIndex();
    assertEquals((-1), timePeriodValues0.getMinMiddleIndex());
}",0,
project,0,test68214,"public void test68214() throws Throwable {
    Second second0 = new Second();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
    int int0 = timePeriodValues0.getMinEndIndex();
    assertEquals((-1), timePeriodValues0.getMaxEndIndex());
}",0,
project,0,test68215,"public void test68215() throws Throwable {
    Second second0 = new Second();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
    int int0 = timePeriodValues0.getMinEndIndex();
    assertEquals(""Time"", timePeriodValues0.getDomainDescription());
}",0,
project,0,test68216,"public void test68216() throws Throwable {
    Second second0 = new Second();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
    int int0 = timePeriodValues0.getMinEndIndex();
    assertEquals((-1), timePeriodValues0.getMaxStartIndex());
}",0,
project,0,test68217,"public void test68217() throws Throwable {
    Second second0 = new Second();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
    int int0 = timePeriodValues0.getMinEndIndex();
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test68218,"public void test68218() throws Throwable {
    Second second0 = new Second();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
    int int0 = timePeriodValues0.getMinEndIndex();
    assertEquals((-1), timePeriodValues0.getMaxMiddleIndex());
}",0,
project,0,test68219,"public void test68219() throws Throwable {
    Second second0 = new Second();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
    int int0 = timePeriodValues0.getMinEndIndex();
    assertEquals((-1), timePeriodValues0.getMinStartIndex());
}",0,
project,0,test68220,"public void test68220() throws Throwable {
    Second second0 = new Second();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(second0);
    int int0 = timePeriodValues0.getMinEndIndex();
    assertEquals(""Value"", timePeriodValues0.getRangeDescription());
}",0,assertNotNull(timePeriodValues0.getRangeDescription())
project,0,test69221,"public void test69221() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""iMPL^G+;TH#Qv"");
    TimePeriodValues timePeriodValues1 = (TimePeriodValues) timePeriodValues0.clone();
    assertEquals((-1), timePeriodValues1.getMaxStartIndex());
}",0,
project,0,test69222,"public void test69222() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""iMPL^G+;TH#Qv"");
    TimePeriodValues timePeriodValues1 = (TimePeriodValues) timePeriodValues0.clone();
    assertEquals((-1), timePeriodValues1.getMinMiddleIndex());
}",0,"assertEquals(0, timePeriodValues1.getMinMiddleIndex())"
project,0,test69223,"public void test69223() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""iMPL^G+;TH#Qv"");
    TimePeriodValues timePeriodValues1 = (TimePeriodValues) timePeriodValues0.clone();
    assertEquals((-1), timePeriodValues1.getMinStartIndex());
}",0,
project,0,test69224,"public void test69224() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""iMPL^G+;TH#Qv"");
    TimePeriodValues timePeriodValues1 = (TimePeriodValues) timePeriodValues0.clone();
    assertNotSame(timePeriodValues1, timePeriodValues0);
}",0,
project,0,test69225,"public void test69225() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""iMPL^G+;TH#Qv"");
    TimePeriodValues timePeriodValues1 = (TimePeriodValues) timePeriodValues0.clone();
    assertEquals((-1), timePeriodValues1.getMaxEndIndex());
}",0,
project,0,test69226,"public void test69226() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""iMPL^G+;TH#Qv"");
    TimePeriodValues timePeriodValues1 = (TimePeriodValues) timePeriodValues0.clone();
    assertEquals((-1), timePeriodValues1.getMaxMiddleIndex());
}",0,
project,0,test69227,"public void test69227() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""iMPL^G+;TH#Qv"");
    TimePeriodValues timePeriodValues1 = (TimePeriodValues) timePeriodValues0.clone();
    assertEquals((-1), timePeriodValues1.getMinEndIndex());
}",0,
project,0,test69228,"public void test69228() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""iMPL^G+;TH#Qv"");
    TimePeriodValues timePeriodValues1 = (TimePeriodValues) timePeriodValues0.clone();
    assertEquals(""iMPL^G+;TH#Qv"", timePeriodValues1.getRangeDescription());
}",0,assertNotNull(timePeriodValues1.getRangeDescription())
project,0,test69229,"public void test69229() throws Throwable {
    Minute minute0 = new Minute();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(minute0, ""iMPL^G+;TH#Qv"", ""iMPL^G+;TH#Qv"");
    TimePeriodValues timePeriodValues1 = (TimePeriodValues) timePeriodValues0.clone();
    assertEquals(""iMPL^G+;TH#Qv"", timePeriodValues1.getDomainDescription());
}",0,assertNotNull(timePeriodValues1.getDomainDescription())
project,0,test70230,"public void test70230() throws Throwable {
    Millisecond millisecond0 = new Millisecond();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(millisecond0, """", """");
    // Undeclared exception!
    try {
        timePeriodValues0.getValue(0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test71231,"public void test71231() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    int int0 = timePeriodValues0.getMaxMiddleIndex();
    assertEquals((-1), timePeriodValues0.getMaxStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxStartIndex())"
project,0,test71232,"public void test71232() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    int int0 = timePeriodValues0.getMaxMiddleIndex();
    assertEquals((-1), timePeriodValues0.getMinMiddleIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinMiddleIndex())"
project,0,test71233,"public void test71233() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    int int0 = timePeriodValues0.getMaxMiddleIndex();
    assertEquals((-1), timePeriodValues0.getMaxEndIndex());
}",0,"assertEquals(0, timePeriodValues0.getMaxEndIndex())"
project,0,test71234,"public void test71234() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    int int0 = timePeriodValues0.getMaxMiddleIndex();
    assertEquals((-1), timePeriodValues0.getMinEndIndex());
}",0,
project,0,test71235,"public void test71235() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    int int0 = timePeriodValues0.getMaxMiddleIndex();
    assertEquals((-1), timePeriodValues0.getMinStartIndex());
}",0,"assertEquals(0, timePeriodValues0.getMinStartIndex())"
project,0,test71236,"public void test71236() throws Throwable {
    Hour hour0 = new Hour();
    TimePeriodValues timePeriodValues0 = new TimePeriodValues(hour0, (String) null, (String) null);
    int int0 = timePeriodValues0.getMaxMiddleIndex();
    assertEquals((-1), int0);
}",0,
