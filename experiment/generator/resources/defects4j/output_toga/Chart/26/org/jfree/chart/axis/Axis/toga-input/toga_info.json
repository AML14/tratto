{
  "test35234" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35234() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"N3Cvx5H#52#K\");\n    categoryAxis0.getLabel();\n    categoryAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test35234"
  },
  "test58353" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test58353() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"6bP8]y~(h{v?\");\n    DateAxis dateAxis0 = new DateAxis(\"6bP8]y~(h{v?\", timeZone0);\n    Date date0 = dateAxis0.getMaximumDate();\n    Week week0 = new Week(date0, timeZone0);\n    PeriodAxis periodAxis0 = new PeriodAxis(\"q9GCg4\", week0, week0, week0.DEFAULT_TIME_ZONE);\n    dateAxis0.setTickLabelPaint(periodAxis0.DEFAULT_AXIS_LINE_PAINT);\n    periodAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test58353"
  },
  "test58354" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test58354() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"6bP8]y~(h{v?\");\n    DateAxis dateAxis0 = new DateAxis(\"6bP8]y~(h{v?\", timeZone0);\n    Date date0 = dateAxis0.getMaximumDate();\n    Week week0 = new Week(date0, timeZone0);\n    PeriodAxis periodAxis0 = new PeriodAxis(\"q9GCg4\", week0, week0, week0.DEFAULT_TIME_ZONE);\n    dateAxis0.setTickLabelPaint(periodAxis0.DEFAULT_AXIS_LINE_PAINT);\n    periodAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test58354"
  },
  "test58355" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test58355() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"6bP8]y~(h{v?\");\n    DateAxis dateAxis0 = new DateAxis(\"6bP8]y~(h{v?\", timeZone0);\n    Date date0 = dateAxis0.getMaximumDate();\n    Week week0 = new Week(date0, timeZone0);\n    PeriodAxis periodAxis0 = new PeriodAxis(\"q9GCg4\", week0, week0, week0.DEFAULT_TIME_ZONE);\n    dateAxis0.setTickLabelPaint(periodAxis0.DEFAULT_AXIS_LINE_PAINT);\n    periodAxis0.isTickMarksVisible();\n}",
    "testName" : "test58355"
  },
  "test58356" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test58356() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"6bP8]y~(h{v?\");\n    DateAxis dateAxis0 = new DateAxis(\"6bP8]y~(h{v?\", timeZone0);\n    Date date0 = dateAxis0.getMaximumDate();\n    Week week0 = new Week(date0, timeZone0);\n    PeriodAxis periodAxis0 = new PeriodAxis(\"q9GCg4\", week0, week0, week0.DEFAULT_TIME_ZONE);\n    dateAxis0.setTickLabelPaint(periodAxis0.DEFAULT_AXIS_LINE_PAINT);\n    periodAxis0.getLabelAngle();\n}",
    "testName" : "test58356"
  },
  "test58351" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test58351() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"6bP8]y~(h{v?\");\n    DateAxis dateAxis0 = new DateAxis(\"6bP8]y~(h{v?\", timeZone0);\n    Date date0 = dateAxis0.getMaximumDate();\n    Week week0 = new Week(date0, timeZone0);\n    PeriodAxis periodAxis0 = new PeriodAxis(\"q9GCg4\", week0, week0, week0.DEFAULT_TIME_ZONE);\n    dateAxis0.setTickLabelPaint(periodAxis0.DEFAULT_AXIS_LINE_PAINT);\n    periodAxis0.isAxisLineVisible();\n}",
    "testName" : "test58351"
  },
  "test58352" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test58352() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"6bP8]y~(h{v?\");\n    DateAxis dateAxis0 = new DateAxis(\"6bP8]y~(h{v?\", timeZone0);\n    Date date0 = dateAxis0.getMaximumDate();\n    Week week0 = new Week(date0, timeZone0);\n    PeriodAxis periodAxis0 = new PeriodAxis(\"q9GCg4\", week0, week0, week0.DEFAULT_TIME_ZONE);\n    dateAxis0.setTickLabelPaint(periodAxis0.DEFAULT_AXIS_LINE_PAINT);\n    periodAxis0.isTickLabelsVisible();\n}",
    "testName" : "test58352"
  },
  "test48303" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test48303() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    HistogramDataset histogramDataset0 = new HistogramDataset();\n    int[] intArray0 = new int[3];\n    SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(histogramDataset0, intArray0);\n    boolean boolean0 = logarithmicAxis0.hasListener(subSeriesDataset0);\n    logarithmicAxis0.isTickMarksVisible();\n}",
    "testName" : "test48303"
  },
  "test45287" : {
    "methodSignature" : "public AxisState draw(Graphics2D g2, double cursor, Rectangle2D plotArea, Rectangle2D dataArea, RectangleEdge edge, PlotRenderingInfo plotState)",
    "methodName" : "draw",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test45287() throws Throwable {\n    SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(\"Null 'insets' argument.\");\n    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();\n    RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();\n    PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();\n    subCategoryAxis0.draw((Graphics2D) null, 1.0E-8, rectangle2D_Double0, rectangle2D_Double0, rectangleEdge0, plotRenderingInfo0);\n}",
    "testName" : "test45287"
  },
  "test35240" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35240() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"N3Cvx5H#52#K\");\n    categoryAxis0.getLabel();\n    categoryAxis0.isTickLabelsVisible();\n}",
    "testName" : "test35240"
  },
  "test48301" : {
    "methodSignature" : "public boolean hasListener(EventListener listener)",
    "methodName" : "hasListener",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test48301() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    HistogramDataset histogramDataset0 = new HistogramDataset();\n    int[] intArray0 = new int[3];\n    SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(histogramDataset0, intArray0);\n    boolean boolean0 = logarithmicAxis0.hasListener(subSeriesDataset0);\n}",
    "testName" : "test48301"
  },
  "test72421" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test72421() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"\");\n    periodAxis0.setLabel(\"\");\n    periodAxis0.isAxisLineVisible();\n}",
    "testName" : "test72421"
  },
  "test48302" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test48302() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    HistogramDataset histogramDataset0 = new HistogramDataset();\n    int[] intArray0 = new int[3];\n    SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(histogramDataset0, intArray0);\n    boolean boolean0 = logarithmicAxis0.hasListener(subSeriesDataset0);\n    logarithmicAxis0.isVisible();\n}",
    "testName" : "test48302"
  },
  "test72422" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test72422() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"\");\n    periodAxis0.setLabel(\"\");\n    periodAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test72422"
  },
  "test48300" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test48300() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    HistogramDataset histogramDataset0 = new HistogramDataset();\n    int[] intArray0 = new int[3];\n    SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(histogramDataset0, intArray0);\n    boolean boolean0 = logarithmicAxis0.hasListener(subSeriesDataset0);\n    logarithmicAxis0.getLabelAngle();\n}",
    "testName" : "test48300"
  },
  "test72420" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test72420() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"\");\n    periodAxis0.setLabel(\"\");\n    periodAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test72420"
  },
  "test35239" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35239() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"N3Cvx5H#52#K\");\n    categoryAxis0.getLabel();\n    categoryAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test35239"
  },
  "test35238" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35238() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"N3Cvx5H#52#K\");\n    categoryAxis0.getLabel();\n    categoryAxis0.isTickMarksVisible();\n}",
    "testName" : "test35238"
  },
  "test72425" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test72425() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"\");\n    periodAxis0.setLabel(\"\");\n    periodAxis0.isVisible();\n}",
    "testName" : "test72425"
  },
  "test35237" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35237() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"N3Cvx5H#52#K\");\n    categoryAxis0.getLabel();\n    categoryAxis0.getLabelAngle();\n}",
    "testName" : "test35237"
  },
  "test72426" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test72426() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"\");\n    periodAxis0.setLabel(\"\");\n    periodAxis0.isTickMarksVisible();\n}",
    "testName" : "test72426"
  },
  "test35236" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35236() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"N3Cvx5H#52#K\");\n    categoryAxis0.getLabel();\n    categoryAxis0.isVisible();\n}",
    "testName" : "test35236"
  },
  "test72423" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test72423() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"\");\n    periodAxis0.setLabel(\"\");\n    periodAxis0.isTickLabelsVisible();\n}",
    "testName" : "test72423"
  },
  "test35235" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35235() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"N3Cvx5H#52#K\");\n    categoryAxis0.getLabel();\n    categoryAxis0.isAxisLineVisible();\n}",
    "testName" : "test35235"
  },
  "test72424" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test72424() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"\");\n    periodAxis0.setLabel(\"\");\n    periodAxis0.getLabelAngle();\n}",
    "testName" : "test72424"
  },
  "test81471" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test81471() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    categoryAxis0.setLabelURL(\"ZF#c3@e32uoO[K\");\n    categoryAxis0.getLabelAngle();\n}",
    "testName" : "test81471"
  },
  "test81470" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test81470() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    categoryAxis0.setLabelURL(\"ZF#c3@e32uoO[K\");\n    categoryAxis0.isTickMarksVisible();\n}",
    "testName" : "test81470"
  },
  "test81472" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test81472() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    categoryAxis0.setLabelURL(\"ZF#c3@e32uoO[K\");\n    categoryAxis0.isAxisLineVisible();\n}",
    "testName" : "test81472"
  },
  "test23150" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test23150() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1, 0.0F, \"org.jfree.chart.text.TextFragment\");\n    Font font0 = cyclicNumberAxis0.getLabelFont();\n    cyclicNumberAxis0.isTickMarksVisible();\n}",
    "testName" : "test23150"
  },
  "test23151" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test23151() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1, 0.0F, \"org.jfree.chart.text.TextFragment\");\n    Font font0 = cyclicNumberAxis0.getLabelFont();\n    cyclicNumberAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test23151"
  },
  "test23152" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test23152() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1, 0.0F, \"org.jfree.chart.text.TextFragment\");\n    Font font0 = cyclicNumberAxis0.getLabelFont();\n    cyclicNumberAxis0.isTickLabelsVisible();\n}",
    "testName" : "test23152"
  },
  "test23153" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test23153() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1, 0.0F, \"org.jfree.chart.text.TextFragment\");\n    Font font0 = cyclicNumberAxis0.getLabelFont();\n    cyclicNumberAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test23153"
  },
  "test23155" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test23155() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1, 0.0F, \"org.jfree.chart.text.TextFragment\");\n    Font font0 = cyclicNumberAxis0.getLabelFont();\n    cyclicNumberAxis0.isVisible();\n}",
    "testName" : "test23155"
  },
  "test23156" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test23156() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1, 0.0F, \"org.jfree.chart.text.TextFragment\");\n    Font font0 = cyclicNumberAxis0.getLabelFont();\n    cyclicNumberAxis0.isAxisLineVisible();\n}",
    "testName" : "test23156"
  },
  "test23149" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test23149() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1, 0.0F, \"org.jfree.chart.text.TextFragment\");\n    Font font0 = cyclicNumberAxis0.getLabelFont();\n    cyclicNumberAxis0.getLabelAngle();\n}",
    "testName" : "test23149"
  },
  "test81468" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test81468() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    categoryAxis0.setLabelURL(\"ZF#c3@e32uoO[K\");\n    categoryAxis0.isTickLabelsVisible();\n}",
    "testName" : "test81468"
  },
  "test81467" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test81467() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    categoryAxis0.setLabelURL(\"ZF#c3@e32uoO[K\");\n    categoryAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test81467"
  },
  "test81466" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test81466() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    categoryAxis0.setLabelURL(\"ZF#c3@e32uoO[K\");\n    categoryAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test81466"
  },
  "test81469" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test81469() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    categoryAxis0.setLabelURL(\"ZF#c3@e32uoO[K\");\n    categoryAxis0.isVisible();\n}",
    "testName" : "test81469"
  },
  "test68398" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test68398() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    SystemColor systemColor0 = SystemColor.menu;\n    logarithmicAxis0.setLabelPaint(systemColor0);\n    logarithmicAxis0.isTickMarksVisible();\n}",
    "testName" : "test68398"
  },
  "test68399" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test68399() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    SystemColor systemColor0 = SystemColor.menu;\n    logarithmicAxis0.setLabelPaint(systemColor0);\n    logarithmicAxis0.isVisible();\n}",
    "testName" : "test68399"
  },
  "test58357" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test58357() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"6bP8]y~(h{v?\");\n    DateAxis dateAxis0 = new DateAxis(\"6bP8]y~(h{v?\", timeZone0);\n    Date date0 = dateAxis0.getMaximumDate();\n    Week week0 = new Week(date0, timeZone0);\n    PeriodAxis periodAxis0 = new PeriodAxis(\"q9GCg4\", week0, week0, week0.DEFAULT_TIME_ZONE);\n    dateAxis0.setTickLabelPaint(periodAxis0.DEFAULT_AXIS_LINE_PAINT);\n    periodAxis0.isVisible();\n}",
    "testName" : "test58357"
  },
  "test58358" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test58358() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"6bP8]y~(h{v?\");\n    DateAxis dateAxis0 = new DateAxis(\"6bP8]y~(h{v?\", timeZone0);\n    Date date0 = dateAxis0.getMaximumDate();\n    Week week0 = new Week(date0, timeZone0);\n    PeriodAxis periodAxis0 = new PeriodAxis(\"q9GCg4\", week0, week0, week0.DEFAULT_TIME_ZONE);\n    dateAxis0.setTickLabelPaint(periodAxis0.DEFAULT_AXIS_LINE_PAINT);\n    dateAxis0.isTickMarksVisible();\n}",
    "testName" : "test58358"
  },
  "test0321" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0321() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"Fast_Scatter_Plot\");\n    PeriodAxis periodAxis0 = new PeriodAxis(\"~neErvtv|w<'\");\n    Paint paint0 = periodAxis0.getMinorTickMarkPaint();\n    categoryAxis0.setTickLabelPaint(paint0);\n    periodAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test0321"
  },
  "test36246" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36246() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    boolean boolean0 = categoryAxis3D0.isAxisLineVisible();\n    categoryAxis3D0.isVisible();\n}",
    "testName" : "test36246"
  },
  "test0322" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0322() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"Fast_Scatter_Plot\");\n    PeriodAxis periodAxis0 = new PeriodAxis(\"~neErvtv|w<'\");\n    Paint paint0 = periodAxis0.getMinorTickMarkPaint();\n    categoryAxis0.setTickLabelPaint(paint0);\n    periodAxis0.isAxisLineVisible();\n}",
    "testName" : "test0322"
  },
  "test36245" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36245() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    boolean boolean0 = categoryAxis3D0.isAxisLineVisible();\n    categoryAxis3D0.getLabelAngle();\n}",
    "testName" : "test36245"
  },
  "test59365" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test59365() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    categoryAxis0.setTickLabelFont(categoryAxis0.DEFAULT_AXIS_LABEL_FONT);\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);\n    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);\n    Graphics2D graphics2D0 = bufferedImage0.createGraphics();\n    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();\n    RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;\n    categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);\n    categoryAxis0.getLabelAngle();\n}",
    "testName" : "test59365"
  },
  "test36244" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36244() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    boolean boolean0 = categoryAxis3D0.isAxisLineVisible();\n    categoryAxis3D0.isTickMarksVisible();\n}",
    "testName" : "test36244"
  },
  "test36243" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36243() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    boolean boolean0 = categoryAxis3D0.isAxisLineVisible();\n    categoryAxis3D0.isTickLabelsVisible();\n}",
    "testName" : "test36243"
  },
  "test36242" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36242() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    boolean boolean0 = categoryAxis3D0.isAxisLineVisible();\n    categoryAxis3D0.getTickMarkInsideLength();\n}",
    "testName" : "test36242"
  },
  "test59362" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test59362() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    categoryAxis0.setTickLabelFont(categoryAxis0.DEFAULT_AXIS_LABEL_FONT);\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);\n    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);\n    Graphics2D graphics2D0 = bufferedImage0.createGraphics();\n    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();\n    RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;\n    categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);\n    categoryAxis0.isTickMarksVisible();\n}",
    "testName" : "test59362"
  },
  "test36241" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36241() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    boolean boolean0 = categoryAxis3D0.isAxisLineVisible();\n    categoryAxis3D0.getTickMarkOutsideLength();\n}",
    "testName" : "test36241"
  },
  "test59361" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test59361() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    categoryAxis0.setTickLabelFont(categoryAxis0.DEFAULT_AXIS_LABEL_FONT);\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);\n    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);\n    Graphics2D graphics2D0 = bufferedImage0.createGraphics();\n    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();\n    RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;\n    categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);\n    categoryAxis0.isTickLabelsVisible();\n}",
    "testName" : "test59361"
  },
  "test59364" : {
    "methodSignature" : "public double getFixedDimension()",
    "methodName" : "getFixedDimension",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test59364() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    categoryAxis0.setTickLabelFont(categoryAxis0.DEFAULT_AXIS_LABEL_FONT);\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);\n    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);\n    Graphics2D graphics2D0 = bufferedImage0.createGraphics();\n    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();\n    RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;\n    categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);\n    categoryAxis0.getFixedDimension();\n}",
    "testName" : "test59364"
  },
  "test0320" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0320() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"Fast_Scatter_Plot\");\n    PeriodAxis periodAxis0 = new PeriodAxis(\"~neErvtv|w<'\");\n    Paint paint0 = periodAxis0.getMinorTickMarkPaint();\n    categoryAxis0.setTickLabelPaint(paint0);\n    periodAxis0.getLabelAngle();\n}",
    "testName" : "test0320"
  },
  "test59363" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test59363() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    categoryAxis0.setTickLabelFont(categoryAxis0.DEFAULT_AXIS_LABEL_FONT);\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);\n    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);\n    Graphics2D graphics2D0 = bufferedImage0.createGraphics();\n    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();\n    RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;\n    categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);\n    categoryAxis0.isAxisLineVisible();\n}",
    "testName" : "test59363"
  },
  "test59360" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test59360() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    categoryAxis0.setTickLabelFont(categoryAxis0.DEFAULT_AXIS_LABEL_FONT);\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);\n    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);\n    Graphics2D graphics2D0 = bufferedImage0.createGraphics();\n    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();\n    RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;\n    categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);\n    categoryAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test59360"
  },
  "test46294" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46294() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, \"Null 'stroke' argument.\");\n    float[][] floatArray0 = new float[2][1];\n    FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);\n    PeriodAxis periodAxis0 = new PeriodAxis(\"0m-'*\");\n    JFreeChart jFreeChart0 = new JFreeChart(\"0m-'*\", periodAxis0.DEFAULT_AXIS_LABEL_FONT, fastScatterPlot0, true);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();\n    chartRenderingInfo0.setEntityCollection((EntityCollection) null);\n    jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);\n    cyclicNumberAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test46294"
  },
  "test46293" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46293() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, \"Null 'stroke' argument.\");\n    float[][] floatArray0 = new float[2][1];\n    FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);\n    PeriodAxis periodAxis0 = new PeriodAxis(\"0m-'*\");\n    JFreeChart jFreeChart0 = new JFreeChart(\"0m-'*\", periodAxis0.DEFAULT_AXIS_LABEL_FONT, fastScatterPlot0, true);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();\n    chartRenderingInfo0.setEntityCollection((EntityCollection) null);\n    jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);\n    periodAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test46293"
  },
  "test46290" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46290() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, \"Null 'stroke' argument.\");\n    float[][] floatArray0 = new float[2][1];\n    FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);\n    PeriodAxis periodAxis0 = new PeriodAxis(\"0m-'*\");\n    JFreeChart jFreeChart0 = new JFreeChart(\"0m-'*\", periodAxis0.DEFAULT_AXIS_LABEL_FONT, fastScatterPlot0, true);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();\n    chartRenderingInfo0.setEntityCollection((EntityCollection) null);\n    jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);\n    periodAxis0.getLabelAngle();\n}",
    "testName" : "test46290"
  },
  "test46292" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46292() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, \"Null 'stroke' argument.\");\n    float[][] floatArray0 = new float[2][1];\n    FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);\n    PeriodAxis periodAxis0 = new PeriodAxis(\"0m-'*\");\n    JFreeChart jFreeChart0 = new JFreeChart(\"0m-'*\", periodAxis0.DEFAULT_AXIS_LABEL_FONT, fastScatterPlot0, true);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();\n    chartRenderingInfo0.setEntityCollection((EntityCollection) null);\n    jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);\n    periodAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test46292"
  },
  "test46291" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46291() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, \"Null 'stroke' argument.\");\n    float[][] floatArray0 = new float[2][1];\n    FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);\n    PeriodAxis periodAxis0 = new PeriodAxis(\"0m-'*\");\n    JFreeChart jFreeChart0 = new JFreeChart(\"0m-'*\", periodAxis0.DEFAULT_AXIS_LABEL_FONT, fastScatterPlot0, true);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();\n    chartRenderingInfo0.setEntityCollection((EntityCollection) null);\n    jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);\n    periodAxis0.isTickMarksVisible();\n}",
    "testName" : "test46291"
  },
  "test59359" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test59359() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    categoryAxis0.setTickLabelFont(categoryAxis0.DEFAULT_AXIS_LABEL_FONT);\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);\n    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);\n    Graphics2D graphics2D0 = bufferedImage0.createGraphics();\n    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();\n    RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;\n    categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);\n    categoryAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test59359"
  },
  "test73427" : {
    "methodSignature" : "public String getLabel()",
    "methodName" : "getLabel",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test73427() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    numberAxis3D0.setLabel(\"org.jfree.data.general.DatasetChangeListener\");\n    numberAxis3D0.setLabel(\"?6?y{g>)q`1\");\n    numberAxis3D0.getLabel();\n}",
    "testName" : "test73427"
  },
  "test14100" : {
    "methodSignature" : "public Object clone() throws CloneNotSupportedException",
    "methodName" : "clone",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14100() throws Throwable {\n    ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis(\"\");\n    ExtendedCategoryAxis extendedCategoryAxis1 = (ExtendedCategoryAxis) extendedCategoryAxis0.clone();\n}",
    "testName" : "test14100"
  },
  "test14101" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14101() throws Throwable {\n    ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis(\"\");\n    ExtendedCategoryAxis extendedCategoryAxis1 = (ExtendedCategoryAxis) extendedCategoryAxis0.clone();\n    extendedCategoryAxis1.isVisible();\n}",
    "testName" : "test14101"
  },
  "test0211" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0211() throws Throwable {\n    NumberAxis numberAxis0 = new NumberAxis();\n    CategoryPlot categoryPlot0 = new CategoryPlot();\n    RectangleInsets rectangleInsets0 = categoryPlot0.getInsets();\n    numberAxis0.setTickLabelInsets(rectangleInsets0);\n    numberAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test0211"
  },
  "test60366" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test60366() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"0m-'*\");\n    periodAxis0.isTickLabelsVisible();\n}",
    "testName" : "test60366"
  },
  "test0212" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0212() throws Throwable {\n    NumberAxis numberAxis0 = new NumberAxis();\n    CategoryPlot categoryPlot0 = new CategoryPlot();\n    RectangleInsets rectangleInsets0 = categoryPlot0.getInsets();\n    numberAxis0.setTickLabelInsets(rectangleInsets0);\n    numberAxis0.isAxisLineVisible();\n}",
    "testName" : "test0212"
  },
  "test0213" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0213() throws Throwable {\n    NumberAxis numberAxis0 = new NumberAxis();\n    CategoryPlot categoryPlot0 = new CategoryPlot();\n    RectangleInsets rectangleInsets0 = categoryPlot0.getInsets();\n    numberAxis0.setTickLabelInsets(rectangleInsets0);\n    numberAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test0213"
  },
  "test0214" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0214() throws Throwable {\n    NumberAxis numberAxis0 = new NumberAxis();\n    CategoryPlot categoryPlot0 = new CategoryPlot();\n    RectangleInsets rectangleInsets0 = categoryPlot0.getInsets();\n    numberAxis0.setTickLabelInsets(rectangleInsets0);\n    numberAxis0.isTickLabelsVisible();\n}",
    "testName" : "test0214"
  },
  "test0210" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0210() throws Throwable {\n    NumberAxis numberAxis0 = new NumberAxis();\n    CategoryPlot categoryPlot0 = new CategoryPlot();\n    RectangleInsets rectangleInsets0 = categoryPlot0.getInsets();\n    numberAxis0.setTickLabelInsets(rectangleInsets0);\n    numberAxis0.getLabelAngle();\n}",
    "testName" : "test0210"
  },
  "test49309" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test49309() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();\n    TableOrder tableOrder0 = TableOrder.BY_ROW;\n    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);\n    dateAxis0.removeChangeListener(spiderWebPlot0);\n    dateAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test49309"
  },
  "test49308" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test49308() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();\n    TableOrder tableOrder0 = TableOrder.BY_ROW;\n    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);\n    dateAxis0.removeChangeListener(spiderWebPlot0);\n    dateAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test49308"
  },
  "test49307" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test49307() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();\n    TableOrder tableOrder0 = TableOrder.BY_ROW;\n    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);\n    dateAxis0.removeChangeListener(spiderWebPlot0);\n    dateAxis0.isTickLabelsVisible();\n}",
    "testName" : "test49307"
  },
  "test49306" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test49306() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();\n    TableOrder tableOrder0 = TableOrder.BY_ROW;\n    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);\n    dateAxis0.removeChangeListener(spiderWebPlot0);\n    dateAxis0.isTickMarksVisible();\n}",
    "testName" : "test49306"
  },
  "test49305" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test49305() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();\n    TableOrder tableOrder0 = TableOrder.BY_ROW;\n    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);\n    dateAxis0.removeChangeListener(spiderWebPlot0);\n    dateAxis0.isVisible();\n}",
    "testName" : "test49305"
  },
  "test24157" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test24157() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, \"org.jfree.chart.axis.Axis\");\n    boolean boolean0 = cyclicNumberAxis0.isVisible();\n    cyclicNumberAxis0.isTickLabelsVisible();\n}",
    "testName" : "test24157"
  },
  "test49304" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test49304() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();\n    TableOrder tableOrder0 = TableOrder.BY_ROW;\n    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);\n    dateAxis0.removeChangeListener(spiderWebPlot0);\n    dateAxis0.getLabelAngle();\n}",
    "testName" : "test49304"
  },
  "test60367" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test60367() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"0m-'*\");\n    periodAxis0.setTickLabelsVisible(false);\n    periodAxis0.isTickLabelsVisible();\n}",
    "testName" : "test60367"
  },
  "test46289" : {
    "methodSignature" : "public double getFixedDimension()",
    "methodName" : "getFixedDimension",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46289() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, \"Null 'stroke' argument.\");\n    float[][] floatArray0 = new float[2][1];\n    FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);\n    PeriodAxis periodAxis0 = new PeriodAxis(\"0m-'*\");\n    JFreeChart jFreeChart0 = new JFreeChart(\"0m-'*\", periodAxis0.DEFAULT_AXIS_LABEL_FONT, fastScatterPlot0, true);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();\n    chartRenderingInfo0.setEntityCollection((EntityCollection) null);\n    jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);\n    periodAxis0.getFixedDimension();\n}",
    "testName" : "test46289"
  },
  "test46288" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46288() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, \"Null 'stroke' argument.\");\n    float[][] floatArray0 = new float[2][1];\n    FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);\n    PeriodAxis periodAxis0 = new PeriodAxis(\"0m-'*\");\n    JFreeChart jFreeChart0 = new JFreeChart(\"0m-'*\", periodAxis0.DEFAULT_AXIS_LABEL_FONT, fastScatterPlot0, true);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();\n    chartRenderingInfo0.setEntityCollection((EntityCollection) null);\n    jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);\n    periodAxis0.isAxisLineVisible();\n}",
    "testName" : "test46288"
  },
  "test49310" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test49310() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();\n    TableOrder tableOrder0 = TableOrder.BY_ROW;\n    SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);\n    dateAxis0.removeChangeListener(spiderWebPlot0);\n    dateAxis0.isAxisLineVisible();\n}",
    "testName" : "test49310"
  },
  "test36247" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36247() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    boolean boolean0 = categoryAxis3D0.isAxisLineVisible();\n}",
    "testName" : "test36247"
  },
  "test82480" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test82480() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    cyclicNumberAxis0.setFixedDimension(0.0);\n    cyclicNumberAxis0.isAxisLineVisible();\n}",
    "testName" : "test82480"
  },
  "test24160" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test24160() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, \"org.jfree.chart.axis.Axis\");\n    boolean boolean0 = cyclicNumberAxis0.isVisible();\n    cyclicNumberAxis0.isTickMarksVisible();\n}",
    "testName" : "test24160"
  },
  "test24161" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test24161() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, \"org.jfree.chart.axis.Axis\");\n    boolean boolean0 = cyclicNumberAxis0.isVisible();\n    cyclicNumberAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test24161"
  },
  "test24162" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test24162() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, \"org.jfree.chart.axis.Axis\");\n    boolean boolean0 = cyclicNumberAxis0.isVisible();\n    cyclicNumberAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test24162"
  },
  "test24163" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test24163() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, \"org.jfree.chart.axis.Axis\");\n    boolean boolean0 = cyclicNumberAxis0.isVisible();\n}",
    "testName" : "test24163"
  },
  "test24158" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test24158() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, \"org.jfree.chart.axis.Axis\");\n    boolean boolean0 = cyclicNumberAxis0.isVisible();\n    cyclicNumberAxis0.isAxisLineVisible();\n}",
    "testName" : "test24158"
  },
  "test24159" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test24159() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, \"org.jfree.chart.axis.Axis\");\n    boolean boolean0 = cyclicNumberAxis0.isVisible();\n    cyclicNumberAxis0.getLabelAngle();\n}",
    "testName" : "test24159"
  },
  "test82473" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test82473() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    cyclicNumberAxis0.setFixedDimension(0.0);\n    cyclicNumberAxis0.getLabelAngle();\n}",
    "testName" : "test82473"
  },
  "test82474" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test82474() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    cyclicNumberAxis0.setFixedDimension(0.0);\n    cyclicNumberAxis0.isTickMarksVisible();\n}",
    "testName" : "test82474"
  },
  "test82475" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test82475() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    cyclicNumberAxis0.setFixedDimension(0.0);\n    cyclicNumberAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test82475"
  },
  "test82476" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test82476() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    cyclicNumberAxis0.setFixedDimension(0.0);\n    cyclicNumberAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test82476"
  },
  "test82477" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test82477() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    cyclicNumberAxis0.setFixedDimension(0.0);\n    cyclicNumberAxis0.isTickLabelsVisible();\n}",
    "testName" : "test82477"
  },
  "test82478" : {
    "methodSignature" : "public double getFixedDimension()",
    "methodName" : "getFixedDimension",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test82478() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    cyclicNumberAxis0.setFixedDimension(0.0);\n    cyclicNumberAxis0.getFixedDimension();\n}",
    "testName" : "test82478"
  },
  "test82479" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test82479() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    cyclicNumberAxis0.setFixedDimension(0.0);\n    cyclicNumberAxis0.isVisible();\n}",
    "testName" : "test82479"
  },
  "test50314" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test50314() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"Fast_Scatter_Plot\");\n    CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();\n    categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);\n    categoryAxis0.isTickLabelsVisible();\n}",
    "testName" : "test50314"
  },
  "test50313" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test50313() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"Fast_Scatter_Plot\");\n    CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();\n    categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);\n    categoryAxis0.isVisible();\n}",
    "testName" : "test50313"
  },
  "test50316" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test50316() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"Fast_Scatter_Plot\");\n    CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();\n    categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);\n    categoryAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test50316"
  },
  "test50315" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test50315() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"Fast_Scatter_Plot\");\n    CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();\n    categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);\n    categoryAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test50315"
  },
  "test50317" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test50317() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"Fast_Scatter_Plot\");\n    CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();\n    categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);\n    categoryAxis0.getLabelAngle();\n}",
    "testName" : "test50317"
  },
  "test15102" : {
    "methodSignature" : "protected Rectangle2D getLabelEnclosure(Graphics2D g2, RectangleEdge edge)",
    "methodName" : "getLabelEnclosure",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test15102() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    DateAxis dateAxis0 = new DateAxis(\"|+q|07W5K~ FVX%q\", simpleTimeZone0);\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"\");\n    CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);\n    RectangleEdge rectangleEdge0 = combinedDomainCategoryPlot0.getDomainAxisEdge(0);\n    dateAxis0.getLabelEnclosure((Graphics2D) null, rectangleEdge0);\n}",
    "testName" : "test15102"
  },
  "test50312" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test50312() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"Fast_Scatter_Plot\");\n    CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();\n    categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);\n    categoryAxis0.isAxisLineVisible();\n}",
    "testName" : "test50312"
  },
  "test50311" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test50311() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"Fast_Scatter_Plot\");\n    CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();\n    categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);\n    categoryAxis0.isTickMarksVisible();\n}",
    "testName" : "test50311"
  },
  "test0640" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0640() throws Throwable {\n    Week week0 = new Week();\n    PeriodAxis periodAxis0 = new PeriodAxis(\" 25;eHgg RIKc\", week0, week0);\n    GanttRenderer ganttRenderer0 = new GanttRenderer();\n    periodAxis0.setLabelFont(ganttRenderer0.DEFAULT_VALUE_LABEL_FONT);\n    periodAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test0640"
  },
  "test29194" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test29194() throws Throwable {\n    ZoneInfo zoneInfo0 = (ZoneInfo) RegularTimePeriod.DEFAULT_TIME_ZONE;\n    DateAxis dateAxis0 = new DateAxis(\"sYZwccxsFNxVh!\", zoneInfo0);\n    double double0 = dateAxis0.getFixedDimension();\n    dateAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test29194"
  },
  "test0641" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0641() throws Throwable {\n    Week week0 = new Week();\n    PeriodAxis periodAxis0 = new PeriodAxis(\" 25;eHgg RIKc\", week0, week0);\n    GanttRenderer ganttRenderer0 = new GanttRenderer();\n    periodAxis0.setLabelFont(ganttRenderer0.DEFAULT_VALUE_LABEL_FONT);\n    periodAxis0.isVisible();\n}",
    "testName" : "test0641"
  },
  "test0642" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0642() throws Throwable {\n    Week week0 = new Week();\n    PeriodAxis periodAxis0 = new PeriodAxis(\" 25;eHgg RIKc\", week0, week0);\n    GanttRenderer ganttRenderer0 = new GanttRenderer();\n    periodAxis0.setLabelFont(ganttRenderer0.DEFAULT_VALUE_LABEL_FONT);\n    periodAxis0.isTickMarksVisible();\n}",
    "testName" : "test0642"
  },
  "test0643" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0643() throws Throwable {\n    Week week0 = new Week();\n    PeriodAxis periodAxis0 = new PeriodAxis(\" 25;eHgg RIKc\", week0, week0);\n    GanttRenderer ganttRenderer0 = new GanttRenderer();\n    periodAxis0.setLabelFont(ganttRenderer0.DEFAULT_VALUE_LABEL_FONT);\n    periodAxis0.getLabelAngle();\n}",
    "testName" : "test0643"
  },
  "test29198" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test29198() throws Throwable {\n    ZoneInfo zoneInfo0 = (ZoneInfo) RegularTimePeriod.DEFAULT_TIME_ZONE;\n    DateAxis dateAxis0 = new DateAxis(\"sYZwccxsFNxVh!\", zoneInfo0);\n    double double0 = dateAxis0.getFixedDimension();\n    dateAxis0.getLabelAngle();\n}",
    "testName" : "test29198"
  },
  "test79452" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test79452() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(\"TK`\");\n    categoryAxis3D0.setLabelAngle(0.0F);\n    categoryAxis3D0.getTickMarkInsideLength();\n}",
    "testName" : "test79452"
  },
  "test29197" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test29197() throws Throwable {\n    ZoneInfo zoneInfo0 = (ZoneInfo) RegularTimePeriod.DEFAULT_TIME_ZONE;\n    DateAxis dateAxis0 = new DateAxis(\"sYZwccxsFNxVh!\", zoneInfo0);\n    double double0 = dateAxis0.getFixedDimension();\n    dateAxis0.isTickMarksVisible();\n}",
    "testName" : "test29197"
  },
  "test29196" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test29196() throws Throwable {\n    ZoneInfo zoneInfo0 = (ZoneInfo) RegularTimePeriod.DEFAULT_TIME_ZONE;\n    DateAxis dateAxis0 = new DateAxis(\"sYZwccxsFNxVh!\", zoneInfo0);\n    double double0 = dateAxis0.getFixedDimension();\n    dateAxis0.isVisible();\n}",
    "testName" : "test29196"
  },
  "test79454" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test79454() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(\"TK`\");\n    categoryAxis3D0.setLabelAngle(0.0F);\n    categoryAxis3D0.isAxisLineVisible();\n}",
    "testName" : "test79454"
  },
  "test29195" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test29195() throws Throwable {\n    ZoneInfo zoneInfo0 = (ZoneInfo) RegularTimePeriod.DEFAULT_TIME_ZONE;\n    DateAxis dateAxis0 = new DateAxis(\"sYZwccxsFNxVh!\", zoneInfo0);\n    double double0 = dateAxis0.getFixedDimension();\n    dateAxis0.isTickLabelsVisible();\n}",
    "testName" : "test29195"
  },
  "test79453" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test79453() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(\"TK`\");\n    categoryAxis3D0.setLabelAngle(0.0F);\n    categoryAxis3D0.getLabelAngle();\n}",
    "testName" : "test79453"
  },
  "test29199" : {
    "methodSignature" : "public double getFixedDimension()",
    "methodName" : "getFixedDimension",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test29199() throws Throwable {\n    ZoneInfo zoneInfo0 = (ZoneInfo) RegularTimePeriod.DEFAULT_TIME_ZONE;\n    DateAxis dateAxis0 = new DateAxis(\"sYZwccxsFNxVh!\", zoneInfo0);\n    double double0 = dateAxis0.getFixedDimension();\n}",
    "testName" : "test29199"
  },
  "test20132" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test20132() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, \"[v7\");\n    Font font0 = cyclicNumberAxis0.getTickLabelFont();\n    cyclicNumberAxis0.getLabelAngle();\n}",
    "testName" : "test20132"
  },
  "test20133" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test20133() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, \"[v7\");\n    Font font0 = cyclicNumberAxis0.getTickLabelFont();\n    cyclicNumberAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test20133"
  },
  "test69405" : {
    "methodSignature" : "public void setLabelFont(Font font)",
    "methodName" : "setLabelFont",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test69405() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    categoryAxis0.setLabelFont((Font) null);\n}",
    "testName" : "test69405"
  },
  "test0530" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0530() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);\n    Stroke stroke0 = combinedDomainXYPlot0.getRangeGridlineStroke();\n    cyclicNumberAxis0.setAxisLineStroke(stroke0);\n    cyclicNumberAxis0.isTickMarksVisible();\n}",
    "testName" : "test0530"
  },
  "test33220" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33220() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    Color color0 = (Color) dateAxis0.getLabelPaint();\n    dateAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test33220"
  },
  "test0531" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0531() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);\n    Stroke stroke0 = combinedDomainXYPlot0.getRangeGridlineStroke();\n    cyclicNumberAxis0.setAxisLineStroke(stroke0);\n    cyclicNumberAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test0531"
  },
  "test33221" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33221() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    Color color0 = (Color) dateAxis0.getLabelPaint();\n    dateAxis0.isTickMarksVisible();\n}",
    "testName" : "test33221"
  },
  "test0532" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0532() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);\n    Stroke stroke0 = combinedDomainXYPlot0.getRangeGridlineStroke();\n    cyclicNumberAxis0.setAxisLineStroke(stroke0);\n    cyclicNumberAxis0.getLabelAngle();\n}",
    "testName" : "test0532"
  },
  "test0533" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0533() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);\n    Stroke stroke0 = combinedDomainXYPlot0.getRangeGridlineStroke();\n    cyclicNumberAxis0.setAxisLineStroke(stroke0);\n    cyclicNumberAxis0.isTickLabelsVisible();\n}",
    "testName" : "test0533"
  },
  "test70408" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test70408() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    NumberAxis numberAxis0 = new NumberAxis();\n    numberAxis0.setLabelFont(dateAxis0.DEFAULT_AXIS_LABEL_FONT);\n    numberAxis0.getLabelAngle();\n}",
    "testName" : "test70408"
  },
  "test70407" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test70407() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    NumberAxis numberAxis0 = new NumberAxis();\n    numberAxis0.setLabelFont(dateAxis0.DEFAULT_AXIS_LABEL_FONT);\n    numberAxis0.isVisible();\n}",
    "testName" : "test70407"
  },
  "test70409" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test70409() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    NumberAxis numberAxis0 = new NumberAxis();\n    numberAxis0.setLabelFont(dateAxis0.DEFAULT_AXIS_LABEL_FONT);\n    numberAxis0.isAxisLineVisible();\n}",
    "testName" : "test70409"
  },
  "test0534" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0534() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);\n    Stroke stroke0 = combinedDomainXYPlot0.getRangeGridlineStroke();\n    cyclicNumberAxis0.setAxisLineStroke(stroke0);\n    cyclicNumberAxis0.isVisible();\n}",
    "testName" : "test0534"
  },
  "test0535" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0535() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);\n    Stroke stroke0 = combinedDomainXYPlot0.getRangeGridlineStroke();\n    cyclicNumberAxis0.setAxisLineStroke(stroke0);\n    cyclicNumberAxis0.isAxisLineVisible();\n}",
    "testName" : "test0535"
  },
  "test0536" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0536() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);\n    Stroke stroke0 = combinedDomainXYPlot0.getRangeGridlineStroke();\n    cyclicNumberAxis0.setAxisLineStroke(stroke0);\n    cyclicNumberAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test0536"
  },
  "test66392" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test66392() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, \"Null 'stroke' argument.\");\n    float[][] floatArray0 = new float[2][1];\n    FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);\n    cyclicNumberAxis0.setLabelInsets(fastScatterPlot0.DEFAULT_INSETS);\n    JFreeChart jFreeChart0 = new JFreeChart(\"0m-'*\", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, fastScatterPlot0, true);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();\n    jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);\n    cyclicNumberAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test66392"
  },
  "test66393" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test66393() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, \"Null 'stroke' argument.\");\n    float[][] floatArray0 = new float[2][1];\n    FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);\n    cyclicNumberAxis0.setLabelInsets(fastScatterPlot0.DEFAULT_INSETS);\n    JFreeChart jFreeChart0 = new JFreeChart(\"0m-'*\", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, fastScatterPlot0, true);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();\n    jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);\n    cyclicNumberAxis0.getLabelAngle();\n}",
    "testName" : "test66393"
  },
  "test42284" : {
    "methodSignature" : "public AxisState draw(Graphics2D g2, double cursor, Rectangle2D plotArea, Rectangle2D dataArea, RectangleEdge edge, PlotRenderingInfo plotState)",
    "methodName" : "draw",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test42284() throws Throwable {\n    SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(\"Null 'insets' argument.\");\n    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();\n    RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();\n    PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();\n    subCategoryAxis0.draw((Graphics2D) null, 1.0E-8, rectangle2D_Double0, rectangle2D_Double0, rectangleEdge0, plotRenderingInfo0);\n}",
    "testName" : "test42284"
  },
  "test66396" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test66396() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, \"Null 'stroke' argument.\");\n    float[][] floatArray0 = new float[2][1];\n    FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);\n    cyclicNumberAxis0.setLabelInsets(fastScatterPlot0.DEFAULT_INSETS);\n    JFreeChart jFreeChart0 = new JFreeChart(\"0m-'*\", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, fastScatterPlot0, true);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();\n    jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);\n    cyclicNumberAxis0.isAxisLineVisible();\n}",
    "testName" : "test66396"
  },
  "test33219" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33219() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    Color color0 = (Color) dateAxis0.getLabelPaint();\n    dateAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test33219"
  },
  "test66394" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test66394() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, \"Null 'stroke' argument.\");\n    float[][] floatArray0 = new float[2][1];\n    FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);\n    cyclicNumberAxis0.setLabelInsets(fastScatterPlot0.DEFAULT_INSETS);\n    JFreeChart jFreeChart0 = new JFreeChart(\"0m-'*\", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, fastScatterPlot0, true);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();\n    jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);\n    cyclicNumberAxis0.isTickMarksVisible();\n}",
    "testName" : "test66394"
  },
  "test66395" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test66395() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, \"Null 'stroke' argument.\");\n    float[][] floatArray0 = new float[2][1];\n    FastScatterPlot fastScatterPlot0 = new FastScatterPlot(floatArray0, cyclicNumberAxis0, cyclicNumberAxis0);\n    cyclicNumberAxis0.setLabelInsets(fastScatterPlot0.DEFAULT_INSETS);\n    JFreeChart jFreeChart0 = new JFreeChart(\"0m-'*\", cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, fastScatterPlot0, true);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();\n    jFreeChart0.createBufferedImage(1913, 500, chartRenderingInfo0);\n    cyclicNumberAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test66395"
  },
  "test79456" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test79456() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(\"TK`\");\n    categoryAxis3D0.setLabelAngle(0.0F);\n    categoryAxis3D0.isTickMarksVisible();\n}",
    "testName" : "test79456"
  },
  "test79455" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test79455() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(\"TK`\");\n    categoryAxis3D0.setLabelAngle(0.0F);\n    categoryAxis3D0.isVisible();\n}",
    "testName" : "test79455"
  },
  "test70406" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test70406() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    NumberAxis numberAxis0 = new NumberAxis();\n    numberAxis0.setLabelFont(dateAxis0.DEFAULT_AXIS_LABEL_FONT);\n    numberAxis0.isTickMarksVisible();\n}",
    "testName" : "test70406"
  },
  "test79458" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test79458() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(\"TK`\");\n    categoryAxis3D0.setLabelAngle(0.0F);\n    categoryAxis3D0.getTickMarkOutsideLength();\n}",
    "testName" : "test79458"
  },
  "test79457" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test79457() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(\"TK`\");\n    categoryAxis3D0.setLabelAngle(0.0F);\n    categoryAxis3D0.isTickLabelsVisible();\n}",
    "testName" : "test79457"
  },
  "test0423" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0423() throws Throwable {\n    Hour hour0 = new Hour();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"/>\", hour0, hour0, hour0.DEFAULT_TIME_ZONE);\n    MeterPlot meterPlot0 = new MeterPlot();\n    Font font0 = meterPlot0.getValueFont();\n    periodAxis0.setTickLabelFont(font0);\n    periodAxis0.isTickMarksVisible();\n}",
    "testName" : "test0423"
  },
  "test0428" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0428() throws Throwable {\n    Hour hour0 = new Hour();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"/>\", hour0, hour0, hour0.DEFAULT_TIME_ZONE);\n    MeterPlot meterPlot0 = new MeterPlot();\n    Font font0 = meterPlot0.getValueFont();\n    periodAxis0.setTickLabelFont(font0);\n    periodAxis0.isVisible();\n}",
    "testName" : "test0428"
  },
  "test65387" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test65387() throws Throwable {\n    SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(\"Null 'paint' argument.\");\n    PeriodAxis periodAxis0 = new PeriodAxis(\"L\");\n    periodAxis0.setLabelInsets(subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS);\n    periodAxis0.getLabelAngle();\n}",
    "testName" : "test65387"
  },
  "test0429" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0429() throws Throwable {\n    Hour hour0 = new Hour();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"/>\", hour0, hour0, hour0.DEFAULT_TIME_ZONE);\n    MeterPlot meterPlot0 = new MeterPlot();\n    Font font0 = meterPlot0.getValueFont();\n    periodAxis0.setTickLabelFont(font0);\n    periodAxis0.getLabelAngle();\n}",
    "testName" : "test0429"
  },
  "test65386" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test65386() throws Throwable {\n    SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(\"Null 'paint' argument.\");\n    PeriodAxis periodAxis0 = new PeriodAxis(\"L\");\n    periodAxis0.setLabelInsets(subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS);\n    periodAxis0.isAxisLineVisible();\n}",
    "testName" : "test65386"
  },
  "test65389" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test65389() throws Throwable {\n    SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(\"Null 'paint' argument.\");\n    PeriodAxis periodAxis0 = new PeriodAxis(\"L\");\n    periodAxis0.setLabelInsets(subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS);\n    periodAxis0.isVisible();\n}",
    "testName" : "test65389"
  },
  "test65388" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test65388() throws Throwable {\n    SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(\"Null 'paint' argument.\");\n    PeriodAxis periodAxis0 = new PeriodAxis(\"L\");\n    periodAxis0.setLabelInsets(subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS);\n    subCategoryAxis0.isTickMarksVisible();\n}",
    "testName" : "test65388"
  },
  "test0424" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0424() throws Throwable {\n    Hour hour0 = new Hour();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"/>\", hour0, hour0, hour0.DEFAULT_TIME_ZONE);\n    MeterPlot meterPlot0 = new MeterPlot();\n    Font font0 = meterPlot0.getValueFont();\n    periodAxis0.setTickLabelFont(font0);\n    periodAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test0424"
  },
  "test0425" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0425() throws Throwable {\n    Hour hour0 = new Hour();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"/>\", hour0, hour0, hour0.DEFAULT_TIME_ZONE);\n    MeterPlot meterPlot0 = new MeterPlot();\n    Font font0 = meterPlot0.getValueFont();\n    periodAxis0.setTickLabelFont(font0);\n    periodAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test0425"
  },
  "test0426" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0426() throws Throwable {\n    Hour hour0 = new Hour();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"/>\", hour0, hour0, hour0.DEFAULT_TIME_ZONE);\n    MeterPlot meterPlot0 = new MeterPlot();\n    Font font0 = meterPlot0.getValueFont();\n    periodAxis0.setTickLabelFont(font0);\n    periodAxis0.isTickLabelsVisible();\n}",
    "testName" : "test0426"
  },
  "test0427" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0427() throws Throwable {\n    Hour hour0 = new Hour();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"/>\", hour0, hour0, hour0.DEFAULT_TIME_ZONE);\n    MeterPlot meterPlot0 = new MeterPlot();\n    Font font0 = meterPlot0.getValueFont();\n    periodAxis0.setTickLabelFont(font0);\n    periodAxis0.isAxisLineVisible();\n}",
    "testName" : "test0427"
  },
  "test65390" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test65390() throws Throwable {\n    SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(\"Null 'paint' argument.\");\n    PeriodAxis periodAxis0 = new PeriodAxis(\"L\");\n    periodAxis0.setLabelInsets(subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS);\n    periodAxis0.isTickMarksVisible();\n}",
    "testName" : "test65390"
  },
  "test43285" : {
    "methodSignature" : "public AxisState draw(Graphics2D g2, double cursor, Rectangle2D plotArea, Rectangle2D dataArea, RectangleEdge edge, PlotRenderingInfo plotState)",
    "methodName" : "draw",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test43285() throws Throwable {\n    SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(\"Null 'insets' argument.\");\n    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();\n    RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();\n    PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();\n    subCategoryAxis0.draw((Graphics2D) null, 1.0E-8, rectangle2D_Double0, rectangle2D_Double0, rectangleEdge0, plotRenderingInfo0);\n}",
    "testName" : "test43285"
  },
  "test65391" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test65391() throws Throwable {\n    SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(\"Null 'paint' argument.\");\n    PeriodAxis periodAxis0 = new PeriodAxis(\"L\");\n    periodAxis0.setLabelInsets(subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS);\n    periodAxis0.isTickLabelsVisible();\n}",
    "testName" : "test65391"
  },
  "test33224" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33224() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    Color color0 = (Color) dateAxis0.getLabelPaint();\n    dateAxis0.isAxisLineVisible();\n}",
    "testName" : "test33224"
  },
  "test33225" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33225() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    Color color0 = (Color) dateAxis0.getLabelPaint();\n    dateAxis0.isTickLabelsVisible();\n}",
    "testName" : "test33225"
  },
  "test33222" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33222() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    Color color0 = (Color) dateAxis0.getLabelPaint();\n    dateAxis0.getLabelAngle();\n}",
    "testName" : "test33222"
  },
  "test33223" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33223() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    Color color0 = (Color) dateAxis0.getLabelPaint();\n    dateAxis0.isVisible();\n}",
    "testName" : "test33223"
  },
  "test56342" : {
    "methodSignature" : "public void setTickLabelInsets(RectangleInsets insets)",
    "methodName" : "setTickLabelInsets",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test56342() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D(\"\");\n    numberAxis3D0.setTickLabelInsets((RectangleInsets) null);\n}",
    "testName" : "test56342"
  },
  "test0318" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0318() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"Fast_Scatter_Plot\");\n    PeriodAxis periodAxis0 = new PeriodAxis(\"~neErvtv|w<'\");\n    Paint paint0 = periodAxis0.getMinorTickMarkPaint();\n    categoryAxis0.setTickLabelPaint(paint0);\n    categoryAxis0.isTickMarksVisible();\n}",
    "testName" : "test0318"
  },
  "test0319" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0319() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"Fast_Scatter_Plot\");\n    PeriodAxis periodAxis0 = new PeriodAxis(\"~neErvtv|w<'\");\n    Paint paint0 = periodAxis0.getMinorTickMarkPaint();\n    categoryAxis0.setTickLabelPaint(paint0);\n    periodAxis0.isTickMarksVisible();\n}",
    "testName" : "test0319"
  },
  "test21139" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test21139() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2354.619742125702));\n    double double0 = cyclicNumberAxis0.getLabelAngle();\n    cyclicNumberAxis0.isAxisLineVisible();\n}",
    "testName" : "test21139"
  },
  "test21138" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test21138() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2354.619742125702));\n    double double0 = cyclicNumberAxis0.getLabelAngle();\n    cyclicNumberAxis0.isTickMarksVisible();\n}",
    "testName" : "test21138"
  },
  "test21137" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test21137() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2354.619742125702));\n    double double0 = cyclicNumberAxis0.getLabelAngle();\n    cyclicNumberAxis0.isVisible();\n}",
    "testName" : "test21137"
  },
  "test21136" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test21136() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2354.619742125702));\n    double double0 = cyclicNumberAxis0.getLabelAngle();\n}",
    "testName" : "test21136"
  },
  "test0315" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0315() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"Fast_Scatter_Plot\");\n    PeriodAxis periodAxis0 = new PeriodAxis(\"~neErvtv|w<'\");\n    Paint paint0 = periodAxis0.getMinorTickMarkPaint();\n    categoryAxis0.setTickLabelPaint(paint0);\n    periodAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test0315"
  },
  "test21135" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test21135() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2354.619742125702));\n    double double0 = cyclicNumberAxis0.getLabelAngle();\n    cyclicNumberAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test21135"
  },
  "test0316" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0316() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"Fast_Scatter_Plot\");\n    PeriodAxis periodAxis0 = new PeriodAxis(\"~neErvtv|w<'\");\n    Paint paint0 = periodAxis0.getMinorTickMarkPaint();\n    categoryAxis0.setTickLabelPaint(paint0);\n    periodAxis0.isTickLabelsVisible();\n}",
    "testName" : "test0316"
  },
  "test0317" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0317() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"Fast_Scatter_Plot\");\n    PeriodAxis periodAxis0 = new PeriodAxis(\"~neErvtv|w<'\");\n    Paint paint0 = periodAxis0.getMinorTickMarkPaint();\n    categoryAxis0.setTickLabelPaint(paint0);\n    periodAxis0.isVisible();\n}",
    "testName" : "test0317"
  },
  "test21141" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test21141() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2354.619742125702));\n    double double0 = cyclicNumberAxis0.getLabelAngle();\n    cyclicNumberAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test21141"
  },
  "test21140" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test21140() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2354.619742125702));\n    double double0 = cyclicNumberAxis0.getLabelAngle();\n    cyclicNumberAxis0.isTickLabelsVisible();\n}",
    "testName" : "test21140"
  },
  "test0960" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0960() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);\n    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);\n    Graphics2D graphics2D0 = bufferedImage0.createGraphics();\n    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();\n    RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;\n    AxisSpace axisSpace0 = categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);\n    categoryAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test0960"
  },
  "test0961" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0961() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);\n    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);\n    Graphics2D graphics2D0 = bufferedImage0.createGraphics();\n    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();\n    RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;\n    AxisSpace axisSpace0 = categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);\n    categoryAxis0.isTickLabelsVisible();\n}",
    "testName" : "test0961"
  },
  "test57343" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test57343() throws Throwable {\n    String[] stringArray0 = new String[6];\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    SymbolAxis symbolAxis0 = new SymbolAxis(\"TK`\", stringArray0);\n    categoryAxis3D0.setTickLabelInsets(symbolAxis0.DEFAULT_TICK_LABEL_INSETS);\n    symbolAxis0.getLabelAngle();\n}",
    "testName" : "test57343"
  },
  "test0962" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0962() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);\n    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);\n    Graphics2D graphics2D0 = bufferedImage0.createGraphics();\n    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();\n    RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;\n    AxisSpace axisSpace0 = categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);\n    categoryAxis0.isTickMarksVisible();\n}",
    "testName" : "test0962"
  },
  "test57344" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test57344() throws Throwable {\n    String[] stringArray0 = new String[6];\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    SymbolAxis symbolAxis0 = new SymbolAxis(\"TK`\", stringArray0);\n    categoryAxis3D0.setTickLabelInsets(symbolAxis0.DEFAULT_TICK_LABEL_INSETS);\n    symbolAxis0.isTickMarksVisible();\n}",
    "testName" : "test57344"
  },
  "test0963" : {
    "methodSignature" : "public double getRight()",
    "methodName" : "getRight",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0963() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);\n    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);\n    Graphics2D graphics2D0 = bufferedImage0.createGraphics();\n    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();\n    RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;\n    AxisSpace axisSpace0 = categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);\n    axisSpace0.getRight();\n}",
    "testName" : "test0963"
  },
  "test0964" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0964() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);\n    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);\n    Graphics2D graphics2D0 = bufferedImage0.createGraphics();\n    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();\n    RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;\n    AxisSpace axisSpace0 = categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);\n    categoryAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test0964"
  },
  "test0965" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0965() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);\n    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);\n    Graphics2D graphics2D0 = bufferedImage0.createGraphics();\n    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();\n    RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;\n    AxisSpace axisSpace0 = categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);\n    categoryAxis0.getLabelAngle();\n}",
    "testName" : "test0965"
  },
  "test67397" : {
    "methodSignature" : "public void setLabelPaint(Paint paint)",
    "methodName" : "setLabelPaint",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test67397() throws Throwable {\n    ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis(\"q )Rl|!:5\");\n    extendedCategoryAxis0.setLabelPaint((Paint) null);\n}",
    "testName" : "test67397"
  },
  "test34232" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34232() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);\n    float float0 = logarithmicAxis0.getTickMarkInsideLength();\n    logarithmicAxis0.isTickMarksVisible();\n}",
    "testName" : "test34232"
  },
  "test34233" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34233() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);\n    float float0 = logarithmicAxis0.getTickMarkInsideLength();\n    logarithmicAxis0.getLabelAngle();\n}",
    "testName" : "test34233"
  },
  "test0851" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0851() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"vURU#qE7Fy.y\");\n    dateAxis0.configure();\n    dateAxis0.isTickMarksVisible();\n}",
    "testName" : "test0851"
  },
  "test34230" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34230() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);\n    float float0 = logarithmicAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test34230"
  },
  "test0852" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0852() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"vURU#qE7Fy.y\");\n    dateAxis0.configure();\n    dateAxis0.getLabelAngle();\n}",
    "testName" : "test0852"
  },
  "test34231" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34231() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);\n    float float0 = logarithmicAxis0.getTickMarkInsideLength();\n    logarithmicAxis0.isVisible();\n}",
    "testName" : "test34231"
  },
  "test71419" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test71419() throws Throwable {\n    String[] stringArray0 = new String[6];\n    SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);\n    symbolAxis0.setLabel((String) null);\n    symbolAxis0.isVisible();\n}",
    "testName" : "test71419"
  },
  "test0857" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0857() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"vURU#qE7Fy.y\");\n    dateAxis0.configure();\n    dateAxis0.isTickLabelsVisible();\n}",
    "testName" : "test0857"
  },
  "test0853" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0853() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"vURU#qE7Fy.y\");\n    dateAxis0.configure();\n    dateAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test0853"
  },
  "test0854" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0854() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"vURU#qE7Fy.y\");\n    dateAxis0.configure();\n    dateAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test0854"
  },
  "test0855" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0855() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"vURU#qE7Fy.y\");\n    dateAxis0.configure();\n    dateAxis0.isVisible();\n}",
    "testName" : "test0855"
  },
  "test0856" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0856() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"vURU#qE7Fy.y\");\n    dateAxis0.configure();\n    dateAxis0.isAxisLineVisible();\n}",
    "testName" : "test0856"
  },
  "test34229" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34229() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);\n    float float0 = logarithmicAxis0.getTickMarkInsideLength();\n    logarithmicAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test34229"
  },
  "test71416" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test71416() throws Throwable {\n    String[] stringArray0 = new String[6];\n    SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);\n    symbolAxis0.setLabel((String) null);\n    symbolAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test71416"
  },
  "test71415" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test71415() throws Throwable {\n    String[] stringArray0 = new String[6];\n    SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);\n    symbolAxis0.setLabel((String) null);\n    symbolAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test71415"
  },
  "test34227" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34227() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);\n    float float0 = logarithmicAxis0.getTickMarkInsideLength();\n    logarithmicAxis0.isAxisLineVisible();\n}",
    "testName" : "test34227"
  },
  "test71418" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test71418() throws Throwable {\n    String[] stringArray0 = new String[6];\n    SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);\n    symbolAxis0.setLabel((String) null);\n    symbolAxis0.isTickMarksVisible();\n}",
    "testName" : "test71418"
  },
  "test34228" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34228() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);\n    float float0 = logarithmicAxis0.getTickMarkInsideLength();\n    logarithmicAxis0.isTickLabelsVisible();\n}",
    "testName" : "test34228"
  },
  "test71417" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test71417() throws Throwable {\n    String[] stringArray0 = new String[6];\n    SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);\n    symbolAxis0.setLabel((String) null);\n    symbolAxis0.isTickLabelsVisible();\n}",
    "testName" : "test71417"
  },
  "test71414" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test71414() throws Throwable {\n    String[] stringArray0 = new String[6];\n    SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);\n    symbolAxis0.setLabel((String) null);\n    symbolAxis0.isAxisLineVisible();\n}",
    "testName" : "test71414"
  },
  "test71413" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test71413() throws Throwable {\n    String[] stringArray0 = new String[6];\n    SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);\n    symbolAxis0.setLabel((String) null);\n    symbolAxis0.getLabelAngle();\n}",
    "testName" : "test71413"
  },
  "test80463" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test80463() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    numberAxis3D0.setLabelToolTip(\"?6?y{g>)q`1\");\n    numberAxis3D0.isVisible();\n}",
    "testName" : "test80463"
  },
  "test80462" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test80462() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    numberAxis3D0.setLabelToolTip(\"?6?y{g>)q`1\");\n    numberAxis3D0.isTickLabelsVisible();\n}",
    "testName" : "test80462"
  },
  "test80461" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test80461() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    numberAxis3D0.setLabelToolTip(\"?6?y{g>)q`1\");\n    numberAxis3D0.getTickMarkInsideLength();\n}",
    "testName" : "test80461"
  },
  "test80460" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test80460() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    numberAxis3D0.setLabelToolTip(\"?6?y{g>)q`1\");\n    numberAxis3D0.isTickMarksVisible();\n}",
    "testName" : "test80460"
  },
  "test0747" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0747() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"\");\n    AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(categoryAxis0);\n    categoryAxis0.notifyListeners(axisChangeEvent0);\n    categoryAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test0747"
  },
  "test0748" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0748() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"\");\n    AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(categoryAxis0);\n    categoryAxis0.notifyListeners(axisChangeEvent0);\n    categoryAxis0.getLabelAngle();\n}",
    "testName" : "test0748"
  },
  "test0749" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0749() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"\");\n    AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(categoryAxis0);\n    categoryAxis0.notifyListeners(axisChangeEvent0);\n    categoryAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test0749"
  },
  "test80465" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test80465() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    numberAxis3D0.setLabelToolTip(\"?6?y{g>)q`1\");\n    numberAxis3D0.getLabelAngle();\n}",
    "testName" : "test80465"
  },
  "test80464" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test80464() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    numberAxis3D0.setLabelToolTip(\"?6?y{g>)q`1\");\n    numberAxis3D0.isAxisLineVisible();\n}",
    "testName" : "test80464"
  },
  "test0744" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0744() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"\");\n    AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(categoryAxis0);\n    categoryAxis0.notifyListeners(axisChangeEvent0);\n    categoryAxis0.isTickMarksVisible();\n}",
    "testName" : "test0744"
  },
  "test0745" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0745() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"\");\n    AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(categoryAxis0);\n    categoryAxis0.notifyListeners(axisChangeEvent0);\n    categoryAxis0.isVisible();\n}",
    "testName" : "test0745"
  },
  "test0746" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0746() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"\");\n    AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(categoryAxis0);\n    categoryAxis0.notifyListeners(axisChangeEvent0);\n    categoryAxis0.isTickLabelsVisible();\n}",
    "testName" : "test0746"
  },
  "test22144" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22144() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"6bP8]y~(h{v?\");\n    DateAxis dateAxis0 = new DateAxis(\"6bP8]y~(h{v?\", timeZone0);\n    dateAxis0.getAxisLineStroke();\n    dateAxis0.getLabelAngle();\n}",
    "testName" : "test22144"
  },
  "test22143" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22143() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"6bP8]y~(h{v?\");\n    DateAxis dateAxis0 = new DateAxis(\"6bP8]y~(h{v?\", timeZone0);\n    dateAxis0.getAxisLineStroke();\n    dateAxis0.isAxisLineVisible();\n}",
    "testName" : "test22143"
  },
  "test22142" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22142() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"6bP8]y~(h{v?\");\n    DateAxis dateAxis0 = new DateAxis(\"6bP8]y~(h{v?\", timeZone0);\n    dateAxis0.getAxisLineStroke();\n    dateAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test22142"
  },
  "test70411" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test70411() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    NumberAxis numberAxis0 = new NumberAxis();\n    numberAxis0.setLabelFont(dateAxis0.DEFAULT_AXIS_LABEL_FONT);\n    numberAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test70411"
  },
  "test70410" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test70410() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    NumberAxis numberAxis0 = new NumberAxis();\n    numberAxis0.setLabelFont(dateAxis0.DEFAULT_AXIS_LABEL_FONT);\n    numberAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test70410"
  },
  "test70412" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test70412() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    NumberAxis numberAxis0 = new NumberAxis();\n    numberAxis0.setLabelFont(dateAxis0.DEFAULT_AXIS_LABEL_FONT);\n    numberAxis0.isTickLabelsVisible();\n}",
    "testName" : "test70412"
  },
  "test0750" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0750() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis(\"\");\n    AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(categoryAxis0);\n    categoryAxis0.notifyListeners(axisChangeEvent0);\n    categoryAxis0.isAxisLineVisible();\n}",
    "testName" : "test0750"
  },
  "test57350" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test57350() throws Throwable {\n    String[] stringArray0 = new String[6];\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    SymbolAxis symbolAxis0 = new SymbolAxis(\"TK`\", stringArray0);\n    categoryAxis3D0.setTickLabelInsets(symbolAxis0.DEFAULT_TICK_LABEL_INSETS);\n    symbolAxis0.isAxisLineVisible();\n}",
    "testName" : "test57350"
  },
  "test0637" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0637() throws Throwable {\n    Week week0 = new Week();\n    PeriodAxis periodAxis0 = new PeriodAxis(\" 25;eHgg RIKc\", week0, week0);\n    GanttRenderer ganttRenderer0 = new GanttRenderer();\n    periodAxis0.setLabelFont(ganttRenderer0.DEFAULT_VALUE_LABEL_FONT);\n    periodAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test0637"
  },
  "test0638" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0638() throws Throwable {\n    Week week0 = new Week();\n    PeriodAxis periodAxis0 = new PeriodAxis(\" 25;eHgg RIKc\", week0, week0);\n    GanttRenderer ganttRenderer0 = new GanttRenderer();\n    periodAxis0.setLabelFont(ganttRenderer0.DEFAULT_VALUE_LABEL_FONT);\n    periodAxis0.isTickLabelsVisible();\n}",
    "testName" : "test0638"
  },
  "test0639" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0639() throws Throwable {\n    Week week0 = new Week();\n    PeriodAxis periodAxis0 = new PeriodAxis(\" 25;eHgg RIKc\", week0, week0);\n    GanttRenderer ganttRenderer0 = new GanttRenderer();\n    periodAxis0.setLabelFont(ganttRenderer0.DEFAULT_VALUE_LABEL_FONT);\n    periodAxis0.isAxisLineVisible();\n}",
    "testName" : "test0639"
  },
  "test22148" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22148() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"6bP8]y~(h{v?\");\n    DateAxis dateAxis0 = new DateAxis(\"6bP8]y~(h{v?\", timeZone0);\n    dateAxis0.getAxisLineStroke();\n    dateAxis0.isTickLabelsVisible();\n}",
    "testName" : "test22148"
  },
  "test22147" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22147() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"6bP8]y~(h{v?\");\n    DateAxis dateAxis0 = new DateAxis(\"6bP8]y~(h{v?\", timeZone0);\n    dateAxis0.getAxisLineStroke();\n    dateAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test22147"
  },
  "test80459" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test80459() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    numberAxis3D0.setLabelToolTip(\"?6?y{g>)q`1\");\n    numberAxis3D0.getTickMarkOutsideLength();\n}",
    "testName" : "test80459"
  },
  "test22146" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22146() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"6bP8]y~(h{v?\");\n    DateAxis dateAxis0 = new DateAxis(\"6bP8]y~(h{v?\", timeZone0);\n    dateAxis0.getAxisLineStroke();\n    dateAxis0.isTickMarksVisible();\n}",
    "testName" : "test22146"
  },
  "test22145" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22145() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"6bP8]y~(h{v?\");\n    DateAxis dateAxis0 = new DateAxis(\"6bP8]y~(h{v?\", timeZone0);\n    dateAxis0.getAxisLineStroke();\n    dateAxis0.isVisible();\n}",
    "testName" : "test22145"
  },
  "test44286" : {
    "methodSignature" : "public AxisState draw(Graphics2D g2, double cursor, Rectangle2D plotArea, Rectangle2D dataArea, RectangleEdge edge, PlotRenderingInfo plotState)",
    "methodName" : "draw",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44286() throws Throwable {\n    SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(\"Null 'insets' argument.\");\n    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();\n    RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();\n    PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();\n    subCategoryAxis0.draw((Graphics2D) null, 1.0E-8, rectangle2D_Double0, rectangle2D_Double0, rectangleEdge0, plotRenderingInfo0);\n}",
    "testName" : "test44286"
  },
  "test57349" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test57349() throws Throwable {\n    String[] stringArray0 = new String[6];\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    SymbolAxis symbolAxis0 = new SymbolAxis(\"TK`\", stringArray0);\n    categoryAxis3D0.setTickLabelInsets(symbolAxis0.DEFAULT_TICK_LABEL_INSETS);\n    symbolAxis0.isTickLabelsVisible();\n}",
    "testName" : "test57349"
  },
  "test57345" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test57345() throws Throwable {\n    String[] stringArray0 = new String[6];\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    SymbolAxis symbolAxis0 = new SymbolAxis(\"TK`\", stringArray0);\n    categoryAxis3D0.setTickLabelInsets(symbolAxis0.DEFAULT_TICK_LABEL_INSETS);\n    symbolAxis0.isVisible();\n}",
    "testName" : "test57345"
  },
  "test57346" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test57346() throws Throwable {\n    String[] stringArray0 = new String[6];\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    SymbolAxis symbolAxis0 = new SymbolAxis(\"TK`\", stringArray0);\n    categoryAxis3D0.setTickLabelInsets(symbolAxis0.DEFAULT_TICK_LABEL_INSETS);\n    categoryAxis3D0.isTickMarksVisible();\n}",
    "testName" : "test57346"
  },
  "test57347" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test57347() throws Throwable {\n    String[] stringArray0 = new String[6];\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    SymbolAxis symbolAxis0 = new SymbolAxis(\"TK`\", stringArray0);\n    categoryAxis3D0.setTickLabelInsets(symbolAxis0.DEFAULT_TICK_LABEL_INSETS);\n    symbolAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test57347"
  },
  "test57348" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test57348() throws Throwable {\n    String[] stringArray0 = new String[6];\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    SymbolAxis symbolAxis0 = new SymbolAxis(\"TK`\", stringArray0);\n    categoryAxis3D0.setTickLabelInsets(symbolAxis0.DEFAULT_TICK_LABEL_INSETS);\n    symbolAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test57348"
  },
  "test27179" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27179() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    RectangleInsets rectangleInsets0 = logarithmicAxis0.getTickLabelInsets();\n    logarithmicAxis0.isTickMarksVisible();\n}",
    "testName" : "test27179"
  },
  "test40272" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test40272() throws Throwable {\n    ThermometerPlot thermometerPlot0 = new ThermometerPlot();\n    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();\n    boolean boolean0 = valueAxis0.isTickMarksVisible();\n    valueAxis0.getLabelAngle();\n}",
    "testName" : "test40272"
  },
  "test40271" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test40271() throws Throwable {\n    ThermometerPlot thermometerPlot0 = new ThermometerPlot();\n    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();\n    boolean boolean0 = valueAxis0.isTickMarksVisible();\n    valueAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test40271"
  },
  "test40270" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test40270() throws Throwable {\n    ThermometerPlot thermometerPlot0 = new ThermometerPlot();\n    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();\n    boolean boolean0 = valueAxis0.isTickMarksVisible();\n    valueAxis0.isAxisLineVisible();\n}",
    "testName" : "test40270"
  },
  "test27180" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27180() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    RectangleInsets rectangleInsets0 = logarithmicAxis0.getTickLabelInsets();\n    logarithmicAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test27180"
  },
  "test27181" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27181() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    RectangleInsets rectangleInsets0 = logarithmicAxis0.getTickLabelInsets();\n    logarithmicAxis0.isTickLabelsVisible();\n}",
    "testName" : "test27181"
  },
  "test27184" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27184() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    RectangleInsets rectangleInsets0 = logarithmicAxis0.getTickLabelInsets();\n    logarithmicAxis0.isVisible();\n}",
    "testName" : "test27184"
  },
  "test27185" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27185() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    RectangleInsets rectangleInsets0 = logarithmicAxis0.getTickLabelInsets();\n    logarithmicAxis0.getLabelAngle();\n}",
    "testName" : "test27185"
  },
  "test27182" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27182() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    RectangleInsets rectangleInsets0 = logarithmicAxis0.getTickLabelInsets();\n    logarithmicAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test27182"
  },
  "test77440" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test77440() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"\");\n    periodAxis0.getLabelToolTip();\n    periodAxis0.isTickMarksVisible();\n}",
    "testName" : "test77440"
  },
  "test27183" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27183() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    RectangleInsets rectangleInsets0 = logarithmicAxis0.getTickLabelInsets();\n    logarithmicAxis0.isAxisLineVisible();\n}",
    "testName" : "test27183"
  },
  "test77441" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test77441() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"\");\n    periodAxis0.getLabelToolTip();\n    periodAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test77441"
  },
  "test27186" : {
    "methodSignature" : "public double getLeft()",
    "methodName" : "getLeft",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27186() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    RectangleInsets rectangleInsets0 = logarithmicAxis0.getTickLabelInsets();\n    rectangleInsets0.getLeft();\n}",
    "testName" : "test27186"
  },
  "test77439" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test77439() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"\");\n    periodAxis0.getLabelToolTip();\n    periodAxis0.isAxisLineVisible();\n}",
    "testName" : "test77439"
  },
  "test53327" : {
    "methodSignature" : "public void setTickMarkStroke(Stroke stroke)",
    "methodName" : "setTickMarkStroke",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test53327() throws Throwable {\n    Week week0 = new Week();\n    PeriodAxis periodAxis0 = new PeriodAxis(\" 25;eHgg RIKc\", week0, week0);\n    periodAxis0.setTickMarkStroke((Stroke) null);\n}",
    "testName" : "test53327"
  },
  "test18117" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test18117() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 309.828, \"g0iK\");\n    cyclicNumberAxis0.isTickMarksVisible();\n}",
    "testName" : "test18117"
  },
  "test18118" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test18118() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 309.828, \"g0iK\");\n    cyclicNumberAxis0.setTickMarksVisible(false);\n    boolean boolean0 = cyclicNumberAxis0.isTickMarksVisible();\n}",
    "testName" : "test18118"
  },
  "test77438" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test77438() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"\");\n    periodAxis0.getLabelToolTip();\n    periodAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test77438"
  },
  "test54330" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test54330() throws Throwable {\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    categoryAxis3D0.setTickMarkStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);\n    categoryAxis3D0.getLabelAngle();\n}",
    "testName" : "test54330"
  },
  "test54329" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test54329() throws Throwable {\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    categoryAxis3D0.setTickMarkStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);\n    categoryAxis3D0.getTickMarkOutsideLength();\n}",
    "testName" : "test54329"
  },
  "test54328" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test54328() throws Throwable {\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    categoryAxis3D0.setTickMarkStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);\n    categoryAxis3D0.getTickMarkInsideLength();\n}",
    "testName" : "test54328"
  },
  "test31209" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test31209() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    categoryAxis0.isAxisLineVisible();\n}",
    "testName" : "test31209"
  },
  "test76437" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test76437() throws Throwable {\n    SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(\"r\");\n    subCategoryAxis0.setTickMarkInsideLength(2539.738F);\n    subCategoryAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test76437"
  },
  "test40276" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test40276() throws Throwable {\n    ThermometerPlot thermometerPlot0 = new ThermometerPlot();\n    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();\n    boolean boolean0 = valueAxis0.isTickMarksVisible();\n}",
    "testName" : "test40276"
  },
  "test40275" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test40275() throws Throwable {\n    ThermometerPlot thermometerPlot0 = new ThermometerPlot();\n    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();\n    boolean boolean0 = valueAxis0.isTickMarksVisible();\n    valueAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test40275"
  },
  "test0958" : {
    "methodSignature" : "public double getFixedDimension()",
    "methodName" : "getFixedDimension",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0958() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);\n    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);\n    Graphics2D graphics2D0 = bufferedImage0.createGraphics();\n    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();\n    RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;\n    AxisSpace axisSpace0 = categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);\n    categoryAxis0.getFixedDimension();\n}",
    "testName" : "test0958"
  },
  "test40274" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test40274() throws Throwable {\n    ThermometerPlot thermometerPlot0 = new ThermometerPlot();\n    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();\n    boolean boolean0 = valueAxis0.isTickMarksVisible();\n    valueAxis0.isTickLabelsVisible();\n}",
    "testName" : "test40274"
  },
  "test0959" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0959() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);\n    ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);\n    BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 397, 10, chartRenderingInfo0);\n    Graphics2D graphics2D0 = bufferedImage0.createGraphics();\n    Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();\n    RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;\n    AxisSpace axisSpace0 = categoryAxis0.reserveSpace(graphics2D0, combinedRangeXYPlot0, rectangle2D_Double0, rectangleEdge0, (AxisSpace) null);\n    categoryAxis0.isAxisLineVisible();\n}",
    "testName" : "test0959"
  },
  "test40273" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test40273() throws Throwable {\n    ThermometerPlot thermometerPlot0 = new ThermometerPlot();\n    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();\n    boolean boolean0 = valueAxis0.isTickMarksVisible();\n    valueAxis0.isVisible();\n}",
    "testName" : "test40273"
  },
  "test63376" : {
    "methodSignature" : "public void setAxisLinePaint(Paint paint)",
    "methodName" : "setAxisLinePaint",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test63376() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"6bP8]y~(h{v?\");\n    DateAxis dateAxis0 = new DateAxis(\"6bP8]y~(h{v?\", timeZone0);\n    dateAxis0.setAxisLinePaint((Paint) null);\n}",
    "testName" : "test63376"
  },
  "test31210" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test31210() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis();\n    categoryAxis0.setAxisLineVisible(false);\n    categoryAxis0.isAxisLineVisible();\n}",
    "testName" : "test31210"
  },
  "test28189" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test28189() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);\n    logarithmicAxis0.getTickMarkStroke();\n    logarithmicAxis0.getLabelAngle();\n}",
    "testName" : "test28189"
  },
  "test41277" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test41277() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    boolean boolean0 = numberAxis3D0.equals(cyclicNumberAxis0);\n    cyclicNumberAxis0.isVisible();\n}",
    "testName" : "test41277"
  },
  "test28187" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test28187() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);\n    logarithmicAxis0.getTickMarkStroke();\n    logarithmicAxis0.isTickMarksVisible();\n}",
    "testName" : "test28187"
  },
  "test28188" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test28188() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);\n    logarithmicAxis0.getTickMarkStroke();\n    logarithmicAxis0.isVisible();\n}",
    "testName" : "test28188"
  },
  "test41279" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test41279() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    boolean boolean0 = numberAxis3D0.equals(cyclicNumberAxis0);\n}",
    "testName" : "test41279"
  },
  "test41278" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test41278() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    boolean boolean0 = numberAxis3D0.equals(cyclicNumberAxis0);\n    cyclicNumberAxis0.getLabelAngle();\n}",
    "testName" : "test41278"
  },
  "test41280" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test41280() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    boolean boolean0 = numberAxis3D0.equals(cyclicNumberAxis0);\n    cyclicNumberAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test41280"
  },
  "test41283" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test41283() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    boolean boolean0 = numberAxis3D0.equals(cyclicNumberAxis0);\n    cyclicNumberAxis0.isTickLabelsVisible();\n}",
    "testName" : "test41283"
  },
  "test41282" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test41282() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    boolean boolean0 = numberAxis3D0.equals(cyclicNumberAxis0);\n    cyclicNumberAxis0.isTickMarksVisible();\n}",
    "testName" : "test41282"
  },
  "test41281" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test41281() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);\n    boolean boolean0 = numberAxis3D0.equals(cyclicNumberAxis0);\n    cyclicNumberAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test41281"
  },
  "test19119" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test19119() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2679.4453444254);\n    Color color0 = (Color) cyclicNumberAxis0.getAxisLinePaint();\n    cyclicNumberAxis0.isVisible();\n}",
    "testName" : "test19119"
  },
  "test28192" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test28192() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);\n    logarithmicAxis0.getTickMarkStroke();\n    logarithmicAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test28192"
  },
  "test28193" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test28193() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);\n    logarithmicAxis0.getTickMarkStroke();\n    logarithmicAxis0.isTickLabelsVisible();\n}",
    "testName" : "test28193"
  },
  "test28190" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test28190() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);\n    logarithmicAxis0.getTickMarkStroke();\n    logarithmicAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test28190"
  },
  "test28191" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test28191() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);\n    logarithmicAxis0.getTickMarkStroke();\n    logarithmicAxis0.isAxisLineVisible();\n}",
    "testName" : "test28191"
  },
  "test78451" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test78451() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"x>eJX?N9S%_X>\");\n    dateAxis0.getLabelURL();\n    dateAxis0.isAxisLineVisible();\n}",
    "testName" : "test78451"
  },
  "test78450" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test78450() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"x>eJX?N9S%_X>\");\n    dateAxis0.getLabelURL();\n    dateAxis0.isTickLabelsVisible();\n}",
    "testName" : "test78450"
  },
  "test68402" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test68402() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    SystemColor systemColor0 = SystemColor.menu;\n    logarithmicAxis0.setLabelPaint(systemColor0);\n    logarithmicAxis0.isAxisLineVisible();\n}",
    "testName" : "test68402"
  },
  "test68403" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test68403() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    SystemColor systemColor0 = SystemColor.menu;\n    logarithmicAxis0.setLabelPaint(systemColor0);\n    logarithmicAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test68403"
  },
  "test68400" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test68400() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    SystemColor systemColor0 = SystemColor.menu;\n    logarithmicAxis0.setLabelPaint(systemColor0);\n    logarithmicAxis0.getLabelAngle();\n}",
    "testName" : "test68400"
  },
  "test68401" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test68401() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    SystemColor systemColor0 = SystemColor.menu;\n    logarithmicAxis0.setLabelPaint(systemColor0);\n    logarithmicAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test68401"
  },
  "test68404" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test68404() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    SystemColor systemColor0 = SystemColor.menu;\n    logarithmicAxis0.setLabelPaint(systemColor0);\n    logarithmicAxis0.isTickLabelsVisible();\n}",
    "testName" : "test68404"
  },
  "test19120" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test19120() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2679.4453444254);\n    Color color0 = (Color) cyclicNumberAxis0.getAxisLinePaint();\n    cyclicNumberAxis0.isAxisLineVisible();\n}",
    "testName" : "test19120"
  },
  "test19121" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test19121() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2679.4453444254);\n    Color color0 = (Color) cyclicNumberAxis0.getAxisLinePaint();\n    cyclicNumberAxis0.getLabelAngle();\n}",
    "testName" : "test19121"
  },
  "test65385" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test65385() throws Throwable {\n    SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(\"Null 'paint' argument.\");\n    PeriodAxis periodAxis0 = new PeriodAxis(\"L\");\n    periodAxis0.setLabelInsets(subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS);\n    periodAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test65385"
  },
  "test65384" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test65384() throws Throwable {\n    SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(\"Null 'paint' argument.\");\n    PeriodAxis periodAxis0 = new PeriodAxis(\"L\");\n    periodAxis0.setLabelInsets(subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS);\n    periodAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test65384"
  },
  "test54334" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test54334() throws Throwable {\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    categoryAxis3D0.setTickMarkStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);\n    categoryAxis3D0.isTickLabelsVisible();\n}",
    "testName" : "test54334"
  },
  "test54333" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test54333() throws Throwable {\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    categoryAxis3D0.setTickMarkStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);\n    categoryAxis3D0.isVisible();\n}",
    "testName" : "test54333"
  },
  "test54332" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test54332() throws Throwable {\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    categoryAxis3D0.setTickMarkStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);\n    categoryAxis3D0.isTickMarksVisible();\n}",
    "testName" : "test54332"
  },
  "test78446" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test78446() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"x>eJX?N9S%_X>\");\n    dateAxis0.getLabelURL();\n    dateAxis0.isTickMarksVisible();\n}",
    "testName" : "test78446"
  },
  "test54331" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test54331() throws Throwable {\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    categoryAxis3D0.setTickMarkStroke(combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE);\n    categoryAxis3D0.isAxisLineVisible();\n}",
    "testName" : "test54331"
  },
  "test78445" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test78445() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"x>eJX?N9S%_X>\");\n    dateAxis0.getLabelURL();\n    dateAxis0.getLabelAngle();\n}",
    "testName" : "test78445"
  },
  "test19123" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test19123() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2679.4453444254);\n    Color color0 = (Color) cyclicNumberAxis0.getAxisLinePaint();\n    cyclicNumberAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test19123"
  },
  "test78448" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test78448() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"x>eJX?N9S%_X>\");\n    dateAxis0.getLabelURL();\n    dateAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test78448"
  },
  "test19124" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test19124() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2679.4453444254);\n    Color color0 = (Color) cyclicNumberAxis0.getAxisLinePaint();\n    cyclicNumberAxis0.isTickMarksVisible();\n}",
    "testName" : "test19124"
  },
  "test78447" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test78447() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"x>eJX?N9S%_X>\");\n    dateAxis0.getLabelURL();\n    dateAxis0.isVisible();\n}",
    "testName" : "test78447"
  },
  "test19125" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test19125() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2679.4453444254);\n    Color color0 = (Color) cyclicNumberAxis0.getAxisLinePaint();\n    cyclicNumberAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test19125"
  },
  "test19126" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test19126() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2679.4453444254);\n    Color color0 = (Color) cyclicNumberAxis0.getAxisLinePaint();\n    cyclicNumberAxis0.isTickLabelsVisible();\n}",
    "testName" : "test19126"
  },
  "test78449" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test78449() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"x>eJX?N9S%_X>\");\n    dateAxis0.getLabelURL();\n    dateAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test78449"
  },
  "test55341" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test55341() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(\"TK`\");\n    categoryAxis3D0.setTickMarksVisible(false);\n    categoryAxis3D0.isTickMarksVisible();\n}",
    "testName" : "test55341"
  },
  "test55340" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test55340() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(\"TK`\");\n    categoryAxis3D0.setTickMarksVisible(false);\n    categoryAxis3D0.isTickLabelsVisible();\n}",
    "testName" : "test55340"
  },
  "test64377" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test64377() throws Throwable {\n    Week week0 = new Week();\n    PeriodAxis periodAxis0 = new PeriodAxis(\" 25;eHgg RIKc\", week0, week0);\n    GanttRenderer ganttRenderer0 = new GanttRenderer();\n    Paint paint0 = ganttRenderer0.getIncompletePaint();\n    periodAxis0.setAxisLinePaint(paint0);\n    periodAxis0.isTickLabelsVisible();\n}",
    "testName" : "test64377"
  },
  "test64379" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test64379() throws Throwable {\n    Week week0 = new Week();\n    PeriodAxis periodAxis0 = new PeriodAxis(\" 25;eHgg RIKc\", week0, week0);\n    GanttRenderer ganttRenderer0 = new GanttRenderer();\n    Paint paint0 = ganttRenderer0.getIncompletePaint();\n    periodAxis0.setAxisLinePaint(paint0);\n    periodAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test64379"
  },
  "test64378" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test64378() throws Throwable {\n    Week week0 = new Week();\n    PeriodAxis periodAxis0 = new PeriodAxis(\" 25;eHgg RIKc\", week0, week0);\n    GanttRenderer ganttRenderer0 = new GanttRenderer();\n    Paint paint0 = ganttRenderer0.getIncompletePaint();\n    periodAxis0.setAxisLinePaint(paint0);\n    periodAxis0.isAxisLineVisible();\n}",
    "testName" : "test64378"
  },
  "test64380" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test64380() throws Throwable {\n    Week week0 = new Week();\n    PeriodAxis periodAxis0 = new PeriodAxis(\" 25;eHgg RIKc\", week0, week0);\n    GanttRenderer ganttRenderer0 = new GanttRenderer();\n    Paint paint0 = ganttRenderer0.getIncompletePaint();\n    periodAxis0.setAxisLinePaint(paint0);\n    periodAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test64380"
  },
  "test64382" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test64382() throws Throwable {\n    Week week0 = new Week();\n    PeriodAxis periodAxis0 = new PeriodAxis(\" 25;eHgg RIKc\", week0, week0);\n    GanttRenderer ganttRenderer0 = new GanttRenderer();\n    Paint paint0 = ganttRenderer0.getIncompletePaint();\n    periodAxis0.setAxisLinePaint(paint0);\n    periodAxis0.isTickMarksVisible();\n}",
    "testName" : "test64382"
  },
  "test32218" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test32218() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    RectangleInsets rectangleInsets0 = dateAxis0.getLabelInsets();\n    dateAxis0.isTickMarksVisible();\n}",
    "testName" : "test32218"
  },
  "test64381" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test64381() throws Throwable {\n    Week week0 = new Week();\n    PeriodAxis periodAxis0 = new PeriodAxis(\" 25;eHgg RIKc\", week0, week0);\n    GanttRenderer ganttRenderer0 = new GanttRenderer();\n    Paint paint0 = ganttRenderer0.getIncompletePaint();\n    periodAxis0.setAxisLinePaint(paint0);\n    periodAxis0.getLabelAngle();\n}",
    "testName" : "test64381"
  },
  "test64383" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test64383() throws Throwable {\n    Week week0 = new Week();\n    PeriodAxis periodAxis0 = new PeriodAxis(\" 25;eHgg RIKc\", week0, week0);\n    GanttRenderer ganttRenderer0 = new GanttRenderer();\n    Paint paint0 = ganttRenderer0.getIncompletePaint();\n    periodAxis0.setAxisLinePaint(paint0);\n    periodAxis0.isVisible();\n}",
    "testName" : "test64383"
  },
  "test32215" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test32215() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    RectangleInsets rectangleInsets0 = dateAxis0.getLabelInsets();\n    dateAxis0.isTickLabelsVisible();\n}",
    "testName" : "test32215"
  },
  "test55335" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test55335() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(\"TK`\");\n    categoryAxis3D0.setTickMarksVisible(false);\n    categoryAxis3D0.getTickMarkInsideLength();\n}",
    "testName" : "test55335"
  },
  "test77442" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test77442() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"\");\n    periodAxis0.getLabelToolTip();\n    periodAxis0.isTickLabelsVisible();\n}",
    "testName" : "test77442"
  },
  "test32214" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test32214() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    RectangleInsets rectangleInsets0 = dateAxis0.getLabelInsets();\n    dateAxis0.isAxisLineVisible();\n}",
    "testName" : "test32214"
  },
  "test77443" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test77443() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"\");\n    periodAxis0.getLabelToolTip();\n    periodAxis0.isVisible();\n}",
    "testName" : "test77443"
  },
  "test32217" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test32217() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    RectangleInsets rectangleInsets0 = dateAxis0.getLabelInsets();\n    dateAxis0.isVisible();\n}",
    "testName" : "test32217"
  },
  "test77444" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test77444() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"\");\n    periodAxis0.getLabelToolTip();\n    periodAxis0.getLabelAngle();\n}",
    "testName" : "test77444"
  },
  "test32216" : {
    "methodSignature" : "public double getTop()",
    "methodName" : "getTop",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test32216() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    RectangleInsets rectangleInsets0 = dateAxis0.getLabelInsets();\n    rectangleInsets0.getTop();\n}",
    "testName" : "test32216"
  },
  "test32211" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test32211() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    RectangleInsets rectangleInsets0 = dateAxis0.getLabelInsets();\n    dateAxis0.getLabelAngle();\n}",
    "testName" : "test32211"
  },
  "test55339" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test55339() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(\"TK`\");\n    categoryAxis3D0.setTickMarksVisible(false);\n    categoryAxis3D0.isAxisLineVisible();\n}",
    "testName" : "test55339"
  },
  "test55338" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test55338() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(\"TK`\");\n    categoryAxis3D0.setTickMarksVisible(false);\n    categoryAxis3D0.isVisible();\n}",
    "testName" : "test55338"
  },
  "test32213" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test32213() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    RectangleInsets rectangleInsets0 = dateAxis0.getLabelInsets();\n    dateAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test32213"
  },
  "test55337" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test55337() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(\"TK`\");\n    categoryAxis3D0.setTickMarksVisible(false);\n    categoryAxis3D0.getTickMarkOutsideLength();\n}",
    "testName" : "test55337"
  },
  "test32212" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test32212() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    RectangleInsets rectangleInsets0 = dateAxis0.getLabelInsets();\n    dateAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test32212"
  },
  "test55336" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test55336() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(\"TK`\");\n    categoryAxis3D0.setTickMarksVisible(false);\n    categoryAxis3D0.getLabelAngle();\n}",
    "testName" : "test55336"
  },
  "test20129" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test20129() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, \"[v7\");\n    Font font0 = cyclicNumberAxis0.getTickLabelFont();\n    cyclicNumberAxis0.isAxisLineVisible();\n}",
    "testName" : "test20129"
  },
  "test20127" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test20127() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, \"[v7\");\n    Font font0 = cyclicNumberAxis0.getTickLabelFont();\n    cyclicNumberAxis0.isVisible();\n}",
    "testName" : "test20127"
  },
  "test20128" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test20128() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, \"[v7\");\n    Font font0 = cyclicNumberAxis0.getTickLabelFont();\n    cyclicNumberAxis0.isTickLabelsVisible();\n}",
    "testName" : "test20128"
  },
  "test20130" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test20130() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, \"[v7\");\n    Font font0 = cyclicNumberAxis0.getTickLabelFont();\n    cyclicNumberAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test20130"
  },
  "test20131" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test20131() throws Throwable {\n    CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, \"[v7\");\n    Font font0 = cyclicNumberAxis0.getTickLabelFont();\n    cyclicNumberAxis0.isTickMarksVisible();\n}",
    "testName" : "test20131"
  },
  "test1179" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1179() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis((String) null);\n    RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;\n    dateAxis0.getLabelEnclosure((Graphics2D) null, rectangleEdge0);\n    dateAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test1179"
  },
  "test1175" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1175() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis((String) null);\n    RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;\n    dateAxis0.getLabelEnclosure((Graphics2D) null, rectangleEdge0);\n    dateAxis0.getLabelAngle();\n}",
    "testName" : "test1175"
  },
  "test1176" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1176() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis((String) null);\n    RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;\n    dateAxis0.getLabelEnclosure((Graphics2D) null, rectangleEdge0);\n    dateAxis0.isVisible();\n}",
    "testName" : "test1176"
  },
  "test1177" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1177() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis((String) null);\n    RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;\n    dateAxis0.getLabelEnclosure((Graphics2D) null, rectangleEdge0);\n    dateAxis0.isAxisLineVisible();\n}",
    "testName" : "test1177"
  },
  "test1178" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1178() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis((String) null);\n    RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;\n    dateAxis0.getLabelEnclosure((Graphics2D) null, rectangleEdge0);\n    dateAxis0.isTickLabelsVisible();\n}",
    "testName" : "test1178"
  },
  "test61369" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test61369() throws Throwable {\n    Year year0 = new Year();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"SansSerif\", year0, year0, year0.DEFAULT_TIME_ZONE);\n    periodAxis0.setTickLabelsVisible(true);\n    periodAxis0.isVisible();\n}",
    "testName" : "test61369"
  },
  "test61368" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test61368() throws Throwable {\n    Year year0 = new Year();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"SansSerif\", year0, year0, year0.DEFAULT_TIME_ZONE);\n    periodAxis0.isTickLabelsVisible();\n}",
    "testName" : "test61368"
  },
  "test51318" : {
    "methodSignature" : "public void setTickMarkPaint(Paint paint)",
    "methodName" : "setTickMarkPaint",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test51318() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D(\"7(+/%G<\");\n    numberAxis3D0.setTickMarkPaint((Paint) null);\n}",
    "testName" : "test51318"
  },
  "test61370" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test61370() throws Throwable {\n    Year year0 = new Year();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"SansSerif\", year0, year0, year0.DEFAULT_TIME_ZONE);\n    periodAxis0.setTickLabelsVisible(true);\n    periodAxis0.isAxisLineVisible();\n}",
    "testName" : "test61370"
  },
  "test1173" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1173() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis((String) null);\n    RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;\n    dateAxis0.getLabelEnclosure((Graphics2D) null, rectangleEdge0);\n    dateAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test1173"
  },
  "test1174" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1174() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis((String) null);\n    RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;\n    dateAxis0.getLabelEnclosure((Graphics2D) null, rectangleEdge0);\n    dateAxis0.isTickMarksVisible();\n}",
    "testName" : "test1174"
  },
  "test1069" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1069() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    boolean boolean0 = numberAxis3D0.isAxisLineVisible();\n    numberAxis3D0.isVisible();\n}",
    "testName" : "test1069"
  },
  "test37248" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test37248() throws Throwable {\n    Hour hour0 = new Hour();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"/>\", hour0, hour0, hour0.DEFAULT_TIME_ZONE);\n    PolarPlot polarPlot0 = new PolarPlot((XYDataset) null, periodAxis0, (PolarItemRenderer) null);\n    periodAxis0.setPlot(polarPlot0);\n    periodAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test37248"
  },
  "test37249" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test37249() throws Throwable {\n    Hour hour0 = new Hour();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"/>\", hour0, hour0, hour0.DEFAULT_TIME_ZONE);\n    PolarPlot polarPlot0 = new PolarPlot((XYDataset) null, periodAxis0, (PolarItemRenderer) null);\n    periodAxis0.setPlot(polarPlot0);\n    periodAxis0.getLabelAngle();\n}",
    "testName" : "test37249"
  },
  "test61374" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test61374() throws Throwable {\n    Year year0 = new Year();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"SansSerif\", year0, year0, year0.DEFAULT_TIME_ZONE);\n    periodAxis0.setTickLabelsVisible(true);\n    periodAxis0.getLabelAngle();\n}",
    "testName" : "test61374"
  },
  "test1066" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1066() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    boolean boolean0 = numberAxis3D0.isAxisLineVisible();\n    numberAxis3D0.getLabelAngle();\n}",
    "testName" : "test1066"
  },
  "test61373" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test61373() throws Throwable {\n    Year year0 = new Year();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"SansSerif\", year0, year0, year0.DEFAULT_TIME_ZONE);\n    periodAxis0.setTickLabelsVisible(true);\n    periodAxis0.isTickMarksVisible();\n}",
    "testName" : "test61373"
  },
  "test1067" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1067() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    boolean boolean0 = numberAxis3D0.isAxisLineVisible();\n    numberAxis3D0.isTickMarksVisible();\n}",
    "testName" : "test1067"
  },
  "test61372" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test61372() throws Throwable {\n    Year year0 = new Year();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"SansSerif\", year0, year0, year0.DEFAULT_TIME_ZONE);\n    periodAxis0.setTickLabelsVisible(true);\n    periodAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test61372"
  },
  "test1068" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1068() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    boolean boolean0 = numberAxis3D0.isAxisLineVisible();\n}",
    "testName" : "test1068"
  },
  "test61371" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test61371() throws Throwable {\n    Year year0 = new Year();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"SansSerif\", year0, year0, year0.DEFAULT_TIME_ZONE);\n    periodAxis0.setTickLabelsVisible(true);\n    periodAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test61371"
  },
  "test25165" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test25165() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"HorizontalAlignment.LEFT\");\n    periodAxis0.getPlot();\n    periodAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test25165"
  },
  "test25164" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test25164() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"HorizontalAlignment.LEFT\");\n    periodAxis0.getPlot();\n    periodAxis0.isAxisLineVisible();\n}",
    "testName" : "test25164"
  },
  "test25167" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test25167() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"HorizontalAlignment.LEFT\");\n    periodAxis0.getPlot();\n    periodAxis0.isVisible();\n}",
    "testName" : "test25167"
  },
  "test25166" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test25166() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"HorizontalAlignment.LEFT\");\n    periodAxis0.getPlot();\n    periodAxis0.isTickLabelsVisible();\n}",
    "testName" : "test25166"
  },
  "test25169" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test25169() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"HorizontalAlignment.LEFT\");\n    periodAxis0.getPlot();\n    periodAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test25169"
  },
  "test25168" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test25168() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"HorizontalAlignment.LEFT\");\n    periodAxis0.getPlot();\n    periodAxis0.isTickMarksVisible();\n}",
    "testName" : "test25168"
  },
  "test37250" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test37250() throws Throwable {\n    Hour hour0 = new Hour();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"/>\", hour0, hour0, hour0.DEFAULT_TIME_ZONE);\n    PolarPlot polarPlot0 = new PolarPlot((XYDataset) null, periodAxis0, (PolarItemRenderer) null);\n    periodAxis0.setPlot(polarPlot0);\n    periodAxis0.isTickMarksVisible();\n}",
    "testName" : "test37250"
  },
  "test37251" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test37251() throws Throwable {\n    Hour hour0 = new Hour();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"/>\", hour0, hour0, hour0.DEFAULT_TIME_ZONE);\n    PolarPlot polarPlot0 = new PolarPlot((XYDataset) null, periodAxis0, (PolarItemRenderer) null);\n    periodAxis0.setPlot(polarPlot0);\n    periodAxis0.isVisible();\n}",
    "testName" : "test37251"
  },
  "test37252" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test37252() throws Throwable {\n    Hour hour0 = new Hour();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"/>\", hour0, hour0, hour0.DEFAULT_TIME_ZONE);\n    PolarPlot polarPlot0 = new PolarPlot((XYDataset) null, periodAxis0, (PolarItemRenderer) null);\n    periodAxis0.setPlot(polarPlot0);\n    periodAxis0.isTickLabelsVisible();\n}",
    "testName" : "test37252"
  },
  "test37253" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test37253() throws Throwable {\n    Hour hour0 = new Hour();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"/>\", hour0, hour0, hour0.DEFAULT_TIME_ZONE);\n    PolarPlot polarPlot0 = new PolarPlot((XYDataset) null, periodAxis0, (PolarItemRenderer) null);\n    periodAxis0.setPlot(polarPlot0);\n    periodAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test37253"
  },
  "test37254" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test37254() throws Throwable {\n    Hour hour0 = new Hour();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"/>\", hour0, hour0, hour0.DEFAULT_TIME_ZONE);\n    PolarPlot polarPlot0 = new PolarPlot((XYDataset) null, periodAxis0, (PolarItemRenderer) null);\n    periodAxis0.setPlot(polarPlot0);\n    periodAxis0.isAxisLineVisible();\n}",
    "testName" : "test37254"
  },
  "test25170" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test25170() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"HorizontalAlignment.LEFT\");\n    periodAxis0.getPlot();\n    periodAxis0.getLabelAngle();\n}",
    "testName" : "test25170"
  },
  "test006" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test006() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();\n    Color color0 = defaultTreeCellRenderer0.getBackgroundSelectionColor();\n    categoryAxis3D0.setTickMarkPaint(color0);\n    categoryAxis3D0.isTickLabelsVisible();\n}",
    "testName" : "test006"
  },
  "test48299" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test48299() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    HistogramDataset histogramDataset0 = new HistogramDataset();\n    int[] intArray0 = new int[3];\n    SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(histogramDataset0, intArray0);\n    boolean boolean0 = logarithmicAxis0.hasListener(subSeriesDataset0);\n    logarithmicAxis0.isAxisLineVisible();\n}",
    "testName" : "test48299"
  },
  "test004" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test004() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();\n    Color color0 = defaultTreeCellRenderer0.getBackgroundSelectionColor();\n    categoryAxis3D0.setTickMarkPaint(color0);\n    categoryAxis3D0.isTickMarksVisible();\n}",
    "testName" : "test004"
  },
  "test48297" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test48297() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    HistogramDataset histogramDataset0 = new HistogramDataset();\n    int[] intArray0 = new int[3];\n    SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(histogramDataset0, intArray0);\n    boolean boolean0 = logarithmicAxis0.hasListener(subSeriesDataset0);\n    logarithmicAxis0.isTickLabelsVisible();\n}",
    "testName" : "test48297"
  },
  "test005" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test005() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();\n    Color color0 = defaultTreeCellRenderer0.getBackgroundSelectionColor();\n    categoryAxis3D0.setTickMarkPaint(color0);\n    categoryAxis3D0.getTickMarkInsideLength();\n}",
    "testName" : "test005"
  },
  "test48298" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test48298() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    HistogramDataset histogramDataset0 = new HistogramDataset();\n    int[] intArray0 = new int[3];\n    SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(histogramDataset0, intArray0);\n    boolean boolean0 = logarithmicAxis0.hasListener(subSeriesDataset0);\n    logarithmicAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test48298"
  },
  "test002" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test002() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();\n    Color color0 = defaultTreeCellRenderer0.getBackgroundSelectionColor();\n    categoryAxis3D0.setTickMarkPaint(color0);\n    categoryAxis3D0.isVisible();\n}",
    "testName" : "test002"
  },
  "test003" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test003() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();\n    Color color0 = defaultTreeCellRenderer0.getBackgroundSelectionColor();\n    categoryAxis3D0.setTickMarkPaint(color0);\n    categoryAxis3D0.getLabelAngle();\n}",
    "testName" : "test003"
  },
  "test48296" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test48296() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"r9i `5'939m{}T0\");\n    HistogramDataset histogramDataset0 = new HistogramDataset();\n    int[] intArray0 = new int[3];\n    SubSeriesDataset subSeriesDataset0 = new SubSeriesDataset(histogramDataset0, intArray0);\n    boolean boolean0 = logarithmicAxis0.hasListener(subSeriesDataset0);\n    logarithmicAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test48296"
  },
  "test1072" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1072() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    boolean boolean0 = numberAxis3D0.isAxisLineVisible();\n    numberAxis3D0.getTickMarkOutsideLength();\n}",
    "testName" : "test1072"
  },
  "test38255" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test38255() throws Throwable {\n    NumberAxis numberAxis0 = new NumberAxis(\"\");\n    boolean boolean0 = numberAxis0.isTickLabelsVisible();\n    numberAxis0.getLabelAngle();\n}",
    "testName" : "test38255"
  },
  "test16105" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16105() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);\n    dateAxis0.addChangeListener(piePlot3D0);\n    dateAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test16105"
  },
  "test38256" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test38256() throws Throwable {\n    NumberAxis numberAxis0 = new NumberAxis(\"\");\n    boolean boolean0 = numberAxis0.isTickLabelsVisible();\n}",
    "testName" : "test38256"
  },
  "test16104" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16104() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);\n    dateAxis0.addChangeListener(piePlot3D0);\n    dateAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test16104"
  },
  "test38257" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test38257() throws Throwable {\n    NumberAxis numberAxis0 = new NumberAxis(\"\");\n    boolean boolean0 = numberAxis0.isTickLabelsVisible();\n    numberAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test38257"
  },
  "test1070" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1070() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    boolean boolean0 = numberAxis3D0.isAxisLineVisible();\n    numberAxis3D0.isTickLabelsVisible();\n}",
    "testName" : "test1070"
  },
  "test16103" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16103() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);\n    dateAxis0.addChangeListener(piePlot3D0);\n    dateAxis0.getLabelAngle();\n}",
    "testName" : "test16103"
  },
  "test38258" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test38258() throws Throwable {\n    NumberAxis numberAxis0 = new NumberAxis(\"\");\n    boolean boolean0 = numberAxis0.isTickLabelsVisible();\n    numberAxis0.isAxisLineVisible();\n}",
    "testName" : "test38258"
  },
  "test1071" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1071() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    boolean boolean0 = numberAxis3D0.isAxisLineVisible();\n    numberAxis3D0.getTickMarkInsideLength();\n}",
    "testName" : "test1071"
  },
  "test38259" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test38259() throws Throwable {\n    NumberAxis numberAxis0 = new NumberAxis(\"\");\n    boolean boolean0 = numberAxis0.isTickLabelsVisible();\n    numberAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test38259"
  },
  "test16109" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16109() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);\n    dateAxis0.addChangeListener(piePlot3D0);\n    dateAxis0.isTickMarksVisible();\n}",
    "testName" : "test16109"
  },
  "test16108" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16108() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);\n    dateAxis0.addChangeListener(piePlot3D0);\n    dateAxis0.isVisible();\n}",
    "testName" : "test16108"
  },
  "test16107" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16107() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);\n    dateAxis0.addChangeListener(piePlot3D0);\n    dateAxis0.isAxisLineVisible();\n}",
    "testName" : "test16107"
  },
  "test16106" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16106() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);\n    dateAxis0.addChangeListener(piePlot3D0);\n    dateAxis0.isTickLabelsVisible();\n}",
    "testName" : "test16106"
  },
  "test000" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();\n    Color color0 = defaultTreeCellRenderer0.getBackgroundSelectionColor();\n    categoryAxis3D0.setTickMarkPaint(color0);\n    categoryAxis3D0.getTickMarkOutsideLength();\n}",
    "testName" : "test000"
  },
  "test001" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test001() throws Throwable {\n    CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();\n    DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();\n    Color color0 = defaultTreeCellRenderer0.getBackgroundSelectionColor();\n    categoryAxis3D0.setTickMarkPaint(color0);\n    categoryAxis3D0.isAxisLineVisible();\n}",
    "testName" : "test001"
  },
  "test74429" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test74429() throws Throwable {\n    Quarter quarter0 = new Quarter();\n    PeriodAxis periodAxis0 = new PeriodAxis((String) null, quarter0, quarter0);\n    periodAxis0.setVisible(false);\n    periodAxis0.isVisible();\n}",
    "testName" : "test74429"
  },
  "test74428" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test74428() throws Throwable {\n    Quarter quarter0 = new Quarter();\n    PeriodAxis periodAxis0 = new PeriodAxis((String) null, quarter0, quarter0);\n    periodAxis0.isVisible();\n}",
    "testName" : "test74428"
  },
  "test1498" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1498() throws Throwable {\n    ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis(\"\");\n    ExtendedCategoryAxis extendedCategoryAxis1 = (ExtendedCategoryAxis) extendedCategoryAxis0.clone();\n    extendedCategoryAxis1.isAxisLineVisible();\n}",
    "testName" : "test1498"
  },
  "test1499" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1499() throws Throwable {\n    ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis(\"\");\n    ExtendedCategoryAxis extendedCategoryAxis1 = (ExtendedCategoryAxis) extendedCategoryAxis0.clone();\n    extendedCategoryAxis1.getLabelAngle();\n}",
    "testName" : "test1499"
  },
  "test1494" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1494() throws Throwable {\n    ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis(\"\");\n    ExtendedCategoryAxis extendedCategoryAxis1 = (ExtendedCategoryAxis) extendedCategoryAxis0.clone();\n    extendedCategoryAxis1.getTickMarkOutsideLength();\n}",
    "testName" : "test1494"
  },
  "test1495" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1495() throws Throwable {\n    ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis(\"\");\n    ExtendedCategoryAxis extendedCategoryAxis1 = (ExtendedCategoryAxis) extendedCategoryAxis0.clone();\n    extendedCategoryAxis1.getTickMarkInsideLength();\n}",
    "testName" : "test1495"
  },
  "test1496" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1496() throws Throwable {\n    ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis(\"\");\n    ExtendedCategoryAxis extendedCategoryAxis1 = (ExtendedCategoryAxis) extendedCategoryAxis0.clone();\n    extendedCategoryAxis1.isTickLabelsVisible();\n}",
    "testName" : "test1496"
  },
  "test1497" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1497() throws Throwable {\n    ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis(\"\");\n    ExtendedCategoryAxis extendedCategoryAxis1 = (ExtendedCategoryAxis) extendedCategoryAxis0.clone();\n    extendedCategoryAxis1.isTickMarksVisible();\n}",
    "testName" : "test1497"
  },
  "test62375" : {
    "methodSignature" : "public void setAxisLineStroke(Stroke stroke)",
    "methodName" : "setAxisLineStroke",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test62375() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"org.jfree.chart.axis.Axis\");\n    periodAxis0.setAxisLineStroke((Stroke) null);\n}",
    "testName" : "test62375"
  },
  "test028" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test028() throws Throwable {\n    NumberAxis numberAxis0 = new NumberAxis();\n    CategoryPlot categoryPlot0 = new CategoryPlot();\n    RectangleInsets rectangleInsets0 = categoryPlot0.getInsets();\n    numberAxis0.setTickLabelInsets(rectangleInsets0);\n    numberAxis0.isTickMarksVisible();\n}",
    "testName" : "test028"
  },
  "test52326" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test52326() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"?6?y{g>)q`1\");\n    periodAxis0.setTickMarkStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);\n    periodAxis0.isVisible();\n}",
    "testName" : "test52326"
  },
  "test029" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test029() throws Throwable {\n    NumberAxis numberAxis0 = new NumberAxis();\n    CategoryPlot categoryPlot0 = new CategoryPlot();\n    RectangleInsets rectangleInsets0 = categoryPlot0.getInsets();\n    numberAxis0.setTickLabelInsets(rectangleInsets0);\n    numberAxis0.isVisible();\n}",
    "testName" : "test029"
  },
  "test52320" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test52320() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"?6?y{g>)q`1\");\n    periodAxis0.setTickMarkStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);\n    periodAxis0.isTickLabelsVisible();\n}",
    "testName" : "test52320"
  },
  "test52321" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test52321() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"?6?y{g>)q`1\");\n    periodAxis0.setTickMarkStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);\n    periodAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test52321"
  },
  "test52324" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test52324() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"?6?y{g>)q`1\");\n    periodAxis0.setTickMarkStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);\n    periodAxis0.isTickMarksVisible();\n}",
    "testName" : "test52324"
  },
  "test52325" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test52325() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"?6?y{g>)q`1\");\n    periodAxis0.setTickMarkStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);\n    periodAxis0.getLabelAngle();\n}",
    "testName" : "test52325"
  },
  "test52322" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test52322() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"?6?y{g>)q`1\");\n    periodAxis0.setTickMarkStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);\n    periodAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test52322"
  },
  "test52323" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test52323() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"?6?y{g>)q`1\");\n    periodAxis0.setTickMarkStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);\n    numberAxis3D0.isAxisLineVisible();\n}",
    "testName" : "test52323"
  },
  "test1388" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1388() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"0m-'*\");\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    periodAxis0.equals(pipedInputStream0);\n    periodAxis0.isAxisLineVisible();\n}",
    "testName" : "test1388"
  },
  "test1389" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1389() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"0m-'*\");\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    periodAxis0.equals(pipedInputStream0);\n    periodAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test1389"
  },
  "test26171" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test26171() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    Color color0 = (Color) dateAxis0.getTickLabelPaint();\n    dateAxis0.getLabelAngle();\n}",
    "testName" : "test26171"
  },
  "test26173" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test26173() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    Color color0 = (Color) dateAxis0.getTickLabelPaint();\n    dateAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test26173"
  },
  "test1387" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1387() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"0m-'*\");\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    periodAxis0.equals(pipedInputStream0);\n    periodAxis0.getLabelAngle();\n}",
    "testName" : "test1387"
  },
  "test26172" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test26172() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    Color color0 = (Color) dateAxis0.getTickLabelPaint();\n    dateAxis0.isTickMarksVisible();\n}",
    "testName" : "test26172"
  },
  "test26175" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test26175() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    Color color0 = (Color) dateAxis0.getTickLabelPaint();\n    dateAxis0.isAxisLineVisible();\n}",
    "testName" : "test26175"
  },
  "test26174" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test26174() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    Color color0 = (Color) dateAxis0.getTickLabelPaint();\n    dateAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test26174"
  },
  "test29201" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test29201() throws Throwable {\n    ZoneInfo zoneInfo0 = (ZoneInfo) RegularTimePeriod.DEFAULT_TIME_ZONE;\n    DateAxis dateAxis0 = new DateAxis(\"sYZwccxsFNxVh!\", zoneInfo0);\n    double double0 = dateAxis0.getFixedDimension();\n    dateAxis0.isAxisLineVisible();\n}",
    "testName" : "test29201"
  },
  "test29200" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test29200() throws Throwable {\n    ZoneInfo zoneInfo0 = (ZoneInfo) RegularTimePeriod.DEFAULT_TIME_ZONE;\n    DateAxis dateAxis0 = new DateAxis(\"sYZwccxsFNxVh!\", zoneInfo0);\n    double double0 = dateAxis0.getFixedDimension();\n    dateAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test29200"
  },
  "test26176" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test26176() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    Color color0 = (Color) dateAxis0.getTickLabelPaint();\n    dateAxis0.isTickLabelsVisible();\n}",
    "testName" : "test26176"
  },
  "test26178" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test26178() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    Color color0 = (Color) dateAxis0.getTickLabelPaint();\n    dateAxis0.isVisible();\n}",
    "testName" : "test26178"
  },
  "test017" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test017() throws Throwable {\n    CategoryAxis categoryAxis0 = new CategoryAxis((String) null);\n    categoryAxis0.setTickMarkOutsideLength(1542.5818F);\n    categoryAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test017"
  },
  "test38260" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test38260() throws Throwable {\n    NumberAxis numberAxis0 = new NumberAxis(\"\");\n    boolean boolean0 = numberAxis0.isTickLabelsVisible();\n    numberAxis0.isVisible();\n}",
    "testName" : "test38260"
  },
  "test38261" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test38261() throws Throwable {\n    NumberAxis numberAxis0 = new NumberAxis(\"\");\n    boolean boolean0 = numberAxis0.isTickLabelsVisible();\n    numberAxis0.isTickMarksVisible();\n}",
    "testName" : "test38261"
  },
  "test52319" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test52319() throws Throwable {\n    NumberAxis3D numberAxis3D0 = new NumberAxis3D();\n    PeriodAxis periodAxis0 = new PeriodAxis(\"?6?y{g>)q`1\");\n    periodAxis0.setTickMarkStroke(numberAxis3D0.DEFAULT_TICK_MARK_STROKE);\n    periodAxis0.isAxisLineVisible();\n}",
    "testName" : "test52319"
  },
  "test39263" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39263() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"\");\n    Color color0 = (Color) dateAxis0.getTickMarkPaint();\n    dateAxis0.isTickMarksVisible();\n}",
    "testName" : "test39263"
  },
  "test39262" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39262() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"\");\n    Color color0 = (Color) dateAxis0.getTickMarkPaint();\n    dateAxis0.getLabelAngle();\n}",
    "testName" : "test39262"
  },
  "test1391" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1391() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"0m-'*\");\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    periodAxis0.equals(pipedInputStream0);\n    periodAxis0.isTickLabelsVisible();\n}",
    "testName" : "test1391"
  },
  "test17114" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test17114() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"X\");\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    logarithmicAxis0.addChangeListener(combinedRangeXYPlot0);\n    logarithmicAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test17114"
  },
  "test39265" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39265() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"\");\n    Color color0 = (Color) dateAxis0.getTickMarkPaint();\n    dateAxis0.isAxisLineVisible();\n}",
    "testName" : "test39265"
  },
  "test1392" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1392() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"0m-'*\");\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    periodAxis0.equals(pipedInputStream0);\n    periodAxis0.isTickMarksVisible();\n}",
    "testName" : "test1392"
  },
  "test17115" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test17115() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"X\");\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    logarithmicAxis0.addChangeListener(combinedRangeXYPlot0);\n    logarithmicAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test17115"
  },
  "test39264" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39264() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"\");\n    Color color0 = (Color) dateAxis0.getTickMarkPaint();\n    dateAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test39264"
  },
  "test1393" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1393() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"0m-'*\");\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    periodAxis0.equals(pipedInputStream0);\n    periodAxis0.isVisible();\n}",
    "testName" : "test1393"
  },
  "test17116" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test17116() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"X\");\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    logarithmicAxis0.addChangeListener(combinedRangeXYPlot0);\n    logarithmicAxis0.isTickLabelsVisible();\n}",
    "testName" : "test17116"
  },
  "test39267" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39267() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"\");\n    Color color0 = (Color) dateAxis0.getTickMarkPaint();\n    dateAxis0.isVisible();\n}",
    "testName" : "test39267"
  },
  "test39266" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39266() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"\");\n    Color color0 = (Color) dateAxis0.getTickMarkPaint();\n    dateAxis0.isTickLabelsVisible();\n}",
    "testName" : "test39266"
  },
  "test17110" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test17110() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"X\");\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    logarithmicAxis0.addChangeListener(combinedRangeXYPlot0);\n    logarithmicAxis0.isTickMarksVisible();\n}",
    "testName" : "test17110"
  },
  "test17111" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test17111() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"X\");\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    logarithmicAxis0.addChangeListener(combinedRangeXYPlot0);\n    logarithmicAxis0.getLabelAngle();\n}",
    "testName" : "test17111"
  },
  "test39268" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39268() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis(\"\");\n    Color color0 = (Color) dateAxis0.getTickMarkPaint();\n    dateAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test39268"
  },
  "test17112" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test17112() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"X\");\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    logarithmicAxis0.addChangeListener(combinedRangeXYPlot0);\n    logarithmicAxis0.isAxisLineVisible();\n}",
    "testName" : "test17112"
  },
  "test1390" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1390() throws Throwable {\n    PeriodAxis periodAxis0 = new PeriodAxis(\"0m-'*\");\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    periodAxis0.equals(pipedInputStream0);\n    periodAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test1390"
  },
  "test17113" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test17113() throws Throwable {\n    LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(\"X\");\n    CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();\n    logarithmicAxis0.addChangeListener(combinedRangeXYPlot0);\n    logarithmicAxis0.isVisible();\n}",
    "testName" : "test17113"
  },
  "test1285" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1285() throws Throwable {\n    ThermometerPlot thermometerPlot0 = new ThermometerPlot();\n    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();\n    valueAxis0.getLabel();\n    valueAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test1285"
  },
  "test1286" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1286() throws Throwable {\n    ThermometerPlot thermometerPlot0 = new ThermometerPlot();\n    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();\n    valueAxis0.getLabel();\n    valueAxis0.isTickLabelsVisible();\n}",
    "testName" : "test1286"
  },
  "test75436" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test75436() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    dateAxis0.setVisible(true);\n    dateAxis0.getLabelAngle();\n}",
    "testName" : "test75436"
  },
  "test75435" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test75435() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    dateAxis0.setVisible(true);\n    dateAxis0.isAxisLineVisible();\n}",
    "testName" : "test75435"
  },
  "test75434" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test75434() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    dateAxis0.setVisible(true);\n    dateAxis0.isTickLabelsVisible();\n}",
    "testName" : "test75434"
  },
  "test75433" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test75433() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    dateAxis0.setVisible(true);\n    dateAxis0.isTickMarksVisible();\n}",
    "testName" : "test75433"
  },
  "test30206" : {
    "methodSignature" : "public boolean isTickLabelsVisible()",
    "methodName" : "isTickLabelsVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test30206() throws Throwable {\n    ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis(\"M znijI]xx5~\");\n    float float0 = extendedCategoryAxis0.getTickMarkOutsideLength();\n    extendedCategoryAxis0.isTickLabelsVisible();\n}",
    "testName" : "test30206"
  },
  "test75432" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test75432() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    dateAxis0.setVisible(true);\n    dateAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test75432"
  },
  "test30205" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test30205() throws Throwable {\n    ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis(\"M znijI]xx5~\");\n    float float0 = extendedCategoryAxis0.getTickMarkOutsideLength();\n    extendedCategoryAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test30205"
  },
  "test75431" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test75431() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    dateAxis0.setVisible(true);\n    dateAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test75431"
  },
  "test30208" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test30208() throws Throwable {\n    ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis(\"M znijI]xx5~\");\n    float float0 = extendedCategoryAxis0.getTickMarkOutsideLength();\n    extendedCategoryAxis0.isVisible();\n}",
    "testName" : "test30208"
  },
  "test75430" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test75430() throws Throwable {\n    DateAxis dateAxis0 = new DateAxis();\n    dateAxis0.isVisible();\n}",
    "testName" : "test75430"
  },
  "test30207" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test30207() throws Throwable {\n    ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis(\"M znijI]xx5~\");\n    float float0 = extendedCategoryAxis0.getTickMarkOutsideLength();\n    extendedCategoryAxis0.isAxisLineVisible();\n}",
    "testName" : "test30207"
  },
  "test1281" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1281() throws Throwable {\n    ThermometerPlot thermometerPlot0 = new ThermometerPlot();\n    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();\n    valueAxis0.getLabel();\n    valueAxis0.isTickMarksVisible();\n}",
    "testName" : "test1281"
  },
  "test30202" : {
    "methodSignature" : "public float getTickMarkOutsideLength()",
    "methodName" : "getTickMarkOutsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test30202() throws Throwable {\n    ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis(\"M znijI]xx5~\");\n    float float0 = extendedCategoryAxis0.getTickMarkOutsideLength();\n}",
    "testName" : "test30202"
  },
  "test1282" : {
    "methodSignature" : "public boolean isAxisLineVisible()",
    "methodName" : "isAxisLineVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1282() throws Throwable {\n    ThermometerPlot thermometerPlot0 = new ThermometerPlot();\n    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();\n    valueAxis0.getLabel();\n    valueAxis0.isAxisLineVisible();\n}",
    "testName" : "test1282"
  },
  "test1283" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1283() throws Throwable {\n    ThermometerPlot thermometerPlot0 = new ThermometerPlot();\n    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();\n    valueAxis0.getLabel();\n    valueAxis0.getLabelAngle();\n}",
    "testName" : "test1283"
  },
  "test30204" : {
    "methodSignature" : "public boolean isTickMarksVisible()",
    "methodName" : "isTickMarksVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test30204() throws Throwable {\n    ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis(\"M znijI]xx5~\");\n    float float0 = extendedCategoryAxis0.getTickMarkOutsideLength();\n    extendedCategoryAxis0.isTickMarksVisible();\n}",
    "testName" : "test30204"
  },
  "test1284" : {
    "methodSignature" : "public boolean isVisible()",
    "methodName" : "isVisible",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1284() throws Throwable {\n    ThermometerPlot thermometerPlot0 = new ThermometerPlot();\n    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();\n    valueAxis0.getLabel();\n    valueAxis0.isVisible();\n}",
    "testName" : "test1284"
  },
  "test30203" : {
    "methodSignature" : "public double getLabelAngle()",
    "methodName" : "getLabelAngle",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test30203() throws Throwable {\n    ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis(\"M znijI]xx5~\");\n    float float0 = extendedCategoryAxis0.getTickMarkOutsideLength();\n    extendedCategoryAxis0.getLabelAngle();\n}",
    "testName" : "test30203"
  },
  "test1280" : {
    "methodSignature" : "public float getTickMarkInsideLength()",
    "methodName" : "getTickMarkInsideLength",
    "className" : "org.jfree.chart.axis.Axis",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1280() throws Throwable {\n    ThermometerPlot thermometerPlot0 = new ThermometerPlot();\n    ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();\n    valueAxis0.getLabel();\n    valueAxis0.getTickMarkInsideLength();\n}",
    "testName" : "test1280"
  }
}