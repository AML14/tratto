org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test0033() throws Throwable {
    DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
    TableOrder tableOrder0 = TableOrder.BY_ROW;
    CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultMultiValueCategoryDataset0, tableOrder0, 1830);
    Second second0 = new Second();
    PieDataset pieDataset0 = DatasetUtilities.createConsolidatedPieDataset((PieDataset) categoryToPieDataset0, (Comparable) second0, (double) 0, 0);
    DatasetUtilities.calculatePieDatasetTotal(pieDataset0);
    MatrixSeries matrixSeries0 = null;
    matrixSeries0 = new MatrixSeries(""Null 'xRange' argument"", 1830, (-1));
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test01515() throws Throwable {
    DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
    DatasetUtilities.findRangeBounds((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, true);
    LineFunction2D lineFunction2D0 = new LineFunction2D(3547.0, 250.3764192399988);
    double double0 = (-1610.9777705227953);
    double double1 = 1.5;
    int int0 = 129;
    Hour hour0 = null;
    Minute minute0 = null;
    minute0 = new Minute(129, (Hour) null);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test02020() throws Throwable {
    Comparable<IntervalXYDelegate>[] comparableArray0 = (Comparable<IntervalXYDelegate>[]) Array.newInstance(Comparable.class, 1);
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond(4L);
    RegularTimePeriod regularTimePeriod0 = fixedMillisecond0.previous();
    comparableArray0[0] = (Comparable<IntervalXYDelegate>) regularTimePeriod0;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    calendar0.setTimeZone(timeZone0);
    regularTimePeriod0.peg(calendar0);
    regularTimePeriod0.toString();
    double[][] doubleArray0 = new double[0][5];
    DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
    DatasetUtilities.findMaximumDomainValue(defaultTableXYDataset0);
    PieDataset pieDataset0 = DatasetUtilities.createPieDatasetForColumn((CategoryDataset) defaultCategoryDataset0, (Comparable) regularTimePeriod0);
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset(pieDataset0);
    PieDataset pieDataset1 = DatasetUtilities.createConsolidatedPieDataset((PieDataset) defaultPieDataset0, (Comparable) comparableArray0[0], 0.0, 2000);
    DatasetUtilities.isEmptyOrNull(pieDataset1);
    CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
    categoryTableXYDataset0.getSeriesCount();
    DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory();
    JFormattedTextField jFormattedTextField0 = new JFormattedTextField((JFormattedTextField.AbstractFormatterFactory) defaultFormatterFactory0);
    DatasetUtilities.findStackedRangeBounds((TableXYDataset) categoryTableXYDataset0, Double.NEGATIVE_INFINITY);
    defaultPieDataset0.isSelected(comparableArray0[0]);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test02828() throws Throwable {
    Number[][] numberArray0 = new Number[5][0];
    Number[] numberArray1 = new Number[6];
    Integer integer0 = JLayeredPane.POPUP_LAYER;
    numberArray1[0] = (Number) integer0;
    double[][] doubleArray0 = new double[5][6];
    double[] doubleArray1 = new double[7];
    doubleArray1[0] = (-1266.170435924111);
    doubleArray1[1] = 0.0;
    doubleArray1[2] = 832.2;
    doubleArray1[3] = 0.0;
    doubleArray1[4] = 1960.74534886;
    doubleArray1[5] = 0.0;
    doubleArray1[6] = Double.POSITIVE_INFINITY;
    doubleArray0[0] = doubleArray1;
    double[] doubleArray2 = new double[2];
    doubleArray2[0] = 1960.74534886;
    doubleArray2[1] = 0.0;
    doubleArray0[1] = doubleArray2;
    double[] doubleArray3 = new double[7];
    doubleArray3[0] = 832.2;
    doubleArray3[1] = 832.2;
    doubleArray3[2] = (-1266.170435924111);
    doubleArray3[3] = 832.2;
    doubleArray3[4] = 0.0;
    doubleArray3[5] = 1960.74534886;
    doubleArray3[6] = Double.POSITIVE_INFINITY;
    doubleArray0[2] = doubleArray3;
    double[] doubleArray4 = new double[4];
    doubleArray4[0] = (-1266.170435924111);
    doubleArray4[1] = (-1266.170435924111);
    doubleArray4[2] = 1041.0;
    doubleArray4[3] = Double.NEGATIVE_INFINITY;
    doubleArray0[3] = doubleArray4;
    double[] doubleArray5 = new double[7];
    doubleArray5[0] = Double.POSITIVE_INFINITY;
    doubleArray5[1] = 1041.0;
    doubleArray5[2] = 1960.74534886;
    doubleArray5[3] = 832.2;
    doubleArray5[4] = 0.0;
    doubleArray5[5] = 0.0;
    doubleArray5[6] = Double.NEGATIVE_INFINITY;
    doubleArray0[4] = doubleArray5;
    CategoryDataset categoryDataset0 = DatasetUtilities.createCategoryDataset(""'3&m"", ""B6F%"", doubleArray0);
    Number number0 = DatasetUtilities.findMaximumStackedRangeValue(categoryDataset0);
    numberArray1[1] = number0;
    BigInteger bigInteger0 = BigInteger.TEN;
    numberArray1[2] = (Number) bigInteger0;
    Byte byte0 = new Byte((byte) 16);
    numberArray1[3] = (Number) byte0;
    Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
    numberArray1[4] = (Number) integer1;
    Float float0 = new Float(0.0F);
    numberArray1[5] = (Number) float0;
    numberArray0[0] = numberArray1;
    Number[] numberArray2 = new Number[3];
    numberArray2[0] = (Number) (-1266.170435924111);
    DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
    defaultStatisticalCategoryDataset0.getMeanValue((Comparable) 1960.74534886, (Comparable) integer1);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test03232() throws Throwable {
    MockDate mockDate0 = new MockDate();
    Millisecond millisecond0 = new Millisecond(mockDate0);
    mockDate0.toInstant();
    TimeSeries timeSeries0 = new TimeSeries(millisecond0, ""5WHAMs+gM}"", """");
    TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
    timeSeries0.addOrUpdate((RegularTimePeriod) millisecond0, (Number) 0);
    DatasetUtilities.findRangeBounds((XYDataset) timeSeriesCollection0);
    DatasetUtilities.iterateDomainBounds((XYDataset) timeSeriesCollection0, false);
    DatasetUtilities.isEmptyOrNull((XYDataset) timeSeriesCollection0);
    DatasetUtilities.findDomainBounds((XYDataset) timeSeriesCollection0);
    Comparable<Long>[] comparableArray0 = (Comparable<Long>[]) Array.newInstance(Comparable.class, 7);
    Hour hour0 = null;
    hour0 = new Hour(835, 999, 999, 0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test04243() throws Throwable {
    Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    doReturn((Statement) null).when(connection0).createStatement();
    XYSeries xYSeries0 = new XYSeries("""");
    XYSeries xYSeries1 = xYSeries0.createCopy((-2602), (-728));
    XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries1);
    DatasetUtilities.findMinimumRangeValue((XYDataset) xYSeriesCollection0);
    JDBCCategoryDataset jDBCCategoryDataset0 = null;
    jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0, """");
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test04445() throws Throwable {
    double[][] doubleArray0 = new double[1][5];
    double[] doubleArray1 = new double[9];
    doubleArray1[0] = (-995.7472);
    doubleArray1[1] = (-884.0);
    doubleArray1[2] = (-1615.96999);
    doubleArray1[3] = (-135.43254029657);
    doubleArray1[4] = 1.0;
    doubleArray1[5] = 0.0;
    doubleArray1[6] = 1.0;
    doubleArray1[7] = (-153.30124);
    doubleArray1[8] = 0.0;
    doubleArray0[0] = doubleArray1;
    DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
    defaultIntervalCategoryDataset0.validateObject();
    DatasetUtilities.iterateRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0);
    KeyToGroupMap keyToGroupMap0 = new KeyToGroupMap();
    keyToGroupMap0.getGroup((-153.30124));
    DatasetUtilities.findStackedRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, keyToGroupMap0);
    HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
    AWTEventMulticaster.remove(hierarchyListener0, hierarchyListener0);
    AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
    defaultIntervalCategoryDataset0.hasListener((EventListener) null);
    int int0 = (-1);
    defaultIntervalCategoryDataset0.getValue((Comparable) 1.0, (Comparable) (-884.0));
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test04647() throws Throwable {
    MockDate mockDate0 = new MockDate();
    Millisecond millisecond0 = new Millisecond(mockDate0);
    mockDate0.toInstant();
    TimeSeries timeSeries0 = new TimeSeries(millisecond0, ""5WHAMs+gM}"", """");
    TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
    timeSeries0.addOrUpdate((RegularTimePeriod) millisecond0, (Number) 0);
    Class<DefaultHighLowDataset> class0 = DefaultHighLowDataset.class;
    RegularTimePeriod.downsize(class0);
    DatasetUtilities.findRangeBounds((XYDataset) timeSeriesCollection0);
    DatasetUtilities.iterateDomainBounds((XYDataset) timeSeriesCollection0, true);
    DatasetUtilities.isEmptyOrNull((XYDataset) timeSeriesCollection0);
    DatasetUtilities.findDomainBounds((XYDataset) timeSeriesCollection0);
    Comparable<Long>[] comparableArray0 = (Comparable<Long>[]) Array.newInstance(Comparable.class, 7);
    Hour hour0 = null;
    hour0 = new Hour(835, 999, 999, 0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test05152() throws Throwable {
    XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
    IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(xYSeriesCollection0, false);
    intervalXYDelegate0.setAutoWidth(false);
    xYSeriesCollection0.equals(intervalXYDelegate0);
    Vector<DefaultStatisticalCategoryDataset> vector0 = new Vector<DefaultStatisticalCategoryDataset>();
    DatasetUtilities.iterateToFindDomainBounds(xYSeriesCollection0, vector0, true);
    DatasetUtilities.findDomainBounds((XYDataset) xYSeriesCollection0, (List) vector0, false);
    Number[][] numberArray0 = new Number[6][5];
    Number[] numberArray1 = new Number[4];
    BigInteger bigInteger0 = BigInteger.ZERO;
    bigInteger0.abs();
    numberArray1[0] = (Number) bigInteger0;
    String[] stringArray0 = new String[8];
    stringArray0[0] = """";
    stringArray0[1] = """";
    stringArray0[2] = """";
    stringArray0[3] = ""Pqk Cmo_!"";
    stringArray0[4] = ""Sq?hUM=/"";
    stringArray0[5] = ""Pqk Cmo_!"";
    stringArray0[6] = ""Pqk Cmo_!"";
    stringArray0[7] = """";
    DatasetUtilities.findMaximumRangeValue((XYDataset) xYSeriesCollection0);
    DatasetUtilities.findDomainBounds((XYDataset) xYSeriesCollection0, false);
    DefaultWindDataset defaultWindDataset0 = null;
    defaultWindDataset0 = new DefaultWindDataset(stringArray0, (Object[][][]) null);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test05253() throws Throwable {
    MockDate mockDate0 = new MockDate();
    Millisecond millisecond0 = new Millisecond(mockDate0);
    mockDate0.toInstant();
    TimeSeries timeSeries0 = new TimeSeries(millisecond0, ""5WHAMs+gM}"", """");
    TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
    Class<DefaultHighLowDataset> class0 = DefaultHighLowDataset.class;
    RegularTimePeriod.downsize(class0);
    DatasetUtilities.findRangeBounds((XYDataset) timeSeriesCollection0);
    DatasetUtilities.iterateDomainBounds((XYDataset) timeSeriesCollection0, true);
    timeSeries0.add((RegularTimePeriod) millisecond0, 2894.8601826361);
    DatasetUtilities.isEmptyOrNull((XYDataset) timeSeriesCollection0);
    millisecond0.toString();
    DatasetUtilities.findDomainBounds((XYDataset) timeSeriesCollection0);
    Comparable<Long>[] comparableArray0 = (Comparable<Long>[]) Array.newInstance(Comparable.class, 7);
    Hour hour0 = null;
    hour0 = new Hour(835, 999, 999, 0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test05960() throws Throwable {
    Comparable<IntervalXYDelegate>[] comparableArray0 = (Comparable<IntervalXYDelegate>[]) Array.newInstance(Comparable.class, 1);
    FixedMillisecond fixedMillisecond0 = new FixedMillisecond(4L);
    RegularTimePeriod regularTimePeriod0 = fixedMillisecond0.previous();
    comparableArray0[0] = (Comparable<IntervalXYDelegate>) regularTimePeriod0;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    regularTimePeriod0.peg(calendar0);
    regularTimePeriod0.toString();
    double[][] doubleArray0 = new double[0][5];
    DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
    PieDataset pieDataset0 = DatasetUtilities.createPieDatasetForColumn((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, (Comparable) regularTimePeriod0);
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset(pieDataset0);
    PieDataset pieDataset1 = DatasetUtilities.createConsolidatedPieDataset((PieDataset) defaultPieDataset0, (Comparable) comparableArray0[0], 0.0, 2000);
    DatasetUtilities.isEmptyOrNull(pieDataset1);
    CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
    categoryTableXYDataset0.getSeriesCount();
    SynthListUI synthListUI0 = new SynthListUI();
    DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory();
    JFormattedTextField jFormattedTextField0 = new JFormattedTextField((JFormattedTextField.AbstractFormatterFactory) defaultFormatterFactory0);
    synthListUI0.getAccessibleChild(jFormattedTextField0, 2000);
    categoryTableXYDataset0.hasListener(synthListUI0);
    defaultPieDataset0.isSelected(comparableArray0[0]);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test06566() throws Throwable {
    TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
    SerialDate serialDate0 = SerialDate.createInstance(2);
    timeTableXYDataset0.indexOf(serialDate0);
    timeTableXYDataset0.getItemCount();
    timeTableXYDataset0.getSeriesCount();
    Range range0 = DatasetUtilities.findStackedRangeBounds((TableXYDataset) timeTableXYDataset0, (double) 0);
    range0.getLowerBound();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test06567() throws Throwable {
    TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
    SerialDate serialDate0 = SerialDate.createInstance(2);
    timeTableXYDataset0.indexOf(serialDate0);
    timeTableXYDataset0.getItemCount();
    timeTableXYDataset0.getSeriesCount();
    Range range0 = DatasetUtilities.findStackedRangeBounds((TableXYDataset) timeTableXYDataset0, (double) 0);
    range0.getUpperBound();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test07477() throws Throwable {
    CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
    Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
    TableOrder tableOrder0 = TableOrder.BY_COLUMN;
    DatasetUtilities.iterateDomainBounds((XYDataset) categoryTableXYDataset0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    boolean boolean0 = false;
    DatasetUtilities.findStackedRangeBounds((TableXYDataset) categoryTableXYDataset0);
    categoryTableXYDataset0.getEndY(0, 0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test07781() throws Throwable {
    Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
    doReturn((ResultSet) null).when(statement0).executeQuery(anyString());
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    doReturn(statement0).when(connection0).createStatement();
    String string0 = """";
    DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
    DatasetUtilities.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0);
    JDBCCategoryDataset jDBCCategoryDataset0 = null;
    jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0, """");
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test08286() throws Throwable {
    int int0 = 0;
    DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, 0);
    Stack<DefaultBoxAndWhiskerCategoryDataset> stack0 = new Stack<DefaultBoxAndWhiskerCategoryDataset>();
    Range range0 = DatasetUtilities.findRangeBounds((XYDataset) dynamicTimeSeriesCollection0, false);
    DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
    stack0.add(defaultBoxAndWhiskerCategoryDataset0);
    Range.scale(range0, 0.0);
    dynamicTimeSeriesCollection0.getStartY(0, 0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test08589() throws Throwable {
    TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
    LinkedList<DefaultStatisticalCategoryDataset> linkedList0 = new LinkedList<DefaultStatisticalCategoryDataset>();
    DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
    DatasetUtilities.iterateToFindRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0, (List) linkedList0, true);
    Range.shift((Range) null, 797.93035);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test107111() throws Throwable {
    String string0 = ""Null 'visibleSeriesKeys' argument."";
    String string1 = ""'3&m"";
    Number[][] numberArray0 = new Number[5][0];
    Number[] numberArray1 = new Number[6];
    Integer integer0 = JLayeredPane.POPUP_LAYER;
    numberArray1[0] = (Number) integer0;
    double[][] doubleArray0 = new double[5][6];
    double[] doubleArray1 = new double[7];
    doubleArray1[0] = (-1266.170435924111);
    doubleArray1[1] = 0.0;
    doubleArray1[2] = 832.2;
    doubleArray1[3] = 0.0;
    doubleArray1[4] = 1960.74534886;
    doubleArray1[5] = 0.0;
    doubleArray1[6] = 0.0;
    doubleArray0[0] = doubleArray1;
    double[] doubleArray2 = new double[2];
    doubleArray2[0] = 1960.74534886;
    doubleArray2[1] = 0.0;
    doubleArray0[1] = doubleArray2;
    double[] doubleArray3 = new double[7];
    doubleArray3[0] = 832.2;
    doubleArray3[1] = 832.2;
    doubleArray3[2] = (-1266.170435924111);
    doubleArray3[3] = 832.2;
    doubleArray3[4] = 0.0;
    doubleArray3[5] = 1960.74534886;
    doubleArray3[6] = 0.0;
    doubleArray0[2] = doubleArray3;
    double[] doubleArray4 = new double[4];
    doubleArray4[0] = (-1266.170435924111);
    doubleArray4[1] = (-1266.170435924111);
    doubleArray4[2] = 1041.0;
    doubleArray4[3] = Double.NEGATIVE_INFINITY;
    doubleArray0[3] = doubleArray4;
    double[] doubleArray5 = new double[7];
    doubleArray5[0] = 0.0;
    doubleArray5[1] = 1041.0;
    doubleArray5[2] = 1960.74534886;
    doubleArray5[3] = 832.2;
    doubleArray5[4] = 0.0;
    doubleArray5[5] = 0.0;
    doubleArray5[6] = Double.NEGATIVE_INFINITY;
    doubleArray0[4] = doubleArray5;
    CategoryDataset categoryDataset0 = DatasetUtilities.createCategoryDataset(""'3&m"", ""B6F%"", doubleArray0);
    Number number0 = DatasetUtilities.findMaximumStackedRangeValue(categoryDataset0);
    numberArray1[1] = number0;
    BigInteger bigInteger0 = BigInteger.TEN;
    numberArray1[2] = (Number) bigInteger0;
    Byte byte0 = new Byte((byte) (-1));
    numberArray1[3] = (Number) byte0;
    Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
    numberArray1[4] = (Number) integer1;
    Float float0 = new Float(0.0F);
    numberArray1[5] = (Number) float0;
    numberArray0[0] = numberArray1;
    Number[] numberArray2 = new Number[3];
    numberArray2[0] = (Number) (-1266.170435924111);
    DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
    defaultStatisticalCategoryDataset0.getMeanValue((Comparable) 1960.74534886, (Comparable) integer1);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test109115() throws Throwable {
    DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
    DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
    SeriesChangeType seriesChangeType0 = SeriesChangeType.ADD_AND_REMOVE;
    int int0 = 1248;
    Week week0 = new Week();
    int int1 = 0;
    int int2 = 0;
    week0.toString();
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(53, 8, 1, 0, 1, 0);
    week0.getLastMillisecond((Calendar) mockGregorianCalendar0);
    defaultXYDataset0.removeSeries(week0);
    SeriesChangeInfo seriesChangeInfo0 = new SeriesChangeInfo(seriesChangeType0, 1248, 1248);
    SeriesChangeEvent seriesChangeEvent0 = new SeriesChangeEvent(defaultMultiValueCategoryDataset0, seriesChangeInfo0);
    defaultXYDataset0.seriesChanged(seriesChangeEvent0);
    DatasetUtilities.iterateXYRangeBounds(defaultXYDataset0);
    DatasetUtilities.isEmptyOrNull((CategoryDataset) null);
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(timeZone0);
    DatasetUtilities.findStackedRangeBounds((TableXYDataset) timeTableXYDataset0, (double) 8);
    Comparable<Long>[] comparableArray0 = (Comparable<Long>[]) Array.newInstance(Comparable.class, 8);
    comparableArray0[0] = (Comparable<Long>) week0;
    int int3 = 1896;
    int int4 = 212;
    int int5 = 100;
    int int6 = 3496;
    int int7 = 2166;
    Second second0 = null;
    second0 = new Second(8, 1896, 212, 100, 3496, 2166);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test110116() throws Throwable {
    DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
    DatasetUtilities.iterateRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0, true);
    DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
    int int0 = 52;
    int int1 = 1322;
    int int2 = 2;
    SerialDate serialDate0 = SerialDate.createInstance(1322);
    SerialDate.addDays(Integer.MAX_VALUE, serialDate0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test117123() throws Throwable {
    MockDate mockDate0 = new MockDate();
    Millisecond millisecond0 = new Millisecond(mockDate0);
    mockDate0.toInstant();
    TimeSeries timeSeries0 = new TimeSeries(millisecond0, ""5WHAMs+gM}"", """");
    TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
    Class<DefaultHighLowDataset> class0 = DefaultHighLowDataset.class;
    RegularTimePeriod.downsize(class0);
    DatasetUtilities.findRangeBounds((XYDataset) timeSeriesCollection0);
    DatasetUtilities.iterateDomainBounds((XYDataset) timeSeriesCollection0, true);
    DatasetUtilities.isEmptyOrNull((XYDataset) timeSeriesCollection0);
    DatasetUtilities.findDomainBounds((XYDataset) timeSeriesCollection0);
    Comparable<Long>[] comparableArray0 = (Comparable<Long>[]) Array.newInstance(Comparable.class, 7);
    int int0 = 835;
    Hour hour0 = null;
    hour0 = new Hour(835, 999, 999, 0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test121127() throws Throwable {
    DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
    Minute.parseMinute(""e\""^JD!w d3S"");
    PieDataset pieDataset0 = DatasetUtilities.createConsolidatedPieDataset((PieDataset) defaultPieDataset0, (Comparable) null, (-248.48335696));
    DatasetUtilities.isEmptyOrNull(pieDataset0);
    TimePeriodValues timePeriodValues0 = null;
    timePeriodValues0 = new TimePeriodValues((Comparable) null);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test127133() throws Throwable {
    XYIntervalSeriesCollection xYIntervalSeriesCollection0 = new XYIntervalSeriesCollection();
    xYIntervalSeriesCollection0.clone();
    xYIntervalSeriesCollection0.getDomainOrder();
    DatasetUtilities.iterateRangeBounds((XYDataset) xYIntervalSeriesCollection0, true);
    xYIntervalSeriesCollection0.getY(0, 0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test133139() throws Throwable {
    TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection();
    DatasetUtilities.findMaximumDomainValue(timeSeriesCollection0);
    int int0 = (-176);
    timeSeriesCollection0.getSeriesKey((-176));
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test137144() throws Throwable {
    DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(0, (-3288));
    Vector<Float> vector0 = new Vector<Float>();
    CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
    Range range0 = DatasetUtilities.findStackedRangeBounds((TableXYDataset) categoryTableXYDataset0);
    boolean boolean0 = true;
    DatasetUtilities.iterateToFindRangeBounds((XYDataset) dynamicTimeSeriesCollection0, (List) vector0, range0, true);
    DatasetUtilities.findStackedRangeBounds((TableXYDataset) categoryTableXYDataset0, 432.490343);
    TimeTableXYDataset timeTableXYDataset0 = null;
    timeTableXYDataset0 = new TimeTableXYDataset((TimeZone) null);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test139146() throws Throwable {
    double[][] doubleArray0 = new double[6][4];
    double[] doubleArray1 = new double[5];
    doubleArray1[0] = (-1057.49404);
    doubleArray1[1] = 1264.99;
    doubleArray1[2] = 2587.438;
    doubleArray1[3] = 1364.1678;
    doubleArray1[4] = 0.8;
    doubleArray0[0] = doubleArray1;
    double[] doubleArray2 = new double[3];
    doubleArray2[0] = 1264.99;
    doubleArray2[1] = 0.8;
    doubleArray2[2] = 0.8;
    doubleArray0[1] = doubleArray2;
    double[] doubleArray3 = new double[8];
    doubleArray3[0] = 2587.438;
    doubleArray3[1] = 1364.1678;
    doubleArray3[2] = (-1057.49404);
    doubleArray3[3] = 1264.99;
    doubleArray3[4] = 0.8;
    doubleArray3[5] = 2587.438;
    doubleArray3[6] = (-1057.49404);
    doubleArray3[7] = 1364.1678;
    doubleArray0[2] = doubleArray3;
    double[] doubleArray4 = new double[1];
    doubleArray4[0] = 0.8;
    doubleArray0[3] = doubleArray4;
    double[] doubleArray5 = new double[0];
    doubleArray0[4] = doubleArray5;
    double[] doubleArray6 = new double[9];
    doubleArray6[0] = (-1057.49404);
    doubleArray6[1] = 1264.99;
    doubleArray6[2] = 1364.1678;
    doubleArray6[3] = 1364.1678;
    doubleArray6[4] = 0.8;
    doubleArray6[5] = 1264.99;
    doubleArray6[6] = 0.8;
    doubleArray6[7] = 1364.1678;
    doubleArray6[8] = 1264.99;
    doubleArray0[5] = doubleArray6;
    CategoryDataset categoryDataset0 = DatasetUtilities.createCategoryDataset("") is not recognised."", "") is not recognised."", doubleArray0);
    Range range0 = DatasetUtilities.findRangeBounds(categoryDataset0, true);
    range0.getCentralValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test143151() throws Throwable {
    XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
    IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(xYSeriesCollection0, false);
    xYSeriesCollection0.equals(intervalXYDelegate0);
    Vector<DefaultStatisticalCategoryDataset> vector0 = new Vector<DefaultStatisticalCategoryDataset>();
    DatasetUtilities.iterateToFindDomainBounds(xYSeriesCollection0, vector0, true);
    DatasetUtilities.findDomainBounds((XYDataset) xYSeriesCollection0, (List) vector0, false);
    String string0 = ""Pqk Cmo_!"";
    String string1 = """";
    Number[][] numberArray0 = new Number[6][5];
    Number[] numberArray1 = new Number[4];
    BigInteger bigInteger0 = BigInteger.ZERO;
    numberArray1[0] = (Number) bigInteger0;
    String[] stringArray0 = new String[8];
    stringArray0[0] = """";
    stringArray0[1] = """";
    stringArray0[2] = """";
    stringArray0[3] = ""Pqk Cmo_!"";
    stringArray0[4] = ""Sq?hUM=/"";
    stringArray0[5] = ""Pqk Cmo_!"";
    stringArray0[6] = ""Pqk Cmo_!"";
    stringArray0[7] = """";
    DefaultWindDataset defaultWindDataset0 = null;
    defaultWindDataset0 = new DefaultWindDataset(stringArray0, (Object[][][]) null);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test144152() throws Throwable {
    XYIntervalSeriesCollection xYIntervalSeriesCollection0 = new XYIntervalSeriesCollection();
    Vector<Long> vector0 = new Vector<Long>();
    DatasetUtilities.iterateToFindDomainBounds(xYIntervalSeriesCollection0, vector0, false);
    String string0 = ""Null 'visibleSeriesKeys' argument."";
    String string1 = """";
    Number[][] numberArray0 = new Number[3][7];
    Number[] numberArray1 = new Number[8];
    Integer integer0 = JLayeredPane.DEFAULT_LAYER;
    numberArray1[0] = (Number) integer0;
    int int0 = 2;
    Integer integer1 = new Integer(2);
    numberArray1[1] = (Number) integer1;
    Integer integer2 = JLayeredPane.POPUP_LAYER;
    numberArray1[2] = (Number) integer2;
    Integer.getInteger("""");
    numberArray1[3] = (Number) null;
    Integer integer3 = JLayeredPane.POPUP_LAYER;
    numberArray1[4] = (Number) integer3;
    Integer integer4 = JLayeredPane.DRAG_LAYER;
    numberArray1[5] = (Number) integer4;
    DefaultXYDataset defaultXYDataset0 = new DefaultXYDataset();
    defaultXYDataset0.getY(2, 2);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test153163() throws Throwable {
    Number[][] numberArray0 = new Number[7][1];
    Number[] numberArray1 = new Number[2];
    Integer integer0 = new Integer(2);
    numberArray1[0] = (Number) integer0;
    BigInteger bigInteger0 = BigInteger.ONE;
    numberArray1[1] = (Number) bigInteger0;
    numberArray0[0] = numberArray1;
    Number[] numberArray2 = new Number[0];
    numberArray0[1] = numberArray2;
    Number[] numberArray3 = new Number[2];
    numberArray3[0] = (Number) integer0;
    numberArray3[1] = (Number) bigInteger0;
    numberArray0[2] = numberArray3;
    Number[] numberArray4 = new Number[1];
    numberArray4[0] = (Number) integer0;
    numberArray0[3] = numberArray4;
    Number[] numberArray5 = new Number[1];
    numberArray5[0] = (Number) integer0;
    numberArray0[4] = numberArray5;
    Number[] numberArray6 = new Number[4];
    byte[] byteArray0 = new byte[5];
    byteArray0[0] = (byte) 0;
    byteArray0[1] = (byte) 59;
    byteArray0[2] = (byte) 0;
    byteArray0[3] = (byte) 87;
    byteArray0[4] = (byte) (-19);
    BigInteger bigInteger1 = new BigInteger(byteArray0);
    numberArray6[0] = (Number) bigInteger1;
    numberArray6[1] = (Number) bigInteger0;
    numberArray6[2] = (Number) integer0;
    numberArray6[3] = (Number) bigInteger0;
    numberArray0[5] = numberArray6;
    Number[] numberArray7 = new Number[2];
    numberArray7[0] = (Number) (byte) (-19);
    numberArray7[1] = (Number) bigInteger0;
    numberArray0[6] = numberArray7;
    CategoryDataset categoryDataset0 = DatasetUtilities.createCategoryDataset("""", """", numberArray0);
    KeyToGroupMap keyToGroupMap0 = new KeyToGroupMap();
    Range range0 = DatasetUtilities.findStackedRangeBounds(categoryDataset0, keyToGroupMap0);
    range0.getUpperBound();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test156167() throws Throwable {
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(true);
    Range range0 = DatasetUtilities.findStackedRangeBounds((TableXYDataset) defaultTableXYDataset0, (-2190.475756));
    range0.getCentralValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test157169() throws Throwable {
    TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
    timeTableXYDataset0.getSeriesCount();
    Range range0 = DatasetUtilities.findStackedRangeBounds((TableXYDataset) timeTableXYDataset0, 1.7976931348623157E308);
    range0.getLowerBound();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test163176() throws Throwable {
    CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
    Range range0 = DatasetUtilities.findStackedRangeBounds((TableXYDataset) categoryTableXYDataset0);
    range0.getLowerBound();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test163177() throws Throwable {
    CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
    Range range0 = DatasetUtilities.findStackedRangeBounds((TableXYDataset) categoryTableXYDataset0);
    range0.getUpperBound();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test164178() throws Throwable {
    Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
    JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
    DatasetUtilities.iterateRangeBounds((CategoryDataset) jDBCCategoryDataset0);
    DatasetUtilities.findRangeBounds((CategoryDataset) jDBCCategoryDataset0, false);
    int int0 = (-3224);
    DatasetUtilities.createPieDatasetForRow((CategoryDataset) jDBCCategoryDataset0, (-3224));
    jDBCCategoryDataset0.clone();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Day day0 = null;
    day0 = new Day((Date) null, timeZone0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test165179() throws Throwable {
    double[][] doubleArray0 = new double[0][6];
    DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
    defaultIntervalCategoryDataset0.validateObject();
    PieDataset pieDataset0 = DatasetUtilities.createPieDatasetForRow((CategoryDataset) defaultIntervalCategoryDataset0, (-9999));
    DatasetUtilities.isEmptyOrNull(pieDataset0);
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(true);
    DatasetUtilities.iterateXYRangeBounds(defaultTableXYDataset0);
    DatasetUtilities.findMaximumRangeValue((XYDataset) defaultTableXYDataset0);
    DatasetUtilities.findDomainBounds((XYDataset) defaultTableXYDataset0);
    DatasetUtilities.calculateStackTotal(defaultTableXYDataset0, (-9999));
    DatasetUtilities.iterateCategoryRangeBounds(defaultIntervalCategoryDataset0, true);
    Comparable<Byte>[] comparableArray0 = (Comparable<Byte>[]) Array.newInstance(Comparable.class, 0);
    DatasetUtilities.createCategoryDataset(comparableArray0, comparableArray0, doubleArray0);
    MockDate mockDate0 = new MockDate(0, 0, (-9999), 1637, 0);
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Hour hour0 = null;
    hour0 = new Hour(mockDate0, timeZone0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test165179() throws Throwable {
    double[][] doubleArray0 = new double[0][6];
    DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
    defaultIntervalCategoryDataset0.validateObject();
    PieDataset pieDataset0 = DatasetUtilities.createPieDatasetForRow((CategoryDataset) defaultIntervalCategoryDataset0, (-9999));
    DatasetUtilities.isEmptyOrNull(pieDataset0);
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(true);
    DatasetUtilities.iterateXYRangeBounds(defaultTableXYDataset0);
    DatasetUtilities.findMaximumRangeValue((XYDataset) defaultTableXYDataset0);
    DatasetUtilities.findDomainBounds((XYDataset) defaultTableXYDataset0);
    DatasetUtilities.calculateStackTotal(defaultTableXYDataset0, (-9999));
    DatasetUtilities.iterateCategoryRangeBounds(defaultIntervalCategoryDataset0, true);
    Comparable<Byte>[] comparableArray0 = (Comparable<Byte>[]) Array.newInstance(Comparable.class, 0);
    DatasetUtilities.createCategoryDataset(comparableArray0, comparableArray0, doubleArray0);
    MockDate mockDate0 = new MockDate(0, 0, (-9999), 1637, 0);
    ZoneId zoneId0 = ZoneId.systemDefault();
    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
    Hour hour0 = null;
    hour0 = new Hour(mockDate0, timeZone0);
},ERROR,com.github.javaparser.resolution.UnsolvedSymbolException,Unsolved symbol : MockDate
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test166181() throws Throwable {
    DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
    Vector<YIntervalSeriesCollection> vector0 = new Vector<YIntervalSeriesCollection>();
    DatasetUtilities.iterateToFindRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0, (List) vector0, false);
    Number number0 = DatasetUtilities.findMinimumStackedRangeValue(defaultKeyedValues2DDataset0);
    DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
    DatasetUtilities.findRangeBounds((XYDataset) defaultIntervalXYDataset0);
    Week week0 = new Week((-1), (-1));
    OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[4];
    MockDate mockDate0 = new MockDate(1, (-2306), 0);
    OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 53, 263.3488528894, (-3782.3734216), 28.49601688905808, (-2306));
    oHLCDataItemArray0[0] = oHLCDataItem0;
    OHLCDataItem oHLCDataItem1 = new OHLCDataItem(mockDate0, Double.NaN, 53, 0.0, 0, (-2306));
    oHLCDataItemArray0[1] = oHLCDataItem1;
    OHLCDataItem oHLCDataItem2 = new OHLCDataItem(mockDate0, 28.49601688905808, 0.0, 263.3488528894, 0.0, 20.693388221);
    oHLCDataItemArray0[2] = oHLCDataItem2;
    OHLCDataItem oHLCDataItem3 = new OHLCDataItem(mockDate0, 20.693388221, 1, 1, 1, (-2306));
    oHLCDataItemArray0[3] = oHLCDataItem3;
    DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(week0, oHLCDataItemArray0);
    Range range0 = DatasetUtilities.findDomainBounds((XYDataset) defaultOHLCDataset0, false);
    range0.getLength();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test169184() throws Throwable {
    Minute minute0 = new Minute();
    TimeSeriesDataItem timeSeriesDataItem0 = new TimeSeriesDataItem((RegularTimePeriod) minute0, (-1.0));
    SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(timeSeriesDataItem0);
    DatasetUtilities.findMinimumDomainValue(simpleHistogramDataset0);
    JDBCCategoryDataset jDBCCategoryDataset0 = null;
    jDBCCategoryDataset0 = new JDBCCategoryDataset((Connection) null, ""J*u*S:KyZ7~h,"");
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test170185() throws Throwable {
    double[][] doubleArray0 = new double[1][7];
    double[] doubleArray1 = new double[8];
    doubleArray1[1] = (-153.30124);
    doubleArray1[2] = (-153.30124);
    doubleArray1[3] = 2992.2094992533757;
    doubleArray1[4] = (-320.9347322552927);
    doubleArray1[5] = Double.NaN;
    doubleArray1[6] = 623.349;
    doubleArray1[7] = 842.78474997;
    doubleArray0[0] = doubleArray1;
    CategoryDataset categoryDataset0 = DatasetUtilities.createCategoryDataset("":/pX-Jfo^1pNyn"", """", doubleArray0);
    int int0 = ((DefaultCategoryDataset) categoryDataset0).getColumnCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test171188() throws Throwable {
    Minute minute0 = new Minute();
    TimeSeriesDataItem timeSeriesDataItem0 = new TimeSeriesDataItem((RegularTimePeriod) minute0, (-1.0));
    SimpleHistogramDataset simpleHistogramDataset0 = new SimpleHistogramDataset(timeSeriesDataItem0);
    JDBCCategoryDataset jDBCCategoryDataset0 = null;
    jDBCCategoryDataset0 = new JDBCCategoryDataset((Connection) null, ""J*u*S:KyZ7~h,"");
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test172189() throws Throwable {
    DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
    Clock clock0 = MockClock.systemUTC();
    Instant instant0 = MockInstant.now(clock0);
    Date date0 = Date.from(instant0);
    DatasetUtilities.findCumulativeRangeBounds(defaultBoxAndWhiskerCategoryDataset0);
    PieDataset pieDataset0 = DatasetUtilities.createPieDatasetForRow((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, (Comparable) date0);
    DatasetUtilities.isEmptyOrNull((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0);
    DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
    DatasetUtilities.findStackedRangeBounds((TableXYDataset) defaultTableXYDataset0);
    DatasetUtilities.createConsolidatedPieDataset(pieDataset0, (Comparable) instant0, 1243.114928959583);
    double[][] doubleArray0 = new double[5][8];
    double[] doubleArray1 = new double[4];
    doubleArray0[0] = doubleArray1;
    double[] doubleArray2 = new double[8];
    doubleArray2[0] = 832.2;
    doubleArray2[2] = (double) (-1142);
    doubleArray2[3] = Double.NEGATIVE_INFINITY;
    doubleArray2[6] = (double) (-4204);
    doubleArray0[1] = doubleArray2;
    double[] doubleArray3 = new double[5];
    doubleArray3[2] = (-3182.6);
    doubleArray3[3] = 832.2;
    doubleArray0[2] = doubleArray3;
    double[] doubleArray4 = new double[8];
    doubleArray4[0] = 832.2;
    doubleArray4[2] = Double.NEGATIVE_INFINITY;
    doubleArray4[3] = (double) (-4204);
    doubleArray4[4] = 1243.114928959583;
    doubleArray4[7] = (double) (-1142);
    doubleArray0[3] = doubleArray4;
    double[] doubleArray5 = new double[2];
    doubleArray5[0] = 832.2;
    doubleArray5[1] = (double) (-1142);
    doubleArray0[4] = doubleArray5;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test176193() throws Throwable {
    XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
    IntervalXYDelegate intervalXYDelegate0 = new IntervalXYDelegate(xYSeriesCollection0, false);
    intervalXYDelegate0.setAutoWidth(true);
    xYSeriesCollection0.equals(intervalXYDelegate0);
    Vector<DefaultStatisticalCategoryDataset> vector0 = new Vector<DefaultStatisticalCategoryDataset>();
    DatasetUtilities.iterateToFindDomainBounds(xYSeriesCollection0, vector0, true);
    DatasetUtilities.findDomainBounds((XYDataset) xYSeriesCollection0, (List) vector0, false);
    Number[][] numberArray0 = new Number[6][5];
    Number[] numberArray1 = new Number[4];
    String[] stringArray0 = new String[8];
    stringArray0[0] = """";
    stringArray0[1] = """";
    stringArray0[2] = """";
    stringArray0[4] = ""Sq?hUM=/"";
    stringArray0[7] = """";
    DefaultWindDataset defaultWindDataset0 = null;
    defaultWindDataset0 = new DefaultWindDataset(stringArray0, (Object[][][]) null);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test178195() throws Throwable {
    Number[][] numberArray0 = new Number[5][0];
    Number[] numberArray1 = new Number[6];
    Integer integer0 = JLayeredPane.POPUP_LAYER;
    numberArray1[0] = (Number) integer0;
    double[][] doubleArray0 = new double[5][6];
    double[] doubleArray1 = new double[7];
    doubleArray1[0] = (-1266.170435924111);
    doubleArray1[1] = 0.0;
    doubleArray1[2] = 832.2;
    doubleArray1[3] = 2662.161301467715;
    doubleArray1[4] = 0.0;
    doubleArray1[5] = 0.0;
    doubleArray1[6] = 0.0;
    double[] doubleArray2 = new double[2];
    doubleArray2[0] = 1960.74534886;
    doubleArray2[1] = 2662.161301467715;
    doubleArray0[1] = doubleArray2;
    double[] doubleArray3 = new double[7];
    doubleArray3[0] = 832.2;
    doubleArray3[1] = 832.2;
    doubleArray3[2] = (-1266.170435924111);
    doubleArray3[3] = 832.2;
    doubleArray3[4] = 2662.161301467715;
    doubleArray3[5] = 1960.74534886;
    doubleArray3[6] = 0.0;
    doubleArray0[2] = doubleArray3;
    double[] doubleArray4 = new double[4];
    doubleArray4[0] = (-1266.170435924111);
    doubleArray4[1] = (-1266.170435924111);
    doubleArray4[2] = 1041.0;
    doubleArray4[3] = Double.NEGATIVE_INFINITY;
    doubleArray0[3] = doubleArray4;
    double[] doubleArray5 = new double[7];
    doubleArray5[0] = 0.0;
    doubleArray5[1] = 1041.0;
    doubleArray5[2] = 1960.74534886;
    doubleArray5[3] = 1041.0;
    doubleArray5[4] = 0.0;
    doubleArray5[5] = 0.0;
    doubleArray5[6] = Double.NEGATIVE_INFINITY;
    doubleArray0[4] = doubleArray5;
    CategoryDataset categoryDataset0 = DatasetUtilities.createCategoryDataset(""'3&m"", ""B6F%"", doubleArray0);
    Number number0 = DatasetUtilities.findMaximumStackedRangeValue(categoryDataset0);
    numberArray1[1] = number0;
    BigInteger bigInteger0 = BigInteger.TEN;
    numberArray1[2] = (Number) bigInteger0;
    Byte byte0 = new Byte((byte) (-1));
    numberArray1[3] = (Number) byte0;
    Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
    numberArray1[4] = (Number) integer1;
    Float float0 = new Float(0.0F);
    numberArray1[5] = (Number) float0;
    numberArray0[0] = numberArray1;
    Number[] numberArray2 = new Number[3];
    numberArray2[0] = (Number) (-1266.170435924111);
    DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
    defaultStatisticalCategoryDataset0.getMeanValue((Comparable) 1960.74534886, (Comparable) integer1);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jfree.data.general.DatasetUtilities,@Test(timeout = 4000)
public void test183200() throws Throwable {
    MockDate mockDate0 = new MockDate();
    Millisecond millisecond0 = new Millisecond(mockDate0);
    mockDate0.toInstant();
    TimeSeries timeSeries0 = new TimeSeries(millisecond0, ""5WHAMs+gM}"", ""%rdWt314'Qe+pNY"");
    TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection(timeSeries0);
    timeSeries0.addOrUpdate((RegularTimePeriod) millisecond0, (Number) 0);
    Class<DefaultHighLowDataset> class0 = DefaultHighLowDataset.class;
    RegularTimePeriod.downsize(class0);
    DatasetUtilities.findRangeBounds((XYDataset) timeSeriesCollection0);
    DatasetUtilities.iterateDomainBounds((XYDataset) timeSeriesCollection0, true);
    DatasetUtilities.isEmptyOrNull((XYDataset) timeSeriesCollection0);
    DatasetUtilities.findDomainBounds((XYDataset) timeSeriesCollection0);
    Comparable<Long>[] comparableArray0 = (Comparable<Long>[]) Array.newInstance(Comparable.class, 7);
    Hour hour0 = null;
    hour0 = new Hour(835, 999, 999, 0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
