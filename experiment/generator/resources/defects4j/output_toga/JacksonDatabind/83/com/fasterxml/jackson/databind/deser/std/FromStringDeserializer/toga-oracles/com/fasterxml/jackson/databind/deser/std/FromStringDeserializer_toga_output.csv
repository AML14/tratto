project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test022,"public void test022() throws Throwable {
    Class<InetSocketAddress> class0 = InetSocketAddress.class;
    FromStringDeserializer.Std fromStringDeserializer_Std0 = new FromStringDeserializer.Std(class0, 9);
    Object object0 = fromStringDeserializer_Std0._deserializeFromEmptyString();
    assertNull(object0);
}",0,
project,0,test033,"public void test033() throws Throwable {
    Class<?>[] classArray0 = FromStringDeserializer.types();
    assertEquals(13, classArray0.length);
}",0,
project,0,test044,"public void test044() throws Throwable {
    Class<File> class0 = File.class;
    FromStringDeserializer.Std fromStringDeserializer_Std0 = FromStringDeserializer.findDeserializer(class0);
    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
    ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0, 8);
    JsonParser jsonParser0 = arrayNode0.traverse();
    // Undeclared exception!
    try {
        fromStringDeserializer_Std0.deserialize(jsonParser0, (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.FromStringDeserializer"", e);
    }
}",1,
project,0,test055,"public void test055() throws Throwable {
    Class<URL> class0 = URL.class;
    FromStringDeserializer.Std fromStringDeserializer_Std0 = FromStringDeserializer.findDeserializer(class0);
    assertEquals(10, FromStringDeserializer.Std.STD_TIME_ZONE);
}",0,
project,0,test066,"public void test066() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    Class<TimeZone> class0 = TimeZone.class;
    ObjectReader objectReader0 = objectMapper0.readerForUpdating(class0);
    assertNotNull(objectReader0);
}",0,
project,0,test077,"public void test077() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    IntNode intNode0 = new IntNode(3);
    Class<Currency> class0 = Currency.class;
    try {
        objectMapper0.treeToValue((TreeNode) intNode0, class0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Can not deserialize value of type java.util.Currency from String \""3\"": not a valid textual representation
        //  at [Source: java.lang.String@0000000002; line: -1, column: -1]
        //
        verifyException(""com.fasterxml.jackson.databind.exc.InvalidFormatException"", e);
    }
}",1,
project,0,test088,"public void test088() throws Throwable {
    Class<TimeZone> class0 = TimeZone.class;
    FromStringDeserializer.Std fromStringDeserializer_Std0 = FromStringDeserializer.findDeserializer(class0);
    assertEquals(7, FromStringDeserializer.Std.STD_PATTERN);
}",0,
project,0,test099,"public void test099() throws Throwable {
    Class<Pattern> class0 = Pattern.class;
    FromStringDeserializer.Std fromStringDeserializer_Std0 = FromStringDeserializer.findDeserializer(class0);
    assertFalse(fromStringDeserializer_Std0.isCachable());
}",0,assertTrue(fromStringDeserializer_Std0.isCachable())
project,0,test1111,"public void test1111() throws Throwable {
    Class<Charset> class0 = Charset.class;
    FromStringDeserializer.Std fromStringDeserializer_Std0 = FromStringDeserializer.findDeserializer(class0);
    assertEquals(7, FromStringDeserializer.Std.STD_PATTERN);
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    Class<Integer> class0 = Integer.class;
    FromStringDeserializer.Std fromStringDeserializer_Std0 = FromStringDeserializer.findDeserializer(class0);
    assertNull(fromStringDeserializer_Std0);
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    Class<InetAddress> class0 = InetAddress.class;
    FromStringDeserializer.Std fromStringDeserializer_Std0 = FromStringDeserializer.findDeserializer(class0);
    assertEquals(5, FromStringDeserializer.Std.STD_JAVA_TYPE);
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    Class<InetSocketAddress> class0 = InetSocketAddress.class;
    FromStringDeserializer.Std fromStringDeserializer_Std0 = FromStringDeserializer.findDeserializer(class0);
    assertEquals(6, FromStringDeserializer.Std.STD_CURRENCY);
}",0,
project,0,test1515,"public void test1515() throws Throwable {
    Class<StringBuilder> class0 = StringBuilder.class;
    FromStringDeserializer.Std fromStringDeserializer_Std0 = FromStringDeserializer.findDeserializer(class0);
    assertEquals(6, FromStringDeserializer.Std.STD_CURRENCY);
}",0,
