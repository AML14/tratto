/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 28 00:46:57 GMT 2024
 */
package com.fasterxml.jackson.databind.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.databind.util.StdDateFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.util.Date;
import java.util.Locale;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class StdDateFormat_ESTest extends StdDateFormat_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        Locale locale0 = Locale.CHINESE;
        StdDateFormat stdDateFormat0 = new StdDateFormat(timeZone0, locale0);
        stdDateFormat0.parseObject(" `OWpZ(IN0&EN{(UU");
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        StdDateFormat stdDateFormat1 = stdDateFormat0.clone();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        TimeZone timeZone0 = StdDateFormat.getDefaultTimeZone();
        MockSimpleDateFormat mockSimpleDateFormat0 = (MockSimpleDateFormat) StdDateFormat.getISO8601Format(timeZone0);
        mockSimpleDateFormat0.toLocalizedPattern();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        TimeZone timeZone0 = StdDateFormat.getDefaultTimeZone();
        MockSimpleDateFormat mockSimpleDateFormat0 = (MockSimpleDateFormat) StdDateFormat.getRFC1123Format(timeZone0);
        mockSimpleDateFormat0.toLocalizedPattern();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        TimeZone timeZone0 = stdDateFormat0.getTimeZone();
        assertNotNull(timeZone0);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        TimeZone timeZone0 = TimeZone.getDefault();
        stdDateFormat0.instance.setTimeZone(timeZone0);
        stdDateFormat0.parse("dj#o0uqt6@;'qoS");
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        StdDateFormat stdDateFormat1 = stdDateFormat0.withTimeZone((TimeZone) null);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        TimeZone timeZone0 = StdDateFormat.getDefaultTimeZone();
        Locale locale0 = Locale.PRC;
        StdDateFormat stdDateFormat0 = new StdDateFormat(timeZone0, locale0);
        StdDateFormat stdDateFormat1 = stdDateFormat0.withTimeZone(timeZone0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        TimeZone timeZone0 = TimeZone.getDefault();
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        StdDateFormat stdDateFormat1 = StdDateFormat.instance;
        StdDateFormat stdDateFormat2 = stdDateFormat1.withTimeZone(timeZone0);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        Locale locale0 = Locale.JAPANESE;
        StdDateFormat stdDateFormat1 = stdDateFormat0.withLocale(locale0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        Locale locale0 = Locale.US;
        StdDateFormat stdDateFormat1 = stdDateFormat0.withLocale(locale0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        TimeZone timeZone0 = StdDateFormat.getDefaultTimeZone();
        Locale locale0 = Locale.JAPANESE;
        Boolean boolean0 = new Boolean("");
        StdDateFormat stdDateFormat0 = new StdDateFormat(timeZone0, locale0, boolean0);
        boolean boolean1 = stdDateFormat0.isLenient();
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        boolean boolean0 = stdDateFormat0.isLenient();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        Date date0 = stdDateFormat0.parse("2014-02-14T20:21:21.320+0000");
        date0.toString();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parse("-");
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        Date date0 = stdDateFormat0.parse("00");
        date0.toString();
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parse("[");
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        ParsePosition parsePosition0 = new ParsePosition((-2868));
        stdDateFormat0.parse("2014-02-14T20:21:21.320+0000", parsePosition0);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parseObject("-0");
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parseObject(",");
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parseObject("00");
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        MockDate mockDate0 = new MockDate();
        String string0 = stdDateFormat0.instance.format((Date) mockDate0);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        String string0 = stdDateFormat0.instance.toString();
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parse("0n{|");
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parseObject("0.000");
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parseAsISO8601("000", (ParsePosition) null, false);
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parseAsISO8601("p,-B^WsU@o 5:K!Z", (ParsePosition) null, true);
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parseAsISO8601("B~4?XK17h9Z", (ParsePosition) null, true);
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parseAsISO8601("(locale: ", (ParsePosition) null, true);
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        ParsePosition parsePosition0 = new ParsePosition(57);
        stdDateFormat0.parseAsISO8601("gwjQ X-6:=>", parsePosition0, true);
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parseAsISO8601("&~A'_H\"&R<!B8sf+H$", (ParsePosition) null, true);
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parseAsISO8601("yyyy-MM-dd", (ParsePosition) null, true);
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parseAsISO8601("A##PgC'+`7C~", (ParsePosition) null, false);
    }

    @Test(timeout = 4000)
    public void test3333() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parseAsISO8601("A=##PgC'+`7C~", (ParsePosition) null, false);
    }

    @Test(timeout = 4000)
    public void test3434() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parseAsISO8601("A=##XgC'+``7C~", (ParsePosition) null, true);
    }

    @Test(timeout = 4000)
    public void test3535() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parseAsISO8601("A=##=XgC'+``CC~", (ParsePosition) null, true);
    }

    @Test(timeout = 4000)
    public void test3636() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parseAsISO8601("|0L-n Xi", (ParsePosition) null, false);
    }

    @Test(timeout = 4000)
    public void test3737() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parseAsISO8601("!%Zms4fvJzAYL& ", (ParsePosition) null, false);
    }

    @Test(timeout = 4000)
    public void test3838() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parseAsISO8601("e0a`@sXfB|", (ParsePosition) null, false);
    }

    @Test(timeout = 4000)
    public void test3939() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parseAsISO8601("`=W9p7`9@<", (ParsePosition) null, false);
    }

    @Test(timeout = 4000)
    public void test4040() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        stdDateFormat0.parseAsISO8601(",", (ParsePosition) null, false);
    }

    @Test(timeout = 4000)
    public void test4141() throws Throwable {
        StdDateFormat stdDateFormat0 = new StdDateFormat();
        ParsePosition parsePosition0 = new ParsePosition(2);
        stdDateFormat0.parseAsISO8601("yyyMM-dd", parsePosition0, false);
    }

    @Test(timeout = 4000)
    public void test4242() throws Throwable {
        StdDateFormat stdDateFormat0 = StdDateFormat.instance;
        stdDateFormat0.parse("my|Ho");
    }
}
