{
  "test3753" : {
    "methodSignature" : "public T withoutAttribute(Object key)",
    "methodName" : "withoutAttribute",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3753() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withoutAttribute((Object) null);\n}",
    "testName" : "test3753"
  },
  "test4568" : {
    "methodSignature" : "public DeserializationConfig without(DeserializationFeature feature)",
    "methodName" : "without",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4568() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, (SubtypeResolver) null, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.without(deserializationFeature0);\n}",
    "testName" : "test4568"
  },
  "test86148" : {
    "methodSignature" : "public final boolean hasSomeOfFeatures(int featureMask)",
    "methodName" : "hasSomeOfFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test86148() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, (SubtypeResolver) null, simpleMixInResolver0, rootNameLookup0);\n    boolean boolean0 = deserializationConfig0.hasSomeOfFeatures(741);\n}",
    "testName" : "test86148"
  },
  "test2025" : {
    "methodSignature" : "public ObjectMapper copy()",
    "methodName" : "copy",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2025() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.copy();\n}",
    "testName" : "test2025"
  },
  "test64111" : {
    "methodSignature" : "public DeserializationConfig without(FormatFeature feature)",
    "methodName" : "without",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test64111() throws Throwable {\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    FormatFeature[] formatFeatureArray0 = new FormatFeature[2];\n    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());\n    doReturn(123, 123, 192, 123).when(formatFeature0).getMask();\n    formatFeatureArray0[0] = formatFeature0;\n    formatFeatureArray0[1] = formatFeature0;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withFeatures(formatFeatureArray0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.without(formatFeature0);\n}",
    "testName" : "test64111"
  },
  "test75131" : {
    "methodSignature" : "public final boolean canOverrideAccessModifiers()",
    "methodName" : "canOverrideAccessModifiers",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test75131() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    MapperFeature mapperFeature0 = MapperFeature.USE_ANNOTATIONS;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(mapperFeature0, false);\n    deserializationConfig1.getAnnotationIntrospector();\n    deserializationConfig1.canOverrideAccessModifiers();\n}",
    "testName" : "test75131"
  },
  "test75130" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test75130() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    MapperFeature mapperFeature0 = MapperFeature.USE_ANNOTATIONS;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(mapperFeature0, false);\n    deserializationConfig1.getAnnotationIntrospector();\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test75130"
  },
  "test64113" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test64113() throws Throwable {\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    FormatFeature[] formatFeatureArray0 = new FormatFeature[2];\n    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());\n    doReturn(123, 123, 192, 123).when(formatFeature0).getMask();\n    formatFeatureArray0[0] = formatFeature0;\n    formatFeatureArray0[1] = formatFeature0;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withFeatures(formatFeatureArray0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.without(formatFeature0);\n    deserializationConfig2.getDeserializationFeatures();\n}",
    "testName" : "test64113"
  },
  "test64112" : {
    "methodSignature" : "public final boolean canOverrideAccessModifiers()",
    "methodName" : "canOverrideAccessModifiers",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test64112() throws Throwable {\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    FormatFeature[] formatFeatureArray0 = new FormatFeature[2];\n    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());\n    doReturn(123, 123, 192, 123).when(formatFeature0).getMask();\n    formatFeatureArray0[0] = formatFeature0;\n    formatFeatureArray0[1] = formatFeature0;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withFeatures(formatFeatureArray0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.without(formatFeature0);\n    deserializationConfig2.canOverrideAccessModifiers();\n}",
    "testName" : "test64112"
  },
  "test1216" : {
    "methodSignature" : "public abstract T withInsertedAnnotationIntrospector(AnnotationIntrospector introspector)",
    "methodName" : "withInsertedAnnotationIntrospector",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1216() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withInsertedAnnotationIntrospector((AnnotationIntrospector) null);\n}",
    "testName" : "test1216"
  },
  "test4161" : {
    "methodSignature" : "public DeserializationConfig with(DeserializationFeature first, DeserializationFeature... features)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4161() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.WRAP_EXCEPTIONS;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[1];\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(deserializationFeature0, deserializationFeatureArray0);\n}",
    "testName" : "test4161"
  },
  "test83145" : {
    "methodSignature" : "public final boolean hasDeserializationFeatures(int featureMask)",
    "methodName" : "hasDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test83145() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, (SubtypeResolver) null, simpleMixInResolver0, rootNameLookup0);\n    boolean boolean0 = deserializationConfig0.hasDeserializationFeatures(1187);\n}",
    "testName" : "test83145"
  },
  "test1621" : {
    "methodSignature" : "public LinkedNode<DeserializationProblemHandler> getProblemHandlers()",
    "methodName" : "getProblemHandlers",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1621() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    LinkedNode<DeserializationProblemHandler> linkedNode0 = deserializationConfig0.getProblemHandlers();\n}",
    "testName" : "test1621"
  },
  "test4974" : {
    "methodSignature" : "public final boolean isAnnotationProcessingEnabled()",
    "methodName" : "isAnnotationProcessingEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4974() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[1];\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES;\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withoutFeatures(deserializationFeatureArray0);\n    deserializationConfig1.isAnnotationProcessingEnabled();\n}",
    "testName" : "test4974"
  },
  "test62108" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test62108() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    FormatFeature[] formatFeatureArray0 = new FormatFeature[5];\n    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());\n    doReturn(2403, 2403, 579, 1024, 579).when(formatFeature0).getMask();\n    formatFeatureArray0[0] = formatFeature0;\n    formatFeatureArray0[1] = formatFeature0;\n    formatFeatureArray0[2] = formatFeature0;\n    formatFeatureArray0[3] = formatFeature0;\n    formatFeatureArray0[4] = formatFeature0;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withFeatures(formatFeatureArray0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.withoutFeatures(formatFeatureArray0);\n    deserializationConfig2.getDeserializationFeatures();\n}",
    "testName" : "test62108"
  },
  "test3244" : {
    "methodSignature" : "public DeserializationConfig with(SubtypeResolver str)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3244() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with((SubtypeResolver) stdSubtypeResolver0);\n}",
    "testName" : "test3244"
  },
  "test4059" : {
    "methodSignature" : "public final boolean shouldSortPropertiesAlphabetically()",
    "methodName" : "shouldSortPropertiesAlphabetically",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4059() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_READING_DUP_TREE_KEY;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[0];\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(deserializationFeature0, deserializationFeatureArray0);\n    deserializationConfig1.shouldSortPropertiesAlphabetically();\n}",
    "testName" : "test4059"
  },
  "test62109" : {
    "methodSignature" : "public final boolean isAnnotationProcessingEnabled()",
    "methodName" : "isAnnotationProcessingEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test62109() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    FormatFeature[] formatFeatureArray0 = new FormatFeature[5];\n    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());\n    doReturn(2403, 2403, 579, 1024, 579).when(formatFeature0).getMask();\n    formatFeatureArray0[0] = formatFeature0;\n    formatFeatureArray0[1] = formatFeature0;\n    formatFeatureArray0[2] = formatFeature0;\n    formatFeatureArray0[3] = formatFeature0;\n    formatFeatureArray0[4] = formatFeature0;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withFeatures(formatFeatureArray0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.withoutFeatures(formatFeatureArray0);\n    deserializationConfig2.isAnnotationProcessingEnabled();\n}",
    "testName" : "test62109"
  },
  "test4973" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4973() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[1];\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES;\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withoutFeatures(deserializationFeatureArray0);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test4973"
  },
  "test2431" : {
    "methodSignature" : "protected BaseSettings getBaseSettings()",
    "methodName" : "getBaseSettings",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2431() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    BaseSettings baseSettings1 = deserializationConfig0.getBaseSettings();\n}",
    "testName" : "test2431"
  },
  "test4058" : {
    "methodSignature" : "public final boolean isAnnotationProcessingEnabled()",
    "methodName" : "isAnnotationProcessingEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4058() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_READING_DUP_TREE_KEY;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[0];\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(deserializationFeature0, deserializationFeatureArray0);\n    deserializationConfig1.isAnnotationProcessingEnabled();\n}",
    "testName" : "test4058"
  },
  "test2838" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2838() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    MapperFeature[] mapperFeatureArray0 = new MapperFeature[2];\n    MapperFeature mapperFeature0 = MapperFeature.AUTO_DETECT_FIELDS;\n    mapperFeatureArray0[0] = mapperFeature0;\n    MapperFeature mapperFeature1 = MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES;\n    mapperFeatureArray0[1] = mapperFeature1;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(mapperFeatureArray0);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test2838"
  },
  "test2839" : {
    "methodSignature" : "public final boolean isAnnotationProcessingEnabled()",
    "methodName" : "isAnnotationProcessingEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2839() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    MapperFeature[] mapperFeatureArray0 = new MapperFeature[2];\n    MapperFeature mapperFeature0 = MapperFeature.AUTO_DETECT_FIELDS;\n    mapperFeatureArray0[0] = mapperFeature0;\n    MapperFeature mapperFeature1 = MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES;\n    mapperFeatureArray0[1] = mapperFeature1;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(mapperFeatureArray0);\n    deserializationConfig1.isAnnotationProcessingEnabled();\n}",
    "testName" : "test2839"
  },
  "test0810" : {
    "methodSignature" : "public T withAttributes(Map<?, ?> attributes)",
    "methodName" : "withAttributes",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0810() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    HashMap<ObjectIdResolver, SettableBeanProperty> hashMap0 = new HashMap<ObjectIdResolver, SettableBeanProperty>();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withAttributes(hashMap0);\n}",
    "testName" : "test0810"
  },
  "test0811" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0811() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    HashMap<ObjectIdResolver, SettableBeanProperty> hashMap0 = new HashMap<ObjectIdResolver, SettableBeanProperty>();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withAttributes(hashMap0);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test0811"
  },
  "test75132" : {
    "methodSignature" : "public final boolean isAnnotationProcessingEnabled()",
    "methodName" : "isAnnotationProcessingEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test75132() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    MapperFeature mapperFeature0 = MapperFeature.USE_ANNOTATIONS;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(mapperFeature0, false);\n    deserializationConfig1.getAnnotationIntrospector();\n    deserializationConfig1.isAnnotationProcessingEnabled();\n}",
    "testName" : "test75132"
  },
  "test5382" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5382() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    JsonParser.Feature[] jsonParser_FeatureArray0 = new JsonParser.Feature[1];\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.AUTO_CLOSE_SOURCE;\n    jsonParser_FeatureArray0[0] = jsonParser_Feature0;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withFeatures(jsonParser_FeatureArray0);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test5382"
  },
  "test70125" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test70125() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withHandler((DeserializationProblemHandler) null);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.withNoProblemHandlers();\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test70125"
  },
  "test5383" : {
    "methodSignature" : "public final boolean isAnnotationProcessingEnabled()",
    "methodName" : "isAnnotationProcessingEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5383() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    JsonParser.Feature[] jsonParser_FeatureArray0 = new JsonParser.Feature[1];\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.AUTO_CLOSE_SOURCE;\n    jsonParser_FeatureArray0[0] = jsonParser_Feature0;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withFeatures(jsonParser_FeatureArray0);\n    deserializationConfig1.isAnnotationProcessingEnabled();\n}",
    "testName" : "test5383"
  },
  "test70124" : {
    "methodSignature" : "public DeserializationConfig withNoProblemHandlers()",
    "methodName" : "withNoProblemHandlers",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test70124() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withHandler((DeserializationProblemHandler) null);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.withNoProblemHandlers();\n}",
    "testName" : "test70124"
  },
  "test5381" : {
    "methodSignature" : "public final boolean shouldSortPropertiesAlphabetically()",
    "methodName" : "shouldSortPropertiesAlphabetically",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5381() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    JsonParser.Feature[] jsonParser_FeatureArray0 = new JsonParser.Feature[1];\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.AUTO_CLOSE_SOURCE;\n    jsonParser_FeatureArray0[0] = jsonParser_Feature0;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withFeatures(jsonParser_FeatureArray0);\n    deserializationConfig1.shouldSortPropertiesAlphabetically();\n}",
    "testName" : "test5381"
  },
  "test61103" : {
    "methodSignature" : "public DeserializationConfig with(FormatFeature feature)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test61103() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 322).when(formatFeature0).getMask();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(formatFeature0);\n}",
    "testName" : "test61103"
  },
  "test80140" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test80140() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    PropertyName propertyName0 = PropertyName.construct(\"\", \"\");\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withRootName(propertyName0);\n    boolean boolean0 = deserializationConfig1.useRootWrapping();\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test80140"
  },
  "test1114" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1114() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withAppendedAnnotationIntrospector(annotationIntrospector0);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test1114"
  },
  "test2840" : {
    "methodSignature" : "public final boolean shouldSortPropertiesAlphabetically()",
    "methodName" : "shouldSortPropertiesAlphabetically",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2840() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    MapperFeature[] mapperFeatureArray0 = new MapperFeature[2];\n    MapperFeature mapperFeature0 = MapperFeature.AUTO_DETECT_FIELDS;\n    mapperFeatureArray0[0] = mapperFeature0;\n    MapperFeature mapperFeature1 = MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES;\n    mapperFeatureArray0[1] = mapperFeature1;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(mapperFeatureArray0);\n    deserializationConfig1.shouldSortPropertiesAlphabetically();\n}",
    "testName" : "test2840"
  },
  "test59101" : {
    "methodSignature" : "public final boolean shouldSortPropertiesAlphabetically()",
    "methodName" : "shouldSortPropertiesAlphabetically",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test59101() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());\n    doReturn(3, 3).when(formatFeature0).getMask();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(formatFeature0);\n    deserializationConfig1.shouldSortPropertiesAlphabetically();\n}",
    "testName" : "test59101"
  },
  "test1115" : {
    "methodSignature" : "public abstract T withAppendedAnnotationIntrospector(AnnotationIntrospector introspector)",
    "methodName" : "withAppendedAnnotationIntrospector",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1115() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withAppendedAnnotationIntrospector(annotationIntrospector0);\n}",
    "testName" : "test1115"
  },
  "test3651" : {
    "methodSignature" : "public DeserializationConfig withView(Class<?> view)",
    "methodName" : "withView",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3651() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    Class<Object> class0 = Object.class;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withView(class0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.withView(class0);\n}",
    "testName" : "test3651"
  },
  "test4466" : {
    "methodSignature" : "public final boolean isAnnotationProcessingEnabled()",
    "methodName" : "isAnnotationProcessingEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4466() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.EAGER_DESERIALIZER_FETCH;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.without(deserializationFeature0);\n    deserializationConfig1.isAnnotationProcessingEnabled();\n}",
    "testName" : "test4466"
  },
  "test5797" : {
    "methodSignature" : "public final boolean isAnnotationProcessingEnabled()",
    "methodName" : "isAnnotationProcessingEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5797() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_UNQUOTED_CONTROL_CHARS;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(jsonParser_Feature0);\n    JsonParser.Feature[] jsonParser_FeatureArray0 = new JsonParser.Feature[2];\n    jsonParser_FeatureArray0[0] = jsonParser_Feature0;\n    jsonParser_FeatureArray0[1] = jsonParser_Feature0;\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.withoutFeatures(jsonParser_FeatureArray0);\n    deserializationConfig2.isAnnotationProcessingEnabled();\n}",
    "testName" : "test5797"
  },
  "test4467" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4467() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.EAGER_DESERIALIZER_FETCH;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.without(deserializationFeature0);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test4467"
  },
  "test5795" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5795() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_UNQUOTED_CONTROL_CHARS;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(jsonParser_Feature0);\n    JsonParser.Feature[] jsonParser_FeatureArray0 = new JsonParser.Feature[2];\n    jsonParser_FeatureArray0[0] = jsonParser_Feature0;\n    jsonParser_FeatureArray0[1] = jsonParser_Feature0;\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.withoutFeatures(jsonParser_FeatureArray0);\n    deserializationConfig2.getDeserializationFeatures();\n}",
    "testName" : "test5795"
  },
  "test59100" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test59100() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());\n    doReturn(3, 3).when(formatFeature0).getMask();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(formatFeature0);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test59100"
  },
  "test3652" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3652() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    Class<Object> class0 = Object.class;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withView(class0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.withView(class0);\n    deserializationConfig2.getDeserializationFeatures();\n}",
    "testName" : "test3652"
  },
  "test011" : {
    "methodSignature" : "public abstract T with(HandlerInstantiator hi)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with((HandlerInstantiator) null);\n}",
    "testName" : "test011"
  },
  "test1519" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1519() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    BasicClassIntrospector basicClassIntrospector0 = new BasicClassIntrospector();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with((ClassIntrospector) basicClassIntrospector0);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test1519"
  },
  "test66118" : {
    "methodSignature" : "public final boolean isAnnotationProcessingEnabled()",
    "methodName" : "isAnnotationProcessingEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test66118() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    FormatFeature[] formatFeatureArray0 = new FormatFeature[5];\n    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());\n    doReturn(2403, 2403, 579, 1024, 579).when(formatFeature0).getMask();\n    formatFeatureArray0[0] = formatFeature0;\n    formatFeatureArray0[1] = formatFeature0;\n    formatFeatureArray0[2] = formatFeature0;\n    formatFeatureArray0[3] = formatFeature0;\n    formatFeatureArray0[4] = formatFeature0;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withoutFeatures(formatFeatureArray0);\n    deserializationConfig1.isAnnotationProcessingEnabled();\n}",
    "testName" : "test66118"
  },
  "test61105" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test61105() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 322).when(formatFeature0).getMask();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(formatFeature0);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test61105"
  },
  "test61104" : {
    "methodSignature" : "public final boolean isAnnotationProcessingEnabled()",
    "methodName" : "isAnnotationProcessingEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test61104() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 322).when(formatFeature0).getMask();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(formatFeature0);\n    deserializationConfig1.isAnnotationProcessingEnabled();\n}",
    "testName" : "test61104"
  },
  "test66117" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test66117() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    FormatFeature[] formatFeatureArray0 = new FormatFeature[5];\n    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());\n    doReturn(2403, 2403, 579, 1024, 579).when(formatFeature0).getMask();\n    formatFeatureArray0[0] = formatFeature0;\n    formatFeatureArray0[1] = formatFeature0;\n    formatFeatureArray0[2] = formatFeature0;\n    formatFeatureArray0[3] = formatFeature0;\n    formatFeatureArray0[4] = formatFeature0;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withoutFeatures(formatFeatureArray0);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test66117"
  },
  "test88150" : {
    "methodSignature" : "public TypeDeserializer findTypeDeserializer(JavaType baseType) throws JsonMappingException",
    "methodName" : "findTypeDeserializer",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test88150() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    BasicClassIntrospector basicClassIntrospector0 = new BasicClassIntrospector();\n    BaseSettings baseSettings1 = baseSettings0.withClassIntrospector(basicClassIntrospector0);\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings1, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    JavaType javaType0 = TypeFactory.unknownType();\n    TypeDeserializer typeDeserializer0 = deserializationConfig0.findTypeDeserializer(javaType0);\n}",
    "testName" : "test88150"
  },
  "test4060" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4060() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_READING_DUP_TREE_KEY;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[0];\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(deserializationFeature0, deserializationFeatureArray0);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test4060"
  },
  "test1520" : {
    "methodSignature" : "public abstract T with(ClassIntrospector ci)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1520() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    BasicClassIntrospector basicClassIntrospector0 = new BasicClassIntrospector();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with((ClassIntrospector) basicClassIntrospector0);\n}",
    "testName" : "test1520"
  },
  "test85147" : {
    "methodSignature" : "public final boolean hasSomeOfFeatures(int featureMask)",
    "methodName" : "hasSomeOfFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test85147() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    boolean boolean0 = deserializationConfig0.hasSomeOfFeatures(1);\n}",
    "testName" : "test85147"
  },
  "test2330" : {
    "methodSignature" : "public abstract T with(TypeFactory typeFactory)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2330() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(typeFactory0);\n}",
    "testName" : "test2330"
  },
  "test4872" : {
    "methodSignature" : "public DeserializationConfig without(DeserializationFeature first, DeserializationFeature... features)",
    "methodName" : "without",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4872() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[0];\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.without(deserializationFeature0, deserializationFeatureArray0);\n}",
    "testName" : "test4872"
  },
  "test000" : {
    "methodSignature" : "public <T extends BeanDescription> T introspectForCreation(JavaType type)",
    "methodName" : "introspectForCreation",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    deserializationConfig0.introspectForCreation((JavaType) null);\n}",
    "testName" : "test000"
  },
  "test1924" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1924() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationConfig deserializationConfig1 = new DeserializationConfig(deserializationConfig0, (SimpleMixInResolver) null);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test1924"
  },
  "test3549" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3549() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    PropertyName propertyName0 = PropertyName.construct(\"JSON\", \"JSON\");\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withRootName(propertyName0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.withRootName(propertyName0);\n    deserializationConfig2.getDeserializationFeatures();\n}",
    "testName" : "test3549"
  },
  "test80139" : {
    "methodSignature" : "public boolean useRootWrapping()",
    "methodName" : "useRootWrapping",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test80139() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    PropertyName propertyName0 = PropertyName.construct(\"\", \"\");\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withRootName(propertyName0);\n    boolean boolean0 = deserializationConfig1.useRootWrapping();\n}",
    "testName" : "test80139"
  },
  "test69121" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test69121() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withHandler((DeserializationProblemHandler) null);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.withHandler((DeserializationProblemHandler) null);\n    deserializationConfig2.getDeserializationFeatures();\n}",
    "testName" : "test69121"
  },
  "test079" : {
    "methodSignature" : "public ObjectReader with(JsonNodeFactory f)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<ObjectReader> class0 = ObjectReader.class;\n    ObjectReader objectReader0 = objectMapper0.readerFor(class0);\n    ObjectReader objectReader1 = objectReader0.with((JsonNodeFactory) null);\n}",
    "testName" : "test079"
  },
  "test69122" : {
    "methodSignature" : "public DeserializationConfig withHandler(DeserializationProblemHandler h)",
    "methodName" : "withHandler",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test69122() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withHandler((DeserializationProblemHandler) null);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.withHandler((DeserializationProblemHandler) null);\n}",
    "testName" : "test69122"
  },
  "test3143" : {
    "methodSignature" : "public int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3143() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    ObjectMapper objectMapper1 = objectMapper0.setSubtypeResolver(stdSubtypeResolver0);\n    objectMapper1.mixInCount();\n}",
    "testName" : "test3143"
  },
  "test82143" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test82143() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.AUTO_CLOSE_SOURCE;\n    JsonFactory jsonFactory0 = new JsonFactory();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(jsonParser_Feature0);\n    boolean boolean0 = deserializationConfig1.isEnabled(jsonParser_Feature0, jsonFactory0);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test82143"
  },
  "test82144" : {
    "methodSignature" : "public final boolean isEnabled(JsonParser.Feature f, JsonFactory factory)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test82144() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.AUTO_CLOSE_SOURCE;\n    JsonFactory jsonFactory0 = new JsonFactory();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(jsonParser_Feature0);\n    boolean boolean0 = deserializationConfig1.isEnabled(jsonParser_Feature0, jsonFactory0);\n}",
    "testName" : "test82144"
  },
  "test82142" : {
    "methodSignature" : "public final boolean isAnnotationProcessingEnabled()",
    "methodName" : "isAnnotationProcessingEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test82142() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.AUTO_CLOSE_SOURCE;\n    JsonFactory jsonFactory0 = new JsonFactory();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(jsonParser_Feature0);\n    boolean boolean0 = deserializationConfig1.isEnabled(jsonParser_Feature0, jsonFactory0);\n    deserializationConfig1.isAnnotationProcessingEnabled();\n}",
    "testName" : "test82142"
  },
  "test033" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    Locale locale0 = Locale.KOREA;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(locale0);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test033"
  },
  "test034" : {
    "methodSignature" : "public abstract T with(Locale l)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    Locale locale0 = Locale.KOREA;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(locale0);\n}",
    "testName" : "test034"
  },
  "test2229" : {
    "methodSignature" : "public abstract T with(DateFormat df)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2229() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DateFormat dateFormat0 = MockDateFormat.getTimeInstance();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(dateFormat0);\n}",
    "testName" : "test2229"
  },
  "test2228" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2228() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DateFormat dateFormat0 = MockDateFormat.getTimeInstance();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(dateFormat0);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test2228"
  },
  "test3957" : {
    "methodSignature" : "public DeserializationConfig with(DeserializationFeature feature)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3957() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.EAGER_DESERIALIZER_FETCH;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(deserializationFeature0);\n}",
    "testName" : "test3957"
  },
  "test68120" : {
    "methodSignature" : "public DeserializationConfig with(JsonNodeFactory f)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test68120() throws Throwable {\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(jsonNodeFactory0);\n}",
    "testName" : "test68120"
  },
  "test5177" : {
    "methodSignature" : "public DeserializationConfig with(JsonParser.Feature feature)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5177() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.STRICT_DUPLICATE_DETECTION;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(jsonParser_Feature0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.with(jsonParser_Feature0);\n}",
    "testName" : "test5177"
  },
  "test5694" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5694() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_UNQUOTED_CONTROL_CHARS;\n    JsonParser.Feature[] jsonParser_FeatureArray0 = new JsonParser.Feature[2];\n    jsonParser_FeatureArray0[0] = jsonParser_Feature0;\n    jsonParser_FeatureArray0[1] = jsonParser_Feature0;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withoutFeatures(jsonParser_FeatureArray0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    boolean boolean0 = deserializationConfig1.isEnabled(jsonParser_Feature0, jsonFactory0);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test5694"
  },
  "test5178" : {
    "methodSignature" : "public final boolean isAnnotationProcessingEnabled()",
    "methodName" : "isAnnotationProcessingEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5178() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.STRICT_DUPLICATE_DETECTION;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(jsonParser_Feature0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.with(jsonParser_Feature0);\n    deserializationConfig2.isAnnotationProcessingEnabled();\n}",
    "testName" : "test5178"
  },
  "test3550" : {
    "methodSignature" : "public boolean useRootWrapping()",
    "methodName" : "useRootWrapping",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3550() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    PropertyName propertyName0 = PropertyName.construct(\"JSON\", \"JSON\");\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withRootName(propertyName0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.withRootName(propertyName0);\n    deserializationConfig2.useRootWrapping();\n}",
    "testName" : "test3550"
  },
  "test5176" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5176() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.STRICT_DUPLICATE_DETECTION;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(jsonParser_Feature0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.with(jsonParser_Feature0);\n    deserializationConfig2.getDeserializationFeatures();\n}",
    "testName" : "test5176"
  },
  "test5693" : {
    "methodSignature" : "public final boolean isAnnotationProcessingEnabled()",
    "methodName" : "isAnnotationProcessingEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5693() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_UNQUOTED_CONTROL_CHARS;\n    JsonParser.Feature[] jsonParser_FeatureArray0 = new JsonParser.Feature[2];\n    jsonParser_FeatureArray0[0] = jsonParser_Feature0;\n    jsonParser_FeatureArray0[1] = jsonParser_Feature0;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withoutFeatures(jsonParser_FeatureArray0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    boolean boolean0 = deserializationConfig1.isEnabled(jsonParser_Feature0, jsonFactory0);\n    deserializationConfig1.isAnnotationProcessingEnabled();\n}",
    "testName" : "test5693"
  },
  "test71126" : {
    "methodSignature" : "public DeserializationConfig withNoProblemHandlers()",
    "methodName" : "withNoProblemHandlers",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test71126() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withNoProblemHandlers();\n}",
    "testName" : "test71126"
  },
  "test5691" : {
    "methodSignature" : "public final boolean isEnabled(JsonParser.Feature f, JsonFactory factory)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5691() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_UNQUOTED_CONTROL_CHARS;\n    JsonParser.Feature[] jsonParser_FeatureArray0 = new JsonParser.Feature[2];\n    jsonParser_FeatureArray0[0] = jsonParser_Feature0;\n    jsonParser_FeatureArray0[1] = jsonParser_Feature0;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withoutFeatures(jsonParser_FeatureArray0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    boolean boolean0 = deserializationConfig1.isEnabled(jsonParser_Feature0, jsonFactory0);\n}",
    "testName" : "test5691"
  },
  "test2634" : {
    "methodSignature" : "public abstract T with(TimeZone tz)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2634() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    TimeZone timeZone0 = TimeZone.getDefault();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(timeZone0);\n}",
    "testName" : "test2634"
  },
  "test3448" : {
    "methodSignature" : "public DeserializationConfig withRootName(PropertyName rootName)",
    "methodName" : "withRootName",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3448() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withRootName((PropertyName) null);\n}",
    "testName" : "test3448"
  },
  "test87149" : {
    "methodSignature" : "public TypeDeserializer findTypeDeserializer(JavaType baseType) throws JsonMappingException",
    "methodName" : "findTypeDeserializer",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test87149() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    BasicClassIntrospector basicClassIntrospector0 = new BasicClassIntrospector();\n    BaseSettings baseSettings1 = baseSettings0.withClassIntrospector(basicClassIntrospector0);\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdTypeResolverBuilder stdTypeResolverBuilder0 = StdTypeResolverBuilder.noTypeInfoBuilder();\n    BaseSettings baseSettings2 = baseSettings1.withTypeResolverBuilder(stdTypeResolverBuilder0);\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings2, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    JavaType javaType0 = TypeFactory.unknownType();\n    TypeDeserializer typeDeserializer0 = deserializationConfig0.findTypeDeserializer(javaType0);\n}",
    "testName" : "test87149"
  },
  "test5588" : {
    "methodSignature" : "public DeserializationConfig without(JsonParser.Feature feature)",
    "methodName" : "without",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5588() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.without(jsonParser_Feature0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.without(jsonParser_Feature0);\n}",
    "testName" : "test5588"
  },
  "test5587" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5587() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.without(jsonParser_Feature0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.without(jsonParser_Feature0);\n    deserializationConfig2.getDeserializationFeatures();\n}",
    "testName" : "test5587"
  },
  "test022" : {
    "methodSignature" : "public boolean isFloat()",
    "methodName" : "isFloat",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ArrayNode arrayNode0 = objectMapper0.createArrayNode();\n    arrayNode0.isFloat();\n}",
    "testName" : "test022"
  },
  "test2635" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2635() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    TimeZone timeZone0 = TimeZone.getDefault();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(timeZone0);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test2635"
  },
  "test1823" : {
    "methodSignature" : "public DeserializationConfig with(VisibilityChecker<?> vc)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1823() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    VisibilityChecker<?> visibilityChecker0 = deserializationConfig0.getDefaultVisibilityChecker();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(visibilityChecker0);\n}",
    "testName" : "test1823"
  },
  "test79137" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test79137() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    PropertyName propertyName0 = PropertyName.construct(\"\", (String) null);\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withRootName(propertyName0);\n    boolean boolean0 = deserializationConfig1.useRootWrapping();\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test79137"
  },
  "test4771" : {
    "methodSignature" : "public DeserializationConfig without(DeserializationFeature first, DeserializationFeature... features)",
    "methodName" : "without",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4771() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_FLOAT_AS_INT;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[1];\n    deserializationConfig0.without(deserializationFeature0, deserializationFeatureArray0);\n}",
    "testName" : "test4771"
  },
  "test79136" : {
    "methodSignature" : "public boolean useRootWrapping()",
    "methodName" : "useRootWrapping",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test79136() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    PropertyName propertyName0 = PropertyName.construct(\"\", (String) null);\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withRootName(propertyName0);\n    boolean boolean0 = deserializationConfig1.useRootWrapping();\n}",
    "testName" : "test79136"
  },
  "test74129" : {
    "methodSignature" : "public void initialize(JsonParser p)",
    "methodName" : "initialize",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test74129() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());\n    doReturn((-1), (-1)).when(formatFeature0).getMask();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.without(formatFeature0);\n    deserializationConfig1.initialize((JsonParser) null);\n}",
    "testName" : "test74129"
  },
  "test2126" : {
    "methodSignature" : "public abstract T with(Base64Variant base64)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2126() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with((Base64Variant) null);\n}",
    "testName" : "test2126"
  },
  "test5999" : {
    "methodSignature" : "public final boolean isAnnotationProcessingEnabled()",
    "methodName" : "isAnnotationProcessingEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5999() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());\n    doReturn(3, 3).when(formatFeature0).getMask();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(formatFeature0);\n    deserializationConfig1.isAnnotationProcessingEnabled();\n}",
    "testName" : "test5999"
  },
  "test84146" : {
    "methodSignature" : "public final boolean hasDeserializationFeatures(int featureMask)",
    "methodName" : "hasDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test84146() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, (SubtypeResolver) null, simpleMixInResolver0, rootNameLookup0);\n    boolean boolean0 = deserializationConfig0.hasDeserializationFeatures(10496);\n}",
    "testName" : "test84146"
  },
  "test4669" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4669() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_FLOAT_AS_INT;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[0];\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.without(deserializationFeature0, deserializationFeatureArray0);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test4669"
  },
  "test3855" : {
    "methodSignature" : "public final boolean isAnnotationProcessingEnabled()",
    "methodName" : "isAnnotationProcessingEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3855() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(deserializationFeature0);\n    deserializationConfig1.isAnnotationProcessingEnabled();\n}",
    "testName" : "test3855"
  },
  "test2127" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2127() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with((Base64Variant) null);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test2127"
  },
  "test3854" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3854() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(deserializationFeature0);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test3854"
  },
  "test3856" : {
    "methodSignature" : "public final boolean shouldSortPropertiesAlphabetically()",
    "methodName" : "shouldSortPropertiesAlphabetically",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3856() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(deserializationFeature0);\n    deserializationConfig1.shouldSortPropertiesAlphabetically();\n}",
    "testName" : "test3856"
  },
  "test1317" : {
    "methodSignature" : "public ObjectMapper disableDefaultTyping()",
    "methodName" : "disableDefaultTyping",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1317() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();\n}",
    "testName" : "test1317"
  },
  "test046" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test046() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    PropertyAccessor propertyAccessor0 = PropertyAccessor.CREATOR;\n    JsonAutoDetect.Visibility jsonAutoDetect_Visibility0 = JsonAutoDetect.Visibility.NON_PRIVATE;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withVisibility(propertyAccessor0, jsonAutoDetect_Visibility0);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test046"
  },
  "test4264" : {
    "methodSignature" : "public final boolean isAnnotationProcessingEnabled()",
    "methodName" : "isAnnotationProcessingEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4264() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[1];\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY;\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withFeatures(deserializationFeatureArray0);\n    deserializationConfig1.isAnnotationProcessingEnabled();\n}",
    "testName" : "test4264"
  },
  "test4262" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4262() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[1];\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY;\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withFeatures(deserializationFeatureArray0);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test4262"
  },
  "test4263" : {
    "methodSignature" : "public final boolean canOverrideAccessModifiers()",
    "methodName" : "canOverrideAccessModifiers",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4263() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[1];\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY;\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withFeatures(deserializationFeatureArray0);\n    deserializationConfig1.canOverrideAccessModifiers();\n}",
    "testName" : "test4263"
  },
  "test5590" : {
    "methodSignature" : "public final boolean isAnnotationProcessingEnabled()",
    "methodName" : "isAnnotationProcessingEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5590() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.without(jsonParser_Feature0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.without(jsonParser_Feature0);\n    deserializationConfig2.isAnnotationProcessingEnabled();\n}",
    "testName" : "test5590"
  },
  "test73128" : {
    "methodSignature" : "public void initialize(JsonParser p)",
    "methodName" : "initialize",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test73128() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_UNQUOTED_CONTROL_CHARS;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(jsonParser_Feature0);\n    deserializationConfig1.initialize((JsonParser) null);\n}",
    "testName" : "test73128"
  },
  "test2533" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2533() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with((AnnotationIntrospector) null);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test2533"
  },
  "test3347" : {
    "methodSignature" : "public boolean useRootWrapping()",
    "methodName" : "useRootWrapping",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3347() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    PropertyName propertyName0 = PropertyName.construct(\"JSON\", \"JSON\");\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withRootName(propertyName0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.withRootName((PropertyName) null);\n    deserializationConfig1.useRootWrapping();\n}",
    "testName" : "test3347"
  },
  "test60102" : {
    "methodSignature" : "public DeserializationConfig with(FormatFeature feature)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test60102() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0).when(formatFeature0).getMask();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(formatFeature0);\n}",
    "testName" : "test60102"
  },
  "test81141" : {
    "methodSignature" : "public final boolean isEnabled(JsonParser.Feature f, JsonFactory factory)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test81141() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_SINGLE_QUOTES;\n    boolean boolean0 = deserializationConfig0.isEnabled(jsonParser_Feature0, jsonFactory0);\n}",
    "testName" : "test81141"
  },
  "test2532" : {
    "methodSignature" : "public abstract T with(AnnotationIntrospector ai)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2532() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with((AnnotationIntrospector) null);\n}",
    "testName" : "test2532"
  },
  "test3346" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3346() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    PropertyName propertyName0 = PropertyName.construct(\"JSON\", \"JSON\");\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withRootName(propertyName0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.withRootName((PropertyName) null);\n    deserializationConfig1.getDeserializationFeatures();\n}",
    "testName" : "test3346"
  },
  "test3345" : {
    "methodSignature" : "public boolean useRootWrapping()",
    "methodName" : "useRootWrapping",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3345() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    PropertyName propertyName0 = PropertyName.construct(\"JSON\", \"JSON\");\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withRootName(propertyName0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.withRootName((PropertyName) null);\n    deserializationConfig2.useRootWrapping();\n}",
    "testName" : "test3345"
  },
  "test0912" : {
    "methodSignature" : "public <T extends BeanDescription> T introspectForBuilder(JavaType type)",
    "methodName" : "introspectForBuilder",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0912() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    deserializationConfig0.introspectForBuilder((JavaType) null);\n}",
    "testName" : "test0912"
  },
  "test045" : {
    "methodSignature" : "public DeserializationConfig withVisibility(PropertyAccessor forMethod, JsonAutoDetect.Visibility visibility)",
    "methodName" : "withVisibility",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test045() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    PropertyAccessor propertyAccessor0 = PropertyAccessor.CREATOR;\n    JsonAutoDetect.Visibility jsonAutoDetect_Visibility0 = JsonAutoDetect.Visibility.NON_PRIVATE;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.withVisibility(propertyAccessor0, jsonAutoDetect_Visibility0);\n}",
    "testName" : "test045"
  },
  "test1722" : {
    "methodSignature" : "public abstract T with(PropertyNamingStrategy strategy)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1722() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with((PropertyNamingStrategy) null);\n}",
    "testName" : "test1722"
  },
  "test65115" : {
    "methodSignature" : "public DeserializationConfig without(FormatFeature feature)",
    "methodName" : "without",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test65115() throws Throwable {\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0).when(formatFeature0).getMask();\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.without(formatFeature0);\n}",
    "testName" : "test65115"
  },
  "test5485" : {
    "methodSignature" : "public final boolean canOverrideAccessModifiers()",
    "methodName" : "canOverrideAccessModifiers",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5485() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(jsonParser_Feature0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.without(jsonParser_Feature0);\n    deserializationConfig2.canOverrideAccessModifiers();\n}",
    "testName" : "test5485"
  },
  "test5486" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5486() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(jsonParser_Feature0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.without(jsonParser_Feature0);\n    deserializationConfig2.getDeserializationFeatures();\n}",
    "testName" : "test5486"
  },
  "test4670" : {
    "methodSignature" : "public final boolean isAnnotationProcessingEnabled()",
    "methodName" : "isAnnotationProcessingEnabled",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4670() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_FLOAT_AS_INT;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[0];\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.without(deserializationFeature0, deserializationFeatureArray0);\n    deserializationConfig1.isAnnotationProcessingEnabled();\n}",
    "testName" : "test4670"
  },
  "test5484" : {
    "methodSignature" : "public DeserializationConfig without(JsonParser.Feature feature)",
    "methodName" : "without",
    "className" : "com.fasterxml.jackson.databind.DeserializationConfig",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5484() throws Throwable {\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER;\n    DeserializationConfig deserializationConfig1 = deserializationConfig0.with(jsonParser_Feature0);\n    DeserializationConfig deserializationConfig2 = deserializationConfig1.without(jsonParser_Feature0);\n}",
    "testName" : "test5484"
  }
}