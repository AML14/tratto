com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test000() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = (JacksonAnnotationIntrospector) ObjectMapper.DEFAULT_ANNOTATION_INTROSPECTOR;
    BaseSettings baseSettings1 = baseSettings0.withInsertedAnnotationIntrospector(jacksonAnnotationIntrospector0);
    PropertyNamingStrategy.SnakeCaseStrategy propertyNamingStrategy_SnakeCaseStrategy0 = (PropertyNamingStrategy.SnakeCaseStrategy) PropertyNamingStrategy.SNAKE_CASE;
    baseSettings0.withPropertyNamingStrategy(propertyNamingStrategy_SnakeCaseStrategy0);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    BaseSettings baseSettings2 = baseSettings1.withTypeFactory(typeFactory0);
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = null;
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    StdSubtypeResolver stdSubtypeResolver1 = new StdSubtypeResolver();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings2, stdSubtypeResolver1, (SimpleMixInResolver) null, rootNameLookup0);
    SerializationConfig serializationConfig1 = new SerializationConfig(serializationConfig0, (ContextAttributes) null);
    SerializationConfig serializationConfig2 = new SerializationConfig(serializationConfig1, (SimpleMixInResolver) null, rootNameLookup0);
    Class<String> class0 = String.class;
    serializationConfig1.introspectDirectClassAnnotations(class0);
    SerializationConfig serializationConfig3 = null;
    serializationConfig3 = new SerializationConfig(serializationConfig0, simpleMixInResolver0);
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.AssignExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.AssignExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test022() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, (RootNameLookup) null);
    serializationConfig0.useRootWrapping();
    serializationConfig0.with((Base64Variant) null);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test033() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);
    SerializationConfig serializationConfig1 = new SerializationConfig(serializationConfig0, (SimpleMixInResolver) null);
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.VariableDeclarationExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.VariableDeclarationExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test055() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);
    SerializationConfig serializationConfig1 = new SerializationConfig(serializationConfig0, (PrettyPrinter) null);
    SerializationConfig serializationConfig2 = new SerializationConfig(serializationConfig1, (SimpleMixInResolver) null);
    ContextAttributes contextAttributes0 = ContextAttributes.getEmpty();
    SerializationConfig serializationConfig3 = new SerializationConfig(serializationConfig2, contextAttributes0);
    serializationConfig3.getDefaultVisibilityChecker();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test066() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    ObjectMapper objectMapper0 = new ObjectMapper();
    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);
    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED;
    SerializationFeature[] serializationFeatureArray0 = new SerializationFeature[4];
    serializationFeatureArray0[0] = serializationFeature0;
    serializationFeatureArray0[1] = serializationFeature0;
    serializationFeatureArray0[2] = serializationFeature0;
    serializationFeatureArray0[3] = serializationFeature0;
    SerializationConfig serializationConfig1 = serializationConfig0.with(serializationFeature0, serializationFeatureArray0);
    serializationConfig1.toString();
    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
    deserializerFactoryConfig0.deserializers();
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    FormatFeature[] formatFeatureArray0 = new FormatFeature[2];
    SerializationConfig serializationConfig2 = new SerializationConfig(serializationConfig0, simpleMixInResolver0, rootNameLookup0);
    serializationConfig2.withFeatures(formatFeatureArray0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test077() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    ObjectMapper objectMapper1 = new ObjectMapper(objectMapper0);
    SimpleMixInResolver simpleMixInResolver0 = objectMapper1._mixIns;
    SerializationConfig serializationConfig0 = new SerializationConfig((SerializationConfig) null, simpleMixInResolver0);
    int int0 = 0;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test088() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);
    Object object0 = new Object();
    FormatFeature[] formatFeatureArray0 = new FormatFeature[0];
    serializationConfig0.getDefaultVisibilityChecker();
    serializationConfig0.withoutFeatures(formatFeatureArray0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test1010() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    RootNameLookup rootNameLookup1 = new RootNameLookup();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    simpleMixInResolver0.copy();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);
    MapperFeature[] mapperFeatureArray0 = new MapperFeature[0];
    serializationConfig0.with(mapperFeatureArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test1010() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    RootNameLookup rootNameLookup1 = new RootNameLookup();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    simpleMixInResolver0.copy();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);
    MapperFeature[] mapperFeatureArray0 = new MapperFeature[0];
    serializationConfig0.with(mapperFeatureArray0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test1212() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    Class<JavaType> class0 = JavaType.class;
    objectMapper0.canSerialize(class0);
    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test1313() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter(""0CKq+kUMTVYH"");
    DefaultPrettyPrinter defaultPrettyPrinter1 = new DefaultPrettyPrinter(defaultPrettyPrinter0, defaultPrettyPrinter0.DEFAULT_ROOT_VALUE_SEPARATOR);
    SerializationConfig serializationConfig1 = new SerializationConfig(serializationConfig0, defaultPrettyPrinter1);
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.VariableDeclarationExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.VariableDeclarationExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test1414() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, (RootNameLookup) null);
    JsonGenerator.Feature[] jsonGenerator_FeatureArray0 = new JsonGenerator.Feature[1];
    serializationConfig0.withFeatures(jsonGenerator_FeatureArray0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test1515() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    FileSystemHandling.shouldAllThrowIOExceptions();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, (RootNameLookup) null);
    JsonGenerator.Feature[] jsonGenerator_FeatureArray0 = new JsonGenerator.Feature[1];
    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.QUOTE_NON_NUMERIC_NUMBERS;
    jsonGenerator_FeatureArray0[0] = jsonGenerator_Feature0;
    serializationConfig0.withFeatures(jsonGenerator_FeatureArray0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test1717() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, (RootNameLookup) null);
    SerializationConfig serializationConfig1 = new SerializationConfig(serializationConfig0, simpleMixInResolver0, (RootNameLookup) null);
    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());
    doReturn((-4769), (-2310), 0, 0).when(formatFeature0).getMask();
    serializationConfig1.without(formatFeature0);
    serializationConfig0.getSerializationInclusion();
    FormatFeature[] formatFeatureArray0 = new FormatFeature[2];
    formatFeatureArray0[0] = formatFeature0;
    formatFeatureArray0[1] = formatFeature0;
    serializationConfig0.withoutFeatures(formatFeatureArray0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test1818() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig((BaseSettings) null, (SubtypeResolver) null, simpleMixInResolver0, rootNameLookup0);
    AnnotationIntrospector.pair((AnnotationIntrospector) null, (AnnotationIntrospector) null);
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    serializationConfig0.withAppendedAnnotationIntrospector(annotationIntrospector0);
    MapperFeature mapperFeature0 = MapperFeature.AUTO_DETECT_FIELDS;
    MapperFeature[] mapperFeatureArray0 = new MapperFeature[2];
    mapperFeatureArray0[0] = mapperFeature0;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test1919() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, (RootNameLookup) null);
    MinimalPrettyPrinter minimalPrettyPrinter0 = new MinimalPrettyPrinter(""fV~5E?lvD@B,qL(DF{f"");
    SerializationConfig serializationConfig1 = new SerializationConfig(serializationConfig0, minimalPrettyPrinter0);
    MapperFeature[] mapperFeatureArray0 = new MapperFeature[0];
    serializationConfig0.without(mapperFeatureArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test2020() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);
    SerializedString serializedString0 = new SerializedString(""[Pip0-V8"");
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter(serializedString0);
    SerializationConfig serializationConfig1 = new SerializationConfig(serializationConfig0, defaultPrettyPrinter0);
    SerializationConfig serializationConfig2 = new SerializationConfig(serializationConfig1, simpleMixInResolver0, rootNameLookup0);
    ContextAttributes contextAttributes0 = ContextAttributes.Impl.getEmpty();
    SerializationConfig serializationConfig3 = new SerializationConfig(serializationConfig2, contextAttributes0);
    TypeFactory.defaultInstance();
    StdSubtypeResolver stdSubtypeResolver1 = new StdSubtypeResolver();
    SerializationConfig serializationConfig4 = new SerializationConfig(baseSettings0, stdSubtypeResolver1, simpleMixInResolver0, rootNameLookup0);
    FormatFeature[] formatFeatureArray0 = new FormatFeature[4];
    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0).when(formatFeature0).getMask();
    formatFeatureArray0[0] = formatFeature0;
    formatFeatureArray0[1] = formatFeature0;
    formatFeatureArray0[2] = formatFeature0;
    formatFeatureArray0[3] = formatFeature0;
    serializationConfig2.withoutFeatures(formatFeatureArray0);
    MapperFeature[] mapperFeatureArray0 = new MapperFeature[4];
    MapperFeature mapperFeature0 = MapperFeature.IGNORE_DUPLICATE_MODULE_REGISTRATIONS;
    mapperFeatureArray0[0] = mapperFeature0;
    MapperFeature mapperFeature1 = MapperFeature.USE_WRAPPER_NAME_AS_PROPERTY_NAME;
    mapperFeatureArray0[1] = mapperFeature1;
    MapperFeature mapperFeature2 = MapperFeature.AUTO_DETECT_GETTERS;
    mapperFeatureArray0[2] = mapperFeature2;
    MapperFeature mapperFeature3 = MapperFeature.AUTO_DETECT_SETTERS;
    mapperFeatureArray0[3] = mapperFeature3;
    serializationConfig4.without(mapperFeatureArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test2222() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    PropertyAccessor propertyAccessor0 = PropertyAccessor.ALL;
    JsonAutoDetect.Visibility jsonAutoDetect_Visibility0 = JsonAutoDetect.Visibility.NONE;
    objectMapper0.setVisibility(propertyAccessor0, jsonAutoDetect_Visibility0);
    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, (RootNameLookup) null);
    JsonGenerator.Feature[] jsonGenerator_FeatureArray0 = new JsonGenerator.Feature[2];
    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.QUOTE_NON_NUMERIC_NUMBERS;
    jsonGenerator_FeatureArray0[0] = jsonGenerator_Feature0;
    JsonGenerator.Feature jsonGenerator_Feature1 = JsonGenerator.Feature.IGNORE_UNKNOWN;
    jsonGenerator_FeatureArray0[1] = jsonGenerator_Feature1;
    serializationConfig0.withFeatures(jsonGenerator_FeatureArray0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test2424() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    BasicClassIntrospector basicClassIntrospector0 = new BasicClassIntrospector();
    BaseSettings baseSettings1 = baseSettings0.withClassIntrospector(basicClassIntrospector0);
    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = (JacksonAnnotationIntrospector) ObjectMapper.DEFAULT_ANNOTATION_INTROSPECTOR;
    BaseSettings baseSettings2 = baseSettings1.withAppendedAnnotationIntrospector(jacksonAnnotationIntrospector0);
    PropertyNamingStrategy.KebabCaseStrategy propertyNamingStrategy_KebabCaseStrategy0 = (PropertyNamingStrategy.KebabCaseStrategy) PropertyNamingStrategy.KEBAB_CASE;
    BaseSettings baseSettings3 = baseSettings2.withPropertyNamingStrategy(propertyNamingStrategy_KebabCaseStrategy0);
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    ObjectMapper objectMapper0 = new ObjectMapper();
    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings3, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);
    MapperFeature[] mapperFeatureArray0 = new MapperFeature[9];
    MapperFeature mapperFeature0 = MapperFeature.AUTO_DETECT_SETTERS;
    mapperFeatureArray0[0] = mapperFeature0;
    MapperFeature mapperFeature1 = MapperFeature.AUTO_DETECT_CREATORS;
    mapperFeatureArray0[1] = mapperFeature1;
    MapperFeature mapperFeature2 = MapperFeature.USE_GETTERS_AS_SETTERS;
    mapperFeatureArray0[2] = mapperFeature2;
    MapperFeature mapperFeature3 = MapperFeature.ALLOW_FINAL_FIELDS_AS_MUTATORS;
    mapperFeatureArray0[3] = mapperFeature3;
    MapperFeature mapperFeature4 = MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS;
    mapperFeatureArray0[4] = mapperFeature4;
    MapperFeature mapperFeature5 = MapperFeature.AUTO_DETECT_IS_GETTERS;
    mapperFeatureArray0[5] = mapperFeature5;
    MapperFeature mapperFeature6 = MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS;
    mapperFeatureArray0[6] = mapperFeature6;
    MapperFeature mapperFeature7 = MapperFeature.AUTO_DETECT_FIELDS;
    mapperFeatureArray0[7] = mapperFeature7;
    MapperFeature mapperFeature8 = MapperFeature.USE_STD_BEAN_NAMING;
    mapperFeatureArray0[8] = mapperFeature8;
    SerializationConfig serializationConfig1 = serializationConfig0.with(mapperFeatureArray0);
    serializationConfig1.with((AnnotationIntrospector) jacksonAnnotationIntrospector0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test2828() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, (RootNameLookup) null);
    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN;
    serializationConfig0.without(jsonGenerator_Feature0);
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    ObjectMapper objectMapper0 = new ObjectMapper();
    SimpleMixInResolver simpleMixInResolver1 = objectMapper0._mixIns;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test2929() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);
    Object object0 = new Object();
    serializationConfig0.constructDefaultPrettyPrinter();
    serializationConfig0.initialize((JsonGenerator) null);
    serializationConfig0.getDefaultVisibilityChecker();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test3030() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);
    ContextAttributes contextAttributes0 = ContextAttributes.Impl.getEmpty();
    Object object0 = new Object();
    ContextAttributes contextAttributes1 = contextAttributes0.withSharedAttribute(object0, stdSubtypeResolver0);
    SerializationConfig serializationConfig1 = new SerializationConfig(serializationConfig0, contextAttributes1);
    SimpleMixInResolver simpleMixInResolver1 = simpleMixInResolver0.copy();
    SerializationConfig serializationConfig2 = new SerializationConfig(serializationConfig0, simpleMixInResolver1);
    serializationConfig0.hasSerializationFeatures(9);
    Class<SerializationFeature> class0 = SerializationFeature.class;
    serializationConfig1.getDefaultPropertyFormat(class0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test3131() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);
    Object object0 = new Object();
    serializationConfig0.initialize((JsonGenerator) null);
    FormatFeature[] formatFeatureArray0 = new FormatFeature[0];
    serializationConfig0.withFeatures(formatFeatureArray0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test3232() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);
    Object object0 = new Object();
    serializationConfig0.initialize((JsonGenerator) null);
    FormatFeature[] formatFeatureArray0 = new FormatFeature[1];
    serializationConfig0.withFeatures(formatFeatureArray0);
    serializationConfig0.getDefaultVisibilityChecker();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test3333() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);
    Object object0 = new Object();
    SerializationFeature[] serializationFeatureArray0 = new SerializationFeature[1];
    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_EMPTY_JSON_ARRAYS;
    serializationFeatureArray0[0] = serializationFeature0;
    serializationConfig0.withoutFeatures(serializationFeatureArray0);
    serializationConfig0.initialize((JsonGenerator) null);
    FormatFeature[] formatFeatureArray0 = new FormatFeature[0];
    serializationConfig0.withFeatures(formatFeatureArray0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test3535() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);
    SerializationConfig serializationConfig1 = new SerializationConfig(serializationConfig0, simpleMixInResolver0, rootNameLookup0);
    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());
    doReturn(4, 14, 0).when(formatFeature0).getMask();
    serializationConfig1.without(formatFeature0);
    FormatFeature[] formatFeatureArray0 = new FormatFeature[1];
    formatFeatureArray0[0] = formatFeature0;
    serializationConfig1.withFeatures(formatFeatureArray0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test3838() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    BaseSettings baseSettings1 = baseSettings0.withHandlerInstantiator((HandlerInstantiator) null);
    JsonFactory jsonFactory0 = new JsonFactory();
    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
    ObjectMapper objectMapper1 = new ObjectMapper(objectMapper0);
    ClassIntrospector classIntrospector0 = objectMapper1.defaultClassIntrospector();
    BaseSettings baseSettings2 = baseSettings1.withClassIntrospector(classIntrospector0);
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings2, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);
    SimpleFilterProvider simpleFilterProvider0 = new SimpleFilterProvider();
    byte[] byteArray0 = new byte[5];
    byteArray0[0] = (byte) (-51);
    byteArray0[1] = (byte) 20;
    byteArray0[2] = (byte) (-116);
    byteArray0[3] = (byte) 57;
    byteArray0[4] = (byte) 28;
    jsonFactory0.createParser(byteArray0);
    PropertyName propertyName0 = PropertyName.construct((String) null);
    PropertyName.construct("""");
    SerializationConfig serializationConfig1 = serializationConfig0.withRootName(propertyName0);
    DateFormat dateFormat0 = MockDateFormat.getTimeInstance();
    serializationConfig0.with(dateFormat0);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    serializationConfig1.with(typeFactory0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test4040() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    Class<Object> class0 = Object.class;
    objectMapper0.writerWithView(class0);
    Class<JavaType> class1 = JavaType.class;
    objectMapper0.canSerialize(class1);
    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test4242() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, (RootNameLookup) null);
    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN;
    JsonFactory jsonFactory0 = new JsonFactory((ObjectCodec) null);
    JsonFactory jsonFactory1 = jsonFactory0.setRootValueSeparator(""JSON"");
    serializationConfig0.isEnabled(jsonGenerator_Feature0, jsonFactory1);
    JsonGenerator.Feature[] jsonGenerator_FeatureArray0 = new JsonGenerator.Feature[0];
    SerializationConfig serializationConfig1 = new SerializationConfig(serializationConfig0, simpleMixInResolver0);
    serializationConfig1.withoutAttribute((Object) null);
    serializationConfig0.withFeatures(jsonGenerator_FeatureArray0);
    serializationConfig1.getDefaultVisibilityChecker();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test4343() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, (RootNameLookup) null);
    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN;
    JsonFactory jsonFactory0 = new JsonFactory((ObjectCodec) null);
    JsonFactory jsonFactory1 = jsonFactory0.setRootValueSeparator(""JSON"");
    serializationConfig0.isEnabled(jsonGenerator_Feature0, jsonFactory1);
    JsonGenerator.Feature[] jsonGenerator_FeatureArray0 = new JsonGenerator.Feature[0];
    serializationConfig0.withoutFeatures(jsonGenerator_FeatureArray0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test4444() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);
    ContextAttributes contextAttributes0 = ContextAttributes.Impl.getEmpty();
    Object object0 = new Object();
    ContextAttributes contextAttributes1 = contextAttributes0.withSharedAttribute(object0, stdSubtypeResolver0);
    SerializationConfig serializationConfig1 = new SerializationConfig(serializationConfig0, contextAttributes1);
    ClassLoader.getSystemClassLoader();
    SerializationFeature serializationFeature0 = SerializationFeature.ORDER_MAP_ENTRIES_BY_KEYS;
    Object object1 = new Object();
    SimpleFilterProvider simpleFilterProvider0 = new SimpleFilterProvider();
    SimpleFilterProvider simpleFilterProvider1 = simpleFilterProvider0.setFailOnUnknownId(false);
    SerializationConfig serializationConfig2 = serializationConfig0.withFilters(simpleFilterProvider1);
    serializationConfig0.getDefaultPrettyPrinter();
    JsonGenerator.Feature[] jsonGenerator_FeatureArray0 = new JsonGenerator.Feature[1];
    serializationConfig2.withoutFeatures(jsonGenerator_FeatureArray0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test4545() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, (RootNameLookup) null);
    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN;
    JsonFactory jsonFactory0 = new JsonFactory((ObjectCodec) null);
    JsonFactory jsonFactory1 = jsonFactory0.setRootValueSeparator(""JSON"");
    serializationConfig0.withInsertedAnnotationIntrospector((AnnotationIntrospector) null);
    serializationConfig0.isEnabled(jsonGenerator_Feature0, jsonFactory1);
    JsonGenerator.Feature[] jsonGenerator_FeatureArray0 = new JsonGenerator.Feature[1];
    serializationConfig0.withoutFeatures(jsonGenerator_FeatureArray0);
    serializationConfig0.withFeatures(jsonGenerator_FeatureArray0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test4646() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);
    ContextAttributes.Impl.getEmpty();
    Object object0 = new Object();
    serializationConfig0.initialize((JsonGenerator) null);
    JsonGenerator.Feature[] jsonGenerator_FeatureArray0 = new JsonGenerator.Feature[3];
    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.QUOTE_NON_NUMERIC_NUMBERS;
    jsonGenerator_FeatureArray0[0] = jsonGenerator_Feature0;
    JsonGenerator.Feature jsonGenerator_Feature1 = JsonGenerator.Feature.ESCAPE_NON_ASCII;
    jsonGenerator_FeatureArray0[1] = jsonGenerator_Feature1;
    JsonGenerator.Feature jsonGenerator_Feature2 = JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN;
    jsonGenerator_FeatureArray0[2] = jsonGenerator_Feature2;
    serializationConfig0.withoutFeatures(jsonGenerator_FeatureArray0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test4747() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, (RootNameLookup) null);
    JsonFactory jsonFactory0 = new JsonFactory();
    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
    SimpleMixInResolver simpleMixInResolver1 = objectMapper0._mixIns;
    SimpleMixInResolver simpleMixInResolver2 = simpleMixInResolver0.withOverrides(simpleMixInResolver1);
    Class<Object> class0 = Object.class;
    simpleMixInResolver2.findMixInClassFor(class0);
    SerializationConfig serializationConfig1 = new SerializationConfig(serializationConfig0, (ContextAttributes) null);
    SerializationConfig serializationConfig2 = new SerializationConfig(serializationConfig1, simpleMixInResolver1);
    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.QUOTE_FIELD_NAMES;
    serializationConfig1.without(jsonGenerator_Feature0);
    DefaultPrettyPrinter defaultPrettyPrinter0 = (DefaultPrettyPrinter) SerializationConfig.DEFAULT_PRETTY_PRINTER;
    serializationConfig0.getFilterProvider();
    serializationConfig1.getDefaultPropertyInclusion((Class<?>) null);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test4848() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);
    ContextAttributes contextAttributes0 = ContextAttributes.Impl.getEmpty();
    Object object0 = new Object();
    ContextAttributes contextAttributes1 = contextAttributes0.withSharedAttribute(object0, stdSubtypeResolver0);
    SerializationConfig serializationConfig1 = new SerializationConfig(serializationConfig0, contextAttributes1);
    ClassLoader.getSystemClassLoader();
    SerializationFeature serializationFeature0 = SerializationFeature.ORDER_MAP_ENTRIES_BY_KEYS;
    Object object1 = new Object();
    SimpleFilterProvider simpleFilterProvider0 = new SimpleFilterProvider();
    simpleFilterProvider0.setFailOnUnknownId(false);
    SerializationFeature[] serializationFeatureArray0 = new SerializationFeature[8];
    serializationFeatureArray0[0] = serializationFeature0;
    SerializationFeature serializationFeature1 = SerializationFeature.USE_EQUALITY_FOR_OBJECT_ID;
    serializationFeatureArray0[1] = serializationFeature1;
    serializationFeatureArray0[2] = serializationFeature0;
    serializationFeatureArray0[3] = serializationFeature0;
    serializationFeatureArray0[4] = serializationFeature0;
    serializationFeatureArray0[5] = serializationFeature0;
    serializationFeatureArray0[6] = serializationFeature0;
    SerializationFeature serializationFeature2 = SerializationFeature.WRAP_ROOT_VALUE;
    serializationFeatureArray0[7] = serializationFeature2;
    serializationConfig0.withoutFeatures(serializationFeatureArray0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test5050() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);
    Object object0 = new Object();
    serializationConfig0.initialize((JsonGenerator) null);
    FormatFeature[] formatFeatureArray0 = new FormatFeature[0];
    SerializationConfig serializationConfig1 = serializationConfig0.withFeatures(formatFeatureArray0);
    SerializationFeature[] serializationFeatureArray0 = new SerializationFeature[4];
    SerializationFeature serializationFeature0 = SerializationFeature.ORDER_MAP_ENTRIES_BY_KEYS;
    serializationFeatureArray0[0] = serializationFeature0;
    SerializationFeature serializationFeature1 = SerializationFeature.WRAP_ROOT_VALUE;
    serializationFeatureArray0[1] = serializationFeature1;
    SerializationFeature serializationFeature2 = SerializationFeature.FAIL_ON_SELF_REFERENCES;
    serializationFeatureArray0[2] = serializationFeature2;
    SerializationFeature serializationFeature3 = SerializationFeature.EAGER_SERIALIZER_FETCH;
    serializationFeatureArray0[3] = serializationFeature3;
    serializationConfig1.withFeatures(serializationFeatureArray0);
    serializationConfig0.getDefaultVisibilityChecker();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test5353() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);
    ContextAttributes contextAttributes0 = ContextAttributes.Impl.getEmpty();
    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_EMPTY_JSON_ARRAYS;
    ContextAttributes contextAttributes1 = contextAttributes0.withoutSharedAttribute(serializationFeature0);
    SerializationConfig serializationConfig1 = new SerializationConfig(serializationConfig0, contextAttributes1);
    SerializationConfig serializationConfig2 = new SerializationConfig(serializationConfig1, simpleMixInResolver0);
    ObjectMapper objectMapper0 = new ObjectMapper();
    ObjectMapper objectMapper1 = new ObjectMapper(objectMapper0);
    ClassIntrospector classIntrospector0 = objectMapper1.defaultClassIntrospector();
    serializationConfig0.with(classIntrospector0);
    baseSettings0.withClassIntrospector(classIntrospector0);
    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0).when(formatFeature0).getMask();
    serializationConfig2.without(formatFeature0);
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl((DeserializerFactory) null);
    defaultDeserializationContext_Impl0.getBase64Variant();
    String string0 = """";
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test5656() throws Throwable {
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    ObjectMapper objectMapper0 = new ObjectMapper();
    ObjectMapper objectMapper1 = new ObjectMapper(objectMapper0);
    SimpleMixInResolver simpleMixInResolver0 = objectMapper1._mixIns;
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    StdSubtypeResolver stdSubtypeResolver1 = new StdSubtypeResolver();
    SerializationConfig serializationConfig0 = new SerializationConfig((BaseSettings) null, stdSubtypeResolver1, simpleMixInResolver0, rootNameLookup0);
    SerializationConfig serializationConfig1 = new SerializationConfig(serializationConfig0, simpleMixInResolver0, rootNameLookup0);
    Locale locale0 = Locale.SIMPLIFIED_CHINESE;
    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT;
    SerializationConfig serializationConfig2 = new SerializationConfig(serializationConfig0, simpleMixInResolver0);
    Class<Object> class0 = Object.class;
    simpleMixInResolver0.findMixInClassFor(class0);
    SerializationConfig serializationConfig3 = new SerializationConfig(serializationConfig1, (ContextAttributes) null);
    serializationConfig3.withView((Class<?>) null);
    SimpleMixInResolver simpleMixInResolver1 = simpleMixInResolver0.withoutLocalDefinitions();
    simpleMixInResolver1.withoutLocalDefinitions();
    SerializationConfig serializationConfig4 = new SerializationConfig(serializationConfig1, simpleMixInResolver1);
    serializationConfig3.without(jsonGenerator_Feature0);
    DefaultPrettyPrinter defaultPrettyPrinter0 = (DefaultPrettyPrinter) SerializationConfig.DEFAULT_PRETTY_PRINTER;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test5757() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);
    ContextAttributes contextAttributes0 = ContextAttributes.Impl.getEmpty();
    Object object0 = new Object();
    contextAttributes0.withSharedAttribute(object0, stdSubtypeResolver0);
    SimpleMixInResolver simpleMixInResolver1 = simpleMixInResolver0.copy();
    SerializationConfig serializationConfig1 = new SerializationConfig(serializationConfig0, simpleMixInResolver1);
    Class<SerializationFeature> class0 = SerializationFeature.class;
    MapperConfig.collectFeatureDefaults(class0);
    serializationConfig0.hasSerializationFeatures(9);
    Locale locale0 = Locale.ITALIAN;
    serializationConfig0.with(locale0);
    SerializationFeature serializationFeature0 = SerializationFeature.FLUSH_AFTER_WRITE_VALUE;
    SerializationFeature[] serializationFeatureArray0 = new SerializationFeature[1];
    serializationFeatureArray0[0] = serializationFeature0;
    serializationConfig0.with(serializationFeature0, serializationFeatureArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - Some parameters are not matched in the method call. Check if it is a false or true positive.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test6464() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, (RootNameLookup) null);
    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN;
    JsonFactory jsonFactory0 = new JsonFactory((ObjectCodec) null);
    JsonFactory jsonFactory1 = jsonFactory0.setRootValueSeparator(""JSON"");
    serializationConfig0.withInsertedAnnotationIntrospector((AnnotationIntrospector) null);
    serializationConfig0.isEnabled(jsonGenerator_Feature0, jsonFactory1);
    JsonGenerator.Feature[] jsonGenerator_FeatureArray0 = new JsonGenerator.Feature[0];
    serializationConfig0.withoutFeatures(jsonGenerator_FeatureArray0);
    serializationConfig0.withFeatures(jsonGenerator_FeatureArray0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test6767() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);
    ContextAttributes contextAttributes0 = ContextAttributes.Impl.getEmpty();
    Object object0 = new Object();
    contextAttributes0.withSharedAttribute(object0, stdSubtypeResolver0);
    FormatFeature[] formatFeatureArray0 = new FormatFeature[0];
    SerializationConfig serializationConfig1 = serializationConfig0.withFeatures(formatFeatureArray0);
    serializationConfig1.getDefaultVisibilityChecker();
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-421), ""W3QSP2'F6"");
    serializationConfig0.with((TimeZone) simpleTimeZone0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test7676() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);
    ContextAttributes contextAttributes0 = ContextAttributes.Impl.getEmpty();
    Object object0 = new Object();
    contextAttributes0.withSharedAttribute(object0, stdSubtypeResolver0);
    serializationConfig0.initialize((JsonGenerator) null);
    FormatFeature[] formatFeatureArray0 = new FormatFeature[0];
    SerializationConfig serializationConfig1 = serializationConfig0.withFeatures(formatFeatureArray0);
    VisibilityChecker<?> visibilityChecker0 = serializationConfig1.getDefaultVisibilityChecker();
    serializationConfig0.with(visibilityChecker0);
    boolean boolean0 = false;
    Base64Variant base64Variant0 = new Base64Variant(""><~])5nXw]3I,XXd"", """", false, '\\', 0);
    String string0 = """";
    int int0 = (-457);
    Base64Variant base64Variant1 = new Base64Variant(base64Variant0, string0, int0);
    String string1 = ""\""@R?&DSE(>b+"";
    char char0 = '3';
    int int1 = (-3110);
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test8181() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    PropertyNamingStrategy.SnakeCaseStrategy propertyNamingStrategy_SnakeCaseStrategy0 = (PropertyNamingStrategy.SnakeCaseStrategy) PropertyNamingStrategy.SNAKE_CASE;
    BaseSettings baseSettings1 = baseSettings0.withPropertyNamingStrategy(propertyNamingStrategy_SnakeCaseStrategy0);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    baseSettings1.withTypeFactory(typeFactory0);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, (SubtypeResolver) null, (SimpleMixInResolver) null, rootNameLookup0);
    serializationConfig0.getSerializationInclusion();
    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.ESCAPE_NON_ASCII;
    SerializationConfig serializationConfig1 = serializationConfig0.with(jsonGenerator_Feature0);
    JsonGenerator.Feature[] jsonGenerator_FeatureArray0 = new JsonGenerator.Feature[4];
    jsonGenerator_FeatureArray0[0] = jsonGenerator_Feature0;
    jsonGenerator_FeatureArray0[1] = jsonGenerator_Feature0;
    jsonGenerator_FeatureArray0[2] = jsonGenerator_Feature0;
    jsonGenerator_FeatureArray0[3] = jsonGenerator_Feature0;
    serializationConfig1.withoutFeatures(jsonGenerator_FeatureArray0);
    FormatFeature[] formatFeatureArray0 = new FormatFeature[2];
    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0).when(formatFeature0).getMask();
    formatFeatureArray0[0] = formatFeature0;
    formatFeatureArray0[1] = formatFeature0;
    serializationConfig1.withFeatures(formatFeatureArray0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test8383() throws Throwable {
    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, (RootNameLookup) null);
    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN;
    JsonFactory jsonFactory0 = new JsonFactory((ObjectCodec) null);
    jsonFactory0.setRootValueSeparator("""");
    jsonFactory0.setRootValueSeparator(""utc-millisec"");
    JsonGenerator.Feature[] jsonGenerator_FeatureArray0 = new JsonGenerator.Feature[3];
    jsonGenerator_FeatureArray0[0] = jsonGenerator_Feature0;
    jsonGenerator_FeatureArray0[1] = jsonGenerator_Feature0;
    jsonGenerator_FeatureArray0[2] = jsonGenerator_Feature0;
    serializationConfig0.withoutFeatures(jsonGenerator_FeatureArray0);
    SerializationConfig serializationConfig1 = serializationConfig0.withFeatures(jsonGenerator_FeatureArray0);
    serializationConfig1.without(jsonGenerator_Feature0);
    System.setCurrentTimeMillis(1019L);
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
com.fasterxml.jackson.databind.SerializationConfig,@Test(timeout = 4000)
public void test8585() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.OBJECT_AND_NON_CONCRETE;
    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.EXISTING_PROPERTY;
    objectMapper0.enableDefaultTyping(objectMapper_DefaultTyping0, jsonTypeInfo_As0);
    Class<JavaType> class0 = JavaType.class;
    objectMapper0.canSerialize(class0);
    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig((SerializationConfig) null, simpleMixInResolver0, rootNameLookup0);
    FormatFeature[] formatFeatureArray0 = new FormatFeature[7];
    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.VariableDeclarationExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.VariableDeclarationExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
