{
  "test1113" : {
    "methodSignature" : "public JsonDeserializer<?> createContextual(DeserializationContext ctxt, BeanProperty property) throws JsonMappingException",
    "methodName" : "createContextual",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1113() throws Throwable {\n    Class<JsonMappingException> class0 = JsonMappingException.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    StdKeyDeserializer.StringKD stdKeyDeserializer_StringKD0 = StdKeyDeserializer.StringKD.forType(class0);\n    MapDeserializer mapDeserializer0 = new MapDeserializer(simpleType0, jsonLocationInstantiator0, stdKeyDeserializer_StringKD0, (JsonDeserializer<Object>) null, (TypeDeserializer) null);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    mapDeserializer0.createContextual(defaultDeserializationContext_Impl0, (BeanProperty) null);\n}",
    "testName" : "test1113"
  },
  "test1214" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1214() throws Throwable {\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    Class<InvocationTargetException> class0 = InvocationTargetException.class;\n    CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class0, 47);\n    StdKeyDeserializer.StringKD stdKeyDeserializer_StringKD0 = StdKeyDeserializer.StringKD.forType(class0);\n    Class<SimpleObjectIdResolver> class1 = SimpleObjectIdResolver.class;\n    SimpleType simpleType0 = (SimpleType) TypeBindings.UNBOUND;\n    MapLikeType mapLikeType0 = MapLikeType.construct(class0, simpleType0, simpleType0);\n    ArrayType arrayType0 = ArrayType.construct(mapLikeType0, jsonLocationInstantiator0, jsonLocationInstantiator0);\n    MapType mapType0 = MapType.construct(class1, arrayType0, simpleType0);\n    MapDeserializer mapDeserializer0 = new MapDeserializer(mapType0, jsonLocationInstantiator0, stdKeyDeserializer_StringKD0, coreXMLDeserializers_Std0, (TypeDeserializer) null);\n    mapDeserializer0.isCachable();\n}",
    "testName" : "test1214"
  },
  "test2325" : {
    "methodSignature" : "protected void wrapAndThrow(Throwable t, Object ref, String key) throws IOException",
    "methodName" : "wrapAndThrow",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2325() throws Throwable {\n    Class<String> class0 = String.class;\n    Class<JsonMappingException> class1 = JsonMappingException.class;\n    SimpleType simpleType0 = SimpleType.construct(class1);\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct(class0, simpleType0);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class1, 2070);\n    MapDeserializer mapDeserializer0 = new MapDeserializer(collectionLikeType0, jsonLocationInstantiator0, (KeyDeserializer) null, coreXMLDeserializers_Std0, (TypeDeserializer) null);\n    MockError mockError0 = new MockError(\"\");\n    mapDeserializer0.wrapAndThrow(mockError0, (Object) null, \"\");\n}",
    "testName" : "test2325"
  },
  "test1011" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1011() throws Throwable {\n    Class<JsonMappingException> class0 = JsonMappingException.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class0, (-3214));\n    MapDeserializer mapDeserializer0 = new MapDeserializer(simpleType0, jsonLocationInstantiator0, (KeyDeserializer) null, coreXMLDeserializers_Std0, (TypeDeserializer) null);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    MapDeserializer mapDeserializer1 = mapDeserializer0.withResolved((KeyDeserializer) null, (TypeDeserializer) null, coreXMLDeserializers_Std0, linkedHashSet0);\n    boolean boolean0 = mapDeserializer1.isCachable();\n    mapDeserializer0.isCachable();\n}",
    "testName" : "test1011"
  },
  "test1012" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1012() throws Throwable {\n    Class<JsonMappingException> class0 = JsonMappingException.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class0, (-3214));\n    MapDeserializer mapDeserializer0 = new MapDeserializer(simpleType0, jsonLocationInstantiator0, (KeyDeserializer) null, coreXMLDeserializers_Std0, (TypeDeserializer) null);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    MapDeserializer mapDeserializer1 = mapDeserializer0.withResolved((KeyDeserializer) null, (TypeDeserializer) null, coreXMLDeserializers_Std0, linkedHashSet0);\n    boolean boolean0 = mapDeserializer1.isCachable();\n}",
    "testName" : "test1012"
  },
  "test033" : {
    "methodSignature" : "public ObjectReader withType(java.lang.reflect.Type valueType)",
    "methodName" : "withType",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Class<JsonMappingException> class0 = JsonMappingException.class;\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    ObjectReader objectReader1 = objectReader0.withType((Type) class0);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public Map<Object, Object> deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException, JsonProcessingException",
    "methodName" : "deserialize",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    MapDeserializer mapDeserializer0 = new MapDeserializer((JavaType) null, jsonLocationInstantiator0, (KeyDeserializer) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);\n    mapDeserializer0.deserialize((JsonParser) null, (DeserializationContext) null);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "protected MapDeserializer withResolved(KeyDeserializer keyDeser, TypeDeserializer valueTypeDeser, JsonDeserializer<?> valueDeser, HashSet<String> ignorable)",
    "methodName" : "withResolved",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Class<Integer> class0 = Integer.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    MapDeserializer mapDeserializer0 = new MapDeserializer(simpleType0, jsonLocationInstantiator0, (KeyDeserializer) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);\n    MapDeserializer mapDeserializer1 = mapDeserializer0.withResolved((KeyDeserializer) null, (TypeDeserializer) null, (JsonDeserializer<?>) null, (HashSet<String>) null);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Class<JsonMappingException> class0 = JsonMappingException.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class0, (-2065));\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(simpleType0, typeFactory0);\n    Class<Error> class1 = Error.class;\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(simpleType0, classNameIdResolver0, \"\", false, class1);\n    MapDeserializer mapDeserializer0 = new MapDeserializer(simpleType0, jsonLocationInstantiator0, (KeyDeserializer) null, coreXMLDeserializers_Std0, asPropertyTypeDeserializer0);\n    HashSet<String> hashSet0 = new HashSet<String>();\n    MapDeserializer mapDeserializer1 = mapDeserializer0.withResolved((KeyDeserializer) null, (TypeDeserializer) null, coreXMLDeserializers_Std0, hashSet0);\n    mapDeserializer1.isCachable();\n}",
    "testName" : "test099"
  },
  "test1517" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1517() throws Throwable {\n    Class<JsonMappingException> class0 = JsonMappingException.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class0, 0);\n    MapDeserializer mapDeserializer0 = new MapDeserializer(simpleType0, jsonLocationInstantiator0, (KeyDeserializer) null, coreXMLDeserializers_Std0, (TypeDeserializer) null);\n    String[] stringArray0 = new String[1];\n    mapDeserializer0.setIgnorableProperties(stringArray0);\n    mapDeserializer0.isCachable();\n}",
    "testName" : "test1517"
  },
  "test1618" : {
    "methodSignature" : "public void resolve(DeserializationContext ctxt) throws JsonMappingException",
    "methodName" : "resolve",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1618() throws Throwable {\n    Class<Integer> class0 = Integer.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    MapDeserializer mapDeserializer0 = new MapDeserializer(simpleType0, jsonLocationInstantiator0, (KeyDeserializer) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);\n    mapDeserializer0.resolve((DeserializationContext) null);\n}",
    "testName" : "test1618"
  },
  "test1315" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1315() throws Throwable {\n    Class<Object> class0 = Object.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    MapType mapType0 = MapType.construct(class0, simpleType0, simpleType0);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    JsonDeserializer<ArrayNode> jsonDeserializer0 = (JsonDeserializer<ArrayNode>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    StdKeyDeserializer.DelegatingKD stdKeyDeserializer_DelegatingKD0 = new StdKeyDeserializer.DelegatingKD(class0, jsonDeserializer0);\n    Class<InvocationTargetException> class1 = InvocationTargetException.class;\n    CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class1, 0);\n    AsArrayTypeDeserializer asArrayTypeDeserializer0 = new AsArrayTypeDeserializer(simpleType0, (TypeIdResolver) null, \"nG4 p2%)A\", false, class1);\n    MapDeserializer mapDeserializer0 = new MapDeserializer(mapType0, jsonLocationInstantiator0, stdKeyDeserializer_DelegatingKD0, coreXMLDeserializers_Std0, asArrayTypeDeserializer0);\n    mapDeserializer0.isCachable();\n}",
    "testName" : "test1315"
  },
  "test2426" : {
    "methodSignature" : "protected void wrapAndThrow(Throwable t, Object ref) throws IOException",
    "methodName" : "wrapAndThrow",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2426() throws Throwable {\n    Class<JsonMappingException> class0 = JsonMappingException.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    MapDeserializer mapDeserializer0 = new MapDeserializer(simpleType0, jsonLocationInstantiator0, (KeyDeserializer) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);\n    MockIOException mockIOException0 = new MockIOException((String) null);\n    mapDeserializer0.wrapAndThrow(mockIOException0, simpleType0);\n}",
    "testName" : "test2426"
  },
  "test1416" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1416() throws Throwable {\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    MapDeserializer mapDeserializer0 = new MapDeserializer((JavaType) null, jsonLocationInstantiator0, (KeyDeserializer) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);\n    String[] stringArray0 = new String[0];\n    mapDeserializer0.setIgnorableProperties(stringArray0);\n    mapDeserializer0.isCachable();\n}",
    "testName" : "test1416"
  },
  "test1820" : {
    "methodSignature" : "public Map<Object, Object> deserialize(JsonParser jp, DeserializationContext ctxt, Map<Object, Object> result) throws IOException, JsonProcessingException",
    "methodName" : "deserialize",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1820() throws Throwable {\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    MapDeserializer mapDeserializer0 = new MapDeserializer((JavaType) null, jsonLocationInstantiator0, (KeyDeserializer) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();\n    mapDeserializer0.deserialize(jsonParser0, (DeserializationContext) null, (Map<Object, Object>) hashMap0);\n}",
    "testName" : "test1820"
  },
  "test000" : {
    "methodSignature" : "public Object deserializeWithType(JsonParser jp, DeserializationContext ctxt, TypeDeserializer typeDeserializer) throws IOException, JsonProcessingException",
    "methodName" : "deserializeWithType",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    MapDeserializer mapDeserializer0 = new MapDeserializer((JavaType) null, jsonLocationInstantiator0, (KeyDeserializer) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);\n    mapDeserializer0.deserializeWithType((JsonParser) null, (DeserializationContext) null, (TypeDeserializer) null);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public JavaType getValueType()",
    "methodName" : "getValueType",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Class<String> class0 = String.class;\n    Class<JsonMappingException> class1 = JsonMappingException.class;\n    SimpleType simpleType0 = SimpleType.construct(class1);\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct(class0, simpleType0);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class1, (-3214));\n    MapDeserializer mapDeserializer0 = new MapDeserializer(collectionLikeType0, jsonLocationInstantiator0, (KeyDeserializer) null, coreXMLDeserializers_Std0, (TypeDeserializer) null);\n    JavaType javaType0 = mapDeserializer0.getValueType();\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public SettableBeanProperty findBackReference(String refName)",
    "methodName" : "findBackReference",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    MapDeserializer mapDeserializer0 = new MapDeserializer((JavaType) null, jsonLocationInstantiator0, (KeyDeserializer) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);\n    mapDeserializer0.findBackReference(\"\");\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public final boolean isPrimitive()",
    "methodName" : "isPrimitive",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Class<ObjectIdGenerators.IntSequenceGenerator> class0 = ObjectIdGenerators.IntSequenceGenerator.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    Class<NamedType> class1 = NamedType.class;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct(class1, simpleType0);\n    Class<Integer> class2 = Integer.class;\n    CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class2, 15);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    MapDeserializer mapDeserializer0 = new MapDeserializer(collectionLikeType0, jsonLocationInstantiator0, (KeyDeserializer) null, coreXMLDeserializers_Std0, (TypeDeserializer) null);\n    JavaType javaType0 = mapDeserializer0.getContentType();\n    javaType0.isPrimitive();\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Class<JsonMappingException> class0 = JsonMappingException.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class0, (-1602));\n    MapDeserializer mapDeserializer0 = new MapDeserializer(simpleType0, jsonLocationInstantiator0, (KeyDeserializer) null, coreXMLDeserializers_Std0, (TypeDeserializer) null);\n    HashSet<String> hashSet0 = new HashSet<String>();\n    MapDeserializer mapDeserializer1 = mapDeserializer0.withResolved((KeyDeserializer) null, (TypeDeserializer) null, mapDeserializer0, hashSet0);\n    mapDeserializer1.isCachable();\n}",
    "testName" : "test088"
  },
  "test0910" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0910() throws Throwable {\n    Class<JsonMappingException> class0 = JsonMappingException.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class0, (-2065));\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(simpleType0, typeFactory0);\n    Class<Error> class1 = Error.class;\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(simpleType0, classNameIdResolver0, \"\", false, class1);\n    MapDeserializer mapDeserializer0 = new MapDeserializer(simpleType0, jsonLocationInstantiator0, (KeyDeserializer) null, coreXMLDeserializers_Std0, asPropertyTypeDeserializer0);\n    HashSet<String> hashSet0 = new HashSet<String>();\n    MapDeserializer mapDeserializer1 = mapDeserializer0.withResolved((KeyDeserializer) null, (TypeDeserializer) null, coreXMLDeserializers_Std0, hashSet0);\n    mapDeserializer0.isCachable();\n}",
    "testName" : "test0910"
  },
  "test1719" : {
    "methodSignature" : "public ObjectReader withType(java.lang.reflect.Type valueType)",
    "methodName" : "withType",
    "className" : "com.fasterxml.jackson.databind.deser.std.MapDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1719() throws Throwable {\n    Class<JsonMappingException> class0 = JsonMappingException.class;\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.enableDefaultTyping();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    ObjectReader objectReader1 = objectReader0.withType((Type) class0);\n}",
    "testName" : "test1719"
  }
}