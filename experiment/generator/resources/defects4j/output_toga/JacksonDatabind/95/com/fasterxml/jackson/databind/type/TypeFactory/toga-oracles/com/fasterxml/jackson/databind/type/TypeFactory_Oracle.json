[ {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType constructSimpleType(Class<?> rawType, Class<?> parameterTarget, JavaType[] parameterTypes)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(javaTypeArray0, javaType0)",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isEnumType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isEnumType())",
  "exception" : "",
  "testName" : "test001"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public <T> T convertValue(Object fromValue, JavaType toValueType) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test012"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isJavaLangObject()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isJavaLangObject())",
  "exception" : "",
  "testName" : "test023"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isFinal()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isFinal())",
  "exception" : "",
  "testName" : "test024"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType uncheckedSimpleType(Class<?> cls)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test047"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isEnumType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isEnumType())",
  "exception" : "",
  "testName" : "test048"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public boolean isConcrete()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test059"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isEnumType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isEnumType())",
  "exception" : "",
  "testName" : "test0610"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isFinal()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isFinal())",
  "exception" : "",
  "testName" : "test0611"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public void clearCache()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0914"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isJavaLangObject()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(collectionLikeType0.isJavaLangObject())",
  "exception" : "",
  "testName" : "test1015"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public boolean isAbstract()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(collectionLikeType0.isAbstract())",
  "exception" : "",
  "testName" : "test1016"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public abstract int containedTypeCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, javaType0.containedTypeCount())",
  "exception" : "",
  "testName" : "test1117"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public int containedTypeCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, collectionLikeType0.containedTypeCount())",
  "exception" : "",
  "testName" : "test1218"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType constructType(TypeReference<?> typeRef)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1319"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public MapType constructRawMapType(Class<? extends Map> mapClass)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1420"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public boolean hasContentType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(mapLikeType0.hasContentType())",
  "exception" : "",
  "testName" : "test1521"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isPrimitive()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isPrimitive())",
  "exception" : "",
  "testName" : "test1622"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public Class<?> findClass(String className) throws ClassNotFoundException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1723"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType[] findTypeParameters(Class<?> clz, Class<?> expType, TypeBindings bindings)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1824"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType constructReferenceType(Class<?> rawType, JavaType referredType)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1925"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isJavaLangObject()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2127"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isInterface()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2128"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public TypeFactory withModifier(TypeModifier mod)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2330"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public TypeFactory withModifier(TypeModifier mod)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2431"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public Class<?> findClass(String className) throws ClassNotFoundException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2734"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public boolean isAbstract()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(javaType0.isAbstract())",
  "exception" : "",
  "testName" : "test3340"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isJavaLangObject()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isJavaLangObject())",
  "exception" : "",
  "testName" : "test3643"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isFinal()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType1.isFinal())",
  "exception" : "",
  "testName" : "test3644"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType constructSpecializedType(JavaType baseType, Class<?> subclass)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3745"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isEnumType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isEnumType())",
  "exception" : "",
  "testName" : "test3846"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public int containedTypeCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, collectionType0.containedTypeCount())",
  "exception" : "",
  "testName" : "test3947"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public abstract int containedTypeCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, javaType0.containedTypeCount())",
  "exception" : "",
  "testName" : "test4048"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType constructGeneralizedType(JavaType baseType, Class<?> superClass)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4149"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType constructGeneralizedType(JavaType baseType, Class<?> superClass)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4250"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isJavaLangObject()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType1.isJavaLangObject())",
  "exception" : "",
  "testName" : "test4452"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType moreSpecificType(JavaType type1, JavaType type2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4553"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType moreSpecificType(JavaType type1, JavaType type2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4654"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isPrimitive()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isPrimitive())",
  "exception" : "",
  "testName" : "test4755"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isFinal()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4856"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public abstract boolean isContainerType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isContainerType())",
  "exception" : "",
  "testName" : "test4957"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType constructType(Type type, Class<?> contextClass)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5058"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public abstract int containedTypeCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, javaType0.containedTypeCount())",
  "exception" : "",
  "testName" : "test5159"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public MapType constructMapType(Class<? extends Map> mapClass, Class<?> keyClass, Class<?> valueClass)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5260"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public <T> T convertValue(Object fromValue, JavaType toValueType) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5563"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public abstract int containedTypeCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, javaType0.containedTypeCount())",
  "exception" : "",
  "testName" : "test5664"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType uncheckedSimpleType(Class<?> cls)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5765"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isJavaLangObject()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isJavaLangObject())",
  "exception" : "",
  "testName" : "test5766"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isEnumType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(mapLikeType0.isEnumType())",
  "exception" : "",
  "testName" : "test5867"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public MapLikeType constructRawMapLikeType(Class<?> mapClass)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5968"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public int containedTypeCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, collectionType0.containedTypeCount())",
  "exception" : "",
  "testName" : "test6069"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "protected JavaType _fromParamType(ClassStack context, ParameterizedType ptype, TypeBindings parentBindings)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test6170"
} ]