{
  "test1212" : {
    "methodSignature" : "public boolean isUnwrappingSerializer()",
    "methodName" : "isUnwrappingSerializer",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    NumberSerializer numberSerializer0 = NumberSerializer.instance;\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializerProvider serializerProvider0 = objectMapper0.getSerializerProvider();\n    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base(serializerProvider0);\n    numberSerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper_Base0, (JavaType) null);\n    numberSerializer0.isUnwrappingSerializer();\n}",
    "testName" : "test1212"
  },
  "test1313" : {
    "methodSignature" : "public boolean isUnwrappingSerializer()",
    "methodName" : "isUnwrappingSerializer",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Class<BigInteger> class0 = BigInteger.class;\n    NumberSerializer numberSerializer0 = new NumberSerializer(class0);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base(defaultSerializerProvider_Impl0);\n    numberSerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper_Base0, (JavaType) null);\n    numberSerializer0.isUnwrappingSerializer();\n}",
    "testName" : "test1313"
  },
  "test1010" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Class<Double> class0 = Double.class;\n    NumberSerializer numberSerializer0 = new NumberSerializer(class0);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    JsonNode jsonNode0 = numberSerializer0.getSchema((SerializerProvider) defaultSerializerProvider_Impl0, (Type) class0);\n    jsonNode0.size();\n}",
    "testName" : "test1010"
  },
  "test1111" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Class<BigInteger> class0 = BigInteger.class;\n    NumberSerializer numberSerializer0 = new NumberSerializer(class0);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    JsonNode jsonNode0 = numberSerializer0.getSchema((SerializerProvider) defaultSerializerProvider_Impl0, (Type) null);\n    jsonNode0.size();\n}",
    "testName" : "test1111"
  },
  "test000" : {
    "methodSignature" : "public boolean usesObjectId()",
    "methodName" : "usesObjectId",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Class<BigDecimal> class0 = BigDecimal.class;\n    NumberSerializer numberSerializer0 = new NumberSerializer(class0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializerProvider serializerProvider0 = objectMapper0.getSerializerProvider();\n    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base(serializerProvider0);\n    numberSerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper_Base0, (JavaType) null);\n    numberSerializer0.usesObjectId();\n}",
    "testName" : "test000"
  },
  "test011" : {
    "methodSignature" : "public void serialize(Number value, JsonGenerator g, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Class<BigInteger> class0 = BigInteger.class;\n    NumberSerializer numberSerializer0 = new NumberSerializer(class0);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    BigDecimal bigDecimal0 = new BigDecimal((-1014));\n    numberSerializer0.serialize((Number) bigDecimal0, (JsonGenerator) null, (SerializerProvider) defaultSerializerProvider_Impl0);\n}",
    "testName" : "test011"
  },
  "test022" : {
    "methodSignature" : "public void serialize(Number value, JsonGenerator g, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    NumberSerializer numberSerializer0 = NumberSerializer.instance;\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializerProvider serializerProvider0 = objectMapper0.getSerializerProvider();\n    Float float0 = new Float(1134.55806);\n    numberSerializer0.serialize((Number) float0, (JsonGenerator) null, serializerProvider0);\n}",
    "testName" : "test022"
  },
  "test055" : {
    "methodSignature" : "public void serialize(Number value, JsonGenerator g, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    NumberSerializer numberSerializer0 = NumberSerializer.instance;\n    Long long0 = new Long((-1990L));\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"L\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false);\n    byte[] byteArray0 = new byte[2];\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, objectMapper0, mockPrintStream0, byteArray0, 1, true);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    numberSerializer0.serialize((Number) long0, (JsonGenerator) uTF8JsonGenerator0, (SerializerProvider) defaultSerializerProvider_Impl0);\n}",
    "testName" : "test055"
  },
  "test066" : {
    "methodSignature" : "public void serialize(Number value, JsonGenerator g, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    NumberSerializer numberSerializer0 = NumberSerializer.instance;\n    Double double0 = new Double(8.467680811085462);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    numberSerializer0.serialize((Number) double0, (JsonGenerator) null, (SerializerProvider) defaultSerializerProvider_Impl0);\n}",
    "testName" : "test066"
  },
  "test077" : {
    "methodSignature" : "public void serialize(Number value, JsonGenerator g, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Class<BigInteger> class0 = BigInteger.class;\n    NumberSerializer numberSerializer0 = new NumberSerializer(class0);\n    numberSerializer0.serialize((Number) (byte) 0, (JsonGenerator) null, (SerializerProvider) null);\n}",
    "testName" : "test077"
  },
  "test088" : {
    "methodSignature" : "public void serialize(Number value, JsonGenerator g, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    NumberSerializer numberSerializer0 = NumberSerializer.instance;\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    numberSerializer0.serialize((Number) null, (JsonGenerator) null, (SerializerProvider) defaultSerializerProvider_Impl0);\n}",
    "testName" : "test088"
  },
  "test099" : {
    "methodSignature" : "public void serialize(Number value, JsonGenerator g, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    NumberSerializer numberSerializer0 = NumberSerializer.instance;\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    Short short0 = new Short((short) 1217);\n    numberSerializer0.serialize((Number) short0, (JsonGenerator) null, (SerializerProvider) defaultSerializerProvider_Impl0);\n}",
    "testName" : "test099"
  }
}