project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    PlaceholderForType placeholderForType0 = new PlaceholderForType(15);
    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);
    // Undeclared exception!
    try {
        stringCollectionDeserializer0.findBackReference((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Cannot handle managed/back reference 'null': type: container deserializer of type com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer returned null for 'getContentDeserializer()'
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase"", e);
    }
}",1,
project,0,test011,"public void test011() throws Throwable {
    PlaceholderForType placeholderForType0 = new PlaceholderForType(265);
    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    try {
        stringCollectionDeserializer0.getEmptyValue((DeserializationContext) defaultDeserializationContext_Impl0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Cannot create empty instance of $266, no default Creator
        //
        verifyException(""com.fasterxml.jackson.databind.exc.InvalidDefinitionException"", e);
    }
}",0,
project,0,test022,"public void test022() throws Throwable {
    PlaceholderForType placeholderForType0 = new PlaceholderForType(1488);
    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
    ArrayNode arrayNode0 = jsonNodeFactory0.arrayNode();
    JsonParser jsonParser0 = arrayNode0.traverse();
    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter0, false, false);
    // Undeclared exception!
    try {
        stringCollectionDeserializer0.deserializeWithType(filteringParserDelegate0, defaultDeserializationContext_Impl0, (TypeDeserializer) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer"", e);
    }
}",0,
project,0,test033,"public void test033() throws Throwable {
    PlaceholderForType placeholderForType0 = new PlaceholderForType(3);
    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);
    JsonDeserializer<InputStream> jsonDeserializer0 = (JsonDeserializer<InputStream>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, jsonDeserializer0, valueInstantiator_Base0);
    JsonDeserializer<BufferedInputStream> jsonDeserializer1 = (JsonDeserializer<BufferedInputStream>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
    Boolean boolean0 = Boolean.FALSE;
    StringCollectionDeserializer stringCollectionDeserializer1 = stringCollectionDeserializer0.withResolved(jsonDeserializer1, (JsonDeserializer<?>) null, jsonDeserializer1, boolean0);
    boolean boolean1 = stringCollectionDeserializer1.isCachable();
    assertFalse(stringCollectionDeserializer0.isCachable());
}",0,assertTrue(stringCollectionDeserializer0.isCachable())
project,0,test034,"public void test034() throws Throwable {
    PlaceholderForType placeholderForType0 = new PlaceholderForType(3);
    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);
    JsonDeserializer<InputStream> jsonDeserializer0 = (JsonDeserializer<InputStream>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, jsonDeserializer0, valueInstantiator_Base0);
    JsonDeserializer<BufferedInputStream> jsonDeserializer1 = (JsonDeserializer<BufferedInputStream>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
    Boolean boolean0 = Boolean.FALSE;
    StringCollectionDeserializer stringCollectionDeserializer1 = stringCollectionDeserializer0.withResolved(jsonDeserializer1, (JsonDeserializer<?>) null, jsonDeserializer1, boolean0);
    boolean boolean1 = stringCollectionDeserializer1.isCachable();
    assertFalse(boolean1);
}",0,assertTrue(boolean1)
project,0,test045,"public void test045() throws Throwable {
    PlaceholderForType placeholderForType0 = new PlaceholderForType((-126));
    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);
    StringCollectionDeserializer stringCollectionDeserializer1 = stringCollectionDeserializer0.withResolved(stringCollectionDeserializer0, (JsonDeserializer<?>) null, (NullValueProvider) null, (Boolean) null);
    assertFalse(stringCollectionDeserializer1.isCachable());
}",0,assertFalse(stringCollectionDeserializer1.isCachable())
project,0,test056,"public void test056() throws Throwable {
    PlaceholderForType placeholderForType0 = new PlaceholderForType(244);
    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);
    JsonDeserializer<JavaType> jsonDeserializer0 = (JsonDeserializer<JavaType>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, jsonDeserializer0, valueInstantiator_Base0);
    StringCollectionDeserializer stringCollectionDeserializer1 = new StringCollectionDeserializer(placeholderForType0, stringCollectionDeserializer0, valueInstantiator_Base0);
    assertFalse(stringCollectionDeserializer1.isCachable());
}",0,assertFalse(stringCollectionDeserializer1.isCachable())
project,0,test057,"public void test057() throws Throwable {
    PlaceholderForType placeholderForType0 = new PlaceholderForType(244);
    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);
    JsonDeserializer<JavaType> jsonDeserializer0 = (JsonDeserializer<JavaType>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, jsonDeserializer0, valueInstantiator_Base0);
    StringCollectionDeserializer stringCollectionDeserializer1 = new StringCollectionDeserializer(placeholderForType0, stringCollectionDeserializer0, valueInstantiator_Base0);
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
    JsonDeserializer<?> jsonDeserializer1 = stringCollectionDeserializer1.createContextual(defaultDeserializationContext_Impl0, beanProperty_Bogus0);
    assertTrue(jsonDeserializer1.isCachable());
}",0,assertFalse(jsonDeserializer1.isCachable())
project,0,test068,"public void test068() throws Throwable {
    Class<Object> class0 = Object.class;
    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(class0);
    JsonDeserializer<InputStream> jsonDeserializer0 = (JsonDeserializer<InputStream>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer((JavaType) null, jsonDeserializer0, valueInstantiator_Base0);
    boolean boolean0 = stringCollectionDeserializer0.isCachable();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test079,"public void test079() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<Map> class0 = Map.class;
    Class<Object> class1 = Object.class;
    Class<SettableBeanProperty> class2 = SettableBeanProperty.class;
    MapType mapType0 = typeFactory0.constructMapType(class0, class1, class2);
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(mapType0, (JsonDeserializer<?>) null, (ValueInstantiator) null);
    boolean boolean0 = stringCollectionDeserializer0.isCachable();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test0810,"public void test0810() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<Integer> class0 = Integer.TYPE;
    JavaType javaType0 = typeFactory0.constructType((Type) class0);
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(javaType0, (JsonDeserializer<?>) null, (ValueInstantiator) null);
    // Undeclared exception!
    try {
        stringCollectionDeserializer0.createContextual(defaultDeserializationContext_Impl0, beanProperty_Bogus0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.DeserializationContext"", e);
    }
}",0,
project,0,test0911,"public void test0911() throws Throwable {
    PlaceholderForType placeholderForType0 = new PlaceholderForType((-128));
    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
    ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);
    JsonParser jsonParser0 = arrayNode0.traverse();
    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter0, false, false);
    filteringParserDelegate0.nextBooleanValue();
    StringCollectionDeserializer stringCollectionDeserializer1 = stringCollectionDeserializer0.withResolved((JsonDeserializer<?>) null, stringCollectionDeserializer0, stringCollectionDeserializer0, (Boolean) null);
    Collection<String> collection0 = stringCollectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0, (Collection<String>) arrayList0);
    // Undeclared exception!
    try {
        stringCollectionDeserializer1.deserialize((JsonParser) filteringParserDelegate0, (DeserializationContext) defaultDeserializationContext_Impl0, collection0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.DeserializationContext"", e);
    }
}",0,
project,0,test1012,"public void test1012() throws Throwable {
    PlaceholderForType placeholderForType0 = new PlaceholderForType(246);
    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    Boolean boolean0 = Boolean.TRUE;
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, valueInstantiator_Base0, (JsonDeserializer<?>) null, (JsonDeserializer<?>) null, (NullValueProvider) null, boolean0);
    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
    ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);
    JsonParser jsonParser0 = arrayNode0.traverse();
    StringCollectionDeserializer stringCollectionDeserializer1 = new StringCollectionDeserializer(placeholderForType0, valueInstantiator_Base0, stringCollectionDeserializer0, stringCollectionDeserializer0, stringCollectionDeserializer0, boolean0);
    // Undeclared exception!
    try {
        stringCollectionDeserializer1.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.DeserializationContext"", e);
    }
}",0,
project,0,test1113,"public void test1113() throws Throwable {
    PlaceholderForType placeholderForType0 = new PlaceholderForType(15);
    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
    ArrayNode arrayNode0 = jsonNodeFactory0.arrayNode();
    JsonParser jsonParser0 = arrayNode0.traverse();
    // Undeclared exception!
    try {
        stringCollectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0, (Collection<String>) arrayList0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.DeserializationContext"", e);
    }
}",0,
project,0,test1214,"public void test1214() throws Throwable {
    PlaceholderForType placeholderForType0 = new PlaceholderForType(0);
    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);
    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
    ArrayNode arrayNode0 = jsonNodeFactory0.arrayNode();
    arrayNode0.insertNull(0);
    JsonParser jsonParser0 = arrayNode0.traverse();
    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter0, true, true);
    filteringParserDelegate0.nextBooleanValue();
    Set<String> set0 = ZoneId.getAvailableZoneIds();
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);
    try {
        stringCollectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) null, (Collection<String>) set0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // (was java.lang.NullPointerException) (through reference chain: java.util.HashSet[603])
        //
        verifyException(""com.fasterxml.jackson.databind.JsonMappingException"", e);
    }
}",0,
project,0,test1315,"public void test1315() throws Throwable {
    PlaceholderForType placeholderForType0 = new PlaceholderForType(31);
    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);
    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
    ArrayNode arrayNode0 = jsonNodeFactory0.arrayNode(31);
    JsonParser jsonParser0 = arrayNode0.traverse();
    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter0, true, true);
    filteringParserDelegate0.nextBooleanValue();
    TreeSet<String> treeSet0 = new TreeSet<String>();
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);
    Collection<String> collection0 = stringCollectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) null, (Collection<String>) treeSet0);
    try {
        stringCollectionDeserializer0.deserialize((JsonParser) filteringParserDelegate0, (DeserializationContext) null, collection0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // (was java.lang.NullPointerException) (through reference chain: java.util.TreeSet[0])
        //
        verifyException(""com.fasterxml.jackson.databind.JsonMappingException"", e);
    }
}",0,
project,0,test1416,"public void test1416() throws Throwable {
    PlaceholderForType placeholderForType0 = new PlaceholderForType((-128));
    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
    ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);
    JsonParser jsonParser0 = arrayNode0.traverse();
    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter0, false, false);
    filteringParserDelegate0.nextBooleanValue();
    StringCollectionDeserializer stringCollectionDeserializer1 = stringCollectionDeserializer0.withResolved((JsonDeserializer<?>) null, stringCollectionDeserializer0, stringCollectionDeserializer0, (Boolean) null);
    stringCollectionDeserializer1.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0, (Collection<String>) arrayList0);
    assertFalse(stringCollectionDeserializer1.isCachable());
}",0,assertTrue(stringCollectionDeserializer1.isCachable())
project,0,test1517,"public void test1517() throws Throwable {
    PlaceholderForType placeholderForType0 = new PlaceholderForType(0);
    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);
    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
    ArrayNode arrayNode0 = jsonNodeFactory0.arrayNode();
    arrayNode0.insertNull(0);
    JsonParser jsonParser0 = arrayNode0.traverse();
    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter0, true, true);
    filteringParserDelegate0.nextBooleanValue();
    TreeSet<String> treeSet0 = new TreeSet<String>();
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);
    StringCollectionDeserializer stringCollectionDeserializer1 = new StringCollectionDeserializer(placeholderForType0, valueInstantiator_Base0, stringCollectionDeserializer0, stringCollectionDeserializer0, (NullValueProvider) null, (Boolean) null);
    // Undeclared exception!
    try {
        stringCollectionDeserializer1.deserialize(jsonParser0, (DeserializationContext) null, (Collection<String>) treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer"", e);
    }
}",0,
project,0,test1618,"public void test1618() throws Throwable {
    PlaceholderForType placeholderForType0 = new PlaceholderForType(246);
    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Boolean boolean0 = Boolean.TRUE;
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, valueInstantiator_Base0, (JsonDeserializer<?>) null, (JsonDeserializer<?>) null, (NullValueProvider) null, boolean0);
    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
    ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);
    JsonParser jsonParser0 = arrayNode0.traverse();
    // Undeclared exception!
    try {
        stringCollectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0, (Collection<String>) arrayList0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.DeserializationContext"", e);
    }
}",0,
project,0,test1719,"public void test1719() throws Throwable {
    PlaceholderForType placeholderForType0 = new PlaceholderForType(266);
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Boolean boolean0 = Boolean.FALSE;
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (ValueInstantiator) null, (JsonDeserializer<?>) null, (JsonDeserializer<?>) null, (NullValueProvider) null, boolean0);
    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
    ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);
    JsonParser jsonParser0 = arrayNode0.traverse();
    // Undeclared exception!
    try {
        stringCollectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0, (Collection<String>) arrayList0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.DeserializationContext"", e);
    }
}",0,
project,0,test1820,"public void test1820() throws Throwable {
    PlaceholderForType placeholderForType0 = new PlaceholderForType(246);
    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Boolean boolean0 = Boolean.TRUE;
    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, valueInstantiator_Base0, (JsonDeserializer<?>) null, (JsonDeserializer<?>) null, (NullValueProvider) null, boolean0);
    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
    ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);
    JsonParser jsonParser0 = arrayNode0.traverse();
    StringCollectionDeserializer stringCollectionDeserializer1 = new StringCollectionDeserializer(placeholderForType0, valueInstantiator_Base0, stringCollectionDeserializer0, stringCollectionDeserializer0, stringCollectionDeserializer0, boolean0);
    // Undeclared exception!
    try {
        stringCollectionDeserializer1.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0, (Collection<String>) arrayList0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.DeserializationContext"", e);
    }
}",0,
