{
  "test1113" : {
    "methodSignature" : "public Collection<String> deserialize(JsonParser p, DeserializationContext ctxt, Collection<String> result) throws IOException",
    "methodName" : "deserialize",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1113() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(15);\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ArrayList<String> arrayList0 = new ArrayList<String>();\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    ArrayNode arrayNode0 = jsonNodeFactory0.arrayNode();\n    JsonParser jsonParser0 = arrayNode0.traverse();\n    stringCollectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0, (Collection<String>) arrayList0);\n}",
    "testName" : "test1113"
  },
  "test1214" : {
    "methodSignature" : "public Collection<String> deserialize(JsonParser p, DeserializationContext ctxt, Collection<String> result) throws IOException",
    "methodName" : "deserialize",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1214() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(0);\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    ArrayNode arrayNode0 = jsonNodeFactory0.arrayNode();\n    arrayNode0.insertNull(0);\n    JsonParser jsonParser0 = arrayNode0.traverse();\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter0, true, true);\n    filteringParserDelegate0.nextBooleanValue();\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);\n    stringCollectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) null, (Collection<String>) set0);\n}",
    "testName" : "test1214"
  },
  "test1820" : {
    "methodSignature" : "public Collection<String> deserialize(JsonParser p, DeserializationContext ctxt, Collection<String> result) throws IOException",
    "methodName" : "deserialize",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1820() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(246);\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ArrayList<String> arrayList0 = new ArrayList<String>();\n    Boolean boolean0 = Boolean.TRUE;\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, valueInstantiator_Base0, (JsonDeserializer<?>) null, (JsonDeserializer<?>) null, (NullValueProvider) null, boolean0);\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);\n    JsonParser jsonParser0 = arrayNode0.traverse();\n    StringCollectionDeserializer stringCollectionDeserializer1 = new StringCollectionDeserializer(placeholderForType0, valueInstantiator_Base0, stringCollectionDeserializer0, stringCollectionDeserializer0, stringCollectionDeserializer0, boolean0);\n    stringCollectionDeserializer1.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0, (Collection<String>) arrayList0);\n}",
    "testName" : "test1820"
  },
  "test1012" : {
    "methodSignature" : "public Collection<String> deserialize(JsonParser p, DeserializationContext ctxt) throws IOException",
    "methodName" : "deserialize",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1012() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(246);\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    Boolean boolean0 = Boolean.TRUE;\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, valueInstantiator_Base0, (JsonDeserializer<?>) null, (JsonDeserializer<?>) null, (NullValueProvider) null, boolean0);\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);\n    JsonParser jsonParser0 = arrayNode0.traverse();\n    StringCollectionDeserializer stringCollectionDeserializer1 = new StringCollectionDeserializer(placeholderForType0, valueInstantiator_Base0, stringCollectionDeserializer0, stringCollectionDeserializer0, stringCollectionDeserializer0, boolean0);\n    stringCollectionDeserializer1.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0);\n}",
    "testName" : "test1012"
  },
  "test000" : {
    "methodSignature" : "public SettableBeanProperty findBackReference(String refName)",
    "methodName" : "findBackReference",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(15);\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);\n    stringCollectionDeserializer0.findBackReference((String) null);\n}",
    "testName" : "test000"
  },
  "test011" : {
    "methodSignature" : "public Object getEmptyValue(DeserializationContext ctxt) throws JsonMappingException",
    "methodName" : "getEmptyValue",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(265);\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    stringCollectionDeserializer0.getEmptyValue((DeserializationContext) defaultDeserializationContext_Impl0);\n}",
    "testName" : "test011"
  },
  "test022" : {
    "methodSignature" : "public Object deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer) throws IOException",
    "methodName" : "deserializeWithType",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(1488);\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    ArrayNode arrayNode0 = jsonNodeFactory0.arrayNode();\n    JsonParser jsonParser0 = arrayNode0.traverse();\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter0, false, false);\n    stringCollectionDeserializer0.deserializeWithType(filteringParserDelegate0, defaultDeserializationContext_Impl0, (TypeDeserializer) null);\n}",
    "testName" : "test022"
  },
  "test033" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(3);\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);\n    JsonDeserializer<InputStream> jsonDeserializer0 = (JsonDeserializer<InputStream>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, jsonDeserializer0, valueInstantiator_Base0);\n    JsonDeserializer<BufferedInputStream> jsonDeserializer1 = (JsonDeserializer<BufferedInputStream>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    Boolean boolean0 = Boolean.FALSE;\n    StringCollectionDeserializer stringCollectionDeserializer1 = stringCollectionDeserializer0.withResolved(jsonDeserializer1, (JsonDeserializer<?>) null, jsonDeserializer1, boolean0);\n    boolean boolean1 = stringCollectionDeserializer1.isCachable();\n    stringCollectionDeserializer0.isCachable();\n}",
    "testName" : "test033"
  },
  "test1517" : {
    "methodSignature" : "public Collection<String> deserialize(JsonParser p, DeserializationContext ctxt, Collection<String> result) throws IOException",
    "methodName" : "deserialize",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1517() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(0);\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    ArrayNode arrayNode0 = jsonNodeFactory0.arrayNode();\n    arrayNode0.insertNull(0);\n    JsonParser jsonParser0 = arrayNode0.traverse();\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter0, true, true);\n    filteringParserDelegate0.nextBooleanValue();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);\n    StringCollectionDeserializer stringCollectionDeserializer1 = new StringCollectionDeserializer(placeholderForType0, valueInstantiator_Base0, stringCollectionDeserializer0, stringCollectionDeserializer0, (NullValueProvider) null, (Boolean) null);\n    stringCollectionDeserializer1.deserialize(jsonParser0, (DeserializationContext) null, (Collection<String>) treeSet0);\n}",
    "testName" : "test1517"
  },
  "test034" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(3);\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);\n    JsonDeserializer<InputStream> jsonDeserializer0 = (JsonDeserializer<InputStream>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, jsonDeserializer0, valueInstantiator_Base0);\n    JsonDeserializer<BufferedInputStream> jsonDeserializer1 = (JsonDeserializer<BufferedInputStream>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    Boolean boolean0 = Boolean.FALSE;\n    StringCollectionDeserializer stringCollectionDeserializer1 = stringCollectionDeserializer0.withResolved(jsonDeserializer1, (JsonDeserializer<?>) null, jsonDeserializer1, boolean0);\n    boolean boolean1 = stringCollectionDeserializer1.isCachable();\n}",
    "testName" : "test034"
  },
  "test045" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test045() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType((-126));\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);\n    StringCollectionDeserializer stringCollectionDeserializer1 = stringCollectionDeserializer0.withResolved(stringCollectionDeserializer0, (JsonDeserializer<?>) null, (NullValueProvider) null, (Boolean) null);\n    stringCollectionDeserializer1.isCachable();\n}",
    "testName" : "test045"
  },
  "test056" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(244);\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);\n    JsonDeserializer<JavaType> jsonDeserializer0 = (JsonDeserializer<JavaType>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, jsonDeserializer0, valueInstantiator_Base0);\n    StringCollectionDeserializer stringCollectionDeserializer1 = new StringCollectionDeserializer(placeholderForType0, stringCollectionDeserializer0, valueInstantiator_Base0);\n    stringCollectionDeserializer1.isCachable();\n}",
    "testName" : "test056"
  },
  "test1618" : {
    "methodSignature" : "public Collection<String> deserialize(JsonParser p, DeserializationContext ctxt, Collection<String> result) throws IOException",
    "methodName" : "deserialize",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1618() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(246);\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ArrayList<String> arrayList0 = new ArrayList<String>();\n    Boolean boolean0 = Boolean.TRUE;\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, valueInstantiator_Base0, (JsonDeserializer<?>) null, (JsonDeserializer<?>) null, (NullValueProvider) null, boolean0);\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);\n    JsonParser jsonParser0 = arrayNode0.traverse();\n    stringCollectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0, (Collection<String>) arrayList0);\n}",
    "testName" : "test1618"
  },
  "test1315" : {
    "methodSignature" : "public Collection<String> deserialize(JsonParser p, DeserializationContext ctxt, Collection<String> result) throws IOException",
    "methodName" : "deserialize",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1315() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(31);\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    ArrayNode arrayNode0 = jsonNodeFactory0.arrayNode(31);\n    JsonParser jsonParser0 = arrayNode0.traverse();\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter0, true, true);\n    filteringParserDelegate0.nextBooleanValue();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);\n    Collection<String> collection0 = stringCollectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) null, (Collection<String>) treeSet0);\n    stringCollectionDeserializer0.deserialize((JsonParser) filteringParserDelegate0, (DeserializationContext) null, collection0);\n}",
    "testName" : "test1315"
  },
  "test0810" : {
    "methodSignature" : "public JsonDeserializer<?> createContextual(DeserializationContext ctxt, BeanProperty property) throws JsonMappingException",
    "methodName" : "createContextual",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0810() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<Integer> class0 = Integer.TYPE;\n    JavaType javaType0 = typeFactory0.constructType((Type) class0);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(javaType0, (JsonDeserializer<?>) null, (ValueInstantiator) null);\n    stringCollectionDeserializer0.createContextual(defaultDeserializationContext_Impl0, beanProperty_Bogus0);\n}",
    "testName" : "test0810"
  },
  "test1416" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1416() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType((-128));\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ArrayList<String> arrayList0 = new ArrayList<String>();\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);\n    JsonParser jsonParser0 = arrayNode0.traverse();\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextBooleanValue();\n    StringCollectionDeserializer stringCollectionDeserializer1 = stringCollectionDeserializer0.withResolved((JsonDeserializer<?>) null, stringCollectionDeserializer0, stringCollectionDeserializer0, (Boolean) null);\n    stringCollectionDeserializer1.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0, (Collection<String>) arrayList0);\n    stringCollectionDeserializer1.isCachable();\n}",
    "testName" : "test1416"
  },
  "test0911" : {
    "methodSignature" : "public Collection<String> deserialize(JsonParser p, DeserializationContext ctxt, Collection<String> result) throws IOException",
    "methodName" : "deserialize",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0911() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType((-128));\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ArrayList<String> arrayList0 = new ArrayList<String>();\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);\n    JsonParser jsonParser0 = arrayNode0.traverse();\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextBooleanValue();\n    StringCollectionDeserializer stringCollectionDeserializer1 = stringCollectionDeserializer0.withResolved((JsonDeserializer<?>) null, stringCollectionDeserializer0, stringCollectionDeserializer0, (Boolean) null);\n    Collection<String> collection0 = stringCollectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0, (Collection<String>) arrayList0);\n    stringCollectionDeserializer1.deserialize((JsonParser) filteringParserDelegate0, (DeserializationContext) defaultDeserializationContext_Impl0, collection0);\n}",
    "testName" : "test0911"
  },
  "test1719" : {
    "methodSignature" : "public Collection<String> deserialize(JsonParser p, DeserializationContext ctxt, Collection<String> result) throws IOException",
    "methodName" : "deserialize",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1719() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(266);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ArrayList<String> arrayList0 = new ArrayList<String>();\n    Boolean boolean0 = Boolean.FALSE;\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, (ValueInstantiator) null, (JsonDeserializer<?>) null, (JsonDeserializer<?>) null, (NullValueProvider) null, boolean0);\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);\n    JsonParser jsonParser0 = arrayNode0.traverse();\n    stringCollectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0, (Collection<String>) arrayList0);\n}",
    "testName" : "test1719"
  },
  "test057" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test057() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(244);\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(placeholderForType0);\n    JsonDeserializer<JavaType> jsonDeserializer0 = (JsonDeserializer<JavaType>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(placeholderForType0, jsonDeserializer0, valueInstantiator_Base0);\n    StringCollectionDeserializer stringCollectionDeserializer1 = new StringCollectionDeserializer(placeholderForType0, stringCollectionDeserializer0, valueInstantiator_Base0);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();\n    JsonDeserializer<?> jsonDeserializer1 = stringCollectionDeserializer1.createContextual(defaultDeserializationContext_Impl0, beanProperty_Bogus0);\n    jsonDeserializer1.isCachable();\n}",
    "testName" : "test057"
  },
  "test068" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(class0);\n    JsonDeserializer<InputStream> jsonDeserializer0 = (JsonDeserializer<InputStream>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer((JavaType) null, jsonDeserializer0, valueInstantiator_Base0);\n    boolean boolean0 = stringCollectionDeserializer0.isCachable();\n}",
    "testName" : "test068"
  },
  "test079" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<Map> class0 = Map.class;\n    Class<Object> class1 = Object.class;\n    Class<SettableBeanProperty> class2 = SettableBeanProperty.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class1, class2);\n    StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(mapType0, (JsonDeserializer<?>) null, (ValueInstantiator) null);\n    boolean boolean0 = stringCollectionDeserializer0.isCachable();\n}",
    "testName" : "test079"
  }
}