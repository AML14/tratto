{
  "test1212" : {
    "methodSignature" : "public void setReference(JavaType ref)",
    "methodName" : "setReference",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);\n    resolvedRecursiveType0.setReference(resolvedRecursiveType0);\n    resolvedRecursiveType0.setReference(resolvedRecursiveType0);\n}",
    "testName" : "test1212"
  },
  "test1313" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);\n    String string0 = resolvedRecursiveType0.toString();\n}",
    "testName" : "test1313"
  },
  "test1010" : {
    "methodSignature" : "public boolean isArrayType()",
    "methodName" : "isArrayType",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    JavaType javaType0 = resolvedRecursiveType0.withContentValueHandler(class0);\n    javaType0.isArrayType();\n}",
    "testName" : "test1010"
  },
  "test1111" : {
    "methodSignature" : "public boolean isConcrete()",
    "methodName" : "isConcrete",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Class<Object> class0 = Object.class;\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded(class0, (JavaType[]) null);\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    Class<Integer> class1 = Integer.class;\n    JavaType javaType0 = resolvedRecursiveType0._narrow(class1);\n    javaType0.isConcrete();\n}",
    "testName" : "test1111"
  },
  "test011" : {
    "methodSignature" : "public StringBuilder getGenericSignature(StringBuilder sb)",
    "methodName" : "getGenericSignature",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    Class<JsonFormat.Shape> class0 = JsonFormat.Shape.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    resolvedRecursiveType0.getGenericSignature((StringBuilder) null);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public boolean isCollectionLikeType()",
    "methodName" : "isCollectionLikeType",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);\n    JavaType javaType0 = resolvedRecursiveType0.withContentType(resolvedRecursiveType0);\n    javaType0.isCollectionLikeType();\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public final boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Class<Integer> class0 = Integer.class;\n    TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    JavaType javaType0 = resolvedRecursiveType0.withContentTypeHandler(resolvedRecursiveType0);\n    javaType0.isInterface();\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public boolean isCollectionLikeType()",
    "methodName" : "isCollectionLikeType",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);\n    JavaType javaType0 = resolvedRecursiveType0.withValueHandler(resolvedRecursiveType0);\n    javaType0.isCollectionLikeType();\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public boolean isCollectionLikeType()",
    "methodName" : "isCollectionLikeType",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);\n    JavaType javaType0 = resolvedRecursiveType0.withStaticTyping();\n    javaType0.isCollectionLikeType();\n}",
    "testName" : "test099"
  },
  "test1517" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1517() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);\n    MissingNode missingNode0 = MissingNode.getInstance();\n    boolean boolean0 = resolvedRecursiveType0.equals(missingNode0);\n}",
    "testName" : "test1517"
  },
  "test1618" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1618() throws Throwable {\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);\n    JavaType javaType0 = TypeFactory.unknownType();\n    resolvedRecursiveType0.setReference(javaType0);\n    MissingNode missingNode0 = MissingNode.getInstance();\n    boolean boolean0 = resolvedRecursiveType0.equals(missingNode0);\n}",
    "testName" : "test1618"
  },
  "test1414" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);\n    resolvedRecursiveType0.setReference(resolvedRecursiveType0);\n    ResolvedRecursiveType resolvedRecursiveType1 = new ResolvedRecursiveType(class0, (TypeBindings) null);\n    resolvedRecursiveType1.equals((Object) resolvedRecursiveType0);\n}",
    "testName" : "test1414"
  },
  "test1415" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1415() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);\n    resolvedRecursiveType0.setReference(resolvedRecursiveType0);\n    ResolvedRecursiveType resolvedRecursiveType1 = new ResolvedRecursiveType(class0, (TypeBindings) null);\n    resolvedRecursiveType1.setReference(resolvedRecursiveType0);\n    boolean boolean0 = resolvedRecursiveType0.equals(resolvedRecursiveType1);\n    resolvedRecursiveType1.equals((Object) resolvedRecursiveType0);\n}",
    "testName" : "test1415"
  },
  "test1416" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1416() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);\n    resolvedRecursiveType0.setReference(resolvedRecursiveType0);\n    ResolvedRecursiveType resolvedRecursiveType1 = new ResolvedRecursiveType(class0, (TypeBindings) null);\n    resolvedRecursiveType1.setReference(resolvedRecursiveType0);\n    boolean boolean0 = resolvedRecursiveType0.equals(resolvedRecursiveType1);\n}",
    "testName" : "test1416"
  },
  "test000" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);\n    resolvedRecursiveType0.setReference(resolvedRecursiveType0);\n    ResolvedRecursiveType resolvedRecursiveType1 = new ResolvedRecursiveType(class0, (TypeBindings) null);\n    boolean boolean0 = resolvedRecursiveType0.equals(resolvedRecursiveType1);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public boolean isAbstract()",
    "methodName" : "isAbstract",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);\n    JavaType javaType0 = resolvedRecursiveType0.withTypeHandler((Object) null);\n    javaType0.isAbstract();\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public boolean isContainerType()",
    "methodName" : "isContainerType",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Class<String> class0 = String.class;\n    ArrayList<JavaType> arrayList0 = new ArrayList<JavaType>();\n    TypeBindings typeBindings0 = TypeBindings.create((Class<?>) class0, (List<JavaType>) arrayList0);\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    boolean boolean0 = resolvedRecursiveType0.isContainerType();\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public String getErasedSignature()",
    "methodName" : "getErasedSignature",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);\n    resolvedRecursiveType0.getErasedSignature();\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public JavaType refine(Class<?> rawType, TypeBindings bindings, JavaType superClass, JavaType[] superInterfaces)",
    "methodName" : "refine",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);\n    Class<Integer> class1 = Integer.class;\n    Class<String> class2 = String.class;\n    JavaType[] javaTypeArray0 = new JavaType[1];\n    CollectionType collectionType0 = CollectionType.construct((Class<?>) class2, (TypeBindings) null, (JavaType) resolvedRecursiveType0, javaTypeArray0, (JavaType) resolvedRecursiveType0);\n    JavaType javaType0 = resolvedRecursiveType0.refine(class1, (TypeBindings) null, collectionType0, javaTypeArray0);\n}",
    "testName" : "test088"
  }
}