{
  "test1212" : {
    "methodSignature" : "public ObjectReader readerFor(JavaType type)",
    "methodName" : "readerFor",
    "className" : "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JavaType javaType0 = TypeFactory.unknownType();\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.upgradeFrom(javaType0, javaType0);\n    ObjectReader objectReader0 = objectMapper0.readerFor((JavaType) collectionLikeType0);\n}",
    "testName" : "test1212"
  },
  "test1313" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonTypeInfo.Id jsonTypeInfo_Id0 = JsonTypeInfo.Id.CLASS;\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(jsonTypeInfo_Id0);\n}",
    "testName" : "test1313"
  },
  "test1010" : {
    "methodSignature" : "public ObjectReader readerFor(JavaType type)",
    "methodName" : "readerFor",
    "className" : "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JavaType javaType0 = TypeFactory.unknownType();\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    ArrayType arrayType0 = ArrayType.construct(javaType0, typeBindings0);\n    Object object0 = new Object();\n    ArrayType arrayType1 = arrayType0.withContentTypeHandler(object0);\n    objectMapper0.readerFor((JavaType) arrayType1);\n}",
    "testName" : "test1010"
  },
  "test1111" : {
    "methodSignature" : "public ObjectReader readerFor(JavaType type)",
    "methodName" : "readerFor",
    "className" : "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    JavaType javaType0 = TypeFactory.unknownType();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    objectMapper0.setTypeFactory((TypeFactory) null);\n    objectMapper0.readerFor(javaType0);\n}",
    "testName" : "test1111"
  },
  "test011" : {
    "methodSignature" : "Object writeReplace()",
    "methodName" : "writeReplace",
    "className" : "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    DeserializerCache deserializerCache0 = new DeserializerCache();\n    Object object0 = deserializerCache0.writeReplace();\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public ObjectReader readerFor(JavaType type)",
    "methodName" : "readerFor",
    "className" : "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<LinkedHashMap> class0 = LinkedHashMap.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructMapLikeType(class0, class0, class0);\n    ObjectReader objectReader0 = objectMapper0.readerFor((JavaType) mapLikeType0);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public ObjectReader readerFor(JavaType type)",
    "methodName" : "readerFor",
    "className" : "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<SettableBeanProperty> class0 = SettableBeanProperty.class;\n    Class<ObjectIdReferenceProperty> class1 = ObjectIdReferenceProperty.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructMapLikeType(class0, class1, class0);\n    ObjectReader objectReader0 = objectMapper0.readerFor((JavaType) mapLikeType0);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public boolean canDeserialize(JavaType type)",
    "methodName" : "canDeserialize",
    "className" : "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(55296);\n    objectMapper0.canDeserialize((JavaType) placeholderForType0);\n    boolean boolean0 = objectMapper0.canDeserialize((JavaType) placeholderForType0);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public final JsonDeserializer<Object> findRootValueDeserializer(JavaType type) throws JsonMappingException",
    "methodName" : "findRootValueDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    defaultDeserializationContext_Impl0.findRootValueDeserializer((JavaType) null);\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "public ObjectReader readerFor(JavaType type)",
    "methodName" : "readerFor",
    "className" : "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<LinkedHashMap> class0 = LinkedHashMap.class;\n    MapType mapType0 = typeFactory0.constructRawMapType(class0);\n    MapLikeType mapLikeType0 = mapType0.withKeyValueHandler(objectMapper0);\n    objectMapper0.readerFor((JavaType) mapLikeType0);\n}",
    "testName" : "test1616"
  },
  "test1717" : {
    "methodSignature" : "public ObjectReader readerFor(JavaType type)",
    "methodName" : "readerFor",
    "className" : "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JavaType javaType0 = TypeFactory.unknownType();\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    ArrayType arrayType0 = ArrayType.construct(javaType0, typeBindings0);\n    ArrayType arrayType1 = arrayType0.withContentValueHandler(typeBindings0);\n    objectMapper0.readerFor((JavaType) arrayType1);\n}",
    "testName" : "test1717"
  },
  "test1414" : {
    "methodSignature" : "public ObjectReader readerFor(JavaType type)",
    "methodName" : "readerFor",
    "className" : "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    JavaType javaType0 = TypeFactory.unknownType();\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(javaType0, javaType0);\n    ObjectReader objectReader0 = objectMapper0.readerFor((JavaType) referenceType0);\n}",
    "testName" : "test1414"
  },
  "test000" : {
    "methodSignature" : "public int cachedDeserializersCount()",
    "methodName" : "cachedDeserializersCount",
    "className" : "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    DeserializerCache deserializerCache0 = new DeserializerCache();\n    int int0 = deserializerCache0.cachedDeserializersCount();\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public void flushCachedDeserializers()",
    "methodName" : "flushCachedDeserializers",
    "className" : "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    DeserializerCache deserializerCache0 = new DeserializerCache();\n    deserializerCache0.flushCachedDeserializers();\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public ObjectReader readerFor(JavaType type)",
    "methodName" : "readerFor",
    "className" : "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JavaType javaType0 = TypeFactory.unknownType();\n    objectMapper0.canDeserialize(javaType0);\n    ObjectReader objectReader0 = objectMapper0.readerFor(javaType0);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public ObjectReader readerFor(JavaType type)",
    "methodName" : "readerFor",
    "className" : "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<LinkedHashMap> class0 = LinkedHashMap.class;\n    MapType mapType0 = typeFactory0.constructRawMapType(class0);\n    ObjectReader objectReader0 = objectMapper0.readerFor((JavaType) mapType0);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public boolean canDeserialize(JavaType type)",
    "methodName" : "canDeserialize",
    "className" : "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<ObjectIdResolver> class0 = ObjectIdResolver.class;\n    CollectionLikeType collectionLikeType0 = typeFactory0.constructRawCollectionLikeType(class0);\n    boolean boolean0 = objectMapper0.canDeserialize((JavaType) collectionLikeType0);\n}",
    "testName" : "test088"
  },
  "test1818" : {
    "methodSignature" : "public boolean hasValueDeserializerFor(DeserializationContext ctxt, DeserializerFactory factory, JavaType type) throws JsonMappingException",
    "methodName" : "hasValueDeserializerFor",
    "className" : "com.fasterxml.jackson.databind.deser.DeserializerCache",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    DeserializerCache deserializerCache0 = new DeserializerCache();\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<DecimalNode> class0 = DecimalNode.class;\n    CollectionLikeType collectionLikeType0 = typeFactory0.constructCollectionLikeType(class0, (JavaType) null);\n    deserializerCache0.hasValueDeserializerFor(defaultDeserializationContext_Impl0, (DeserializerFactory) null, collectionLikeType0);\n}",
    "testName" : "test1818"
  }
}