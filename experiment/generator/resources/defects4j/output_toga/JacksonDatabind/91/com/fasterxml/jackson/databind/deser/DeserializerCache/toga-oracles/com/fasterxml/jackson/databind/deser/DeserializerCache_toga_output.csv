project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    DeserializerCache deserializerCache0 = new DeserializerCache();
    int int0 = deserializerCache0.cachedDeserializersCount();
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test011,"public void test011() throws Throwable {
    DeserializerCache deserializerCache0 = new DeserializerCache();
    Object object0 = deserializerCache0.writeReplace();
    assertSame(object0, deserializerCache0);
}",1,
project,0,test022,"public void test022() throws Throwable {
    DeserializerCache deserializerCache0 = new DeserializerCache();
    deserializerCache0.flushCachedDeserializers();
}",0,
project,0,test033,"public void test033() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<LinkedHashMap> class0 = LinkedHashMap.class;
    MapLikeType mapLikeType0 = typeFactory0.constructMapLikeType(class0, class0, class0);
    ObjectReader objectReader0 = objectMapper0.readerFor((JavaType) mapLikeType0);
    assertNotNull(objectReader0);
}",0,
project,0,test044,"public void test044() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    JavaType javaType0 = TypeFactory.unknownType();
    objectMapper0.canDeserialize(javaType0);
    ObjectReader objectReader0 = objectMapper0.readerFor(javaType0);
    assertNotNull(objectReader0);
}",0,
project,0,test055,"public void test055() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<SettableBeanProperty> class0 = SettableBeanProperty.class;
    Class<ObjectIdReferenceProperty> class1 = ObjectIdReferenceProperty.class;
    MapLikeType mapLikeType0 = typeFactory0.constructMapLikeType(class0, class1, class0);
    ObjectReader objectReader0 = objectMapper0.readerFor((JavaType) mapLikeType0);
    assertNotNull(objectReader0);
}",0,
project,0,test066,"public void test066() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<LinkedHashMap> class0 = LinkedHashMap.class;
    MapType mapType0 = typeFactory0.constructRawMapType(class0);
    ObjectReader objectReader0 = objectMapper0.readerFor((JavaType) mapType0);
    assertNotNull(objectReader0);
}",0,
project,0,test077,"public void test077() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    PlaceholderForType placeholderForType0 = new PlaceholderForType(55296);
    objectMapper0.canDeserialize((JavaType) placeholderForType0);
    boolean boolean0 = objectMapper0.canDeserialize((JavaType) placeholderForType0);
    assertTrue(boolean0);
}",1,
project,0,test088,"public void test088() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<ObjectIdResolver> class0 = ObjectIdResolver.class;
    CollectionLikeType collectionLikeType0 = typeFactory0.constructRawCollectionLikeType(class0);
    boolean boolean0 = objectMapper0.canDeserialize((JavaType) collectionLikeType0);
    assertFalse(boolean0);
}",1,
project,0,test099,"public void test099() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    // Undeclared exception!
    try {
        defaultDeserializationContext_Impl0.findRootValueDeserializer((JavaType) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Null JavaType passed
        //
        verifyException(""com.fasterxml.jackson.databind.deser.DeserializerCache"", e);
    }
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    JavaType javaType0 = TypeFactory.unknownType();
    TypeBindings typeBindings0 = TypeBindings.emptyBindings();
    ArrayType arrayType0 = ArrayType.construct(javaType0, typeBindings0);
    Object object0 = new Object();
    ArrayType arrayType1 = arrayType0.withContentTypeHandler(object0);
    // Undeclared exception!
    try {
        objectMapper0.readerFor((JavaType) arrayType1);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // java.lang.Object cannot be cast to com.fasterxml.jackson.databind.jsontype.TypeDeserializer
        //
        verifyException(""com.fasterxml.jackson.databind.deser.BasicDeserializerFactory"", e);
    }
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    JavaType javaType0 = TypeFactory.unknownType();
    JsonFactory jsonFactory0 = new JsonFactory();
    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
    objectMapper0.setTypeFactory((TypeFactory) null);
    // Undeclared exception!
    try {
        objectMapper0.readerFor(javaType0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.cfg.MapperConfig"", e);
    }
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    JavaType javaType0 = TypeFactory.unknownType();
    CollectionLikeType collectionLikeType0 = CollectionLikeType.upgradeFrom(javaType0, javaType0);
    ObjectReader objectReader0 = objectMapper0.readerFor((JavaType) collectionLikeType0);
    assertNotNull(objectReader0);
}",0,assertNotNull(objectReader0)
project,0,test1313,"public void test1313() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    JsonTypeInfo.Id jsonTypeInfo_Id0 = JsonTypeInfo.Id.CLASS;
    ObjectReader objectReader0 = objectMapper0.readerForUpdating(jsonTypeInfo_Id0);
    assertNotNull(objectReader0);
}",0,assertNotNull(objectReader0)
project,0,test1414,"public void test1414() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);
    JavaType javaType0 = TypeFactory.unknownType();
    ReferenceType referenceType0 = ReferenceType.upgradeFrom(javaType0, javaType0);
    ObjectReader objectReader0 = objectMapper0.readerFor((JavaType) referenceType0);
    assertNotNull(objectReader0);
}",0,assertNotNull(objectReader0)
project,0,test1616,"public void test1616() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<LinkedHashMap> class0 = LinkedHashMap.class;
    MapType mapType0 = typeFactory0.constructRawMapType(class0);
    MapLikeType mapLikeType0 = mapType0.withKeyValueHandler(objectMapper0);
    // Undeclared exception!
    try {
        objectMapper0.readerFor((JavaType) mapLikeType0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // com.fasterxml.jackson.databind.ObjectMapper cannot be cast to com.fasterxml.jackson.databind.KeyDeserializer
        //
        verifyException(""com.fasterxml.jackson.databind.deser.BasicDeserializerFactory"", e);
    }
}",0,
project,0,test1717,"public void test1717() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    JavaType javaType0 = TypeFactory.unknownType();
    TypeBindings typeBindings0 = TypeBindings.emptyBindings();
    ArrayType arrayType0 = ArrayType.construct(javaType0, typeBindings0);
    ArrayType arrayType1 = arrayType0.withContentValueHandler(typeBindings0);
    // Undeclared exception!
    try {
        objectMapper0.readerFor((JavaType) arrayType1);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // com.fasterxml.jackson.databind.type.TypeBindings cannot be cast to com.fasterxml.jackson.databind.JsonDeserializer
        //
        verifyException(""com.fasterxml.jackson.databind.deser.BasicDeserializerFactory"", e);
    }
}",0,
project,0,test1818,"public void test1818() throws Throwable {
    DeserializerCache deserializerCache0 = new DeserializerCache();
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<DecimalNode> class0 = DecimalNode.class;
    CollectionLikeType collectionLikeType0 = typeFactory0.constructCollectionLikeType(class0, (JavaType) null);
    // Undeclared exception!
    try {
        deserializerCache0.hasValueDeserializerFor(defaultDeserializationContext_Impl0, (DeserializerFactory) null, collectionLikeType0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.DeserializerCache"", e);
    }
}",0,
