/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 28 07:45:52 GMT 2024
 */
package com.fasterxml.jackson.databind.node;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.databind.node.BinaryNode;
import com.fasterxml.jackson.databind.node.BooleanNode;
import com.fasterxml.jackson.databind.node.MissingNode;
import com.fasterxml.jackson.databind.node.POJONode;
import com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
import com.fasterxml.jackson.databind.util.JSONPObject;
import com.fasterxml.jackson.databind.util.RawValue;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class POJONode_ESTest extends POJONode_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        RawValue rawValue0 = new RawValue("");
        POJONode pOJONode0 = new POJONode(rawValue0);
        String string0 = pOJONode0.toString();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Object object0 = new Object();
        POJONode pOJONode0 = new POJONode(object0);
        JsonToken jsonToken0 = pOJONode0.asToken();
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Float float0 = Float.valueOf(0.0F);
        JSONPObject jSONPObject0 = new JSONPObject("", float0);
        POJONode pOJONode0 = new POJONode(jSONPObject0);
        Object object0 = pOJONode0.getPojo();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        BinaryNode binaryNode0 = BinaryNode.EMPTY_BINARY_NODE;
        POJONode pOJONode0 = new POJONode(binaryNode0);
        pOJONode0.hashCode();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        POJONode pOJONode0 = new POJONode((Object) null);
        boolean boolean0 = pOJONode0.isNumber();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Object object0 = new Object();
        POJONode pOJONode0 = new POJONode(object0);
        byte[] byteArray0 = pOJONode0.binaryValue();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Object object0 = new Object();
        POJONode pOJONode0 = new POJONode(object0);
        String string0 = pOJONode0.asText();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        POJONode pOJONode0 = new POJONode((Object) null);
        String string0 = pOJONode0.asText();
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        POJONode pOJONode0 = new POJONode("cY}gW =T|?7rvyeH");
        String string0 = pOJONode0.asText("cY}gW =T|?7rvyeH");
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        POJONode pOJONode0 = new POJONode((Object) null);
        String string0 = pOJONode0.asText((String) null);
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        POJONode pOJONode0 = new POJONode((Object) null);
        boolean boolean0 = pOJONode0.asBoolean();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Boolean boolean0 = Boolean.TRUE;
        POJONode pOJONode0 = new POJONode(boolean0);
        boolean boolean1 = pOJONode0.asBoolean();
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Object object0 = new Object();
        POJONode pOJONode0 = new POJONode(object0);
        boolean boolean0 = pOJONode0.asBoolean(false);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        Object object0 = new Object();
        POJONode pOJONode0 = new POJONode(object0);
        int int0 = pOJONode0.asInt();
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        Byte byte0 = new Byte((byte) 103);
        POJONode pOJONode0 = new POJONode(byte0);
        int int0 = pOJONode0.asInt((int) (byte) 103);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        Object object0 = new Object();
        POJONode pOJONode0 = new POJONode(object0);
        long long0 = pOJONode0.asLong();
        assertEquals(1, long0);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        Long long0 = new Long((-9223372036854775808L));
        POJONode pOJONode0 = new POJONode(long0);
        long long1 = pOJONode0.asLong();
        assertEquals(0, long1);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        Object object0 = new Object();
        POJONode pOJONode0 = new POJONode(object0);
        double double0 = pOJONode0.asDouble();
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        Integer integer0 = new Integer((-2549));
        POJONode pOJONode0 = new POJONode(integer0);
        double double0 = pOJONode0.asDouble();
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        POJONode pOJONode0 = new POJONode(pipedInputStream0);
        DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
        pOJONode0.serialize((JsonGenerator) null, defaultSerializerProvider_Impl0);
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        POJONode pOJONode0 = new POJONode((Object) null);
        DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
        pOJONode0.serialize((JsonGenerator) null, defaultSerializerProvider_Impl0);
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        BooleanNode booleanNode0 = BooleanNode.FALSE;
        POJONode pOJONode0 = new POJONode(booleanNode0);
        DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
        pOJONode0.serialize((JsonGenerator) null, defaultSerializerProvider_Impl0);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        POJONode pOJONode0 = new POJONode((Object) null);
        boolean boolean0 = pOJONode0.equals((Object) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        Object object0 = new Object();
        POJONode pOJONode0 = new POJONode(object0);
        boolean boolean0 = pOJONode0.equals((Object) pOJONode0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        MissingNode missingNode0 = MissingNode.getInstance();
        POJONode pOJONode0 = new POJONode(missingNode0);
        POJONode pOJONode1 = new POJONode(pOJONode0);
        boolean boolean0 = pOJONode1._pojoEquals(pOJONode0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        Object object0 = new Object();
        POJONode pOJONode0 = new POJONode(object0);
        POJONode pOJONode1 = new POJONode(pOJONode0);
        boolean boolean0 = pOJONode0.equals((Object) pOJONode1);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        POJONode pOJONode0 = new POJONode((Object) null);
        boolean boolean0 = pOJONode0._pojoEquals(pOJONode0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        POJONode pOJONode0 = new POJONode((Object) null);
        POJONode pOJONode1 = new POJONode(pOJONode0);
        boolean boolean0 = pOJONode0._pojoEquals(pOJONode1);
        assertTrue(boolean0);
    }
}
