[ {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public Object getPojo()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test022"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public int hashCode()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test033"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public final boolean isNumber()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test044"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public byte[] binaryValue() throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test055"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public String asText()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test066"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public String asText()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(string0)",
  "exception" : "",
  "testName" : "test077"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public String asText(String defaultValue)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(string0)",
  "exception" : "",
  "testName" : "test088"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public String asText(String defaultValue)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(string0)",
  "exception" : "",
  "testName" : "test099"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public boolean asBoolean()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test1010"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public boolean asBoolean()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean1)",
  "exception" : "",
  "testName" : "test1111"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public boolean asBoolean(boolean defaultValue)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test1212"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public int asInt()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test1313"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public int asInt(int defaultValue)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test1414"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public long asLong()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test1515"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public long asLong()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, long1)",
  "exception" : "",
  "testName" : "test1616"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public double asDouble()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1717"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public double asDouble()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1818"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public final void serialize(JsonGenerator gen, SerializerProvider ctxt) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1919"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public final void serialize(JsonGenerator gen, SerializerProvider ctxt) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2020"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public final void serialize(JsonGenerator gen, SerializerProvider ctxt) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2121"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public boolean equals(Object o)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test2222"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public boolean equals(Object o)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test2323"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "protected boolean _pojoEquals(POJONode other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test2424"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "public boolean equals(Object o)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test2525"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "protected boolean _pojoEquals(POJONode other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test2626"
}, {
  "className" : "com.fasterxml.jackson.databind.node.POJONode",
  "methodSignature" : "protected boolean _pojoEquals(POJONode other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test2727"
} ]