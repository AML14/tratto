{
  "test1212" : {
    "methodSignature" : "protected boolean isPotentialBeanType(Class<?> type)",
    "methodName" : "isPotentialBeanType",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    Class<FormatStyle> class0 = FormatStyle.class;\n    beanDeserializerFactory0.isPotentialBeanType(class0);\n}",
    "testName" : "test1212"
  },
  "test1010" : {
    "methodSignature" : "protected SettableAnyProperty constructAnySetter(DeserializationContext ctxt, BeanDescription beanDesc, AnnotatedMethod setter) throws JsonMappingException",
    "methodName" : "constructAnySetter",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forDeserialization(pOJOPropertiesCollector0);\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    LinkedHashMap<String, Object> linkedHashMap0 = new LinkedHashMap<String, Object>();\n    InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std(linkedHashMap0);\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl1 = new DefaultDeserializationContext.Impl(defaultDeserializationContext_Impl0, deserializationConfig0, jsonParser0, injectableValues_Std0);\n    beanDeserializerFactory0.constructAnySetter(defaultDeserializationContext_Impl1, basicBeanDescription0, (AnnotatedMethod) null);\n}",
    "testName" : "test1010"
  },
  "test1111" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.NON_CONCRETE_AND_ARRAYS;\n    objectMapper0.enableDefaultTypingAsProperty(objectMapper_DefaultTyping0, (String) null);\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(defaultSerializerProvider_Impl0);\n}",
    "testName" : "test1111"
  },
  "test000" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    SQLDataException sQLDataException0 = new SQLDataException();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, sQLDataException0, true);\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pipedInputStream0, objectMapper0, byteQuadsCanonicalizer0, (byte[]) null, 496, 3, true);\n    UnresolvedForwardReference unresolvedForwardReference0 = new UnresolvedForwardReference(uTF8StreamJsonParser0, \"b|; \\\"x>H@4PX_s\");\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(unresolvedForwardReference0);\n}",
    "testName" : "test000"
  },
  "test011" : {
    "methodSignature" : "public JsonDeserializer<Object> createBuilderBasedDeserializer(DeserializationContext ctxt, JavaType valueType, BeanDescription beanDesc, Class<?> builderClass) throws JsonMappingException",
    "methodName" : "createBuilderBasedDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    Class<FloatNode> class0 = FloatNode.class;\n    beanDeserializerFactory0.instance.createBuilderBasedDeserializer(defaultDeserializationContext_Impl0, (JavaType) null, (BeanDescription) null, class0);\n}",
    "testName" : "test011"
  },
  "test022" : {
    "methodSignature" : "public DeserializerFactory withConfig(DeserializerFactoryConfig config)",
    "methodName" : "withConfig",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory((DeserializerFactoryConfig) null);\n    DeserializerFactory deserializerFactory0 = beanDeserializerFactory0.withConfig((DeserializerFactoryConfig) null);\n}",
    "testName" : "test022"
  },
  "test033" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    Class<String> class0 = String.class;\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(resolvedRecursiveType0, resolvedRecursiveType0);\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    JsonDeserializer<AsExternalTypeDeserializer> jsonDeserializer0 = (JsonDeserializer<AsExternalTypeDeserializer>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    doReturn((String) null).when(jsonDeserializer0).toString();\n    BeanDeserializerModifier beanDeserializerModifier0 = mock(BeanDeserializerModifier.class, new ViolatedAssumptionAnswer());\n    doReturn(jsonDeserializer0).when(beanDeserializerModifier0).modifyDeserializer(any(com.fasterxml.jackson.databind.DeserializationConfig.class), any(com.fasterxml.jackson.databind.BeanDescription.class), any(com.fasterxml.jackson.databind.JsonDeserializer.class));\n    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withDeserializerModifier(beanDeserializerModifier0);\n    BeanDeserializerFactory beanDeserializerFactory1 = new BeanDeserializerFactory(deserializerFactoryConfig1);\n    JsonDeserializer<?> jsonDeserializer1 = beanDeserializerFactory1.findStdDeserializer(defaultDeserializationContext_Impl0, referenceType0, (BeanDescription) null);\n    jsonDeserializer1.isCachable();\n}",
    "testName" : "test033"
  },
  "test044" : {
    "methodSignature" : "protected JavaType materializeAbstractType(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc) throws JsonMappingException",
    "methodName" : "materializeAbstractType",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();\n    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAbstractTypeResolver(simpleAbstractTypeResolver0);\n    BeanDeserializerFactory beanDeserializerFactory1 = new BeanDeserializerFactory(deserializerFactoryConfig1);\n    JavaType javaType0 = beanDeserializerFactory1.materializeAbstractType(defaultDeserializationContext_Impl0, (JavaType) null, (BeanDescription) null);\n}",
    "testName" : "test044"
  },
  "test055" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    BeanDeserializerModifier beanDeserializerModifier0 = mock(BeanDeserializerModifier.class, new ViolatedAssumptionAnswer());\n    doReturn((List) null).when(beanDeserializerModifier0).updateProperties(any(com.fasterxml.jackson.databind.DeserializationConfig.class), any(com.fasterxml.jackson.databind.BeanDescription.class), anyList());\n    DeserializerFactory deserializerFactory0 = beanDeserializerFactory0.withDeserializerModifier(beanDeserializerModifier0);\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(deserializerFactory0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, defaultSerializerProvider_Impl0, defaultDeserializationContext_Impl0);\n    objectMapper0.readerForUpdating(defaultSerializerProvider_Impl0);\n}",
    "testName" : "test055"
  },
  "test066" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(pOJOPropertiesCollector0);\n}",
    "testName" : "test066"
  },
  "test077" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MapperFeature[] mapperFeatureArray0 = new MapperFeature[8];\n    MapperFeature mapperFeature0 = MapperFeature.USE_GETTERS_AS_SETTERS;\n    mapperFeatureArray0[0] = mapperFeature0;\n    mapperFeatureArray0[1] = mapperFeature0;\n    mapperFeatureArray0[2] = mapperFeature0;\n    MapperFeature mapperFeature1 = MapperFeature.DEFAULT_VIEW_INCLUSION;\n    mapperFeatureArray0[3] = mapperFeature1;\n    mapperFeatureArray0[4] = mapperFeature0;\n    mapperFeatureArray0[5] = mapperFeatureArray0[2];\n    mapperFeatureArray0[6] = mapperFeature1;\n    mapperFeatureArray0[7] = mapperFeatureArray0[4];\n    objectMapper0.disable(mapperFeatureArray0);\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(pOJOPropertiesCollector0);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "protected void addInjectables(DeserializationContext ctxt, BeanDescription beanDesc, BeanDeserializerBuilder builder) throws JsonMappingException",
    "methodName" : "addInjectables",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    HashMap<Object, AnnotatedMember> hashMap0 = new HashMap<Object, AnnotatedMember>();\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn(hashMap0).when(pOJOPropertiesCollector0).getInjectables();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    hashMap0.put(defaultDeserializationContext_Impl0, (AnnotatedMember) null);\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forDeserialization(pOJOPropertiesCollector0);\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl1 = new DefaultDeserializationContext.Impl(defaultDeserializationContext_Impl0, deserializationConfig0, jsonParser0, injectableValues_Std0);\n    BeanDeserializerBuilder beanDeserializerBuilder0 = new BeanDeserializerBuilder(basicBeanDescription0, deserializationConfig0);\n    beanDeserializerFactory0.addInjectables(defaultDeserializationContext_Impl1, basicBeanDescription0, beanDeserializerBuilder0);\n}",
    "testName" : "test099"
  }
}