{
  "test1212" : {
    "methodSignature" : "public void setReference(JavaType ref)",
    "methodName" : "setReference",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    resolvedRecursiveType0.setReference(resolvedRecursiveType0);\n    ResolvedRecursiveType resolvedRecursiveType1 = new ResolvedRecursiveType(class0, typeBindings0);\n    resolvedRecursiveType0.setReference(resolvedRecursiveType1);\n}",
    "testName" : "test1212"
  },
  "test1313" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    boolean boolean0 = resolvedRecursiveType0.equals(typeBindings0);\n}",
    "testName" : "test1313"
  },
  "test1010" : {
    "methodSignature" : "public boolean isCollectionLikeType()",
    "methodName" : "isCollectionLikeType",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Class<Integer> class0 = Integer.class;\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded(class0, (JavaType[]) null);\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    JavaType javaType0 = resolvedRecursiveType0.withContentValueHandler((Object) null);\n    javaType0.isCollectionLikeType();\n}",
    "testName" : "test1010"
  },
  "test1111" : {
    "methodSignature" : "public boolean hasHandlers()",
    "methodName" : "hasHandlers",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    JavaType javaType0 = resolvedRecursiveType0._narrow(class0);\n    javaType0.hasHandlers();\n}",
    "testName" : "test1111"
  },
  "test011" : {
    "methodSignature" : "public StringBuilder getGenericSignature(StringBuilder sb)",
    "methodName" : "getGenericSignature",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Class<Integer> class0 = Integer.class;\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded(class0, (JavaType[]) null);\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    StringBuilder stringBuilder0 = new StringBuilder(1413);\n    resolvedRecursiveType0.getGenericSignature(stringBuilder0);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public boolean isMapLikeType()",
    "methodName" : "isMapLikeType",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    Class<String> class1 = String.class;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    SimpleType simpleType0 = new SimpleType(class1);\n    ArrayType arrayType0 = ArrayType.construct((JavaType) simpleType0, (TypeBindings) null);\n    CollectionLikeType collectionLikeType0 = typeFactory0.constructCollectionLikeType((Class<?>) class0, (JavaType) arrayType0);\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded((Class<?>) class1, (JavaType) collectionLikeType0);\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    JavaType javaType0 = resolvedRecursiveType0.withContentType(collectionLikeType0);\n    javaType0.isMapLikeType();\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public final boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Class<Integer> class0 = Integer.class;\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded(class0, (JavaType) null);\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    JavaType javaType0 = resolvedRecursiveType0.withContentTypeHandler(typeBindings0);\n    javaType0.isInterface();\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Class<Integer> class0 = Integer.class;\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded(class0, (JavaType[]) null);\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    JavaType javaType0 = resolvedRecursiveType0.withValueHandler(\"Can not add mapping from class \");\n    javaType0.useStaticType();\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public boolean isCollectionLikeType()",
    "methodName" : "isCollectionLikeType",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Class<Integer> class0 = Integer.class;\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded(class0, (JavaType[]) null);\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    JavaType[] javaTypeArray0 = new JavaType[7];\n    javaTypeArray0[4] = (JavaType) resolvedRecursiveType0;\n    CollectionType collectionType0 = CollectionType.construct(class0, typeBindings0, javaTypeArray0[3], javaTypeArray0, javaTypeArray0[4]);\n    CollectionType collectionType1 = collectionType0.withStaticTyping();\n    collectionType1.isCollectionLikeType();\n}",
    "testName" : "test099"
  },
  "test1517" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1517() throws Throwable {\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    resolvedRecursiveType0.setReference(resolvedRecursiveType0);\n    ResolvedRecursiveType resolvedRecursiveType1 = new ResolvedRecursiveType(class0, typeBindings0);\n    resolvedRecursiveType1.setReference(resolvedRecursiveType0);\n    boolean boolean0 = resolvedRecursiveType1.equals(resolvedRecursiveType0);\n}",
    "testName" : "test1517"
  },
  "test1414" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    TypeBindings typeBindings0 = TypeBindings.create(class0, (List<JavaType>) null);\n    Class<String> class1 = String.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class1, typeBindings0);\n    resolvedRecursiveType0.setReference(resolvedRecursiveType0);\n    boolean boolean0 = resolvedRecursiveType0.equals(\"UNRESOLVED\");\n}",
    "testName" : "test1414"
  },
  "test1515" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    resolvedRecursiveType0.setReference(resolvedRecursiveType0);\n    ResolvedRecursiveType resolvedRecursiveType1 = new ResolvedRecursiveType(class0, typeBindings0);\n    resolvedRecursiveType1.equals((Object) resolvedRecursiveType0);\n}",
    "testName" : "test1515"
  },
  "test1516" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1516() throws Throwable {\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    resolvedRecursiveType0.setReference(resolvedRecursiveType0);\n    ResolvedRecursiveType resolvedRecursiveType1 = new ResolvedRecursiveType(class0, typeBindings0);\n    resolvedRecursiveType1.setReference(resolvedRecursiveType0);\n    boolean boolean0 = resolvedRecursiveType1.equals(resolvedRecursiveType0);\n    resolvedRecursiveType1.equals((Object) resolvedRecursiveType0);\n}",
    "testName" : "test1516"
  },
  "test000" : {
    "methodSignature" : "public boolean isMapLikeType()",
    "methodName" : "isMapLikeType",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    TypeBindings typeBindings0 = TypeBindings.create(class0, (List<JavaType>) null);\n    Class<String> class1 = String.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class1, typeBindings0);\n    JavaType javaType0 = resolvedRecursiveType0.withTypeHandler(\"\");\n    javaType0.isMapLikeType();\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    ResolvedRecursiveType resolvedRecursiveType1 = new ResolvedRecursiveType(class0, typeBindings0);\n    resolvedRecursiveType1.setReference(resolvedRecursiveType0);\n    boolean boolean0 = resolvedRecursiveType1.equals(resolvedRecursiveType0);\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public boolean isContainerType()",
    "methodName" : "isContainerType",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Class<Object> class0 = Object.class;\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    boolean boolean0 = resolvedRecursiveType0.isContainerType();\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public String getErasedSignature()",
    "methodName" : "getErasedSignature",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    resolvedRecursiveType0.getErasedSignature();\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public JavaType refine(Class<?> rawType, TypeBindings bindings, JavaType superClass, JavaType[] superInterfaces)",
    "methodName" : "refine",
    "className" : "com.fasterxml.jackson.databind.type.ResolvedRecursiveType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Class<Integer> class0 = Integer.class;\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded(class0, (JavaType[]) null);\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    JavaType[] javaTypeArray0 = new JavaType[7];\n    JavaType javaType0 = resolvedRecursiveType0.refine(class0, typeBindings0, (JavaType) null, javaTypeArray0);\n}",
    "testName" : "test088"
  }
}