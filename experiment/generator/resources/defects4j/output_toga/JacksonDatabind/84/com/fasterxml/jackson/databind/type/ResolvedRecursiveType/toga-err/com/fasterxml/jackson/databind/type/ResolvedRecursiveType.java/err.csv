com.fasterxml.jackson.databind.type.ResolvedRecursiveType,@Test(timeout = 4000)
public void test000() throws Throwable {
    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;
    TypeBindings typeBindings0 = TypeBindings.create(class0, (List<JavaType>) null);
    Class<String> class1 = String.class;
    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class1, typeBindings0);
    JavaType javaType0 = resolvedRecursiveType0.withTypeHandler("""");
    javaType0.isMapLikeType();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.ResolvedRecursiveType,@Test(timeout = 4000)
public void test033() throws Throwable {
    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;
    Class<String> class1 = String.class;
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    SimpleType simpleType0 = new SimpleType(class1);
    ArrayType arrayType0 = ArrayType.construct((JavaType) simpleType0, (TypeBindings) null);
    CollectionLikeType collectionLikeType0 = typeFactory0.constructCollectionLikeType((Class<?>) class0, (JavaType) arrayType0);
    TypeBindings typeBindings0 = TypeBindings.createIfNeeded((Class<?>) class1, (JavaType) collectionLikeType0);
    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);
    JavaType javaType0 = resolvedRecursiveType0.withContentType(collectionLikeType0);
    javaType0.isMapLikeType();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.ResolvedRecursiveType,@Test(timeout = 4000)
public void test055() throws Throwable {
    Class<Integer> class0 = Integer.class;
    TypeBindings typeBindings0 = TypeBindings.createIfNeeded(class0, (JavaType) null);
    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);
    JavaType javaType0 = resolvedRecursiveType0.withContentTypeHandler(typeBindings0);
    javaType0.isInterface();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.ResolvedRecursiveType,@Test(timeout = 4000)
public void test066() throws Throwable {
    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;
    TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;
    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);
    resolvedRecursiveType0.getErasedSignature();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.ResolvedRecursiveType,@Test(timeout = 4000)
public void test077() throws Throwable {
    Class<Integer> class0 = Integer.class;
    TypeBindings typeBindings0 = TypeBindings.createIfNeeded(class0, (JavaType[]) null);
    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);
    JavaType javaType0 = resolvedRecursiveType0.withValueHandler(""Can not add mapping from class "");
    javaType0.useStaticType();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.ResolvedRecursiveType,@Test(timeout = 4000)
public void test099() throws Throwable {
    Class<Integer> class0 = Integer.class;
    TypeBindings typeBindings0 = TypeBindings.createIfNeeded(class0, (JavaType[]) null);
    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);
    JavaType[] javaTypeArray0 = new JavaType[7];
    javaTypeArray0[4] = (JavaType) resolvedRecursiveType0;
    CollectionType collectionType0 = CollectionType.construct(class0, typeBindings0, javaTypeArray0[3], javaTypeArray0, javaTypeArray0[4]);
    CollectionType collectionType1 = collectionType0.withStaticTyping();
    collectionType1.isCollectionLikeType();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.ResolvedRecursiveType,@Test(timeout = 4000)
public void test1010() throws Throwable {
    Class<Integer> class0 = Integer.class;
    TypeBindings typeBindings0 = TypeBindings.createIfNeeded(class0, (JavaType[]) null);
    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);
    JavaType javaType0 = resolvedRecursiveType0.withContentValueHandler((Object) null);
    javaType0.isCollectionLikeType();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.ResolvedRecursiveType,@Test(timeout = 4000)
public void test1111() throws Throwable {
    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;
    TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;
    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);
    JavaType javaType0 = resolvedRecursiveType0._narrow(class0);
    javaType0.hasHandlers();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
