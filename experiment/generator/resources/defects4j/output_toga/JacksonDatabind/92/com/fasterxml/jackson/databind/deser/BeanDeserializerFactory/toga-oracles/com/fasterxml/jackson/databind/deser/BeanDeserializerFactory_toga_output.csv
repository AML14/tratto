project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
    DeserializerFactory deserializerFactory0 = beanDeserializerFactory0.withConfig(deserializerFactoryConfig0);
    assertSame(deserializerFactory0, beanDeserializerFactory0);
}",0,
project,0,test011,"public void test011() throws Throwable {
    JavaType javaType0 = TypeFactory.unknownType();
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    Class<String> class0 = String.class;
    // Undeclared exception!
    try {
        beanDeserializerFactory0.instance.createBuilderBasedDeserializer((DeserializationContext) null, javaType0, (BeanDescription) null, class0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.BeanDeserializerFactory"", e);
    }
}",1,
project,0,test088,"public void test088() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());
    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();
    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();
    doReturn((Map) null).when(pOJOPropertiesCollector0).getInjectables();
    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();
    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();
    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);
    beanDeserializerFactory0.addInjectables((DeserializationContext) null, basicBeanDescription0, (BeanDeserializerBuilder) null);
    assertNull(basicBeanDescription0.findClassDescription());
}",0,assertNotNull(basicBeanDescription0.findClassDescription())
project,0,test099,"public void test099() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);
    JsonFactory jsonFactory0 = new JsonFactory();
    byte[] byteArray0 = new byte[21];
    JsonParser jsonParser0 = jsonFactory0.createParser(byteArray0, (int) (byte) 0, (int) (byte) 0);
    InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl1 = new DefaultDeserializationContext.Impl(defaultDeserializationContext_Impl0, deserializationConfig0, jsonParser0, injectableValues_Std0);
    // Undeclared exception!
    try {
        beanDeserializerFactory0.constructAnySetter(defaultDeserializationContext_Impl1, (BeanDescription) null, (AnnotatedMethod) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.BeanDeserializerFactory"", e);
    }
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    Class<Integer> class0 = Integer.TYPE;
    // Undeclared exception!
    try {
        beanDeserializerFactory0.isPotentialBeanType(class0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Can not deserialize Class int (of type primitive) as a Bean
        //
        verifyException(""com.fasterxml.jackson.databind.deser.BeanDeserializerFactory"", e);
    }
}",0,
