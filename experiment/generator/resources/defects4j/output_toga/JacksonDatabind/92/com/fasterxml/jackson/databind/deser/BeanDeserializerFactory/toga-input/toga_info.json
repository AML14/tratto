{
  "test1212" : {
    "methodSignature" : "protected boolean isPotentialBeanType(Class<?> type)",
    "methodName" : "isPotentialBeanType",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    Class<Integer> class0 = Integer.TYPE;\n    beanDeserializerFactory0.isPotentialBeanType(class0);\n}",
    "testName" : "test1212"
  },
  "test000" : {
    "methodSignature" : "public DeserializerFactory withConfig(DeserializerFactoryConfig config)",
    "methodName" : "withConfig",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);\n    DeserializerFactory deserializerFactory0 = beanDeserializerFactory0.withConfig(deserializerFactoryConfig0);\n}",
    "testName" : "test000"
  },
  "test011" : {
    "methodSignature" : "public JsonDeserializer<Object> createBuilderBasedDeserializer(DeserializationContext ctxt, JavaType valueType, BeanDescription beanDesc, Class<?> builderClass) throws JsonMappingException",
    "methodName" : "createBuilderBasedDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    JavaType javaType0 = TypeFactory.unknownType();\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    Class<String> class0 = String.class;\n    beanDeserializerFactory0.instance.createBuilderBasedDeserializer((DeserializationContext) null, javaType0, (BeanDescription) null, class0);\n}",
    "testName" : "test011"
  },
  "test088" : {
    "methodSignature" : "public String findClassDescription()",
    "methodName" : "findClassDescription",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((Map) null).when(pOJOPropertiesCollector0).getInjectables();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);\n    beanDeserializerFactory0.addInjectables((DeserializationContext) null, basicBeanDescription0, (BeanDeserializerBuilder) null);\n    basicBeanDescription0.findClassDescription();\n}",
    "testName" : "test088"
  },
  "test099" : {
    "methodSignature" : "protected SettableAnyProperty constructAnySetter(DeserializationContext ctxt, BeanDescription beanDesc, AnnotatedMethod setter) throws JsonMappingException",
    "methodName" : "constructAnySetter",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    byte[] byteArray0 = new byte[21];\n    JsonParser jsonParser0 = jsonFactory0.createParser(byteArray0, (int) (byte) 0, (int) (byte) 0);\n    InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl1 = new DefaultDeserializationContext.Impl(defaultDeserializationContext_Impl0, deserializationConfig0, jsonParser0, injectableValues_Std0);\n    beanDeserializerFactory0.constructAnySetter(defaultDeserializationContext_Impl1, (BeanDescription) null, (AnnotatedMethod) null);\n}",
    "testName" : "test099"
  }
}