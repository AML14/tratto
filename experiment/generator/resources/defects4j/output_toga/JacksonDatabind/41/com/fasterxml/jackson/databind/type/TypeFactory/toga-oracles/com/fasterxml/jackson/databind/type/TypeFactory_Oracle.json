[ {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isFinal()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isFinal())",
  "exception" : "",
  "testName" : "test022"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public int containedTypeCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, collectionType0.containedTypeCount())",
  "exception" : "",
  "testName" : "test033"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isFinal()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test044"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test055"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isEnumType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isEnumType())",
  "exception" : "",
  "testName" : "test066"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType uncheckedSimpleType(Class<?> cls)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test077"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType constructSpecializedType(JavaType baseType, Class<?> subclass)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test078"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public boolean isAbstract()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test089"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public boolean isMapLikeType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isMapLikeType())",
  "exception" : "",
  "testName" : "test0910"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public byte[] writeValueAsBytes(Object value) throws JsonProcessingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1011"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public void clearCache()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1112"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public boolean isConcrete()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(collectionLikeType0.isConcrete())",
  "exception" : "",
  "testName" : "test1213"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public int containedTypeCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1314"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public int containedTypeCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, collectionLikeType0.containedTypeCount())",
  "exception" : "",
  "testName" : "test1415"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType constructType(TypeReference<?> typeRef)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1516"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public MapType constructRawMapType(Class<? extends Map> mapClass)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1617"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isJavaLangObject()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(mapLikeType0.isJavaLangObject())",
  "exception" : "",
  "testName" : "test1718"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public abstract boolean isContainerType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(javaType0.isContainerType())",
  "exception" : "",
  "testName" : "test1819"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public Class<?> findClass(String className) throws ClassNotFoundException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1920"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType[] findTypeParameters(Class<?> clz, Class<?> expType, TypeBindings bindings)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2021"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isInterface()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(javaType0.isInterface())",
  "exception" : "",
  "testName" : "test2122"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public ArrayType constructArrayType(JavaType elementType)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2223"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public TypeFactory withModifier(TypeModifier mod)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2324"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public TypeFactory withModifier(TypeModifier mod)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2425"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "protected Class<?> _findPrimitive(String className)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3334"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public boolean isAbstract()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(javaType1.isAbstract())",
  "exception" : "",
  "testName" : "test3638"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType constructSpecializedType(JavaType baseType, Class<?> subclass)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3739"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isJavaLangObject()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3840"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public boolean isAbstract()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isAbstract())",
  "exception" : "",
  "testName" : "test3841"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType constructGeneralizedType(JavaType baseType, Class<?> superClass)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3942"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public abstract int containedTypeCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, javaType1.containedTypeCount())",
  "exception" : "",
  "testName" : "test4043"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public abstract int containedTypeCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, javaType0.containedTypeCount())",
  "exception" : "",
  "testName" : "test4144"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType constructGeneralizedType(JavaType baseType, Class<?> superClass)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4245"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isFinal()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isFinal())",
  "exception" : "",
  "testName" : "test4346"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType moreSpecificType(JavaType type1, JavaType type2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4447"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isEnumType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isEnumType())",
  "exception" : "",
  "testName" : "test4548"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isFinal()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isFinal())",
  "exception" : "",
  "testName" : "test4649"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isFinal()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType1.isFinal())",
  "exception" : "",
  "testName" : "test4750"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public boolean isAbstract()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(javaType0.isAbstract())",
  "exception" : "",
  "testName" : "test4751"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isInterface()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(collectionLikeType0.isInterface())",
  "exception" : "",
  "testName" : "test4852"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isEnumType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(arrayType2.isEnumType())",
  "exception" : "",
  "testName" : "test5256"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public abstract int containedTypeCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5458"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public boolean isAbstract()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isAbstract())",
  "exception" : "",
  "testName" : "test5559"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType uncheckedSimpleType(Class<?> cls)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5560"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isFinal()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isFinal())",
  "exception" : "",
  "testName" : "test5561"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isPrimitive()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isPrimitive())",
  "exception" : "",
  "testName" : "test5662"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "protected JavaType _fromParamType(ClassStack context, ParameterizedType ptype, TypeBindings parentBindings)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5864"
} ]