com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test000() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<ObjectIdResolver> class0 = ObjectIdResolver.class;
    typeFactory0.constructType((Type) null, class0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test011() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    Class<ObjectIdGenerators.IntSequenceGenerator> class0 = ObjectIdGenerators.IntSequenceGenerator.class;
    Class<Properties> class1 = Properties.class;
    JavaType[] javaTypeArray0 = typeFactory0.findTypeParameters(class0, class1);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test022() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<Integer> class0 = Integer.class;
    JavaType[] javaTypeArray0 = new JavaType[0];
    JavaType javaType0 = typeFactory0.constructSimpleType(class0, class0, javaTypeArray0);
    javaType0.isFinal();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test033() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<HashSet> class0 = HashSet.class;
    CollectionType collectionType0 = typeFactory0.constructRawCollectionType(class0);
    collectionType0.containedTypeCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test044() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    TypeParser typeParser0 = new TypeParser(typeFactory0);
    TypeModifier[] typeModifierArray0 = new TypeModifier[0];
    TypeFactory typeFactory1 = new TypeFactory(typeParser0, typeModifierArray0);
    Class<Properties> class0 = Properties.class;
    ArrayType arrayType0 = typeFactory1.constructArrayType(class0);
    arrayType0.isFinal();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test055() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    AtomicReference<Module> atomicReference0 = new AtomicReference<Module>();
    ObjectReader objectReader0 = objectMapper0.readerForUpdating(atomicReference0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test066() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    Class<CollectionType> class0 = CollectionType.class;
    Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 0);
    JavaType javaType0 = typeFactory0.constructParametrizedType(class0, class0, classArray0);
    javaType0.isEnumType();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test089() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<Properties> class0 = Properties.class;
    MapLikeType mapLikeType0 = typeFactory0.constructMapLikeType(class0, class0, class0);
    mapLikeType0.isAbstract();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test0910() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<AnnotationIntrospector.ReferenceProperty.Type> class0 = AnnotationIntrospector.ReferenceProperty.Type.class;
    JavaType[] javaTypeArray0 = new JavaType[0];
    JavaType javaType0 = typeFactory0.constructParametrizedType(class0, class0, javaTypeArray0);
    javaType0.isMapLikeType();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test1011() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    ObjectWriter objectWriter0 = objectMapper0.writer();
    objectMapper0.writeValueAsBytes(objectWriter0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test1213() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    Class<LinkedList> class0 = LinkedList.class;
    CollectionLikeType collectionLikeType0 = typeFactory0.constructRawCollectionLikeType(class0);
    collectionLikeType0.isConcrete();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test1314() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<LinkedList> class0 = LinkedList.class;
    CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class0);
    collectionType0.containedTypeCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test1415() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    Class<LinkedList> class0 = LinkedList.class;
    CollectionLikeType collectionLikeType0 = typeFactory0.constructCollectionLikeType(class0, class0);
    collectionLikeType0.containedTypeCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test1718() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    Class<TextNode> class0 = TextNode.class;
    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);
    mapLikeType0.isJavaLangObject();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test1819() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    JavaType javaType0 = typeFactory0.constructFromCanonical(""com.fasterxml.jackson.databind.cfg.BaseSettings"");
    javaType0.isContainerType();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test2122() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    SimpleType simpleType0 = TypeFactory.CORE_TYPE_BOOL;
    Class<SimpleModule> class0 = SimpleModule.class;
    JavaType javaType0 = typeFactory0.constructReferenceType(class0, simpleType0);
    javaType0.isInterface();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test2526() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    JavaType javaType0 = typeFactory0._unknownType();
    Class<?> class0 = TypeFactory.rawClass(javaType0);
    class0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_41b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test2627() throws Throwable {
    Class<Short> class0 = Short.TYPE;
    Class<?> class1 = TypeFactory.rawClass(class0);
    class1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_41b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test2728() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<?> class0 = typeFactory0.findClass(""short"");
    class0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_41b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test2829() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<?> class0 = typeFactory0._findPrimitive(""int"");
    class0.isSynthetic();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_41b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test2930() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    Class<?> class0 = typeFactory0.findClass(""long"");
    class0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_41b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test3031() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<?> class0 = typeFactory0.findClass(""float"");
    class0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_41b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test3132() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    Class<?> class0 = typeFactory0.findClass(""double"");
    class0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_41b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test3233() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<?> class0 = typeFactory0.findClass(""boolean"");
    class0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_41b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test3335() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<?> class0 = typeFactory0._findPrimitive(""byte"");
    class0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_41b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test3436() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    Class<?> class0 = typeFactory0.findClass(""char"");
    class0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_41b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test3537() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<?> class0 = typeFactory0.findClass(""void"");
    class0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_41b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test3638() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    Class<Properties> class0 = Properties.class;
    JavaType javaType0 = TypeFactory.unknownType();
    JavaType javaType1 = typeFactory0.constructSpecializedType(javaType0, class0);
    javaType1.isAbstract();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test3840() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    SimpleType simpleType0 = TypeFactory.CORE_TYPE_COMPARABLE;
    Class<String> class0 = String.class;
    JavaType javaType0 = typeFactory0.constructSpecializedType(simpleType0, class0);
    javaType0.isJavaLangObject();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test3841() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    SimpleType simpleType0 = TypeFactory.CORE_TYPE_COMPARABLE;
    Class<String> class0 = String.class;
    JavaType javaType0 = typeFactory0.constructSpecializedType(simpleType0, class0);
    javaType0.isAbstract();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test4043() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<ArrayType> class0 = ArrayType.class;
    JavaType javaType0 = typeFactory0.uncheckedSimpleType(class0);
    JavaType javaType1 = typeFactory0.constructGeneralizedType(javaType0, class0);
    javaType1.containedTypeCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test4144() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    Class<Integer> class0 = Integer.class;
    Stack<JavaType> stack0 = new Stack<JavaType>();
    TypeBindings typeBindings0 = TypeBindings.create((Class<?>) class0, (List<JavaType>) stack0);
    Class<SimpleModule> class1 = SimpleModule.class;
    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class1, typeBindings0);
    CollectionLikeType collectionLikeType0 = new CollectionLikeType(resolvedRecursiveType0, resolvedRecursiveType0);
    JavaType[] javaTypeArray0 = new JavaType[0];
    ReferenceType referenceType0 = ReferenceType.construct((Class<?>) class0, typeBindings0, (JavaType) collectionLikeType0, javaTypeArray0, (JavaType) collectionLikeType0);
    JavaType javaType0 = typeFactory0.constructGeneralizedType(referenceType0, class1);
    javaType0.containedTypeCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test4346() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
    JavaType javaType0 = typeFactory0.moreSpecificType(simpleType0, simpleType0);
    javaType0.isFinal();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test4548() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<SimpleType> class0 = SimpleType.class;
    TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;
    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);
    JavaType javaType0 = typeFactory0.moreSpecificType(resolvedRecursiveType0, (JavaType) null);
    javaType0.isEnumType();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test4649() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;
    SimpleType simpleType1 = TypeFactory.CORE_TYPE_CLASS;
    JavaType javaType0 = typeFactory0.moreSpecificType(simpleType0, simpleType1);
    javaType0.isFinal();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test4750() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    SimpleType simpleType0 = TypeFactory.CORE_TYPE_STRING;
    JavaType javaType0 = typeFactory0._unknownType();
    JavaType javaType1 = typeFactory0.moreSpecificType(simpleType0, javaType0);
    javaType1.isFinal();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test4751() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    SimpleType simpleType0 = TypeFactory.CORE_TYPE_STRING;
    JavaType javaType0 = typeFactory0._unknownType();
    JavaType javaType1 = typeFactory0.moreSpecificType(simpleType0, javaType0);
    javaType0.isAbstract();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test4852() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    Class<Properties> class0 = Properties.class;
    CollectionLikeType collectionLikeType0 = typeFactory0.constructCollectionLikeType(class0, class0);
    collectionLikeType0.isInterface();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test4953() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    Class<HashSet> class0 = HashSet.class;
    Class<Properties> class1 = Properties.class;
    typeFactory0.constructMapType((Class<? extends Map>) null, class1, class0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test5054() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<Properties> class0 = Properties.class;
    typeFactory0.constructMapType(class0, class0, class0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test5155() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    Class<SimpleType> class0 = SimpleType.class;
    Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 1);
    typeFactory0.constructParametricType(class0, classArray0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test5256() throws Throwable {
    TypeFactory.defaultInstance();
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null, defaultSerializerProvider_Impl0, defaultDeserializationContext_Impl0);
    PropertyNamingStrategy propertyNamingStrategy0 = new PropertyNamingStrategy();
    ObjectMapper objectMapper1 = objectMapper0.setPropertyNamingStrategy(propertyNamingStrategy0);
    PropertyAccessor propertyAccessor0 = PropertyAccessor.FIELD;
    JsonAutoDetect.Visibility jsonAutoDetect_Visibility0 = JsonAutoDetect.Visibility.ANY;
    ObjectMapper objectMapper2 = objectMapper1.setVisibility(propertyAccessor0, jsonAutoDetect_Visibility0);
    JsonGenerator.Feature[] jsonGenerator_FeatureArray0 = new JsonGenerator.Feature[2];
    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT;
    jsonGenerator_FeatureArray0[0] = jsonGenerator_Feature0;
    JsonGenerator.Feature jsonGenerator_Feature1 = JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT;
    jsonGenerator_FeatureArray0[1] = jsonGenerator_Feature1;
    ObjectMapper objectMapper3 = objectMapper2.enable(jsonGenerator_FeatureArray0);
    objectMapper3.getPropertyNamingStrategy();
    AtomicReference<Module> atomicReference0 = new AtomicReference<Module>();
    objectMapper2.readerForUpdating(defaultDeserializationContext_Impl0);
    Class<DataInputStream> class0 = DataInputStream.class;
    ClassStack classStack0 = new ClassStack(class0);
    Class<MapLikeType> class1 = MapLikeType.class;
    ClassStack classStack1 = classStack0.child(class1);
    ClassStack classStack2 = classStack1.find(class0);
    ClassStack classStack3 = classStack2._parent;
    Class<SimpleModule> class2 = SimpleModule.class;
    SimpleType simpleType0 = TypeFactory.CORE_TYPE_INT;
    TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;
    LinkedHashSet<JsonSerializer<ReferenceType>> linkedHashSet0 = new LinkedHashSet<JsonSerializer<ReferenceType>>();
    ArrayType arrayType0 = new ArrayType(simpleType0, typeBindings0, classStack0, linkedHashSet0, (Object) null, false);
    ArrayType arrayType1 = arrayType0.withTypeHandler(classStack2);
    ArrayType arrayType2 = arrayType0.withValueHandler(arrayType1);
    arrayType2.isEnumType();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test5357() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    ObjectIdGenerators.IntSequenceGenerator objectIdGenerators_IntSequenceGenerator0 = new ObjectIdGenerators.IntSequenceGenerator();
    objectIdGenerators_IntSequenceGenerator0.getScope();
    Class<JsonDeserializer> class0 = JsonDeserializer.class;
    ObjectReader objectReader0 = objectMapper0.readerFor(class0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test5357() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    ObjectIdGenerators.IntSequenceGenerator objectIdGenerators_IntSequenceGenerator0 = new ObjectIdGenerators.IntSequenceGenerator();
    objectIdGenerators_IntSequenceGenerator0.getScope();
    Class<JsonDeserializer> class0 = JsonDeserializer.class;
    ObjectReader objectReader0 = objectMapper0.readerFor(class0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test5458() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<LinkedList> class0 = LinkedList.class;
    JavaType javaType0 = typeFactory0.constructType((Type) class0);
    TypeBindings typeBindings0 = TypeBindings.create(class0, javaType0);
    JavaType[] javaTypeArray0 = new JavaType[5];
    JavaType javaType1 = typeFactory0._constructSimple(class0, typeBindings0, javaType0, javaTypeArray0);
    javaType1.containedTypeCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test5559() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    Class<String> class0 = String.class;
    JavaType javaType0 = typeFactory0.uncheckedSimpleType(class0);
    javaType0.isAbstract();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test5561() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    Class<String> class0 = String.class;
    JavaType javaType0 = typeFactory0.uncheckedSimpleType(class0);
    javaType0.isFinal();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test5662() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<Long> class0 = Long.TYPE;
    JavaType javaType0 = typeFactory0.constructType((Type) class0);
    javaType0.isPrimitive();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.type.TypeFactory,@Test(timeout = 4000)
public void test5763() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.instance;
    TypeParser typeParser0 = new TypeParser(typeFactory0);
    TypeModifier[] typeModifierArray0 = new TypeModifier[1];
    TypeFactory typeFactory1 = new TypeFactory(typeParser0, typeModifierArray0);
    Class<Object> class0 = Object.class;
    typeFactory1.constructArrayType(class0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
