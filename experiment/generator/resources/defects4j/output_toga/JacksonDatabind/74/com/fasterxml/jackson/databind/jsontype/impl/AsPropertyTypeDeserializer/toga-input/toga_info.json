{
  "test45" : {
    "methodSignature" : "protected Object _deserializeTypedUsingDefaultImpl(JsonParser p, DeserializationContext ctxt, TokenBuffer tb) throws IOException",
    "methodName" : "_deserializeTypedUsingDefaultImpl",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test45() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();\n    BooleanNode booleanNode0 = BooleanNode.getFalse();\n    JsonParser jsonParser0 = objectMapper0.treeAsTokens(booleanNode0);\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, \"\", true, (JavaType) null);\n    TokenBuffer tokenBuffer0 = new TokenBuffer(jsonParser0, deserializationContext0);\n    Object object0 = asPropertyTypeDeserializer0._deserializeTypedUsingDefaultImpl(jsonParser0, deserializationContext0, tokenBuffer0);\n}",
    "testName" : "test45"
  },
  "test00" : {
    "methodSignature" : "public boolean isRequired()",
    "methodName" : "isRequired",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<Integer> class0 = Integer.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(mapLikeType0, (TypeIdResolver) null, \"Y46&.\\\"gCa@,bhPcfm\", false, mapLikeType0);\n    PropertyName propertyName0 = PropertyName.USE_DEFAULT;\n    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, mapLikeType0, propertyName0, asPropertyTypeDeserializer0, (Annotations) null, (AnnotatedParameter) null, 0, \"Y46&.\\\"gCa@,bhPcfm\", (PropertyMetadata) null);\n    creatorProperty0.isRequired();\n}",
    "testName" : "test00"
  },
  "test11" : {
    "methodSignature" : "public String writeValueAsString(Object value) throws JsonProcessingException",
    "methodName" : "writeValueAsString",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, \".Gz#9\\\"#C\", false, (JavaType) null);\n    String string0 = objectMapper0.writeValueAsString(asPropertyTypeDeserializer0);\n}",
    "testName" : "test11"
  },
  "test22" : {
    "methodSignature" : "public TypeDeserializer forProperty(BeanProperty prop)",
    "methodName" : "forProperty",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<Map> class0 = Map.class;\n    MapType mapType0 = typeFactory0.constructRawMapType(class0);\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(mapType0, typeFactory0);\n    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.PROPERTY;\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(mapType0, classNameIdResolver0, \"u6\", true, mapType0, jsonTypeInfo_As0);\n    TypeDeserializer typeDeserializer0 = asPropertyTypeDeserializer0.forProperty((BeanProperty) null);\n}",
    "testName" : "test22"
  }
}