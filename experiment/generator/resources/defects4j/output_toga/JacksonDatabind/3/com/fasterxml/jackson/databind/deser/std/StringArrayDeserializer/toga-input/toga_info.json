{
  "test00" : {
    "methodSignature" : "public Object deserializeWithType(JsonParser jp, DeserializationContext ctxt, TypeDeserializer typeDeserializer) throws IOException",
    "methodName" : "deserializeWithType",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00() throws Throwable {\n    StringArrayDeserializer stringArrayDeserializer0 = new StringArrayDeserializer();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();\n    stringArrayDeserializer0.deserializeWithType(jsonParser0, deserializationContext0, (TypeDeserializer) null);\n}",
    "testName" : "test00"
  },
  "test11" : {
    "methodSignature" : "protected final String[] _deserializeCustom(JsonParser jp, DeserializationContext ctxt) throws IOException",
    "methodName" : "_deserializeCustom",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11() throws Throwable {\n    StringArrayDeserializer stringArrayDeserializer0 = new StringArrayDeserializer();\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    StringArrayDeserializer stringArrayDeserializer1 = new StringArrayDeserializer(stringArrayDeserializer0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[9];\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    deserializationFeatureArray0[1] = deserializationFeature0;\n    deserializationFeatureArray0[2] = deserializationFeature0;\n    deserializationFeatureArray0[3] = deserializationFeature0;\n    deserializationFeatureArray0[4] = deserializationFeatureArray0[3];\n    deserializationFeatureArray0[5] = deserializationFeature0;\n    deserializationFeatureArray0[6] = deserializationFeature0;\n    deserializationFeatureArray0[7] = deserializationFeature0;\n    deserializationFeatureArray0[8] = deserializationFeature0;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0, deserializationFeatureArray0);\n    JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(true);\n    ArrayNode arrayNode0 = jsonNodeFactory0.arrayNode();\n    ValueNode valueNode0 = arrayNode0.numberNode((Long) null);\n    JsonParser jsonParser0 = objectReader0.treeAsTokens(valueNode0);\n    stringArrayDeserializer1._deserializeCustom(jsonParser0, defaultDeserializationContext_Impl0);\n}",
    "testName" : "test11"
  },
  "test22" : {
    "methodSignature" : "protected final String[] _deserializeCustom(JsonParser jp, DeserializationContext ctxt) throws IOException",
    "methodName" : "_deserializeCustom",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22() throws Throwable {\n    StringArrayDeserializer stringArrayDeserializer0 = StringArrayDeserializer.instance;\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    StringArrayDeserializer stringArrayDeserializer1 = new StringArrayDeserializer(stringArrayDeserializer0);\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);\n    JsonParser jsonParser0 = arrayNode0.traverse();\n    StringArrayDeserializer stringArrayDeserializer2 = new StringArrayDeserializer(stringArrayDeserializer1);\n    stringArrayDeserializer2._deserializeCustom(jsonParser0, defaultDeserializationContext_Impl0);\n}",
    "testName" : "test22"
  },
  "test33" : {
    "methodSignature" : "protected final String[] _deserializeCustom(JsonParser jp, DeserializationContext ctxt) throws IOException",
    "methodName" : "_deserializeCustom",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33() throws Throwable {\n    StringArrayDeserializer stringArrayDeserializer0 = new StringArrayDeserializer();\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    StringArrayDeserializer stringArrayDeserializer1 = new StringArrayDeserializer(stringArrayDeserializer0);\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);\n    BigInteger bigInteger0 = BigInteger.ONE;\n    BigIntegerNode bigIntegerNode0 = new BigIntegerNode(bigInteger0);\n    ArrayNode arrayNode1 = arrayNode0.insert(3848, (JsonNode) bigIntegerNode0);\n    JsonParser jsonParser0 = arrayNode1.traverse();\n    stringArrayDeserializer1._deserializeCustom(jsonParser0, defaultDeserializationContext_Impl0);\n}",
    "testName" : "test33"
  },
  "test44" : {
    "methodSignature" : "protected final String[] _deserializeCustom(JsonParser jp, DeserializationContext ctxt) throws IOException",
    "methodName" : "_deserializeCustom",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44() throws Throwable {\n    StringArrayDeserializer stringArrayDeserializer0 = new StringArrayDeserializer();\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    StringArrayDeserializer stringArrayDeserializer1 = new StringArrayDeserializer(stringArrayDeserializer0);\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);\n    arrayNode0.insert(1669, (JsonNode) null);\n    JsonParser jsonParser0 = arrayNode0.traverse();\n    stringArrayDeserializer1._deserializeCustom(jsonParser0, defaultDeserializationContext_Impl0);\n}",
    "testName" : "test44"
  },
  "test55" : {
    "methodSignature" : "protected final String[] _deserializeCustom(JsonParser jp, DeserializationContext ctxt) throws IOException",
    "methodName" : "_deserializeCustom",
    "className" : "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test55() throws Throwable {\n    StringArrayDeserializer stringArrayDeserializer0 = StringArrayDeserializer.instance;\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser((InputStream) null);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    stringArrayDeserializer0._deserializeCustom(jsonParser0, defaultDeserializationContext_Impl0);\n}",
    "testName" : "test55"
  }
}