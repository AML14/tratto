{
  "test1212" : {
    "methodSignature" : "protected SettableAnyProperty constructAnySetter(DeserializationContext ctxt, BeanDescription beanDesc, AnnotatedMember mutator) throws JsonMappingException",
    "methodName" : "constructAnySetter",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    beanDeserializerFactory0.constructAnySetter((DeserializationContext) null, (BeanDescription) null, (AnnotatedMember) null);\n}",
    "testName" : "test1212"
  },
  "test1313" : {
    "methodSignature" : "protected boolean isPotentialBeanType(Class<?> type)",
    "methodName" : "isPotentialBeanType",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    Class<MatchStrength> class0 = MatchStrength.class;\n    beanDeserializerFactory0.isPotentialBeanType(class0);\n}",
    "testName" : "test1313"
  },
  "test1111" : {
    "methodSignature" : "public String findClassDescription()",
    "methodName" : "findClassDescription",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((Map) null).when(pOJOPropertiesCollector0).getInjectables();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);\n    BeanDeserializerBuilder beanDeserializerBuilder0 = beanDeserializerFactory0.constructBeanDeserializerBuilder(defaultDeserializationContext_Impl0, basicBeanDescription0);\n    beanDeserializerFactory0.addInjectables(defaultDeserializationContext_Impl0, basicBeanDescription0, beanDeserializerBuilder0);\n    basicBeanDescription0.findClassDescription();\n}",
    "testName" : "test1111"
  },
  "test000" : {
    "methodSignature" : "public DeserializerFactory withConfig(DeserializerFactoryConfig config)",
    "methodName" : "withConfig",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);\n    DeserializerFactory deserializerFactory0 = beanDeserializerFactory0.withConfig(deserializerFactoryConfig0);\n}",
    "testName" : "test000"
  },
  "test011" : {
    "methodSignature" : "public JsonDeserializer<Object> createBuilderBasedDeserializer(DeserializationContext ctxt, JavaType valueType, BeanDescription beanDesc, Class<?> builderClass) throws JsonMappingException",
    "methodName" : "createBuilderBasedDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);\n    DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();\n    Class<ObjectIdGenerators.StringIdGenerator> class0 = ObjectIdGenerators.StringIdGenerator.class;\n    beanDeserializerFactory0.instance.createBuilderBasedDeserializer(deserializationContext0, (JavaType) null, basicBeanDescription0, class0);\n}",
    "testName" : "test011"
  },
  "test022" : {
    "methodSignature" : "public DeserializerFactory withConfig(DeserializerFactoryConfig config)",
    "methodName" : "withConfig",
    "className" : "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DeserializerFactory deserializerFactory0 = beanDeserializerFactory0.withConfig(deserializerFactoryConfig0);\n}",
    "testName" : "test022"
  }
}