{
  "test3434" : {
    "methodSignature" : "public char[] getTextCharacters() throws IOException, JsonParseException",
    "methodName" : "getTextCharacters",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    BinaryNode binaryNode0 = BinaryNode.EMPTY_BINARY_NODE;\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(binaryNode0);\n    treeTraversingParser0.nextToken();\n    treeTraversingParser0._nodeCursor = null;\n    treeTraversingParser0.getTextCharacters();\n}",
    "testName" : "test3434"
  },
  "test4545" : {
    "methodSignature" : "public byte[] getBinaryValue(Base64Variant b64variant) throws IOException, JsonParseException",
    "methodName" : "getBinaryValue",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4545() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ArrayNode arrayNode0 = objectMapper0.createArrayNode();\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(arrayNode0, objectMapper0);\n    byte[] byteArray0 = treeTraversingParser0.getBinaryValue((Base64Variant) null);\n}",
    "testName" : "test4545"
  },
  "test3535" : {
    "methodSignature" : "public String getText()",
    "methodName" : "getText",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    TextNode textNode0 = TextNode.EMPTY_STRING_NODE;\n    POJONode pOJONode0 = new POJONode(textNode0);\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(pOJONode0);\n    treeTraversingParser0.nextToken();\n    String string0 = treeTraversingParser0.getText();\n}",
    "testName" : "test3535"
  },
  "test4444" : {
    "methodSignature" : "public boolean isNaN()",
    "methodName" : "isNaN",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4444() throws Throwable {\n    BinaryNode binaryNode0 = BinaryNode.EMPTY_BINARY_NODE;\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(binaryNode0);\n    boolean boolean0 = treeTraversingParser0.isNaN();\n}",
    "testName" : "test4444"
  },
  "test2121" : {
    "methodSignature" : "public String getText()",
    "methodName" : "getText",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    BinaryNode binaryNode0 = BinaryNode.EMPTY_BINARY_NODE;\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(binaryNode0);\n    TreeTraversingParser treeTraversingParser1 = (TreeTraversingParser) treeTraversingParser0.skipChildren();\n    JsonToken jsonToken0 = JsonToken.START_OBJECT;\n    treeTraversingParser1._nextToken = jsonToken0;\n    treeTraversingParser1.nextLongValue((-324L));\n    String string0 = treeTraversingParser1.getText();\n}",
    "testName" : "test2121"
  },
  "test3232" : {
    "methodSignature" : "public String getText()",
    "methodName" : "getText",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    LongNode longNode0 = new LongNode(0L);\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(longNode0);\n    treeTraversingParser0.nextToken();\n    String string0 = treeTraversingParser0.getText();\n}",
    "testName" : "test3232"
  },
  "test1111" : {
    "methodSignature" : "protected void _handleEOF() throws JsonParseException",
    "methodName" : "_handleEOF",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    BooleanNode booleanNode0 = BooleanNode.getTrue();\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(booleanNode0);\n    treeTraversingParser0._handleEOF();\n}",
    "testName" : "test1111"
  },
  "test4343" : {
    "methodSignature" : "public boolean isNaN()",
    "methodName" : "isNaN",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4343() throws Throwable {\n    DecimalNode decimalNode0 = DecimalNode.ZERO;\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(decimalNode0);\n    boolean boolean0 = treeTraversingParser0.isNaN();\n}",
    "testName" : "test4343"
  },
  "test3333" : {
    "methodSignature" : "public String getText()",
    "methodName" : "getText",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    DecimalNode decimalNode0 = DecimalNode.ZERO;\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(decimalNode0);\n    treeTraversingParser0.nextValue();\n    String string0 = treeTraversingParser0.getText();\n}",
    "testName" : "test3333"
  },
  "test033" : {
    "methodSignature" : "public Number getNumberValue() throws IOException",
    "methodName" : "getNumberValue",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    BinaryNode binaryNode0 = BinaryNode.EMPTY_BINARY_NODE;\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(binaryNode0);\n    treeTraversingParser0.getNumberValue();\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public boolean hasTextCharacters()",
    "methodName" : "hasTextCharacters",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    FloatNode floatNode0 = FloatNode.valueOf(0.0F);\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(floatNode0);\n    boolean boolean0 = treeTraversingParser0.hasTextCharacters();\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public int getTextOffset() throws IOException, JsonParseException",
    "methodName" : "getTextOffset",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TextNode textNode0 = new TextNode(\"[NamedType, class \");\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(textNode0, objectMapper0);\n    int int0 = treeTraversingParser0.getTextOffset();\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public BigInteger getBigIntegerValue() throws IOException",
    "methodName" : "getBigIntegerValue",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    BinaryNode binaryNode0 = BinaryNode.EMPTY_BINARY_NODE;\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(binaryNode0);\n    treeTraversingParser0.getBigIntegerValue();\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "public double getDoubleValue() throws IOException",
    "methodName" : "getDoubleValue",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    BinaryNode binaryNode0 = BinaryNode.EMPTY_BINARY_NODE;\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(binaryNode0);\n    treeTraversingParser0.getDoubleValue();\n}",
    "testName" : "test1616"
  },
  "test3838" : {
    "methodSignature" : "public String getModuleName()",
    "methodName" : "getModuleName",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3838() throws Throwable {\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    SimpleModule simpleModule0 = new SimpleModule();\n    ValueNode valueNode0 = jsonNodeFactory0.pojoNode(simpleModule0);\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(valueNode0, (ObjectCodec) null);\n    SimpleModule simpleModule1 = (SimpleModule) treeTraversingParser0.getEmbeddedObject();\n    simpleModule1.getModuleName();\n}",
    "testName" : "test3838"
  },
  "test4949" : {
    "methodSignature" : "public NumberType getNumberType() throws IOException",
    "methodName" : "getNumberType",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4949() throws Throwable {\n    DecimalNode decimalNode0 = DecimalNode.ZERO;\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(decimalNode0);\n    treeTraversingParser0.close();\n    treeTraversingParser0.getNumberType();\n}",
    "testName" : "test4949"
  },
  "test3939" : {
    "methodSignature" : "public Object getEmbeddedObject()",
    "methodName" : "getEmbeddedObject",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3939() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ArrayNode arrayNode0 = objectMapper0.createArrayNode();\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(arrayNode0);\n    Object object0 = treeTraversingParser0.getEmbeddedObject();\n}",
    "testName" : "test3939"
  },
  "test1414" : {
    "methodSignature" : "public BigDecimal getDecimalValue() throws IOException",
    "methodName" : "getDecimalValue",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    BooleanNode booleanNode0 = BooleanNode.getFalse();\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(booleanNode0);\n    treeTraversingParser0.getDecimalValue();\n}",
    "testName" : "test1414"
  },
  "test3636" : {
    "methodSignature" : "public NumberType getNumberType() throws IOException",
    "methodName" : "getNumberType",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3636() throws Throwable {\n    LongNode longNode0 = new LongNode((-324L));\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(longNode0);\n    JsonParser.NumberType jsonParser_NumberType0 = treeTraversingParser0.getNumberType();\n}",
    "testName" : "test3636"
  },
  "test1515" : {
    "methodSignature" : "public long getLongValue() throws IOException",
    "methodName" : "getLongValue",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    DecimalNode decimalNode0 = DecimalNode.ZERO;\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(decimalNode0);\n    long long0 = treeTraversingParser0.getLongValue();\n}",
    "testName" : "test1515"
  },
  "test3737" : {
    "methodSignature" : "public Object getEmbeddedObject()",
    "methodName" : "getEmbeddedObject",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3737() throws Throwable {\n    FloatNode floatNode0 = FloatNode.valueOf(2077.23F);\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(floatNode0);\n    treeTraversingParser0.close();\n    Object object0 = treeTraversingParser0.getEmbeddedObject();\n}",
    "testName" : "test3737"
  },
  "test4242" : {
    "methodSignature" : "public boolean isNaN()",
    "methodName" : "isNaN",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4242() throws Throwable {\n    FloatNode floatNode0 = FloatNode.valueOf(0.0F);\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(floatNode0);\n    treeTraversingParser0.close();\n    boolean boolean0 = treeTraversingParser0.isNaN();\n}",
    "testName" : "test4242"
  },
  "test3030" : {
    "methodSignature" : "public String getText()",
    "methodName" : "getText",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    BooleanNode booleanNode0 = BooleanNode.FALSE;\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(booleanNode0);\n    JsonToken jsonToken0 = JsonToken.FIELD_NAME;\n    treeTraversingParser0._nextToken = jsonToken0;\n    treeTraversingParser0.nextToken();\n    String string0 = treeTraversingParser0.getText();\n}",
    "testName" : "test3030"
  },
  "test4141" : {
    "methodSignature" : "public Object getEmbeddedObject()",
    "methodName" : "getEmbeddedObject",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4141() throws Throwable {\n    BooleanNode booleanNode0 = BooleanNode.getTrue();\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(booleanNode0);\n    Object object0 = treeTraversingParser0.getEmbeddedObject();\n}",
    "testName" : "test4141"
  },
  "test2020" : {
    "methodSignature" : "public String getText()",
    "methodName" : "getText",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    BinaryNode binaryNode0 = BinaryNode.EMPTY_BINARY_NODE;\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(binaryNode0);\n    treeTraversingParser0.nextLongValue((-324L));\n    String string0 = treeTraversingParser0.getText();\n}",
    "testName" : "test2020"
  },
  "test4040" : {
    "methodSignature" : "public Object getEmbeddedObject()",
    "methodName" : "getEmbeddedObject",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4040() throws Throwable {\n    BinaryNode binaryNode0 = BinaryNode.EMPTY_BINARY_NODE;\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(binaryNode0);\n    Object object0 = treeTraversingParser0.getEmbeddedObject();\n}",
    "testName" : "test4040"
  },
  "test022" : {
    "methodSignature" : "public float getFloatValue() throws IOException",
    "methodName" : "getFloatValue",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    LongNode longNode0 = new LongNode((-9223372036854775808L));\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(longNode0);\n    float float0 = treeTraversingParser0.getFloatValue();\n}",
    "testName" : "test022"
  },
  "test066" : {
    "methodSignature" : "public int getTextLength() throws IOException, JsonParseException",
    "methodName" : "getTextLength",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    BinaryNode binaryNode0 = BinaryNode.EMPTY_BINARY_NODE;\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(binaryNode0);\n    treeTraversingParser0.getTextLength();\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    DecimalNode decimalNode0 = DecimalNode.ZERO;\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(decimalNode0);\n    boolean boolean0 = treeTraversingParser0.isClosed();\n}",
    "testName" : "test088"
  },
  "test2929" : {
    "methodSignature" : "public String getText()",
    "methodName" : "getText",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    BooleanNode booleanNode0 = BooleanNode.getTrue();\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(booleanNode0);\n    treeTraversingParser0.close();\n    String string0 = treeTraversingParser0.getText();\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    BinaryNode binaryNode0 = BinaryNode.EMPTY_BINARY_NODE;\n    TreeTraversingParser treeTraversingParser0 = new TreeTraversingParser(binaryNode0);\n    treeTraversingParser0.close();\n    treeTraversingParser0.nextToken();\n    treeTraversingParser0.isClosed();\n}",
    "testName" : "test1919"
  }
}