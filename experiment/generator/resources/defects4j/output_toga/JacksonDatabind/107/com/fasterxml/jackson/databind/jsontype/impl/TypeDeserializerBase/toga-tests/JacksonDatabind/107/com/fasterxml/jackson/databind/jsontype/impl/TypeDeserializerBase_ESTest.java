/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 28 08:52:02 GMT 2024
 */
package com.fasterxml.jackson.databind.jsontype.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.BeanProperty;
import com.fasterxml.jackson.databind.DeserializationConfig;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.InjectableValues;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.cfg.BaseSettings;
import com.fasterxml.jackson.databind.cfg.ConfigOverrides;
import com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
import com.fasterxml.jackson.databind.ext.CoreXMLDeserializers;
import com.fasterxml.jackson.databind.introspect.SimpleMixInResolver;
import com.fasterxml.jackson.databind.jsontype.TypeIdResolver;
import com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;
import com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver;
import com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
import com.fasterxml.jackson.databind.type.TypeFactory;
import com.fasterxml.jackson.databind.util.AccessPattern;
import com.fasterxml.jackson.databind.util.RootNameLookup;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class TypeDeserializerBase_ESTest extends TypeDeserializerBase_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, "ZV", false, (JavaType) null);
        String string0 = asWrapperTypeDeserializer0.getPropertyName();
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, "ZV", false, (JavaType) null);
        asWrapperTypeDeserializer0.getDefaultImpl();
        asWrapperTypeDeserializer0.getPropertyName();
        assertNotNull(asWrapperTypeDeserializer0.getPropertyName());
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, "GSE2a=s_A", false, (JavaType) null);
        asWrapperTypeDeserializer0._handleMissingTypeId(defaultDeserializationContext_Impl0, "GSE2a=s_A");
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, "ZV", true, (JavaType) null);
        asWrapperTypeDeserializer0.getTypeIdResolver();
        asWrapperTypeDeserializer0.getPropertyName();
        assertNotNull(asWrapperTypeDeserializer0.getPropertyName());
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, "Zk'V", false, (JavaType) null);
        String string0 = asWrapperTypeDeserializer0.toString();
        asWrapperTypeDeserializer0.getPropertyName();
        assertNotNull(asWrapperTypeDeserializer0.getPropertyName());
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, "Zk'V", false, (JavaType) null);
        String string0 = asWrapperTypeDeserializer0.toString();
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, "oIu/6", true, (JavaType) null);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createParser("oIu/6");
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        asWrapperTypeDeserializer0.deserializeTypedFromArray(jsonParser0, defaultDeserializationContext_Impl0);
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createParser("JSON");
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, "JSON", false, (JavaType) null);
        asWrapperTypeDeserializer0._deserializeWithNativeTypeId(jsonParser0, defaultDeserializationContext_Impl0);
        asWrapperTypeDeserializer0.getPropertyName();
        assertNotNull(asWrapperTypeDeserializer0.getPropertyName());
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        JavaType javaType0 = TypeFactory.unknownType();
        MinimalClassNameIdResolver minimalClassNameIdResolver0 = new MinimalClassNameIdResolver(javaType0, typeFactory0);
        AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer(javaType0, minimalClassNameIdResolver0, "No (native) type id found when one was expected for polymorphic type handling", false, javaType0);
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        AsWrapperTypeDeserializer asWrapperTypeDeserializer1 = new AsWrapperTypeDeserializer(asWrapperTypeDeserializer0, beanProperty_Bogus0);
        asWrapperTypeDeserializer1._handleUnknownTypeId((DeserializationContext) null, "No (native) type id found when one was expected for polymorphic type handling");
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, "dh>|", false, (JavaType) null);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        asWrapperTypeDeserializer0._deserializeWithNativeTypeId((JsonParser) null, defaultDeserializationContext_Impl0, defaultDeserializationContext_Impl0);
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        JavaType javaType0 = TypeFactory.unknownType();
        AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer(javaType0, (TypeIdResolver) null, "d`D|", false, javaType0);
        asWrapperTypeDeserializer0._findDefaultImplDeserializer((DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        JavaType javaType0 = TypeFactory.unknownType();
        MinimalClassNameIdResolver minimalClassNameIdResolver0 = new MinimalClassNameIdResolver(javaType0, typeFactory0);
        AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer(javaType0, minimalClassNameIdResolver0, "5F@lbIJ7Mg", false, (JavaType) null);
        DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
        BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
        RootNameLookup rootNameLookup0 = new RootNameLookup();
        ConfigOverrides configOverrides0 = new ConfigOverrides();
        DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);
        HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
        InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std(hashMap0);
        DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, (JsonParser) null, injectableValues_Std0);
        asWrapperTypeDeserializer0._findDefaultImplDeserializer(defaultDeserializationContext0);
        asWrapperTypeDeserializer0.getPropertyName();
        assertNotNull(asWrapperTypeDeserializer0.getPropertyName());
    }

    @Test(timeout = 4000)
    public void test1112() throws Throwable {
        JavaType javaType0 = TypeFactory.unknownType();
        AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer(javaType0, (TypeIdResolver) null, "d`D|", false, javaType0);
        Class<CoreXMLDeserializers.Std> class0 = CoreXMLDeserializers.Std.class;
        CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class0, 0);
        asWrapperTypeDeserializer0._defaultImplDeserializer = (JsonDeserializer<Object>) coreXMLDeserializers_Std0;
        JsonDeserializer<Object> jsonDeserializer0 = asWrapperTypeDeserializer0._findDefaultImplDeserializer((DeserializationContext) null);
        asWrapperTypeDeserializer0.getPropertyName();
        assertNotNull(asWrapperTypeDeserializer0.getPropertyName());
    }

    @Test(timeout = 4000)
    public void test1113() throws Throwable {
        JavaType javaType0 = TypeFactory.unknownType();
        AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer(javaType0, (TypeIdResolver) null, "d`D|", false, javaType0);
        Class<CoreXMLDeserializers.Std> class0 = CoreXMLDeserializers.Std.class;
        CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class0, 0);
        asWrapperTypeDeserializer0._defaultImplDeserializer = (JsonDeserializer<Object>) coreXMLDeserializers_Std0;
        JsonDeserializer<Object> jsonDeserializer0 = asWrapperTypeDeserializer0._findDefaultImplDeserializer((DeserializationContext) null);
        jsonDeserializer0.getEmptyAccessPattern();
        assertNotNull(jsonDeserializer0.getEmptyAccessPattern());
    }

    @Test(timeout = 4000)
    public void test1214() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createParser("JSON");
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, "JSON", false, (JavaType) null);
        asWrapperTypeDeserializer0._deserializeWithNativeTypeId(jsonParser0, defaultDeserializationContext_Impl0, "JSON");
    }

    @Test(timeout = 4000)
    public void test1315() throws Throwable {
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        JavaType javaType0 = TypeFactory.unknownType();
        MinimalClassNameIdResolver minimalClassNameIdResolver0 = new MinimalClassNameIdResolver(javaType0, typeFactory0);
        AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer(javaType0, minimalClassNameIdResolver0, "No (native) type id found when one was expected for polymorphic type handling", false, javaType0);
        asWrapperTypeDeserializer0._handleUnknownTypeId((DeserializationContext) null, "No (native) type id found when one was expected for polymorphic type handling");
    }
}
