{
  "test1212" : {
    "methodSignature" : "public ObjectReader with(Locale l)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(jsonFactory0);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.USE_BIG_INTEGER_FOR_INTS;\n    ObjectReader objectReader1 = objectMapper0.reader(deserializationFeature0);\n    objectReader1.with((Locale) null);\n    objectReader0.with((Locale) null);\n}",
    "testName" : "test1212"
  },
  "test5757" : {
    "methodSignature" : "public <T> T readValue(URL src) throws IOException, JsonProcessingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5757() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(jsonFactory0);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    TokenFilter tokenFilter1 = tokenFilter0.filterStartObject();\n    tokenFilter1.filterStartArray();\n    ArrayList<ObjectReader> arrayList0 = new ArrayList<ObjectReader>();\n    objectReader0.getAttributes();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.withExactBigDecimals(true);\n    BooleanNode booleanNode0 = jsonNodeFactory0.booleanNode(true);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, booleanNode0, true);\n    PipedWriter pipedWriter0 = new PipedWriter();\n    PipedReader pipedReader0 = new PipedReader(pipedWriter0, 3);\n    iOContext0.allocReadIOBuffer();\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, pipedReader0, objectReader0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.getSchema();\n    objectReader0.withValueToUpdate(bufferRecycler0);\n    URL uRL0 = MockURL.getFileExample();\n    objectReader0.readValue(uRL0);\n}",
    "testName" : "test5757"
  },
  "test2323" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(String json) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(false);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    Class<BooleanNode> class0 = BooleanNode.class;\n    objectReader0.withType(class0);\n    objectReader0.readValue(\"?Y21r)y/2\");\n    String string0 = null;\n    objectReader0.readValues(string0);\n}",
    "testName" : "test2323"
  },
  "test3434" : {
    "methodSignature" : "public ObjectReader withAttribute(Object key, Object value)",
    "methodName" : "withAttribute",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(jsonFactory0);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    TokenFilter tokenFilter1 = tokenFilter0.filterStartObject();\n    tokenFilter1.filterStartArray();\n    ArrayList<ObjectReader> arrayList0 = new ArrayList<ObjectReader>();\n    DataFormatReaders dataFormatReaders0 = new DataFormatReaders(arrayList0);\n    DataFormatReaders dataFormatReaders1 = dataFormatReaders0.with((ObjectReader[]) null);\n    MatchStrength matchStrength0 = MatchStrength.SOLID_MATCH;\n    DataFormatReaders dataFormatReaders2 = dataFormatReaders1.withOptimalMatch(matchStrength0);\n    dataFormatReaders1.withMaxInputLookahead(2950);\n    byte[] byteArray0 = new byte[0];\n    DataFormatReaders.Match dataFormatReaders_Match0 = dataFormatReaders0.findFormat(byteArray0, 1, (-237));\n    dataFormatReaders_Match0.createParserWithMatch();\n    objectReader0.readValues((JsonParser) null);\n    JsonParser.Feature[] jsonParser_FeatureArray0 = new JsonParser.Feature[0];\n    ObjectReader objectReader1 = objectReader0.withFeatures(jsonParser_FeatureArray0);\n    char[] charArray0 = new char[5];\n    charArray0[0] = '-';\n    charArray0[1] = 'm';\n    charArray0[2] = 'j';\n    charArray0[3] = '0';\n    charArray0[4] = 'E';\n    JsonParser jsonParser0 = jsonFactory0.createParser(charArray0, 0, 64);\n    TypeReference<DoubleNode> typeReference0 = (TypeReference<DoubleNode>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    doReturn((Type) null).when(typeReference0).getType();\n    objectReader0.readValue(jsonParser0, (TypeReference<?>) typeReference0);\n    LongNode longNode0 = LongNode.valueOf(dataFormatReaders2.DEFAULT_MAX_INPUT_LOOKAHEAD);\n    boolean boolean0 = false;\n    boolean boolean1 = false;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter1, boolean0, boolean1);\n    objectReader1.withAttribute(longNode0, filteringParserDelegate0);\n}",
    "testName" : "test3434"
  },
  "test1313" : {
    "methodSignature" : "public ObjectReader withAttribute(Object key, Object value)",
    "methodName" : "withAttribute",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(jsonFactory0);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    TokenFilter tokenFilter1 = tokenFilter0.filterStartObject();\n    tokenFilter1.filterStartArray();\n    ArrayList<ObjectReader> arrayList0 = new ArrayList<ObjectReader>();\n    objectReader0.getAttributes();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.withExactBigDecimals(true);\n    BooleanNode booleanNode0 = jsonNodeFactory0.booleanNode(true);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, booleanNode0, true);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT;\n    DeserializationFeature deserializationFeature1 = DeserializationFeature.EAGER_DESERIALIZER_FETCH;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[3];\n    deserializationFeatureArray0[0] = deserializationFeature1;\n    deserializationFeatureArray0[1] = deserializationFeature0;\n    deserializationFeatureArray0[2] = deserializationFeature1;\n    ObjectReader objectReader1 = objectReader0.withoutFeatures(deserializationFeatureArray0);\n    TypeFactory typeFactory0 = objectReader1.getTypeFactory();\n    Class<ArrayList> class0 = ArrayList.class;\n    CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class0);\n    ObjectNode objectNode0 = jsonNodeFactory0.objectNode();\n    CollectionType collectionType1 = collectionType0.withValueHandler(objectNode0);\n    objectReader1.withAttribute(collectionType1, tokenFilter0);\n}",
    "testName" : "test1313"
  },
  "test4545" : {
    "methodSignature" : "public boolean isEnabled(JsonParser.Feature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4545() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.WRAP_EXCEPTIONS;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[3];\n    deserializationFeatureArray0[1] = deserializationFeature0;\n    deserializationFeatureArray0[2] = deserializationFeature0;\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, deserializationFeature0, true);\n    PipedReader pipedReader0 = new PipedReader();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, pipedReader0, objectReader0, charsToNameCanonicalizer0);\n    byte[] byteArray0 = new byte[8];\n    byteArray0[0] = (byte) (-92);\n    byteArray0[1] = (byte) 90;\n    byteArray0[2] = (byte) 23;\n    byteArray0[3] = (byte) 59;\n    byteArray0[4] = (byte) 1;\n    byteArray0[5] = (byte) 1;\n    byteArray0[6] = (byte) 74;\n    byteArray0[7] = (byte) (-64);\n    FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);\n    readerBasedJsonParser0.getSchema();\n    ObjectReader objectReader1 = objectReader0.with((FormatSchema) null);\n    MapperFeature mapperFeature0 = MapperFeature.DEFAULT_VIEW_INCLUSION;\n    objectReader1.withoutAttribute(mapperFeature0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_NUMERIC_LEADING_ZEROS;\n    objectReader1.isEnabled(jsonParser_Feature0);\n}",
    "testName" : "test4545"
  },
  "test5656" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(String json) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5656() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();\n    InjectableValues.Std injectableValues_Std1 = injectableValues_Std0.addValue(\"com.fasterxml.jackson.databind.SerializerProvider\", (Object) objectMapper0);\n    ObjectReader objectReader0 = objectMapper0.reader((InjectableValues) injectableValues_Std1);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);\n    NamedType[] namedTypeArray0 = new NamedType[2];\n    Class<CollectionType> class0 = CollectionType.class;\n    NamedType namedType0 = new NamedType(class0);\n    namedTypeArray0[0] = namedType0;\n    NamedType namedType1 = new NamedType(class0, \"Illegal character (\");\n    namedTypeArray0[1] = namedType1;\n    stdSubtypeResolver0.registerSubtypes(namedTypeArray0);\n    jsonLocationInstantiator0.getDelegateType(deserializationConfig0);\n    JsonFactory jsonFactory0 = new JsonFactory(objectReader0);\n    BufferRecycler bufferRecycler0 = jsonFactory0._getBufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, jsonLocationInstantiator0, true);\n    PipedWriter pipedWriter0 = new PipedWriter();\n    PipedReader pipedReader0 = new PipedReader(pipedWriter0);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[1];\n    charArray0[0] = 'f';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, pipedReader0, objectMapper0, charsToNameCanonicalizer0, charArray0, (-1790), 1126, true);\n    readerBasedJsonParser0.getSchema();\n    ObjectReader objectReader1 = objectReader0.with((FormatSchema) null);\n    objectReader0._verifySchemaType((FormatSchema) null);\n    ObjectReader objectReader2 = objectReader1.with(jsonFactory0);\n    objectReader2.readValues(\"]YxQ4,6^k=j5(\");\n}",
    "testName" : "test5656"
  },
  "test1010" : {
    "methodSignature" : "public <T> T readValue(File src) throws IOException, JsonProcessingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    MockFile mockFile0 = new MockFile(\"No 'injectableValues' configured, can not inject value with id [\");\n    mockFile0.createNewFile();\n    objectMapper0.reader();\n    objectReader0.readValue((File) mockFile0);\n}",
    "testName" : "test1010"
  },
  "test4444" : {
    "methodSignature" : "public <T> T readValue(File src) throws IOException, JsonProcessingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4444() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MockFile mockFile0 = new MockFile(\"No 'injectableValues' configured, can not inject value with id [\");\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.readValue((File) mockFile0);\n}",
    "testName" : "test4444"
  },
  "test5555" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(byte[] src, int offset, int length) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5555() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    Stack<ObjectReader> stack0 = new Stack<ObjectReader>();\n    DataFormatReaders dataFormatReaders0 = new DataFormatReaders(stack0);\n    byte[] byteArray0 = null;\n    FileSystemHandling.appendStringToFile((EvoSuiteFile) null, \"\");\n    ObjectReader objectReader1 = objectReader0.withoutRootName();\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[5];\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT;\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    DeserializationFeature deserializationFeature1 = DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS;\n    deserializationFeatureArray0[1] = deserializationFeature1;\n    DeserializationFeature deserializationFeature2 = DeserializationFeature.ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT;\n    deserializationFeatureArray0[2] = deserializationFeature2;\n    JsonFactory jsonFactory0 = new JsonFactory();\n    char[] charArray0 = new char[2];\n    charArray0[0] = 'i';\n    charArray0[1] = 'L';\n    JsonParser jsonParser0 = jsonFactory0.createParser(charArray0, 343, 64);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    TokenFilter tokenFilter1 = tokenFilter0.filterStartObject();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter1, false, false);\n    filteringParserDelegate0.getSchema();\n    ObjectReader objectReader2 = objectReader1.with((FormatSchema) null);\n    objectReader1._verifySchemaType((FormatSchema) null);\n    ObjectReader objectReader3 = objectReader2.with(jsonFactory0);\n    objectReader3.at(\"vl ;`A6wN-oG\");\n    int int0 = (-2725);\n    objectReader2.readValues(byteArray0, int0, dataFormatReaders0.DEFAULT_MAX_INPUT_LOOKAHEAD);\n}",
    "testName" : "test5555"
  },
  "test2121" : {
    "methodSignature" : "public ObjectReader withoutAttribute(Object key)",
    "methodName" : "withoutAttribute",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    Vector<ObjectReader> vector0 = new Vector<ObjectReader>();\n    DataFormatReaders dataFormatReaders0 = new DataFormatReaders(vector0);\n    ObjectReader[] objectReaderArray0 = new ObjectReader[3];\n    objectReaderArray0[0] = objectReader0;\n    objectReaderArray0[1] = objectReader0;\n    objectReaderArray0[2] = objectReader0;\n    DataFormatReaders dataFormatReaders1 = dataFormatReaders0.with(objectReaderArray0);\n    DataFormatReaders dataFormatReaders2 = dataFormatReaders1.withMaxInputLookahead((-1094));\n    byte[] byteArray0 = new byte[4];\n    byteArray0[0] = (byte) 0;\n    byteArray0[1] = (byte) (-75);\n    byteArray0[2] = (byte) (-86);\n    byteArray0[3] = (byte) (-1);\n    dataFormatReaders2.findFormat(byteArray0, 0, 0);\n    ObjectReader objectReader1 = objectReader0.forType((JavaType) null);\n    BooleanNode booleanNode0 = BooleanNode.valueOf(false);\n    objectReader1.withoutAttribute(booleanNode0);\n}",
    "testName" : "test2121"
  },
  "test1111" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(String json) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(true);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.withType((TypeReference<?>) null);\n    String string0 = null;\n    objectReader0.readValues(string0);\n}",
    "testName" : "test1111"
  },
  "test4343" : {
    "methodSignature" : "public <T> T readValue(JsonParser p) throws IOException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4343() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.WRAP_EXCEPTIONS;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[10];\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonNode jsonNode0 = objectReader0.createArrayNode();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.AUTO_CLOSE_SOURCE;\n    jsonFactory0.disable(jsonParser_Feature0);\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    JsonParser jsonParser1 = objectReader0._considerFilter(jsonParser0, true);\n    JsonParser jsonParser2 = objectMapper0.treeAsTokens(jsonNode0);\n    objectReader0._bindAsTree(jsonParser2);\n    Class<AbstractDeserializer> class0 = AbstractDeserializer.class;\n    ObjectReader objectReader1 = objectReader0.forType(class0);\n    objectReader0.withValueToUpdate(jsonParser0);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    objectReader0.getAttributes();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    DoubleNode.valueOf((-1105.0));\n    IOContext iOContext0 = new IOContext(bufferRecycler0, jsonParser2, true);\n    PipedWriter pipedWriter0 = new PipedWriter();\n    PipedReader pipedReader0 = new PipedReader(pipedWriter0, 1);\n    CharsToNameCanonicalizer.createRoot();\n    jsonParser1.getSchema();\n    ObjectReader objectReader2 = objectReader1.with((FormatSchema) null);\n    objectReader2.readValue(jsonParser2);\n}",
    "testName" : "test4343"
  },
  "test5454" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(URL src) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5454() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(false);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.getAttributes();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    DoubleNode.valueOf(2);\n    PipedWriter pipedWriter0 = new PipedWriter();\n    PipedReader pipedReader0 = new PipedReader(pipedWriter0, 1);\n    CharsToNameCanonicalizer.createRoot();\n    objectReader0.withType((JavaType) null);\n    objectReader0.getConfig();\n    IntNode intNode0 = IntNode.valueOf(156);\n    JsonParser jsonParser0 = objectReader0.treeAsTokens(intNode0);\n    objectReader0._bindAndClose(jsonParser0);\n    URL uRL0 = MockURL.getFileExample();\n    objectReader0.readValues(uRL0);\n}",
    "testName" : "test5454"
  },
  "test3333" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(URL src) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = new ObjectMapper(objectMapper0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.READ_UNKNOWN_ENUM_VALUES_AS_NULL;\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper1.reader(deserializationFeature0);\n    DeserializationFeature deserializationFeature1 = DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[3];\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    deserializationFeatureArray0[1] = deserializationFeature0;\n    deserializationFeatureArray0[2] = deserializationFeature0;\n    objectReader0.with(deserializationFeature1, deserializationFeatureArray0);\n    URL uRL0 = MockURL.getFtpExample();\n    objectReader0.readValues(uRL0);\n}",
    "testName" : "test3333"
  },
  "test033" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(File src) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    MockFile mockFile0 = new MockFile(\" 8 2M|3[M4@{f\");\n    mockFile0.createNewFile();\n    objectReader0.readValues((File) mockFile0);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public ObjectReader reader(DeserializationFeature feature)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.USE_LONG_FOR_INTS;\n    objectReader0.without(deserializationFeature0);\n    DeserializationFeature deserializationFeature1 = DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS;\n    objectMapper0.reader(deserializationFeature1);\n}",
    "testName" : "test055"
  },
  "test099" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(URL src) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = new ObjectMapper(objectMapper0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.READ_UNKNOWN_ENUM_VALUES_AS_NULL;\n    ObjectReader objectReader0 = objectMapper1.reader(deserializationFeature0);\n    URL uRL0 = MockURL.getFtpExample();\n    objectReader0.readValues(uRL0);\n}",
    "testName" : "test099"
  },
  "test2727" : {
    "methodSignature" : "public ObjectReader withoutRootName()",
    "methodName" : "withoutRootName",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(false);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.getAttributes();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    DoubleNode doubleNode0 = DoubleNode.valueOf(2);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, doubleNode0, false);\n    PipedWriter pipedWriter0 = new PipedWriter();\n    PipedReader pipedReader0 = new PipedReader(pipedWriter0, 1);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, pipedReader0, objectMapper0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.getSchema();\n    ObjectReader objectReader1 = objectReader0.with((FormatSchema) null);\n    objectReader1.readValues((JsonParser) readerBasedJsonParser0, (JavaType) null);\n    objectReader0.withoutRootName();\n}",
    "testName" : "test2727"
  },
  "test3838" : {
    "methodSignature" : "public JsonNode readTree(InputStream in) throws IOException, JsonProcessingException",
    "methodName" : "readTree",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3838() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(true);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    byte[] byteArray0 = new byte[0];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 54, (-769));\n    objectReader0.readTree((InputStream) byteArrayInputStream0);\n}",
    "testName" : "test3838"
  },
  "test1717" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(byte[] src, int offset, int length) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);\n    objectReader0.readValues((byte[]) null, 0, 0);\n}",
    "testName" : "test1717"
  },
  "test2828" : {
    "methodSignature" : "public InjectableValues getInjectableValues()",
    "methodName" : "getInjectableValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    ObjectMapper objectMapper1 = new ObjectMapper(objectMapper0);\n    SerializationFeature serializationFeature0 = SerializationFeature.WRAP_ROOT_VALUE;\n    objectMapper1.configure(serializationFeature0, true);\n    ObjectReader objectReader0 = objectMapper1.reader((JsonNodeFactory) null);\n    objectReader0.createObjectNode();\n    objectReader0.getInjectableValues();\n}",
    "testName" : "test2828"
  },
  "test3939" : {
    "methodSignature" : "public boolean isEnabled(DeserializationFeature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3939() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.getAttributes();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    DoubleNode.valueOf(2);\n    PipedWriter pipedWriter0 = new PipedWriter();\n    PipedReader pipedReader0 = new PipedReader(pipedWriter0, 1);\n    CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[0];\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.USE_BIG_INTEGER_FOR_INTS;\n    objectReader0.isEnabled(deserializationFeature0);\n}",
    "testName" : "test3939"
  },
  "test1414" : {
    "methodSignature" : "public ObjectReader with(FormatFeature feature)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = new ObjectMapper(objectMapper0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.READ_UNKNOWN_ENUM_VALUES_AS_NULL;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[7];\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    deserializationFeatureArray0[1] = deserializationFeature0;\n    deserializationFeatureArray0[2] = deserializationFeature0;\n    deserializationFeatureArray0[3] = deserializationFeature0;\n    deserializationFeatureArray0[4] = deserializationFeature0;\n    deserializationFeatureArray0[5] = deserializationFeature0;\n    deserializationFeatureArray0[6] = deserializationFeature0;\n    ObjectReader objectReader0 = objectMapper1.reader(deserializationFeature0, deserializationFeatureArray0);\n    objectReader0.with((FormatSchema) null);\n    objectReader0.with(deserializationFeature0);\n    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0).when(formatFeature0).getMask();\n    objectReader0.with(formatFeature0);\n}",
    "testName" : "test1414"
  },
  "test4848" : {
    "methodSignature" : "public InjectableValues getInjectableValues()",
    "methodName" : "getInjectableValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4848() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(false);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.getAttributes();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    DoubleNode doubleNode0 = DoubleNode.valueOf(2);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, doubleNode0, false);\n    PipedWriter pipedWriter0 = new PipedWriter();\n    PipedReader pipedReader0 = new PipedReader(pipedWriter0, 1);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, pipedReader0, objectReader0, charsToNameCanonicalizer0);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"l#\");\n    readerBasedJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);\n    readerBasedJsonParser0.getSchema();\n    objectReader0.with((FormatSchema) null);\n    objectReader0.getInjectableValues();\n}",
    "testName" : "test4848"
  },
  "test5959" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(String json) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5959() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(true);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.without((FormatFeature) null);\n    String string0 = null;\n    objectReader0.readValues(string0);\n}",
    "testName" : "test5959"
  },
  "test3636" : {
    "methodSignature" : "public ObjectReader withValueToUpdate(Object value)",
    "methodName" : "withValueToUpdate",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3636() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(jsonFactory0);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    TokenFilter tokenFilter1 = tokenFilter0.filterStartObject();\n    tokenFilter1.filterStartArray();\n    ArrayList<ObjectReader> arrayList0 = new ArrayList<ObjectReader>();\n    objectReader0.getAttributes();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.withExactBigDecimals(true);\n    BooleanNode booleanNode0 = jsonNodeFactory0.booleanNode(true);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, booleanNode0, true);\n    PipedWriter pipedWriter0 = new PipedWriter();\n    PipedReader pipedReader0 = new PipedReader(pipedWriter0, 2243);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2243, pipedReader0, objectReader0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.getSchema();\n    objectReader0.withValueToUpdate(bufferRecycler0);\n}",
    "testName" : "test3636"
  },
  "test1515" : {
    "methodSignature" : "public ObjectReader with(ContextAttributes attrs)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(false);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    ContextAttributes contextAttributes0 = objectReader0.getAttributes();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    DoubleNode doubleNode0 = DoubleNode.valueOf(2);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, doubleNode0, false);\n    PipedWriter pipedWriter0 = new PipedWriter();\n    PipedReader pipedReader0 = new PipedReader(pipedWriter0, 1);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, pipedReader0, objectReader0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.getSchema();\n    ObjectReader objectReader1 = objectReader0.with((FormatSchema) null);\n    objectReader1.with(contextAttributes0);\n}",
    "testName" : "test1515"
  },
  "test4747" : {
    "methodSignature" : "protected Object _bind(JsonParser p, Object valueToUpdate) throws IOException",
    "methodName" : "_bind",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4747() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.WRAP_EXCEPTIONS;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[2];\n    deserializationFeatureArray0[1] = deserializationFeature0;\n    JsonParser jsonParser0 = null;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    objectReader0.readValues((byte[]) null);\n    JsonParser jsonParser1 = null;\n    objectReader0._bind(jsonParser0, jsonParser1);\n}",
    "testName" : "test4747"
  },
  "test5858" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(InputStream src) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5858() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[3];\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    DeserializationFeature deserializationFeature1 = DeserializationFeature.ACCEPT_FLOAT_AS_INT;\n    deserializationFeatureArray0[1] = deserializationFeature1;\n    deserializationFeatureArray0[2] = deserializationFeature0;\n    ObjectReader objectReader1 = objectMapper0.reader(deserializationFeature0, deserializationFeatureArray0);\n    JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);\n    JsonFactory jsonFactory1 = jsonFactory0.setRootValueSeparator(\"JSON\");\n    MockFile mockFile0 = new MockFile((String) null, \"JSON\");\n    mockFile0.setWritable(true, true);\n    File file0 = MockFile.createTempFile(\"JSON\", \"JSON\", (File) mockFile0);\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);\n    jsonFactory1.createGenerator((OutputStream) mockFileOutputStream0);\n    jsonFactory1.createParser((char[]) null, 0, 0);\n    ObjectReader objectReader2 = objectReader0.with((Locale) null);\n    objectReader0.createArrayNode();\n    objectReader2.at((JsonPointer) null);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    ObjectReader objectReader3 = new ObjectReader(objectReader1, tokenFilter0);\n    URL uRL0 = MockURL.getFileExample();\n    InputStream inputStream0 = objectReader3._inputStream(uRL0);\n    objectReader0.readValues(inputStream0);\n}",
    "testName" : "test5858"
  },
  "test2626" : {
    "methodSignature" : "public <T> T treeToValue(TreeNode n, Class<T> valueType) throws JsonProcessingException",
    "methodName" : "treeToValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = new ObjectMapper(objectMapper0);\n    ObjectReader objectReader0 = objectMapper1.reader();\n    TypeFactory.defaultInstance();\n    Class<DeserializationConfig> class0 = DeserializationConfig.class;\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.withExactBigDecimals(false);\n    ConcurrentHashMap<String, JsonNode> concurrentHashMap0 = new ConcurrentHashMap<String, JsonNode>();\n    ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0, concurrentHashMap0);\n    ObjectNode objectNode1 = objectNode0.deepCopy();\n    ObjectNode objectNode2 = objectNode1.put((String) null, false);\n    ObjectNode objectNode3 = objectNode2.removeAll();\n    objectNode3.get((String) null);\n    objectReader0.treeToValue((TreeNode) null, class0);\n}",
    "testName" : "test2626"
  },
  "test3737" : {
    "methodSignature" : "public ObjectReader without(DeserializationFeature first, DeserializationFeature... other)",
    "methodName" : "without",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3737() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(false);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    FileSystemHandling.appendStringToFile((EvoSuiteFile) null, \"Called operation not supported for TokenBuffer\");\n    DoubleNode doubleNode0 = DoubleNode.valueOf(2);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, doubleNode0, false);\n    PipedWriter pipedWriter0 = new PipedWriter();\n    PipedReader pipedReader0 = new PipedReader(pipedWriter0, 1);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, pipedReader0, objectMapper0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.getSchema();\n    ObjectReader objectReader1 = objectReader0.with((FormatSchema) null);\n    MockFile mockFile0 = new MockFile(\"Attempted to unwrap single value array for single 'java.util.Date' value but there was more than a single value in the array\");\n    objectReader1.withValueToUpdate(doubleNode0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT;\n    objectReader0.without(deserializationFeature0, (DeserializationFeature[]) null);\n}",
    "testName" : "test3737"
  },
  "test4242" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(File src) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4242() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.WRAP_EXCEPTIONS;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[3];\n    deserializationFeatureArray0[1] = deserializationFeature0;\n    deserializationFeatureArray0[2] = deserializationFeature0;\n    objectMapper0.reader();\n    objectMapper0.reader();\n    MockFile mockFile0 = new MockFile(\" 8 2M|3[M4@{f\");\n    mockFile0.createNewFile();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    FormatFeature[] formatFeatureArray0 = new FormatFeature[6];\n    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0, 0, 0, 0).when(formatFeature0).getMask();\n    formatFeatureArray0[0] = formatFeature0;\n    formatFeatureArray0[1] = formatFeature0;\n    formatFeatureArray0[2] = formatFeature0;\n    formatFeatureArray0[3] = formatFeature0;\n    formatFeatureArray0[4] = formatFeature0;\n    formatFeatureArray0[5] = formatFeature0;\n    objectReader0.withoutFeatures(formatFeatureArray0);\n    objectReader0.readValues((File) mockFile0);\n}",
    "testName" : "test4242"
  },
  "test5353" : {
    "methodSignature" : "public ObjectReader withAttributes(Map<?, ?> attrs)",
    "methodName" : "withAttributes",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5353() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(jsonFactory0);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    tokenFilter0.includeElement(42);\n    TokenFilter tokenFilter1 = tokenFilter0.filterStartObject();\n    tokenFilter1.filterStartArray();\n    ArrayList<ObjectReader> arrayList0 = new ArrayList<ObjectReader>();\n    objectReader0.getAttributes();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.withExactBigDecimals(true);\n    BooleanNode booleanNode0 = jsonNodeFactory0.booleanNode(true);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, booleanNode0, true);\n    PipedWriter pipedWriter0 = new PipedWriter();\n    PipedReader pipedReader0 = new PipedReader(pipedWriter0, 2243);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2243, pipedReader0, objectReader0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.getSchema();\n    objectReader0.withValueToUpdate(bufferRecycler0);\n    objectReader0.withAttributes((Map<?, ?>) null);\n}",
    "testName" : "test5353"
  },
  "test4141" : {
    "methodSignature" : "public ObjectReader with(TimeZone tz)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4141() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(false);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.getAttributes();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    DoubleNode doubleNode0 = DoubleNode.valueOf(2);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, doubleNode0, false);\n    PipedWriter pipedWriter0 = new PipedWriter();\n    PipedReader pipedReader0 = new PipedReader(pipedWriter0, 1);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, pipedReader0, objectMapper0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.getSchema();\n    ObjectReader objectReader1 = objectReader0.with((FormatSchema) null);\n    FormatFeature[] formatFeatureArray0 = new FormatFeature[6];\n    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0, 0, 0, 0).when(formatFeature0).getMask();\n    formatFeatureArray0[0] = formatFeature0;\n    formatFeatureArray0[1] = formatFeature0;\n    formatFeatureArray0[2] = formatFeature0;\n    formatFeatureArray0[3] = formatFeature0;\n    formatFeatureArray0[4] = formatFeature0;\n    formatFeatureArray0[5] = formatFeature0;\n    objectReader1.withFeatures(formatFeatureArray0);\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"i8)5_Ub%N^0o;,Xki`\");\n    objectReader1.with(timeZone0);\n}",
    "testName" : "test4141"
  },
  "test5252" : {
    "methodSignature" : "public ObjectReader with(JsonFactory f)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5252() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(false);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.getAttributes();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    DoubleNode doubleNode0 = DoubleNode.valueOf(2);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, doubleNode0, false);\n    PipedWriter pipedWriter0 = new PipedWriter();\n    PipedReader pipedReader0 = new PipedReader(pipedWriter0, 1);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, pipedReader0, objectReader0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.getSchema();\n    ObjectReader objectReader1 = objectReader0.with((FormatSchema) null);\n    objectReader1._verifySchemaType((FormatSchema) null);\n    objectReader0.with((JsonFactory) null);\n}",
    "testName" : "test5252"
  },
  "test2020" : {
    "methodSignature" : "public ObjectReader with(JsonParser.Feature feature)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.IGNORE_UNDEFINED;\n    JsonFactory jsonFactory1 = jsonFactory0.disable(jsonParser_Feature0);\n    OutputDecorator outputDecorator0 = mock(OutputDecorator.class, new ViolatedAssumptionAnswer());\n    JsonFactory jsonFactory2 = jsonFactory1.setOutputDecorator(outputDecorator0);\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory2, (DefaultSerializerProvider) null, defaultDeserializationContext_Impl0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.USE_LONG_FOR_INTS;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    objectReader0.with(jsonParser_Feature0);\n}",
    "testName" : "test2020"
  },
  "test3131" : {
    "methodSignature" : "public ObjectReader at(final JsonPointer pointer)",
    "methodName" : "at",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[3];\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    DeserializationFeature deserializationFeature1 = DeserializationFeature.ACCEPT_FLOAT_AS_INT;\n    deserializationFeatureArray0[1] = deserializationFeature1;\n    deserializationFeatureArray0[2] = deserializationFeature0;\n    objectMapper0.reader(deserializationFeature0, deserializationFeatureArray0);\n    JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);\n    JsonFactory jsonFactory1 = jsonFactory0.setRootValueSeparator(\"JSON\");\n    MockFile mockFile0 = new MockFile((String) null, \"JSON\");\n    File file0 = MockFile.createTempFile(\"JSON\", \"JSON\", (File) mockFile0);\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);\n    jsonFactory1.createGenerator((OutputStream) mockFileOutputStream0);\n    jsonFactory1.createParser((char[]) null, 0, 0);\n    ObjectReader objectReader1 = objectReader0.with((Locale) null);\n    objectReader0.createArrayNode();\n    objectReader1.at((JsonPointer) null);\n}",
    "testName" : "test3131"
  },
  "test4040" : {
    "methodSignature" : "public ObjectReader with(Locale l)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4040() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    FormatFeature[] formatFeatureArray0 = new FormatFeature[6];\n    FormatFeature formatFeature0 = mock(FormatFeature.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0, 0, 0, 0).when(formatFeature0).getMask();\n    formatFeatureArray0[0] = formatFeature0;\n    formatFeatureArray0[1] = formatFeature0;\n    formatFeatureArray0[2] = formatFeature0;\n    formatFeatureArray0[3] = formatFeature0;\n    formatFeatureArray0[4] = formatFeature0;\n    formatFeatureArray0[5] = formatFeature0;\n    objectReader0.withFeatures(formatFeatureArray0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_INVALID_SUBTYPE;\n    ObjectReader objectReader1 = objectMapper0.reader(deserializationFeature0);\n    objectReader1.with((Locale) null);\n    objectReader1.with((Locale) null);\n}",
    "testName" : "test4040"
  },
  "test5050" : {
    "methodSignature" : "public ObjectReader withFormatDetection(DataFormatReaders readers)",
    "methodName" : "withFormatDetection",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5050() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ContextAttributes contextAttributes0 = ContextAttributes.Impl.getEmpty();\n    ObjectReader objectReader0 = objectMapper0.reader(contextAttributes0);\n    LinkedList<ObjectReader> linkedList0 = new LinkedList<ObjectReader>();\n    DataFormatReaders dataFormatReaders0 = new DataFormatReaders(linkedList0);\n    ObjectReader[] objectReaderArray0 = new ObjectReader[4];\n    objectReaderArray0[0] = objectReader0;\n    objectReaderArray0[1] = objectReader0;\n    objectReaderArray0[2] = objectReader0;\n    objectReaderArray0[3] = objectReader0;\n    DataFormatReaders dataFormatReaders1 = dataFormatReaders0.with(objectReaderArray0);\n    DataFormatReaders dataFormatReaders2 = dataFormatReaders1.withMaxInputLookahead(64);\n    objectReader0.withFormatDetection(dataFormatReaders2);\n}",
    "testName" : "test5050"
  },
  "test000" : {
    "methodSignature" : "public ContextAttributes getAttributes()",
    "methodName" : "getAttributes",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(false);\n    ObjectReader objectReader0 = objectMapper0.reader(jsonNodeFactory0);\n    objectReader0.getAttributes();\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "protected Object _bind(JsonParser p, Object valueToUpdate) throws IOException",
    "methodName" : "_bind",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<NullNode> class0 = NullNode.class;\n    ObjectReader objectReader0 = objectMapper0.readerFor(class0);\n    MissingNode.getInstance();\n    objectReader0._bind((JsonParser) null, objectMapper0);\n}",
    "testName" : "test022"
  },
  "test066" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser p) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    Vector<ObjectReader> vector0 = new Vector<ObjectReader>();\n    DataFormatReaders dataFormatReaders0 = new DataFormatReaders(vector0);\n    ObjectReader[] objectReaderArray0 = new ObjectReader[3];\n    objectReaderArray0[0] = objectReader0;\n    objectReaderArray0[1] = objectReader0;\n    objectReaderArray0[2] = objectReader0;\n    DataFormatReaders dataFormatReaders1 = dataFormatReaders0.with(objectReaderArray0);\n    dataFormatReaders1.withMaxInputLookahead((-1094));\n    byte[] byteArray0 = new byte[4];\n    DataFormatReaders.Match dataFormatReaders_Match0 = dataFormatReaders1.findFormat(byteArray0, 1, 0);\n    dataFormatReaders_Match0.createParserWithMatch();\n    objectReader0.readValues((JsonParser) null);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(String json) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(false);\n    ObjectReader objectReader0 = objectMapper0.reader(jsonNodeFactory0);\n    objectReader0.readValues((String) null);\n}",
    "testName" : "test088"
  },
  "test1818" : {
    "methodSignature" : "public ObjectReader withView(Class<?> activeView)",
    "methodName" : "withView",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.AUTO_CLOSE_SOURCE;\n    JsonFactory jsonFactory1 = jsonFactory0.disable(jsonParser_Feature0);\n    ObjectMapper objectMapper1 = new ObjectMapper(jsonFactory1);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_UNRESOLVED_OBJECT_IDS;\n    ObjectReader objectReader0 = objectMapper1.reader(deserializationFeature0);\n    Class<MapType> class0 = MapType.class;\n    objectReader0.withView(class0);\n}",
    "testName" : "test1818"
  },
  "test1919" : {
    "methodSignature" : "public ObjectReader with(Locale l)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.USE_BIG_INTEGER_FOR_INTS;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    objectReader0.with((Locale) null);\n    objectReader0.with((Locale) null);\n}",
    "testName" : "test1919"
  }
}