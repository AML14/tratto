com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,@Test(timeout = 4000)
public void test2023() throws Throwable {
    Vector<SettableBeanProperty> vector0 = new Vector<SettableBeanProperty>();
    PropertyName propertyName0 = PropertyName.NO_NAME;
    Class<RuntimeException> class0 = RuntimeException.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
    ArrayType arrayType0 = ArrayType.construct((JavaType) referenceType0, (TypeBindings) null);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(arrayType0, typeFactory0);
    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.EXISTING_PROPERTY;
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(referenceType0, classNameIdResolver0, ""kD'ab"", true, simpleType0, jsonTypeInfo_As0);
    AnnotationMap annotationMap0 = new AnnotationMap();
    JavaType[] javaTypeArray0 = new JavaType[0];
    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (TypeBindings) null, (JavaType) arrayType0, javaTypeArray0, (JavaType) referenceType0);
    AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, collectionLikeType0, annotationMap0, 2194);
    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, arrayType0, propertyName0, asPropertyTypeDeserializer0, annotationMap0, annotatedParameter0, 2194, classNameIdResolver0, propertyMetadata0);
    vector0.add((SettableBeanProperty) creatorProperty0);
    BeanPropertyMap beanPropertyMap0 = new BeanPropertyMap(true, vector0);
    beanPropertyMap0.replace(creatorProperty0);
    creatorProperty0.getPropertyIndex();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,@Test(timeout = 4000)
public void test2124() throws Throwable {
    Vector<SettableBeanProperty> vector0 = new Vector<SettableBeanProperty>();
    PropertyName propertyName0 = PropertyName.NO_NAME;
    Class<RuntimeException> class0 = RuntimeException.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
    ArrayType arrayType0 = ArrayType.construct((JavaType) referenceType0, (TypeBindings) null);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(arrayType0, typeFactory0);
    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.PROPERTY;
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(referenceType0, classNameIdResolver0, ""~D4ab"", false, simpleType0, jsonTypeInfo_As0);
    AnnotationMap annotationMap0 = new AnnotationMap();
    JavaType[] javaTypeArray0 = new JavaType[0];
    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (TypeBindings) null, (JavaType) arrayType0, javaTypeArray0, (JavaType) referenceType0);
    AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, collectionLikeType0, annotationMap0, 12);
    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, arrayType0, propertyName0, asPropertyTypeDeserializer0, annotationMap0, annotatedParameter0, (-783), classNameIdResolver0, propertyMetadata0);
    vector0.add((SettableBeanProperty) creatorProperty0);
    BeanPropertyMap beanPropertyMap0 = new BeanPropertyMap(true, vector0);
    SettableBeanProperty settableBeanProperty0 = beanPropertyMap0.find((-1));
    settableBeanProperty0.getName();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,@Test(timeout = 4000)
public void test2530() throws Throwable {
    Vector<SettableBeanProperty> vector0 = new Vector<SettableBeanProperty>();
    PropertyName propertyName0 = PropertyName.NO_NAME;
    Class<RuntimeException> class0 = RuntimeException.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
    ArrayType arrayType0 = ArrayType.construct((JavaType) referenceType0, (TypeBindings) null);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(arrayType0, typeFactory0);
    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.WRAPPER_ARRAY;
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(referenceType0, classNameIdResolver0, ""~D4ab"", false, simpleType0, jsonTypeInfo_As0);
    AnnotationMap annotationMap0 = new AnnotationMap();
    JavaType[] javaTypeArray0 = new JavaType[0];
    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (TypeBindings) null, (JavaType) arrayType0, javaTypeArray0, (JavaType) referenceType0);
    AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, collectionLikeType0, annotationMap0, 2194);
    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, arrayType0, propertyName0, asPropertyTypeDeserializer0, annotationMap0, annotatedParameter0, 2194, classNameIdResolver0, propertyMetadata0);
    vector0.add((SettableBeanProperty) creatorProperty0);
    NameTransformer nameTransformer0 = NameTransformer.simpleTransformer(""~D4ab"", ""~D4ab"");
    BeanPropertyMap beanPropertyMap0 = new BeanPropertyMap(true, vector0);
    BeanPropertyMap beanPropertyMap1 = beanPropertyMap0.renameAll(nameTransformer0);
    beanPropertyMap1.withProperty(creatorProperty0);
    SettableBeanProperty settableBeanProperty0 = beanPropertyMap1.find("""");
    settableBeanProperty0.getName();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,@Test(timeout = 4000)
public void test2734() throws Throwable {
    Vector<SettableBeanProperty> vector0 = new Vector<SettableBeanProperty>();
    PropertyName propertyName0 = PropertyName.USE_DEFAULT;
    Class<RuntimeException> class0 = RuntimeException.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
    ArrayType arrayType0 = ArrayType.construct((JavaType) referenceType0, (TypeBindings) null);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(arrayType0, typeFactory0);
    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.WRAPPER_ARRAY;
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(referenceType0, classNameIdResolver0, ""~D4ab"", false, simpleType0, jsonTypeInfo_As0);
    AnnotationMap annotationMap0 = new AnnotationMap();
    JavaType[] javaTypeArray0 = new JavaType[0];
    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (TypeBindings) null, (JavaType) arrayType0, javaTypeArray0, (JavaType) referenceType0);
    AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, collectionLikeType0, annotationMap0, 2194);
    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, arrayType0, propertyName0, asPropertyTypeDeserializer0, annotationMap0, annotatedParameter0, 2194, classNameIdResolver0, propertyMetadata0);
    vector0.add((SettableBeanProperty) creatorProperty0);
    vector0.add((SettableBeanProperty) creatorProperty0);
    NameTransformer nameTransformer0 = NameTransformer.simpleTransformer(""~D4ab"", ""~D4ab"");
    BeanPropertyMap beanPropertyMap0 = new BeanPropertyMap(true, vector0);
    BeanPropertyMap beanPropertyMap1 = beanPropertyMap0.renameAll(nameTransformer0);
    beanPropertyMap1.withProperty(creatorProperty0);
    SettableBeanProperty settableBeanProperty0 = beanPropertyMap1.find("""");
    settableBeanProperty0.getName();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,@Test(timeout = 4000)
public void test4252() throws Throwable {
    Vector<SettableBeanProperty> vector0 = new Vector<SettableBeanProperty>();
    PropertyName propertyName0 = PropertyName.NO_NAME;
    Class<RuntimeException> class0 = RuntimeException.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
    ArrayType arrayType0 = ArrayType.construct((JavaType) referenceType0, (TypeBindings) null);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(arrayType0, typeFactory0);
    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.WRAPPER_ARRAY;
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(referenceType0, classNameIdResolver0, ""kD'ab"", false, simpleType0, jsonTypeInfo_As0);
    AnnotationMap annotationMap0 = new AnnotationMap();
    JavaType[] javaTypeArray0 = new JavaType[0];
    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (TypeBindings) null, (JavaType) arrayType0, javaTypeArray0, (JavaType) referenceType0);
    AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, collectionLikeType0, annotationMap0, 2194);
    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, arrayType0, propertyName0, asPropertyTypeDeserializer0, annotationMap0, annotatedParameter0, 2194, classNameIdResolver0, propertyMetadata0);
    vector0.add((SettableBeanProperty) creatorProperty0);
    vector0.add((SettableBeanProperty) creatorProperty0);
    NameTransformer nameTransformer0 = NameTransformer.simpleTransformer(""kD'ab"", ""kD'ab"");
    BeanPropertyMap beanPropertyMap0 = new BeanPropertyMap(true, vector0);
    BeanPropertyMap beanPropertyMap1 = beanPropertyMap0.renameAll(nameTransformer0);
    BeanPropertyMap beanPropertyMap2 = beanPropertyMap1.withProperty(creatorProperty0);
    beanPropertyMap2.replace(creatorProperty0);
    creatorProperty0.getCreatorIndex();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
