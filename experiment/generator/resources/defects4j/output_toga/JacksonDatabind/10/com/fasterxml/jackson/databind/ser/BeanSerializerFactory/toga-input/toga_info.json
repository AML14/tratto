{
  "test1113" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1113() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MapperFeature mapperFeature0 = MapperFeature.REQUIRE_SETTERS_FOR_GETTERS;\n    objectMapper0.configure(mapperFeature0, true);\n    Class<ChronoLocalDate> class0 = ChronoLocalDate.class;\n    ObjectWriter objectWriter0 = objectMapper0.writerFor((Class<?>) class0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test1113"
  },
  "test1214" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1214() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MapperFeature mapperFeature0 = MapperFeature.DEFAULT_VIEW_INCLUSION;\n    ObjectMapper objectMapper1 = objectMapper0.configure(mapperFeature0, false);\n    Class<TypeIdResolver> class0 = TypeIdResolver.class;\n    ObjectWriter objectWriter0 = objectMapper1.writerFor((Class<?>) class0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test1214"
  },
  "test1012" : {
    "methodSignature" : "protected JsonSerializer<Object> constructBeanSerializer(SerializerProvider prov, BeanDescription beanDesc) throws JsonMappingException",
    "methodName" : "constructBeanSerializer",
    "className" : "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1012() throws Throwable {\n    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;\n    SimpleType simpleType0 = (SimpleType) TypeBindings.UNBOUND;\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forOtherUse((MapperConfig<?>) null, simpleType0, (AnnotatedClass) null);\n    beanSerializerFactory0.constructBeanSerializer((SerializerProvider) null, basicBeanDescription0);\n}",
    "testName" : "test1012"
  },
  "test000" : {
    "methodSignature" : "public boolean willSuppressNulls()",
    "methodName" : "willSuppressNulls",
    "className" : "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;\n    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();\n    Class<AnnotatedMethod>[] classArray0 = (Class<AnnotatedMethod>[]) Array.newInstance(Class.class, 1);\n    BeanPropertyWriter beanPropertyWriter1 = beanSerializerFactory0.constructFilteredBeanWriter(beanPropertyWriter0, classArray0);\n    beanPropertyWriter1.willSuppressNulls();\n}",
    "testName" : "test000"
  },
  "test011" : {
    "methodSignature" : "public SerializerFactory withConfig(SerializerFactoryConfig config)",
    "methodName" : "withConfig",
    "className" : "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig();\n    BeanSerializerFactory beanSerializerFactory0 = new BeanSerializerFactory(serializerFactoryConfig0);\n    SerializerFactory serializerFactory0 = beanSerializerFactory0.withConfig(serializerFactoryConfig0);\n}",
    "testName" : "test011"
  },
  "test022" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<CollectionLikeType> class0 = CollectionLikeType.class;\n    ObjectWriter objectWriter0 = objectMapper0.writerFor((Class<?>) class0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test022"
  },
  "test033" : {
    "methodSignature" : "protected JsonSerializer<?> _createSerializer2(SerializerProvider prov, JavaType type, BeanDescription beanDesc, boolean staticTyping) throws JsonMappingException",
    "methodName" : "_createSerializer2",
    "className" : "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;\n    Class<CollectionLikeType> class0 = CollectionLikeType.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forOtherUse((MapperConfig<?>) null, simpleType0, (AnnotatedClass) null);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<HashMap> class1 = HashMap.class;\n    Class<BeanSerializer> class2 = BeanSerializer.class;\n    MapType mapType0 = typeFactory0.constructMapType(class1, class1, class2);\n    beanSerializerFactory0._createSerializer2(defaultSerializerProvider_Impl0, mapType0, basicBeanDescription0, true);\n}",
    "testName" : "test033"
  },
  "test044" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<ObjectIdResolver> class0 = ObjectIdResolver.class;\n    Class<Integer> class1 = Integer.class;\n    SimpleType simpleType0 = SimpleType.construct(class1);\n    MapType mapType0 = MapType.construct(class0, simpleType0, simpleType0);\n    ObjectWriter objectWriter0 = objectMapper0.writerFor((JavaType) mapType0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test044"
  },
  "test055" : {
    "methodSignature" : "public ObjectMapper setSerializerFactory(SerializerFactory f)",
    "methodName" : "setSerializerFactory",
    "className" : "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;\n    SimpleSerializers simpleSerializers0 = new SimpleSerializers();\n    SerializerFactory serializerFactory0 = beanSerializerFactory0.withAdditionalSerializers(simpleSerializers0);\n    objectMapper0.setSerializerFactory(serializerFactory0);\n}",
    "testName" : "test055"
  },
  "test056" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;\n    SimpleSerializers simpleSerializers0 = new SimpleSerializers();\n    SerializerFactory serializerFactory0 = beanSerializerFactory0.withAdditionalSerializers(simpleSerializers0);\n    objectMapper0.setSerializerFactory(serializerFactory0);\n    Class<BasicBeanDescription> class0 = BasicBeanDescription.class;\n    ObjectWriter objectWriter0 = objectMapper0.writerFor((Class<?>) class0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test056"
  },
  "test067" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<MapperFeature> class0 = MapperFeature.class;\n    ObjectWriter objectWriter0 = objectMapper0.writerFor((Class<?>) class0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test067"
  },
  "test078" : {
    "methodSignature" : "public ObjectMapper setSerializerFactory(SerializerFactory f)",
    "methodName" : "setSerializerFactory",
    "className" : "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078() throws Throwable {\n    SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    BeanSerializerFactory beanSerializerFactory0 = new BeanSerializerFactory(serializerFactoryConfig0);\n    BeanSerializerBuilder beanSerializerBuilder0 = new BeanSerializerBuilder((BeanDescription) null);\n    BeanSerializerModifier beanSerializerModifier0 = mock(BeanSerializerModifier.class, new ViolatedAssumptionAnswer());\n    doReturn((List<BeanPropertyWriter>) null).when(beanSerializerModifier0).changeProperties(any(com.fasterxml.jackson.databind.SerializationConfig.class), any(com.fasterxml.jackson.databind.BeanDescription.class), anyList());\n    doReturn((JsonSerializer) null).when(beanSerializerModifier0).modifySerializer(any(com.fasterxml.jackson.databind.SerializationConfig.class), any(com.fasterxml.jackson.databind.BeanDescription.class), any(com.fasterxml.jackson.databind.JsonSerializer.class));\n    doReturn((List<BeanPropertyWriter>) null).when(beanSerializerModifier0).orderProperties(any(com.fasterxml.jackson.databind.SerializationConfig.class), any(com.fasterxml.jackson.databind.BeanDescription.class), anyList());\n    doReturn(beanSerializerBuilder0).when(beanSerializerModifier0).updateBuilder(any(com.fasterxml.jackson.databind.SerializationConfig.class), any(com.fasterxml.jackson.databind.BeanDescription.class), any(com.fasterxml.jackson.databind.ser.BeanSerializerBuilder.class));\n    SerializerFactory serializerFactory0 = beanSerializerFactory0.withSerializerModifier(beanSerializerModifier0);\n    objectMapper0.setSerializerFactory(serializerFactory0);\n}",
    "testName" : "test078"
  },
  "test1315" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1315() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MapperFeature mapperFeature0 = MapperFeature.REQUIRE_SETTERS_FOR_GETTERS;\n    ObjectMapper objectMapper1 = objectMapper0.configure(mapperFeature0, true);\n    PropertyAccessor propertyAccessor0 = PropertyAccessor.ALL;\n    JsonAutoDetect.Visibility jsonAutoDetect_Visibility0 = JsonAutoDetect.Visibility.ANY;\n    objectMapper0.setVisibility(propertyAccessor0, jsonAutoDetect_Visibility0);\n    Class<BasicBeanDescription> class0 = BasicBeanDescription.class;\n    ObjectWriter objectWriter0 = objectMapper1.writerFor((Class<?>) class0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test1315"
  },
  "test0810" : {
    "methodSignature" : "public JsonSerializer<Object> findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc) throws JsonMappingException",
    "methodName" : "findBeanSerializer",
    "className" : "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0810() throws Throwable {\n    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;\n    Class<MapperFeature> class0 = MapperFeature.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forOtherUse((MapperConfig<?>) null, simpleType0, (AnnotatedClass) null);\n    beanSerializerFactory0.findBeanSerializer((SerializerProvider) null, simpleType0, basicBeanDescription0);\n}",
    "testName" : "test0810"
  },
  "test1416" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1416() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MapperFeature mapperFeature0 = MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS;\n    objectMapper0.configure(mapperFeature0, false);\n    Class<Module> class0 = Module.class;\n    ObjectWriter objectWriter0 = objectMapper0.writerFor((Class<?>) class0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test1416"
  },
  "test0911" : {
    "methodSignature" : "public JsonSerializer<Object> findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc) throws JsonMappingException",
    "methodName" : "findBeanSerializer",
    "className" : "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0911() throws Throwable {\n    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<SimpleObjectIdResolver> class0 = SimpleObjectIdResolver.class;\n    ArrayType arrayType0 = typeFactory0.constructArrayType(class0);\n    JsonSerializer<Object> jsonSerializer0 = beanSerializerFactory0.findBeanSerializer(defaultSerializerProvider_Impl0, arrayType0, (BeanDescription) null);\n}",
    "testName" : "test0911"
  },
  "test079" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ser.BeanSerializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079() throws Throwable {\n    SerializerFactoryConfig serializerFactoryConfig0 = new SerializerFactoryConfig();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    BeanSerializerFactory beanSerializerFactory0 = new BeanSerializerFactory(serializerFactoryConfig0);\n    BeanSerializerBuilder beanSerializerBuilder0 = new BeanSerializerBuilder((BeanDescription) null);\n    BeanSerializerModifier beanSerializerModifier0 = mock(BeanSerializerModifier.class, new ViolatedAssumptionAnswer());\n    doReturn((List<BeanPropertyWriter>) null).when(beanSerializerModifier0).changeProperties(any(com.fasterxml.jackson.databind.SerializationConfig.class), any(com.fasterxml.jackson.databind.BeanDescription.class), anyList());\n    doReturn((JsonSerializer) null).when(beanSerializerModifier0).modifySerializer(any(com.fasterxml.jackson.databind.SerializationConfig.class), any(com.fasterxml.jackson.databind.BeanDescription.class), any(com.fasterxml.jackson.databind.JsonSerializer.class));\n    doReturn((List<BeanPropertyWriter>) null).when(beanSerializerModifier0).orderProperties(any(com.fasterxml.jackson.databind.SerializationConfig.class), any(com.fasterxml.jackson.databind.BeanDescription.class), anyList());\n    doReturn(beanSerializerBuilder0).when(beanSerializerModifier0).updateBuilder(any(com.fasterxml.jackson.databind.SerializationConfig.class), any(com.fasterxml.jackson.databind.BeanDescription.class), any(com.fasterxml.jackson.databind.ser.BeanSerializerBuilder.class));\n    SerializerFactory serializerFactory0 = beanSerializerFactory0.withSerializerModifier(beanSerializerModifier0);\n    objectMapper0.setSerializerFactory(serializerFactory0);\n    Class<BeanSerializer> class0 = BeanSerializer.class;\n    ObjectWriter objectWriter0 = objectMapper0.writerFor((Class<?>) class0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test079"
  }
}