{
  "test1212" : {
    "methodSignature" : "public Object complete(JsonParser p, DeserializationContext ctxt, PropertyValueBuffer buffer, PropertyBasedCreator creator) throws IOException",
    "methodName" : "complete",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = new ExternalTypeHandler.Builder((JavaType) null);\n    PropertyName propertyName0 = PropertyName.NO_NAME;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);\n    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.EXISTING_PROPERTY;\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, \" gIXH0wcL,`\", false, (JavaType) null, jsonTypeInfo_As0);\n    Class<Annotation> class0 = Annotation.class;\n    AnnotationCollector.TwoAnnotations annotationCollector_TwoAnnotations0 = new AnnotationCollector.TwoAnnotations(class0, (Annotation) null, class0, (Annotation) null);\n    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;\n    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationCollector_TwoAnnotations0, (AnnotatedParameter) null, 1145, classNameIdResolver0, propertyMetadata0);\n    externalTypeHandler_Builder0.addExternal(creatorProperty0, asPropertyTypeDeserializer0);\n    HashMap<String, List<PropertyName>> hashMap0 = new HashMap<String, List<PropertyName>>();\n    TreeSet<SettableBeanProperty> treeSet0 = new TreeSet<SettableBeanProperty>();\n    BeanPropertyMap beanPropertyMap0 = BeanPropertyMap.construct((Collection<SettableBeanProperty>) treeSet0, false, (Map<String, List<PropertyName>>) hashMap0);\n    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build(beanPropertyMap0);\n    ExternalTypeHandler externalTypeHandler1 = new ExternalTypeHandler(externalTypeHandler0);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    PropertyValueBuffer propertyValueBuffer0 = new PropertyValueBuffer((JsonParser) null, defaultDeserializationContext_Impl0, 1145, (ObjectIdReader) null);\n    externalTypeHandler1.complete((JsonParser) null, (DeserializationContext) defaultDeserializationContext_Impl0, propertyValueBuffer0, (PropertyBasedCreator) null);\n}",
    "testName" : "test1212"
  },
  "test1313" : {
    "methodSignature" : "public int getPropertyIndex()",
    "methodName" : "getPropertyIndex",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = ExternalTypeHandler.builder((JavaType) null);\n    Class<ChronoLocalDate> class0 = ChronoLocalDate.class;\n    AnnotationCollector.TwoAnnotations annotationCollector_TwoAnnotations0 = new AnnotationCollector.TwoAnnotations(class0, (Annotation) null, class0, (Annotation) null);\n    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;\n    BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();\n    PropertyName propertyName0 = beanProperty_Bogus0.getFullName();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);\n    AsExternalTypeDeserializer asExternalTypeDeserializer0 = new AsExternalTypeDeserializer((JavaType) null, classNameIdResolver0, (String) null, false, (JavaType) null);\n    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asExternalTypeDeserializer0, annotationCollector_TwoAnnotations0, (AnnotatedParameter) null, 0, annotationCollector_TwoAnnotations0, propertyMetadata0);\n    externalTypeHandler_Builder0.addExternal(creatorProperty0, asExternalTypeDeserializer0);\n    externalTypeHandler_Builder0.addExternal(creatorProperty0, asExternalTypeDeserializer0);\n    creatorProperty0.getPropertyIndex();\n}",
    "testName" : "test1313"
  },
  "test1010" : {
    "methodSignature" : "public boolean handlePropertyValue(JsonParser p, DeserializationContext ctxt, String propName, Object bean) throws IOException",
    "methodName" : "handlePropertyValue",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = new ExternalTypeHandler.Builder((JavaType) null);\n    BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();\n    PropertyName propertyName0 = PropertyName.USE_DEFAULT;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);\n    Class<HashMap> class0 = HashMap.class;\n    Class<List> class1 = List.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class0, class1);\n    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.WRAPPER_OBJECT;\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, \"via me5d. \", true, mapType0, jsonTypeInfo_As0);\n    Class<Annotation> class2 = Annotation.class;\n    Class<ResolverStyle> class3 = ResolverStyle.class;\n    AnnotationCollector.TwoAnnotations annotationCollector_TwoAnnotations0 = new AnnotationCollector.TwoAnnotations(class2, (Annotation) null, class3, (Annotation) null);\n    PropertyMetadata propertyMetadata0 = beanProperty_Bogus0.getMetadata();\n    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, mapType0, propertyName0, asPropertyTypeDeserializer0, annotationCollector_TwoAnnotations0, (AnnotatedParameter) null, (-2669), class1, propertyMetadata0);\n    externalTypeHandler_Builder0.addExternal(creatorProperty0, asPropertyTypeDeserializer0);\n    HashMap<String, List<PropertyName>> hashMap0 = new HashMap<String, List<PropertyName>>();\n    TreeSet<SettableBeanProperty> treeSet0 = new TreeSet<SettableBeanProperty>();\n    BeanPropertyMap beanPropertyMap0 = BeanPropertyMap.construct((Collection<SettableBeanProperty>) treeSet0, true, (Map<String, List<PropertyName>>) hashMap0);\n    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build(beanPropertyMap0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"via me5d. \");\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ExternalTypeHandler externalTypeHandler1 = new ExternalTypeHandler(externalTypeHandler0);\n    boolean boolean0 = externalTypeHandler1.handlePropertyValue(jsonParser0, defaultDeserializationContext_Impl0, \"via me5d. \", classNameIdResolver0);\n}",
    "testName" : "test1010"
  },
  "test011" : {
    "methodSignature" : "public boolean handleTypePropertyValue(JsonParser p, DeserializationContext ctxt, String propName, Object bean) throws IOException",
    "methodName" : "handleTypePropertyValue",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = ExternalTypeHandler.builder((JavaType) null);\n    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build((BeanPropertyMap) null);\n    boolean boolean0 = externalTypeHandler0.handleTypePropertyValue((JsonParser) null, (DeserializationContext) null, \"H&\", \"H&\");\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public boolean handleTypePropertyValue(JsonParser p, DeserializationContext ctxt, String propName, Object bean) throws IOException",
    "methodName" : "handleTypePropertyValue",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = new ExternalTypeHandler.Builder((JavaType) null);\n    PropertyName propertyName0 = PropertyName.USE_DEFAULT;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);\n    Class<HashMap> class0 = HashMap.class;\n    Class<List> class1 = List.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class0, class1);\n    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.WRAPPER_ARRAY;\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, \"Cannot find a deserializer for non-concrete Collection type \", true, mapType0, jsonTypeInfo_As0);\n    Class<Annotation> class2 = Annotation.class;\n    Class<ResolverStyle> class3 = ResolverStyle.class;\n    AnnotationCollector.TwoAnnotations annotationCollector_TwoAnnotations0 = new AnnotationCollector.TwoAnnotations(class2, (Annotation) null, class3, (Annotation) null);\n    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;\n    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, mapType0, propertyName0, asPropertyTypeDeserializer0, annotationCollector_TwoAnnotations0, (AnnotatedParameter) null, (-33), class1, propertyMetadata0);\n    externalTypeHandler_Builder0.addExternal(creatorProperty0, asPropertyTypeDeserializer0);\n    externalTypeHandler_Builder0.addExternal(creatorProperty0, asPropertyTypeDeserializer0);\n    HashMap<String, List<PropertyName>> hashMap0 = new HashMap<String, List<PropertyName>>();\n    TreeSet<SettableBeanProperty> treeSet0 = new TreeSet<SettableBeanProperty>();\n    BeanPropertyMap beanPropertyMap0 = BeanPropertyMap.construct((Collection<SettableBeanProperty>) treeSet0, true, (Map<String, List<PropertyName>>) hashMap0);\n    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build(beanPropertyMap0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"Cannot find a deserializer for non-concrete Collection type \");\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ExternalTypeHandler externalTypeHandler1 = new ExternalTypeHandler(externalTypeHandler0);\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);\n    boolean boolean0 = externalTypeHandler1.handleTypePropertyValue(jsonParser0, defaultDeserializationContext_Impl0, \"Cannot find a deserializer for non-concrete Collection type \", bufferedInputStream0);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public boolean handlePropertyValue(JsonParser p, DeserializationContext ctxt, String propName, Object bean) throws IOException",
    "methodName" : "handlePropertyValue",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = ExternalTypeHandler.builder((JavaType) null);\n    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build((BeanPropertyMap) null);\n    boolean boolean0 = externalTypeHandler0.handlePropertyValue((JsonParser) null, (DeserializationContext) null, \"com.fasterxml.jacksondatabind.1ontype.impl.AsExternalTypeSerializer\", (Object) null);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public boolean handlePropertyValue(JsonParser p, DeserializationContext ctxt, String propName, Object bean) throws IOException",
    "methodName" : "handlePropertyValue",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = ExternalTypeHandler.builder((JavaType) null);\n    BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();\n    PropertyName propertyName0 = beanProperty_Bogus0.getFullName();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);\n    Class<HashMap> class0 = HashMap.class;\n    Class<List> class1 = List.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class0, class1);\n    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.WRAPPER_ARRAY;\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, \"\", true, mapType0, jsonTypeInfo_As0);\n    Class<Annotation> class2 = Annotation.class;\n    Class<ResolverStyle> class3 = ResolverStyle.class;\n    AnnotationCollector.TwoAnnotations annotationCollector_TwoAnnotations0 = new AnnotationCollector.TwoAnnotations(class2, (Annotation) null, class3, (Annotation) null);\n    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;\n    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, mapType0, propertyName0, asPropertyTypeDeserializer0, annotationCollector_TwoAnnotations0, (AnnotatedParameter) null, 44, class1, propertyMetadata0);\n    externalTypeHandler_Builder0.addExternal(creatorProperty0, asPropertyTypeDeserializer0);\n    HashMap<String, List<PropertyName>> hashMap0 = new HashMap<String, List<PropertyName>>();\n    TreeSet<SettableBeanProperty> treeSet0 = new TreeSet<SettableBeanProperty>();\n    BeanPropertyMap beanPropertyMap0 = BeanPropertyMap.construct((Collection<SettableBeanProperty>) treeSet0, true, (Map<String, List<PropertyName>>) hashMap0);\n    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build(beanPropertyMap0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"\");\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ExternalTypeHandler externalTypeHandler1 = new ExternalTypeHandler(externalTypeHandler0);\n    boolean boolean0 = externalTypeHandler1.handlePropertyValue(jsonParser0, defaultDeserializationContext_Impl0, \"\", creatorProperty0);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public boolean handlePropertyValue(JsonParser p, DeserializationContext ctxt, String propName, Object bean) throws IOException",
    "methodName" : "handlePropertyValue",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = new ExternalTypeHandler.Builder((JavaType) null);\n    BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();\n    PropertyName propertyName0 = beanProperty_Bogus0.getFullName();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);\n    Class<HashMap> class0 = HashMap.class;\n    Class<List> class1 = List.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class0, class1);\n    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.WRAPPER_OBJECT;\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, \"Cannot fnd a deserializer for non-conreteCollection type \", true, mapType0, jsonTypeInfo_As0);\n    Class<Annotation> class2 = Annotation.class;\n    Class<ResolverStyle> class3 = ResolverStyle.class;\n    AnnotationCollector.TwoAnnotations annotationCollector_TwoAnnotations0 = new AnnotationCollector.TwoAnnotations(class2, (Annotation) null, class3, (Annotation) null);\n    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;\n    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, mapType0, propertyName0, asPropertyTypeDeserializer0, annotationCollector_TwoAnnotations0, (AnnotatedParameter) null, 2, class1, propertyMetadata0);\n    externalTypeHandler_Builder0.addExternal(creatorProperty0, asPropertyTypeDeserializer0);\n    HashMap<String, List<PropertyName>> hashMap0 = new HashMap<String, List<PropertyName>>();\n    TreeSet<SettableBeanProperty> treeSet0 = new TreeSet<SettableBeanProperty>();\n    BeanPropertyMap beanPropertyMap0 = BeanPropertyMap.construct((Collection<SettableBeanProperty>) treeSet0, true, (Map<String, List<PropertyName>>) hashMap0);\n    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build(beanPropertyMap0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"Cannot fnd a deserializer for non-conreteCollection type \");\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ExternalTypeHandler externalTypeHandler1 = new ExternalTypeHandler(externalTypeHandler0);\n    boolean boolean0 = externalTypeHandler1.handlePropertyValue(jsonParser0, defaultDeserializationContext_Impl0, \"Cannot fnd a deserializer for non-conreteCollection type \", (Object) null);\n}",
    "testName" : "test099"
  },
  "test000" : {
    "methodSignature" : "public ExternalTypeHandler start()",
    "methodName" : "start",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = new ExternalTypeHandler.Builder((JavaType) null);\n    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build((BeanPropertyMap) null);\n    ExternalTypeHandler externalTypeHandler1 = externalTypeHandler0.start();\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public boolean handleTypePropertyValue(JsonParser p, DeserializationContext ctxt, String propName, Object bean) throws IOException",
    "methodName" : "handleTypePropertyValue",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = ExternalTypeHandler.builder((JavaType) null);\n    PropertyName propertyName0 = PropertyName.USE_DEFAULT;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);\n    Class<HashMap> class0 = HashMap.class;\n    Class<List> class1 = List.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class0, class1);\n    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.EXTERNAL_PROPERTY;\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, \"S\", false, mapType0, jsonTypeInfo_As0);\n    Class<Annotation> class2 = Annotation.class;\n    Class<ResolverStyle> class3 = ResolverStyle.class;\n    AnnotationCollector.TwoAnnotations annotationCollector_TwoAnnotations0 = new AnnotationCollector.TwoAnnotations(class2, (Annotation) null, class3, (Annotation) null);\n    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;\n    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, mapType0, propertyName0, asPropertyTypeDeserializer0, annotationCollector_TwoAnnotations0, (AnnotatedParameter) null, 853, class1, propertyMetadata0);\n    externalTypeHandler_Builder0.addExternal(creatorProperty0, asPropertyTypeDeserializer0);\n    HashMap<String, List<PropertyName>> hashMap0 = new HashMap<String, List<PropertyName>>();\n    externalTypeHandler_Builder0.addExternal(creatorProperty0, asPropertyTypeDeserializer0);\n    TreeSet<SettableBeanProperty> treeSet0 = new TreeSet<SettableBeanProperty>();\n    BeanPropertyMap beanPropertyMap0 = BeanPropertyMap.construct((Collection<SettableBeanProperty>) treeSet0, false, (Map<String, List<PropertyName>>) hashMap0);\n    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build(beanPropertyMap0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    PipedWriter pipedWriter0 = new PipedWriter();\n    PipedReader pipedReader0 = new PipedReader(pipedWriter0);\n    JsonParser jsonParser0 = jsonFactory0.createParser((Reader) pipedReader0);\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(3);\n    boolean boolean0 = externalTypeHandler0.handleTypePropertyValue(jsonParser0, (DeserializationContext) null, \"\", placeholderForType0);\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public boolean handleTypePropertyValue(JsonParser p, DeserializationContext ctxt, String propName, Object bean) throws IOException",
    "methodName" : "handleTypePropertyValue",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = ExternalTypeHandler.builder((JavaType) null);\n    BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();\n    PropertyName propertyName0 = PropertyName.USE_DEFAULT;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);\n    Class<HashMap> class0 = HashMap.class;\n    Class<List> class1 = List.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class0, class1);\n    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.WRAPPER_OBJECT;\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, \"com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder\", true, mapType0, jsonTypeInfo_As0);\n    Class<Annotation> class2 = Annotation.class;\n    Class<ResolverStyle> class3 = ResolverStyle.class;\n    AnnotationCollector.TwoAnnotations annotationCollector_TwoAnnotations0 = new AnnotationCollector.TwoAnnotations(class2, (Annotation) null, class3, (Annotation) null);\n    PropertyMetadata propertyMetadata0 = beanProperty_Bogus0.getMetadata();\n    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, mapType0, propertyName0, asPropertyTypeDeserializer0, annotationCollector_TwoAnnotations0, (AnnotatedParameter) null, (-2671), class1, propertyMetadata0);\n    externalTypeHandler_Builder0.addExternal(creatorProperty0, asPropertyTypeDeserializer0);\n    HashMap<String, List<PropertyName>> hashMap0 = new HashMap<String, List<PropertyName>>();\n    TreeSet<SettableBeanProperty> treeSet0 = new TreeSet<SettableBeanProperty>();\n    BeanPropertyMap beanPropertyMap0 = BeanPropertyMap.construct((Collection<SettableBeanProperty>) treeSet0, true, (Map<String, List<PropertyName>>) hashMap0);\n    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build(beanPropertyMap0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder\");\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    externalTypeHandler0.handleTypePropertyValue(jsonParser0, defaultDeserializationContext_Impl0, \"com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder\", (Object) null);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public boolean handlePropertyValue(JsonParser p, DeserializationContext ctxt, String propName, Object bean) throws IOException",
    "methodName" : "handlePropertyValue",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = ExternalTypeHandler.builder((JavaType) null);\n    PropertyName propertyName0 = PropertyName.USE_DEFAULT;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);\n    Class<HashMap> class0 = HashMap.class;\n    Class<List> class1 = List.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class0, class1);\n    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.EXTERNAL_PROPERTY;\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, \"S\", false, mapType0, jsonTypeInfo_As0);\n    Class<Annotation> class2 = Annotation.class;\n    Class<ResolverStyle> class3 = ResolverStyle.class;\n    AnnotationCollector.TwoAnnotations annotationCollector_TwoAnnotations0 = new AnnotationCollector.TwoAnnotations(class2, (Annotation) null, class3, (Annotation) null);\n    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;\n    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, mapType0, propertyName0, asPropertyTypeDeserializer0, annotationCollector_TwoAnnotations0, (AnnotatedParameter) null, 863, class1, propertyMetadata0);\n    externalTypeHandler_Builder0.addExternal(creatorProperty0, asPropertyTypeDeserializer0);\n    HashMap<String, List<PropertyName>> hashMap0 = new HashMap<String, List<PropertyName>>();\n    externalTypeHandler_Builder0.addExternal(creatorProperty0, asPropertyTypeDeserializer0);\n    TreeSet<SettableBeanProperty> treeSet0 = new TreeSet<SettableBeanProperty>();\n    BeanPropertyMap beanPropertyMap0 = BeanPropertyMap.construct((Collection<SettableBeanProperty>) treeSet0, false, (Map<String, List<PropertyName>>) hashMap0);\n    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build(beanPropertyMap0);\n    externalTypeHandler0.handlePropertyValue((JsonParser) null, (DeserializationContext) null, \"\", asPropertyTypeDeserializer0);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public boolean handlePropertyValue(JsonParser p, DeserializationContext ctxt, String propName, Object bean) throws IOException",
    "methodName" : "handlePropertyValue",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = new ExternalTypeHandler.Builder((JavaType) null);\n    PropertyName propertyName0 = PropertyName.NO_NAME;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);\n    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.EXISTING_PROPERTY;\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, \" IXH0wcL,`\", false, (JavaType) null, jsonTypeInfo_As0);\n    Class<Annotation> class0 = Annotation.class;\n    AnnotationCollector.TwoAnnotations annotationCollector_TwoAnnotations0 = new AnnotationCollector.TwoAnnotations(class0, (Annotation) null, class0, (Annotation) null);\n    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;\n    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, (JavaType) null, propertyName0, asPropertyTypeDeserializer0, annotationCollector_TwoAnnotations0, (AnnotatedParameter) null, 1145, classNameIdResolver0, propertyMetadata0);\n    externalTypeHandler_Builder0.addExternal(creatorProperty0, asPropertyTypeDeserializer0);\n    HashMap<String, List<PropertyName>> hashMap0 = new HashMap<String, List<PropertyName>>();\n    TreeSet<SettableBeanProperty> treeSet0 = new TreeSet<SettableBeanProperty>();\n    BeanPropertyMap beanPropertyMap0 = BeanPropertyMap.construct((Collection<SettableBeanProperty>) treeSet0, false, (Map<String, List<PropertyName>>) hashMap0);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build(beanPropertyMap0);\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    externalTypeHandler0.handlePropertyValue((JsonParser) null, defaultDeserializationContext_Impl0, \"\", treeSet0);\n}",
    "testName" : "test088"
  }
}