{
  "test1010" : {
    "methodSignature" : "public boolean usesObjectId()",
    "methodName" : "usesObjectId",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    NumberSerializers.FloatSerializer numberSerializers_FloatSerializer0 = new NumberSerializers.FloatSerializer();\n    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base();\n    numberSerializers_FloatSerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper_Base0, (JavaType) null);\n    numberSerializers_FloatSerializer0.usesObjectId();\n}",
    "testName" : "test1010"
  },
  "test000" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    Class<NioPathSerializer> class0 = NioPathSerializer.class;\n    NumberSerializers.FloatSerializer numberSerializers_FloatSerializer0 = new NumberSerializers.FloatSerializer();\n    JsonNode jsonNode0 = numberSerializers_FloatSerializer0.getSchema((SerializerProvider) defaultSerializerProvider_Impl0, (Type) class0);\n    jsonNode0.size();\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public void serializeWithType(T value, JsonGenerator g, SerializerProvider provider, TypeSerializer typeSer) throws IOException",
    "methodName" : "serializeWithType",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Class<Object> class0 = Object.class;\n    NumberSerializers.IntegerSerializer numberSerializers_IntegerSerializer0 = new NumberSerializers.IntegerSerializer(class0);\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    CoreXMLSerializers.XMLGregorianCalendarSerializer coreXMLSerializers_XMLGregorianCalendarSerializer0 = new CoreXMLSerializers.XMLGregorianCalendarSerializer();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, coreXMLSerializers_XMLGregorianCalendarSerializer0, false);\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"s\", false);\n    byte[] byteArray0 = new byte[0];\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 1, false);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringGeneratorDelegate filteringGeneratorDelegate0 = new FilteringGeneratorDelegate(uTF8JsonGenerator0, tokenFilter0, false, false);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    numberSerializers_IntegerSerializer0.serializeWithType(class0, filteringGeneratorDelegate0, defaultSerializerProvider_Impl0, (TypeSerializer) null);\n}",
    "testName" : "test022"
  },
  "test033" : {
    "methodSignature" : "public abstract void serialize(T value, JsonGenerator gen, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    NumberSerializers.FloatSerializer numberSerializers_FloatSerializer0 = new NumberSerializers.FloatSerializer();\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    numberSerializers_FloatSerializer0.serialize(defaultSerializerProvider_Impl0, (JsonGenerator) null, defaultSerializerProvider_Impl0);\n}",
    "testName" : "test033"
  },
  "test044" : {
    "methodSignature" : "public abstract void serialize(T value, JsonGenerator gen, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Class<Integer> class0 = Integer.class;\n    NumberSerializers.LongSerializer numberSerializers_LongSerializer0 = new NumberSerializers.LongSerializer(class0);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    numberSerializers_LongSerializer0.serialize(class0, (JsonGenerator) null, defaultSerializerProvider_Impl0);\n}",
    "testName" : "test044"
  },
  "test055" : {
    "methodSignature" : "public abstract void serialize(T value, JsonGenerator gen, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Class<NioPathSerializer> class0 = NioPathSerializer.class;\n    NumberSerializers.LongSerializer numberSerializers_LongSerializer0 = new NumberSerializers.LongSerializer(class0);\n    NumberSerializers.IntLikeSerializer numberSerializers_IntLikeSerializer0 = NumberSerializers.IntLikeSerializer.instance;\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    numberSerializers_IntLikeSerializer0.serialize(numberSerializers_LongSerializer0, (JsonGenerator) null, defaultSerializerProvider_Impl0);\n}",
    "testName" : "test055"
  },
  "test066" : {
    "methodSignature" : "public boolean usesObjectId()",
    "methodName" : "usesObjectId",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    NumberSerializers.IntLikeSerializer numberSerializers_IntLikeSerializer0 = new NumberSerializers.IntLikeSerializer();\n    numberSerializers_IntLikeSerializer0.usesObjectId();\n}",
    "testName" : "test066"
  },
  "test077" : {
    "methodSignature" : "public void serializeWithType(T value, JsonGenerator g, SerializerProvider provider, TypeSerializer typeSer) throws IOException",
    "methodName" : "serializeWithType",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Class<Integer> class0 = Integer.class;\n    NumberSerializers.DoubleSerializer numberSerializers_DoubleSerializer0 = new NumberSerializers.DoubleSerializer(class0);\n    DOMSerializer dOMSerializer0 = new DOMSerializer();\n    JsonFactoryBuilder jsonFactoryBuilder0 = new JsonFactoryBuilder();\n    JsonFactory jsonFactory0 = new JsonFactory(jsonFactoryBuilder0);\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);\n    JsonEncoding jsonEncoding0 = JsonEncoding.UTF16_BE;\n    JsonGenerator jsonGenerator0 = jsonFactory0.createGenerator((OutputStream) byteArrayBuilder0, jsonEncoding0);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    numberSerializers_DoubleSerializer0.serializeWithType(dOMSerializer0, jsonGenerator0, defaultSerializerProvider_Impl0, (TypeSerializer) null);\n}",
    "testName" : "test077"
  },
  "test088" : {
    "methodSignature" : "public int containedTypeCount()",
    "methodName" : "containedTypeCount",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    NumberSerializers.ShortSerializer numberSerializers_ShortSerializer0 = new NumberSerializers.ShortSerializer();\n    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base();\n    Class<Byte> class0 = Byte.class;\n    Class<DOMSerializer> class1 = DOMSerializer.class;\n    JavaType[] javaTypeArray0 = new JavaType[0];\n    TypeBindings typeBindings0 = TypeBindings.create(class1, javaTypeArray0);\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    numberSerializers_ShortSerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper_Base0, resolvedRecursiveType0);\n    resolvedRecursiveType0.containedTypeCount();\n}",
    "testName" : "test088"
  },
  "test099" : {
    "methodSignature" : "public abstract void serialize(T value, JsonGenerator gen, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    NumberSerializers.ShortSerializer numberSerializers_ShortSerializer0 = NumberSerializers.ShortSerializer.instance;\n    Object object0 = new Object();\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    numberSerializers_ShortSerializer0.serialize(object0, (JsonGenerator) null, defaultSerializerProvider_Impl0);\n}",
    "testName" : "test099"
  }
}