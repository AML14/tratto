{
  "test1212" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    NumberSerializer numberSerializer0 = NumberSerializer.instance;\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    JsonNode jsonNode0 = numberSerializer0.getSchema((SerializerProvider) defaultSerializerProvider_Impl0, (Type) null);\n    jsonNode0.size();\n}",
    "testName" : "test1212"
  },
  "test1313" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    Class<BigInteger> class0 = BigInteger.class;\n    NumberSerializer numberSerializer0 = new NumberSerializer(class0);\n    JsonNode jsonNode0 = numberSerializer0.getSchema((SerializerProvider) defaultSerializerProvider_Impl0, (Type) class0, true);\n    jsonNode0.size();\n}",
    "testName" : "test1313"
  },
  "test1010" : {
    "methodSignature" : "public void serialize(Number value, JsonGenerator g, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    NumberSerializer numberSerializer0 = NumberSerializer.instance;\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    numberSerializer0.serialize((Number) null, (JsonGenerator) null, (SerializerProvider) defaultSerializerProvider_Impl0);\n}",
    "testName" : "test1010"
  },
  "test1111" : {
    "methodSignature" : "public void serialize(Number value, JsonGenerator g, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    NumberSerializer numberSerializer0 = NumberSerializer.instance;\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializerProvider serializerProvider0 = objectMapper0.getSerializerProviderInstance();\n    Short short0 = new Short((short) 0);\n    numberSerializer0.serialize((Number) short0, (JsonGenerator) null, serializerProvider0);\n}",
    "testName" : "test1111"
  },
  "test011" : {
    "methodSignature" : "public final boolean isJavaLangObject()",
    "methodName" : "isJavaLangObject",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Class<BigInteger> class0 = BigInteger.class;\n    NumberSerializer numberSerializer0 = new NumberSerializer(class0);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base(defaultSerializerProvider_Impl0);\n    Class<Float> class1 = Float.class;\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class1, typeBindings0);\n    numberSerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper_Base0, resolvedRecursiveType0);\n    resolvedRecursiveType0.isJavaLangObject();\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public void serialize(Number value, JsonGenerator g, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    NumberSerializer numberSerializer0 = NumberSerializer.instance;\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    Float float0 = new Float(0.0F);\n    numberSerializer0.instance.serialize((Number) float0, (JsonGenerator) null, (SerializerProvider) defaultSerializerProvider_Impl0);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public void serialize(Number value, JsonGenerator g, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    NumberSerializer numberSerializer0 = NumberSerializer.instance;\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    BigInteger bigInteger0 = BigInteger.TEN;\n    numberSerializer0.serialize((Number) bigInteger0, (JsonGenerator) null, (SerializerProvider) defaultSerializerProvider_Impl0);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public void serialize(Number value, JsonGenerator g, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    NumberSerializer numberSerializer0 = NumberSerializer.instance;\n    Double double0 = new Double(0.0);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    numberSerializer0.serialize((Number) double0, (JsonGenerator) null, (SerializerProvider) defaultSerializerProvider_Impl0);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public void serialize(Number value, JsonGenerator g, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    NumberSerializer numberSerializer0 = NumberSerializer.instance;\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    Byte byte0 = new Byte((byte) 1);\n    numberSerializer0.serialize((Number) byte0, (JsonGenerator) null, (SerializerProvider) defaultSerializerProvider_Impl0);\n}",
    "testName" : "test099"
  },
  "test1414" : {
    "methodSignature" : "public boolean usesObjectId()",
    "methodName" : "usesObjectId",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    NumberSerializer numberSerializer0 = NumberSerializer.instance;\n    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base();\n    numberSerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper_Base0, (JavaType) null);\n    numberSerializer0.usesObjectId();\n}",
    "testName" : "test1414"
  },
  "test000" : {
    "methodSignature" : "public boolean isUnwrappingSerializer()",
    "methodName" : "isUnwrappingSerializer",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Class<BigDecimal> class0 = BigDecimal.class;\n    NumberSerializer numberSerializer0 = new NumberSerializer(class0);\n    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base();\n    numberSerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper_Base0, (JavaType) null);\n    numberSerializer0.isUnwrappingSerializer();\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public JsonSerializer<?> createContextual(SerializerProvider prov, BeanProperty property) throws JsonMappingException",
    "methodName" : "createContextual",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    NumberSerializer numberSerializer0 = NumberSerializer.instance;\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();\n    JsonSerializer<?> jsonSerializer0 = numberSerializer0.createContextual(defaultSerializerProvider_Impl0, beanProperty_Bogus0);\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public void serialize(Number value, JsonGenerator g, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    NumberSerializer numberSerializer0 = NumberSerializer.instance;\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    BigDecimal bigDecimal0 = BigDecimal.ONE;\n    numberSerializer0.serialize((Number) bigDecimal0, (JsonGenerator) null, (SerializerProvider) defaultSerializerProvider_Impl0);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public void serialize(Number value, JsonGenerator g, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    NumberSerializer numberSerializer0 = NumberSerializer.instance;\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    Long long0 = new Long(0L);\n    numberSerializer0.serialize((Number) long0, (JsonGenerator) null, (SerializerProvider) defaultSerializerProvider_Impl0);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public void serialize(Number value, JsonGenerator g, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    NumberSerializer numberSerializer0 = NumberSerializer.instance;\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    Integer integer0 = new Integer(1);\n    numberSerializer0.instance.serialize((Number) integer0, (JsonGenerator) null, (SerializerProvider) defaultSerializerProvider_Impl0);\n}",
    "testName" : "test088"
  }
}