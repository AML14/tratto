[ {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public <T extends JsonNode> T valueToTree(Object fromValue) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test011"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isPrimitive()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test022"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public boolean isAbstract()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(mapType0.isAbstract())",
  "exception" : "",
  "testName" : "test033"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public void clearCache()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test055"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isJavaLangObject()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test077"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isPrimitive()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(collectionLikeType0.isPrimitive())",
  "exception" : "",
  "testName" : "test088"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType constructType(TypeReference<?> typeRef)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1010"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public abstract boolean equals(Object o)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1111"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public CollectionLikeType constructCollectionLikeType(Class<?> collectionClass, JavaType elementType)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1212"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType constructFromCanonical(String canonical) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1313"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean useStaticType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(mapLikeType0.useStaticType())",
  "exception" : "",
  "testName" : "test1414"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isPrimitive()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(arrayType0.isPrimitive())",
  "exception" : "",
  "testName" : "test1515"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public TypeFactory withModifier(TypeModifier mod)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1616"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public TypeFactory withModifier(TypeModifier mod)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1818"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isJavaLangObject()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2020"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isPrimitive()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType1.isPrimitive())",
  "exception" : "",
  "testName" : "test2121"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType constructSpecializedType(JavaType baseType, Class<?> subclass)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2222"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType constructSpecializedType(JavaType baseType, Class<?> subclass)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2323"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean useStaticType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.useStaticType())",
  "exception" : "",
  "testName" : "test2424"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType[] findTypeParameters(JavaType type, Class<?> expType)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2425"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType[] findTypeParameters(JavaType type, Class<?> expType)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2526"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isJavaLangObject()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType1.isJavaLangObject())",
  "exception" : "",
  "testName" : "test2728"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType moreSpecificType(JavaType type1, JavaType type2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2829"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public boolean isMapLikeType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isMapLikeType())",
  "exception" : "",
  "testName" : "test2930"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType moreSpecificType(JavaType type1, JavaType type2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3031"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isPrimitive()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isPrimitive())",
  "exception" : "",
  "testName" : "test3132"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public boolean isMapLikeType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isMapLikeType())",
  "exception" : "",
  "testName" : "test3233"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public boolean isCollectionLikeType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isCollectionLikeType())",
  "exception" : "",
  "testName" : "test3334"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public boolean isConcrete()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3435"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public static Class<?> rawClass(Type t)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3536"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public boolean isCollectionLikeType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isCollectionLikeType())",
  "exception" : "",
  "testName" : "test3637"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public JavaType constructType(Type type, Class<?> context)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3738"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isPrimitive()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.isPrimitive())",
  "exception" : "",
  "testName" : "test4344"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(objectReader0)",
  "exception" : "",
  "testName" : "test4445"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public boolean hasGenericTypes()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.hasGenericTypes())",
  "exception" : "",
  "testName" : "test4546"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean useStaticType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.useStaticType())",
  "exception" : "",
  "testName" : "test4647"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public boolean hasGenericTypes()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(javaType0.hasGenericTypes())",
  "exception" : "",
  "testName" : "test4748"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public abstract boolean equals(Object o)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4849"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public boolean isCollectionLikeType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4950"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "protected JavaType _fromParameterizedClass(Class<?> clz, List<JavaType> paramTypes)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5051"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "protected JavaType _fromParameterizedClass(Class<?> clz, List<JavaType> paramTypes)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5152"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(objectReader0)",
  "exception" : "",
  "testName" : "test5253"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isPrimitive()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5354"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "protected HierarchicType _findSuperInterfaceChain(Type currentType, Class<?> target)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5455"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "public final boolean isGeneric()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5556"
}, {
  "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
  "methodSignature" : "protected synchronized HierarchicType _arrayListSuperInterfaceChain(HierarchicType current)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5657"
} ]