project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Class<HijrahEra> class0 = HijrahEra.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    MinimalClassNameIdResolver minimalClassNameIdResolver0 = new MinimalClassNameIdResolver(simpleType0, (TypeFactory) null);
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(simpleType0, minimalClassNameIdResolver0, """", true, class0);
    String string0 = asPropertyTypeDeserializer0.getPropertyName();
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test011,"public void test011() throws Throwable {
    Class<HijrahEra> class0 = HijrahEra.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    MinimalClassNameIdResolver minimalClassNameIdResolver0 = new MinimalClassNameIdResolver(simpleType0, (TypeFactory) null);
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(simpleType0, minimalClassNameIdResolver0, """", false, class0);
    TypeIdResolver typeIdResolver0 = asPropertyTypeDeserializer0.getTypeIdResolver();
    assertEquals(JsonTypeInfo.Id.MINIMAL_CLASS, typeIdResolver0.getMechanism());
}",0,assertNotNull(typeIdResolver0.getMechanism())
project,0,test022,"public void test022() throws Throwable {
    Class<HijrahEra> class0 = HijrahEra.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    MinimalClassNameIdResolver minimalClassNameIdResolver0 = new MinimalClassNameIdResolver(simpleType0, (TypeFactory) null);
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(simpleType0, minimalClassNameIdResolver0, """", true, class0);
    String string0 = asPropertyTypeDeserializer0.toString();
    assertNotNull(string0);
}",0,
project,0,test033,"public void test033() throws Throwable {
    Class<HijrahEra> class0 = HijrahEra.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    MinimalClassNameIdResolver minimalClassNameIdResolver0 = new MinimalClassNameIdResolver(simpleType0, (TypeFactory) null);
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(simpleType0, minimalClassNameIdResolver0, ""g/"", false, class0);
    String string0 = asPropertyTypeDeserializer0.baseTypeName();
    assertEquals(""java.time.chrono.HijrahEra"", string0);
}",0,assertNotNull(string0)
project,0,test044,"public void test044() throws Throwable {
    Class<HijrahEra> class0 = HijrahEra.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(simpleType0, (TypeIdResolver) null, ""$wF7hhAG|}(X+)"", true, class0);
    // Undeclared exception!
    try {
        asPropertyTypeDeserializer0._deserializeWithNativeTypeId((JsonParser) null, (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase"", e);
    }
}",0,
project,0,test066,"public void test066() throws Throwable {
    Class<HijrahEra> class0 = HijrahEra.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(simpleType0, (TypeIdResolver) null, ""&@hi\""j,2&]Tz`7."", true, (Class<?>) null);
    ObjectMapper objectMapper0 = new ObjectMapper();
    DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
    // Undeclared exception!
    try {
        asPropertyTypeDeserializer0._deserializeWithNativeTypeId((JsonParser) null, deserializationContext0, (Object) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer"", e);
    }
}",0,
project,0,test088,"public void test088() throws Throwable {
    Class<HijrahEra> class0 = HijrahEra.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    MinimalClassNameIdResolver minimalClassNameIdResolver0 = new MinimalClassNameIdResolver(simpleType0, (TypeFactory) null);
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(simpleType0, minimalClassNameIdResolver0, ""Z"", true, (Class<?>) null);
    Class<?> class1 = asPropertyTypeDeserializer0.getDefaultImpl();
    assertNull(class1);
}",0,"assertEquals(class0, class1)"
project,0,test099,"public void test099() throws Throwable {
    Class<HijrahEra> class0 = HijrahEra.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(simpleType0, (TypeIdResolver) null, ""$wF7h<G|}(wX+)"", false, class0);
    // Undeclared exception!
    try {
        asPropertyTypeDeserializer0._deserializeWithNativeTypeId((JsonParser) null, (DeserializationContext) null, simpleType0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase"", e);
    }
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    Class<HijrahEra> class0 = HijrahEra.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(simpleType0, (TypeIdResolver) null, ""$lF7h<Grc|}FwX+)"", true, class0);
    // Undeclared exception!
    try {
        asPropertyTypeDeserializer0._deserializeWithNativeTypeId((JsonParser) null, (DeserializationContext) null, (Object) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase"", e);
    }
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    Class<HijrahEra> class0 = HijrahEra.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    MinimalClassNameIdResolver minimalClassNameIdResolver0 = new MinimalClassNameIdResolver(simpleType0, (TypeFactory) null);
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(simpleType0, minimalClassNameIdResolver0, ""'): "", false, class0);
    CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class0, (-8));
    asPropertyTypeDeserializer0._defaultImplDeserializer = (JsonDeserializer<Object>) coreXMLDeserializers_Std0;
    JsonDeserializer<Object> jsonDeserializer0 = asPropertyTypeDeserializer0._findDefaultImplDeserializer((DeserializationContext) null);
    assertFalse(jsonDeserializer0.isCachable());
}",0,assertFalse(jsonDeserializer0.isCachable())
project,0,test1212,"public void test1212() throws Throwable {
    Class<HijrahEra> class0 = HijrahEra.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    String string0 = ""c;v\\u25"";
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(simpleType0, (TypeIdResolver) null, string0, false, class0);
    // Undeclared exception!
    try {
        asPropertyTypeDeserializer0._deserializeWithNativeTypeId((JsonParser) null, (DeserializationContext) null, string0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase"", e);
    }
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    Class<HijrahEra> class0 = HijrahEra.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(simpleType0, (TypeIdResolver) null, "":00.000"", true, class0);
    // Undeclared exception!
    try {
        asPropertyTypeDeserializer0._handleUnknownTypeId((DeserializationContext) null, "":00.000"", (TypeIdResolver) null, simpleType0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase"", e);
    }
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    Class<HijrahEra> class0 = HijrahEra.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    MinimalClassNameIdResolver minimalClassNameIdResolver0 = new MinimalClassNameIdResolver(simpleType0, (TypeFactory) null);
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(simpleType0, minimalClassNameIdResolver0, """", false, class0);
    // Undeclared exception!
    try {
        asPropertyTypeDeserializer0._handleUnknownTypeId((DeserializationContext) null, """", minimalClassNameIdResolver0, simpleType0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase"", e);
    }
}",0,
