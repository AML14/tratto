{
  "test45" : {
    "methodSignature" : "public boolean isConcrete()",
    "methodName" : "isConcrete",
    "className" : "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test45() throws Throwable {\n    SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<Map> class0 = Map.class;\n    TypeBindings typeBindings0 = new TypeBindings(typeFactory0, class0);\n    Class<ObjectIdResolver> class1 = ObjectIdResolver.class;\n    Class<SimpleObjectIdResolver> class2 = SimpleObjectIdResolver.class;\n    SimpleAbstractTypeResolver simpleAbstractTypeResolver1 = simpleAbstractTypeResolver0.addMapping(class1, (Class<? extends ObjectIdResolver>) class2);\n    CollectionType collectionType0 = CollectionType.construct(class1, typeBindings0.UNBOUND);\n    JavaType javaType0 = simpleAbstractTypeResolver1.findTypeMapping((DeserializationConfig) null, collectionType0);\n    javaType0.isConcrete();\n}",
    "testName" : "test45"
  },
  "test56" : {
    "methodSignature" : "public JavaType findTypeMapping(DeserializationConfig config, JavaType type)",
    "methodName" : "findTypeMapping",
    "className" : "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test56() throws Throwable {\n    SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<Map> class0 = Map.class;\n    TypeBindings typeBindings0 = new TypeBindings(typeFactory0, class0);\n    JavaType javaType0 = typeFactory0.constructType((Type) class0, typeBindings0);\n    JavaType javaType1 = simpleAbstractTypeResolver0.findTypeMapping((DeserializationConfig) null, javaType0);\n}",
    "testName" : "test56"
  },
  "test00" : {
    "methodSignature" : "public JavaType resolveAbstractType(DeserializationConfig config, JavaType type)",
    "methodName" : "resolveAbstractType",
    "className" : "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00() throws Throwable {\n    SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();\n    JavaType javaType0 = simpleAbstractTypeResolver0.resolveAbstractType((DeserializationConfig) null, (JavaType) null);\n}",
    "testName" : "test00"
  },
  "test11" : {
    "methodSignature" : "public <T> SimpleAbstractTypeResolver addMapping(Class<T> superType, Class<? extends T> subType)",
    "methodName" : "addMapping",
    "className" : "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11() throws Throwable {\n    SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();\n    Class<Object> class0 = Object.class;\n    simpleAbstractTypeResolver0.addMapping(class0, (Class<?>) class0);\n}",
    "testName" : "test11"
  },
  "test22" : {
    "methodSignature" : "public <T> SimpleAbstractTypeResolver addMapping(Class<T> superType, Class<? extends T> subType)",
    "methodName" : "addMapping",
    "className" : "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22() throws Throwable {\n    SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();\n    Class<Object> class0 = Object.class;\n    Class<Integer> class1 = Integer.TYPE;\n    simpleAbstractTypeResolver0.addMapping(class0, (Class<?>) class1);\n}",
    "testName" : "test22"
  },
  "test33" : {
    "methodSignature" : "public <T> SimpleAbstractTypeResolver addMapping(Class<T> superType, Class<? extends T> subType)",
    "methodName" : "addMapping",
    "className" : "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33() throws Throwable {\n    SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();\n    Class<Object> class0 = Object.class;\n    Class<String> class1 = String.class;\n    simpleAbstractTypeResolver0.addMapping(class0, (Class<?>) class1);\n}",
    "testName" : "test33"
  },
  "test44" : {
    "methodSignature" : "public JavaType findTypeMapping(DeserializationConfig config, JavaType type)",
    "methodName" : "findTypeMapping",
    "className" : "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44() throws Throwable {\n    SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<Map> class0 = Map.class;\n    TypeBindings typeBindings0 = new TypeBindings(typeFactory0, class0);\n    Class<ObjectIdResolver> class1 = ObjectIdResolver.class;\n    Class<SimpleObjectIdResolver> class2 = SimpleObjectIdResolver.class;\n    SimpleAbstractTypeResolver simpleAbstractTypeResolver1 = simpleAbstractTypeResolver0.addMapping(class1, (Class<? extends ObjectIdResolver>) class2);\n    CollectionType collectionType0 = CollectionType.construct(class1, typeBindings0.UNBOUND);\n    JavaType javaType0 = simpleAbstractTypeResolver1.findTypeMapping((DeserializationConfig) null, collectionType0);\n}",
    "testName" : "test44"
  }
}