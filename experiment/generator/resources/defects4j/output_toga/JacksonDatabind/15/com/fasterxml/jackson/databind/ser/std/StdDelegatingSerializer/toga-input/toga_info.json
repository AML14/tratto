{
  "test1212" : {
    "methodSignature" : "public abstract void serialize(T value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonGenerationException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Class<Annotation> class0 = Annotation.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    SimpleModule simpleModule0 = new SimpleModule();\n    Converter<Object, Module> converter0 = (Converter<Object, Module>) mock(Converter.class, new ViolatedAssumptionAnswer());\n    doReturn(simpleModule0).when(converter0).convert(any());\n    StdDelegatingSerializer stdDelegatingSerializer0 = new StdDelegatingSerializer(converter0, simpleType0, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER);\n    Class<Object> class1 = stdDelegatingSerializer0.handledType();\n    stdDelegatingSerializer0.serialize(class1, (JsonGenerator) null, defaultSerializerProvider_Impl0);\n}",
    "testName" : "test1212"
  },
  "test1313" : {
    "methodSignature" : "public abstract void serialize(T value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonGenerationException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Class<Annotation> class0 = Annotation.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    Converter<Object, Module> converter0 = (Converter<Object, Module>) mock(Converter.class, new ViolatedAssumptionAnswer());\n    doReturn((Object) null).when(converter0).convert(any());\n    StdDelegatingSerializer stdDelegatingSerializer0 = new StdDelegatingSerializer(converter0, simpleType0, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER);\n    Class<Object> class1 = stdDelegatingSerializer0.handledType();\n    stdDelegatingSerializer0.serialize(class1, (JsonGenerator) null, defaultSerializerProvider_Impl0);\n}",
    "testName" : "test1313"
  },
  "test1010" : {
    "methodSignature" : "public JsonSerializer<?> createContextual(SerializerProvider provider, BeanProperty property) throws JsonMappingException",
    "methodName" : "createContextual",
    "className" : "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Class<JsonDeserializer> class0 = JsonDeserializer.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    StdDelegatingSerializer stdDelegatingSerializer0 = new StdDelegatingSerializer((Converter<Object, ?>) null, simpleType0, (JsonSerializer<?>) null);\n    stdDelegatingSerializer0.createContextual(defaultSerializerProvider_Impl0, (BeanProperty) null);\n}",
    "testName" : "test1010"
  },
  "test1111" : {
    "methodSignature" : "public JsonSerializer<?> createContextual(SerializerProvider provider, BeanProperty property) throws JsonMappingException",
    "methodName" : "createContextual",
    "className" : "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    StdDelegatingSerializer stdDelegatingSerializer0 = new StdDelegatingSerializer((Converter<?, ?>) null);\n    JavaType javaType0 = TypeFactory.unknownType();\n    StdDelegatingSerializer stdDelegatingSerializer1 = new StdDelegatingSerializer((Converter<Object, ?>) null, javaType0, stdDelegatingSerializer0);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    stdDelegatingSerializer1.createContextual(defaultSerializerProvider_Impl0, (BeanProperty) null);\n}",
    "testName" : "test1111"
  },
  "test011" : {
    "methodSignature" : "public void serializeWithType(T value, JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer) throws IOException",
    "methodName" : "serializeWithType",
    "className" : "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Class<DOMSerializer> class0 = DOMSerializer.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    StdDelegatingSerializer stdDelegatingSerializer0 = new StdDelegatingSerializer((Converter<?, ?>) null);\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"JSON\");\n    JsonEncoding jsonEncoding0 = JsonEncoding.UTF16_LE;\n    JsonGenerator jsonGenerator0 = jsonFactory0.createGenerator((OutputStream) mockPrintStream0, jsonEncoding0);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(simpleType0, typeFactory0);\n    AsExternalTypeSerializer asExternalTypeSerializer0 = new AsExternalTypeSerializer(classNameIdResolver0, (BeanProperty) null, \"\");\n    stdDelegatingSerializer0.serializeWithType(dataInputStream0, jsonGenerator0, defaultSerializerProvider_Impl0, asExternalTypeSerializer0);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public boolean isEmpty(SerializerProvider prov, Object value)",
    "methodName" : "isEmpty",
    "className" : "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    StdDelegatingSerializer stdDelegatingSerializer0 = new StdDelegatingSerializer((Converter<?, ?>) null);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    stdDelegatingSerializer0.isEmpty((SerializerProvider) defaultSerializerProvider_Impl0, (Object) defaultSerializerProvider_Impl0);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public void acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor, JavaType typeHint) throws JsonMappingException",
    "methodName" : "acceptJsonFormatVisitor",
    "className" : "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    StdDelegatingSerializer stdDelegatingSerializer0 = new StdDelegatingSerializer((Converter<?, ?>) null);\n    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base((SerializerProvider) null);\n    stdDelegatingSerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper_Base0, (JavaType) null);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public JsonNode getSchema(SerializerProvider provider, Type typeHint, boolean isOptional) throws JsonMappingException",
    "methodName" : "getSchema",
    "className" : "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Class<DOMSerializer> class0 = DOMSerializer.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    StdDelegatingSerializer stdDelegatingSerializer0 = new StdDelegatingSerializer((Converter<?, ?>) null);\n    StdDelegatingSerializer stdDelegatingSerializer1 = stdDelegatingSerializer0.withDelegate((Converter<Object, ?>) null, simpleType0, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER);\n    JsonNode jsonNode0 = stdDelegatingSerializer1.getSchema((SerializerProvider) defaultSerializerProvider_Impl0, (Type) class0, true);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public void resolve(SerializerProvider provider) throws JsonMappingException",
    "methodName" : "resolve",
    "className" : "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Class<StdDelegatingSerializer> class0 = StdDelegatingSerializer.class;\n    JavaType javaType0 = TypeFactory.unknownType();\n    MapLikeType mapLikeType0 = MapLikeType.construct(class0, javaType0, javaType0);\n    StdDelegatingSerializer stdDelegatingSerializer0 = new StdDelegatingSerializer((Converter<?, ?>) null);\n    StdDelegatingSerializer stdDelegatingSerializer1 = stdDelegatingSerializer0.withDelegate((Converter<Object, ?>) null, mapLikeType0, stdDelegatingSerializer0);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    stdDelegatingSerializer1.resolve(defaultSerializerProvider_Impl0);\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "public boolean isBigInteger()",
    "methodName" : "isBigInteger",
    "className" : "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    Class<DOMSerializer> class0 = DOMSerializer.class;\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    StdDelegatingSerializer stdDelegatingSerializer0 = new StdDelegatingSerializer((Converter<?, ?>) null);\n    JsonNode jsonNode0 = stdDelegatingSerializer0.getSchema((SerializerProvider) defaultSerializerProvider_Impl0, (Type) class0, true);\n    jsonNode0.isBigInteger();\n}",
    "testName" : "test1616"
  },
  "test1414" : {
    "methodSignature" : "public boolean isBigDecimal()",
    "methodName" : "isBigDecimal",
    "className" : "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    StdDelegatingSerializer stdDelegatingSerializer0 = new StdDelegatingSerializer((Converter<?, ?>) null);\n    JsonNode jsonNode0 = stdDelegatingSerializer0.getSchema((SerializerProvider) null, (Type) null);\n    jsonNode0.isBigDecimal();\n}",
    "testName" : "test1414"
  },
  "test1515" : {
    "methodSignature" : "public JsonNode getSchema(SerializerProvider provider, Type typeHint) throws JsonMappingException",
    "methodName" : "getSchema",
    "className" : "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    Class<Module> class0 = Module.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    StdDelegatingSerializer stdDelegatingSerializer0 = new StdDelegatingSerializer((Converter<?, ?>) null);\n    StdDelegatingSerializer stdDelegatingSerializer1 = stdDelegatingSerializer0.withDelegate((Converter<Object, ?>) null, simpleType0, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER);\n    JsonNode jsonNode0 = stdDelegatingSerializer1.getSchema((SerializerProvider) defaultSerializerProvider_Impl0, (Type) class0);\n}",
    "testName" : "test1515"
  },
  "test000" : {
    "methodSignature" : "protected Converter<Object, ?> getConverter()",
    "methodName" : "getConverter",
    "className" : "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Class<StdDelegatingSerializer> class0 = StdDelegatingSerializer.class;\n    StdDelegatingSerializer stdDelegatingSerializer0 = new StdDelegatingSerializer(class0, (Converter<StdDelegatingSerializer, ?>) null);\n    Converter<Object, ?> converter0 = stdDelegatingSerializer0.getConverter();\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public JsonSerializer<?> getDelegatee()",
    "methodName" : "getDelegatee",
    "className" : "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    StdDelegatingSerializer stdDelegatingSerializer0 = new StdDelegatingSerializer((Converter<?, ?>) null);\n    JsonSerializer<?> jsonSerializer0 = stdDelegatingSerializer0.getDelegatee();\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public JsonSerializer<?> createContextual(SerializerProvider provider, BeanProperty property) throws JsonMappingException",
    "methodName" : "createContextual",
    "className" : "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Class<DOMSerializer> class0 = DOMSerializer.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    StdDelegatingSerializer stdDelegatingSerializer0 = new StdDelegatingSerializer((Converter<Object, ?>) null, simpleType0, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER);\n    JsonSerializer<?> jsonSerializer0 = stdDelegatingSerializer0.createContextual(defaultSerializerProvider_Impl0, (BeanProperty) null);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public boolean isEmpty(T value)",
    "methodName" : "isEmpty",
    "className" : "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    StdDelegatingSerializer stdDelegatingSerializer0 = new StdDelegatingSerializer((Converter<?, ?>) null);\n    stdDelegatingSerializer0.isEmpty((Object) null);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public boolean isUnwrappingSerializer()",
    "methodName" : "isUnwrappingSerializer",
    "className" : "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Class<NamedType> class0 = NamedType.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    StdDelegatingSerializer stdDelegatingSerializer0 = new StdDelegatingSerializer((Converter<Object, ?>) null, simpleType0, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER);\n    stdDelegatingSerializer0.resolve(defaultSerializerProvider_Impl0);\n    stdDelegatingSerializer0.isUnwrappingSerializer();\n}",
    "testName" : "test088"
  }
}