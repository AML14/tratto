[ {
  "className" : "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
  "methodSignature" : "public boolean usesObjectId()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(jsonSerializer0.usesObjectId())",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
  "methodSignature" : "public boolean usesObjectId()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(jsonSerializer0.usesObjectId())",
  "exception" : "",
  "testName" : "test011"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
  "methodSignature" : "public boolean isUnwrappingSerializer()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(jsonSerializer0.isUnwrappingSerializer())",
  "exception" : "",
  "testName" : "test022"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
  "methodSignature" : "public boolean usesObjectId()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(jsonSerializer0.usesObjectId())",
  "exception" : "",
  "testName" : "test033"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
  "methodSignature" : "public void resolve(SerializerProvider provider) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test044"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
  "methodSignature" : "public boolean usesObjectId()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test077"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
  "methodSignature" : "public boolean usesObjectId()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test088"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
  "methodSignature" : "public void serializeWithType(T value, JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1010"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
  "methodSignature" : "protected void serializeFieldsFiltered(Object bean, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonGenerationException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1313"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
  "methodSignature" : "protected void serializeFieldsFiltered(Object bean, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonGenerationException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1414"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
  "methodSignature" : "public JsonNode getSchema(SerializerProvider provider, Type typeHint) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1515"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1616"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
  "methodSignature" : "public boolean isCollectionLikeType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(simpleType0.isCollectionLikeType())",
  "exception" : "",
  "testName" : "test1717"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase",
  "methodSignature" : "public boolean isUnwrappingSerializer()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(beanSerializer0.isUnwrappingSerializer())",
  "exception" : "",
  "testName" : "test1818"
} ]