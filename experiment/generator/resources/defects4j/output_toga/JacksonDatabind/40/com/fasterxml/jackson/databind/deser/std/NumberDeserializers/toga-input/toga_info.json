{
  "test2324" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2324() throws Throwable {\n    Class<Character> class0 = Character.TYPE;\n    JsonDeserializer<?> jsonDeserializer0 = NumberDeserializers.find(class0, (String) null);\n    jsonDeserializer0.isCachable();\n}",
    "testName" : "test2324"
  },
  "test3435" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3435() throws Throwable {\n    Class<Float> class0 = Float.class;\n    JsonDeserializer<?> jsonDeserializer0 = NumberDeserializers.find(class0, \"java.math.BigInteger\");\n    jsonDeserializer0.isCachable();\n}",
    "testName" : "test3435"
  },
  "test1313" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Class<Float> class0 = Float.TYPE;\n    Float float0 = new Float(0.0);\n    NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = new NumberDeserializers.FloatDeserializer(class0, float0);\n    numberDeserializers_FloatDeserializer0.isCachable();\n}",
    "testName" : "test1313"
  },
  "test2425" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2425() throws Throwable {\n    Class<Byte> class0 = Byte.TYPE;\n    JsonDeserializer<?> jsonDeserializer0 = NumberDeserializers.find(class0, \"java.math.BigInteger\");\n    jsonDeserializer0.isCachable();\n}",
    "testName" : "test2425"
  },
  "test3536" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3536() throws Throwable {\n    Class<BigInteger> class0 = BigInteger.class;\n    JsonDeserializer<?> jsonDeserializer0 = NumberDeserializers.find(class0, \"java.math.BigInteger\");\n    jsonDeserializer0.isCachable();\n}",
    "testName" : "test3536"
  },
  "test2122" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2122() throws Throwable {\n    Class<Long> class0 = Long.TYPE;\n    JsonDeserializer<?> jsonDeserializer0 = NumberDeserializers.find(class0, \"java.mth.BigInteger\");\n    jsonDeserializer0.isCachable();\n}",
    "testName" : "test2122"
  },
  "test3233" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3233() throws Throwable {\n    Class<Byte> class0 = Byte.class;\n    JsonDeserializer<?> jsonDeserializer0 = NumberDeserializers.find(class0, \"java.math.BigInteger\");\n    jsonDeserializer0.isCachable();\n}",
    "testName" : "test3233"
  },
  "test1111" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Class<Boolean> class0 = Boolean.TYPE;\n    Boolean boolean0 = Boolean.valueOf(\"com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer\");\n    NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = new NumberDeserializers.BooleanDeserializer(class0, boolean0);\n    numberDeserializers_BooleanDeserializer0.isCachable();\n}",
    "testName" : "test1111"
  },
  "test2223" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2223() throws Throwable {\n    Class<Double> class0 = Double.TYPE;\n    JsonDeserializer<?> jsonDeserializer0 = NumberDeserializers.find(class0, \"java.|ath.BigInteger\");\n    jsonDeserializer0.isCachable();\n}",
    "testName" : "test2223"
  },
  "test011" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    NumberDeserializers.BigDecimalDeserializer numberDeserializers_BigDecimalDeserializer0 = new NumberDeserializers.BigDecimalDeserializer();\n    numberDeserializers_BigDecimalDeserializer0.isCachable();\n}",
    "testName" : "test011"
  },
  "test055" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Class<Character> class0 = Character.class;\n    Character character0 = Character.valueOf('f');\n    NumberDeserializers.CharacterDeserializer numberDeserializers_CharacterDeserializer0 = new NumberDeserializers.CharacterDeserializer(class0, character0);\n    numberDeserializers_CharacterDeserializer0.isCachable();\n}",
    "testName" : "test055"
  },
  "test2728" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2728() throws Throwable {\n    Class<Integer> class0 = Integer.class;\n    JsonDeserializer<?> jsonDeserializer0 = NumberDeserializers.find(class0, \"java.math.BigInteger\");\n    jsonDeserializer0.isCachable();\n}",
    "testName" : "test2728"
  },
  "test1717" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    NumberDeserializers.IntegerDeserializer numberDeserializers_IntegerDeserializer0 = NumberDeserializers.IntegerDeserializer.wrapperInstance;\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(numberDeserializers_IntegerDeserializer0);\n}",
    "testName" : "test1717"
  },
  "test2829" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2829() throws Throwable {\n    Class<Boolean> class0 = Boolean.class;\n    JsonDeserializer<?> jsonDeserializer0 = NumberDeserializers.find(class0, \"java.math.BigInteger\");\n    jsonDeserializer0.isCachable();\n}",
    "testName" : "test2829"
  },
  "test2526" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2526() throws Throwable {\n    Class<Short> class0 = Short.TYPE;\n    JsonDeserializer<?> jsonDeserializer0 = NumberDeserializers.find(class0, (String) null);\n    jsonDeserializer0.isCachable();\n}",
    "testName" : "test2526"
  },
  "test3637" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3637() throws Throwable {\n    Class<BigDecimal> class0 = BigDecimal.class;\n    JsonDeserializer<?> jsonDeserializer0 = NumberDeserializers.find(class0, \"java.math.BigInteger\");\n    jsonDeserializer0.isCachable();\n}",
    "testName" : "test3637"
  },
  "test3738" : {
    "methodSignature" : "public static JsonDeserializer<?> find(Class<?> rawType, String clsName)",
    "methodName" : "find",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3738() throws Throwable {\n    Class<String> class0 = String.class;\n    NumberDeserializers.find(class0, \"java.math.BigInteger\");\n}",
    "testName" : "test3738"
  },
  "test3031" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3031() throws Throwable {\n    Class<Double> class0 = Double.class;\n    JsonDeserializer<?> jsonDeserializer0 = NumberDeserializers.find(class0, \"java.math.BigInteger\");\n    jsonDeserializer0.isCachable();\n}",
    "testName" : "test3031"
  },
  "test2021" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2021() throws Throwable {\n    Class<Boolean> class0 = Boolean.TYPE;\n    JsonDeserializer<?> jsonDeserializer0 = NumberDeserializers.find(class0, \"java.math.BigInteger\");\n    jsonDeserializer0.isCachable();\n}",
    "testName" : "test2021"
  },
  "test3132" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3132() throws Throwable {\n    Class<Character> class0 = Character.class;\n    JsonDeserializer<?> jsonDeserializer0 = NumberDeserializers.find(class0, \"java.math.BigInteger\");\n    jsonDeserializer0.isCachable();\n}",
    "testName" : "test3132"
  },
  "test2930" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2930() throws Throwable {\n    Class<Long> class0 = Long.class;\n    JsonDeserializer<?> jsonDeserializer0 = NumberDeserializers.find(class0, \"java.math.BigInteger\");\n    jsonDeserializer0.isCachable();\n}",
    "testName" : "test2930"
  },
  "test066" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Class<Short> class0 = Short.class;\n    Short short0 = new Short((short) (-3647));\n    NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = new NumberDeserializers.ShortDeserializer(class0, short0);\n    numberDeserializers_ShortDeserializer0.isCachable();\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Class<Byte> class0 = Byte.class;\n    Byte byte0 = new Byte((byte) 125);\n    NumberDeserializers.ByteDeserializer numberDeserializers_ByteDeserializer0 = new NumberDeserializers.ByteDeserializer(class0, byte0);\n    numberDeserializers_ByteDeserializer0.isCachable();\n}",
    "testName" : "test088"
  },
  "test1920" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1920() throws Throwable {\n    Class<Integer> class0 = Integer.TYPE;\n    JsonDeserializer<?> jsonDeserializer0 = NumberDeserializers.find(class0, \"java.math.BigInteger\");\n    jsonDeserializer0.isCachable();\n}",
    "testName" : "test1920"
  },
  "test1818" : {
    "methodSignature" : "public static JsonDeserializer<?> find(Class<?> rawType, String clsName)",
    "methodName" : "find",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    Class<Float> class0 = Float.TYPE;\n    JsonDeserializer<?> jsonDeserializer0 = NumberDeserializers.find(class0, \"x\");\n}",
    "testName" : "test1818"
  },
  "test1819" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.NumberDeserializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1819() throws Throwable {\n    Class<Float> class0 = Float.TYPE;\n    JsonDeserializer<?> jsonDeserializer0 = NumberDeserializers.find(class0, \"x\");\n    jsonDeserializer0.isCachable();\n}",
    "testName" : "test1819"
  }
}