[ {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public float getFloatValue() throws IOException, JsonParseException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test022"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public Number getNumberValue() throws IOException, JsonParseException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test033"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public boolean hasTextCharacters()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test055"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public int getTextLength() throws IOException, JsonParseException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test066"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public int getTextOffset() throws IOException, JsonParseException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test077"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public boolean isClosed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test088"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public BigInteger getBigIntegerValue() throws IOException, JsonParseException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test099"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "protected void _handleEOF() throws JsonParseException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1111"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public int getIntValue() throws IOException, JsonParseException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1313"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public char[] getTextCharacters() throws IOException, JsonParseException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1414"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public BigDecimal getDecimalValue() throws IOException, JsonParseException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1515"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public long getLongValue() throws IOException, JsonParseException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1616"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public double getDoubleValue() throws IOException, JsonParseException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1717"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public boolean isClosed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(treeTraversingParser0.isClosed())",
  "exception" : "",
  "testName" : "test1818"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public String getText()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(string0)",
  "exception" : "",
  "testName" : "test2020"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public boolean isClosed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(treeTraversingParser0.isClosed())",
  "exception" : "",
  "testName" : "test2222"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public NumberType getNumberType() throws IOException, JsonParseException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2323"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public String getCurrentName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(string0)",
  "exception" : "",
  "testName" : "test2727"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public boolean isClosed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(treeTraversingParser0.isClosed())",
  "exception" : "",
  "testName" : "test2828"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public boolean isClosed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(treeTraversingParser0.isClosed())",
  "exception" : "",
  "testName" : "test2929"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public String getText()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(string0)",
  "exception" : "",
  "testName" : "test3131"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public NumberType getNumberType() throws IOException, JsonParseException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(jsonParser_NumberType0)",
  "exception" : "",
  "testName" : "test3737"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public Object getEmbeddedObject()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3838"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public Object getEmbeddedObject()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4040"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4141"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public Object getEmbeddedObject()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4242"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public boolean isNaN()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test4343"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public boolean isNaN()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test4444"
}, {
  "className" : "com.fasterxml.jackson.databind.node.TreeTraversingParser",
  "methodSignature" : "public boolean isNaN()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test4545"
} ]