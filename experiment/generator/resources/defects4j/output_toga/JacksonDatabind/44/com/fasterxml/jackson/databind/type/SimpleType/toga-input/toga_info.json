{
  "test1212" : {
    "methodSignature" : "public SimpleType withValueHandler(Object h)",
    "methodName" : "withValueHandler",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    simpleType0.withValueHandler(simpleType0);\n}",
    "testName" : "test1212"
  },
  "test2323" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_COMPARABLE;\n    SimpleType simpleType1 = TypeFactory.CORE_TYPE_LONG;\n    simpleType0.equals(simpleType1);\n}",
    "testName" : "test2323"
  },
  "test1313" : {
    "methodSignature" : "public String getGenericSignature()",
    "methodName" : "getGenericSignature",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_INT;\n    simpleType0.getGenericSignature();\n}",
    "testName" : "test1313"
  },
  "test2424" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    simpleType0.equals(simpleType0);\n}",
    "testName" : "test2424"
  },
  "test1010" : {
    "methodSignature" : "public JavaType withContentType(JavaType contentType)",
    "methodName" : "withContentType",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Class<ChronoUnit> class0 = ChronoUnit.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    simpleType0.withContentType(simpleType0);\n}",
    "testName" : "test1010"
  },
  "test2121" : {
    "methodSignature" : "protected JavaType _narrow(Class<?> subclass)",
    "methodName" : "_narrow",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    Class<TemporalField> class0 = TemporalField.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    simpleType0._narrow(class0);\n}",
    "testName" : "test2121"
  },
  "test1111" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_INT;\n    simpleType0.equals((Object) null);\n}",
    "testName" : "test1111"
  },
  "test2222" : {
    "methodSignature" : "public SimpleType withValueHandler(Object h)",
    "methodName" : "withValueHandler",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    simpleType0.withValueHandler((Object) null);\n}",
    "testName" : "test2222"
  },
  "test011" : {
    "methodSignature" : "public boolean isContainerType()",
    "methodName" : "isContainerType",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_CLASS;\n    simpleType0.isContainerType();\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public SimpleType withContentValueHandler(Object h)",
    "methodName" : "withContentValueHandler",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Class<Object> class0 = Object.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    simpleType0.withContentValueHandler(class0);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    SimpleType simpleType1 = simpleType0.withStaticTyping();\n    simpleType0.equals(simpleType1);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_INT;\n    simpleType0.withContentTypeHandler(\"com.fasterxml.jackson.databind.type.SimpleType\");\n    simpleType0.toString();\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Class<ChronoUnit> class0 = ChronoUnit.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    simpleType0.equals(class0);\n}",
    "testName" : "test099"
  },
  "test2727" : {
    "methodSignature" : "public StringBuilder getGenericSignature(StringBuilder sb)",
    "methodName" : "getGenericSignature",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<LinkedList> class0 = LinkedList.class;\n    Class<String> class1 = String.class;\n    CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class1);\n    SimpleType simpleType0 = new SimpleType(collectionType0);\n    char[] charArray0 = new char[1];\n    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n    StringBuilder stringBuilder0 = new StringBuilder(charBuffer0);\n    simpleType0.getGenericSignature(stringBuilder0);\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "public static SimpleType constructUnsafe(Class<?> raw)",
    "methodName" : "constructUnsafe",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    Class<Object> class0 = Object.class;\n    SimpleType.constructUnsafe(class0);\n}",
    "testName" : "test1717"
  },
  "test2828" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<HashMap> class0 = HashMap.class;\n    Class<ChronoLocalDate> class1 = ChronoLocalDate.class;\n    Class<TemporalField> class2 = TemporalField.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class1, class2);\n    SimpleType simpleType0 = new SimpleType(mapType0);\n    simpleType0.toString();\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public String getErasedSignature()",
    "methodName" : "getErasedSignature",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_INT;\n    simpleType0.getErasedSignature();\n}",
    "testName" : "test1414"
  },
  "test2525" : {
    "methodSignature" : "public static SimpleType construct(Class<?> cls)",
    "methodName" : "construct",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    Class<HashMap> class0 = HashMap.class;\n    SimpleType.construct(class0);\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public SimpleType withTypeHandler(Object h)",
    "methodName" : "withTypeHandler",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_STRING;\n    simpleType0.withTypeHandler(simpleType0);\n}",
    "testName" : "test1515"
  },
  "test2626" : {
    "methodSignature" : "public static SimpleType construct(Class<?> cls)",
    "methodName" : "construct",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    Class<LinkedList> class0 = LinkedList.class;\n    SimpleType.construct(class0);\n}",
    "testName" : "test2626"
  },
  "test2020" : {
    "methodSignature" : "protected JavaType _narrow(Class<?> subclass)",
    "methodName" : "_narrow",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_INT;\n    Class<Object> class0 = Object.class;\n    simpleType0._narrow(class0);\n}",
    "testName" : "test2020"
  },
  "test022" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_INT;\n    simpleType0.toString();\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "protected String buildCanonicalName()",
    "methodName" : "buildCanonicalName",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_COMPARABLE;\n    simpleType0.buildCanonicalName();\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public SimpleType withStaticTyping()",
    "methodName" : "withStaticTyping",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_INT;\n    SimpleType simpleType1 = simpleType0.withStaticTyping();\n    simpleType1.withStaticTyping();\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public SimpleType withTypeHandler(Object h)",
    "methodName" : "withTypeHandler",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_STRING;\n    simpleType0.withTypeHandler((Object) null);\n}",
    "testName" : "test088"
  },
  "test2929" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<LinkedList> class0 = LinkedList.class;\n    Class<String> class1 = String.class;\n    CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class1);\n    SimpleType simpleType0 = new SimpleType(collectionType0);\n    simpleType0.toString();\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public ReferenceType withContentTypeHandler(Object h)",
    "methodName" : "withContentTypeHandler",
    "className" : "com.fasterxml.jackson.databind.type.SimpleType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    referenceType0.withContentTypeHandler(simpleType0);\n}",
    "testName" : "test1919"
  }
}