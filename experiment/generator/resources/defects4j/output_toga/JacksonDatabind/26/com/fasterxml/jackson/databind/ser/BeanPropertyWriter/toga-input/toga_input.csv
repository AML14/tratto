focal_method,test_prefix,docstring
"// // // Legacy support for JsonFormatVisitable
/**
 * Attempt to add the output of the given {@link BeanPropertyWriter} in the given {@link ObjectNode}.
 * Otherwise, add the default schema {@link JsonNode} in place of the writer's output
 *
 * @param propertiesNode Node which the given property would exist within
 * @param provider Provider that can be used for accessing dynamic aspects of serialization
 *  processing
 */
@Override
@Deprecated
public void depositSchemaProperty(ObjectNode propertiesNode, SerializerProvider provider) throws JsonMappingException {
    JavaType propType = getSerializationType();
    // 03-Dec-2010, tatu: SchemaAware REALLY should use JavaType, but alas it doesn't...
    Type hint = (propType == null) ? getGenericPropertyType() : propType.getRawClass();
    JsonNode schemaNode;
    // Maybe it already has annotated/statically configured serializer?
    JsonSerializer<Object> ser = getSerializer();
    if (ser == null) {
        // nope
        ser = provider.findValueSerializer(getType(), this);
    }
    boolean isOptional = !isRequired();
    if (ser instanceof SchemaAware) {
        schemaNode = ((SchemaAware) ser).getSchema(provider, hint, isOptional);
    } else {
        schemaNode = com.fasterxml.jackson.databind.jsonschema.JsonSchema.getDefaultSchemaNode();
    }
    _depositSchemaProperty(propertiesNode, schemaNode);
}","public void test000() throws Throwable {
    PropertyName propertyName0 = PropertyName.USE_DEFAULT;
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(propertyName0, annotationIntrospector0, false);
    AnnotationMap annotationMap0 = new AnnotationMap();
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, (AnnotatedMember) null, annotationMap0, (JavaType) null, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER, (TypeSerializer) null, (JavaType) null, false, (Object) null);
    // Undeclared exception!
    try {
        beanPropertyWriter0.depositSchemaProperty((ObjectNode) null, (SerializerProvider) defaultSerializerProvider_Impl0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.ser.BeanPropertyWriter"", e);
    }
}",""
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test011() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    beanPropertyWriter0.assignTypeSerializer((TypeSerializer) null);
    assertFalse(beanPropertyWriter0.willSuppressNulls());
}",""
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test022() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    boolean boolean0 = beanPropertyWriter0.isVirtual();
    assertFalse(beanPropertyWriter0.willSuppressNulls());
}",""
"public boolean isUnwrapping() {
    return false;
}","public void test034() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    boolean boolean0 = beanPropertyWriter0.isUnwrapping();
    assertFalse(boolean0);
}","/**
 *  Accessor that will return true if this bean property has to support
 *  ""unwrapping""; ability to replace POJO structural wrapping with optional
 *  name prefix and/or suffix (or in some cases, just removal of wrapper name).
 * <p>
 *  Default implementation simply returns false.
 *
 *  @since 2.3
 */"
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test035() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    boolean boolean0 = beanPropertyWriter0.isUnwrapping();
    assertFalse(beanPropertyWriter0.willSuppressNulls());
}",""
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test046() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    beanPropertyWriter0.getWrapperName();
    assertFalse(beanPropertyWriter0.willSuppressNulls());
}",""
"// Note: also part of 'PropertyWriter'
@Override
public PropertyName getFullName() {
    // !!! TODO: impl properly
    return new PropertyName(_name.getValue());
}","public void test057() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    // Undeclared exception!
    try {
        beanPropertyWriter0.getFullName();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.ser.BeanPropertyWriter"", e);
    }
}",""
"@SuppressWarnings(""resource"")
public String writeValueAsString(Object value) throws JsonProcessingException {
    // alas, we have to pull the recycler directly here...
    SegmentedStringWriter sw = new SegmentedStringWriter(_jsonFactory._getBufferRecycler());
    try {
        _configAndWriteValue(_jsonFactory.createGenerator(sw), value);
    } catch (JsonProcessingException e) {
        // to support [JACKSON-758]
        throw e;
    } catch (IOException e) {
        // shouldn't really happen, but is declared as possibility so:
        throw JsonMappingException.fromUnexpectedIOE(e);
    }
    return sw.getAndClear();
}","public void test068() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    ObjectMapper objectMapper0 = new ObjectMapper();
    try {
        objectMapper0.writeValueAsString(beanPropertyWriter0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // (was java.lang.NullPointerException) (through reference chain: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[\""required\""])
        //
        verifyException(""com.fasterxml.jackson.databind.JsonMappingException"", e);
    }
}","/**
 *  Method that can be used to serialize any Java value as
 *  a String. Functionally equivalent to calling
 *  {@link #writeValue(Writer,Object)} with {@link java.io.StringWriter}
 *  and constructing String, but more efficient.
 * <p>
 *  Note: prior to version 2.1, throws clause included {@link IOException}; 2.1 removed it.
 */"
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test079() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    beanPropertyWriter0.getSerializedName();
    assertFalse(beanPropertyWriter0.willSuppressNulls());
}",""
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test0810() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    beanPropertyWriter0.getMetadata();
    assertFalse(beanPropertyWriter0.willSuppressNulls());
}",""
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test0911() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    NameTransformer nameTransformer0 = NameTransformer.NOP;
    BeanPropertyWriter beanPropertyWriter1 = beanPropertyWriter0.unwrappingWriter(nameTransformer0);
    assertFalse(beanPropertyWriter1.willSuppressNulls());
}",""
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test1012() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    PropertyName propertyName0 = new PropertyName(""IT'"", ""IT'"");
    BeanPropertyWriter beanPropertyWriter1 = new BeanPropertyWriter(beanPropertyWriter0, propertyName0);
    NameTransformer nameTransformer0 = NameTransformer.simpleTransformer(""IT'"", ""IT'"");
    BeanPropertyWriter beanPropertyWriter2 = beanPropertyWriter1.rename(nameTransformer0);
    assertFalse(beanPropertyWriter2.willSuppressNulls());
}",""
"/*
    /**********************************************************
    /* BeanProperty impl
    /**********************************************************
     */
// Note: also part of 'PropertyWriter'
@Override
public String getName() {
    return _name.getValue();
}","public void test1013() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    PropertyName propertyName0 = new PropertyName(""IT'"", ""IT'"");
    BeanPropertyWriter beanPropertyWriter1 = new BeanPropertyWriter(beanPropertyWriter0, propertyName0);
    NameTransformer nameTransformer0 = NameTransformer.simpleTransformer(""IT'"", ""IT'"");
    BeanPropertyWriter beanPropertyWriter2 = beanPropertyWriter1.rename(nameTransformer0);
    assertEquals(""IT'IT'IT'"", beanPropertyWriter2.getName());
}",""
"@SuppressWarnings(""resource"")
public String writeValueAsString(Object value) throws JsonProcessingException {
    // alas, we have to pull the recycler directly here...
    SegmentedStringWriter sw = new SegmentedStringWriter(_jsonFactory._getBufferRecycler());
    try {
        _configAndWriteValue(_jsonFactory.createGenerator(sw), value);
    } catch (JsonProcessingException e) {
        // to support [JACKSON-758]
        throw e;
    } catch (IOException e) {
        // shouldn't really happen, but is declared as possibility so:
        throw JsonMappingException.fromUnexpectedIOE(e);
    }
    return sw.getAndClear();
}","public void test1114() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    PropertyAccessor propertyAccessor0 = PropertyAccessor.FIELD;
    JsonAutoDetect.Visibility jsonAutoDetect_Visibility0 = JsonAutoDetect.Visibility.NON_PRIVATE;
    objectMapper0.setVisibility(propertyAccessor0, jsonAutoDetect_Visibility0);
    CoreXMLSerializers.XMLGregorianCalendarSerializer coreXMLSerializers_XMLGregorianCalendarSerializer0 = new CoreXMLSerializers.XMLGregorianCalendarSerializer();
    String string0 = objectMapper0.writeValueAsString(coreXMLSerializers_XMLGregorianCalendarSerializer0);
    assertEquals(""{\""_handledType\"":\""javax.xml.datatype.XMLGregorianCalendar\"",\""_delegate\"":{\""_handledType\"":\""java.util.Calendar\"",\""_useTimestamp\"":null,\""_customFormat\"":null,\""unwrappingSerializer\"":false,\""delegatee\"":null},\""delegatee\"":{\""_handledType\"":\""java.util.Calendar\"",\""_useTimestamp\"":null,\""_customFormat\"":null,\""unwrappingSerializer\"":false,\""delegatee\"":null},\""unwrappingSerializer\"":false}"", string0);
}","/**
 *  Method that can be used to serialize any Java value as
 *  a String. Functionally equivalent to calling
 *  {@link #writeValue(Writer,Object)} with {@link java.io.StringWriter}
 *  and constructing String, but more efficient.
 * <p>
 *  Note: prior to version 2.1, throws clause included {@link IOException}; 2.1 removed it.
 */"
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test1215() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    beanPropertyWriter0.setInternalSetting((Object) null, (Object) null);
    PropertyName propertyName0 = PropertyName.NO_NAME;
    BeanPropertyWriter beanPropertyWriter1 = new BeanPropertyWriter(beanPropertyWriter0, propertyName0);
    assertFalse(beanPropertyWriter1.willSuppressNulls());
}",""
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test1316() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    beanPropertyWriter0.setInternalSetting((Object) null, (Object) null);
    BeanPropertyWriter beanPropertyWriter1 = new BeanPropertyWriter(beanPropertyWriter0);
    assertFalse(beanPropertyWriter1.willSuppressNulls());
}",""
"public BeanPropertyWriter rename(NameTransformer transformer) {
    String newName = transformer.transform(_name.getValue());
    if (newName.equals(_name.toString())) {
        return this;
    }
    return _new(PropertyName.construct(newName));
}","public void test1417() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    PropertyName propertyName0 = new PropertyName(""IT'"", ""IT'"");
    BeanPropertyWriter beanPropertyWriter1 = new BeanPropertyWriter(beanPropertyWriter0, propertyName0);
    NameTransformer nameTransformer0 = NameTransformer.NOP;
    BeanPropertyWriter beanPropertyWriter2 = beanPropertyWriter1.rename(nameTransformer0);
    assertSame(beanPropertyWriter2, beanPropertyWriter1);
}",""
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test1418() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    PropertyName propertyName0 = new PropertyName(""IT'"", ""IT'"");
    BeanPropertyWriter beanPropertyWriter1 = new BeanPropertyWriter(beanPropertyWriter0, propertyName0);
    NameTransformer nameTransformer0 = NameTransformer.NOP;
    BeanPropertyWriter beanPropertyWriter2 = beanPropertyWriter1.rename(nameTransformer0);
    assertFalse(beanPropertyWriter2.willSuppressNulls());
}",""
"// Needed by BeanSerializer#getSchema
public JsonSerializer<Object> getSerializer() {
    return _serializer;
}","public void test1519() throws Throwable {
    PropertyName propertyName0 = PropertyName.NO_NAME;
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(propertyName0, annotationIntrospector0, false);
    AnnotationMap annotationMap0 = new AnnotationMap();
    JsonSerializer<DOMSerializer> jsonSerializer0 = (JsonSerializer<DOMSerializer>) mock(JsonSerializer.class, new ViolatedAssumptionAnswer());
    doReturn((String) null).when(jsonSerializer0).toString();
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, (AnnotatedMember) null, annotationMap0, (JavaType) null, jsonSerializer0, (TypeSerializer) null, (JavaType) null, false, propertyName0);
    JsonSerializer<Object> jsonSerializer1 = beanPropertyWriter0.getSerializer();
    assertNotNull(jsonSerializer1);
}",""
"public boolean hasSerializer() {
    return _serializer != null;
}","public void test1520() throws Throwable {
    PropertyName propertyName0 = PropertyName.NO_NAME;
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(propertyName0, annotationIntrospector0, false);
    AnnotationMap annotationMap0 = new AnnotationMap();
    JsonSerializer<DOMSerializer> jsonSerializer0 = (JsonSerializer<DOMSerializer>) mock(JsonSerializer.class, new ViolatedAssumptionAnswer());
    doReturn((String) null).when(jsonSerializer0).toString();
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, (AnnotatedMember) null, annotationMap0, (JavaType) null, jsonSerializer0, (TypeSerializer) null, (JavaType) null, false, propertyName0);
    JsonSerializer<Object> jsonSerializer1 = beanPropertyWriter0.getSerializer();
    beanPropertyWriter0.assignSerializer(jsonSerializer1);
    assertTrue(beanPropertyWriter0.hasSerializer());
}",""
"public void assignSerializer(JsonSerializer<Object> ser) {
    // may need to disable check in future?
    if (_serializer != null && _serializer != ser) {
        throw new IllegalStateException(""Can not override serializer"");
    }
    _serializer = ser;
}","public void test1621() throws Throwable {
    PropertyName propertyName0 = new PropertyName(""field \"""");
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(propertyName0, annotationIntrospector0, false);
    AnnotationMap annotationMap0 = new AnnotationMap();
    JsonSerializer<DOMSerializer> jsonSerializer0 = (JsonSerializer<DOMSerializer>) mock(JsonSerializer.class, new ViolatedAssumptionAnswer());
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, (AnnotatedMember) null, annotationMap0, (JavaType) null, jsonSerializer0, (TypeSerializer) null, (JavaType) null, false, propertyName0);
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    // Undeclared exception!
    try {
        beanPropertyWriter0.assignSerializer(defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Can not override serializer
        //
        verifyException(""com.fasterxml.jackson.databind.ser.BeanPropertyWriter"", e);
    }
}","/**
 * Method called to assign value serializer for property
 *
 * @since 2.0
 */"
"public void assignNullSerializer(JsonSerializer<Object> nullSer) {
    // may need to disable check in future?
    if (_nullSerializer != null && _nullSerializer != nullSer) {
        throw new IllegalStateException(""Can not override null serializer"");
    }
    _nullSerializer = nullSer;
}","public void test1722() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    JsonSerializer<Object> jsonSerializer0 = SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
    beanPropertyWriter0.assignNullSerializer(jsonSerializer0);
    // Undeclared exception!
    try {
        beanPropertyWriter0.assignNullSerializer((JsonSerializer<Object>) null);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Can not override null serializer
        //
        verifyException(""com.fasterxml.jackson.databind.ser.BeanPropertyWriter"", e);
    }
}","/**
 * Method called to assign null value serializer for property
 *
 * @since 2.0
 */"
"public boolean hasNullSerializer() {
    return _nullSerializer != null;
}","public void test1823() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    JsonSerializer<Object> jsonSerializer0 = SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
    beanPropertyWriter0.assignNullSerializer(jsonSerializer0);
    beanPropertyWriter0.assignNullSerializer(jsonSerializer0);
    assertTrue(beanPropertyWriter0.hasNullSerializer());
}",""
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test1924() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    BeanPropertyWriter beanPropertyWriter1 = (BeanPropertyWriter) beanPropertyWriter0.readResolve();
    assertFalse(beanPropertyWriter1.willSuppressNulls());
}",""
"public boolean hasSerializer() {
    return _serializer != null;
}","public void test2025() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    beanPropertyWriter0.assignSerializer(defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER);
    beanPropertyWriter0.readResolve();
    assertTrue(beanPropertyWriter0.hasSerializer());
}",""
"public boolean hasSerializer() {
    return _serializer != null;
}","public void test2126() throws Throwable {
    PropertyName propertyName0 = PropertyName.construct((String) null);
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(propertyName0, annotationIntrospector0, true);
    Class<Integer> class0 = Integer.class;
    AnnotatedClass annotatedClass0 = AnnotatedClass.constructWithoutSuperTypes(class0, annotationIntrospector0, (ClassIntrospector.MixInResolver) null);
    VirtualAnnotatedMember virtualAnnotatedMember0 = new VirtualAnnotatedMember(annotatedClass0, class0, "", no static serializer"", class0);
    SimpleType simpleType0 = SimpleType.construct(class0);
    JsonSerializer<PipedInputStream> jsonSerializer0 = (JsonSerializer<PipedInputStream>) mock(JsonSerializer.class, new ViolatedAssumptionAnswer());
    Object object0 = new Object();
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, virtualAnnotatedMember0, (Annotations) null, simpleType0, jsonSerializer0, (TypeSerializer) null, simpleType0, false, object0);
    Class<Annotation> class1 = Annotation.class;
    beanPropertyWriter0.getAnnotation(class1);
    assertTrue(beanPropertyWriter0.hasSerializer());
}",""
"public boolean hasSerializer() {
    return _serializer != null;
}","public void test2227() throws Throwable {
    PropertyName propertyName0 = PropertyName.NO_NAME;
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(propertyName0, annotationIntrospector0, false);
    AnnotationMap annotationMap0 = new AnnotationMap();
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, (AnnotatedMember) null, annotationMap0, (JavaType) null, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER, (TypeSerializer) null, (JavaType) null, false, (Object) null);
    Class<Annotation> class0 = Annotation.class;
    beanPropertyWriter0.findAnnotation(class0);
    assertTrue(beanPropertyWriter0.hasSerializer());
}",""
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test2328() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    Class<Annotation> class0 = Annotation.class;
    beanPropertyWriter0.getContextAnnotation(class0);
    assertFalse(beanPropertyWriter0.willSuppressNulls());
}",""
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test2430() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    JsonFormat.Value jsonFormat_Value0 = beanPropertyWriter0.findFormatOverrides(annotationIntrospector0);
    JsonFormat.Value jsonFormat_Value1 = beanPropertyWriter0.findFormatOverrides(annotationIntrospector0);
    assertFalse(beanPropertyWriter0.willSuppressNulls());
}",""
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test2532() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    JsonFormat.Value jsonFormat_Value0 = beanPropertyWriter0.findFormatOverrides((AnnotationIntrospector) null);
    assertFalse(beanPropertyWriter0.willSuppressNulls());
}",""
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test2634() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    Object object0 = new Object();
    beanPropertyWriter0.setInternalSetting(object0, object0);
    Object object1 = beanPropertyWriter0.getInternalSetting((Object) null);
    assertFalse(beanPropertyWriter0.willSuppressNulls());
}",""
"/*
    /**********************************************************
    /* Managing and accessing of opaque internal settings
    /* (used by extensions)
    /**********************************************************
     */
/**
 * Method for accessing value of specified internal setting.
 *
 * @return Value of the setting, if any; null if none.
 */
public Object getInternalSetting(Object key) {
    return (_internalSettings == null) ? null : _internalSettings.get(key);
}","public void test2635() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    Object object0 = new Object();
    beanPropertyWriter0.setInternalSetting(object0, object0);
    Object object1 = beanPropertyWriter0.getInternalSetting((Object) null);
    assertNull(object1);
}",""
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test2736() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    beanPropertyWriter0.getInternalSetting((Object) null);
    assertFalse(beanPropertyWriter0.willSuppressNulls());
}",""
"public Object setInternalSetting(Object key, Object value) {
    if (_internalSettings == null) {
        _internalSettings = new HashMap<Object, Object>();
    }
    return _internalSettings.put(key, value);
}","public void test2837() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    Object object0 = new Object();
    beanPropertyWriter0.setInternalSetting(object0, object0);
    Object object1 = beanPropertyWriter0.setInternalSetting((Object) null, (Object) null);
    assertNull(object1);
}","/**
 * Method for setting specific internal setting to given value
 *
 * @return Old value of the setting, if any (null if none)
 */"
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test2838() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    Object object0 = new Object();
    beanPropertyWriter0.setInternalSetting(object0, object0);
    Object object1 = beanPropertyWriter0.setInternalSetting((Object) null, (Object) null);
    assertFalse(beanPropertyWriter0.willSuppressNulls());
}",""
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test2939() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    JsonInclude.Include jsonInclude_Include0 = (JsonInclude.Include) BeanPropertyWriter.MARKER_FOR_EMPTY;
    beanPropertyWriter0.removeInternalSetting(jsonInclude_Include0);
    assertFalse(beanPropertyWriter0.willSuppressNulls());
}",""
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test3040() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    beanPropertyWriter0.setInternalSetting((Object) null, (Object) null);
    beanPropertyWriter0.removeInternalSetting((Object) null);
    assertFalse(beanPropertyWriter0.willSuppressNulls());
}",""
"public Object removeInternalSetting(Object key) {
    Object removed = null;
    if (_internalSettings != null) {
        removed = _internalSettings.remove(key);
        // to reduce memory usage, let's also drop the Map itself, if empty
        if (_internalSettings.size() == 0) {
            _internalSettings = null;
        }
    }
    return removed;
}","public void test3141() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    ThaiBuddhistEra thaiBuddhistEra0 = ThaiBuddhistEra.BEFORE_BE;
    beanPropertyWriter0.setInternalSetting(thaiBuddhistEra0, """");
    Integer integer0 = new Integer(2190);
    Object object0 = beanPropertyWriter0.removeInternalSetting(integer0);
    assertNull(object0);
}","/**
 * Method for removing entry for specified internal setting.
 *
 * @return Existing value of the setting, if any (null if none)
 */"
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test3142() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    ThaiBuddhistEra thaiBuddhistEra0 = ThaiBuddhistEra.BEFORE_BE;
    beanPropertyWriter0.setInternalSetting(thaiBuddhistEra0, """");
    Integer integer0 = new Integer(2190);
    Object object0 = beanPropertyWriter0.removeInternalSetting(integer0);
    assertFalse(beanPropertyWriter0.willSuppressNulls());
}",""
"public boolean hasSerializer() {
    return _serializer != null;
}","public void test3243() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    JsonSerializer<Object> jsonSerializer0 = SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
    beanPropertyWriter0.assignSerializer(jsonSerializer0);
    boolean boolean0 = beanPropertyWriter0.hasSerializer();
    assertTrue(boolean0);
}",""
"public boolean hasNullSerializer() {
    return _nullSerializer != null;
}","public void test3344() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    beanPropertyWriter0._nullSerializer = defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER;
    boolean boolean0 = beanPropertyWriter0.hasNullSerializer();
    assertTrue(boolean0);
}",""
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test3445() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    BeanPropertyWriter beanPropertyWriter1 = new BeanPropertyWriter(beanPropertyWriter0, serializedString0);
    PropertyName propertyName0 = PropertyName.NO_NAME;
    boolean boolean0 = beanPropertyWriter1.wouldConflictWithName(propertyName0);
    assertFalse(beanPropertyWriter1.willSuppressNulls());
}",""
"public boolean wouldConflictWithName(PropertyName name) {
    if (_wrapperName != null) {
        return _wrapperName.equals(name);
    }
    // Bit convoluted since our support for namespaces is spotty but:
    return name.hasSimpleName(_name.getValue()) && !name.hasNamespace();
}","public void test3446() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    BeanPropertyWriter beanPropertyWriter1 = new BeanPropertyWriter(beanPropertyWriter0, serializedString0);
    PropertyName propertyName0 = PropertyName.NO_NAME;
    boolean boolean0 = beanPropertyWriter1.wouldConflictWithName(propertyName0);
    assertFalse(boolean0);
}","/**
 * Method called to check to see if this property has a name that would
 * conflict with a given name.
 *
 * @since 2.6
 */"
"public boolean wouldConflictWithName(PropertyName name) {
    if (_wrapperName != null) {
        return _wrapperName.equals(name);
    }
    // Bit convoluted since our support for namespaces is spotty but:
    return name.hasSimpleName(_name.getValue()) && !name.hasNamespace();
}","public void test3547() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    PropertyName propertyName0 = PropertyName.USE_DEFAULT;
    BeanPropertyWriter beanPropertyWriter1 = new BeanPropertyWriter(beanPropertyWriter0, propertyName0);
    boolean boolean0 = beanPropertyWriter1.wouldConflictWithName(propertyName0);
    assertTrue(boolean0);
}","/**
 * Method called to check to see if this property has a name that would
 * conflict with a given name.
 *
 * @since 2.6
 */"
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test3548() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    PropertyName propertyName0 = PropertyName.USE_DEFAULT;
    BeanPropertyWriter beanPropertyWriter1 = new BeanPropertyWriter(beanPropertyWriter0, propertyName0);
    boolean boolean0 = beanPropertyWriter1.wouldConflictWithName(propertyName0);
    assertFalse(beanPropertyWriter1.willSuppressNulls());
}",""
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test3649() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    PropertyName propertyName0 = new PropertyName(""La"", ""La"");
    BeanPropertyWriter beanPropertyWriter1 = new BeanPropertyWriter(beanPropertyWriter0, propertyName0);
    boolean boolean0 = beanPropertyWriter1.wouldConflictWithName(propertyName0);
    assertFalse(beanPropertyWriter1.willSuppressNulls());
}",""
"public boolean wouldConflictWithName(PropertyName name) {
    if (_wrapperName != null) {
        return _wrapperName.equals(name);
    }
    // Bit convoluted since our support for namespaces is spotty but:
    return name.hasSimpleName(_name.getValue()) && !name.hasNamespace();
}","public void test3650() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    PropertyName propertyName0 = new PropertyName(""La"", ""La"");
    BeanPropertyWriter beanPropertyWriter1 = new BeanPropertyWriter(beanPropertyWriter0, propertyName0);
    boolean boolean0 = beanPropertyWriter1.wouldConflictWithName(propertyName0);
    assertFalse(boolean0);
}","/**
 * Method called to check to see if this property has a name that would
 * conflict with a given name.
 *
 * @since 2.6
 */"
"public Class<?> getRawSerializationType() {
    return (_cfgSerializationType == null) ? null : _cfgSerializationType.getRawClass();
}","public void test3751() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    PropertyName propertyName0 = PropertyName.NO_NAME;
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(propertyName0, annotationIntrospector0, true);
    AnnotationMap annotationMap0 = new AnnotationMap();
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<PipedInputStream> class0 = PipedInputStream.class;
    CollectionLikeType collectionLikeType0 = typeFactory0.constructRawCollectionLikeType(class0);
    AsWrapperTypeSerializer asWrapperTypeSerializer0 = new AsWrapperTypeSerializer((TypeIdResolver) null, beanPropertyWriter0);
    JsonInclude.Include jsonInclude_Include0 = (JsonInclude.Include) BeanPropertyWriter.MARKER_FOR_EMPTY;
    BeanPropertyWriter beanPropertyWriter1 = new BeanPropertyWriter(pOJOPropertyBuilder0, (AnnotatedMember) null, annotationMap0, collectionLikeType0, (JsonSerializer<?>) null, asWrapperTypeSerializer0, collectionLikeType0, false, jsonInclude_Include0);
    Class<?> class1 = beanPropertyWriter1.getRawSerializationType();
    assertNotNull(class1);
}",""
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test3752() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    PropertyName propertyName0 = PropertyName.NO_NAME;
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(propertyName0, annotationIntrospector0, true);
    AnnotationMap annotationMap0 = new AnnotationMap();
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<PipedInputStream> class0 = PipedInputStream.class;
    CollectionLikeType collectionLikeType0 = typeFactory0.constructRawCollectionLikeType(class0);
    AsWrapperTypeSerializer asWrapperTypeSerializer0 = new AsWrapperTypeSerializer((TypeIdResolver) null, beanPropertyWriter0);
    JsonInclude.Include jsonInclude_Include0 = (JsonInclude.Include) BeanPropertyWriter.MARKER_FOR_EMPTY;
    BeanPropertyWriter beanPropertyWriter1 = new BeanPropertyWriter(pOJOPropertyBuilder0, (AnnotatedMember) null, annotationMap0, collectionLikeType0, (JsonSerializer<?>) null, asWrapperTypeSerializer0, collectionLikeType0, false, jsonInclude_Include0);
    Class<?> class1 = beanPropertyWriter1.getRawSerializationType();
    assertFalse(beanPropertyWriter0.willSuppressNulls());
}",""
"public Class<?> getPropertyType() {
    return (_accessorMethod != null) ? _accessorMethod.getReturnType() : _field.getType();
}","public void test3853() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    // Undeclared exception!
    try {
        beanPropertyWriter0.getPropertyType();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.ser.BeanPropertyWriter"", e);
    }
}",""
"@SuppressWarnings(""resource"")
public String writeValueAsString(Object value) throws JsonProcessingException {
    // alas, we have to pull the recycler directly here...
    SegmentedStringWriter sw = new SegmentedStringWriter(_jsonFactory._getBufferRecycler());
    try {
        _configAndWriteValue(_jsonFactory.createGenerator(sw), value);
    } catch (JsonProcessingException e) {
        // to support [JACKSON-758]
        throw e;
    } catch (IOException e) {
        // shouldn't really happen, but is declared as possibility so:
        throw JsonMappingException.fromUnexpectedIOE(e);
    }
    return sw.getAndClear();
}","public void test3954() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.NON_DEFAULT;
    ObjectMapper objectMapper1 = objectMapper0.setSerializationInclusion(jsonInclude_Include0);
    SimpleModule simpleModule0 = new SimpleModule(""Hk6-ZPL"");
    String string0 = objectMapper1.writeValueAsString(simpleModule0);
    assertEquals(""{\""moduleName\"":\""Hk6-ZPL\""}"", string0);
}","/**
 *  Method that can be used to serialize any Java value as
 *  a String. Functionally equivalent to calling
 *  {@link #writeValue(Writer,Object)} with {@link java.io.StringWriter}
 *  and constructing String, but more efficient.
 * <p>
 *  Note: prior to version 2.1, throws clause included {@link IOException}; 2.1 removed it.
 */"
"@SuppressWarnings(""resource"")
public String writeValueAsString(Object value) throws JsonProcessingException {
    // alas, we have to pull the recycler directly here...
    SegmentedStringWriter sw = new SegmentedStringWriter(_jsonFactory._getBufferRecycler());
    try {
        _configAndWriteValue(_jsonFactory.createGenerator(sw), value);
    } catch (JsonProcessingException e) {
        // to support [JACKSON-758]
        throw e;
    } catch (IOException e) {
        // shouldn't really happen, but is declared as possibility so:
        throw JsonMappingException.fromUnexpectedIOE(e);
    }
    return sw.getAndClear();
}","public void test4055() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    try {
        objectMapper0.writeValueAsString(objectMapper0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Infinite recursion (StackOverflowError) (through reference chain: com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""]->com.fasterxml.jackson.databind.MappingJsonFactory[\""codec\""]->com.fasterxml.jackson.databind.ObjectMapper[\""factory\""])
        //
        verifyException(""com.fasterxml.jackson.databind.ser.std.BeanSerializerBase"", e);
    }
}","/**
 *  Method that can be used to serialize any Java value as
 *  a String. Functionally equivalent to calling
 *  {@link #writeValue(Writer,Object)} with {@link java.io.StringWriter}
 *  and constructing String, but more efficient.
 * <p>
 *  Note: prior to version 2.1, throws clause included {@link IOException}; 2.1 removed it.
 */"
"@SuppressWarnings(""resource"")
public String writeValueAsString(Object value) throws JsonProcessingException {
    // alas, we have to pull the recycler directly here...
    SegmentedStringWriter sw = new SegmentedStringWriter(_jsonFactory._getBufferRecycler());
    try {
        _configAndWriteValue(_jsonFactory.createGenerator(sw), value);
    } catch (JsonProcessingException e) {
        // to support [JACKSON-758]
        throw e;
    } catch (IOException e) {
        // shouldn't really happen, but is declared as possibility so:
        throw JsonMappingException.fromUnexpectedIOE(e);
    }
    return sw.getAndClear();
}","public void test4156() throws Throwable {
    JsonFactory jsonFactory0 = new JsonFactory();
    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.NON_EMPTY;
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, defaultSerializerProvider_Impl0, defaultDeserializationContext_Impl0);
    ObjectMapper objectMapper1 = objectMapper0.setSerializationInclusion(jsonInclude_Include0);
    String string0 = objectMapper1.writeValueAsString(beanDeserializerFactory0);
    assertEquals(""{}"", string0);
}","/**
 *  Method that can be used to serialize any Java value as
 *  a String. Functionally equivalent to calling
 *  {@link #writeValue(Writer,Object)} with {@link java.io.StringWriter}
 *  and constructing String, but more efficient.
 * <p>
 *  Note: prior to version 2.1, throws clause included {@link IOException}; 2.1 removed it.
 */"
"@SuppressWarnings(""resource"")
public String writeValueAsString(Object value) throws JsonProcessingException {
    // alas, we have to pull the recycler directly here...
    SegmentedStringWriter sw = new SegmentedStringWriter(_jsonFactory._getBufferRecycler());
    try {
        _configAndWriteValue(_jsonFactory.createGenerator(sw), value);
    } catch (JsonProcessingException e) {
        // to support [JACKSON-758]
        throw e;
    } catch (IOException e) {
        // shouldn't really happen, but is declared as possibility so:
        throw JsonMappingException.fromUnexpectedIOE(e);
    }
    return sw.getAndClear();
}","public void test4257() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.NON_EMPTY;
    ObjectMapper objectMapper1 = objectMapper0.setSerializationInclusion(jsonInclude_Include0);
    ObjectIdGenerators.UUIDGenerator objectIdGenerators_UUIDGenerator0 = new ObjectIdGenerators.UUIDGenerator();
    String string0 = objectMapper1.writeValueAsString(objectIdGenerators_UUIDGenerator0);
    assertEquals(""{\""scope\"":\""java.lang.Object\""}"", string0);
}","/**
 *  Method that can be used to serialize any Java value as
 *  a String. Functionally equivalent to calling
 *  {@link #writeValue(Writer,Object)} with {@link java.io.StringWriter}
 *  and constructing String, but more efficient.
 * <p>
 *  Note: prior to version 2.1, throws clause included {@link IOException}; 2.1 removed it.
 */"
"@SuppressWarnings(""resource"")
public String writeValueAsString(Object value) throws JsonProcessingException {
    // alas, we have to pull the recycler directly here...
    SegmentedStringWriter sw = new SegmentedStringWriter(_jsonFactory._getBufferRecycler());
    try {
        _configAndWriteValue(_jsonFactory.createGenerator(sw), value);
    } catch (JsonProcessingException e) {
        // to support [JACKSON-758]
        throw e;
    } catch (IOException e) {
        // shouldn't really happen, but is declared as possibility so:
        throw JsonMappingException.fromUnexpectedIOE(e);
    }
    return sw.getAndClear();
}","public void test4358() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.NON_DEFAULT;
    objectMapper0.setSerializationInclusion(jsonInclude_Include0);
    DOMSerializer dOMSerializer0 = new DOMSerializer();
    String string0 = objectMapper0.writeValueAsString(dOMSerializer0);
    assertEquals(""{}"", string0);
}","/**
 *  Method that can be used to serialize any Java value as
 *  a String. Functionally equivalent to calling
 *  {@link #writeValue(Writer,Object)} with {@link java.io.StringWriter}
 *  and constructing String, but more efficient.
 * <p>
 *  Note: prior to version 2.1, throws clause included {@link IOException}; 2.1 removed it.
 */"
"@SuppressWarnings(""resource"")
public String writeValueAsString(Object value) throws JsonProcessingException {
    // alas, we have to pull the recycler directly here...
    SegmentedStringWriter sw = new SegmentedStringWriter(_jsonFactory._getBufferRecycler());
    try {
        _configAndWriteValue(_jsonFactory.createGenerator(sw), value);
    } catch (JsonProcessingException e) {
        // to support [JACKSON-758]
        throw e;
    } catch (IOException e) {
        // shouldn't really happen, but is declared as possibility so:
        throw JsonMappingException.fromUnexpectedIOE(e);
    }
    return sw.getAndClear();
}","public void test4459() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    CoreXMLSerializers.XMLGregorianCalendarSerializer coreXMLSerializers_XMLGregorianCalendarSerializer0 = new CoreXMLSerializers.XMLGregorianCalendarSerializer();
    ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.OBJECT_AND_NON_CONCRETE;
    objectMapper0.enableDefaultTypingAsProperty(objectMapper_DefaultTyping0, ""IT'IT'"");
    String string0 = objectMapper0.writeValueAsString(coreXMLSerializers_XMLGregorianCalendarSerializer0);
    assertEquals(""{\""delegatee\"":{\""IT'IT'\"":\""com.fasterxml.jackson.databind.ser.std.CalendarSerializer\"",\""unwrappingSerializer\"":false,\""delegatee\"":null},\""unwrappingSerializer\"":false}"", string0);
}","/**
 *  Method that can be used to serialize any Java value as
 *  a String. Functionally equivalent to calling
 *  {@link #writeValue(Writer,Object)} with {@link java.io.StringWriter}
 *  and constructing String, but more efficient.
 * <p>
 *  Note: prior to version 2.1, throws clause included {@link IOException}; 2.1 removed it.
 */"
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test4560() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    JsonFactory jsonFactory0 = new JsonFactory();
    MockFileWriter mockFileWriter0 = new MockFileWriter(""JSON"");
    JsonGenerator jsonGenerator0 = jsonFactory0.createGenerator((Writer) mockFileWriter0);
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    beanPropertyWriter0.serializeAsOmittedField(defaultSerializerProvider_Impl0, jsonGenerator0, defaultSerializerProvider_Impl0);
    assertFalse(beanPropertyWriter0.willSuppressNulls());
}",""
"@Override
public void serializeAsElement(Object bean, JsonGenerator gen, SerializerProvider prov) throws Exception {
    // inlined 'get()'
    final Object value = (_accessorMethod == null) ? _field.get(bean) : _accessorMethod.invoke(bean);
    if (value == null) {
        // nulls need specialized handling
        if (_nullSerializer != null) {
            _nullSerializer.serialize(null, gen, prov);
        } else {
            // can NOT suppress entries in tabular output
            gen.writeNull();
        }
        return;
    }
    // otherwise find serializer to use
    JsonSerializer<Object> ser = _serializer;
    if (ser == null) {
        Class<?> cls = value.getClass();
        PropertySerializerMap map = _dynamicSerializers;
        ser = map.serializerFor(cls);
        if (ser == null) {
            ser = _findAndAddDynamic(map, cls, prov);
        }
    }
    // and then see if we must suppress certain values (default, empty)
    if (_suppressableValue != null) {
        if (MARKER_FOR_EMPTY == _suppressableValue) {
            if (ser.isEmpty(prov, value)) {
                // can NOT suppress entries in tabular output
                serializeAsPlaceholder(bean, gen, prov);
                return;
            }
        } else if (_suppressableValue.equals(value)) {
            // can NOT suppress entries in tabular output
            serializeAsPlaceholder(bean, gen, prov);
            return;
        }
    }
    // For non-nulls: simple check for direct cycles
    if (value == bean) {
        if (_handleSelfReference(bean, gen, prov, ser)) {
            return;
        }
    }
    if (_typeSerializer == null) {
        ser.serialize(value, gen, prov);
    } else {
        ser.serializeWithType(value, gen, prov, _typeSerializer);
    }
}","public void test4661() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    try {
        beanPropertyWriter0.serializeAsElement(defaultSerializerProvider_Impl0, (JsonGenerator) null, defaultSerializerProvider_Impl0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.ser.BeanPropertyWriter"", e);
    }
}","/**
 * Alternative to {@link #serializeAsField} that is used when a POJO
 * is serialized as JSON Array; the difference is that no field names
 * are written.
 *
 * @since 2.3
 */"
"@Override
public void serializeAsPlaceholder(Object bean, JsonGenerator gen, SerializerProvider prov) throws Exception {
    if (_nullSerializer != null) {
        _nullSerializer.serialize(null, gen, prov);
    } else {
        gen.writeNull();
    }
}","public void test4762() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    try {
        beanPropertyWriter0.serializeAsPlaceholder((Object) null, (JsonGenerator) null, (SerializerProvider) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.ser.BeanPropertyWriter"", e);
    }
}","/**
 * Method called to serialize a placeholder used in tabular output when
 * real value is not to be included (is filtered out), but when we need
 * an entry so that field indexes will not be off. Typically this should
 * output null or empty String, depending on datatype.
 *
 * @since 2.1
 */"
"@Override
public void serializeAsPlaceholder(Object bean, JsonGenerator gen, SerializerProvider prov) throws Exception {
    if (_nullSerializer != null) {
        _nullSerializer.serialize(null, gen, prov);
    } else {
        gen.writeNull();
    }
}","public void test4863() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    Class<AnnotatedMethod> class0 = AnnotatedMethod.class;
    SimpleType simpleType0 = SimpleType.construct(class0);
    BeanSerializer beanSerializer0 = BeanSerializer.createDummy(simpleType0);
    beanPropertyWriter0._nullSerializer = (JsonSerializer<Object>) beanSerializer0;
    try {
        beanPropertyWriter0.serializeAsPlaceholder((Object) null, (JsonGenerator) null, (SerializerProvider) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.ser.BeanSerializer"", e);
    }
}","/**
 * Method called to serialize a placeholder used in tabular output when
 * real value is not to be included (is filtered out), but when we need
 * an entry so that field indexes will not be off. Typically this should
 * output null or empty String, depending on datatype.
 *
 * @since 2.1
 */"
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test4964() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    beanPropertyWriter0.depositSchemaProperty((JsonObjectFormatVisitor) null);
    assertFalse(beanPropertyWriter0.willSuppressNulls());
}",""
"public boolean hasSerializer() {
    return _serializer != null;
}","public void test5065() throws Throwable {
    PropertyName propertyName0 = PropertyName.USE_DEFAULT;
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(propertyName0, annotationIntrospector0, false);
    AnnotationMap annotationMap0 = new AnnotationMap();
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, (AnnotatedMember) null, annotationMap0, (JavaType) null, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER, (TypeSerializer) null, (JavaType) null, false, (Object) null);
    JsonObjectFormatVisitor.Base jsonObjectFormatVisitor_Base0 = new JsonObjectFormatVisitor.Base();
    beanPropertyWriter0.depositSchemaProperty((JsonObjectFormatVisitor) jsonObjectFormatVisitor_Base0);
    assertTrue(beanPropertyWriter0.hasSerializer());
}",""
"/*
    /**********************************************************
    /* Public API, straight value access
    /**********************************************************
     */
/**
 * Method to use for accessing String values.
 * Does <b>NOT</b> do any conversions for non-String value nodes;
 * for non-String values (ones for which {@link #isTextual} returns
 * false) null will be returned.
 * For String values, null is never returned (but empty Strings may be)
 *
 * @return Textual value this node contains, iff it is a textual
 *   JSON node (comes from JSON String value entry)
 */
public String textValue() {
    return null;
}","public void test5166() throws Throwable {
    PropertyName propertyName0 = PropertyName.USE_DEFAULT;
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(propertyName0, annotationIntrospector0, true);
    AnnotationMap annotationMap0 = new AnnotationMap();
    Class<JsonSerializer> class0 = JsonSerializer.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    JsonSerializer<NamedType> jsonSerializer0 = (JsonSerializer<NamedType>) mock(JsonSerializer.class, new ViolatedAssumptionAnswer());
    doReturn((String) null).when(jsonSerializer0).toString();
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, (AnnotatedMember) null, annotationMap0, simpleType0, jsonSerializer0, (TypeSerializer) null, simpleType0, true, annotationIntrospector0);
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
    ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0);
    beanPropertyWriter0.depositSchemaProperty(objectNode0, (SerializerProvider) defaultSerializerProvider_Impl0);
    assertNull(objectNode0.textValue());
}",""
"// // // Legacy support for JsonFormatVisitable
/**
 * Attempt to add the output of the given {@link BeanPropertyWriter} in the given {@link ObjectNode}.
 * Otherwise, add the default schema {@link JsonNode} in place of the writer's output
 *
 * @param propertiesNode Node which the given property would exist within
 * @param provider Provider that can be used for accessing dynamic aspects of serialization
 *  processing
 */
@Override
@Deprecated
public void depositSchemaProperty(ObjectNode propertiesNode, SerializerProvider provider) throws JsonMappingException {
    JavaType propType = getSerializationType();
    // 03-Dec-2010, tatu: SchemaAware REALLY should use JavaType, but alas it doesn't...
    Type hint = (propType == null) ? getGenericPropertyType() : propType.getRawClass();
    JsonNode schemaNode;
    // Maybe it already has annotated/statically configured serializer?
    JsonSerializer<Object> ser = getSerializer();
    if (ser == null) {
        // nope
        ser = provider.findValueSerializer(getType(), this);
    }
    boolean isOptional = !isRequired();
    if (ser instanceof SchemaAware) {
        schemaNode = ((SchemaAware) ser).getSchema(provider, hint, isOptional);
    } else {
        schemaNode = com.fasterxml.jackson.databind.jsonschema.JsonSchema.getDefaultSchemaNode();
    }
    _depositSchemaProperty(propertiesNode, schemaNode);
}","public void test5267() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    // Undeclared exception!
    try {
        beanPropertyWriter0.depositSchemaProperty((ObjectNode) null, (SerializerProvider) defaultSerializerProvider_Impl0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.SerializerProvider"", e);
    }
}",""
"public final Object get(Object bean) throws Exception {
    return (_accessorMethod == null) ? _field.get(bean) : _accessorMethod.invoke(bean);
}","public void test5368() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    ObjectMapper objectMapper0 = new ObjectMapper();
    POJONode pOJONode0 = new POJONode(objectMapper0);
    try {
        beanPropertyWriter0.get(pOJONode0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.ser.BeanPropertyWriter"", e);
    }
}","/**
 *  Method that can be used to access value of the property this
 *  Object describes, from given bean instance.
 * <p>
 *  Note: method is final as it should not need to be overridden -- rather,
 *  calling method(s) ({@link #serializeAsField}) should be overridden
 *  to change the behavior
 */"
"@Override
public String toString() {
    StringBuilder sb = new StringBuilder(40);
    sb.append(""property '"").append(getName()).append(""' ("");
    if (_accessorMethod != null) {
        sb.append(""via method "").append(_accessorMethod.getDeclaringClass().getName()).append(""#"").append(_accessorMethod.getName());
    } else if (_field != null) {
        sb.append(""field \"""").append(_field.getDeclaringClass().getName()).append(""#"").append(_field.getName());
    } else {
        sb.append(""virtual"");
    }
    if (_serializer == null) {
        sb.append("", no static serializer"");
    } else {
        sb.append("", static serializer of type "" + _serializer.getClass().getName());
    }
    sb.append(')');
    return sb.toString();
}","public void test5469() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    PropertyName propertyName0 = PropertyName.USE_DEFAULT;
    BeanPropertyWriter beanPropertyWriter1 = new BeanPropertyWriter(beanPropertyWriter0, propertyName0);
    String string0 = beanPropertyWriter1.toString();
    assertEquals(""property '' (virtual, no static serializer)"", string0);
}",""
"public boolean willSuppressNulls() {
    return _suppressNulls;
}","public void test5470() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    PropertyName propertyName0 = PropertyName.USE_DEFAULT;
    BeanPropertyWriter beanPropertyWriter1 = new BeanPropertyWriter(beanPropertyWriter0, propertyName0);
    String string0 = beanPropertyWriter1.toString();
    assertFalse(beanPropertyWriter1.willSuppressNulls());
}",""
"public boolean hasSerializer() {
    return _serializer != null;
}","public void test5571() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    PropertyName propertyName0 = PropertyName.USE_DEFAULT;
    BeanPropertyWriter beanPropertyWriter1 = new BeanPropertyWriter(beanPropertyWriter0, propertyName0);
    JsonSerializer<Object> jsonSerializer0 = SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER;
    beanPropertyWriter1.assignSerializer(jsonSerializer0);
    beanPropertyWriter1.toString();
    assertTrue(beanPropertyWriter1.hasSerializer());
}",""
