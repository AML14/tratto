com.fasterxml.jackson.databind.ser.BeanPropertyWriter,@Test(timeout = 4000)
public void test023() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    boolean boolean0 = beanPropertyWriter0.isVirtual();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_26b/src/main/java/com/fasterxml/jackson/databind/introspect/ConcreteBeanPropertyBase.java
com.fasterxml.jackson.databind.ser.BeanPropertyWriter,@Test(timeout = 4000)
public void test068() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    ObjectMapper objectMapper0 = new ObjectMapper();
    objectMapper0.writeValueAsString(beanPropertyWriter0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.ser.BeanPropertyWriter,@Test(timeout = 4000)
public void test1114() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    PropertyAccessor propertyAccessor0 = PropertyAccessor.FIELD;
    JsonAutoDetect.Visibility jsonAutoDetect_Visibility0 = JsonAutoDetect.Visibility.NON_PRIVATE;
    objectMapper0.setVisibility(propertyAccessor0, jsonAutoDetect_Visibility0);
    CoreXMLSerializers.XMLGregorianCalendarSerializer coreXMLSerializers_XMLGregorianCalendarSerializer0 = new CoreXMLSerializers.XMLGregorianCalendarSerializer();
    String string0 = objectMapper0.writeValueAsString(coreXMLSerializers_XMLGregorianCalendarSerializer0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.ser.BeanPropertyWriter,@Test(timeout = 4000)
public void test2429() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    JsonFormat.Value jsonFormat_Value0 = beanPropertyWriter0.findFormatOverrides(annotationIntrospector0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_26b/src/main/java/com/fasterxml/jackson/databind/introspect/ConcreteBeanPropertyBase.java
com.fasterxml.jackson.databind.ser.BeanPropertyWriter,@Test(timeout = 4000)
public void test2431() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    JsonFormat.Value jsonFormat_Value0 = beanPropertyWriter0.findFormatOverrides(annotationIntrospector0);
    JsonFormat.Value jsonFormat_Value1 = beanPropertyWriter0.findFormatOverrides(annotationIntrospector0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_26b/src/main/java/com/fasterxml/jackson/databind/introspect/ConcreteBeanPropertyBase.java
com.fasterxml.jackson.databind.ser.BeanPropertyWriter,@Test(timeout = 4000)
public void test2533() throws Throwable {
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter();
    JsonFormat.Value jsonFormat_Value0 = beanPropertyWriter0.findFormatOverrides((AnnotationIntrospector) null);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_26b/src/main/java/com/fasterxml/jackson/databind/introspect/ConcreteBeanPropertyBase.java
com.fasterxml.jackson.databind.ser.BeanPropertyWriter,@Test(timeout = 4000)
public void test3954() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.NON_DEFAULT;
    ObjectMapper objectMapper1 = objectMapper0.setSerializationInclusion(jsonInclude_Include0);
    SimpleModule simpleModule0 = new SimpleModule(""Hk6-ZPL"");
    String string0 = objectMapper1.writeValueAsString(simpleModule0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.ser.BeanPropertyWriter,@Test(timeout = 4000)
public void test4055() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    objectMapper0.writeValueAsString(objectMapper0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.ser.BeanPropertyWriter,@Test(timeout = 4000)
public void test4156() throws Throwable {
    JsonFactory jsonFactory0 = new JsonFactory();
    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.NON_EMPTY;
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, defaultSerializerProvider_Impl0, defaultDeserializationContext_Impl0);
    ObjectMapper objectMapper1 = objectMapper0.setSerializationInclusion(jsonInclude_Include0);
    String string0 = objectMapper1.writeValueAsString(beanDeserializerFactory0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.ser.BeanPropertyWriter,@Test(timeout = 4000)
public void test4257() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.NON_EMPTY;
    ObjectMapper objectMapper1 = objectMapper0.setSerializationInclusion(jsonInclude_Include0);
    ObjectIdGenerators.UUIDGenerator objectIdGenerators_UUIDGenerator0 = new ObjectIdGenerators.UUIDGenerator();
    String string0 = objectMapper1.writeValueAsString(objectIdGenerators_UUIDGenerator0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.ser.BeanPropertyWriter,@Test(timeout = 4000)
public void test4358() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.NON_DEFAULT;
    objectMapper0.setSerializationInclusion(jsonInclude_Include0);
    DOMSerializer dOMSerializer0 = new DOMSerializer();
    String string0 = objectMapper0.writeValueAsString(dOMSerializer0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.ser.BeanPropertyWriter,@Test(timeout = 4000)
public void test4459() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    CoreXMLSerializers.XMLGregorianCalendarSerializer coreXMLSerializers_XMLGregorianCalendarSerializer0 = new CoreXMLSerializers.XMLGregorianCalendarSerializer();
    ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.OBJECT_AND_NON_CONCRETE;
    objectMapper0.enableDefaultTypingAsProperty(objectMapper_DefaultTyping0, ""IT'IT'"");
    String string0 = objectMapper0.writeValueAsString(coreXMLSerializers_XMLGregorianCalendarSerializer0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.ser.BeanPropertyWriter,@Test(timeout = 4000)
public void test5166() throws Throwable {
    PropertyName propertyName0 = PropertyName.USE_DEFAULT;
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(propertyName0, annotationIntrospector0, true);
    AnnotationMap annotationMap0 = new AnnotationMap();
    Class<JsonSerializer> class0 = JsonSerializer.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    JsonSerializer<NamedType> jsonSerializer0 = (JsonSerializer<NamedType>) mock(JsonSerializer.class, new ViolatedAssumptionAnswer());
    doReturn((String) null).when(jsonSerializer0).toString();
    BeanPropertyWriter beanPropertyWriter0 = new BeanPropertyWriter(pOJOPropertyBuilder0, (AnnotatedMember) null, annotationMap0, simpleType0, jsonSerializer0, (TypeSerializer) null, simpleType0, true, annotationIntrospector0);
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
    ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0);
    beanPropertyWriter0.depositSchemaProperty(objectNode0, (SerializerProvider) defaultSerializerProvider_Impl0);
    objectNode0.textValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
