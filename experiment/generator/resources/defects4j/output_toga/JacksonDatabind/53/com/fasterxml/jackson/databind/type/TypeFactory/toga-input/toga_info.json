{
  "test4646" : {
    "methodSignature" : "public Class<?> findClass(String className) throws ClassNotFoundException",
    "methodName" : "findClass",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4646() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    typeFactory0.findClass(\"float\");\n}",
    "testName" : "test4646"
  },
  "test6868" : {
    "methodSignature" : "public JavaType moreSpecificType(JavaType type1, JavaType type2)",
    "methodName" : "moreSpecificType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6868() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_LONG;\n    typeFactory0.moreSpecificType(simpleType0, (JavaType) null);\n}",
    "testName" : "test6868"
  },
  "test5656" : {
    "methodSignature" : "public Class<?> findClass(String className) throws ClassNotFoundException",
    "methodName" : "findClass",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5656() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    typeFactory0.findClass(\"Tnh>^XldB5.V~+;f!_P\");\n}",
    "testName" : "test5656"
  },
  "test2424" : {
    "methodSignature" : "public JavaType moreSpecificType(JavaType type1, JavaType type2)",
    "methodName" : "moreSpecificType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<EnumSet> class0 = EnumSet.class;\n    CollectionType collectionType0 = typeFactory0.constructRawCollectionType(class0);\n    typeFactory0.moreSpecificType(collectionType0, collectionType0);\n}",
    "testName" : "test2424"
  },
  "test7878" : {
    "methodSignature" : "public JavaType constructType(Type type, JavaType contextType)",
    "methodName" : "constructType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7878() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    JavaType javaType0 = null;\n    typeFactory0.constructType((Type) null, (JavaType) null);\n}",
    "testName" : "test7878"
  },
  "test1010" : {
    "methodSignature" : "public Class<?> findClass(String className) throws ClassNotFoundException",
    "methodName" : "findClass",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    typeFactory0.constructFromCanonical(\"com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer\");\n    typeFactory0.findClass(\"wE;eG\");\n}",
    "testName" : "test1010"
  },
  "test4444" : {
    "methodSignature" : "public JavaType constructGeneralizedType(JavaType baseType, Class<?> superClass)",
    "methodName" : "constructGeneralizedType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4444() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<RuntimeException> class0 = RuntimeException.class;\n    JavaType javaType0 = typeFactory0._unknownType();\n    typeFactory0.constructGeneralizedType(javaType0, class0);\n}",
    "testName" : "test4444"
  },
  "test3232" : {
    "methodSignature" : "public JavaType uncheckedSimpleType(Class<?> cls)",
    "methodName" : "uncheckedSimpleType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<SerializationFeature> class0 = SerializationFeature.class;\n    typeFactory0.uncheckedSimpleType(class0);\n}",
    "testName" : "test3232"
  },
  "test6666" : {
    "methodSignature" : "public JavaType moreSpecificType(JavaType type1, JavaType type2)",
    "methodName" : "moreSpecificType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6666() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<CollectionLikeType> class0 = CollectionLikeType.class;\n    TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_COMPARABLE;\n    JavaType[] javaTypeArray0 = new JavaType[0];\n    ReferenceType referenceType0 = ReferenceType.construct((Class<?>) class0, typeBindings0, (JavaType) simpleType0, javaTypeArray0, (JavaType) simpleType0);\n    typeFactory0.moreSpecificType(referenceType0, simpleType0);\n}",
    "testName" : "test6666"
  },
  "test5454" : {
    "methodSignature" : "public JavaType constructGeneralizedType(JavaType baseType, Class<?> superClass)",
    "methodName" : "constructGeneralizedType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5454() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<ObjectMapper.DefaultTyping> class0 = ObjectMapper.DefaultTyping.class;\n    Class<MapLikeType> class1 = MapLikeType.class;\n    Class<SerializationFeature> class2 = SerializationFeature.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructMapLikeType(class0, class1, class2);\n    FileSystemHandling fileSystemHandling0 = new FileSystemHandling();\n    typeFactory0.moreSpecificType(mapLikeType0, mapLikeType0);\n    Class<HashSet> class3 = HashSet.class;\n    typeFactory0.constructCollectionType(class3, class2);\n    Class<Object> class4 = Object.class;\n    typeFactory0.constructGeneralizedType(mapLikeType0, class4);\n}",
    "testName" : "test5454"
  },
  "test033" : {
    "methodSignature" : "public TypeFactory withModifier(TypeModifier mod)",
    "methodName" : "withModifier",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    TypeModifier typeModifier0 = mock(TypeModifier.class, new ViolatedAssumptionAnswer());\n    typeFactory0.withModifier(typeModifier0);\n}",
    "testName" : "test033"
  },
  "test1616" : {
    "methodSignature" : "public static JavaType unknownType()",
    "methodName" : "unknownType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    TypeFactory.defaultInstance();\n    TypeFactory.unknownType();\n}",
    "testName" : "test1616"
  },
  "test2828" : {
    "methodSignature" : "public Class<?> findClass(String className) throws ClassNotFoundException",
    "methodName" : "findClass",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_ENUM;\n    typeFactory0.constructType((Type) simpleType0, (JavaType) simpleType0);\n    typeFactory0.findClass(\"[value=%sdcontent=%s]\");\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public MapType constructRawMapType(Class<? extends Map> mapClass)",
    "methodName" : "constructRawMapType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<Properties> class0 = Properties.class;\n    typeFactory0.constructRawMapType(class0);\n}",
    "testName" : "test1414"
  },
  "test5858" : {
    "methodSignature" : "public JavaType constructGeneralizedType(JavaType baseType, Class<?> superClass)",
    "methodName" : "constructGeneralizedType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5858() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    TypeParser typeParser0 = new TypeParser(typeFactory0);\n    Class<ArrayList> class0 = ArrayList.class;\n    CollectionType collectionType0 = typeFactory0.constructRawCollectionType(class0);\n    TypeParser typeParser1 = new TypeParser(typeFactory0);\n    typeFactory0.constructType((Type) collectionType0, (TypeBindings) null);\n    Class<HashSet> class1 = HashSet.class;\n    typeFactory0.constructCollectionType(class0, class0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl1 = new DefaultSerializerProvider.Impl(defaultSerializerProvider_Impl0);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, defaultSerializerProvider_Impl1, defaultDeserializationContext_Impl0);\n    ObjectMapper objectMapper1 = objectMapper0.setSerializerProvider((DefaultSerializerProvider) null);\n    ObjectReader objectReader0 = objectMapper1.readerFor(class0);\n    TypeFactory typeFactory1 = objectReader0.getTypeFactory();\n    CollectionType collectionType1 = typeFactory1.constructCollectionType(class1, class0);\n    Class<Object> class2 = Object.class;\n    typeFactory0.constructGeneralizedType(collectionType1, class2);\n}",
    "testName" : "test5858"
  },
  "test2626" : {
    "methodSignature" : "public JavaType moreSpecificType(JavaType type1, JavaType type2)",
    "methodName" : "moreSpecificType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ArrayType arrayType0 = typeFactory0.constructArrayType((JavaType) null);\n    typeFactory0.moreSpecificType(arrayType0, arrayType0);\n}",
    "testName" : "test2626"
  },
  "test6060" : {
    "methodSignature" : "public Class<?> findClass(String className) throws ClassNotFoundException",
    "methodName" : "findClass",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6060() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n    TypeFactory typeFactory1 = typeFactory0.withClassLoader(classLoader0);\n    typeFactory1.findClass(\"s`[\");\n}",
    "testName" : "test6060"
  },
  "test8080" : {
    "methodSignature" : "public static TypeBindings create(Class<?> erasedType, JavaType typeArg1, JavaType typeArg2)",
    "methodName" : "create",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8080() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_ENUM;\n    Class<MapperFeature> class0 = MapperFeature.class;\n    JavaType javaType0 = typeFactory0.constructSpecializedType(simpleType0, class0);\n    TypeBindings.create(class0, javaType0, javaType0);\n}",
    "testName" : "test8080"
  },
  "test4242" : {
    "methodSignature" : "public TypeFactory withModifier(TypeModifier mod)",
    "methodName" : "withModifier",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4242() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    typeFactory0.withModifier((TypeModifier) null);\n}",
    "testName" : "test4242"
  },
  "test3030" : {
    "methodSignature" : "public JavaType uncheckedSimpleType(Class<?> cls)",
    "methodName" : "uncheckedSimpleType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<ArrayType> class0 = ArrayType.class;\n    TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;\n    typeFactory0.findTypeParameters(class0, class0, typeBindings0);\n    Class<MapperFeature> class1 = MapperFeature.class;\n    typeFactory0.uncheckedSimpleType(class1);\n}",
    "testName" : "test3030"
  },
  "test7474" : {
    "methodSignature" : "public Class<?> findClass(String className) throws ClassNotFoundException",
    "methodName" : "findClass",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7474() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    typeFactory0.findClass(\"long\");\n}",
    "testName" : "test7474"
  },
  "test6262" : {
    "methodSignature" : "public Class<?> findClass(String className) throws ClassNotFoundException",
    "methodName" : "findClass",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6262() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    typeFactory0.findClass(\"byte\");\n}",
    "testName" : "test6262"
  },
  "test7272" : {
    "methodSignature" : "public Class<?> findClass(String className) throws ClassNotFoundException",
    "methodName" : "findClass",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7272() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    typeFactory0.findClass(\"double\");\n}",
    "testName" : "test7272"
  },
  "test022" : {
    "methodSignature" : "protected JavaType _fromParamType(ClassStack context, ParameterizedType ptype, TypeBindings parentBindings)",
    "methodName" : "_fromParamType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<Properties> class0 = Properties.class;\n    ClassStack classStack0 = new ClassStack(class0);\n    ParameterizedType parameterizedType0 = mock(ParameterizedType.class, new ViolatedAssumptionAnswer());\n    doReturn((Type[]) null).when(parameterizedType0).getActualTypeArguments();\n    doReturn((Type) null).when(parameterizedType0).getRawType();\n    TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;\n    typeFactory0._fromParamType(classStack0, parameterizedType0, typeBindings0);\n}",
    "testName" : "test022"
  },
  "test066" : {
    "methodSignature" : "public JavaType constructType(Type type, Class<?> contextClass)",
    "methodName" : "constructType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Class<CollectionLikeType> class0 = CollectionLikeType.class;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    typeFactory0.constructType((Type) class0, (Class<?>) class0);\n}",
    "testName" : "test066"
  },
  "test1818" : {
    "methodSignature" : "public JavaType constructType(TypeReference<?> typeRef)",
    "methodName" : "constructType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    typeFactory0.constructType((TypeReference<?>) null);\n}",
    "testName" : "test1818"
  },
  "test2323" : {
    "methodSignature" : "public JavaType uncheckedSimpleType(Class<?> cls)",
    "methodName" : "uncheckedSimpleType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<String> class0 = String.class;\n    typeFactory0.uncheckedSimpleType(class0);\n}",
    "testName" : "test2323"
  },
  "test7979" : {
    "methodSignature" : "public Class<?> findClass(String className) throws ClassNotFoundException",
    "methodName" : "findClass",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7979() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<Integer> class0 = Integer.TYPE;\n    Class<ArrayList> class1 = ArrayList.class;\n    CollectionType collectionType0 = typeFactory0.constructRawCollectionType(class1);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    TypeParser typeParser0 = new TypeParser(typeFactory0);\n    TypeParser typeParser1 = typeParser0.withFactory(typeFactory0);\n    TypeModifier[] typeModifierArray0 = new TypeModifier[9];\n    TypeModifier typeModifier0 = mock(TypeModifier.class, new ViolatedAssumptionAnswer());\n    typeModifierArray0[0] = typeModifier0;\n    typeModifierArray0[1] = typeModifier0;\n    typeModifierArray0[2] = typeModifier0;\n    typeModifierArray0[3] = typeModifier0;\n    typeModifierArray0[4] = typeModifier0;\n    typeModifierArray0[5] = typeModifier0;\n    typeModifierArray0[6] = typeModifier0;\n    typeModifierArray0[7] = typeModifier0;\n    typeModifierArray0[8] = typeModifier0;\n    TypeFactory typeFactory1 = new TypeFactory(typeParser1, typeModifierArray0);\n    JavaType[] javaTypeArray0 = new JavaType[0];\n    JavaType javaType0 = typeFactory1.constructParametricType(class0, javaTypeArray0);\n    Class<ObjectMapper.DefaultTyping> class2 = ObjectMapper.DefaultTyping.class;\n    TypeBindings typeBindings0 = TypeBindings.create(class1, javaType0);\n    typeFactory0._constructSimple(class2, typeBindings0, collectionType0, javaTypeArray0);\n    typeFactory0.findClass(\"\");\n}",
    "testName" : "test7979"
  },
  "test1313" : {
    "methodSignature" : "public MapLikeType constructRawMapLikeType(Class<?> mapClass)",
    "methodName" : "constructRawMapLikeType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<SimpleType> class0 = SimpleType.class;\n    typeFactory0.constructRawMapLikeType(class0);\n}",
    "testName" : "test1313"
  },
  "test6767" : {
    "methodSignature" : "public JavaType constructGeneralizedType(JavaType baseType, Class<?> superClass)",
    "methodName" : "constructGeneralizedType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6767() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<LinkedList> class0 = LinkedList.class;\n    CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class0);\n    typeFactory0.constructGeneralizedType(collectionType0, class0);\n}",
    "testName" : "test6767"
  },
  "test5555" : {
    "methodSignature" : "public JavaType moreSpecificType(JavaType type1, JavaType type2)",
    "methodName" : "moreSpecificType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5555() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<DeserializationFeature> class0 = DeserializationFeature.class;\n    CollectionLikeType collectionLikeType0 = typeFactory0.constructRawCollectionLikeType(class0);\n    typeFactory0.moreSpecificType(collectionLikeType0, collectionLikeType0);\n}",
    "testName" : "test5555"
  },
  "test6565" : {
    "methodSignature" : "public static Class<?> rawClass(Type t)",
    "methodName" : "rawClass",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6565() throws Throwable {\n    Class<LinkedList> class0 = LinkedList.class;\n    TypeFactory.rawClass(class0);\n}",
    "testName" : "test6565"
  },
  "test055" : {
    "methodSignature" : "public JavaType constructSpecializedType(JavaType baseType, Class<?> subclass)",
    "methodName" : "constructSpecializedType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<EnumSet> class0 = EnumSet.class;\n    CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class0);\n    typeFactory0.constructSpecializedType(collectionType0, class0);\n}",
    "testName" : "test055"
  },
  "test1717" : {
    "methodSignature" : "public JavaType constructReferenceType(Class<?> rawType, JavaType referredType)",
    "methodName" : "constructReferenceType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<MapLikeType> class0 = MapLikeType.class;\n    Class<ReferenceType> class1 = ReferenceType.class;\n    typeFactory0._findWellKnownSimple(class1);\n    typeFactory0.constructReferenceType(class0, (JavaType) null);\n}",
    "testName" : "test1717"
  },
  "test5959" : {
    "methodSignature" : "public Class<?> findClass(String className) throws ClassNotFoundException",
    "methodName" : "findClass",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5959() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    typeFactory0.findClass(\"int\");\n}",
    "testName" : "test5959"
  },
  "test2525" : {
    "methodSignature" : "public void clearCache()",
    "methodName" : "clearCache",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    typeFactory0.clearCache();\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public static Class<?> rawClass(Type t)",
    "methodName" : "rawClass",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<SerializationFeature> class0 = SerializationFeature.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructMapLikeType(class0, class0, class0);\n    TypeFactory.rawClass(mapLikeType0);\n}",
    "testName" : "test1515"
  },
  "test4747" : {
    "methodSignature" : "public Class<?> findClass(String className) throws ClassNotFoundException",
    "methodName" : "findClass",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4747() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    typeFactory0.findClass(\"char\");\n}",
    "testName" : "test4747"
  },
  "test7171" : {
    "methodSignature" : "public Class<?> findClass(String className) throws ClassNotFoundException",
    "methodName" : "findClass",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7171() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<ArrayType> class0 = ArrayType.class;\n    JavaType javaType0 = TypeBase._bogusSuperClass(class0);\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_COMPARABLE;\n    MapType mapType0 = new MapType(simpleType0, simpleType0, simpleType0);\n    MapType mapType1 = mapType0.withKeyType(simpleType0);\n    MapType mapType2 = mapType1.withTypeHandler(javaType0);\n    typeFactory0.moreSpecificType(javaType0, mapType2);\n    typeFactory0.findClass(\"K_:\");\n}",
    "testName" : "test7171"
  },
  "test8181" : {
    "methodSignature" : "public Class<?> findClass(String className) throws ClassNotFoundException",
    "methodName" : "findClass",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8181() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    typeFactory0.findClass(\"boolean\");\n}",
    "testName" : "test8181"
  },
  "test5353" : {
    "methodSignature" : "public Class<?> findClass(String className) throws ClassNotFoundException",
    "methodName" : "findClass",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5353() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    typeFactory0.findClass(\"short\");\n}",
    "testName" : "test5353"
  },
  "test7575" : {
    "methodSignature" : "public String writeValueAsString(Object value) throws JsonProcessingException",
    "methodName" : "writeValueAsString",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7575() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<Integer> class0 = Integer.TYPE;\n    Class<ArrayList> class1 = ArrayList.class;\n    typeFactory0.constructRawCollectionType(class1);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, defaultSerializerProvider_Impl0, defaultDeserializationContext_Impl0);\n    objectMapper0.writeValueAsString(defaultDeserializationContext_Impl0);\n}",
    "testName" : "test7575"
  },
  "test4141" : {
    "methodSignature" : "public JavaType moreSpecificType(JavaType type1, JavaType type2)",
    "methodName" : "moreSpecificType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4141() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    typeFactory0.moreSpecificType((JavaType) null, (JavaType) null);\n}",
    "testName" : "test4141"
  },
  "test6363" : {
    "methodSignature" : "public JavaType constructSpecializedType(JavaType baseType, Class<?> subclass)",
    "methodName" : "constructSpecializedType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6363() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_INT;\n    Class<AnnotationIntrospector.ReferenceProperty.Type> class0 = AnnotationIntrospector.ReferenceProperty.Type.class;\n    typeFactory0.constructSpecializedType(simpleType0, class0);\n}",
    "testName" : "test6363"
  },
  "test3131" : {
    "methodSignature" : "public JavaType[] findTypeParameters(JavaType type, Class<?> expType)",
    "methodName" : "findTypeParameters",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_COMPARABLE;\n    Class<DeserializationFeature> class0 = DeserializationFeature.class;\n    typeFactory0.findTypeParameters((JavaType) simpleType0, (Class<?>) class0);\n}",
    "testName" : "test3131"
  },
  "test5151" : {
    "methodSignature" : "public JavaType moreSpecificType(JavaType type1, JavaType type2)",
    "methodName" : "moreSpecificType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5151() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_BOOL;\n    typeFactory0.moreSpecificType(simpleType0, simpleType0);\n}",
    "testName" : "test5151"
  },
  "test7373" : {
    "methodSignature" : "public JavaType constructSpecializedType(JavaType baseType, Class<?> subclass)",
    "methodName" : "constructSpecializedType",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7373() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    simpleType0.toString();\n    Class<MapType> class0 = MapType.class;\n    typeFactory0.constructSpecializedType(simpleType0, class0);\n}",
    "testName" : "test7373"
  },
  "test6161" : {
    "methodSignature" : "public Class<?> findClass(String className) throws ClassNotFoundException",
    "methodName" : "findClass",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6161() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    typeFactory0.findClass(\"void\");\n}",
    "testName" : "test6161"
  },
  "test000" : {
    "methodSignature" : "public TypeFactory withClassLoader(ClassLoader classLoader)",
    "methodName" : "withClassLoader",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n    typeFactory0.withClassLoader(classLoader0);\n}",
    "testName" : "test000"
  },
  "test044" : {
    "methodSignature" : "public static Class<?> rawClass(Type t)",
    "methodName" : "rawClass",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    TypeFactory.rawClass((Type) null);\n}",
    "testName" : "test044"
  },
  "test088" : {
    "methodSignature" : "protected JavaType _findWellKnownSimple(Class<?> clz)",
    "methodName" : "_findWellKnownSimple",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<ObjectMapper.DefaultTyping> class0 = ObjectMapper.DefaultTyping.class;\n    typeFactory0._findWellKnownSimple(class0);\n}",
    "testName" : "test088"
  },
  "test2929" : {
    "methodSignature" : "public static Class<?> rawClass(Type t)",
    "methodName" : "rawClass",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    TypeFactory.rawClass(simpleType0);\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public Class<?> findClass(String className) throws ClassNotFoundException",
    "methodName" : "findClass",
    "className" : "com.fasterxml.jackson.databind.type.TypeFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    typeFactory0.findClass(\"mJM~ayZ9M(}d3\");\n}",
    "testName" : "test1919"
  }
}