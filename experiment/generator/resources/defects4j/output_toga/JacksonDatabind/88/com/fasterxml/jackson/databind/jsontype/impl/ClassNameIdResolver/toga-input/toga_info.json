{
  "test00" : {
    "methodSignature" : "public JsonTypeInfo.Id getMechanism()",
    "methodName" : "getMechanism",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);\n    Class<String> class0 = String.class;\n    classNameIdResolver0.registerSubtype(class0, \"com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase\");\n    classNameIdResolver0.getMechanism();\n}",
    "testName" : "test00"
  },
  "test22" : {
    "methodSignature" : "public JavaType typeFromId(DatabindContext context, String id) throws IOException",
    "methodName" : "typeFromId",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializerProvider serializerProvider0 = objectMapper0.getSerializerProviderInstance();\n    JavaType javaType0 = classNameIdResolver0.typeFromId(serializerProvider0, \"java.utilcom.fasterxml.jackson.databind.MapperFeature\");\n}",
    "testName" : "test22"
  },
  "test33" : {
    "methodSignature" : "public String getDescForKnownTypeIds()",
    "methodName" : "getDescForKnownTypeIds",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    JavaType javaType0 = TypeFactory.unknownType();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(javaType0, typeFactory0);\n    String string0 = classNameIdResolver0.getDescForKnownTypeIds();\n}",
    "testName" : "test33"
  },
  "test44" : {
    "methodSignature" : "public String idFromValue(Object value)",
    "methodName" : "idFromValue",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<EnumSet> class0 = EnumSet.class;\n    CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class0);\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(collectionType0, typeFactory0);\n    String string0 = classNameIdResolver0.idFromValue(typeFactory0);\n}",
    "testName" : "test44"
  },
  "test55" : {
    "methodSignature" : "public JavaType typeFromId(DatabindContext context, String id) throws IOException",
    "methodName" : "typeFromId",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test55() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    JavaType javaType0 = TypeFactory.unknownType();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(javaType0, typeFactory0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializerProvider serializerProvider0 = objectMapper0.getSerializerProviderInstance();\n    classNameIdResolver0.typeFromId(serializerProvider0, \"g/}<F:L\\\"Mc\");\n}",
    "testName" : "test55"
  },
  "test66" : {
    "methodSignature" : "protected final String _idFrom(Object value, Class<?> cls, TypeFactory typeFactory)",
    "methodName" : "_idFrom",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test66() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<AnnotationIntrospector.ReferenceProperty.Type> class0 = AnnotationIntrospector.ReferenceProperty.Type.class;\n    ArrayType arrayType0 = typeFactory0.constructArrayType(class0);\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(arrayType0, typeFactory0);\n    String string0 = classNameIdResolver0._idFrom(class0, class0, typeFactory0);\n}",
    "testName" : "test66"
  },
  "test77" : {
    "methodSignature" : "public String idFromBaseType()",
    "methodName" : "idFromBaseType",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test77() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<EnumSet> class0 = EnumSet.class;\n    CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class0);\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(collectionType0, typeFactory0);\n    String string0 = classNameIdResolver0.idFromBaseType();\n}",
    "testName" : "test77"
  },
  "test88" : {
    "methodSignature" : "protected final String _idFrom(Object value, Class<?> cls, TypeFactory typeFactory)",
    "methodName" : "_idFrom",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test88() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<ArrayDeque> class0 = ArrayDeque.class;\n    ArrayType arrayType0 = typeFactory0.constructArrayType(class0);\n    MinimalClassNameIdResolver minimalClassNameIdResolver0 = new MinimalClassNameIdResolver(arrayType0, typeFactory0);\n    Class<ObjectMapper.DefaultTyping> class1 = ObjectMapper.DefaultTyping.class;\n    EnumMap<ObjectMapper.DefaultTyping, ObjectMapper.DefaultTyping> enumMap0 = new EnumMap<ObjectMapper.DefaultTyping, ObjectMapper.DefaultTyping>(class1);\n    String string0 = minimalClassNameIdResolver0._idFrom(enumMap0, class0, typeFactory0);\n}",
    "testName" : "test88"
  }
}