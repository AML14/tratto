[ {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public void acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor, JavaType typeHint) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public JsonSerializer<?> handleSecondaryContextualization(JsonSerializer<?> ser, BeanProperty property) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test011"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public JsonSerializer<?> handleSecondaryContextualization(JsonSerializer<?> ser, BeanProperty property) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test022"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public boolean isEmpty(T value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test033"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public boolean isEmpty(T value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test044"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public boolean isEmpty(T value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test055"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public boolean isEmpty(SerializerProvider serializers, T value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test066"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public boolean isEmpty(SerializerProvider serializers, T value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test077"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public boolean isEmpty(SerializerProvider serializers, T value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test088"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public boolean booleanValue()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(jsonNode0.booleanValue())",
  "exception" : "",
  "testName" : "test099"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public boolean isFloatingPointNumber()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1010"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public void serialize(Calendar value, JsonGenerator jgen, SerializerProvider provider) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1111"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "protected boolean _asTimestamp(SerializerProvider serializers)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1212"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public boolean isUnwrappingSerializer()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(sqlDateSerializer0.isUnwrappingSerializer())",
  "exception" : "",
  "testName" : "test1313"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public boolean isContainerType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(collectionLikeType0.isContainerType())",
  "exception" : "",
  "testName" : "test1414"
} ]