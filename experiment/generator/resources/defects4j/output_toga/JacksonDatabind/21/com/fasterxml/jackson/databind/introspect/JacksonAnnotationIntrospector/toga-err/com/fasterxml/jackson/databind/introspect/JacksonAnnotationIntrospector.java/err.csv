com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector,@Test(timeout = 4000)
public void test000() throws Throwable {
    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();
    StdTypeResolverBuilder stdTypeResolverBuilder0 = jacksonAnnotationIntrospector0._constructNoTypeResolverBuilder();
    stdTypeResolverBuilder0.isTypeIdVisible();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector,@Test(timeout = 4000)
public void test011() throws Throwable {
    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();
    StdTypeResolverBuilder stdTypeResolverBuilder0 = jacksonAnnotationIntrospector0._constructStdTypeResolverBuilder();
    stdTypeResolverBuilder0.isTypeIdVisible();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector,@Test(timeout = 4000)
public void test022() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    Class<JsonDeserializer> class0 = JsonDeserializer.class;
    ObjectWriter objectWriter0 = objectMapper0.writerFor(class0);
    objectWriter0.hasPrefetchedSerializer();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector,@Test(timeout = 4000)
public void test044() throws Throwable {
    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();
    Version version0 = jacksonAnnotationIntrospector0.version();
    version0.isUknownVersion();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_21b/src/main/java/com/fasterxml/jackson/core/Version.java
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector,@Test(timeout = 4000)
public void test088() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    Class<BeanPropertyWriter> class0 = BeanPropertyWriter.class;
    ObjectReader objectReader0 = objectMapper0.readerFor(class0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector,@Test(timeout = 4000)
public void test088() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    Class<BeanPropertyWriter> class0 = BeanPropertyWriter.class;
    ObjectReader objectReader0 = objectMapper0.readerFor(class0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector,@Test(timeout = 4000)
public void test1515() throws Throwable {
    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;
    AnnotatedConstructor annotatedConstructor0 = basicBeanDescription0.findDefaultConstructor();
    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.NON_DEFAULT;
    JsonInclude.Include jsonInclude_Include1 = jacksonAnnotationIntrospector0.findSerializationInclusionForContent(annotatedConstructor0, jsonInclude_Include0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector,@Test(timeout = 4000)
public void test1717() throws Throwable {
    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();
    Class<BeanPropertyDefinition> class0 = BeanPropertyDefinition.class;
    SimpleType simpleType0 = SimpleType.construct(class0);
    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.NON_DEFAULT;
    JsonAppend.Attr jsonAppend_Attr0 = mock(JsonAppend.Attr.class, new ViolatedAssumptionAnswer());
    doReturn(jsonInclude_Include0).when(jsonAppend_Attr0).include();
    doReturn(""LfRY= $I"").when(jsonAppend_Attr0).propName();
    doReturn(""LfRY= $I"").when(jsonAppend_Attr0).propNamespace();
    doReturn(true).when(jsonAppend_Attr0).required();
    doReturn(""LfRY= $I"").when(jsonAppend_Attr0).value();
    Class<NamedType> class1 = NamedType.class;
    AnnotatedClass annotatedClass0 = AnnotatedClass.constructWithoutSuperTypes(class1, jacksonAnnotationIntrospector0, (ClassIntrospector.MixInResolver) null);
    BeanPropertyWriter beanPropertyWriter0 = jacksonAnnotationIntrospector0._constructVirtualProperty(jsonAppend_Attr0, (MapperConfig<?>) null, annotatedClass0, simpleType0);
    beanPropertyWriter0.isRequired();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_21b/src/main/java/com/fasterxml/jackson/databind/introspect/ConcreteBeanPropertyBase.java
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector,@Test(timeout = 4000)
public void test1818() throws Throwable {
    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();
    Class<BeanPropertyDefinition> class0 = BeanPropertyDefinition.class;
    SimpleType simpleType0 = SimpleType.construct(class0);
    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.NON_DEFAULT;
    JsonAppend.Attr jsonAppend_Attr0 = mock(JsonAppend.Attr.class, new ViolatedAssumptionAnswer());
    doReturn(jsonInclude_Include0).when(jsonAppend_Attr0).include();
    doReturn("""").when(jsonAppend_Attr0).propName();
    doReturn("""").when(jsonAppend_Attr0).propNamespace();
    doReturn(false).when(jsonAppend_Attr0).required();
    doReturn("""").when(jsonAppend_Attr0).value();
    Class<NamedType> class1 = NamedType.class;
    AnnotatedClass annotatedClass0 = AnnotatedClass.constructWithoutSuperTypes(class1, jacksonAnnotationIntrospector0, (ClassIntrospector.MixInResolver) null);
    BeanPropertyWriter beanPropertyWriter0 = jacksonAnnotationIntrospector0._constructVirtualProperty(jsonAppend_Attr0, (MapperConfig<?>) null, annotatedClass0, simpleType0);
    beanPropertyWriter0.isRequired();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_21b/src/main/java/com/fasterxml/jackson/databind/introspect/ConcreteBeanPropertyBase.java
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector,@Test(timeout = 4000)
public void test2929() throws Throwable {
    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();
    Class<NamedType> class0 = NamedType.class;
    Class<SimpleObjectIdResolver> class1 = SimpleObjectIdResolver.class;
    Class<?> class2 = jacksonAnnotationIntrospector0._classIfExplicit(class0, class1);
    class2.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_21b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector,@Test(timeout = 4000)
public void test3031() throws Throwable {
    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();
    PropertyName propertyName0 = jacksonAnnotationIntrospector0._propertyName(""E`<#u"", (String) null);
    propertyName0.getSimpleName();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector,@Test(timeout = 4000)
public void test3132() throws Throwable {
    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();
    PropertyName propertyName0 = jacksonAnnotationIntrospector0._propertyName(""<"", """");
    propertyName0.hasNamespace();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector,@Test(timeout = 4000)
public void test3133() throws Throwable {
    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();
    PropertyName propertyName0 = jacksonAnnotationIntrospector0._propertyName(""<"", """");
    propertyName0.hasSimpleName();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
