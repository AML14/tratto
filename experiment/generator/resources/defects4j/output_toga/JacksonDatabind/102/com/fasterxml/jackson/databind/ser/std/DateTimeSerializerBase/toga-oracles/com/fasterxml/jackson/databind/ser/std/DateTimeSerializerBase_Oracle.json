[ {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public void acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor, JavaType typeHint) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test11"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test22"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test33"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test44"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "protected boolean _asTimestamp(SerializerProvider serializers)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test55"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public boolean isUnwrappingSerializer()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test66"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "public boolean isUnwrappingSerializer()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(sqlDateSerializer0.isUnwrappingSerializer())",
  "exception" : "",
  "testName" : "test77"
}, {
  "className" : "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
  "methodSignature" : "protected void _serializeAsString(Date value, JsonGenerator g, SerializerProvider provider) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test88"
} ]