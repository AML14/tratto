{
  "test141141" : {
    "methodSignature" : "protected void _checkInvalidCopy(Class<?> exp)",
    "methodName" : "_checkInvalidCopy",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test141141() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<SimpleModule> class0 = SimpleModule.class;\n    objectMapper0._checkInvalidCopy(class0);\n}",
    "testName" : "test141141"
  },
  "test124124" : {
    "methodSignature" : "public ObjectMapper setAnnotationIntrospectors(AnnotationIntrospector serializerAI, AnnotationIntrospector deserializerAI)",
    "methodName" : "setAnnotationIntrospectors",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test124124() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.setAnnotationIntrospectors((AnnotationIntrospector) null, (AnnotationIntrospector) null);\n}",
    "testName" : "test124124"
  },
  "test0000" : {
    "methodSignature" : "public ObjectMapper setNodeFactory(JsonNodeFactory f)",
    "methodName" : "setNodeFactory",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.withExactBigDecimals(false);\n    ObjectMapper objectMapper1 = objectMapper0.setNodeFactory(jsonNodeFactory0);\n}",
    "testName" : "test0000"
  },
  "test0088" : {
    "methodSignature" : "public <T> T readValue(byte[] src, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0088() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    byte[] byteArray0 = new byte[5];\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<CollectionLikeType> class0 = CollectionLikeType.class;\n    JavaType javaType0 = typeFactory0.uncheckedSimpleType(class0);\n    objectMapper0.readValue(byteArray0, javaType0);\n}",
    "testName" : "test0088"
  },
  "test149149" : {
    "methodSignature" : "public ObjectMapper configure(MapperFeature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test149149() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MapperFeature mapperFeature0 = MapperFeature.USE_WRAPPER_NAME_AS_PROPERTY_NAME;\n    ObjectMapper objectMapper1 = objectMapper0.configure(mapperFeature0, false);\n}",
    "testName" : "test149149"
  },
  "test177178" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test177178() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writerWithType((Class<?>) null);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test177178"
  },
  "test107107" : {
    "methodSignature" : "public ObjectMapper disable(SerializationFeature f)",
    "methodName" : "disable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107107() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_DURATIONS_AS_TIMESTAMPS;\n    ObjectMapper objectMapper1 = objectMapper0.disable(serializationFeature0);\n}",
    "testName" : "test107107"
  },
  "test03636" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03636() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<PipedInputStream> class0 = PipedInputStream.class;\n    ObjectWriter objectWriter0 = objectMapper0.writerWithView(class0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test03636"
  },
  "test02424" : {
    "methodSignature" : "public ObjectMapper findAndRegisterModules()",
    "methodName" : "findAndRegisterModules",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02424() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.findAndRegisterModules();\n}",
    "testName" : "test02424"
  },
  "test130130" : {
    "methodSignature" : "public ObjectMapper registerModule(Module module)",
    "methodName" : "registerModule",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test130130() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Version version0 = new Version((-1633), 24, (-1633), (String) null, \"null\", (String) null);\n    SimpleModule simpleModule0 = new SimpleModule(version0);\n    Class<FloatNode> class0 = FloatNode.class;\n    Class<DataInputStream> class1 = DataInputStream.class;\n    SimpleModule simpleModule1 = simpleModule0.setMixInAnnotation(class0, class1);\n    ObjectMapper objectMapper1 = objectMapper0.registerModule(simpleModule1);\n}",
    "testName" : "test130130"
  },
  "test04848" : {
    "methodSignature" : "public ObjectMapper enable(DeserializationFeature first, DeserializationFeature... f)",
    "methodName" : "enable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04848() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ADJUST_DATES_TO_CONTEXT_TIME_ZONE;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[3];\n    objectMapper0.enable(deserializationFeature0, deserializationFeatureArray0);\n}",
    "testName" : "test04848"
  },
  "test05656" : {
    "methodSignature" : "public PropertyNamingStrategy getPropertyNamingStrategy()",
    "methodName" : "getPropertyNamingStrategy",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05656() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    PropertyNamingStrategy propertyNamingStrategy0 = objectMapper0.getPropertyNamingStrategy();\n}",
    "testName" : "test05656"
  },
  "test06868" : {
    "methodSignature" : "public ObjectMapper setInjectableValues(InjectableValues injectableValues)",
    "methodName" : "setInjectableValues",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06868() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();\n    ObjectMapper objectMapper1 = objectMapper0.setInjectableValues(injectableValues_Std0);\n}",
    "testName" : "test06868"
  },
  "test183184" : {
    "methodSignature" : "public <T> T convertValue(Object fromValue, JavaType toValueType) throws IllegalArgumentException",
    "methodName" : "convertValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test183184() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TextNode textNode0 = objectMapper0.convertValue((Object) null, (JavaType) null);\n}",
    "testName" : "test183184"
  },
  "test02828" : {
    "methodSignature" : "public void acceptJsonFormatVisitor(Class<?> type, JsonFormatVisitorWrapper visitor) throws JsonMappingException",
    "methodName" : "acceptJsonFormatVisitor",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02828() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<SimpleModule> class0 = SimpleModule.class;\n    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base();\n    objectMapper0.acceptJsonFormatVisitor((Class<?>) class0, (JsonFormatVisitorWrapper) jsonFormatVisitorWrapper_Base0);\n}",
    "testName" : "test02828"
  },
  "test113113" : {
    "methodSignature" : "public ObjectMapper addHandler(DeserializationProblemHandler h)",
    "methodName" : "addHandler",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113113() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    ObjectMapper objectMapper1 = objectMapper0.addHandler(deserializationProblemHandler0);\n}",
    "testName" : "test113113"
  },
  "test01616" : {
    "methodSignature" : "public ObjectMapper copy()",
    "methodName" : "copy",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01616() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.copy();\n}",
    "testName" : "test01616"
  },
  "test08484" : {
    "methodSignature" : "public int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08484() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    int int0 = objectMapper0.mixInCount();\n}",
    "testName" : "test08484"
  },
  "test07272" : {
    "methodSignature" : "public Object setHandlerInstantiator(HandlerInstantiator hi)",
    "methodName" : "setHandlerInstantiator",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07272() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    HandlerInstantiator handlerInstantiator0 = mock(HandlerInstantiator.class, new ViolatedAssumptionAnswer());\n    Object object0 = objectMapper0.setHandlerInstantiator(handlerInstantiator0);\n}",
    "testName" : "test07272"
  },
  "test04040" : {
    "methodSignature" : "public <T> T readValue(Reader src, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04040() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    char[] charArray0 = new char[4];\n    CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);\n    PushbackReader pushbackReader0 = new PushbackReader(charArrayReader0);\n    Class<SimpleType> class0 = SimpleType.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    objectMapper0.readValue((Reader) pushbackReader0, (JavaType) simpleType0);\n}",
    "testName" : "test04040"
  },
  "test121121" : {
    "methodSignature" : "public ObjectMapper setTypeFactory(TypeFactory f)",
    "methodName" : "setTypeFactory",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121121() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.setTypeFactory((TypeFactory) null);\n}",
    "testName" : "test121121"
  },
  "test0011" : {
    "methodSignature" : "public ObjectReader reader(JavaType type)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader((JavaType) null);\n}",
    "testName" : "test0011"
  },
  "test0099" : {
    "methodSignature" : "public ObjectReader reader(ContextAttributes attrs)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0099() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ContextAttributes contextAttributes0 = ContextAttributes.Impl.getEmpty();\n    ObjectReader objectReader0 = objectMapper0.reader(contextAttributes0);\n}",
    "testName" : "test0099"
  },
  "test09292" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09292() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writerWithDefaultPrettyPrinter();\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test09292"
  },
  "test06060" : {
    "methodSignature" : "public ObjectMapper configure(JsonParser.Feature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06060() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS;\n    ObjectMapper objectMapper1 = objectMapper0.configure(jsonParser_Feature0, true);\n}",
    "testName" : "test06060"
  },
  "test03232" : {
    "methodSignature" : "public boolean willFailOnUnknownId()",
    "methodName" : "willFailOnUnknownId",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03232() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleFilterProvider simpleFilterProvider0 = new SimpleFilterProvider();\n    objectMapper0.setFilters(simpleFilterProvider0);\n    simpleFilterProvider0.willFailOnUnknownId();\n}",
    "testName" : "test03232"
  },
  "test08888" : {
    "methodSignature" : "public SerializerFactory getSerializerFactory()",
    "methodName" : "getSerializerFactory",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08888() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializerFactory serializerFactory0 = objectMapper0.getSerializerFactory();\n}",
    "testName" : "test08888"
  },
  "test07676" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07676() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writer((CharacterEscapes) null);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test07676"
  },
  "test129129" : {
    "methodSignature" : "public ObjectMapper registerModule(Module module)",
    "methodName" : "registerModule",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test129129() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Version version0 = new Version((-1633), 24, (-1633), (String) null, \"null\", (String) null);\n    SimpleModule simpleModule0 = new SimpleModule(version0);\n    Class<DataInputStream> class0 = DataInputStream.class;\n    JsonSerializer<FilterInputStream> jsonSerializer0 = (JsonSerializer<FilterInputStream>) mock(JsonSerializer.class, new ViolatedAssumptionAnswer());\n    SimpleModule simpleModule1 = simpleModule0.addSerializer((Class<? extends FilterInputStream>) class0, jsonSerializer0);\n    ObjectMapper objectMapper1 = objectMapper0.registerModule(simpleModule1);\n}",
    "testName" : "test129129"
  },
  "test05252" : {
    "methodSignature" : "public ObjectMapper setSerializerFactory(SerializerFactory f)",
    "methodName" : "setSerializerFactory",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05252() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;\n    ObjectMapper objectMapper1 = objectMapper0.setSerializerFactory(beanSerializerFactory0);\n}",
    "testName" : "test05252"
  },
  "test09696" : {
    "methodSignature" : "public ObjectMapper disable(SerializationFeature first, SerializationFeature... f)",
    "methodName" : "disable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09696() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_DATES_WITH_ZONE_ID;\n    SerializationFeature[] serializationFeatureArray0 = new SerializationFeature[4];\n    objectMapper0.disable(serializationFeature0, serializationFeatureArray0);\n}",
    "testName" : "test09696"
  },
  "test174175" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test174175() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writerFor((TypeReference<?>) null);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test174175"
  },
  "test06464" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06464() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();\n    deserializationContext0.getDeserializationFeatures();\n}",
    "testName" : "test06464"
  },
  "test152152" : {
    "methodSignature" : "public ObjectMapper configure(SerializationFeature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test152152() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS;\n    ObjectMapper objectMapper1 = objectMapper0.configure(serializationFeature0, true);\n}",
    "testName" : "test152152"
  },
  "test110110" : {
    "methodSignature" : "public ObjectMapper setFilterProvider(FilterProvider filterProvider)",
    "methodName" : "setFilterProvider",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110110() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    HashMap<String, AbstractDeserializer> hashMap0 = new HashMap<String, AbstractDeserializer>();\n    SimpleFilterProvider simpleFilterProvider0 = new SimpleFilterProvider(hashMap0);\n    ObjectMapper objectMapper1 = objectMapper0.setFilterProvider(simpleFilterProvider0);\n}",
    "testName" : "test110110"
  },
  "test133133" : {
    "methodSignature" : "public String writeValueAsString(Object value) throws JsonProcessingException",
    "methodName" : "writeValueAsString",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test133133() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.enableDefaultTyping();\n    objectMapper0.writeValueAsString(objectMapper1);\n}",
    "testName" : "test133133"
  },
  "test08080" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser jp, ResolvedType valueType) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08080() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, defaultSerializerProvider_Impl0, defaultDeserializationContext_Impl0);\n    JsonParserDelegate jsonParserDelegate0 = new JsonParserDelegate((JsonParser) null);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(jsonParserDelegate0, (JsonParser) null);\n    objectMapper0.readValues((JsonParser) jsonParserSequence0, (ResolvedType) null);\n}",
    "testName" : "test08080"
  },
  "test118118" : {
    "methodSignature" : "public ObjectMapper configure(JsonGenerator.Feature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118118() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.AUTO_CLOSE_TARGET;\n    ObjectMapper objectMapper1 = objectMapper0.configure(jsonGenerator_Feature0, true);\n}",
    "testName" : "test118118"
  },
  "test163164" : {
    "methodSignature" : "public abstract JsonNodeType getNodeType()",
    "methodName" : "getNodeType",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test163164() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    byte[] byteArray0 = new byte[1];\n    byteArray0[0] = (byte) 51;\n    JsonNode jsonNode0 = objectMapper0.readTree(byteArray0);\n    jsonNode0.getNodeType();\n}",
    "testName" : "test163164"
  },
  "test186187" : {
    "methodSignature" : "public void writeValue(File resultFile, Object value) throws IOException, JsonGenerationException, JsonMappingException",
    "methodName" : "writeValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test186187() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    MockFile mockFile0 = new MockFile(\"$y-.Pzp$(cRkC(\", \"$y-.Pzp$(cRkC(\");\n    objectMapper0.writeValue((File) mockFile0, (Object) \"$y-.Pzp$(cRkC(\");\n}",
    "testName" : "test186187"
  },
  "test143143" : {
    "methodSignature" : "public ObjectMapper registerModule(Module module)",
    "methodName" : "registerModule",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test143143() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleModule simpleModule0 = new SimpleModule(\"w{bsF%\", (Version) null);\n    objectMapper0.registerModule(simpleModule0);\n}",
    "testName" : "test143143"
  },
  "test168169" : {
    "methodSignature" : "public <T> T treeToValue(TreeNode n, Class<T> valueType) throws JsonProcessingException",
    "methodName" : "treeToValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test168169() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<ObjectNode> class0 = ObjectNode.class;\n    ArrayNode arrayNode0 = objectMapper0.createArrayNode();\n    ObjectNode objectNode0 = arrayNode0.objectNode();\n    ObjectNode objectNode1 = objectMapper0.treeToValue((TreeNode) objectNode0, class0);\n}",
    "testName" : "test168169"
  },
  "test122122" : {
    "methodSignature" : "public <T> T readValue(String content, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test122122() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeReference<ByteArrayOutputStream> typeReference0 = (TypeReference<ByteArrayOutputStream>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    doReturn((Type) null).when(typeReference0).getType();\n    objectMapper0.readValue(\"1nu8\\\"C\", (TypeReference) typeReference0);\n}",
    "testName" : "test122122"
  },
  "test0022" : {
    "methodSignature" : "public boolean canDeserialize(JavaType type, AtomicReference<Throwable> cause)",
    "methodName" : "canDeserialize",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0022() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<ArrayDeque> class0 = ArrayDeque.class;\n    CollectionType collectionType0 = typeFactory0.constructRawCollectionType(class0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    AtomicReference<Throwable> atomicReference0 = new AtomicReference<Throwable>();\n    boolean boolean0 = objectMapper0.canDeserialize((JavaType) collectionType0, atomicReference0);\n}",
    "testName" : "test0022"
  },
  "test105105" : {
    "methodSignature" : "public <T> T readValue(File src, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105105() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeReference<POJONode> typeReference0 = (TypeReference<POJONode>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    objectMapper0.readValue((File) null, (TypeReference) typeReference0);\n}",
    "testName" : "test105105"
  },
  "test171172" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test171172() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<BeanDeserializer> class0 = BeanDeserializer.class;\n    ObjectWriter objectWriter0 = objectMapper0.writerFor(class0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test171172"
  },
  "test06969" : {
    "methodSignature" : "public SerializerProvider getSerializerProvider()",
    "methodName" : "getSerializerProvider",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06969() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, defaultSerializerProvider_Impl0, defaultDeserializationContext_Impl0);\n    SerializerProvider serializerProvider0 = objectMapper0.getSerializerProvider();\n}",
    "testName" : "test06969"
  },
  "test03737" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03737() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.enableDefaultTyping();\n    Class<BufferedInputStream> class0 = BufferedInputStream.class;\n    ObjectWriter objectWriter0 = objectMapper0.writerWithType(class0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test03737"
  },
  "test04545" : {
    "methodSignature" : "public VisibilityChecker<?> getVisibilityChecker()",
    "methodName" : "getVisibilityChecker",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04545() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    VisibilityChecker<?> visibilityChecker0 = objectMapper0.getVisibilityChecker();\n}",
    "testName" : "test04545"
  },
  "test08989" : {
    "methodSignature" : "public ObjectMapper clearProblemHandlers()",
    "methodName" : "clearProblemHandlers",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08989() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.clearProblemHandlers();\n}",
    "testName" : "test08989"
  },
  "test05757" : {
    "methodSignature" : "public void writeValue(OutputStream out, Object value) throws IOException, JsonGenerationException, JsonMappingException",
    "methodName" : "writeValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05757() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"bWmU>&~cFa+>Q(\");\n    objectMapper0.writeValue((OutputStream) mockPrintStream0, (Object) mockPrintStream0);\n}",
    "testName" : "test05757"
  },
  "test119119" : {
    "methodSignature" : "public ObjectMapper disableDefaultTyping()",
    "methodName" : "disableDefaultTyping",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119119() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();\n}",
    "testName" : "test119119"
  },
  "test111111" : {
    "methodSignature" : "public <T> T convertValue(Object fromValue, TypeReference<?> toValueTypeRef) throws IllegalArgumentException",
    "methodName" : "convertValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111111() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeReference<ByteArrayInputStream> typeReference0 = (TypeReference<ByteArrayInputStream>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    doReturn((Type) null).when(typeReference0).getType();\n    objectMapper0.convertValue((Object) null, (TypeReference<?>) typeReference0);\n}",
    "testName" : "test111111"
  },
  "test160160" : {
    "methodSignature" : "public <T extends TreeNode> T readTree(JsonParser jp) throws IOException, JsonProcessingException",
    "methodName" : "readTree",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test160160() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DoubleNode doubleNode0 = DoubleNode.valueOf(2);\n    JsonParser jsonParser0 = objectMapper0.treeAsTokens(doubleNode0);\n    DoubleNode doubleNode1 = objectMapper0.readTree(jsonParser0);\n}",
    "testName" : "test160160"
  },
  "test02929" : {
    "methodSignature" : "public ObjectMapper setConfig(DeserializationConfig config)",
    "methodName" : "setConfig",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02929() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.setConfig((DeserializationConfig) null);\n}",
    "testName" : "test02929"
  },
  "test06161" : {
    "methodSignature" : "public final <T> T readValue(JsonParser jp, ResolvedType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06161() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"com.fasterxml.jakson.databind.ObjectMapper$2\");\n    Class<MockPrintWriter> class0 = MockPrintWriter.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    objectMapper0.readValue(jsonParser0, (ResolvedType) simpleType0);\n}",
    "testName" : "test06161"
  },
  "test07373" : {
    "methodSignature" : "public boolean canSerialize(Class<?> type)",
    "methodName" : "canSerialize",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07373() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<AbstractDeserializer> class0 = AbstractDeserializer.class;\n    boolean boolean0 = objectMapper0.canSerialize(class0);\n}",
    "testName" : "test07373"
  },
  "test165166" : {
    "methodSignature" : "public String writeValueAsString(Object value) throws JsonProcessingException",
    "methodName" : "writeValueAsString",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test165166() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    POJONode pOJONode0 = new POJONode(\"(eom6`,9TR7}y<V~Lj\");\n    String string0 = objectMapper0.writeValueAsString(pOJONode0);\n}",
    "testName" : "test165166"
  },
  "test09393" : {
    "methodSignature" : "protected PrettyPrinter _defaultPrettyPrinter()",
    "methodName" : "_defaultPrettyPrinter",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09393() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    PrettyPrinter prettyPrinter0 = objectMapper0._defaultPrettyPrinter();\n}",
    "testName" : "test09393"
  },
  "test0033" : {
    "methodSignature" : "public final void addMixInAnnotations(Class<?> target, Class<?> mixinSource)",
    "methodName" : "addMixInAnnotations",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0033() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<MockFileReader> class0 = MockFileReader.class;\n    objectMapper0.addMixInAnnotations(class0, class0);\n}",
    "testName" : "test0033"
  },
  "test08181" : {
    "methodSignature" : "public ObjectReader reader(DeserializationFeature first, DeserializationFeature... other)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08181() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.READ_UNKNOWN_ENUM_VALUES_AS_NULL;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[0];\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0, deserializationFeatureArray0);\n}",
    "testName" : "test08181"
  },
  "test189190" : {
    "methodSignature" : "protected final void _configAndWriteValue(JsonGenerator g, Object value, Class<?> viewClass) throws IOException",
    "methodName" : "_configAndWriteValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test189190() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<NullNode> class0 = NullNode.class;\n    objectMapper0._configAndWriteValue((JsonGenerator) null, class0, class0);\n}",
    "testName" : "test189190"
  },
  "test07777" : {
    "methodSignature" : "public ObjectReader reader()",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07777() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n}",
    "testName" : "test07777"
  },
  "test06565" : {
    "methodSignature" : "public ObjectMapper setAnnotationIntrospector(AnnotationIntrospector ai)",
    "methodName" : "setAnnotationIntrospector",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06565() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();\n    ObjectMapper objectMapper1 = objectMapper0.setAnnotationIntrospector(annotationIntrospector0);\n}",
    "testName" : "test06565"
  },
  "test03333" : {
    "methodSignature" : "public ObjectReader reader(DeserializationFeature feature)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03333() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.USE_LONG_FOR_INTS;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n}",
    "testName" : "test03333"
  },
  "test127127" : {
    "methodSignature" : "public ObjectMapper registerModule(Module module)",
    "methodName" : "registerModule",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test127127() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Version version0 = new Version((-1633), 24, (-1633), (String) null, \"null\", (String) null);\n    SimpleModule simpleModule0 = new SimpleModule(version0);\n    Class<SimpleModule> class0 = SimpleModule.class;\n    JsonDeserializer<SimpleModule> jsonDeserializer0 = (JsonDeserializer<SimpleModule>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    simpleModule0.addDeserializer(class0, (JsonDeserializer<? extends SimpleModule>) jsonDeserializer0);\n    ObjectMapper objectMapper1 = objectMapper0.registerModule(simpleModule0);\n}",
    "testName" : "test127127"
  },
  "test09797" : {
    "methodSignature" : "public InjectableValues getInjectableValues()",
    "methodName" : "getInjectableValues",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09797() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    InjectableValues injectableValues0 = objectMapper0.getInjectableValues();\n}",
    "testName" : "test09797"
  },
  "test176177" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test176177() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writer((PrettyPrinter) null);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test176177"
  },
  "test08585" : {
    "methodSignature" : "public boolean isFloat()",
    "methodName" : "isFloat",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08585() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectNode objectNode0 = objectMapper0.createObjectNode();\n    objectNode0.isFloat();\n}",
    "testName" : "test08585"
  },
  "test02121" : {
    "methodSignature" : "public ObjectMapper setTimeZone(TimeZone tz)",
    "methodName" : "setTimeZone",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02121() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TimeZone timeZone0 = TimeZone.getDefault();\n    ObjectMapper objectMapper1 = objectMapper0.setTimeZone(timeZone0);\n}",
    "testName" : "test02121"
  },
  "test05353" : {
    "methodSignature" : "public byte[] writeValueAsBytes(Object value) throws JsonProcessingException",
    "methodName" : "writeValueAsBytes",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05353() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"`7Q\");\n    objectMapper0.writeValueAsBytes(mockFileOutputStream0);\n}",
    "testName" : "test05353"
  },
  "test108108" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108108() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writer((Base64Variant) null);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test108108"
  },
  "test154154" : {
    "methodSignature" : "public ObjectMapper configure(DeserializationFeature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test154154() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.READ_UNKNOWN_ENUM_VALUES_AS_NULL;\n    ObjectMapper objectMapper1 = objectMapper0.configure(deserializationFeature0, true);\n}",
    "testName" : "test154154"
  },
  "test116116" : {
    "methodSignature" : "public ObjectMapper disable(DeserializationFeature feature)",
    "methodName" : "disable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test116116() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.READ_DATE_TIMESTAMPS_AS_NANOSECONDS;\n    ObjectMapper objectMapper1 = objectMapper0.disable(deserializationFeature0);\n}",
    "testName" : "test116116"
  },
  "test184185" : {
    "methodSignature" : "protected Object _convert(Object fromValue, JavaType toValueType) throws IllegalArgumentException",
    "methodName" : "_convert",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test184185() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JavaType javaType0 = TypeFactory.unknownType();\n    NullNode nullNode0 = NullNode.getInstance();\n    Object object0 = objectMapper0._convert(nullNode0, javaType0);\n}",
    "testName" : "test184185"
  },
  "test0044" : {
    "methodSignature" : "public ObjectMapper enable(SerializationFeature first, SerializationFeature... f)",
    "methodName" : "enable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0044() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_DURATIONS_AS_TIMESTAMPS;\n    objectMapper0.enable(serializationFeature0, (SerializationFeature[]) null);\n}",
    "testName" : "test0044"
  },
  "test120120" : {
    "methodSignature" : "public boolean isEnabled(DeserializationFeature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test120120() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, defaultSerializerProvider_Impl0, (DefaultDeserializationContext) null);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.UNWRAP_ROOT_VALUE;\n    boolean boolean0 = objectMapper0.isEnabled(deserializationFeature0);\n}",
    "testName" : "test120120"
  },
  "test103103" : {
    "methodSignature" : "public ObjectMapper setConfig(SerializationConfig config)",
    "methodName" : "setConfig",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103103() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    SerializationConfig serializationConfig0 = new SerializationConfig(baseSettings0, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0);\n    ObjectMapper objectMapper1 = objectMapper0.setConfig(serializationConfig0);\n}",
    "testName" : "test103103"
  },
  "test128128" : {
    "methodSignature" : "public ObjectMapper registerModule(Module module)",
    "methodName" : "registerModule",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test128128() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Version version0 = new Version((-1633), 24, (-1633), (String) null, \"null\", (String) null);\n    SimpleModule simpleModule0 = new SimpleModule(version0);\n    Class<FloatNode> class0 = FloatNode.class;\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    SimpleModule simpleModule1 = simpleModule0.addValueInstantiator(class0, jsonLocationInstantiator0);\n    ObjectMapper objectMapper1 = objectMapper0.registerModule(simpleModule1);\n}",
    "testName" : "test128128"
  },
  "test190191" : {
    "methodSignature" : "public <T> T treeToValue(TreeNode n, Class<T> valueType) throws JsonProcessingException",
    "methodName" : "treeToValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test190191() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(true);\n    ConcurrentHashMap<String, JsonNode> concurrentHashMap0 = new ConcurrentHashMap<String, JsonNode>();\n    ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0, concurrentHashMap0);\n    ArrayNode arrayNode0 = objectNode0.withArray(\".Cn@>7tVp;jkX+ws\");\n    NullNode nullNode0 = arrayNode0.nullNode();\n    Class<ObjectNode> class0 = ObjectNode.class;\n    ObjectNode objectNode1 = objectMapper0.treeToValue((TreeNode) nullNode0, class0);\n}",
    "testName" : "test190191"
  },
  "test05858" : {
    "methodSignature" : "public void writeValue(Writer w, Object value) throws IOException, JsonGenerationException, JsonMappingException",
    "methodName" : "writeValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05858() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    StringWriter stringWriter0 = new StringWriter();\n    objectMapper0.writeValue((Writer) stringWriter0, (Object) stringWriter0);\n}",
    "testName" : "test05858"
  },
  "test151151" : {
    "methodSignature" : "public ObjectMapper configure(SerializationFeature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test151151() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_ENUMS_USING_INDEX;\n    ObjectMapper objectMapper1 = objectMapper0.configure(serializationFeature0, false);\n}",
    "testName" : "test151151"
  },
  "test03434" : {
    "methodSignature" : "public <T> T readValue(InputStream src, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03434() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    MockFile mockFile0 = new MockFile(\"JSON\", \"JSON\");\n    objectMapper0.writeValue((File) mockFile0, (Object) jsonFactory0);\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(mockFile0);\n    objectMapper0.readValue((InputStream) mockFileInputStream0, (JavaType) null);\n}",
    "testName" : "test03434"
  },
  "test02626" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02626() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory.Feature jsonFactory_Feature0 = JsonFactory.Feature.INTERN_FIELD_NAMES;\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(jsonFactory_Feature0);\n}",
    "testName" : "test02626"
  },
  "test04646" : {
    "methodSignature" : "public <T> T treeToValue(TreeNode n, Class<T> valueType) throws JsonProcessingException",
    "methodName" : "treeToValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04646() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.withExactBigDecimals(true);\n    Float float0 = new Float(0.0F);\n    ValueNode valueNode0 = jsonNodeFactory0.numberNode(float0);\n    Class<Object> class0 = Object.class;\n    Object object0 = objectMapper0.treeToValue((TreeNode) valueNode0, class0);\n}",
    "testName" : "test04646"
  },
  "test07878" : {
    "methodSignature" : "public DateFormat getDateFormat()",
    "methodName" : "getDateFormat",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07878() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DateFormat dateFormat0 = objectMapper0.getDateFormat();\n}",
    "testName" : "test07878"
  },
  "test117117" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test117117() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    Class<BinaryNode> class0 = BinaryNode.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    ObjectWriter objectWriter0 = objectMapper0.writerFor((JavaType) simpleType0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test117117"
  },
  "test03838" : {
    "methodSignature" : "public <T> T readValue(byte[] src, int offset, int len, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03838() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    byte[] byteArray0 = new byte[1];\n    TypeReference<FilterInputStream> typeReference0 = (TypeReference<FilterInputStream>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    objectMapper0.readValue(byteArray0, (int) 51, 3, (TypeReference) typeReference0);\n}",
    "testName" : "test03838"
  },
  "test162163" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test162163() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    byte[] byteArray0 = new byte[6];\n    byteArray0[5] = (byte) 54;\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 5, (byte) 5);\n    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte) 54);\n    JsonNode jsonNode0 = objectMapper0.readTree((InputStream) bufferedInputStream0);\n    jsonNode0.doubleValue();\n}",
    "testName" : "test162163"
  },
  "test01818" : {
    "methodSignature" : "public ObjectWriter writer(SerializationFeature first, SerializationFeature... other)",
    "methodName" : "writer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01818() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_DATES_WITH_ZONE_ID;\n    SerializationFeature[] serializationFeatureArray0 = new SerializationFeature[2];\n    objectMapper0.writer(serializationFeature0, serializationFeatureArray0);\n}",
    "testName" : "test01818"
  },
  "test05050" : {
    "methodSignature" : "public <T> T readValue(URL src, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05050() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MockFile mockFile0 = new MockFile(\"MIME-NO-LINEFEEDS\", \"MIME-NO-LINEFEEDS\");\n    URL uRL0 = mockFile0.toURL();\n    objectMapper0.readValue(uRL0, (JavaType) null);\n}",
    "testName" : "test05050"
  },
  "test09494" : {
    "methodSignature" : "public <T> T readValue(byte[] src, int offset, int len, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09494() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    byte[] byteArray0 = new byte[8];\n    Class<PipedWriter> class0 = PipedWriter.class;\n    JavaType javaType0 = TypeFactory.unknownType();\n    CollectionType collectionType0 = CollectionType.construct(class0, javaType0);\n    objectMapper0.readValue(byteArray0, 580, 2, (JavaType) collectionType0);\n}",
    "testName" : "test09494"
  },
  "test167168" : {
    "methodSignature" : "public <T> T treeToValue(TreeNode n, Class<T> valueType) throws JsonProcessingException",
    "methodName" : "treeToValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test167168() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    IntNode intNode0 = new IntNode(2);\n    Class<MockFileReader> class0 = MockFileReader.class;\n    objectMapper0.treeToValue((TreeNode) intNode0, class0);\n}",
    "testName" : "test167168"
  },
  "test06262" : {
    "methodSignature" : "public JsonNodeFactory getNodeFactory()",
    "methodName" : "getNodeFactory",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06262() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory((ObjectCodec) null);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, defaultSerializerProvider_Impl0, defaultDeserializationContext_Impl0);\n    JsonNodeFactory jsonNodeFactory0 = objectMapper0.getNodeFactory();\n}",
    "testName" : "test06262"
  },
  "test08282" : {
    "methodSignature" : "public ObjectReader reader(InjectableValues injectableValues)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08282() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    ObjectReader objectReader0 = objectMapper0.reader((InjectableValues) null);\n}",
    "testName" : "test08282"
  },
  "test07070" : {
    "methodSignature" : "public ObjectMapper setPropertyNamingStrategy(PropertyNamingStrategy s)",
    "methodName" : "setPropertyNamingStrategy",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07070() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    PropertyNamingStrategy.LowerCaseWithUnderscoresStrategy propertyNamingStrategy_LowerCaseWithUnderscoresStrategy0 = (PropertyNamingStrategy.LowerCaseWithUnderscoresStrategy) PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES;\n    ObjectMapper objectMapper1 = objectMapper0.setPropertyNamingStrategy(propertyNamingStrategy_LowerCaseWithUnderscoresStrategy0);\n}",
    "testName" : "test07070"
  },
  "test125125" : {
    "methodSignature" : "public ObjectMapper registerModule(Module module)",
    "methodName" : "registerModule",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test125125() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleModule simpleModule0 = new SimpleModule();\n    Class<StringReader> class0 = StringReader.class;\n    JsonSerializer<StringReader> jsonSerializer0 = (JsonSerializer<StringReader>) mock(JsonSerializer.class, new ViolatedAssumptionAnswer());\n    simpleModule0.addKeySerializer((Class<? extends StringReader>) class0, jsonSerializer0);\n    ObjectMapper objectMapper1 = objectMapper0.registerModule(simpleModule0);\n}",
    "testName" : "test125125"
  },
  "test0055" : {
    "methodSignature" : "public boolean canDeserialize(JavaType type)",
    "methodName" : "canDeserialize",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0055() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JavaType javaType0 = TypeFactory.unknownType();\n    boolean boolean0 = objectMapper0.canDeserialize(javaType0);\n}",
    "testName" : "test0055"
  },
  "test148148" : {
    "methodSignature" : "public ObjectMapper enableDefaultTyping(DefaultTyping applicability, JsonTypeInfo.As includeAs)",
    "methodName" : "enableDefaultTyping",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test148148() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.NON_CONCRETE_AND_ARRAYS;\n    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.EXTERNAL_PROPERTY;\n    objectMapper0.enableDefaultTyping(objectMapper_DefaultTyping0, jsonTypeInfo_As0);\n}",
    "testName" : "test148148"
  },
  "test05454" : {
    "methodSignature" : "public boolean isEnabled(JsonParser.Feature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05454() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_UNQUOTED_FIELD_NAMES;\n    boolean boolean0 = objectMapper0.isEnabled(jsonParser_Feature0);\n}",
    "testName" : "test05454"
  },
  "test09898" : {
    "methodSignature" : "public ObjectMapper disable(DeserializationFeature first, DeserializationFeature... f)",
    "methodName" : "disable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09898() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.USE_BIG_INTEGER_FOR_INTS;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[2];\n    objectMapper0.disable(deserializationFeature0, deserializationFeatureArray0);\n}",
    "testName" : "test09898"
  },
  "test06666" : {
    "methodSignature" : "public ObjectMapper setVisibility(PropertyAccessor forMethod, JsonAutoDetect.Visibility visibility)",
    "methodName" : "setVisibility",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06666() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    PropertyAccessor propertyAccessor0 = PropertyAccessor.IS_GETTER;\n    JsonAutoDetect.Visibility jsonAutoDetect_Visibility0 = JsonAutoDetect.Visibility.NON_PRIVATE;\n    ObjectMapper objectMapper1 = objectMapper0.setVisibility(propertyAccessor0, jsonAutoDetect_Visibility0);\n}",
    "testName" : "test06666"
  },
  "test03030" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03030() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleFilterProvider simpleFilterProvider0 = new SimpleFilterProvider();\n    ObjectWriter objectWriter0 = objectMapper0.writer((FilterProvider) simpleFilterProvider0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test03030"
  },
  "test08686" : {
    "methodSignature" : "public boolean canSerialize(Class<?> type, AtomicReference<Throwable> cause)",
    "methodName" : "canSerialize",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08686() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<FloatNode> class0 = FloatNode.class;\n    AtomicReference<Throwable> atomicReference0 = new AtomicReference<Throwable>();\n    boolean boolean0 = objectMapper0.canSerialize(class0, atomicReference0);\n}",
    "testName" : "test08686"
  },
  "test02222" : {
    "methodSignature" : "public boolean isEnabled(JsonGenerator.Feature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02222() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.FLUSH_PASSED_TO_STREAM;\n    boolean boolean0 = objectMapper0.isEnabled(jsonGenerator_Feature0);\n}",
    "testName" : "test02222"
  },
  "test07474" : {
    "methodSignature" : "public ObjectMapper enableDefaultTypingAsProperty(DefaultTyping applicability, String propertyName)",
    "methodName" : "enableDefaultTypingAsProperty",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07474() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.OBJECT_AND_NON_CONCRETE;\n    ObjectMapper objectMapper1 = objectMapper0.enableDefaultTypingAsProperty(objectMapper_DefaultTyping0, (String) null);\n}",
    "testName" : "test07474"
  },
  "test04242" : {
    "methodSignature" : "public ObjectReader reader(FormatSchema schema)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04242() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader((FormatSchema) null);\n}",
    "testName" : "test04242"
  },
  "test106106" : {
    "methodSignature" : "public JavaType constructType(Type t)",
    "methodName" : "constructType",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106106() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.constructType((Type) null);\n}",
    "testName" : "test106106"
  },
  "test01010" : {
    "methodSignature" : "public ObjectMapper setDateFormat(DateFormat dateFormat)",
    "methodName" : "setDateFormat",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01010() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DateFormat dateFormat0 = MockDateFormat.getDateTimeInstance();\n    ObjectMapper objectMapper1 = objectMapper0.setDateFormat(dateFormat0);\n}",
    "testName" : "test01010"
  },
  "test170171" : {
    "methodSignature" : "public <T extends JsonNode> T valueToTree(Object fromValue) throws IllegalArgumentException",
    "methodName" : "valueToTree",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test170171() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    LongNode longNode0 = objectMapper0.valueToTree((Object) null);\n}",
    "testName" : "test170171"
  },
  "test137137" : {
    "methodSignature" : "public boolean isShort()",
    "methodName" : "isShort",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test137137() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.NON_CONCRETE_AND_ARRAYS;\n    ObjectMapper.DefaultTypeResolverBuilder objectMapper_DefaultTypeResolverBuilder0 = new ObjectMapper.DefaultTypeResolverBuilder(objectMapper_DefaultTyping0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    BufferRecycler bufferRecycler0 = jsonFactory0._getBufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, objectMapper_DefaultTypeResolverBuilder0, false);\n    URI uRI0 = MockURI.aFileURI;\n    MockFile mockFile0 = new MockFile(uRI0);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, objectMapper0, mockPrintStream0);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringGeneratorDelegate filteringGeneratorDelegate0 = new FilteringGeneratorDelegate(uTF8JsonGenerator0, tokenFilter0, true, true);\n    IntNode intNode0 = IntNode.valueOf(68);\n    objectMapper0.writeTree((JsonGenerator) filteringGeneratorDelegate0, (TreeNode) intNode0);\n    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.PROPERTY;\n    ObjectMapper objectMapper1 = objectMapper0.enableDefaultTyping(objectMapper_DefaultTyping0, jsonTypeInfo_As0);\n    JsonNode jsonNode0 = objectMapper1.readTree((File) mockFile0);\n    jsonNode0.isShort();\n}",
    "testName" : "test137137"
  },
  "test182183" : {
    "methodSignature" : "public <T> T convertValue(Object fromValue, JavaType toValueType) throws IllegalArgumentException",
    "methodName" : "convertValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test182183() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<ArrayDeque> class0 = ArrayDeque.class;\n    CollectionType collectionType0 = typeFactory0.constructRawCollectionType(class0);\n    ArrayType arrayType0 = typeFactory0.constructArrayType((JavaType) collectionType0);\n    objectMapper0.convertValue((Object) arrayType0, (JavaType) collectionType0);\n}",
    "testName" : "test182183"
  },
  "test09090" : {
    "methodSignature" : "public <T> T readValue(URL src, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09090() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MockFile mockFile0 = new MockFile(\"&\");\n    URL uRL0 = mockFile0.toURL();\n    objectMapper0.readValue(uRL0, (TypeReference) null);\n}",
    "testName" : "test09090"
  },
  "test114114" : {
    "methodSignature" : "public <T> T readValue(InputStream src, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test114114() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    PipedInputStream pipedInputStream0 = new PipedInputStream(5);\n    TypeReference<TextNode> typeReference0 = (TypeReference<TextNode>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    objectMapper0.readValue((InputStream) pipedInputStream0, (TypeReference) typeReference0);\n}",
    "testName" : "test114114"
  },
  "test0066" : {
    "methodSignature" : "public ObjectMapper enable(DeserializationFeature feature)",
    "methodName" : "enable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0066() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.USE_JAVA_ARRAY_FOR_JSON_ARRAY;\n    ObjectMapper objectMapper1 = objectMapper0.enable(deserializationFeature0);\n}",
    "testName" : "test0066"
  },
  "test147147" : {
    "methodSignature" : "public ObjectMapper setMixInResolver(ClassIntrospector.MixInResolver resolver)",
    "methodName" : "setMixInResolver",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test147147() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleMixInResolver simpleMixInResolver0 = objectMapper0._mixIns;\n    ObjectMapper objectMapper1 = objectMapper0.setMixInResolver(simpleMixInResolver0);\n}",
    "testName" : "test147147"
  },
  "test179180" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test179180() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writerWithType((TypeReference<?>) null);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test179180"
  },
  "test101101" : {
    "methodSignature" : "public Class<?> findMixInClassFor(Class<?> cls)",
    "methodName" : "findMixInClassFor",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101101() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<BigIntegerNode> class0 = BigIntegerNode.class;\n    Class<?> class1 = objectMapper0.findMixInClassFor(class0);\n}",
    "testName" : "test101101"
  },
  "test150150" : {
    "methodSignature" : "public ObjectMapper configure(MapperFeature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test150150() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MapperFeature mapperFeature0 = MapperFeature.USE_STD_BEAN_NAMING;\n    ObjectMapper objectMapper1 = objectMapper0.configure(mapperFeature0, true);\n}",
    "testName" : "test150150"
  },
  "test175176" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test175176() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DefaultPrettyPrinter defaultPrettyPrinter0 = (DefaultPrettyPrinter) ObjectMapper._defaultPrettyPrinter;\n    ObjectWriter objectWriter0 = objectMapper0.writer((PrettyPrinter) defaultPrettyPrinter0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test175176"
  },
  "test109109" : {
    "methodSignature" : "public <T> T readValue(Reader src, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109109() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    char[] charArray0 = new char[0];\n    CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);\n    TypeReference<ObjectOutputStream> typeReference0 = (TypeReference<ObjectOutputStream>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    doReturn((Type) null).when(typeReference0).getType();\n    objectMapper0.readValue((Reader) charArrayReader0, (TypeReference) typeReference0);\n}",
    "testName" : "test109109"
  },
  "test04747" : {
    "methodSignature" : "public ObjectMapper enable(SerializationFeature f)",
    "methodName" : "enable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04747() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.WRAP_ROOT_VALUE;\n    ObjectMapper objectMapper1 = objectMapper0.enable(serializationFeature0);\n}",
    "testName" : "test04747"
  },
  "test02323" : {
    "methodSignature" : "public ObjectReader readerFor(TypeReference<?> type)",
    "methodName" : "readerFor",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02323() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.readerFor((TypeReference<?>) null);\n}",
    "testName" : "test02323"
  },
  "test05959" : {
    "methodSignature" : "public ObjectMapper setDefaultPrettyPrinter(PrettyPrinter pp)",
    "methodName" : "setDefaultPrettyPrinter",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05959() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MinimalPrettyPrinter minimalPrettyPrinter0 = new MinimalPrettyPrinter(\"=M>yjm3=#pVGc\");\n    ObjectMapper objectMapper1 = objectMapper0.setDefaultPrettyPrinter(minimalPrettyPrinter0);\n}",
    "testName" : "test05959"
  },
  "test153153" : {
    "methodSignature" : "public ObjectMapper configure(DeserializationFeature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test153153() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES;\n    ObjectMapper objectMapper1 = objectMapper0.configure(deserializationFeature0, false);\n}",
    "testName" : "test153153"
  },
  "test07979" : {
    "methodSignature" : "public <T> T readValue(JsonParser jp, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07979() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    byte[] byteArray0 = new byte[8];\n    JsonParser jsonParser0 = jsonFactory0.createParser(byteArray0);\n    JsonParserDelegate jsonParserDelegate0 = new JsonParserDelegate(jsonParser0);\n    Class<Throwable> class0 = Throwable.class;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<Object> class1 = Object.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class1);\n    MapType mapType0 = MapType.construct(class0, mapLikeType0, mapLikeType0);\n    objectMapper0.readValue((JsonParser) jsonParserDelegate0, (JavaType) mapType0);\n}",
    "testName" : "test07979"
  },
  "test01515" : {
    "methodSignature" : "public ObjectReader readerFor(JavaType type)",
    "methodName" : "readerFor",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01515() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    ObjectReader objectReader0 = objectMapper0.reader(jsonNodeFactory0);\n    TypeFactory typeFactory0 = objectReader0.getTypeFactory();\n    Class<FloatNode> class0 = FloatNode.class;\n    CollectionLikeType collectionLikeType0 = typeFactory0.constructRawCollectionLikeType(class0);\n    ObjectReader objectReader1 = objectMapper0.readerFor((JavaType) collectionLikeType0);\n}",
    "testName" : "test01515"
  },
  "test06767" : {
    "methodSignature" : "public ObjectMapper setSubtypeResolver(SubtypeResolver str)",
    "methodName" : "setSubtypeResolver",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06767() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    ObjectMapper objectMapper1 = objectMapper0.setSubtypeResolver(stdSubtypeResolver0);\n}",
    "testName" : "test06767"
  },
  "test03535" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03535() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JavaType javaType0 = TypeFactory.unknownType();\n    ObjectWriter objectWriter0 = objectMapper0.writerWithType(javaType0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test03535"
  },
  "test169170" : {
    "methodSignature" : "public <T extends JsonNode> T valueToTree(Object fromValue) throws IllegalArgumentException",
    "methodName" : "valueToTree",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test169170() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.FLUSH_AFTER_WRITE_VALUE;\n    ObjectWriter objectWriter0 = objectMapper0.writer(serializationFeature0);\n    objectMapper0.valueToTree((Object) objectWriter0);\n}",
    "testName" : "test169170"
  },
  "test02727" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02727() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DateFormat dateFormat0 = MockDateFormat.getTimeInstance();\n    ObjectWriter objectWriter0 = objectMapper0.writer(dateFormat0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test02727"
  },
  "test115115" : {
    "methodSignature" : "public TypeFactory getTypeFactory()",
    "methodName" : "getTypeFactory",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115115() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, defaultSerializerProvider_Impl0, defaultDeserializationContext_Impl0);\n    TypeFactory typeFactory0 = objectMapper0.getTypeFactory();\n}",
    "testName" : "test115115"
  },
  "test164165" : {
    "methodSignature" : "public abstract String asText()",
    "methodName" : "asText",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test164165() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    MockFile mockFile0 = new MockFile(\"JSON\", \"JSON\");\n    objectMapper0.writeValue((File) mockFile0, (Object) jsonFactory0);\n    URL uRL0 = mockFile0.toURL();\n    JsonNode jsonNode0 = objectMapper0.readTree(uRL0);\n    jsonNode0.asText();\n}",
    "testName" : "test164165"
  },
  "test01919" : {
    "methodSignature" : "public <T> T readValue(byte[] src, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01919() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    byte[] byteArray0 = new byte[9];\n    objectMapper0.readValue(byteArray0, (TypeReference) null);\n}",
    "testName" : "test01919"
  },
  "test03939" : {
    "methodSignature" : "public <T> T readValue(JsonParser jp, TypeReference<?> valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03939() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    HashMap<String, JsonNode> hashMap0 = new HashMap<String, JsonNode>();\n    ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0, hashMap0);\n    JsonParser jsonParser0 = objectMapper0.treeAsTokens(objectNode0);\n    TypeReference<OutputStreamWriter> typeReference0 = (TypeReference<OutputStreamWriter>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    doReturn((Type) null).when(typeReference0).getType();\n    objectMapper0.readValue(jsonParser0, (TypeReference<?>) typeReference0);\n}",
    "testName" : "test03939"
  },
  "test185186" : {
    "methodSignature" : "public void acceptJsonFormatVisitor(JavaType type, JsonFormatVisitorWrapper visitor) throws JsonMappingException",
    "methodName" : "acceptJsonFormatVisitor",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test185186() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base();\n    objectMapper0.acceptJsonFormatVisitor((JavaType) null, (JsonFormatVisitorWrapper) jsonFormatVisitorWrapper_Base0);\n}",
    "testName" : "test185186"
  },
  "test09595" : {
    "methodSignature" : "public ObjectMapper setSerializationInclusion(JsonInclude.Include incl)",
    "methodName" : "setSerializationInclusion",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09595() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.NON_ABSENT;\n    ObjectMapper objectMapper1 = objectMapper0.setSerializationInclusion(jsonInclude_Include0);\n}",
    "testName" : "test09595"
  },
  "test142142" : {
    "methodSignature" : "public ObjectMapper registerModule(Module module)",
    "methodName" : "registerModule",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test142142() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleModule simpleModule0 = new SimpleModule((String) null, (Version) null);\n    objectMapper0.registerModule(simpleModule0);\n}",
    "testName" : "test142142"
  },
  "test08383" : {
    "methodSignature" : "public boolean isEnabled(JsonFactory.Feature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08383() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory.Feature jsonFactory_Feature0 = JsonFactory.Feature.CANONICALIZE_FIELD_NAMES;\n    boolean boolean0 = objectMapper0.isEnabled(jsonFactory_Feature0);\n}",
    "testName" : "test08383"
  },
  "test05151" : {
    "methodSignature" : "public <T> T readValue(File src, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05151() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<ArrayDeque> class0 = ArrayDeque.class;\n    CollectionType collectionType0 = typeFactory0.constructRawCollectionType(class0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MockFile mockFile0 = new MockFile(\" / 0x\");\n    objectMapper0.readValue((File) mockFile0, (JavaType) collectionType0);\n}",
    "testName" : "test05151"
  },
  "test123123" : {
    "methodSignature" : "public ObjectMapper setSerializerProvider(DefaultSerializerProvider p)",
    "methodName" : "setSerializerProvider",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test123123() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    ObjectMapper objectMapper1 = objectMapper0.setSerializerProvider(defaultSerializerProvider_Impl0);\n}",
    "testName" : "test123123"
  },
  "test0077" : {
    "methodSignature" : "public ObjectReader readerWithView(Class<?> view)",
    "methodName" : "readerWithView",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0077() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<PipedOutputStream> class0 = PipedOutputStream.class;\n    ObjectReader objectReader0 = objectMapper0.readerWithView(class0);\n}",
    "testName" : "test0077"
  },
  "test104104" : {
    "methodSignature" : "public ObjectMapper registerModule(Module module)",
    "methodName" : "registerModule",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104104() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleModule simpleModule0 = new SimpleModule();\n    Class<Throwable>[] classArray0 = (Class<Throwable>[]) Array.newInstance(Class.class, 2);\n    Class<Throwable> class0 = Throwable.class;\n    classArray0[0] = class0;\n    classArray0[1] = class0;\n    simpleModule0.registerSubtypes(classArray0);\n    ObjectMapper objectMapper1 = objectMapper0.registerModule(simpleModule0);\n}",
    "testName" : "test104104"
  },
  "test08787" : {
    "methodSignature" : "public boolean isEnabled(SerializationFeature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08787() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_DATE_KEYS_AS_TIMESTAMPS;\n    boolean boolean0 = objectMapper0.isEnabled(serializationFeature0);\n}",
    "testName" : "test08787"
  },
  "test05555" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser jp, TypeReference<?> valueTypeRef) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05555() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    char[] charArray0 = new char[7];\n    JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);\n    objectMapper0.readValues(jsonParser0, (TypeReference<?>) null);\n}",
    "testName" : "test05555"
  },
  "test191192" : {
    "methodSignature" : "public boolean isFloat()",
    "methodName" : "isFloat",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test191192() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MockFile mockFile0 = new MockFile(\"JSON\");\n    objectMapper0.writeValue((File) mockFile0, (Object) null);\n    objectMapper0.readTree((File) mockFile0);\n    JsonNode jsonNode0 = objectMapper0.readTree((File) mockFile0);\n    jsonNode0.isFloat();\n}",
    "testName" : "test191192"
  },
  "test01111" : {
    "methodSignature" : "public ObjectMapper setLocale(Locale l)",
    "methodName" : "setLocale",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01111() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Locale locale0 = Locale.US;\n    ObjectMapper objectMapper1 = objectMapper0.setLocale(locale0);\n}",
    "testName" : "test01111"
  },
  "test06363" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06363() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writer();\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test06363"
  },
  "test03131" : {
    "methodSignature" : "public <T> T readValue(String content, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03131() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.readValue(\"E\", (JavaType) null);\n}",
    "testName" : "test03131"
  },
  "test172173" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test172173() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writerFor((Class<?>) null);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test172173"
  },
  "test131131" : {
    "methodSignature" : "public ObjectMapper registerModule(Module module)",
    "methodName" : "registerModule",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test131131() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleModule simpleModule0 = new SimpleModule();\n    BeanSerializerModifier beanSerializerModifier0 = mock(BeanSerializerModifier.class, new ViolatedAssumptionAnswer());\n    simpleModule0.setSerializerModifier(beanSerializerModifier0);\n    ObjectMapper objectMapper1 = objectMapper0.registerModule(simpleModule0);\n}",
    "testName" : "test131131"
  },
  "test09191" : {
    "methodSignature" : "public ObjectMapper setBase64Variant(Base64Variant v)",
    "methodName" : "setBase64Variant",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09191() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.setBase64Variant((Base64Variant) null);\n}",
    "testName" : "test09191"
  },
  "test112112" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112112() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ContextAttributes contextAttributes0 = ContextAttributes.Impl.getEmpty();\n    ObjectWriter objectWriter0 = objectMapper0.writer(contextAttributes0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test112112"
  },
  "test161162" : {
    "methodSignature" : "public <T extends TreeNode> T readTree(JsonParser jp) throws IOException, JsonProcessingException",
    "methodName" : "readTree",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test161162() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    char[] charArray0 = new char[0];\n    JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);\n    ObjectNode objectNode0 = objectMapper0.readTree(jsonParser0);\n}",
    "testName" : "test161162"
  },
  "test188189" : {
    "methodSignature" : "protected final void _configAndWriteValue(JsonGenerator g, Object value, Class<?> viewClass) throws IOException",
    "methodName" : "_configAndWriteValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test188189() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    BooleanNode booleanNode0 = jsonNodeFactory0.booleanNode(true);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, booleanNode0, false);\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, objectMapper0, pipedOutputStream0);\n    Class<DoubleNode> class0 = DoubleNode.class;\n    objectMapper0._configAndWriteValue(uTF8JsonGenerator0, booleanNode0, class0);\n}",
    "testName" : "test188189"
  }
}