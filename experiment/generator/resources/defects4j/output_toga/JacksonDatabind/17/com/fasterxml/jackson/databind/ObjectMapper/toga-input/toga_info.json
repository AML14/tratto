{
  "test141141" : {
    "methodSignature" : "public <T extends TreeNode> T readTree(JsonParser jp) throws IOException, JsonProcessingException",
    "methodName" : "readTree",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test141141() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"\\\"yw;Dx\");\n    jsonParser0.nextBooleanValue();\n    objectMapper0.readTree(jsonParser0);\n}",
    "testName" : "test141141"
  },
  "test0000" : {
    "methodSignature" : "public JsonNode readTree(String content) throws IOException, JsonProcessingException",
    "methodName" : "readTree",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.NON_CONCRETE_AND_ARRAYS;\n    objectMapper0.enableDefaultTyping(objectMapper_DefaultTyping0);\n    objectMapper0.readTree(\"\\\"NON_CONCRETE_AND_ARRAYS\\\"\");\n}",
    "testName" : "test0000"
  },
  "test0088" : {
    "methodSignature" : "public <T> T readValue(byte[] src, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0088() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    byte[] byteArray0 = new byte[0];\n    SimpleType simpleType0 = (SimpleType) TypeBindings.UNBOUND;\n    objectMapper0.readValue(byteArray0, (JavaType) simpleType0);\n}",
    "testName" : "test0088"
  },
  "test107107" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107107() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writer((ContextAttributes) null);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test107107"
  },
  "test03636" : {
    "methodSignature" : "protected Object _convert(Object fromValue, JavaType toValueType) throws IllegalArgumentException",
    "methodName" : "_convert",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03636() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    JavaType javaType0 = TypeFactory.unknownType();\n    objectMapper0._convert(jsonFactory0, javaType0);\n}",
    "testName" : "test03636"
  },
  "test02424" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02424() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(jsonFactory0);\n}",
    "testName" : "test02424"
  },
  "test130130" : {
    "methodSignature" : "public ObjectMapper registerModule(Module module)",
    "methodName" : "registerModule",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test130130() throws Throwable {\n    SimpleModule simpleModule0 = new SimpleModule(\"3X$MJi.gk|s3Qd{4\", (Version) null);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.registerModule(simpleModule0);\n}",
    "testName" : "test130130"
  },
  "test04848" : {
    "methodSignature" : "public <T> T readValue(File src, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04848() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MockFile mockFile0 = new MockFile(\") vs \", \") vs \");\n    objectMapper0.readValue((File) mockFile0, (JavaType) null);\n}",
    "testName" : "test04848"
  },
  "test05656" : {
    "methodSignature" : "public ObjectMapper configure(JsonParser.Feature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05656() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER;\n    ObjectMapper objectMapper1 = objectMapper0.configure(jsonParser_Feature0, true);\n}",
    "testName" : "test05656"
  },
  "test138138" : {
    "methodSignature" : "public ObjectMapper configure(SerializationFeature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test138138() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_NULL_MAP_VALUES;\n    ObjectMapper objectMapper1 = objectMapper0.configure(serializationFeature0, true);\n}",
    "testName" : "test138138"
  },
  "test06868" : {
    "methodSignature" : "public ObjectMapper setPropertyNamingStrategy(PropertyNamingStrategy s)",
    "methodName" : "setPropertyNamingStrategy",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06868() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    PropertyNamingStrategy.LowerCaseStrategy propertyNamingStrategy_LowerCaseStrategy0 = (PropertyNamingStrategy.LowerCaseStrategy) PropertyNamingStrategy.LOWER_CASE;\n    ObjectMapper objectMapper1 = objectMapper0.setPropertyNamingStrategy(propertyNamingStrategy_LowerCaseStrategy0);\n}",
    "testName" : "test06868"
  },
  "test02828" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02828() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleFilterProvider simpleFilterProvider0 = new SimpleFilterProvider();\n    ObjectWriter objectWriter0 = objectMapper0.writer((FilterProvider) simpleFilterProvider0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test02828"
  },
  "test113113" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113113() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();\n    objectMapper1.mixInCount();\n}",
    "testName" : "test113113"
  },
  "test01616" : {
    "methodSignature" : "public ObjectWriter writer(SerializationFeature first, SerializationFeature... other)",
    "methodName" : "writer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01616() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_ENUMS_USING_INDEX;\n    objectMapper0.writer(serializationFeature0, (SerializationFeature[]) null);\n}",
    "testName" : "test01616"
  },
  "test08484" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08484() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.clearProblemHandlers();\n    objectMapper1.mixInCount();\n}",
    "testName" : "test08484"
  },
  "test04040" : {
    "methodSignature" : "public ObjectReader reader(FormatSchema schema)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04040() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader((FormatSchema) null);\n}",
    "testName" : "test04040"
  },
  "test121121" : {
    "methodSignature" : "public String writeValueAsString(Object value) throws JsonProcessingException",
    "methodName" : "writeValueAsString",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121121() throws Throwable {\n    ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.NON_FINAL;\n    ObjectMapper.DefaultTypeResolverBuilder objectMapper_DefaultTypeResolverBuilder0 = new ObjectMapper.DefaultTypeResolverBuilder(objectMapper_DefaultTyping0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    byte[] byteArray0 = new byte[4];\n    objectMapper0.setDefaultTyping(objectMapper_DefaultTypeResolverBuilder0);\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-82), 0);\n    objectMapper0.writeValueAsString(byteArrayInputStream0);\n}",
    "testName" : "test121121"
  },
  "test0011" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.withExactBigDecimals(false);\n    ObjectMapper objectMapper1 = objectMapper0.setNodeFactory(jsonNodeFactory0);\n    objectMapper1.mixInCount();\n}",
    "testName" : "test0011"
  },
  "test0099" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0099() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DateFormat dateFormat0 = MockDateFormat.getTimeInstance();\n    ObjectMapper objectMapper1 = objectMapper0.setDateFormat(dateFormat0);\n    objectMapper1.mixInCount();\n}",
    "testName" : "test0099"
  },
  "test06060" : {
    "methodSignature" : "public JsonNodeFactory getNodeFactory()",
    "methodName" : "getNodeFactory",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06060() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonNodeFactory jsonNodeFactory0 = objectMapper0.getNodeFactory();\n}",
    "testName" : "test06060"
  },
  "test03232" : {
    "methodSignature" : "public void writeValue(File resultFile, Object value) throws IOException, JsonGenerationException, JsonMappingException",
    "methodName" : "writeValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03232() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MockFile mockFile0 = new MockFile(\"com.fasterxml.jackson.databind.ser.std.StdScalarSerializer\", \"com.fasterxml.jackson.databind.ser.std.StdScalarSerializer\");\n    objectMapper0.writeValue((File) mockFile0, (Object) mockFile0);\n}",
    "testName" : "test03232"
  },
  "test08888" : {
    "methodSignature" : "public <T> T readValue(byte[] src, int offset, int len, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08888() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    Class<CollectionType> class0 = CollectionType.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    byte[] byteArray0 = new byte[8];\n    objectMapper0.readValue(byteArray0, 2, (int) (-39), (JavaType) simpleType0);\n}",
    "testName" : "test08888"
  },
  "test102102" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102102() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN;\n    ObjectMapper objectMapper1 = objectMapper0.disable(serializationFeature0);\n    objectMapper1.mixInCount();\n}",
    "testName" : "test102102"
  },
  "test02020" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02020() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TimeZone timeZone0 = TimeZone.getDefault();\n    ObjectMapper objectMapper1 = objectMapper0.setTimeZone(timeZone0);\n    objectMapper1.mixInCount();\n}",
    "testName" : "test02020"
  },
  "test04444" : {
    "methodSignature" : "public VisibilityChecker<?> getVisibilityChecker()",
    "methodName" : "getVisibilityChecker",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04444() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    VisibilityChecker<?> visibilityChecker0 = objectMapper0.getVisibilityChecker();\n}",
    "testName" : "test04444"
  },
  "test07676" : {
    "methodSignature" : "public ObjectReader reader(DeserializationFeature first, DeserializationFeature... other)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07676() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_READING_DUP_TREE_KEY;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[7];\n    objectMapper0.reader(deserializationFeature0, deserializationFeatureArray0);\n}",
    "testName" : "test07676"
  },
  "test129129" : {
    "methodSignature" : "public ObjectMapper registerModule(Module module)",
    "methodName" : "registerModule",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test129129() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleModule simpleModule0 = new SimpleModule((String) null, (Version) null);\n    objectMapper0.registerModule(simpleModule0);\n}",
    "testName" : "test129129"
  },
  "test05252" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser jp, TypeReference<?> valueTypeRef) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05252() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);\n    JsonParser jsonParser0 = arrayNode0.traverse((ObjectCodec) objectMapper0);\n    TypeReference<CollectionType> typeReference0 = (TypeReference<CollectionType>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    doReturn((Type) null).when(typeReference0).getType();\n    objectMapper0.readValues(jsonParser0, (TypeReference<?>) typeReference0);\n}",
    "testName" : "test05252"
  },
  "test09696" : {
    "methodSignature" : "public ObjectMapper setConfig(SerializationConfig config)",
    "methodName" : "setConfig",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09696() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.setConfig((SerializationConfig) null);\n}",
    "testName" : "test09696"
  },
  "test06464" : {
    "methodSignature" : "public ObjectMapper setSubtypeResolver(SubtypeResolver str)",
    "methodName" : "setSubtypeResolver",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06464() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.setSubtypeResolver((SubtypeResolver) null);\n}",
    "testName" : "test06464"
  },
  "test152153" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test152153() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writerWithType((TypeReference<?>) null);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test152153"
  },
  "test110110" : {
    "methodSignature" : "public TypeFactory getTypeFactory()",
    "methodName" : "getTypeFactory",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110110() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeFactory typeFactory0 = objectMapper0.getTypeFactory();\n}",
    "testName" : "test110110"
  },
  "test133133" : {
    "methodSignature" : "public final Class<?> findMixInClassFor(Class<?> cls)",
    "methodName" : "findMixInClassFor",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test133133() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<Integer> class0 = Integer.class;\n    Class<?> class1 = objectMapper0.findMixInClassFor(class0);\n}",
    "testName" : "test133133"
  },
  "test08080" : {
    "methodSignature" : "public String asText()",
    "methodName" : "asText",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08080() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectNode objectNode0 = objectMapper0.createObjectNode();\n    objectNode0.asText();\n}",
    "testName" : "test08080"
  },
  "test118118" : {
    "methodSignature" : "public ObjectMapper setAnnotationIntrospectors(AnnotationIntrospector serializerAI, AnnotationIntrospector deserializerAI)",
    "methodName" : "setAnnotationIntrospectors",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118118() throws Throwable {\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null, defaultSerializerProvider_Impl0, defaultDeserializationContext_Impl0);\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = (JacksonAnnotationIntrospector) ObjectMapper.DEFAULT_ANNOTATION_INTROSPECTOR;\n    ObjectMapper objectMapper1 = objectMapper0.setAnnotationIntrospectors(jacksonAnnotationIntrospector0, jacksonAnnotationIntrospector0);\n}",
    "testName" : "test118118"
  },
  "test163164" : {
    "methodSignature" : "protected final void _configAndWriteValue(JsonGenerator jgen, Object value, Class<?> viewClass) throws IOException, JsonGenerationException, JsonMappingException",
    "methodName" : "_configAndWriteValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test163164() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<BufferedReader> class0 = BufferedReader.class;\n    objectMapper0._configAndWriteValue((JsonGenerator) null, (Object) null, class0);\n}",
    "testName" : "test163164"
  },
  "test149150" : {
    "methodSignature" : "public <T extends JsonNode> T valueToTree(Object fromValue) throws IllegalArgumentException",
    "methodName" : "valueToTree",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test149150() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, defaultSerializerProvider_Impl0, (DefaultDeserializationContext) null);\n    ArrayNode arrayNode0 = objectMapper0.valueToTree((Object) null);\n}",
    "testName" : "test149150"
  },
  "test143143" : {
    "methodSignature" : "public <T extends TreeNode> T readTree(JsonParser jp) throws IOException, JsonProcessingException",
    "methodName" : "readTree",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test143143() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"\");\n    DoubleNode doubleNode0 = objectMapper0.readTree(jsonParser0);\n}",
    "testName" : "test143143"
  },
  "test105105" : {
    "methodSignature" : "public ObjectMapper enableDefaultTyping()",
    "methodName" : "enableDefaultTyping",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105105() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.enableDefaultTyping();\n}",
    "testName" : "test105105"
  },
  "test157158" : {
    "methodSignature" : "public <T> T convertValue(Object fromValue, JavaType toValueType) throws IllegalArgumentException",
    "methodName" : "convertValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test157158() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ByteArrayOutputStream byteArrayOutputStream0 = objectMapper0.convertValue((Object) null, (JavaType) null);\n}",
    "testName" : "test157158"
  },
  "test06969" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06969() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    HandlerInstantiator handlerInstantiator0 = mock(HandlerInstantiator.class, new ViolatedAssumptionAnswer());\n    ObjectMapper objectMapper1 = (ObjectMapper) objectMapper0.setHandlerInstantiator(handlerInstantiator0);\n    objectMapper1.mixInCount();\n}",
    "testName" : "test06969"
  },
  "test03737" : {
    "methodSignature" : "public <T> T treeToValue(TreeNode n, Class<T> valueType) throws JsonProcessingException",
    "methodName" : "treeToValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03737() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<BufferedReader> class0 = BufferedReader.class;\n    JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(false);\n    ArrayNode arrayNode0 = jsonNodeFactory0.arrayNode();\n    NullNode nullNode0 = arrayNode0.nullNode();\n    BufferedReader bufferedReader0 = objectMapper0.treeToValue((TreeNode) nullNode0, class0);\n}",
    "testName" : "test03737"
  },
  "test04545" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04545() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_ENUMS_USING_INDEX;\n    ObjectMapper objectMapper1 = objectMapper0.enable(serializationFeature0);\n    objectMapper1.mixInCount();\n}",
    "testName" : "test04545"
  },
  "test08989" : {
    "methodSignature" : "public ObjectMapper setSerializationInclusion(JsonInclude.Include incl)",
    "methodName" : "setSerializationInclusion",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08989() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.ALWAYS;\n    ObjectMapper objectMapper1 = objectMapper0.setSerializationInclusion(jsonInclude_Include0);\n}",
    "testName" : "test08989"
  },
  "test02525" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02525() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DateFormat dateFormat0 = MockDateFormat.getDateTimeInstance();\n    ObjectWriter objectWriter0 = objectMapper0.writer(dateFormat0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test02525"
  },
  "test05757" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05757() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    Class<MapType> class0 = MapType.class;\n    objectMapper0.addMixInAnnotations(class0, class0);\n    objectMapper0.mixInCount();\n}",
    "testName" : "test05757"
  },
  "test01717" : {
    "methodSignature" : "public ObjectReader reader(JsonNodeFactory f)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01717() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(true);\n    ObjectReader objectReader0 = objectMapper0.reader(jsonNodeFactory0);\n}",
    "testName" : "test01717"
  },
  "test119119" : {
    "methodSignature" : "public ObjectMapper registerModule(Module module)",
    "methodName" : "registerModule",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119119() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader((ContextAttributes) null);\n    Version version0 = objectReader0.version();\n    SimpleModule simpleModule0 = new SimpleModule(\"3X$MJi.gk|s3Qd{4\", version0);\n    BeanSerializerModifier beanSerializerModifier0 = mock(BeanSerializerModifier.class, new ViolatedAssumptionAnswer());\n    simpleModule0.setSerializerModifier(beanSerializerModifier0);\n    ObjectMapper objectMapper1 = objectMapper0.registerModule(simpleModule0);\n}",
    "testName" : "test119119"
  },
  "test111111" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111111() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS;\n    ObjectMapper objectMapper1 = objectMapper0.disable(deserializationFeature0);\n    objectMapper1.mixInCount();\n}",
    "testName" : "test111111"
  },
  "test04949" : {
    "methodSignature" : "public ObjectMapper setSerializerFactory(SerializerFactory f)",
    "methodName" : "setSerializerFactory",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04949() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.setSerializerFactory((SerializerFactory) null);\n}",
    "testName" : "test04949"
  },
  "test160161" : {
    "methodSignature" : "protected final void _configAndWriteValue(JsonGenerator jgen, Object value) throws IOException, JsonGenerationException, JsonMappingException",
    "methodName" : "_configAndWriteValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test160161() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, defaultSerializerProvider_Impl0, (DefaultDeserializationContext) null);\n    JsonGenerator jsonGenerator0 = jsonFactory0.createGenerator((Writer) null);\n    objectMapper0._configAndWriteValue(jsonGenerator0, (Object) null);\n}",
    "testName" : "test160161"
  },
  "test02929" : {
    "methodSignature" : "public <T> T readValue(String content, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02929() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    Class<MockFileWriter> class0 = MockFileWriter.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    objectMapper0.readValue(\"<Qp:7?+sm-!WeSC\", (JavaType) simpleType0);\n}",
    "testName" : "test02929"
  },
  "test06161" : {
    "methodSignature" : "public DeserializationContext getDeserializationContext()",
    "methodName" : "getDeserializationContext",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06161() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();\n}",
    "testName" : "test06161"
  },
  "test07373" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07373() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    ObjectWriter objectWriter0 = objectMapper0.writer((CharacterEscapes) null);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test07373"
  },
  "test0033" : {
    "methodSignature" : "public boolean canDeserialize(JavaType type, AtomicReference<Throwable> cause)",
    "methodName" : "canDeserialize",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0033() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<MockFileWriter> class0 = MockFileWriter.class;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    JavaType javaType0 = typeFactory0.uncheckedSimpleType(class0);\n    MapLikeType mapLikeType0 = MapLikeType.construct(class0, javaType0, javaType0);\n    SQLTimeoutException sQLTimeoutException0 = new SQLTimeoutException(\"JSON\", \"JSON\", 2141);\n    DataTruncation dataTruncation0 = new DataTruncation(58, false, false, 1263, 3702, sQLTimeoutException0);\n    AtomicReference<Throwable> atomicReference0 = new AtomicReference<Throwable>(dataTruncation0);\n    boolean boolean0 = objectMapper0.canDeserialize((JavaType) mapLikeType0, atomicReference0);\n}",
    "testName" : "test0033"
  },
  "test08181" : {
    "methodSignature" : "public boolean canSerialize(Class<?> type, AtomicReference<Throwable> cause)",
    "methodName" : "canSerialize",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08181() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<CollectionType> class0 = CollectionType.class;\n    AtomicReference<Throwable> atomicReference0 = new AtomicReference<Throwable>();\n    boolean boolean0 = objectMapper0.canSerialize(class0, atomicReference0);\n}",
    "testName" : "test08181"
  },
  "test146147" : {
    "methodSignature" : "public JsonNode readTree(Reader r) throws IOException, JsonProcessingException",
    "methodName" : "readTree",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test146147() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MockFile mockFile0 = new MockFile(\"JSON\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n    JsonGenerator jsonGenerator0 = jsonFactory0.createGenerator((OutputStream) mockPrintStream0);\n    IntNode intNode0 = new IntNode(23);\n    objectMapper0.writeTree(jsonGenerator0, (TreeNode) intNode0);\n    JsonNode jsonNode0 = objectMapper0.readTree((File) mockFile0);\n    MockFileReader mockFileReader0 = new MockFileReader(\"JSON\");\n    JsonNode jsonNode1 = objectMapper0.readTree((Reader) mockFileReader0);\n}",
    "testName" : "test146147"
  },
  "test07777" : {
    "methodSignature" : "public boolean isEnabled(JsonFactory.Feature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07777() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory.Feature jsonFactory_Feature0 = JsonFactory.Feature.CANONICALIZE_FIELD_NAMES;\n    boolean boolean0 = objectMapper0.isEnabled(jsonFactory_Feature0);\n}",
    "testName" : "test07777"
  },
  "test03333" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03333() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<FilterOutputStream> class0 = FilterOutputStream.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    ArrayType arrayType0 = typeFactory0.constructArrayType((JavaType) simpleType0);\n    ObjectWriter objectWriter0 = objectMapper0.writerWithType((JavaType) arrayType0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test03333"
  },
  "test100100" : {
    "methodSignature" : "public <T> T readValue(File src, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100100() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MockFile mockFile0 = new MockFile(\"$RnOpz4ewP3':\");\n    objectMapper0.readValue((File) mockFile0, (TypeReference) null);\n}",
    "testName" : "test100100"
  },
  "test04141" : {
    "methodSignature" : "public ObjectReader reader(TypeReference<?> type)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04141() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    objectMapper0.reader((TypeReference<?>) null);\n}",
    "testName" : "test04141"
  },
  "test09797" : {
    "methodSignature" : "public JsonToken asToken()",
    "methodName" : "asToken",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09797() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ArrayNode arrayNode0 = objectMapper0.createArrayNode();\n    arrayNode0.asToken();\n}",
    "testName" : "test09797"
  },
  "test159160" : {
    "methodSignature" : "public void acceptJsonFormatVisitor(JavaType type, JsonFormatVisitorWrapper visitor) throws JsonMappingException",
    "methodName" : "acceptJsonFormatVisitor",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test159160() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, (DefaultSerializerProvider) null, defaultDeserializationContext_Impl0);\n    JsonFormatVisitorWrapper jsonFormatVisitorWrapper0 = mock(JsonFormatVisitorWrapper.class, new ViolatedAssumptionAnswer());\n    objectMapper0.acceptJsonFormatVisitor((JavaType) null, jsonFormatVisitorWrapper0);\n}",
    "testName" : "test159160"
  },
  "test08585" : {
    "methodSignature" : "public <T> T readValue(URL src, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08585() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeReference<MockFileWriter> typeReference0 = (TypeReference<MockFileWriter>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    objectMapper0.readValue((URL) null, (TypeReference) typeReference0);\n}",
    "testName" : "test08585"
  },
  "test02121" : {
    "methodSignature" : "public boolean isEnabled(JsonGenerator.Feature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02121() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.QUOTE_FIELD_NAMES;\n    boolean boolean0 = objectMapper0.isEnabled(jsonGenerator_Feature0);\n}",
    "testName" : "test02121"
  },
  "test05353" : {
    "methodSignature" : "protected void _checkInvalidCopy(Class<?> exp)",
    "methodName" : "_checkInvalidCopy",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05353() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<LongNode> class0 = LongNode.class;\n    objectMapper0._checkInvalidCopy(class0);\n}",
    "testName" : "test05353"
  },
  "test108108" : {
    "methodSignature" : "public ObjectMapper addHandler(DeserializationProblemHandler h)",
    "methodName" : "addHandler",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108108() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    ObjectMapper objectMapper1 = objectMapper0.addHandler(deserializationProblemHandler0);\n}",
    "testName" : "test108108"
  },
  "test154155" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test154155() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writer((PrettyPrinter) null);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test154155"
  },
  "test135135" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test135135() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MapperFeature mapperFeature0 = MapperFeature.USE_WRAPPER_NAME_AS_PROPERTY_NAME;\n    ObjectMapper objectMapper1 = objectMapper0.configure(mapperFeature0, false);\n    objectMapper1.mixInCount();\n}",
    "testName" : "test135135"
  },
  "test116116" : {
    "methodSignature" : "public <T> T readValue(String content, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test116116() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.readValue((String) null, (TypeReference) null);\n}",
    "testName" : "test116116"
  },
  "test0044" : {
    "methodSignature" : "public final ObjectMapper addMixIn(Class<?> target, Class<?> mixinSource)",
    "methodName" : "addMixIn",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0044() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<TextNode> class0 = TextNode.class;\n    Class<CharArrayReader> class1 = CharArrayReader.class;\n    ObjectMapper objectMapper1 = objectMapper0.addMixIn(class0, class1);\n}",
    "testName" : "test0044"
  },
  "test145145" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test145145() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    byte[] byteArray0 = new byte[2];\n    byteArray0[0] = (byte) 51;\n    JsonNode jsonNode0 = objectMapper0.readTree(byteArray0);\n    jsonNode0.floatValue();\n}",
    "testName" : "test145145"
  },
  "test103103" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103103() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writer((Base64Variant) null);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test103103"
  },
  "test05858" : {
    "methodSignature" : "public final <T> T readValue(JsonParser jp, ResolvedType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05858() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);\n    byte[] byteArray0 = new byte[8];\n    JsonParser jsonParser0 = jsonFactory0.createParser(byteArray0);\n    objectMapper0.readValue(jsonParser0, (ResolvedType) null);\n}",
    "testName" : "test05858"
  },
  "test03434" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03434() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<StringReader> class0 = StringReader.class;\n    ObjectWriter objectWriter0 = objectMapper0.writerWithView(class0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test03434"
  },
  "test04646" : {
    "methodSignature" : "public ObjectMapper enable(DeserializationFeature first, DeserializationFeature... f)",
    "methodName" : "enable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04646() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[1];\n    objectMapper0.enable(deserializationFeature0, deserializationFeatureArray0);\n}",
    "testName" : "test04646"
  },
  "test07878" : {
    "methodSignature" : "public String writeValueAsString(Object value) throws JsonProcessingException",
    "methodName" : "writeValueAsString",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07878() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.NON_CONCRETE_AND_ARRAYS;\n    String string0 = objectMapper0.writeValueAsString(objectMapper_DefaultTyping0);\n}",
    "testName" : "test07878"
  },
  "test01414" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01414() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.copy();\n    objectMapper1.mixInCount();\n}",
    "testName" : "test01414"
  },
  "test134134" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test134134() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    int int0 = objectMapper0.mixInCount();\n}",
    "testName" : "test134134"
  },
  "test117117" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test117117() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    ObjectMapper objectMapper1 = objectMapper0.setSerializerProvider(defaultSerializerProvider_Impl0);\n    objectMapper1.mixInCount();\n}",
    "testName" : "test117117"
  },
  "test03838" : {
    "methodSignature" : "public <T> T readValue(Reader src, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03838() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    StringReader stringReader0 = new StringReader(\"R8?F6CIrFs85?iO4n\");\n    objectMapper0.readValue((Reader) stringReader0, (JavaType) null);\n}",
    "testName" : "test03838"
  },
  "test162163" : {
    "methodSignature" : "protected final void _configAndWriteValue(JsonGenerator jgen, Object value, Class<?> viewClass) throws IOException, JsonGenerationException, JsonMappingException",
    "methodName" : "_configAndWriteValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test162163() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, objectMapper0, (Writer) null);\n    JsonGeneratorDelegate jsonGeneratorDelegate0 = new JsonGeneratorDelegate(writerBasedJsonGenerator0);\n    Class<NullNode> class0 = NullNode.class;\n    objectMapper0._configAndWriteValue(jsonGeneratorDelegate0, (Object) null, class0);\n}",
    "testName" : "test162163"
  },
  "test01818" : {
    "methodSignature" : "public <T> T readValue(byte[] src, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01818() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    byte[] byteArray0 = new byte[0];\n    TypeReference<BooleanNode> typeReference0 = (TypeReference<BooleanNode>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    doReturn((Type) null).when(typeReference0).getType();\n    objectMapper0.readValue(byteArray0, (TypeReference) typeReference0);\n}",
    "testName" : "test01818"
  },
  "test05050" : {
    "methodSignature" : "public <T> T readValue(InputStream src, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05050() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    SimpleType simpleType0 = (SimpleType) TypeBindings.UNBOUND;\n    ArrayType arrayType0 = typeFactory0.constructArrayType((JavaType) simpleType0);\n    byte[] byteArray0 = objectMapper0.writeValueAsBytes(arrayType0);\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 33, 33);\n    objectMapper0.readValue((InputStream) byteArrayInputStream0, (JavaType) simpleType0);\n}",
    "testName" : "test05050"
  },
  "test09494" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09494() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writer((FormatSchema) null);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test09494"
  },
  "test06262" : {
    "methodSignature" : "public ObjectMapper setAnnotationIntrospector(AnnotationIntrospector ai)",
    "methodName" : "setAnnotationIntrospector",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06262() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();\n    AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);\n    ObjectMapper objectMapper1 = objectMapper0.setAnnotationIntrospector(annotationIntrospector1);\n}",
    "testName" : "test06262"
  },
  "test140140" : {
    "methodSignature" : "public ObjectMapper configure(DeserializationFeature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test140140() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_READING_DUP_TREE_KEY;\n    ObjectMapper objectMapper1 = objectMapper0.configure(deserializationFeature0, true);\n}",
    "testName" : "test140140"
  },
  "test08282" : {
    "methodSignature" : "public boolean isEnabled(SerializationFeature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08282() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_ENUMS_USING_TO_STRING;\n    boolean boolean0 = objectMapper0.isEnabled(serializationFeature0);\n}",
    "testName" : "test08282"
  },
  "test07070" : {
    "methodSignature" : "public boolean canSerialize(Class<?> type)",
    "methodName" : "canSerialize",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07070() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<MockFileReader> class0 = MockFileReader.class;\n    boolean boolean0 = objectMapper0.canSerialize(class0);\n}",
    "testName" : "test07070"
  },
  "test0055" : {
    "methodSignature" : "public ObjectMapper enable(SerializationFeature first, SerializationFeature... f)",
    "methodName" : "enable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0055() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_NULL_MAP_VALUES;\n    SerializationFeature[] serializationFeatureArray0 = new SerializationFeature[4];\n    objectMapper0.enable(serializationFeature0, serializationFeatureArray0);\n}",
    "testName" : "test0055"
  },
  "test148149" : {
    "methodSignature" : "public <T extends JsonNode> T valueToTree(Object fromValue) throws IllegalArgumentException",
    "methodName" : "valueToTree",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test148149() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    objectMapper0.valueToTree((Object) charsToNameCanonicalizer0);\n}",
    "testName" : "test148149"
  },
  "test05454" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05454() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    BufferRecycler bufferRecycler0 = jsonFactory0._getBufferRecycler();\n    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 11);\n    objectMapper0.writeValue((OutputStream) byteArrayBuilder0, (Object) null);\n    objectMapper0.mixInCount();\n}",
    "testName" : "test05454"
  },
  "test09898" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09898() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"0o\");\n    Version version0 = jsonParser0.version();\n    SimpleModule simpleModule0 = new SimpleModule(\") does not override copy(); it has to\", version0);\n    NamedType[] namedTypeArray0 = new NamedType[6];\n    SimpleModule simpleModule1 = simpleModule0.registerSubtypes(namedTypeArray0);\n    ObjectMapper objectMapper1 = objectMapper0.registerModule(simpleModule1);\n    objectMapper1.mixInCount();\n}",
    "testName" : "test09898"
  },
  "test06666" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06666() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();\n    ObjectMapper objectMapper1 = objectMapper0.setInjectableValues(injectableValues_Std0);\n    objectMapper1.mixInCount();\n}",
    "testName" : "test06666"
  },
  "test03030" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03030() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    HashMap<String, ByteArrayInputStream> hashMap0 = new HashMap<String, ByteArrayInputStream>();\n    SimpleFilterProvider simpleFilterProvider0 = new SimpleFilterProvider(hashMap0);\n    objectMapper0.setFilters(simpleFilterProvider0);\n    objectMapper0.mixInCount();\n}",
    "testName" : "test03030"
  },
  "test08686" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08686() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.setBase64Variant((Base64Variant) null);\n    objectMapper1.mixInCount();\n}",
    "testName" : "test08686"
  },
  "test02222" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02222() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.findAndRegisterModules();\n    objectMapper1.mixInCount();\n}",
    "testName" : "test02222"
  },
  "test07474" : {
    "methodSignature" : "public <T> T readValue(JsonParser jp, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07474() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<Map> class0 = Map.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class0, class0);\n    objectMapper0.readValue((JsonParser) null, (JavaType) mapType0);\n}",
    "testName" : "test07474"
  },
  "test04242" : {
    "methodSignature" : "public <T> T readValue(JsonParser jp, TypeReference<?> valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04242() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();\n    ObjectReader objectReader0 = objectMapper0.reader((InjectableValues) injectableValues_Std0);\n    JsonFactory jsonFactory0 = new JsonFactory(objectReader0);\n    char[] charArray0 = new char[3];\n    JsonParser jsonParser0 = jsonFactory0.createParser(charArray0, 1293, 114);\n    TypeReference<BeanDeserializer> typeReference0 = (TypeReference<BeanDeserializer>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    doReturn((Type) null).when(typeReference0).getType();\n    objectMapper0.readValue(jsonParser0, (TypeReference<?>) typeReference0);\n}",
    "testName" : "test04242"
  },
  "test106106" : {
    "methodSignature" : "public <T> T convertValue(Object fromValue, TypeReference<?> toValueTypeRef) throws IllegalArgumentException",
    "methodName" : "convertValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106106() throws Throwable {\n    ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.NON_FINAL;\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.convertValue((Object) objectMapper_DefaultTyping0, (TypeReference<?>) null);\n}",
    "testName" : "test106106"
  },
  "test01010" : {
    "methodSignature" : "public ObjectMapper setLocale(Locale l)",
    "methodName" : "setLocale",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01010() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.setLocale((Locale) null);\n}",
    "testName" : "test01010"
  },
  "test156157" : {
    "methodSignature" : "public <T> T convertValue(Object fromValue, JavaType toValueType) throws IllegalArgumentException",
    "methodName" : "convertValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test156157() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    objectMapper0.convertValue((Object) bufferRecycler0, (JavaType) null);\n}",
    "testName" : "test156157"
  },
  "test137137" : {
    "methodSignature" : "public ObjectMapper configure(SerializationFeature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test137137() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_DATES_AS_TIMESTAMPS;\n    ObjectMapper objectMapper1 = objectMapper0.configure(serializationFeature0, false);\n}",
    "testName" : "test137137"
  },
  "test09090" : {
    "methodSignature" : "public ObjectMapper disable(SerializationFeature first, SerializationFeature... f)",
    "methodName" : "disable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09090() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_ENUMS_USING_INDEX;\n    SerializationFeature[] serializationFeatureArray0 = new SerializationFeature[1];\n    objectMapper0.disable(serializationFeature0, serializationFeatureArray0);\n}",
    "testName" : "test09090"
  },
  "test114114" : {
    "methodSignature" : "public boolean isEnabled(DeserializationFeature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test114114() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.WRAP_EXCEPTIONS;\n    boolean boolean0 = objectMapper0.isEnabled(deserializationFeature0);\n}",
    "testName" : "test114114"
  },
  "test0066" : {
    "methodSignature" : "public boolean canDeserialize(JavaType type)",
    "methodName" : "canDeserialize",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0066() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<BufferedReader> class0 = BufferedReader.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    boolean boolean0 = objectMapper0.canDeserialize((JavaType) simpleType0);\n}",
    "testName" : "test0066"
  },
  "test101101" : {
    "methodSignature" : "public boolean isConcrete()",
    "methodName" : "isConcrete",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101101() throws Throwable {\n    Class<BufferedWriter> class0 = BufferedWriter.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JavaType javaType0 = objectMapper0.constructType(simpleType0);\n    javaType0.isConcrete();\n}",
    "testName" : "test101101"
  },
  "test150151" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test150151() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<MapType> class0 = MapType.class;\n    ObjectWriter objectWriter0 = objectMapper0.writerWithType(class0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test150151"
  },
  "test109109" : {
    "methodSignature" : "public <T> T readValue(InputStream src, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109109() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    byte[] byteArray0 = new byte[1];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    TypeReference<MapType> typeReference0 = (TypeReference<MapType>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    doReturn((Type) null).when(typeReference0).getType();\n    objectMapper0.readValue((InputStream) byteArrayInputStream0, (TypeReference) typeReference0);\n}",
    "testName" : "test109109"
  },
  "test04747" : {
    "methodSignature" : "public <T> T readValue(URL src, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04747() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    Class<ArrayNode> class0 = ArrayNode.class;\n    SimpleType simpleType0 = SimpleType.construct(class0);\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    URL uRL0 = MockURL.getFtpExample();\n    objectMapper0.readValue(uRL0, (JavaType) simpleType0);\n}",
    "testName" : "test04747"
  },
  "test153154" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test153154() throws Throwable {\n    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writer((PrettyPrinter) defaultPrettyPrinter0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test153154"
  },
  "test02323" : {
    "methodSignature" : "public ObjectReader reader(Base64Variant defaultBase64)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02323() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader((Base64Variant) null);\n}",
    "testName" : "test02323"
  },
  "test05959" : {
    "methodSignature" : "public ObjectReader readerWithView(Class<?> view)",
    "methodName" : "readerWithView",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05959() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<ArrayType> class0 = ArrayType.class;\n    ObjectReader objectReader0 = objectMapper0.readerWithView(class0);\n}",
    "testName" : "test05959"
  },
  "test07979" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07979() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS;\n    ObjectWriter objectWriter0 = objectMapper0.writer(serializationFeature0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test07979"
  },
  "test136136" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test136136() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MapperFeature mapperFeature0 = MapperFeature.AUTO_DETECT_GETTERS;\n    ObjectMapper objectMapper1 = objectMapper0.configure(mapperFeature0, true);\n    objectMapper1.mixInCount();\n}",
    "testName" : "test136136"
  },
  "test06767" : {
    "methodSignature" : "public SerializerProvider getSerializerProvider()",
    "methodName" : "getSerializerProvider",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06767() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, (DefaultSerializerProvider) null, defaultDeserializationContext_Impl0);\n    SerializerProvider serializerProvider0 = objectMapper0.getSerializerProvider();\n}",
    "testName" : "test06767"
  },
  "test03535" : {
    "methodSignature" : "public <T> T readValue(byte[] src, int offset, int len, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03535() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeReference<BigIntegerNode> typeReference0 = (TypeReference<BigIntegerNode>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    objectMapper0.readValue((byte[]) null, 0, 717, (TypeReference) typeReference0);\n}",
    "testName" : "test03535"
  },
  "test02727" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02727() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.setConfig((DeserializationConfig) null);\n    objectMapper1.mixInCount();\n}",
    "testName" : "test02727"
  },
  "test115115" : {
    "methodSignature" : "public ObjectMapper setTypeFactory(TypeFactory f)",
    "methodName" : "setTypeFactory",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115115() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ObjectMapper objectMapper1 = objectMapper0.setTypeFactory(typeFactory0);\n}",
    "testName" : "test115115"
  },
  "test164165" : {
    "methodSignature" : "public boolean isIntegralNumber()",
    "methodName" : "isIntegralNumber",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test164165() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonNode jsonNode0 = objectMapper0.readTree(\"null\");\n    jsonNode0.isIntegralNumber();\n}",
    "testName" : "test164165"
  },
  "test142142" : {
    "methodSignature" : "public <T extends TreeNode> T readTree(JsonParser jp) throws IOException, JsonProcessingException",
    "methodName" : "readTree",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test142142() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"\\\"yw;Dx\");\n    objectMapper0.readTree(jsonParser0);\n}",
    "testName" : "test142142"
  },
  "test08383" : {
    "methodSignature" : "public SerializerFactory getSerializerFactory()",
    "methodName" : "getSerializerFactory",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08383() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    SerializerFactory serializerFactory0 = objectMapper0.getSerializerFactory();\n}",
    "testName" : "test08383"
  },
  "test05151" : {
    "methodSignature" : "public boolean isEnabled(JsonParser.Feature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05151() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER;\n    boolean boolean0 = objectMapper0.isEnabled(jsonParser_Feature0);\n}",
    "testName" : "test05151"
  },
  "test0077" : {
    "methodSignature" : "public ObjectMapper enable(DeserializationFeature feature)",
    "methodName" : "enable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0077() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES;\n    ObjectMapper objectMapper1 = objectMapper0.enable(deserializationFeature0);\n}",
    "testName" : "test0077"
  },
  "test07171" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07171() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.NON_FINAL;\n    ObjectMapper objectMapper1 = objectMapper0.enableDefaultTypingAsProperty(objectMapper_DefaultTyping0, \"JSON\");\n    objectMapper1.mixInCount();\n}",
    "testName" : "test07171"
  },
  "test09999" : {
    "methodSignature" : "public boolean isEnabled(MapperFeature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09999() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MapperFeature mapperFeature0 = MapperFeature.AUTO_DETECT_SETTERS;\n    boolean boolean0 = objectMapper0.isEnabled(mapperFeature0);\n}",
    "testName" : "test09999"
  },
  "test104104" : {
    "methodSignature" : "public <T> T readValue(Reader src, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104104() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileReader mockFileReader0 = new MockFileReader(fileDescriptor0);\n    TypeReference<MockPrintWriter> typeReference0 = (TypeReference<MockPrintWriter>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    doReturn((Type) null).when(typeReference0).getType();\n    objectMapper0.readValue((Reader) mockFileReader0, (TypeReference) typeReference0);\n}",
    "testName" : "test104104"
  },
  "test08787" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08787() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writerWithDefaultPrettyPrinter();\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test08787"
  },
  "test05555" : {
    "methodSignature" : "public void writeValue(Writer w, Object value) throws IOException, JsonGenerationException, JsonMappingException",
    "methodName" : "writeValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05555() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    CharArrayWriter charArrayWriter0 = new CharArrayWriter();\n    objectMapper0.writeValue((Writer) charArrayWriter0, (Object) charArrayWriter0);\n}",
    "testName" : "test05555"
  },
  "test06363" : {
    "methodSignature" : "public ObjectMapper setVisibility(PropertyAccessor forMethod, JsonAutoDetect.Visibility visibility)",
    "methodName" : "setVisibility",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06363() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    PropertyAccessor propertyAccessor0 = PropertyAccessor.CREATOR;\n    JsonAutoDetect.Visibility jsonAutoDetect_Visibility0 = JsonAutoDetect.Visibility.NONE;\n    ObjectMapper objectMapper1 = objectMapper0.setVisibility(propertyAccessor0, jsonAutoDetect_Visibility0);\n}",
    "testName" : "test06363"
  },
  "test03131" : {
    "methodSignature" : "public ObjectReader reader(DeserializationFeature feature)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03131() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.READ_ENUMS_USING_TO_STRING;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n}",
    "testName" : "test03131"
  },
  "test07575" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser jp, ResolvedType valueType) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07575() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleType simpleType0 = (SimpleType) TypeBindings.UNBOUND;\n    MappingIterator<MockFileReader> mappingIterator0 = objectMapper0.readValues((JsonParser) null, (ResolvedType) simpleType0);\n}",
    "testName" : "test07575"
  },
  "test158159" : {
    "methodSignature" : "protected Object _convert(Object fromValue, JavaType toValueType) throws IllegalArgumentException",
    "methodName" : "_convert",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test158159() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<Map> class0 = Map.class;\n    MapType mapType0 = typeFactory0.constructRawMapType(class0);\n    Object object0 = objectMapper0._convert((Object) null, mapType0);\n}",
    "testName" : "test158159"
  },
  "test139139" : {
    "methodSignature" : "public ObjectMapper configure(DeserializationFeature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test139139() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_READING_DUP_TREE_KEY;\n    ObjectMapper objectMapper1 = objectMapper0.configure(deserializationFeature0, false);\n}",
    "testName" : "test139139"
  },
  "test09191" : {
    "methodSignature" : "public ObjectMapper disable(DeserializationFeature first, DeserializationFeature... f)",
    "methodName" : "disable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09191() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[7];\n    objectMapper0.disable(deserializationFeature0, deserializationFeatureArray0);\n}",
    "testName" : "test09191"
  },
  "test112112" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112112() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT;\n    ObjectMapper objectMapper1 = objectMapper0.configure(jsonGenerator_Feature0, false);\n    objectMapper1.mixInCount();\n}",
    "testName" : "test112112"
  }
}