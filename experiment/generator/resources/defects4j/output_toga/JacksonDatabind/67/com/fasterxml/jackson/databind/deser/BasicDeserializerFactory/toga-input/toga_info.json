{
  "test1212" : {
    "methodSignature" : "protected PropertyName _findParamName(AnnotatedParameter param, AnnotationIntrospector intr)",
    "methodName" : "_findParamName",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    AnnotationMap annotationMap0 = new AnnotationMap();\n    AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, (JavaType) null, annotationMap0, (-1962));\n    PropertyName propertyName0 = beanDeserializerFactory0._findParamName(annotatedParameter0, (AnnotationIntrospector) null);\n}",
    "testName" : "test1212"
  },
  "test2323" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser p, ResolvedType valueType) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    Class<DataTruncation> class0 = DataTruncation.class;\n    TypeBindings typeBindings0 = TypeBindings.create(class0, (JavaType[]) null);\n    Class<SQLNonTransientConnectionException> class1 = SQLNonTransientConnectionException.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class1, typeBindings0);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<EnumSet> class2 = EnumSet.class;\n    CollectionType collectionType0 = typeFactory0.constructCollectionType((Class<? extends Collection>) class2, (JavaType) resolvedRecursiveType0);\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.withExactBigDecimals(true);\n    ArrayNode arrayNode0 = jsonNodeFactory0.arrayNode(1);\n    JsonParser jsonParser0 = arrayNode0.traverse((ObjectCodec) objectMapper0);\n    objectMapper0.readValues(jsonParser0, (ResolvedType) collectionType0);\n}",
    "testName" : "test2323"
  },
  "test3434" : {
    "methodSignature" : "protected AnnotatedMethod _findJsonValueFor(DeserializationConfig config, JavaType enumType)",
    "methodName" : "_findJsonValueFor",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    Class<SQLIntegrityConstraintViolationException> class0 = SQLIntegrityConstraintViolationException.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    beanDeserializerFactory0._findJsonValueFor((DeserializationConfig) null, simpleType0);\n}",
    "testName" : "test3434"
  },
  "test1313" : {
    "methodSignature" : "protected PropertyName _findImplicitParamName(AnnotatedParameter param, AnnotationIntrospector intr)",
    "methodName" : "_findImplicitParamName",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();\n    PropertyName propertyName0 = beanDeserializerFactory0._findImplicitParamName((AnnotatedParameter) null, annotationIntrospector0);\n}",
    "testName" : "test1313"
  },
  "test2424" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser p, ResolvedType valueType) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    Class<String> class0 = String.class;\n    TypeBindings typeBindings0 = TypeBindings.create(class0, (JavaType[]) null);\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<ArrayList> class1 = ArrayList.class;\n    CollectionType collectionType0 = typeFactory0.constructCollectionType((Class<? extends Collection>) class1, (JavaType) resolvedRecursiveType0);\n    MappingIterator<LinkedHashMap<SQLSyntaxErrorException, Object>> mappingIterator0 = objectMapper0.readValues((JsonParser) null, (ResolvedType) collectionType0);\n}",
    "testName" : "test2424"
  },
  "test3535" : {
    "methodSignature" : "protected AnnotatedMethod _findJsonValueFor(DeserializationConfig config, JavaType enumType)",
    "methodName" : "_findJsonValueFor",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    AnnotatedMethod annotatedMethod0 = beanDeserializerFactory0._findJsonValueFor((DeserializationConfig) null, (JavaType) null);\n}",
    "testName" : "test3535"
  },
  "test1010" : {
    "methodSignature" : "public ValueInstantiator _valueInstantiatorInstance(DeserializationConfig config, Annotated annotated, Object instDef) throws JsonMappingException",
    "methodName" : "_valueInstantiatorInstance",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);\n    beanDeserializerFactory0._valueInstantiatorInstance((DeserializationConfig) null, (Annotated) null, deserializerFactoryConfig0);\n}",
    "testName" : "test1010"
  },
  "test2121" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser p, ResolvedType valueType) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<LongNode> class0 = LongNode.class;\n    ArrayType arrayType0 = typeFactory0.constructArrayType(class0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleModule simpleModule0 = new SimpleModule();\n    BeanDeserializerModifier beanDeserializerModifier0 = mock(BeanDeserializerModifier.class, new ViolatedAssumptionAnswer());\n    doReturn((JsonDeserializer) null).when(beanDeserializerModifier0).modifyArrayDeserializer(any(com.fasterxml.jackson.databind.DeserializationConfig.class), any(com.fasterxml.jackson.databind.type.ArrayType.class), any(com.fasterxml.jackson.databind.BeanDescription.class), any(com.fasterxml.jackson.databind.JsonDeserializer.class));\n    simpleModule0.setDeserializerModifier(beanDeserializerModifier0);\n    objectMapper0.registerModule(simpleModule0);\n    objectMapper0.readValues((JsonParser) null, (ResolvedType) arrayType0);\n}",
    "testName" : "test2121"
  },
  "test3232" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser p, ResolvedType valueType) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    JavaType javaType0 = TypeFactory.unknownType();\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.upgradeFrom(javaType0, javaType0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleModule simpleModule0 = new SimpleModule();\n    Class<DataTruncation> class0 = DataTruncation.class;\n    SimpleModule simpleModule1 = simpleModule0.addDeserializer(class0, (JsonDeserializer<? extends DataTruncation>) null);\n    ObjectMapper objectMapper1 = objectMapper0.registerModule(simpleModule1);\n    objectMapper1.readValues((JsonParser) null, (ResolvedType) collectionLikeType0);\n}",
    "testName" : "test3232"
  },
  "test1111" : {
    "methodSignature" : "protected PropertyName _findParamName(AnnotatedParameter param, AnnotationIntrospector intr)",
    "methodName" : "_findParamName",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();\n    PropertyName propertyName0 = beanDeserializerFactory0._findParamName((AnnotatedParameter) null, annotationIntrospector0);\n}",
    "testName" : "test1111"
  },
  "test2222" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser p, ResolvedType valueType) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<CollectionType> class0 = CollectionType.class;\n    ArrayType arrayType0 = typeFactory0.constructArrayType(class0);\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    objectMapper0.enableDefaultTyping();\n    MappingIterator<LinkedHashMap<SQLSyntaxErrorException, Object>> mappingIterator0 = objectMapper0.readValues((JsonParser) null, (ResolvedType) arrayType0);\n}",
    "testName" : "test2222"
  },
  "test3333" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser p, ResolvedType valueType) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    JavaType javaType0 = TypeFactory.unknownType();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleModule simpleModule0 = new SimpleModule();\n    Class<DataTruncation> class0 = DataTruncation.class;\n    SimpleModule simpleModule1 = simpleModule0.addDeserializer(class0, (JsonDeserializer<? extends DataTruncation>) null);\n    ObjectMapper objectMapper1 = objectMapper0.registerModule(simpleModule1);\n    Class<ObjectNode> class1 = ObjectNode.class;\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded(class1, javaType0);\n    JavaType[] javaTypeArray0 = new JavaType[6];\n    javaTypeArray0[0] = javaType0;\n    MapType mapType0 = MapType.construct(class0, typeBindings0, javaType0, javaTypeArray0, javaTypeArray0[0], javaType0);\n    objectMapper1.readValues((JsonParser) null, (ResolvedType) mapType0);\n}",
    "testName" : "test3333"
  },
  "test011" : {
    "methodSignature" : "public boolean hasAbstractTypeResolvers()",
    "methodName" : "hasAbstractTypeResolvers",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);\n    DeserializerFactoryConfig deserializerFactoryConfig1 = beanDeserializerFactory0.getFactoryConfig();\n    deserializerFactoryConfig1.hasAbstractTypeResolvers();\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public final DeserializerFactory withAbstractTypeResolver(AbstractTypeResolver resolver)",
    "methodName" : "withAbstractTypeResolver",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();\n    DeserializerFactory deserializerFactory0 = beanDeserializerFactory0.withAbstractTypeResolver(simpleAbstractTypeResolver0);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser p, ResolvedType valueType) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    JavaType javaType0 = TypeFactory.unknownType();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleModule simpleModule0 = new SimpleModule();\n    Class<SQLTransactionRollbackException> class0 = SQLTransactionRollbackException.class;\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(class0);\n    SimpleModule simpleModule1 = simpleModule0.addValueInstantiator(class0, valueInstantiator_Base0);\n    objectMapper0.registerModule(simpleModule1);\n    MappingIterator<LinkedHashMap<SQLSyntaxErrorException, Object>> mappingIterator0 = objectMapper0.readValues((JsonParser) null, (ResolvedType) javaType0);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public ValueInstantiator _valueInstantiatorInstance(DeserializationConfig config, Annotated annotated, Object instDef) throws JsonMappingException",
    "methodName" : "_valueInstantiatorInstance",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Class<SQLException> class0 = SQLException.class;\n    AnnotatedClass annotatedClass0 = AnnotatedClass.constructWithoutSuperTypes((Class<?>) class0, (MapperConfig<?>) null);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    beanDeserializerFactory0._valueInstantiatorInstance((DeserializationConfig) null, annotatedClass0, class0);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public ValueInstantiator _valueInstantiatorInstance(DeserializationConfig config, Annotated annotated, Object instDef) throws JsonMappingException",
    "methodName" : "_valueInstantiatorInstance",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    Class<DoubleNode> class0 = DoubleNode.class;\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(class0);\n    ValueInstantiator valueInstantiator0 = beanDeserializerFactory0._valueInstantiatorInstance((DeserializationConfig) null, (Annotated) null, valueInstantiator_Base0);\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "protected boolean _hasExplicitParamName(AnnotatedParameter param, AnnotationIntrospector intr)",
    "methodName" : "_hasExplicitParamName",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    boolean boolean0 = beanDeserializerFactory0._hasExplicitParamName((AnnotatedParameter) null, (AnnotationIntrospector) null);\n}",
    "testName" : "test1616"
  },
  "test2727" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser p, ResolvedType valueType) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<LongNode> class0 = LongNode.class;\n    ArrayType arrayType0 = typeFactory0.constructArrayType(class0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MappingIterator<LinkedHashMap<SQLSyntaxErrorException, Object>> mappingIterator0 = objectMapper0.readValues((JsonParser) null, (ResolvedType) arrayType0);\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "protected boolean _hasExplicitParamName(AnnotatedParameter param, AnnotationIntrospector intr)",
    "methodName" : "_hasExplicitParamName",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    JavaType javaType0 = TypeFactory.unknownType();\n    AnnotationMap annotationMap0 = new AnnotationMap();\n    AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, javaType0, annotationMap0, 799);\n    boolean boolean0 = beanDeserializerFactory0._hasExplicitParamName(annotatedParameter0, (AnnotationIntrospector) null);\n}",
    "testName" : "test1717"
  },
  "test2828" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser p, ResolvedType valueType) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    JavaType javaType0 = TypeFactory.unknownType();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    ArrayNode arrayNode0 = jsonNodeFactory0.arrayNode();\n    JsonParser jsonParser0 = arrayNode0.traverse((ObjectCodec) objectMapper0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(javaType0, javaType0);\n    objectMapper0.readValues(jsonParser0, (ResolvedType) referenceType0);\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "protected PropertyName _findExplicitParamName(AnnotatedParameter param, AnnotationIntrospector intr)",
    "methodName" : "_findExplicitParamName",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();\n    PropertyName propertyName0 = beanDeserializerFactory0._findExplicitParamName((AnnotatedParameter) null, annotationIntrospector0);\n}",
    "testName" : "test1414"
  },
  "test2525" : {
    "methodSignature" : "protected CollectionType _mapAbstractCollectionType(JavaType type, DeserializationConfig config)",
    "methodName" : "_mapAbstractCollectionType",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    Class<TokenBuffer> class0 = TokenBuffer.class;\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    CollectionType collectionType0 = beanDeserializerFactory0._mapAbstractCollectionType(resolvedRecursiveType0, (DeserializationConfig) null);\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "protected PropertyName _findExplicitParamName(AnnotatedParameter param, AnnotationIntrospector intr)",
    "methodName" : "_findExplicitParamName",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();\n    JavaType javaType0 = TypeFactory.unknownType();\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.upgradeFrom(javaType0, javaType0);\n    AnnotationMap annotationMap0 = new AnnotationMap();\n    AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, collectionLikeType0, annotationMap0, (-751));\n    PropertyName propertyName0 = beanDeserializerFactory0._findExplicitParamName(annotatedParameter0, annotationIntrospector0);\n}",
    "testName" : "test1515"
  },
  "test2626" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser p, ResolvedType valueType) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<SQLClientInfoException> class0 = SQLClientInfoException.class;\n    ArrayType arrayType0 = typeFactory0.constructArrayType(class0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<ConcurrentSkipListMap> class1 = ConcurrentSkipListMap.class;\n    MapType mapType0 = typeFactory0.constructMapType((Class<? extends Map>) class1, (JavaType) arrayType0, (JavaType) arrayType0);\n    objectMapper0.readValues((JsonParser) null, (ResolvedType) mapType0);\n}",
    "testName" : "test2626"
  },
  "test3030" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser p, ResolvedType valueType) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<SQLClientInfoException> class0 = SQLClientInfoException.class;\n    ArrayType arrayType0 = typeFactory0.constructArrayType(class0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleModule simpleModule0 = new SimpleModule();\n    Class<DataTruncation> class1 = DataTruncation.class;\n    simpleModule0.addDeserializer(class1, (JsonDeserializer<? extends DataTruncation>) null);\n    ObjectMapper objectMapper1 = objectMapper0.registerModule(simpleModule0);\n    MappingIterator<LinkedHashMap<SQLSyntaxErrorException, Object>> mappingIterator0 = objectMapper1.readValues((JsonParser) null, (ResolvedType) arrayType0);\n}",
    "testName" : "test3030"
  },
  "test2020" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser p, ResolvedType valueType) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<String> class0 = String.class;\n    ArrayType arrayType0 = typeFactory0.constructArrayType(class0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MappingIterator<LinkedHashMap<SQLSyntaxErrorException, Object>> mappingIterator0 = objectMapper0.readValues((JsonParser) null, (ResolvedType) arrayType0);\n}",
    "testName" : "test2020"
  },
  "test3131" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser p, ResolvedType valueType) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    JavaType javaType0 = TypeFactory.unknownType();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleModule simpleModule0 = new SimpleModule();\n    Class<DataTruncation> class0 = DataTruncation.class;\n    SimpleModule simpleModule1 = simpleModule0.addDeserializer(class0, (JsonDeserializer<? extends DataTruncation>) null);\n    objectMapper0.registerModule(simpleModule1);\n    MappingIterator<LinkedHashMap<SQLSyntaxErrorException, Object>> mappingIterator0 = objectMapper0.readValues((JsonParser) null, (ResolvedType) javaType0);\n}",
    "testName" : "test3131"
  },
  "test000" : {
    "methodSignature" : "protected JavaType resolveType(DeserializationContext ctxt, BeanDescription beanDesc, JavaType type, AnnotatedMember member) throws JsonMappingException",
    "methodName" : "resolveType",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    JavaType javaType0 = TypeFactory.unknownType();\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    Class<TokenBuffer> class0 = TokenBuffer.class;\n    MapType mapType0 = MapType.construct(class0, typeBindings0, javaType0, (JavaType[]) null, javaType0, javaType0);\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    beanDeserializerFactory0.resolveType(defaultDeserializationContext_Impl0, (BeanDescription) null, mapType0, (AnnotatedMember) null);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public final DeserializerFactory withAdditionalKeyDeserializers(KeyDeserializers additional)",
    "methodName" : "withAdditionalKeyDeserializers",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    SimpleKeyDeserializers simpleKeyDeserializers0 = new SimpleKeyDeserializers();\n    DeserializerFactory deserializerFactory0 = beanDeserializerFactory0.withAdditionalKeyDeserializers(simpleKeyDeserializers0);\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public ObjectReader readerFor(JavaType type)",
    "methodName" : "readerFor",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<JsonLocation> class0 = JsonLocation.class;\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    ObjectReader objectReader0 = objectMapper0.readerFor((JavaType) resolvedRecursiveType0);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    JsonFactory jsonFactory0 = new JsonFactory();\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, defaultSerializerProvider_Impl0, defaultDeserializationContext_Impl0);\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(jsonFactory0);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public ValueInstantiator _valueInstantiatorInstance(DeserializationConfig config, Annotated annotated, Object instDef) throws JsonMappingException",
    "methodName" : "_valueInstantiatorInstance",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    ValueInstantiator valueInstantiator0 = beanDeserializerFactory0._valueInstantiatorInstance((DeserializationConfig) null, (Annotated) null, (Object) null);\n}",
    "testName" : "test088"
  },
  "test1818" : {
    "methodSignature" : "protected boolean _hasExplicitParamName(AnnotatedParameter param, AnnotationIntrospector intr)",
    "methodName" : "_hasExplicitParamName",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();\n    JavaType javaType0 = TypeFactory.unknownType();\n    AnnotationMap annotationMap0 = new AnnotationMap();\n    AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, javaType0, annotationMap0, 2);\n    boolean boolean0 = beanDeserializerFactory0._hasExplicitParamName(annotatedParameter0, annotationIntrospector0);\n}",
    "testName" : "test1818"
  },
  "test2929" : {
    "methodSignature" : "protected JsonDeserializer<?> _findCustomTreeNodeDeserializer(Class<? extends JsonNode> type, DeserializationConfig config, BeanDescription beanDesc) throws JsonMappingException",
    "methodName" : "_findCustomTreeNodeDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    SimpleDeserializers simpleDeserializers0 = new SimpleDeserializers();\n    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(simpleDeserializers0);\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);\n    Class<ObjectNode> class0 = ObjectNode.class;\n    JsonDeserializer<?> jsonDeserializer0 = beanDeserializerFactory0._findCustomTreeNodeDeserializer(class0, (DeserializationConfig) null, (BeanDescription) null);\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser p, ResolvedType valueType) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    Class<BatchUpdateException> class0 = BatchUpdateException.class;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ArrayType arrayType0 = typeFactory0.constructArrayType(class0);\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    MappingIterator<LinkedHashMap<SQLSyntaxErrorException, Object>> mappingIterator0 = objectMapper0.readValues((JsonParser) null, (ResolvedType) arrayType0);\n}",
    "testName" : "test1919"
  }
}