{
  "test141141" : {
    "methodSignature" : "public ObjectMapper registerModule(Module module)",
    "methodName" : "registerModule",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test141141() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleModule simpleModule0 = new SimpleModule();\n    BeanDeserializerModifier beanDeserializerModifier0 = mock(BeanDeserializerModifier.class, new ViolatedAssumptionAnswer());\n    SimpleModule simpleModule1 = simpleModule0.setDeserializerModifier(beanDeserializerModifier0);\n    ObjectMapper objectMapper1 = objectMapper0.registerModule(simpleModule1);\n}",
    "testName" : "test141141"
  },
  "test124124" : {
    "methodSignature" : "public <T> T readValue(InputStream src, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test124124() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    TypeReference<ArrayType> typeReference0 = (TypeReference<ArrayType>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    doReturn((Type) null).when(typeReference0).getType();\n    objectMapper0.readValue((InputStream) sequenceInputStream0, (TypeReference) typeReference0);\n}",
    "testName" : "test124124"
  },
  "test0000" : {
    "methodSignature" : "public ObjectMapper setNodeFactory(JsonNodeFactory f)",
    "methodName" : "setNodeFactory",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(false);\n    ObjectMapper objectMapper1 = objectMapper0.setNodeFactory(jsonNodeFactory0);\n}",
    "testName" : "test0000"
  },
  "test0088" : {
    "methodSignature" : "public <T> T readValue(byte[] src, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0088() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    byte[] byteArray0 = new byte[5];\n    objectMapper0.readValue(byteArray0, (JavaType) null);\n}",
    "testName" : "test0088"
  },
  "test149149" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test149149() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.NON_FINAL;\n    objectMapper0.enableDefaultTyping(objectMapper_DefaultTyping0);\n    Class<LongNode> class0 = LongNode.class;\n    ObjectWriter objectWriter0 = objectMapper0.writerWithType(class0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test149149"
  },
  "test177177" : {
    "methodSignature" : "public ObjectWriter writer(PrettyPrinter pp)",
    "methodName" : "writer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test177177() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter(\" for format \");\n    objectMapper0.writer((PrettyPrinter) defaultPrettyPrinter0);\n}",
    "testName" : "test177177"
  },
  "test107107" : {
    "methodSignature" : "public ObjectMapper disable(DeserializationFeature first, DeserializationFeature... f)",
    "methodName" : "disable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107107() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.READ_ENUMS_USING_TO_STRING;\n    objectMapper0.disable(deserializationFeature0, (DeserializationFeature[]) null);\n}",
    "testName" : "test107107"
  },
  "test03636" : {
    "methodSignature" : "public ObjectReader reader(DeserializationFeature feature)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03636() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.READ_DATE_TIMESTAMPS_AS_NANOSECONDS;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n}",
    "testName" : "test03636"
  },
  "test155155" : {
    "methodSignature" : "public ObjectMapper enableDefaultTyping(DefaultTyping applicability, JsonTypeInfo.As includeAs)",
    "methodName" : "enableDefaultTyping",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test155155() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.NON_FINAL;\n    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.EXTERNAL_PROPERTY;\n    objectMapper0.enableDefaultTyping(objectMapper_DefaultTyping0, jsonTypeInfo_As0);\n}",
    "testName" : "test155155"
  },
  "test130130" : {
    "methodSignature" : "public boolean isLong()",
    "methodName" : "isLong",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test130130() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TextNode textNode0 = objectMapper0.valueToTree((Object) \" for format \");\n    textNode0.isLong();\n}",
    "testName" : "test130130"
  },
  "test04848" : {
    "methodSignature" : "public <T> T readValue(JsonParser p, TypeReference<?> valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04848() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeReference<SimpleModule> typeReference0 = (TypeReference<SimpleModule>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    doReturn((Type) null).when(typeReference0).getType();\n    objectMapper0.readValue((JsonParser) null, (TypeReference<?>) typeReference0);\n}",
    "testName" : "test04848"
  },
  "test05656" : {
    "methodSignature" : "public byte[] writeValueAsBytes(Object value) throws JsonProcessingException",
    "methodName" : "writeValueAsBytes",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05656() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    HashMap<String, JsonNode> hashMap0 = new HashMap<String, JsonNode>();\n    ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0, hashMap0);\n    byte[] byteArray0 = objectMapper0.writeValueAsBytes(objectNode0);\n}",
    "testName" : "test05656"
  },
  "test138138" : {
    "methodSignature" : "public ObjectMapper registerModule(Module module)",
    "methodName" : "registerModule",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test138138() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleModule simpleModule0 = new SimpleModule();\n    Class<AbstractDeserializer> class0 = AbstractDeserializer.class;\n    simpleModule0.addKeyDeserializer(class0, (KeyDeserializer) null);\n    ObjectMapper objectMapper1 = objectMapper0.registerModule(simpleModule0);\n}",
    "testName" : "test138138"
  },
  "test06868" : {
    "methodSignature" : "public JsonNodeFactory getNodeFactory()",
    "methodName" : "getNodeFactory",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06868() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonNodeFactory jsonNodeFactory0 = objectMapper0.getNodeFactory();\n}",
    "testName" : "test06868"
  },
  "test02828" : {
    "methodSignature" : "public ObjectReader reader(Base64Variant defaultBase64)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02828() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader((Base64Variant) null);\n}",
    "testName" : "test02828"
  },
  "test183183" : {
    "methodSignature" : "public <T> T convertValue(Object fromValue, JavaType toValueType) throws IllegalArgumentException",
    "methodName" : "convertValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test183183() throws Throwable {\n    Class<ObjectInputStream> class0 = ObjectInputStream.class;\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    objectMapper0.convertValue((Object) typeBindings0, (JavaType) resolvedRecursiveType0);\n}",
    "testName" : "test183183"
  },
  "test113113" : {
    "methodSignature" : "public boolean isBigDecimal()",
    "methodName" : "isBigDecimal",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113113() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ArrayNode arrayNode0 = objectMapper0.createArrayNode();\n    arrayNode0.isBigDecimal();\n}",
    "testName" : "test113113"
  },
  "test01616" : {
    "methodSignature" : "public ObjectMapper copy()",
    "methodName" : "copy",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01616() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.copy();\n}",
    "testName" : "test01616"
  },
  "test08484" : {
    "methodSignature" : "public ObjectReader reader()",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08484() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n}",
    "testName" : "test08484"
  },
  "test07272" : {
    "methodSignature" : "public ObjectMapper setVisibility(PropertyAccessor forMethod, JsonAutoDetect.Visibility visibility)",
    "methodName" : "setVisibility",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07272() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    PropertyAccessor propertyAccessor0 = PropertyAccessor.NONE;\n    JsonAutoDetect.Visibility jsonAutoDetect_Visibility0 = JsonAutoDetect.Visibility.ANY;\n    ObjectMapper objectMapper1 = objectMapper0.setVisibility(propertyAccessor0, jsonAutoDetect_Visibility0);\n}",
    "testName" : "test07272"
  },
  "test04040" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04040() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.enableDefaultTyping();\n    Class<NioPathDeserializer> class0 = NioPathDeserializer.class;\n    ObjectWriter objectWriter0 = objectMapper0.writerWithType(class0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test04040"
  },
  "test121121" : {
    "methodSignature" : "public <T> T convertValue(Object fromValue, TypeReference<?> toValueTypeRef) throws IllegalArgumentException",
    "methodName" : "convertValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121121() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<Object> class0 = Object.class;\n    CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class0, (-163));\n    TypeReference<String> typeReference0 = (TypeReference<String>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    doReturn((Type) null).when(typeReference0).getType();\n    objectMapper0.convertValue((Object) coreXMLDeserializers_Std0, (TypeReference<?>) typeReference0);\n}",
    "testName" : "test121121"
  },
  "test0011" : {
    "methodSignature" : "public ObjectReader reader(JavaType type)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<ArrayNode> class0 = ArrayNode.class;\n    Class<Integer> class1 = Integer.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructMapLikeType(class0, class1, class1);\n    ObjectReader objectReader0 = objectMapper0.reader((JavaType) mapLikeType0);\n}",
    "testName" : "test0011"
  },
  "test0099" : {
    "methodSignature" : "public ObjectReader reader(ContextAttributes attrs)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0099() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ContextAttributes contextAttributes0 = ContextAttributes.getEmpty();\n    ObjectReader objectReader0 = objectMapper0.reader(contextAttributes0);\n}",
    "testName" : "test0099"
  },
  "test09292" : {
    "methodSignature" : "public String writeValueAsString(Object value) throws JsonProcessingException",
    "methodName" : "writeValueAsString",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09292() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    objectMapper0.writeValueAsString(jsonFactory0);\n}",
    "testName" : "test09292"
  },
  "test06060" : {
    "methodSignature" : "public PropertyNamingStrategy getPropertyNamingStrategy()",
    "methodName" : "getPropertyNamingStrategy",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06060() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    PropertyNamingStrategy propertyNamingStrategy0 = objectMapper0.getPropertyNamingStrategy();\n}",
    "testName" : "test06060"
  },
  "test03232" : {
    "methodSignature" : "public ObjectMapper setConfig(DeserializationConfig config)",
    "methodName" : "setConfig",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03232() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    BaseSettings baseSettings0 = ObjectMapper.DEFAULT_BASE;\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    ConfigOverrides configOverrides0 = new ConfigOverrides();\n    DeserializationConfig deserializationConfig0 = new DeserializationConfig(baseSettings0, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);\n    ObjectMapper objectMapper1 = objectMapper0.setConfig(deserializationConfig0);\n}",
    "testName" : "test03232"
  },
  "test08888" : {
    "methodSignature" : "public ObjectReader reader(DeserializationFeature first, DeserializationFeature... other)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08888() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_FLOAT_AS_INT;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[7];\n    objectMapper0.reader(deserializationFeature0, deserializationFeatureArray0);\n}",
    "testName" : "test08888"
  },
  "test102102" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102102() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writerWithDefaultPrettyPrinter();\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test102102"
  },
  "test02020" : {
    "methodSignature" : "public <T> T readValue(byte[] src, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02020() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.readValue((byte[]) null, (TypeReference) null);\n}",
    "testName" : "test02020"
  },
  "test04444" : {
    "methodSignature" : "public <T> T readValue(Reader src, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04444() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    objectMapper0.readValue((Reader) null, (JavaType) null);\n}",
    "testName" : "test04444"
  },
  "test07676" : {
    "methodSignature" : "public SerializerProvider getSerializerProvider()",
    "methodName" : "getSerializerProvider",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07676() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    SerializerProvider serializerProvider0 = objectMapper0.getSerializerProvider();\n}",
    "testName" : "test07676"
  },
  "test129129" : {
    "methodSignature" : "public ObjectMapper disableDefaultTyping()",
    "methodName" : "disableDefaultTyping",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test129129() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.disableDefaultTyping();\n}",
    "testName" : "test129129"
  },
  "test09696" : {
    "methodSignature" : "public boolean canSerialize(Class<?> type, AtomicReference<Throwable> cause)",
    "methodName" : "canSerialize",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09696() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<MockFileReader> class0 = MockFileReader.class;\n    boolean boolean0 = objectMapper0.canSerialize(class0, (AtomicReference<Throwable>) null);\n}",
    "testName" : "test09696"
  },
  "test06464" : {
    "methodSignature" : "public ObjectMapper setDefaultPrettyPrinter(PrettyPrinter pp)",
    "methodName" : "setDefaultPrettyPrinter",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06464() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MinimalPrettyPrinter minimalPrettyPrinter0 = new MinimalPrettyPrinter();\n    ObjectMapper objectMapper1 = objectMapper0.setDefaultPrettyPrinter(minimalPrettyPrinter0);\n}",
    "testName" : "test06464"
  },
  "test174174" : {
    "methodSignature" : "public ObjectWriter writerFor(Class<?> rootType)",
    "methodName" : "writerFor",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test174174() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.writerFor((Class<?>) null);\n}",
    "testName" : "test174174"
  },
  "test110110" : {
    "methodSignature" : "public Class<?> findMixInClassFor(Class<?> cls)",
    "methodName" : "findMixInClassFor",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110110() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<DecimalNode> class0 = DecimalNode.class;\n    Class<?> class1 = objectMapper0.findMixInClassFor(class0);\n}",
    "testName" : "test110110"
  },
  "test133133" : {
    "methodSignature" : "public <T> T readValue(String content, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test133133() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeReference<FilterOutputStream> typeReference0 = (TypeReference<FilterOutputStream>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    doReturn((Type) null).when(typeReference0).getType();\n    objectMapper0.readValue(\"\", (TypeReference) typeReference0);\n}",
    "testName" : "test133133"
  },
  "test08080" : {
    "methodSignature" : "public boolean canSerialize(Class<?> type)",
    "methodName" : "canSerialize",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08080() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    boolean boolean0 = objectMapper0.canSerialize(class0);\n}",
    "testName" : "test08080"
  },
  "test118118" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118118() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writer((Base64Variant) null);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test118118"
  },
  "test186186" : {
    "methodSignature" : "public void acceptJsonFormatVisitor(JavaType type, JsonFormatVisitorWrapper visitor) throws JsonMappingException",
    "methodName" : "acceptJsonFormatVisitor",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test186186() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base();\n    objectMapper0.acceptJsonFormatVisitor((JavaType) null, (JsonFormatVisitorWrapper) jsonFormatVisitorWrapper_Base0);\n}",
    "testName" : "test186186"
  },
  "test143143" : {
    "methodSignature" : "public ObjectMapper registerModule(Module module)",
    "methodName" : "registerModule",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test143143() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleModule simpleModule0 = new SimpleModule();\n    Class<ReferenceType> class0 = ReferenceType.class;\n    simpleModule0.setMixInAnnotation(class0, class0);\n    ObjectMapper objectMapper1 = objectMapper0.registerModule(simpleModule0);\n}",
    "testName" : "test143143"
  },
  "test168168" : {
    "methodSignature" : "public JsonNode readTree(byte[] content) throws IOException, JsonProcessingException",
    "methodName" : "readTree",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test168168() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    byte[] byteArray0 = new byte[3];\n    byteArray0[0] = (byte) 49;\n    byteArray0[1] = (byte) 49;\n    byteArray0[2] = (byte) 49;\n    objectMapper0.readTree(byteArray0);\n}",
    "testName" : "test168168"
  },
  "test122122" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test122122() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ContextAttributes contextAttributes0 = ContextAttributes.getEmpty();\n    ObjectWriter objectWriter0 = objectMapper0.writer(contextAttributes0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test122122"
  },
  "test0022" : {
    "methodSignature" : "public Boolean getIsIgnoredType()",
    "methodName" : "getIsIgnoredType",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0022() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<BigIntegerNode> class0 = BigIntegerNode.class;\n    MutableConfigOverride mutableConfigOverride0 = objectMapper0.configOverride(class0);\n    mutableConfigOverride0.getIsIgnoredType();\n}",
    "testName" : "test0022"
  },
  "test105105" : {
    "methodSignature" : "public ObjectMapper disable(SerializationFeature first, SerializationFeature... f)",
    "methodName" : "disable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105105() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.FAIL_ON_EMPTY_BEANS;\n    SerializationFeature[] serializationFeatureArray0 = new SerializationFeature[0];\n    ObjectMapper objectMapper1 = objectMapper0.disable(serializationFeature0, serializationFeatureArray0);\n}",
    "testName" : "test105105"
  },
  "test171171" : {
    "methodSignature" : "public <T> T treeToValue(TreeNode n, Class<T> valueType) throws JsonProcessingException",
    "methodName" : "treeToValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test171171() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    BinaryNode binaryNode0 = new BinaryNode((byte[]) null);\n    Class<String> class0 = String.class;\n    objectMapper0.treeToValue((TreeNode) binaryNode0, class0);\n}",
    "testName" : "test171171"
  },
  "test06969" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06969() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writer();\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test06969"
  },
  "test157157" : {
    "methodSignature" : "public ObjectMapper configure(MapperFeature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test157157() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MapperFeature mapperFeature0 = MapperFeature.AUTO_DETECT_CREATORS;\n    ObjectMapper objectMapper1 = objectMapper0.configure(mapperFeature0, true);\n}",
    "testName" : "test157157"
  },
  "test03737" : {
    "methodSignature" : "public void writeValue(File resultFile, Object value) throws IOException, JsonGenerationException, JsonMappingException",
    "methodName" : "writeValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03737() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MockFile mockFile0 = new MockFile(\"\", \"\");\n    PipedReader pipedReader0 = new PipedReader(7);\n    objectMapper0.writeValue((File) mockFile0, (Object) pipedReader0);\n}",
    "testName" : "test03737"
  },
  "test08989" : {
    "methodSignature" : "public ObjectReader reader(InjectableValues injectableValues)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08989() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();\n    ObjectReader objectReader0 = objectMapper0.reader((InjectableValues) injectableValues_Std0);\n}",
    "testName" : "test08989"
  },
  "test132132" : {
    "methodSignature" : "public ObjectMapper setTypeFactory(TypeFactory f)",
    "methodName" : "setTypeFactory",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test132132() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ObjectMapper objectMapper1 = objectMapper0.setTypeFactory(typeFactory0);\n}",
    "testName" : "test132132"
  },
  "test02525" : {
    "methodSignature" : "public ObjectReader readerFor(TypeReference<?> type)",
    "methodName" : "readerFor",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02525() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.readerFor((TypeReference<?>) null);\n}",
    "testName" : "test02525"
  },
  "test05757" : {
    "methodSignature" : "public boolean isEnabled(JsonParser.Feature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05757() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER;\n    boolean boolean0 = objectMapper0.isEnabled(jsonParser_Feature0);\n}",
    "testName" : "test05757"
  },
  "test181181" : {
    "methodSignature" : "public ObjectWriter writerWithType(TypeReference<?> rootType)",
    "methodName" : "writerWithType",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test181181() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    objectMapper0.writerWithType((TypeReference<?>) null);\n}",
    "testName" : "test181181"
  },
  "test119119" : {
    "methodSignature" : "public <T> T readValue(Reader src, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119119() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    PipedReader pipedReader0 = new PipedReader();\n    PushbackReader pushbackReader0 = new PushbackReader(pipedReader0);\n    TypeReference<BooleanNode> typeReference0 = (TypeReference<BooleanNode>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    doReturn((Type) null).when(typeReference0).getType();\n    objectMapper0.readValue((Reader) pushbackReader0, (TypeReference) typeReference0);\n}",
    "testName" : "test119119"
  },
  "test04949" : {
    "methodSignature" : "public VisibilityChecker<?> getVisibilityChecker()",
    "methodName" : "getVisibilityChecker",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04949() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    VisibilityChecker<?> visibilityChecker0 = objectMapper0.getVisibilityChecker();\n}",
    "testName" : "test04949"
  },
  "test160160" : {
    "methodSignature" : "public ObjectMapper configure(DeserializationFeature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test160160() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_UNRESOLVED_OBJECT_IDS;\n    objectMapper0.configure(deserializationFeature0, false);\n}",
    "testName" : "test160160"
  },
  "test02929" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02929() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(objectMapper0);\n}",
    "testName" : "test02929"
  },
  "test06161" : {
    "methodSignature" : "public void writeValue(OutputStream out, Object value) throws IOException, JsonGenerationException, JsonMappingException",
    "methodName" : "writeValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06161() throws Throwable {\n    JsonpCharacterEscapes jsonpCharacterEscapes0 = JsonpCharacterEscapes.instance();\n    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.writeValue((OutputStream) byteArrayBuilder0, (Object) jsonpCharacterEscapes0.ESCAPE_NONE);\n}",
    "testName" : "test06161"
  },
  "test07373" : {
    "methodSignature" : "public ObjectMapper setSubtypeResolver(SubtypeResolver str)",
    "methodName" : "setSubtypeResolver",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07373() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    ObjectMapper objectMapper1 = objectMapper0.setSubtypeResolver(stdSubtypeResolver0);\n}",
    "testName" : "test07373"
  },
  "test09393" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09393() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.USE_EQUALITY_FOR_OBJECT_ID;\n    ObjectWriter objectWriter0 = objectMapper0.writer(serializationFeature0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test09393"
  },
  "test0033" : {
    "methodSignature" : "public boolean canDeserialize(JavaType type, AtomicReference<Throwable> cause)",
    "methodName" : "canDeserialize",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0033() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<MapLikeType> class0 = MapLikeType.class;\n    JavaType javaType0 = TypeFactory.unknownType();\n    JavaType[] javaTypeArray0 = new JavaType[3];\n    ReferenceType referenceType0 = ReferenceType.construct(class0, (TypeBindings) null, javaType0, javaTypeArray0, javaType0);\n    SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException(\"ZW}K{l(V\");\n    AtomicReference<Throwable> atomicReference0 = new AtomicReference<Throwable>(sQLInvalidAuthorizationSpecException0);\n    boolean boolean0 = objectMapper0.canDeserialize((JavaType) referenceType0, atomicReference0);\n}",
    "testName" : "test0033"
  },
  "test08181" : {
    "methodSignature" : "public ObjectMapper enableDefaultTypingAsProperty(DefaultTyping applicability, String propertyName)",
    "methodName" : "enableDefaultTypingAsProperty",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08181() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.JAVA_LANG_OBJECT;\n    ObjectMapper objectMapper1 = objectMapper0.enableDefaultTypingAsProperty(objectMapper_DefaultTyping0, \"{\\\"o}LO!?v^V\");\n}",
    "testName" : "test08181"
  },
  "test07777" : {
    "methodSignature" : "public ObjectMapper setPropertyNamingStrategy(PropertyNamingStrategy s)",
    "methodName" : "setPropertyNamingStrategy",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07777() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    PropertyNamingStrategy.UpperCamelCaseStrategy propertyNamingStrategy_UpperCamelCaseStrategy0 = (PropertyNamingStrategy.UpperCamelCaseStrategy) PropertyNamingStrategy.UPPER_CAMEL_CASE;\n    ObjectMapper objectMapper1 = objectMapper0.setPropertyNamingStrategy(propertyNamingStrategy_UpperCamelCaseStrategy0);\n}",
    "testName" : "test07777"
  },
  "test06565" : {
    "methodSignature" : "public ObjectMapper configure(JsonParser.Feature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06565() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_SINGLE_QUOTES;\n    ObjectMapper objectMapper1 = objectMapper0.configure(jsonParser_Feature0, true);\n}",
    "testName" : "test06565"
  },
  "test03333" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03333() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writer((FilterProvider) null);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test03333"
  },
  "test127127" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test127127() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writerFor((JavaType) null);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test127127"
  },
  "test100100" : {
    "methodSignature" : "public <T> T readValue(URL src, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100100() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    objectMapper0.readValue((URL) null, (TypeReference) null);\n}",
    "testName" : "test100100"
  },
  "test04141" : {
    "methodSignature" : "public <T> T readValue(byte[] src, int offset, int len, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04141() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    byte[] byteArray0 = new byte[3];\n    objectMapper0.readValue(byteArray0, 55296, (-1825), (TypeReference) null);\n}",
    "testName" : "test04141"
  },
  "test09797" : {
    "methodSignature" : "public boolean isEnabled(SerializationFeature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09797() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.USE_EQUALITY_FOR_OBJECT_ID;\n    boolean boolean0 = objectMapper0.isEnabled(serializationFeature0);\n}",
    "testName" : "test09797"
  },
  "test176176" : {
    "methodSignature" : "public ObjectWriter writerFor(TypeReference<?> rootType)",
    "methodName" : "writerFor",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test176176() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.writerFor((TypeReference<?>) null);\n}",
    "testName" : "test176176"
  },
  "test05353" : {
    "methodSignature" : "public <T> T readValue(URL src, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05353() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<MapLikeType> class0 = MapLikeType.class;\n    URI uRI0 = MockURI.aHttpURI;\n    URL uRL0 = MockURI.toURL(uRI0);\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    objectMapper0.readValue(uRL0, (JavaType) resolvedRecursiveType0);\n}",
    "testName" : "test05353"
  },
  "test154154" : {
    "methodSignature" : "public ObjectMapper setMixInResolver(ClassIntrospector.MixInResolver resolver)",
    "methodName" : "setMixInResolver",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test154154() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.setMixInResolver((ClassIntrospector.MixInResolver) null);\n}",
    "testName" : "test154154"
  },
  "test135135" : {
    "methodSignature" : "public ObjectMapper setSerializerProvider(DefaultSerializerProvider p)",
    "methodName" : "setSerializerProvider",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test135135() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    ObjectMapper objectMapper1 = objectMapper0.setSerializerProvider(defaultSerializerProvider_Impl0);\n}",
    "testName" : "test135135"
  },
  "test116116" : {
    "methodSignature" : "public JavaType constructType(Type t)",
    "methodName" : "constructType",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test116116() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    objectMapper0.constructType((Type) null);\n}",
    "testName" : "test116116"
  },
  "test184184" : {
    "methodSignature" : "public <T> T convertValue(Object fromValue, JavaType toValueType) throws IllegalArgumentException",
    "methodName" : "convertValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test184184() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    Class<PipedInputStream> class0 = PipedInputStream.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    objectMapper0.convertValue((Object) null, (JavaType) resolvedRecursiveType0);\n}",
    "testName" : "test184184"
  },
  "test0044" : {
    "methodSignature" : "public ObjectMapper enable(SerializationFeature first, SerializationFeature... f)",
    "methodName" : "enable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0044() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.INDENT_OUTPUT;\n    SerializationFeature[] serializationFeatureArray0 = new SerializationFeature[4];\n    objectMapper0.enable(serializationFeature0, serializationFeatureArray0);\n}",
    "testName" : "test0044"
  },
  "test120120" : {
    "methodSignature" : "public ObjectMapper setFilterProvider(FilterProvider filterProvider)",
    "methodName" : "setFilterProvider",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test120120() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleFilterProvider simpleFilterProvider0 = new SimpleFilterProvider();\n    ObjectMapper objectMapper1 = objectMapper0.setFilterProvider(simpleFilterProvider0);\n}",
    "testName" : "test120120"
  },
  "test103103" : {
    "methodSignature" : "public <T> T readValue(byte[] src, int offset, int len, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103103() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    byte[] byteArray0 = new byte[5];\n    objectMapper0.readValue(byteArray0, (int) (-128), (-1702), (JavaType) null);\n}",
    "testName" : "test103103"
  },
  "test128128" : {
    "methodSignature" : "public ObjectMapper configure(JsonGenerator.Feature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test128128() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.WRITE_NUMBERS_AS_STRINGS;\n    ObjectMapper objectMapper1 = objectMapper0.configure(jsonGenerator_Feature0, false);\n}",
    "testName" : "test128128"
  },
  "test05858" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser p, TypeReference<?> valueTypeRef) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05858() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(false, (JsonParser) null, (JsonParser) null);\n    TypeReference<BasicBeanDescription> typeReference0 = (TypeReference<BasicBeanDescription>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    doReturn((Type) null).when(typeReference0).getType();\n    objectMapper0.readValues((JsonParser) jsonParserSequence0, (TypeReference<?>) typeReference0);\n}",
    "testName" : "test05858"
  },
  "test03434" : {
    "methodSignature" : "public <T> T readValue(String content, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03434() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.readValue(\"E+<\\u0001eT\\u0005+@H!\", (JavaType) null);\n}",
    "testName" : "test03434"
  },
  "test02626" : {
    "methodSignature" : "public ObjectMapper findAndRegisterModules()",
    "methodName" : "findAndRegisterModules",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02626() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.findAndRegisterModules();\n}",
    "testName" : "test02626"
  },
  "test04646" : {
    "methodSignature" : "public ObjectReader reader(FormatSchema schema)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04646() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader((FormatSchema) null);\n}",
    "testName" : "test04646"
  },
  "test159159" : {
    "methodSignature" : "public ObjectMapper configure(SerializationFeature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test159159() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_DATES_AS_TIMESTAMPS;\n    objectMapper0.configure(serializationFeature0, true);\n}",
    "testName" : "test159159"
  },
  "test134134" : {
    "methodSignature" : "public final boolean canOverrideAccessModifiers()",
    "methodName" : "canOverrideAccessModifiers",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test134134() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializerProvider serializerProvider0 = objectMapper0.getSerializerProviderInstance();\n    serializerProvider0.canOverrideAccessModifiers();\n}",
    "testName" : "test134134"
  },
  "test117117" : {
    "methodSignature" : "public ObjectMapper disable(SerializationFeature f)",
    "methodName" : "disable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test117117() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_DATES_WITH_ZONE_ID;\n    ObjectMapper objectMapper1 = objectMapper0.disable(serializationFeature0);\n}",
    "testName" : "test117117"
  },
  "test03838" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03838() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writerWithType((JavaType) null);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test03838"
  },
  "test01818" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01818() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.WRAP_ROOT_VALUE;\n    SerializationFeature[] serializationFeatureArray0 = new SerializationFeature[0];\n    ObjectWriter objectWriter0 = objectMapper0.writer(serializationFeature0, serializationFeatureArray0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test01818"
  },
  "test187187" : {
    "methodSignature" : "protected Object _readMapAndClose(JsonParser p0, JavaType valueType) throws IOException",
    "methodName" : "_readMapAndClose",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test187187() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    objectMapper0._readMapAndClose((JsonParser) null, (JavaType) null);\n}",
    "testName" : "test187187"
  },
  "test05050" : {
    "methodSignature" : "public ObjectMapper enable(SerializationFeature f)",
    "methodName" : "enable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05050() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SerializationFeature serializationFeature0 = SerializationFeature.FAIL_ON_SELF_REFERENCES;\n    ObjectMapper objectMapper1 = objectMapper0.enable(serializationFeature0);\n}",
    "testName" : "test05050"
  },
  "test09494" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09494() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectWriter objectWriter0 = objectMapper0.writer((FormatSchema) null);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test09494"
  },
  "test06262" : {
    "methodSignature" : "public void writeValue(Writer w, Object value) throws IOException, JsonGenerationException, JsonMappingException",
    "methodName" : "writeValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06262() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    PipedWriter pipedWriter0 = new PipedWriter();\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0);\n    StringReader stringReader0 = new StringReader(\"Failed copy(): \");\n    objectMapper0.writeValue((Writer) mockPrintWriter0, (Object) stringReader0);\n}",
    "testName" : "test06262"
  },
  "test140140" : {
    "methodSignature" : "public ObjectMapper registerModule(Module module)",
    "methodName" : "registerModule",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test140140() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleModule simpleModule0 = new SimpleModule();\n    Class<ReferenceType> class0 = ReferenceType.class;\n    Class<CoreXMLDeserializers.Std> class1 = CoreXMLDeserializers.Std.class;\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(class0);\n    SimpleModule simpleModule1 = simpleModule0.addValueInstantiator(class1, valueInstantiator_Base0);\n    ObjectMapper objectMapper1 = objectMapper0.registerModule(simpleModule1);\n}",
    "testName" : "test140140"
  },
  "test167167" : {
    "methodSignature" : "public <T extends TreeNode> T readTree(JsonParser p) throws IOException, JsonProcessingException",
    "methodName" : "readTree",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test167167() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"\");\n    objectMapper0.readTree(jsonParser0);\n}",
    "testName" : "test167167"
  },
  "test07070" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07070() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();\n    deserializationContext0.getDeserializationFeatures();\n}",
    "testName" : "test07070"
  },
  "test125125" : {
    "methodSignature" : "public TypeFactory getTypeFactory()",
    "methodName" : "getTypeFactory",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test125125() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    TypeFactory typeFactory0 = objectMapper0.getTypeFactory();\n}",
    "testName" : "test125125"
  },
  "test0055" : {
    "methodSignature" : "public boolean canDeserialize(JavaType type)",
    "methodName" : "canDeserialize",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0055() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.canDeserialize((JavaType) null);\n}",
    "testName" : "test0055"
  },
  "test148148" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test148148() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.NON_FINAL;\n    ObjectMapper objectMapper1 = objectMapper0.enableDefaultTyping(objectMapper_DefaultTyping0);\n    Class<Throwable> class0 = Throwable.class;\n    ObjectWriter objectWriter0 = objectMapper1.writerWithType(class0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test148148"
  },
  "test05454" : {
    "methodSignature" : "public <T> T readValue(File src, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05454() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<ByteArrayOutputStream> class0 = ByteArrayOutputStream.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.readValue((File) null, (JavaType) mapLikeType0);\n}",
    "testName" : "test05454"
  },
  "test09898" : {
    "methodSignature" : "public SerializerFactory getSerializerFactory()",
    "methodName" : "getSerializerFactory",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09898() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory((ObjectCodec) null);\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    SerializerFactory serializerFactory0 = objectMapper0.getSerializerFactory();\n}",
    "testName" : "test09898"
  },
  "test06666" : {
    "methodSignature" : "public final void addMixInAnnotations(Class<?> target, Class<?> mixinSource)",
    "methodName" : "addMixInAnnotations",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06666() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<ObjectInputStream> class0 = ObjectInputStream.class;\n    Class<SimpleModule> class1 = SimpleModule.class;\n    objectMapper0.addMixInAnnotations(class0, class1);\n}",
    "testName" : "test06666"
  },
  "test03030" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03030() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    DateFormat dateFormat0 = MockDateFormat.getDateInstance();\n    ObjectWriter objectWriter0 = objectMapper0.writer(dateFormat0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test03030"
  },
  "test08686" : {
    "methodSignature" : "public <T> T readValue(JsonParser p, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08686() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<CharArrayReader> class0 = CharArrayReader.class;\n    Class<BufferedReader> class1 = BufferedReader.class;\n    CollectionLikeType collectionLikeType0 = typeFactory0.constructCollectionLikeType(class0, class1);\n    objectMapper0.readValue((JsonParser) null, (JavaType) collectionLikeType0);\n}",
    "testName" : "test08686"
  },
  "test02222" : {
    "methodSignature" : "public ObjectMapper setTimeZone(TimeZone tz)",
    "methodName" : "setTimeZone",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02222() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"JSON\");\n    ObjectMapper objectMapper1 = objectMapper0.setTimeZone(timeZone0);\n}",
    "testName" : "test02222"
  },
  "test178178" : {
    "methodSignature" : "public ObjectWriter writer(PrettyPrinter pp)",
    "methodName" : "writer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test178178() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.writer((PrettyPrinter) null);\n}",
    "testName" : "test178178"
  },
  "test106106" : {
    "methodSignature" : "public InjectableValues getInjectableValues()",
    "methodName" : "getInjectableValues",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106106() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    InjectableValues injectableValues0 = objectMapper0.getInjectableValues();\n}",
    "testName" : "test106106"
  },
  "test170170" : {
    "methodSignature" : "public void writeTree(JsonGenerator jgen, JsonNode rootNode) throws IOException, JsonProcessingException",
    "methodName" : "writeTree",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test170170() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();\n    JsonGenerator jsonGenerator0 = jsonFactory0.createGenerator((OutputStream) byteArrayBuilder0);\n    FloatNode floatNode0 = new FloatNode(0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.writeTree(jsonGenerator0, (JsonNode) floatNode0);\n}",
    "testName" : "test170170"
  },
  "test01010" : {
    "methodSignature" : "public ObjectMapper setDateFormat(DateFormat dateFormat)",
    "methodName" : "setDateFormat",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01010() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DateFormat dateFormat0 = MockDateFormat.getTimeInstance(0);\n    ObjectMapper objectMapper1 = objectMapper0.setDateFormat(dateFormat0);\n}",
    "testName" : "test01010"
  },
  "test156156" : {
    "methodSignature" : "public ObjectMapper configure(MapperFeature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test156156() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MapperFeature mapperFeature0 = MapperFeature.PROPAGATE_TRANSIENT_MARKER;\n    ObjectMapper objectMapper1 = objectMapper0.configure(mapperFeature0, false);\n}",
    "testName" : "test156156"
  },
  "test179179" : {
    "methodSignature" : "public ObjectWriter writerWithType(Class<?> rootType)",
    "methodName" : "writerWithType",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test179179() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.writerWithType((Class<?>) null);\n}",
    "testName" : "test179179"
  },
  "test137137" : {
    "methodSignature" : "public ObjectMapper registerModule(Module module)",
    "methodName" : "registerModule",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test137137() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    Version version0 = jsonFactory0.version();\n    SimpleModule simpleModule0 = new SimpleModule(version0);\n    Class<MapLikeType> class0 = MapLikeType.class;\n    JsonSerializer<MapLikeType> jsonSerializer0 = (JsonSerializer<MapLikeType>) mock(JsonSerializer.class, new ViolatedAssumptionAnswer());\n    SimpleModule simpleModule1 = simpleModule0.addKeySerializer((Class<? extends MapLikeType>) class0, jsonSerializer0);\n    ObjectMapper objectMapper1 = objectMapper0.registerModule(simpleModule1);\n}",
    "testName" : "test137137"
  },
  "test09090" : {
    "methodSignature" : "public boolean isEnabled(JsonFactory.Feature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09090() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory.Feature jsonFactory_Feature0 = JsonFactory.Feature.INTERN_FIELD_NAMES;\n    boolean boolean0 = objectMapper0.isEnabled(jsonFactory_Feature0);\n}",
    "testName" : "test09090"
  },
  "test114114" : {
    "methodSignature" : "public ObjectMapper registerModule(Module module)",
    "methodName" : "registerModule",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test114114() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleModule simpleModule0 = new SimpleModule();\n    NamedType[] namedTypeArray0 = new NamedType[4];\n    SimpleModule simpleModule1 = simpleModule0.registerSubtypes(namedTypeArray0);\n    ObjectMapper objectMapper1 = objectMapper0.registerModule(simpleModule1);\n}",
    "testName" : "test114114"
  },
  "test0066" : {
    "methodSignature" : "public ObjectMapper enable(DeserializationFeature feature)",
    "methodName" : "enable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0066() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.READ_ENUMS_USING_TO_STRING;\n    ObjectMapper objectMapper1 = objectMapper0.enable(deserializationFeature0);\n}",
    "testName" : "test0066"
  },
  "test126126" : {
    "methodSignature" : "public ObjectMapper disable(DeserializationFeature feature)",
    "methodName" : "disable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test126126() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.EAGER_DESERIALIZER_FETCH;\n    ObjectMapper objectMapper1 = objectMapper0.disable(deserializationFeature0);\n}",
    "testName" : "test126126"
  },
  "test101101" : {
    "methodSignature" : "public ObjectMapper setBase64Variant(Base64Variant v)",
    "methodName" : "setBase64Variant",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101101() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.setBase64Variant((Base64Variant) null);\n}",
    "testName" : "test101101"
  },
  "test04747" : {
    "methodSignature" : "public ObjectReader reader(TypeReference<?> type)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04747() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.reader((TypeReference<?>) null);\n}",
    "testName" : "test04747"
  },
  "test02323" : {
    "methodSignature" : "public boolean isEnabled(JsonGenerator.Feature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02323() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT;\n    boolean boolean0 = objectMapper0.isEnabled(jsonGenerator_Feature0);\n}",
    "testName" : "test02323"
  },
  "test05959" : {
    "methodSignature" : "protected void _checkInvalidCopy(Class<?> exp)",
    "methodName" : "_checkInvalidCopy",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05959() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<OutputStreamWriter> class0 = OutputStreamWriter.class;\n    objectMapper0._checkInvalidCopy(class0);\n}",
    "testName" : "test05959"
  },
  "test07979" : {
    "methodSignature" : "public Object setHandlerInstantiator(HandlerInstantiator hi)",
    "methodName" : "setHandlerInstantiator",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07979() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    HandlerInstantiator handlerInstantiator0 = mock(HandlerInstantiator.class, new ViolatedAssumptionAnswer());\n    Object object0 = objectMapper0.setHandlerInstantiator(handlerInstantiator0);\n}",
    "testName" : "test07979"
  },
  "test136136" : {
    "methodSignature" : "public ObjectMapper setAnnotationIntrospectors(AnnotationIntrospector serializerAI, AnnotationIntrospector deserializerAI)",
    "methodName" : "setAnnotationIntrospectors",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test136136() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.setAnnotationIntrospectors((AnnotationIntrospector) null, (AnnotationIntrospector) null);\n}",
    "testName" : "test136136"
  },
  "test01515" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01515() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<Long> class0 = Long.TYPE;\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    JavaType javaType0 = typeFactory0.constructType((Type) class0, typeBindings0);\n    ObjectReader objectReader0 = objectMapper0.readerFor(javaType0);\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = (DefaultDeserializationContext.Impl) objectReader0._context;\n    JsonDeserializer<Object> jsonDeserializer0 = objectMapper0._findRootDeserializer(defaultDeserializationContext_Impl0, javaType0);\n    jsonDeserializer0.isCachable();\n}",
    "testName" : "test01515"
  },
  "test06767" : {
    "methodSignature" : "public final <T> T readValue(JsonParser p, ResolvedType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06767() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);\n    byte[] byteArray0 = new byte[9];\n    JsonParser jsonParser0 = jsonFactory0.createParser(byteArray0, 192, (int) (byte) (-1));\n    objectMapper0.readValue(jsonParser0, (ResolvedType) null);\n}",
    "testName" : "test06767"
  },
  "test03535" : {
    "methodSignature" : "public boolean willFailOnUnknownId()",
    "methodName" : "willFailOnUnknownId",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03535() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleFilterProvider simpleFilterProvider0 = new SimpleFilterProvider();\n    objectMapper0.setFilters(simpleFilterProvider0);\n    simpleFilterProvider0.willFailOnUnknownId();\n}",
    "testName" : "test03535"
  },
  "test02727" : {
    "methodSignature" : "public <T> T readValue(DataInput src, JavaType valueType) throws IOException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02727() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<CollectionType> class0 = CollectionType.class;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ArrayType arrayType0 = typeFactory0.constructArrayType(class0);\n    objectMapper0.readValue((DataInput) null, (JavaType) arrayType0);\n}",
    "testName" : "test02727"
  },
  "test115115" : {
    "methodSignature" : "public <T> T readValue(File src, TypeReference valueTypeRef) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115115() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    MockFile mockFile0 = new MockFile(\"m{KhV`7jha@5\\\"b\");\n    objectMapper0.readValue((File) mockFile0, (TypeReference) null);\n}",
    "testName" : "test115115"
  },
  "test01919" : {
    "methodSignature" : "public ObjectReader reader(JsonNodeFactory f)",
    "methodName" : "reader",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01919() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.withExactBigDecimals(false);\n    ObjectReader objectReader0 = objectMapper0.reader(jsonNodeFactory0);\n}",
    "testName" : "test01919"
  },
  "test03939" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03939() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<InputStreamReader> class0 = InputStreamReader.class;\n    ObjectWriter objectWriter0 = objectMapper0.writerWithView(class0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test03939"
  },
  "test185185" : {
    "methodSignature" : "protected Object _convert(Object fromValue, JavaType toValueType) throws IllegalArgumentException",
    "methodName" : "_convert",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test185185() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JavaType javaType0 = TypeFactory.unknownType();\n    objectMapper0._convert((Object) null, javaType0);\n}",
    "testName" : "test185185"
  },
  "test09595" : {
    "methodSignature" : "public boolean isDouble()",
    "methodName" : "isDouble",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09595() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectNode objectNode0 = objectMapper0.createObjectNode();\n    objectNode0.isDouble();\n}",
    "testName" : "test09595"
  },
  "test142142" : {
    "methodSignature" : "public ObjectMapper registerModule(Module module)",
    "methodName" : "registerModule",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test142142() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleModule simpleModule0 = new SimpleModule();\n    Class<MockFileInputStream> class0 = MockFileInputStream.class;\n    JsonSerializer<MockFileInputStream> jsonSerializer0 = (JsonSerializer<MockFileInputStream>) mock(JsonSerializer.class, new ViolatedAssumptionAnswer());\n    SimpleModule simpleModule1 = simpleModule0.addSerializer((Class<? extends MockFileInputStream>) class0, jsonSerializer0);\n    ObjectMapper objectMapper1 = objectMapper0.registerModule(simpleModule1);\n}",
    "testName" : "test142142"
  },
  "test169169" : {
    "methodSignature" : "public void writeTree(JsonGenerator jgen, TreeNode rootNode) throws IOException, JsonProcessingException",
    "methodName" : "writeTree",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test169169() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();\n    JsonGenerator jsonGenerator0 = jsonFactory0.createGenerator((OutputStream) byteArrayBuilder0);\n    FloatNode floatNode0 = new FloatNode((-2));\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.writeTree(jsonGenerator0, (TreeNode) floatNode0);\n}",
    "testName" : "test169169"
  },
  "test08383" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08383() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonpCharacterEscapes jsonpCharacterEscapes0 = new JsonpCharacterEscapes();\n    ObjectWriter objectWriter0 = objectMapper0.writer((CharacterEscapes) jsonpCharacterEscapes0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test08383"
  },
  "test05151" : {
    "methodSignature" : "public ObjectMapper enable(DeserializationFeature first, DeserializationFeature... f)",
    "methodName" : "enable",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05151() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.READ_ENUMS_USING_TO_STRING;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[4];\n    objectMapper0.enable(deserializationFeature0, deserializationFeatureArray0);\n}",
    "testName" : "test05151"
  },
  "test123123" : {
    "methodSignature" : "public ObjectMapper addHandler(DeserializationProblemHandler h)",
    "methodName" : "addHandler",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test123123() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.addHandler((DeserializationProblemHandler) null);\n}",
    "testName" : "test123123"
  },
  "test0077" : {
    "methodSignature" : "public ObjectReader readerWithView(Class<?> view)",
    "methodName" : "readerWithView",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0077() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<BeanDeserializer> class0 = BeanDeserializer.class;\n    ObjectReader objectReader0 = objectMapper0.readerWithView(class0);\n}",
    "testName" : "test0077"
  },
  "test07171" : {
    "methodSignature" : "public ObjectMapper setAnnotationIntrospector(AnnotationIntrospector ai)",
    "methodName" : "setAnnotationIntrospector",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07171() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.setAnnotationIntrospector((AnnotationIntrospector) null);\n}",
    "testName" : "test07171"
  },
  "test04343" : {
    "methodSignature" : "public <T> T treeToValue(TreeNode n, Class<T> valueType) throws JsonProcessingException",
    "methodName" : "treeToValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04343() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.withExactBigDecimals(false);\n    ValueNode valueNode0 = jsonNodeFactory0.numberNode((Long) null);\n    Class<MapLikeType> class0 = MapLikeType.class;\n    MapLikeType mapLikeType0 = objectMapper0.treeToValue((TreeNode) valueNode0, class0);\n}",
    "testName" : "test04343"
  },
  "test09999" : {
    "methodSignature" : "public ObjectMapper clearProblemHandlers()",
    "methodName" : "clearProblemHandlers",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09999() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.clearProblemHandlers();\n}",
    "testName" : "test09999"
  },
  "test104104" : {
    "methodSignature" : "public ObjectMapper setSerializationInclusion(JsonInclude.Include incl)",
    "methodName" : "setSerializationInclusion",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104104() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.ALWAYS;\n    ObjectMapper objectMapper1 = objectMapper0.setSerializationInclusion(jsonInclude_Include0);\n}",
    "testName" : "test104104"
  },
  "test08787" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(JsonParser p, ResolvedType valueType) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08787() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);\n    objectMapper0.readValues((JsonParser) filteringParserDelegate0, (ResolvedType) null);\n}",
    "testName" : "test08787"
  },
  "test05555" : {
    "methodSignature" : "public ObjectMapper setSerializerFactory(SerializerFactory f)",
    "methodName" : "setSerializerFactory",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05555() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.setSerializerFactory((SerializerFactory) null);\n}",
    "testName" : "test05555"
  },
  "test01111" : {
    "methodSignature" : "public ObjectMapper setLocale(Locale l)",
    "methodName" : "setLocale",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01111() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Locale locale0 = Locale.ENGLISH;\n    ObjectMapper objectMapper1 = objectMapper0.setLocale(locale0);\n}",
    "testName" : "test01111"
  },
  "test06363" : {
    "methodSignature" : "public void writeValue(DataOutput out, Object value) throws IOException",
    "methodName" : "writeValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06363() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3751);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true);\n    ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);\n    objectMapper0.writeValue((DataOutput) objectOutputStream0, (Object) objectOutputStream0);\n}",
    "testName" : "test06363"
  },
  "test03131" : {
    "methodSignature" : "public void acceptJsonFormatVisitor(Class<?> type, JsonFormatVisitorWrapper visitor) throws JsonMappingException",
    "methodName" : "acceptJsonFormatVisitor",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03131() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<SimpleModule> class0 = SimpleModule.class;\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base(defaultSerializerProvider_Impl0);\n    objectMapper0.acceptJsonFormatVisitor((Class<?>) class0, (JsonFormatVisitorWrapper) jsonFormatVisitorWrapper_Base0);\n}",
    "testName" : "test03131"
  },
  "test07575" : {
    "methodSignature" : "public ObjectMapper setInjectableValues(InjectableValues injectableValues)",
    "methodName" : "setInjectableValues",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07575() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();\n    ObjectMapper objectMapper1 = objectMapper0.setInjectableValues(injectableValues_Std0);\n}",
    "testName" : "test07575"
  },
  "test172172" : {
    "methodSignature" : "public <T extends JsonNode> T valueToTree(Object fromValue) throws IllegalArgumentException",
    "methodName" : "valueToTree",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test172172() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.valueToTree((Object) null);\n}",
    "testName" : "test172172"
  },
  "test158158" : {
    "methodSignature" : "public ObjectMapper configure(SerializationFeature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test158158() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    SerializationFeature serializationFeature0 = SerializationFeature.WRITE_DATES_AS_TIMESTAMPS;\n    ObjectMapper objectMapper1 = objectMapper0.configure(serializationFeature0, false);\n}",
    "testName" : "test158158"
  },
  "test139139" : {
    "methodSignature" : "public ObjectMapper registerModule(Module module)",
    "methodName" : "registerModule",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test139139() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SimpleModule simpleModule0 = new SimpleModule();\n    Class<NioPathDeserializer> class0 = NioPathDeserializer.class;\n    JsonDeserializer<NioPathDeserializer> jsonDeserializer0 = (JsonDeserializer<NioPathDeserializer>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    simpleModule0.addDeserializer(class0, (JsonDeserializer<? extends NioPathDeserializer>) jsonDeserializer0);\n    ObjectMapper objectMapper1 = objectMapper0.registerModule(simpleModule0);\n}",
    "testName" : "test139139"
  },
  "test131131" : {
    "methodSignature" : "public <T> T readValue(InputStream src, JavaType valueType) throws IOException, JsonParseException, JsonMappingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test131131() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    PipedInputStream pipedInputStream0 = new PipedInputStream(375);\n    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 268);\n    objectMapper0.readValue((InputStream) bufferedInputStream0, (JavaType) null);\n}",
    "testName" : "test131131"
  },
  "test09191" : {
    "methodSignature" : "public int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09191() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    int int0 = objectMapper0.mixInCount();\n}",
    "testName" : "test09191"
  },
  "test112112" : {
    "methodSignature" : "public ObjectMapper setConfig(SerializationConfig config)",
    "methodName" : "setConfig",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112112() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper objectMapper1 = objectMapper0.setConfig((SerializationConfig) null);\n}",
    "testName" : "test112112"
  },
  "test161161" : {
    "methodSignature" : "public ObjectMapper configure(DeserializationFeature f, boolean state)",
    "methodName" : "configure",
    "className" : "com.fasterxml.jackson.databind.ObjectMapper",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test161161() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.WRAP_EXCEPTIONS;\n    objectMapper0.configure(deserializationFeature0, true);\n}",
    "testName" : "test161161"
  }
}