project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Class<ObjectInputStream> class0 = ObjectInputStream.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    MinimalClassNameIdResolver minimalClassNameIdResolver0 = new MinimalClassNameIdResolver(simpleType0, typeFactory0);
    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.PROPERTY;
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(simpleType0, minimalClassNameIdResolver0, ""vze v`s0_X<[0CB"", true, simpleType0, jsonTypeInfo_As0);
    ObjectMapper objectMapper0 = new ObjectMapper();
    TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0, true);
    objectMapper0.writeValue((JsonGenerator) tokenBuffer0, (Object) asPropertyTypeDeserializer0);
    assertEquals(""vze v`s0_X<[0CB"", asPropertyTypeDeserializer0.getPropertyName());
}",0,assertNotNull(asPropertyTypeDeserializer0.getPropertyName())
project,0,test011,"public void test011() throws Throwable {
    AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, ""g"", false, (JavaType) null);
    String string0 = asWrapperTypeDeserializer0.toString();
    assertEquals(""[com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer; base-type:null; id-resolver: null]"", string0);
}",0,
project,0,test012,"public void test012() throws Throwable {
    AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, ""g"", false, (JavaType) null);
    String string0 = asWrapperTypeDeserializer0.toString();
    assertEquals(""g"", asWrapperTypeDeserializer0.getPropertyName());
}",0,assertNotNull(asWrapperTypeDeserializer0.getPropertyName())
project,0,test023,"public void test023() throws Throwable {
    AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, ""g"", false, (JavaType) null);
    // Undeclared exception!
    try {
        asWrapperTypeDeserializer0.baseTypeName();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase"", e);
    }
}",0,
project,0,test034,"public void test034() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    JsonFactory jsonFactory0 = new JsonFactory();
    JsonParser jsonParser0 = jsonFactory0.createParser(""JSON"");
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, ""JSON"", true, (JavaType) null);
    asWrapperTypeDeserializer0._deserializeWithNativeTypeId(jsonParser0, defaultDeserializationContext_Impl0);
    assertEquals(""JSON"", asWrapperTypeDeserializer0.getPropertyName());
}",0,
project,0,test056,"public void test056() throws Throwable {
    AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, (String) null, false, (JavaType) null);
    assertEquals("""", asWrapperTypeDeserializer0.getPropertyName());
}",0,assertNotNull(asWrapperTypeDeserializer0.getPropertyName())
project,0,test067,"public void test067() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<Map> class0 = Map.class;
    MapType mapType0 = typeFactory0.constructMapType(class0, class0, class0);
    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(mapType0, typeFactory0);
    AsExternalTypeDeserializer asExternalTypeDeserializer0 = new AsExternalTypeDeserializer(mapType0, classNameIdResolver0, ""com.fasterxml.jackson.databind.deser.AbstractDeserializer"", false, (JavaType) null);
    Class<?> class1 = asExternalTypeDeserializer0.getDefaultImpl();
    assertNull(class1);
}",0,"assertEquals(class0, class1)"
project,0,test068,"public void test068() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<Map> class0 = Map.class;
    MapType mapType0 = typeFactory0.constructMapType(class0, class0, class0);
    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(mapType0, typeFactory0);
    AsExternalTypeDeserializer asExternalTypeDeserializer0 = new AsExternalTypeDeserializer(mapType0, classNameIdResolver0, ""com.fasterxml.jackson.databind.deser.AbstractDeserializer"", false, (JavaType) null);
    Class<?> class1 = asExternalTypeDeserializer0.getDefaultImpl();
    assertEquals(""com.fasterxml.jackson.databind.deser.AbstractDeserializer"", asExternalTypeDeserializer0.getPropertyName());
}",0,assertNotNull(asExternalTypeDeserializer0.getPropertyName())
project,0,test079,"public void test079() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    JsonFactory jsonFactory0 = new JsonFactory();
    JsonParser jsonParser0 = jsonFactory0.createParser(""JSON"");
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, ""JSON"", true, (JavaType) null);
    // Undeclared exception!
    try {
        asWrapperTypeDeserializer0._deserializeWithNativeTypeId(jsonParser0, defaultDeserializationContext_Impl0, jsonParser0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase"", e);
    }
}",0,
project,0,test0810,"public void test0810() throws Throwable {
    Class<BeanDeserializer> class0 = BeanDeserializer.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer(simpleType0, (TypeIdResolver) null, ""; base-type:"", true, simpleType0);
    // Undeclared exception!
    try {
        asWrapperTypeDeserializer0._findDefaultImplDeserializer((DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase"", e);
    }
}",0,
project,0,test0911,"public void test0911() throws Throwable {
    Class<BeanDeserializer> class0 = BeanDeserializer.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    MinimalClassNameIdResolver minimalClassNameIdResolver0 = new MinimalClassNameIdResolver(simpleType0, typeFactory0);
    AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer(simpleType0, minimalClassNameIdResolver0, ""uT)4++` S]M&3ry"", false, simpleType0);
    CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class0, 0);
    asWrapperTypeDeserializer0._defaultImplDeserializer = (JsonDeserializer<Object>) coreXMLDeserializers_Std0;
    asWrapperTypeDeserializer0._findDefaultImplDeserializer((DeserializationContext) null);
    assertEquals(""uT)4++` S]M&3ry"", asWrapperTypeDeserializer0.getPropertyName());
}",0,
project,0,test1012,"public void test1012() throws Throwable {
    AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, ""xzHOFZ:r6gB*|<a9`"", false, (JavaType) null);
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    JsonFactory jsonFactory0 = new JsonFactory();
    JsonParser jsonParser0 = jsonFactory0.createParser(""xzHOFZ:r6gB*|<a9`"");
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    // Undeclared exception!
    try {
        asWrapperTypeDeserializer0._deserializeWithNativeTypeId(jsonParser0, defaultDeserializationContext_Impl0, ""xzHOFZ:r6gB*|<a9`"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase"", e);
    }
}",0,
project,0,test1113,"public void test1113() throws Throwable {
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, """", true, (JavaType) null);
    // Undeclared exception!
    try {
        asPropertyTypeDeserializer0._handleUnknownTypeId((DeserializationContext) null, """", (TypeIdResolver) null, (JavaType) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase"", e);
    }
}",0,
project,0,test1214,"public void test1214() throws Throwable {
    Class<ObjectInputStream> class0 = ObjectInputStream.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    MinimalClassNameIdResolver minimalClassNameIdResolver0 = new MinimalClassNameIdResolver(simpleType0, typeFactory0);
    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.PROPERTY;
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(simpleType0, minimalClassNameIdResolver0, ""vze v`s0_X<[0CB"", true, simpleType0, jsonTypeInfo_As0);
    ObjectMapper objectMapper0 = new ObjectMapper();
    DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
    // Undeclared exception!
    try {
        asPropertyTypeDeserializer0._handleUnknownTypeId(deserializationContext0, ""vze v`s0_X<[0CB"", minimalClassNameIdResolver0, simpleType0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.DeserializationContext"", e);
    }
}",0,
