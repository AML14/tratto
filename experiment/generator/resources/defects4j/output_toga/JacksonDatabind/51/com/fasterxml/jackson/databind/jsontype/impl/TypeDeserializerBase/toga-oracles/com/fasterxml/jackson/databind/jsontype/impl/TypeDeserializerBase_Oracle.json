[ {
  "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
  "methodSignature" : "public final String getPropertyName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(asPropertyTypeDeserializer0.getPropertyName())",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test011"
}, {
  "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
  "methodSignature" : "public final String getPropertyName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(asWrapperTypeDeserializer0.getPropertyName())",
  "exception" : "",
  "testName" : "test012"
}, {
  "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
  "methodSignature" : "public String baseTypeName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test023"
}, {
  "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
  "methodSignature" : "public final String getPropertyName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test034"
}, {
  "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
  "methodSignature" : "public final String getPropertyName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(asWrapperTypeDeserializer0.getPropertyName())",
  "exception" : "",
  "testName" : "test056"
}, {
  "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
  "methodSignature" : "public Class<?> getDefaultImpl()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(class0, class1)",
  "exception" : "",
  "testName" : "test067"
}, {
  "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
  "methodSignature" : "public final String getPropertyName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(asExternalTypeDeserializer0.getPropertyName())",
  "exception" : "",
  "testName" : "test068"
}, {
  "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
  "methodSignature" : "protected Object _deserializeWithNativeTypeId(JsonParser jp, DeserializationContext ctxt, Object typeId) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test079"
}, {
  "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
  "methodSignature" : "protected final JsonDeserializer<Object> _findDefaultImplDeserializer(DeserializationContext ctxt) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0810"
}, {
  "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
  "methodSignature" : "public final String getPropertyName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0911"
}, {
  "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
  "methodSignature" : "protected Object _deserializeWithNativeTypeId(JsonParser jp, DeserializationContext ctxt, Object typeId) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1012"
}, {
  "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
  "methodSignature" : "protected JavaType _handleUnknownTypeId(DeserializationContext ctxt, String typeId, TypeIdResolver idResolver, JavaType baseType) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1113"
}, {
  "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
  "methodSignature" : "protected JavaType _handleUnknownTypeId(DeserializationContext ctxt, String typeId, TypeIdResolver idResolver, JavaType baseType) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1214"
} ]