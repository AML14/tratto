{
  "test1113" : {
    "methodSignature" : "protected JavaType _handleUnknownTypeId(DeserializationContext ctxt, String typeId, TypeIdResolver idResolver, JavaType baseType) throws IOException",
    "methodName" : "_handleUnknownTypeId",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1113() throws Throwable {\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, (TypeIdResolver) null, \"\", true, (JavaType) null);\n    asPropertyTypeDeserializer0._handleUnknownTypeId((DeserializationContext) null, \"\", (TypeIdResolver) null, (JavaType) null);\n}",
    "testName" : "test1113"
  },
  "test1214" : {
    "methodSignature" : "protected JavaType _handleUnknownTypeId(DeserializationContext ctxt, String typeId, TypeIdResolver idResolver, JavaType baseType) throws IOException",
    "methodName" : "_handleUnknownTypeId",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1214() throws Throwable {\n    Class<ObjectInputStream> class0 = ObjectInputStream.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    MinimalClassNameIdResolver minimalClassNameIdResolver0 = new MinimalClassNameIdResolver(simpleType0, typeFactory0);\n    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.PROPERTY;\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(simpleType0, minimalClassNameIdResolver0, \"vze v`s0_X<[0CB\", true, simpleType0, jsonTypeInfo_As0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();\n    asPropertyTypeDeserializer0._handleUnknownTypeId(deserializationContext0, \"vze v`s0_X<[0CB\", minimalClassNameIdResolver0, simpleType0);\n}",
    "testName" : "test1214"
  },
  "test1012" : {
    "methodSignature" : "protected Object _deserializeWithNativeTypeId(JsonParser jp, DeserializationContext ctxt, Object typeId) throws IOException",
    "methodName" : "_deserializeWithNativeTypeId",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1012() throws Throwable {\n    AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, \"xzHOFZ:r6gB*|<a9`\", false, (JavaType) null);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"xzHOFZ:r6gB*|<a9`\");\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    asWrapperTypeDeserializer0._deserializeWithNativeTypeId(jsonParser0, defaultDeserializationContext_Impl0, \"xzHOFZ:r6gB*|<a9`\");\n}",
    "testName" : "test1012"
  },
  "test000" : {
    "methodSignature" : "public final String getPropertyName()",
    "methodName" : "getPropertyName",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Class<ObjectInputStream> class0 = ObjectInputStream.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    MinimalClassNameIdResolver minimalClassNameIdResolver0 = new MinimalClassNameIdResolver(simpleType0, typeFactory0);\n    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.PROPERTY;\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(simpleType0, minimalClassNameIdResolver0, \"vze v`s0_X<[0CB\", true, simpleType0, jsonTypeInfo_As0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0, true);\n    objectMapper0.writeValue((JsonGenerator) tokenBuffer0, (Object) asPropertyTypeDeserializer0);\n    asPropertyTypeDeserializer0.getPropertyName();\n}",
    "testName" : "test000"
  },
  "test011" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, \"g\", false, (JavaType) null);\n    String string0 = asWrapperTypeDeserializer0.toString();\n}",
    "testName" : "test011"
  },
  "test012" : {
    "methodSignature" : "public final String getPropertyName()",
    "methodName" : "getPropertyName",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test012() throws Throwable {\n    AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, \"g\", false, (JavaType) null);\n    String string0 = asWrapperTypeDeserializer0.toString();\n    asWrapperTypeDeserializer0.getPropertyName();\n}",
    "testName" : "test012"
  },
  "test023" : {
    "methodSignature" : "public String baseTypeName()",
    "methodName" : "baseTypeName",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test023() throws Throwable {\n    AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, \"g\", false, (JavaType) null);\n    asWrapperTypeDeserializer0.baseTypeName();\n}",
    "testName" : "test023"
  },
  "test034" : {
    "methodSignature" : "public final String getPropertyName()",
    "methodName" : "getPropertyName",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, \"JSON\", true, (JavaType) null);\n    asWrapperTypeDeserializer0._deserializeWithNativeTypeId(jsonParser0, defaultDeserializationContext_Impl0);\n    asWrapperTypeDeserializer0.getPropertyName();\n}",
    "testName" : "test034"
  },
  "test056" : {
    "methodSignature" : "public final String getPropertyName()",
    "methodName" : "getPropertyName",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056() throws Throwable {\n    AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, (String) null, false, (JavaType) null);\n    asWrapperTypeDeserializer0.getPropertyName();\n}",
    "testName" : "test056"
  },
  "test067" : {
    "methodSignature" : "public Class<?> getDefaultImpl()",
    "methodName" : "getDefaultImpl",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<Map> class0 = Map.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class0, class0);\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(mapType0, typeFactory0);\n    AsExternalTypeDeserializer asExternalTypeDeserializer0 = new AsExternalTypeDeserializer(mapType0, classNameIdResolver0, \"com.fasterxml.jackson.databind.deser.AbstractDeserializer\", false, (JavaType) null);\n    Class<?> class1 = asExternalTypeDeserializer0.getDefaultImpl();\n}",
    "testName" : "test067"
  },
  "test0810" : {
    "methodSignature" : "protected final JsonDeserializer<Object> _findDefaultImplDeserializer(DeserializationContext ctxt) throws IOException",
    "methodName" : "_findDefaultImplDeserializer",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0810() throws Throwable {\n    Class<BeanDeserializer> class0 = BeanDeserializer.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer(simpleType0, (TypeIdResolver) null, \"; base-type:\", true, simpleType0);\n    asWrapperTypeDeserializer0._findDefaultImplDeserializer((DeserializationContext) null);\n}",
    "testName" : "test0810"
  },
  "test0911" : {
    "methodSignature" : "public final String getPropertyName()",
    "methodName" : "getPropertyName",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0911() throws Throwable {\n    Class<BeanDeserializer> class0 = BeanDeserializer.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    MinimalClassNameIdResolver minimalClassNameIdResolver0 = new MinimalClassNameIdResolver(simpleType0, typeFactory0);\n    AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer(simpleType0, minimalClassNameIdResolver0, \"uT)4++` S]M&3ry\", false, simpleType0);\n    CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class0, 0);\n    asWrapperTypeDeserializer0._defaultImplDeserializer = (JsonDeserializer<Object>) coreXMLDeserializers_Std0;\n    asWrapperTypeDeserializer0._findDefaultImplDeserializer((DeserializationContext) null);\n    asWrapperTypeDeserializer0.getPropertyName();\n}",
    "testName" : "test0911"
  },
  "test068" : {
    "methodSignature" : "public final String getPropertyName()",
    "methodName" : "getPropertyName",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<Map> class0 = Map.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class0, class0);\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(mapType0, typeFactory0);\n    AsExternalTypeDeserializer asExternalTypeDeserializer0 = new AsExternalTypeDeserializer(mapType0, classNameIdResolver0, \"com.fasterxml.jackson.databind.deser.AbstractDeserializer\", false, (JavaType) null);\n    Class<?> class1 = asExternalTypeDeserializer0.getDefaultImpl();\n    asExternalTypeDeserializer0.getPropertyName();\n}",
    "testName" : "test068"
  },
  "test079" : {
    "methodSignature" : "protected Object _deserializeWithNativeTypeId(JsonParser jp, DeserializationContext ctxt, Object typeId) throws IOException",
    "methodName" : "_deserializeWithNativeTypeId",
    "className" : "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer((JavaType) null, (TypeIdResolver) null, \"JSON\", true, (JavaType) null);\n    asWrapperTypeDeserializer0._deserializeWithNativeTypeId(jsonParser0, defaultDeserializationContext_Impl0, jsonParser0);\n}",
    "testName" : "test079"
  }
}