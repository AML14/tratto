{
  "test1212" : {
    "methodSignature" : "public ObjectIdInfo findObjectReferenceInfo(Annotated ann, ObjectIdInfo objectIdInfo)",
    "methodName" : "findObjectReferenceInfo",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    AnnotatedConstructor annotatedConstructor0 = basicBeanDescription0.findDefaultConstructor();\n    ObjectIdInfo objectIdInfo0 = jacksonAnnotationIntrospector0.findObjectReferenceInfo(annotatedConstructor0, (ObjectIdInfo) null);\n}",
    "testName" : "test1212"
  },
  "test2323" : {
    "methodSignature" : "protected Class<?> _classIfExplicit(Class<?> cls, Class<?> implicit)",
    "methodName" : "_classIfExplicit",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    Class<AnnotatedMethod> class0 = AnnotatedMethod.class;\n    Class<Annotation> class1 = Annotation.class;\n    Class<?> class2 = jacksonAnnotationIntrospector0._classIfExplicit(class0, class1);\n}",
    "testName" : "test2323"
  },
  "test1313" : {
    "methodSignature" : "public Object findKeySerializer(Annotated a)",
    "methodName" : "findKeySerializer",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    AnnotatedConstructor annotatedConstructor0 = basicBeanDescription0.findDefaultConstructor();\n    Object object0 = jacksonAnnotationIntrospector0.findKeySerializer(annotatedConstructor0);\n}",
    "testName" : "test1313"
  },
  "test2425" : {
    "methodSignature" : "public boolean isEmpty()",
    "methodName" : "isEmpty",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2425() throws Throwable {\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    PropertyName propertyName0 = jacksonAnnotationIntrospector0._propertyName(\"$~\", (String) null);\n    propertyName0.isEmpty();\n}",
    "testName" : "test2425"
  },
  "test1010" : {
    "methodSignature" : "public List<NamedType> findSubtypes(Annotated a)",
    "methodName" : "findSubtypes",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;\n    AnnotatedConstructor annotatedConstructor0 = basicBeanDescription0.findDefaultConstructor();\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    List<NamedType> list0 = jacksonAnnotationIntrospector0.findSubtypes(annotatedConstructor0);\n}",
    "testName" : "test1010"
  },
  "test2121" : {
    "methodSignature" : "protected Class<?> _classIfExplicit(Class<?> cls, Class<?> implicit)",
    "methodName" : "_classIfExplicit",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    Class<AnnotatedMethod> class0 = AnnotatedMethod.class;\n    Class<?> class1 = jacksonAnnotationIntrospector0._classIfExplicit(class0, class0);\n}",
    "testName" : "test2121"
  },
  "test1111" : {
    "methodSignature" : "public String findTypeName(AnnotatedClass ac)",
    "methodName" : "findTypeName",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    Class<AnnotatedMethod> class0 = AnnotatedMethod.class;\n    AnnotatedClass annotatedClass0 = AnnotatedClass.construct(class0, jacksonAnnotationIntrospector0, (ClassIntrospector.MixInResolver) null);\n    String string0 = jacksonAnnotationIntrospector0.findTypeName(annotatedClass0);\n}",
    "testName" : "test1111"
  },
  "test2222" : {
    "methodSignature" : "protected Class<?> _classIfExplicit(Class<?> cls, Class<?> implicit)",
    "methodName" : "_classIfExplicit",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    Class<?> class0 = jacksonAnnotationIntrospector0._classIfExplicit((Class<?>) null, (Class<?>) null);\n}",
    "testName" : "test2222"
  },
  "test011" : {
    "methodSignature" : "public boolean isTypeIdVisible()",
    "methodName" : "isTypeIdVisible",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    StdTypeResolverBuilder stdTypeResolverBuilder0 = jacksonAnnotationIntrospector0._constructStdTypeResolverBuilder();\n    stdTypeResolverBuilder0.isTypeIdVisible();\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public Object findFilterId(AnnotatedClass ac)",
    "methodName" : "findFilterId",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    jacksonAnnotationIntrospector0.findFilterId((AnnotatedClass) null);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public String findEnumValue(Enum<?> value)",
    "methodName" : "findEnumValue",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.NON_ABSENT;\n    String string0 = jacksonAnnotationIntrospector0.findEnumValue(jsonInclude_Include0);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public String[] findPropertiesToIgnore(Annotated ac)",
    "methodName" : "findPropertiesToIgnore",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    AnnotatedConstructor annotatedConstructor0 = basicBeanDescription0.findDefaultConstructor();\n    String[] stringArray0 = jacksonAnnotationIntrospector0.findPropertiesToIgnore((Annotated) annotatedConstructor0);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public TypeResolverBuilder<?> findPropertyContentTypeResolver(MapperConfig<?> config, AnnotatedMember am, JavaType containerType)",
    "methodName" : "findPropertyContentTypeResolver",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    SimpleType simpleType0 = (SimpleType) TypeBindings.UNBOUND;\n    jacksonAnnotationIntrospector0.findPropertyContentTypeResolver((MapperConfig<?>) null, (AnnotatedMember) null, simpleType0);\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "protected BeanPropertyWriter _constructVirtualProperty(JsonAppend.Attr attr, MapperConfig<?> config, AnnotatedClass ac, JavaType type)",
    "methodName" : "_constructVirtualProperty",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    BeanSerializerBuilder beanSerializerBuilder0 = new BeanSerializerBuilder(basicBeanDescription0);\n    AnnotatedClass annotatedClass0 = beanSerializerBuilder0.getClassInfo();\n    JsonAppend.Attr jsonAppend_Attr0 = mock(JsonAppend.Attr.class, new ViolatedAssumptionAnswer());\n    doReturn(\"\").when(jsonAppend_Attr0).propName();\n    doReturn(\"\").when(jsonAppend_Attr0).propNamespace();\n    doReturn(false).when(jsonAppend_Attr0).required();\n    doReturn(\"\").when(jsonAppend_Attr0).value();\n    jacksonAnnotationIntrospector0._constructVirtualProperty(jsonAppend_Attr0, (MapperConfig<?>) null, annotatedClass0, (JavaType) null);\n}",
    "testName" : "test1616"
  },
  "test1717" : {
    "methodSignature" : "protected BeanPropertyWriter _constructVirtualProperty(JsonAppend.Attr attr, MapperConfig<?> config, AnnotatedClass ac, JavaType type)",
    "methodName" : "_constructVirtualProperty",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    BeanSerializerBuilder beanSerializerBuilder0 = new BeanSerializerBuilder(basicBeanDescription0);\n    AnnotatedClass annotatedClass0 = beanSerializerBuilder0.getClassInfo();\n    JsonAppend.Attr jsonAppend_Attr0 = mock(JsonAppend.Attr.class, new ViolatedAssumptionAnswer());\n    doReturn(\"8ARgj\").when(jsonAppend_Attr0).propName();\n    doReturn(\"8ARgj\").when(jsonAppend_Attr0).propNamespace();\n    doReturn(true).when(jsonAppend_Attr0).required();\n    doReturn(\"8ARgj\").when(jsonAppend_Attr0).value();\n    jacksonAnnotationIntrospector0._constructVirtualProperty(jsonAppend_Attr0, (MapperConfig<?>) null, annotatedClass0, (JavaType) null);\n}",
    "testName" : "test1717"
  },
  "test1414" : {
    "methodSignature" : "public JsonInclude.Include findSerializationInclusionForContent(Annotated a, JsonInclude.Include defValue)",
    "methodName" : "findSerializationInclusionForContent",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;\n    AnnotatedConstructor annotatedConstructor0 = basicBeanDescription0.findDefaultConstructor();\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.ALWAYS;\n    JsonInclude.Include jsonInclude_Include1 = jacksonAnnotationIntrospector0.findSerializationInclusionForContent(annotatedConstructor0, jsonInclude_Include0);\n}",
    "testName" : "test1414"
  },
  "test2526" : {
    "methodSignature" : "public boolean hasNamespace()",
    "methodName" : "hasNamespace",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2526() throws Throwable {\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    PropertyName propertyName0 = jacksonAnnotationIntrospector0._propertyName(\"com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector\", \"\");\n    propertyName0.hasNamespace();\n}",
    "testName" : "test2526"
  },
  "test2527" : {
    "methodSignature" : "public boolean hasSimpleName()",
    "methodName" : "hasSimpleName",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2527() throws Throwable {\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    PropertyName propertyName0 = jacksonAnnotationIntrospector0._propertyName(\"com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector\", \"\");\n    propertyName0.hasSimpleName();\n}",
    "testName" : "test2527"
  },
  "test2020" : {
    "methodSignature" : "public JsonPOJOBuilder.Value findPOJOBuilderConfig(AnnotatedClass ac)",
    "methodName" : "findPOJOBuilderConfig",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    Class<AnnotatedMethod> class0 = AnnotatedMethod.class;\n    AnnotatedClass annotatedClass0 = AnnotatedClass.construct(class0, jacksonAnnotationIntrospector0, (ClassIntrospector.MixInResolver) null);\n    JsonPOJOBuilder.Value jsonPOJOBuilder_Value0 = jacksonAnnotationIntrospector0.findPOJOBuilderConfig(annotatedClass0);\n}",
    "testName" : "test2020"
  },
  "test000" : {
    "methodSignature" : "public boolean isTypeIdVisible()",
    "methodName" : "isTypeIdVisible",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    StdTypeResolverBuilder stdTypeResolverBuilder0 = jacksonAnnotationIntrospector0._constructNoTypeResolverBuilder();\n    stdTypeResolverBuilder0.isTypeIdVisible();\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public String writeValueAsString(Object value) throws JsonProcessingException",
    "methodName" : "writeValueAsString",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.writeValueAsString(basicBeanDescription0);\n}",
    "testName" : "test022"
  },
  "test066" : {
    "methodSignature" : "public PropertyName findRootName(AnnotatedClass ac)",
    "methodName" : "findRootName",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    Class<BasicBeanDescription> class0 = BasicBeanDescription.class;\n    AnnotatedClass annotatedClass0 = AnnotatedClass.construct(class0, jacksonAnnotationIntrospector0, (ClassIntrospector.MixInResolver) null);\n    PropertyName propertyName0 = jacksonAnnotationIntrospector0.findRootName(annotatedClass0);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;\n    BeanSerializerBuilder beanSerializerBuilder0 = new BeanSerializerBuilder(basicBeanDescription0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(beanSerializerBuilder0);\n}",
    "testName" : "test088"
  },
  "test1818" : {
    "methodSignature" : "protected BeanPropertyWriter _constructVirtualProperty(JsonAppend.Prop prop, MapperConfig<?> config, AnnotatedClass ac)",
    "methodName" : "_constructVirtualProperty",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    JsonAppend.Prop jsonAppend_Prop0 = mock(JsonAppend.Prop.class, new ViolatedAssumptionAnswer());\n    doReturn((String) null).when(jsonAppend_Prop0).name();\n    doReturn((String) null).when(jsonAppend_Prop0).namespace();\n    doReturn(false).when(jsonAppend_Prop0).required();\n    jacksonAnnotationIntrospector0._constructVirtualProperty(jsonAppend_Prop0, (MapperConfig<?>) null, (AnnotatedClass) null);\n}",
    "testName" : "test1818"
  },
  "test1919" : {
    "methodSignature" : "protected BeanPropertyWriter _constructVirtualProperty(JsonAppend.Prop prop, MapperConfig<?> config, AnnotatedClass ac)",
    "methodName" : "_constructVirtualProperty",
    "className" : "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = new JacksonAnnotationIntrospector();\n    JsonAppend.Prop jsonAppend_Prop0 = mock(JsonAppend.Prop.class, new ViolatedAssumptionAnswer());\n    doReturn(\"%{,7:Hk~ws0E\\\"sz\").when(jsonAppend_Prop0).name();\n    doReturn(\"%{,7:Hk~ws0E\\\"sz\").when(jsonAppend_Prop0).namespace();\n    doReturn(true).when(jsonAppend_Prop0).required();\n    doReturn((Class) null).when(jsonAppend_Prop0).type();\n    jacksonAnnotationIntrospector0._constructVirtualProperty(jsonAppend_Prop0, (MapperConfig<?>) null, (AnnotatedClass) null);\n}",
    "testName" : "test1919"
  }
}