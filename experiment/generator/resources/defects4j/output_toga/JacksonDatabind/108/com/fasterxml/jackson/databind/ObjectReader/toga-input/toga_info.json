{
  "test1212" : {
    "methodSignature" : "protected void _reportUndetectableSource(Object src) throws JsonProcessingException",
    "methodName" : "_reportUndetectableSource",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0._reportUndetectableSource((Object) null);\n}",
    "testName" : "test1212"
  },
  "test4646" : {
    "methodSignature" : "public boolean isEnabled(JsonParser.Feature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4646() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    ObjectReader objectReader0 = objectMapper0.reader((FormatSchema) null);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER;\n    boolean boolean0 = objectReader0.isEnabled(jsonParser_Feature0);\n}",
    "testName" : "test4646"
  },
  "test3434" : {
    "methodSignature" : "public boolean isEnabled(DeserializationFeature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(objectMapper0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_INVALID_SUBTYPE;\n    boolean boolean0 = objectReader0.isEnabled(deserializationFeature0);\n}",
    "testName" : "test3434"
  },
  "test6868" : {
    "methodSignature" : "public ObjectReader withValueToUpdate(Object value)",
    "methodName" : "withValueToUpdate",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6868() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(objectMapper0);\n    BigInteger bigInteger0 = BigInteger.TEN;\n    BigIntegerNode bigIntegerNode0 = BigIntegerNode.valueOf(bigInteger0);\n    ObjectReader objectReader1 = objectReader0.withValueToUpdate(bigIntegerNode0);\n}",
    "testName" : "test6868"
  },
  "test2424" : {
    "methodSignature" : "public <T> T readValue(JsonParser p, ResolvedType valueType) throws IOException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null, defaultSerializerProvider_Impl0, defaultDeserializationContext_Impl0);\n    ContextAttributes contextAttributes0 = ContextAttributes.Impl.getEmpty();\n    ObjectReader objectReader0 = objectMapper0.reader(contextAttributes0);\n    TypeFactory typeFactory0 = objectReader0.getTypeFactory();\n    Class<HashMap> class0 = HashMap.class;\n    Class<TypeIdResolver> class1 = TypeIdResolver.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class0, class1);\n    objectReader0.readValue((JsonParser) null, (ResolvedType) mapType0);\n}",
    "testName" : "test2424"
  },
  "test7878" : {
    "methodSignature" : "public String textValue()",
    "methodName" : "textValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7878() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[5];\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    deserializationFeatureArray0[1] = deserializationFeature0;\n    deserializationFeatureArray0[2] = deserializationFeature0;\n    deserializationFeatureArray0[3] = deserializationFeature0;\n    deserializationFeatureArray0[4] = deserializationFeature0;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0, deserializationFeatureArray0);\n    byte[] byteArray0 = new byte[5];\n    JsonNode jsonNode0 = objectReader0.readTree(byteArray0, (int) (byte) (-113), (-5059));\n    jsonNode0.textValue();\n}",
    "testName" : "test7878"
  },
  "test1010" : {
    "methodSignature" : "public byte[] writeValueAsBytes(Object value) throws JsonProcessingException",
    "methodName" : "writeValueAsBytes",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(objectMapper0);\n    objectMapper0.writeValueAsBytes(objectReader0);\n}",
    "testName" : "test1010"
  },
  "test4444" : {
    "methodSignature" : "public InjectableValues getInjectableValues()",
    "methodName" : "getInjectableValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4444() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    InjectableValues injectableValues0 = objectReader0.getInjectableValues();\n}",
    "testName" : "test4444"
  },
  "test3232" : {
    "methodSignature" : "public boolean isIntegralNumber()",
    "methodName" : "isIntegralNumber",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonNode jsonNode0 = objectReader0.createObjectNode();\n    jsonNode0.isIntegralNumber();\n}",
    "testName" : "test3232"
  },
  "test6666" : {
    "methodSignature" : "public ObjectReader withType(java.lang.reflect.Type valueType)",
    "methodName" : "withType",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6666() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<FilteringParserDelegate> class0 = FilteringParserDelegate.class;\n    ObjectReader objectReader0 = objectMapper0.readerFor(class0);\n    ObjectReader objectReader1 = objectReader0.withType((Type) class0);\n}",
    "testName" : "test6666"
  },
  "test8888" : {
    "methodSignature" : "protected final JsonNode _bindAndCloseAsTree(JsonParser p0) throws IOException",
    "methodName" : "_bindAndCloseAsTree",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8888() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<ShortNode> class0 = ShortNode.class;\n    ObjectReader objectReader0 = objectMapper0.readerFor(class0);\n    objectReader0._bindAndCloseAsTree((JsonParser) null);\n}",
    "testName" : "test8888"
  },
  "test5454" : {
    "methodSignature" : "public ObjectReader with(DeserializationFeature first, DeserializationFeature... other)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5454() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[1];\n    objectReader0.with(deserializationFeature0, deserializationFeatureArray0);\n}",
    "testName" : "test5454"
  },
  "test2222" : {
    "methodSignature" : "public ObjectReader withRootName(String rootName)",
    "methodName" : "withRootName",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    ObjectReader objectReader1 = objectReader0.withRootName(\"=KX)S\");\n}",
    "testName" : "test2222"
  },
  "test7676" : {
    "methodSignature" : "public JsonNode readTree(String json) throws IOException",
    "methodName" : "readTree",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7676() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.readTree(\"{'<}fu\");\n}",
    "testName" : "test7676"
  },
  "test077" : {
    "methodSignature" : "public ObjectReader withAttributes(Map<?, ?> attrs)",
    "methodName" : "withAttributes",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    ConcurrentHashMap<CollectionType, Module> concurrentHashMap0 = new ConcurrentHashMap<CollectionType, Module>();\n    ObjectReader objectReader1 = objectReader0.withAttributes(concurrentHashMap0);\n}",
    "testName" : "test077"
  },
  "test1616" : {
    "methodSignature" : "public ObjectReader with(FormatFeature feature)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonReadFeature jsonReadFeature0 = JsonReadFeature.ALLOW_JAVA_COMMENTS;\n    ObjectReader objectReader1 = objectReader0.with((FormatFeature) jsonReadFeature0);\n}",
    "testName" : "test1616"
  },
  "test2828" : {
    "methodSignature" : "public <T> T readValue(JsonNode src) throws IOException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    StringReader stringReader0 = new StringReader(\"5\");\n    JsonNode jsonNode0 = objectReader0.readTree((Reader) stringReader0);\n    objectReader0.readValue(jsonNode0);\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public ObjectReader without(JsonParser.Feature feature)",
    "methodName" : "without",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_SINGLE_QUOTES;\n    ObjectReader objectReader1 = objectReader0.without(jsonParser_Feature0);\n}",
    "testName" : "test1414"
  },
  "test4848" : {
    "methodSignature" : "public ObjectReader with(Base64Variant defaultBase64)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4848() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(objectMapper0);\n    ObjectReader objectReader1 = objectReader0.with((Base64Variant) null);\n}",
    "testName" : "test4848"
  },
  "test3636" : {
    "methodSignature" : "public ObjectReader without(DeserializationFeature first, DeserializationFeature... other)",
    "methodName" : "without",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3636() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.USE_LONG_FOR_INTS;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[2];\n    objectReader0.without(deserializationFeature0, deserializationFeatureArray0);\n}",
    "testName" : "test3636"
  },
  "test5858" : {
    "methodSignature" : "public ContextAttributes getAttributes()",
    "methodName" : "getAttributes",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5858() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory((ObjectCodec) null);\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[7];\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    deserializationFeatureArray0[1] = deserializationFeature0;\n    deserializationFeatureArray0[2] = deserializationFeature0;\n    deserializationFeatureArray0[3] = deserializationFeature0;\n    deserializationFeatureArray0[4] = deserializationFeature0;\n    deserializationFeatureArray0[5] = deserializationFeature0;\n    deserializationFeatureArray0[6] = deserializationFeature0;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0, deserializationFeatureArray0);\n    ContextAttributes contextAttributes0 = objectReader0.getAttributes();\n}",
    "testName" : "test5858"
  },
  "test2626" : {
    "methodSignature" : "public ObjectReader withType(JavaType valueType)",
    "methodName" : "withType",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.readerFor((JavaType) null);\n    ObjectReader objectReader1 = objectReader0.withType((JavaType) null);\n}",
    "testName" : "test2626"
  },
  "test6060" : {
    "methodSignature" : "public void writeValue(JsonGenerator gen, Object value) throws IOException",
    "methodName" : "writeValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6060() throws Throwable {\n    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.WRITE_NUMBERS_AS_STRINGS;\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ContextAttributes contextAttributes0 = ContextAttributes.Impl.getEmpty();\n    LongNode longNode0 = LongNode.valueOf((-1));\n    ObjectReader objectReader0 = objectMapper0.reader(contextAttributes0);\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, longNode0, false);\n    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-5358), objectMapper0, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 934, false);\n    JsonGeneratorDelegate jsonGeneratorDelegate0 = new JsonGeneratorDelegate(uTF8JsonGenerator0);\n    objectReader0.writeValue(jsonGeneratorDelegate0, jsonGenerator_Feature0);\n}",
    "testName" : "test6060"
  },
  "test8282" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(File src) throws IOException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8282() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    MockFile mockFile0 = new MockFile(\"Root name '%s' does not match expected ('%s') for type %s\");\n    objectReader0.readValues((File) mockFile0);\n}",
    "testName" : "test8282"
  },
  "test7070" : {
    "methodSignature" : "public <T> T readValue(Reader src) throws IOException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7070() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    StringReader stringReader0 = new StringReader(\"5\");\n    objectReader0.readValue((Reader) stringReader0);\n}",
    "testName" : "test7070"
  },
  "test8080" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(InputStream src) throws IOException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8080() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.readValues((InputStream) null);\n}",
    "testName" : "test8080"
  },
  "test4242" : {
    "methodSignature" : "public ObjectReader at(final String value)",
    "methodName" : "at",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4242() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.at(\"lx_[e\");\n}",
    "testName" : "test4242"
  },
  "test9090" : {
    "methodSignature" : "protected <T> MappingIterator<T> _detectBindAndReadValues(DataFormatReaders.Match match, boolean forceClosing) throws IOException",
    "methodName" : "_detectBindAndReadValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test9090() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    ObjectReader[] objectReaderArray0 = new ObjectReader[0];\n    DataFormatReaders dataFormatReaders0 = new DataFormatReaders(objectReaderArray0);\n    DataFormatReaders.Match dataFormatReaders_Match0 = dataFormatReaders0.findFormat((InputStream) null);\n    objectReader0._detectBindAndReadValues(dataFormatReaders_Match0, false);\n}",
    "testName" : "test9090"
  },
  "test6464" : {
    "methodSignature" : "public ObjectReader with(JsonFactory f)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6464() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(objectMapper0);\n    JsonFactory jsonFactory0 = new JsonFactory(objectReader0);\n    JsonFactoryBuilder jsonFactoryBuilder0 = new JsonFactoryBuilder(jsonFactory0);\n    JsonFactory jsonFactory1 = new JsonFactory(jsonFactoryBuilder0);\n    ObjectReader objectReader1 = objectReader0.with(jsonFactory1);\n}",
    "testName" : "test6464"
  },
  "test8686" : {
    "methodSignature" : "public <T> T readValue(byte[] src) throws IOException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8686() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JavaType javaType0 = TypeFactory.unknownType();\n    ObjectReader objectReader0 = objectMapper0.readerFor(javaType0);\n    byte[] byteArray0 = new byte[6];\n    byteArray0[0] = (byte) 34;\n    objectReader0.readValue(byteArray0);\n}",
    "testName" : "test8686"
  },
  "test5252" : {
    "methodSignature" : "public ObjectReader withoutAttribute(Object key)",
    "methodName" : "withoutAttribute",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5252() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    ObjectReader objectReader1 = objectReader0.withoutAttribute(objectMapper0);\n}",
    "testName" : "test5252"
  },
  "test7474" : {
    "methodSignature" : "public <T> T readValue(DataInput src) throws IOException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7474() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.readValue((DataInput) null);\n}",
    "testName" : "test7474"
  },
  "test6262" : {
    "methodSignature" : "public ObjectReader with(InjectableValues injectableValues)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6262() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();\n    ObjectReader objectReader1 = objectReader0.with((InjectableValues) injectableValues_Std0);\n}",
    "testName" : "test6262"
  },
  "test9292" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(Reader src) throws IOException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test9292() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(objectMapper0);\n    objectReader0.readValues((Reader) null);\n}",
    "testName" : "test9292"
  },
  "test8484" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(DataInput src) throws IOException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8484() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.readValues((DataInput) null);\n}",
    "testName" : "test8484"
  },
  "test5050" : {
    "methodSignature" : "public ObjectReader withAttribute(Object key, Object value)",
    "methodName" : "withAttribute",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5050() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    ObjectReader objectReader1 = objectReader0.withAttribute((Object) null, (Object) null);\n}",
    "testName" : "test5050"
  },
  "test7272" : {
    "methodSignature" : "public <T> T readValue(File src) throws IOException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7272() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    MockFile mockFile0 = new MockFile(\" withfrmat auto-detection: must be byte- not char-based\");\n    objectReader0.readValue((File) mockFile0);\n}",
    "testName" : "test7272"
  },
  "test022" : {
    "methodSignature" : "public void writeTree(JsonGenerator g, TreeNode rootNode)",
    "methodName" : "writeTree",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[5];\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    deserializationFeatureArray0[1] = deserializationFeature0;\n    deserializationFeatureArray0[2] = deserializationFeature0;\n    deserializationFeatureArray0[3] = deserializationFeature0;\n    deserializationFeatureArray0[4] = deserializationFeature0;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0, deserializationFeatureArray0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonEncoding jsonEncoding0 = JsonEncoding.UTF32_LE;\n    JsonGenerator jsonGenerator0 = jsonFactory0.createGenerator((DataOutput) null, jsonEncoding0);\n    JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(false);\n    HashMap<String, JsonNode> hashMap0 = new HashMap<String, JsonNode>();\n    ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0, hashMap0);\n    ArrayNode arrayNode0 = objectNode0.withArray(\"JSON\");\n    TextNode textNode0 = arrayNode0.textNode(\"Strange Reference type \");\n    objectReader0.writeTree(jsonGenerator0, textNode0);\n}",
    "testName" : "test022"
  },
  "test066" : {
    "methodSignature" : "public ObjectReader withView(Class<?> activeView)",
    "methodName" : "withView",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    Class<SimpleType> class0 = SimpleType.class;\n    ObjectReader objectReader1 = objectReader0.withView(class0);\n}",
    "testName" : "test066"
  },
  "test1818" : {
    "methodSignature" : "public ObjectReader with(DeserializationFeature feature)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES;\n    ObjectReader objectReader1 = objectReader0.with(deserializationFeature0);\n}",
    "testName" : "test1818"
  },
  "test5757" : {
    "methodSignature" : "public ObjectReader without(FormatFeature feature)",
    "methodName" : "without",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5757() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonReadFeature jsonReadFeature0 = JsonReadFeature.ALLOW_UNQUOTED_FIELD_NAMES;\n    ObjectReader objectReader1 = objectReader0.without((FormatFeature) jsonReadFeature0);\n}",
    "testName" : "test5757"
  },
  "test2323" : {
    "methodSignature" : "public ObjectReader withHandler(DeserializationProblemHandler h)",
    "methodName" : "withHandler",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    ObjectReader objectReader1 = objectReader0.withHandler(deserializationProblemHandler0);\n}",
    "testName" : "test2323"
  },
  "test7979" : {
    "methodSignature" : "public JsonNode readTree(DataInput src) throws IOException",
    "methodName" : "readTree",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7979() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(objectMapper0);\n    objectReader0.readTree((DataInput) null);\n}",
    "testName" : "test7979"
  },
  "test1313" : {
    "methodSignature" : "public ObjectReader with(JsonParser.Feature feature)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(objectMapper0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER;\n    ObjectReader objectReader1 = objectReader0.with(jsonParser_Feature0);\n}",
    "testName" : "test1313"
  },
  "test3535" : {
    "methodSignature" : "public ObjectReader with(ContextAttributes attrs)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<SimpleType> class0 = SimpleType.class;\n    ObjectReader objectReader0 = objectMapper0.readerWithView(class0);\n    ContextAttributes contextAttributes0 = ContextAttributes.getEmpty();\n    ObjectReader objectReader1 = objectReader0.with(contextAttributes0);\n}",
    "testName" : "test3535"
  },
  "test6767" : {
    "methodSignature" : "public ObjectReader withValueToUpdate(Object value)",
    "methodName" : "withValueToUpdate",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6767() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    ObjectReader objectReader1 = objectReader0.withValueToUpdate(objectMapper0);\n}",
    "testName" : "test6767"
  },
  "test8989" : {
    "methodSignature" : "protected final void _verifyNoTrailingTokens(JsonParser p, DeserializationContext ctxt, JavaType bindType) throws IOException",
    "methodName" : "_verifyNoTrailingTokens",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8989() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    ArrayNode arrayNode0 = objectMapper0.createArrayNode();\n    JsonParser jsonParser0 = arrayNode0.traverse((ObjectCodec) objectReader0);\n    objectReader0._verifyNoTrailingTokens(jsonParser0, (DeserializationContext) null, (JavaType) null);\n}",
    "testName" : "test8989"
  },
  "test2121" : {
    "methodSignature" : "public ObjectReader withRootName(PropertyName rootName)",
    "methodName" : "withRootName",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    PropertyName propertyName0 = PropertyName.USE_DEFAULT;\n    ObjectReader objectReader1 = objectReader0.withRootName(propertyName0);\n}",
    "testName" : "test2121"
  },
  "test7777" : {
    "methodSignature" : "public boolean isFloat()",
    "methodName" : "isFloat",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7777() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    byte[] byteArray0 = new byte[0];\n    JsonNode jsonNode0 = objectReader0.readTree(byteArray0);\n    jsonNode0.isFloat();\n}",
    "testName" : "test7777"
  },
  "test1111" : {
    "methodSignature" : "public boolean isShort()",
    "methodName" : "isShort",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    ObjectReader objectReader1 = new ObjectReader(objectReader0, tokenFilter0);\n    JsonNode jsonNode0 = objectReader1.readTree((InputStream) null);\n    jsonNode0.isShort();\n}",
    "testName" : "test1111"
  },
  "test3333" : {
    "methodSignature" : "public ObjectReader with(DeserializationConfig config)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.with((DeserializationConfig) null);\n}",
    "testName" : "test3333"
  },
  "test6565" : {
    "methodSignature" : "public ObjectReader with(FormatSchema schema)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6565() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[5];\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    deserializationFeatureArray0[1] = deserializationFeature0;\n    deserializationFeatureArray0[2] = deserializationFeature0;\n    deserializationFeatureArray0[3] = deserializationFeature0;\n    deserializationFeatureArray0[4] = deserializationFeature0;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0, deserializationFeatureArray0);\n    ObjectReader objectReader1 = objectReader0.with((FormatSchema) null);\n}",
    "testName" : "test6565"
  },
  "test8787" : {
    "methodSignature" : "protected Object _bindAndClose(JsonParser p0) throws IOException",
    "methodName" : "_bindAndClose",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8787() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0._bindAndClose((JsonParser) null);\n}",
    "testName" : "test8787"
  },
  "test011" : {
    "methodSignature" : "public final String getRootName()",
    "methodName" : "getRootName",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    DeserializationConfig deserializationConfig0 = objectReader0.getConfig();\n    deserializationConfig0.getRootName();\n}",
    "testName" : "test011"
  },
  "test055" : {
    "methodSignature" : "public ObjectReader with(JsonFactory f)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(objectMapper0);\n    JsonFactory jsonFactory0 = new JsonFactory(objectReader0);\n    ObjectReader objectReader1 = objectReader0.with(jsonFactory0);\n}",
    "testName" : "test055"
  },
  "test099" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(String json) throws IOException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<BigIntegerNode> class0 = BigIntegerNode.class;\n    ObjectReader objectReader0 = objectMapper0.readerFor(class0);\n    MappingIterator<MapLikeType> mappingIterator0 = objectReader0.readValues(\"\");\n}",
    "testName" : "test099"
  },
  "test2727" : {
    "methodSignature" : "public ObjectReader with(Locale l)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    Locale locale0 = Locale.ENGLISH;\n    ObjectReader objectReader1 = objectReader0.with(locale0);\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "public ObjectReader withoutRootName()",
    "methodName" : "withoutRootName",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    ObjectReader objectReader1 = objectReader0.withoutRootName();\n}",
    "testName" : "test1717"
  },
  "test4949" : {
    "methodSignature" : "public ObjectReader without(DeserializationFeature feature)",
    "methodName" : "without",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4949() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.USE_LONG_FOR_INTS;\n    ObjectReader objectReader1 = objectReader0.without(deserializationFeature0);\n}",
    "testName" : "test4949"
  },
  "test5959" : {
    "methodSignature" : "public ObjectReader at(final JsonPointer pointer)",
    "methodName" : "at",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5959() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonPointer jsonPointer0 = JsonPointer.forPath((JsonStreamContext) null, false);\n    ObjectReader objectReader1 = objectReader0.at(jsonPointer0);\n}",
    "testName" : "test5959"
  },
  "test2525" : {
    "methodSignature" : "public <T extends TreeNode> T readTree(JsonParser p) throws IOException",
    "methodName" : "readTree",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.readTree((JsonParser) null);\n}",
    "testName" : "test2525"
  },
  "test4747" : {
    "methodSignature" : "public <T> T treeToValue(TreeNode n, Class<T> valueType) throws JsonProcessingException",
    "methodName" : "treeToValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4747() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(objectMapper0);\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0, 2);\n    BooleanNode booleanNode0 = arrayNode0.booleanNode(false);\n    Class<String> class0 = String.class;\n    String string0 = objectReader0.treeToValue((TreeNode) booleanNode0, class0);\n}",
    "testName" : "test4747"
  },
  "test6969" : {
    "methodSignature" : "public <T> T readValue(InputStream src) throws IOException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6969() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.readValue((InputStream) null);\n}",
    "testName" : "test6969"
  },
  "test7171" : {
    "methodSignature" : "public <T> T readValue(byte[] src, int offset, int length) throws IOException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7171() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    ObjectReader objectReader0 = objectMapper0.reader((FormatSchema) null);\n    byte[] byteArray0 = new byte[6];\n    objectReader0.readValue(byteArray0, 1, 1);\n}",
    "testName" : "test7171"
  },
  "test8181" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(Reader src) throws IOException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8181() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.readValues((Reader) null);\n}",
    "testName" : "test8181"
  },
  "test5353" : {
    "methodSignature" : "public ObjectReader with(TimeZone tz)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5353() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(true);\n    ObjectReader objectReader0 = objectMapper0.reader(jsonNodeFactory0);\n    TimeZone timeZone0 = TimeZone.getDefault();\n    ObjectReader objectReader1 = objectReader0.with(timeZone0);\n}",
    "testName" : "test5353"
  },
  "test7575" : {
    "methodSignature" : "public boolean isIntegralNumber()",
    "methodName" : "isIntegralNumber",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7575() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonNode jsonNode0 = objectReader0.readTree((InputStream) null);\n    jsonNode0.isIntegralNumber();\n}",
    "testName" : "test7575"
  },
  "test4141" : {
    "methodSignature" : "protected InputStream _inputStream(URL src) throws IOException",
    "methodName" : "_inputStream",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4141() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0._inputStream((URL) null);\n}",
    "testName" : "test4141"
  },
  "test6363" : {
    "methodSignature" : "public ObjectReader with(JsonFactory f)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6363() throws Throwable {\n    JsonFactoryBuilder jsonFactoryBuilder0 = new JsonFactoryBuilder();\n    JsonFactory jsonFactory0 = new JsonFactory(jsonFactoryBuilder0);\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    ObjectReader objectReader1 = objectReader0.with(jsonFactory0);\n}",
    "testName" : "test6363"
  },
  "test9191" : {
    "methodSignature" : "protected void _verifySchemaType(FormatSchema schema)",
    "methodName" : "_verifySchemaType",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test9191() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0._verifySchemaType((FormatSchema) null);\n}",
    "testName" : "test9191"
  },
  "test8585" : {
    "methodSignature" : "public <T> T readValue(JsonNode src) throws IOException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8585() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JavaType javaType0 = TypeFactory.unknownType();\n    ObjectReader objectReader0 = objectMapper0.readerFor(javaType0);\n    NullNode nullNode0 = NullNode.instance;\n    FloatNode floatNode0 = objectReader0.readValue((JsonNode) nullNode0);\n}",
    "testName" : "test8585"
  },
  "test5151" : {
    "methodSignature" : "public ObjectReader withType(java.lang.reflect.Type valueType)",
    "methodName" : "withType",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5151() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    Class<FilteringParserDelegate> class0 = FilteringParserDelegate.class;\n    ObjectReader objectReader1 = objectReader0.withType((Type) class0);\n}",
    "testName" : "test5151"
  },
  "test7373" : {
    "methodSignature" : "public <T> T readValue(URL src) throws IOException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7373() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    URL uRL0 = MockURL.getFileExample();\n    objectReader0.readValue(uRL0);\n}",
    "testName" : "test7373"
  },
  "test6161" : {
    "methodSignature" : "public <T> T readValue(String src) throws IOException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6161() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(objectMapper0);\n    objectReader0.readValue(\"\");\n}",
    "testName" : "test6161"
  },
  "test9393" : {
    "methodSignature" : "public AccessPattern getEmptyAccessPattern()",
    "methodName" : "getEmptyAccessPattern",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test9393() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JavaType javaType0 = TypeFactory.unknownType();\n    ObjectReader objectReader0 = objectMapper0.readerFor(javaType0);\n    JsonDeserializer<Object> jsonDeserializer0 = objectReader0._prefetchRootDeserializer(javaType0);\n    jsonDeserializer0.getEmptyAccessPattern();\n}",
    "testName" : "test9393"
  },
  "test8383" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(URL src) throws IOException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8383() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    URL uRL0 = MockURL.getFileExample();\n    objectReader0.readValues(uRL0);\n}",
    "testName" : "test8383"
  },
  "test000" : {
    "methodSignature" : "public boolean isEnabled(MapperFeature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    MapperFeature mapperFeature0 = MapperFeature.USE_GETTERS_AS_SETTERS;\n    boolean boolean0 = objectReader0.isEnabled(mapperFeature0);\n}",
    "testName" : "test000"
  },
  "test044" : {
    "methodSignature" : "public <T> Iterator<T> readValues(JsonParser p, ResolvedType valueType) throws IOException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[5];\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    deserializationFeatureArray0[1] = deserializationFeature0;\n    deserializationFeatureArray0[2] = deserializationFeature0;\n    deserializationFeatureArray0[3] = deserializationFeature0;\n    deserializationFeatureArray0[4] = deserializationFeature0;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0, deserializationFeatureArray0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    File file0 = MockFile.createTempFile(\"Root name '%s' does not match expected ('%s') for type %s\", \"JSON\");\n    JsonParser jsonParser0 = jsonFactory0.createParser(file0);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter0, false, true);\n    objectReader0.readValues((JsonParser) filteringParserDelegate0, (ResolvedType) null);\n}",
    "testName" : "test044"
  },
  "test088" : {
    "methodSignature" : "public final <T> MappingIterator<T> readValues(byte[] src) throws IOException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    byte[] byteArray0 = new byte[16];\n    objectReader0.readValues(byteArray0);\n}",
    "testName" : "test088"
  },
  "test1919" : {
    "methodSignature" : "protected Object _detectBindAndClose(DataFormatReaders.Match match, boolean forceClosing) throws IOException",
    "methodName" : "_detectBindAndClose",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    LinkedList<ObjectReader> linkedList0 = new LinkedList<ObjectReader>();\n    DataFormatReaders dataFormatReaders0 = new DataFormatReaders(linkedList0);\n    DataFormatReaders.Match dataFormatReaders_Match0 = dataFormatReaders0.findFormat((byte[]) null, 1, (-794));\n    objectReader0._detectBindAndClose(dataFormatReaders_Match0, true);\n}",
    "testName" : "test1919"
  }
}