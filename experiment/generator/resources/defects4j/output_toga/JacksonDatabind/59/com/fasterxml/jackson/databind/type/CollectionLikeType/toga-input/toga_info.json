{
  "test1014" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1014() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_STRING;\n    Class<MapLikeType> class0 = MapLikeType.class;\n    JavaType[] javaTypeArray0 = new JavaType[0];\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (TypeBindings) null, (JavaType) simpleType0, javaTypeArray0, (JavaType) simpleType0);\n    collectionLikeType0.useStaticType();\n}",
    "testName" : "test1014"
  },
  "test1115" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1115() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_INT;\n    CollectionLikeType collectionLikeType0 = new CollectionLikeType(simpleType0, simpleType0);\n    CollectionLikeType collectionLikeType1 = collectionLikeType0.withContentValueHandler(simpleType0);\n    collectionLikeType1.equals((Object) collectionLikeType0);\n}",
    "testName" : "test1115"
  },
  "test2029" : {
    "methodSignature" : "protected String buildCanonicalName()",
    "methodName" : "buildCanonicalName",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2029() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_STRING;\n    JavaType[] javaTypeArray0 = new JavaType[8];\n    CollectionType collectionType0 = new CollectionType(simpleType0, javaTypeArray0[1]);\n    String string0 = collectionType0.buildCanonicalName();\n}",
    "testName" : "test2029"
  },
  "test1419" : {
    "methodSignature" : "public static CollectionLikeType upgradeFrom(JavaType baseType, JavaType elementType)",
    "methodName" : "upgradeFrom",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1419() throws Throwable {\n    CollectionLikeType.upgradeFrom((JavaType) null, (JavaType) null);\n}",
    "testName" : "test1419"
  },
  "test1216" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1216() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_CLASS;\n    Class<Object> class0 = Object.class;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    JavaType javaType0 = collectionLikeType0._narrow(class0);\n    javaType0.useStaticType();\n}",
    "testName" : "test1216"
  },
  "test1317" : {
    "methodSignature" : "public int containedTypeCount()",
    "methodName" : "containedTypeCount",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1317() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_LONG;\n    Class<JsonDeserializer> class0 = JsonDeserializer.class;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    collectionLikeType0.containedTypeCount();\n}",
    "testName" : "test1317"
  },
  "test1318" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1318() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_LONG;\n    Class<JsonDeserializer> class0 = JsonDeserializer.class;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    collectionLikeType0.useStaticType();\n}",
    "testName" : "test1318"
  },
  "test1928" : {
    "methodSignature" : "public boolean hasHandlers()",
    "methodName" : "hasHandlers",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1928() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<LinkedList> class0 = LinkedList.class;\n    CollectionType collectionType0 = typeFactory0.constructRawCollectionType(class0);\n    CollectionLikeType collectionLikeType0 = collectionType0.withContentValueHandler(class0);\n    boolean boolean0 = collectionLikeType0.hasHandlers();\n    collectionType0.hasHandlers();\n}",
    "testName" : "test1928"
  },
  "test024" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test024() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_LONG;\n    Class<ReferenceType> class0 = ReferenceType.class;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    CollectionLikeType collectionLikeType1 = collectionLikeType0.withContentTypeHandler(collectionLikeType0);\n    collectionLikeType1.useStaticType();\n}",
    "testName" : "test024"
  },
  "test046" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test046() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<HashMap> class0 = HashMap.class;\n    MapType mapType0 = typeFactory0.constructRawMapType(class0);\n    Class<Integer> class1 = Integer.class;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class1, (JavaType) mapType0);\n    collectionLikeType0.getContentTypeHandler();\n    collectionLikeType0.useStaticType();\n}",
    "testName" : "test046"
  },
  "test1520" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1520() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_BOOL;\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    JavaType javaType0 = collectionLikeType0.withContentType(collectionLikeType0);\n    javaType0.useStaticType();\n}",
    "testName" : "test1520"
  },
  "test1521" : {
    "methodSignature" : "public JavaType withContentType(JavaType contentType)",
    "methodName" : "withContentType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1521() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_BOOL;\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    JavaType javaType0 = collectionLikeType0.withContentType(collectionLikeType0);\n}",
    "testName" : "test1521"
  },
  "test1522" : {
    "methodSignature" : "public abstract boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1522() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_BOOL;\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    JavaType javaType0 = collectionLikeType0.withContentType(collectionLikeType0);\n    javaType0.equals((Object) collectionLikeType0);\n}",
    "testName" : "test1522"
  },
  "test2436" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2436() throws Throwable {\n    Class<ObjectReader> class0 = ObjectReader.class;\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    CollectionLikeType collectionLikeType1 = CollectionLikeType.construct((Class<?>) class0, (JavaType) collectionLikeType0);\n    boolean boolean0 = collectionLikeType1.equals(collectionLikeType0);\n}",
    "testName" : "test2436"
  },
  "test2435" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2435() throws Throwable {\n    Class<ObjectReader> class0 = ObjectReader.class;\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    CollectionLikeType collectionLikeType1 = CollectionLikeType.construct((Class<?>) class0, (JavaType) collectionLikeType0);\n    boolean boolean0 = collectionLikeType1.equals(collectionLikeType0);\n    collectionLikeType0.equals((Object) collectionLikeType1);\n}",
    "testName" : "test2435"
  },
  "test2231" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2231() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_BOOL;\n    CollectionLikeType collectionLikeType0 = new CollectionLikeType(simpleType0, simpleType0);\n    boolean boolean0 = collectionLikeType0.equals((Object) null);\n}",
    "testName" : "test2231"
  },
  "test2333" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2333() throws Throwable {\n    Class<ObjectReader> class0 = ObjectReader.class;\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    CollectionLikeType collectionLikeType1 = collectionLikeType0.withStaticTyping();\n    boolean boolean0 = collectionLikeType1.equals(collectionLikeType0);\n}",
    "testName" : "test2333"
  },
  "test2332" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2332() throws Throwable {\n    Class<ObjectReader> class0 = ObjectReader.class;\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    CollectionLikeType collectionLikeType1 = collectionLikeType0.withStaticTyping();\n    boolean boolean0 = collectionLikeType1.equals(collectionLikeType0);\n    collectionLikeType1.useStaticType();\n}",
    "testName" : "test2332"
  },
  "test000" : {
    "methodSignature" : "public String getErasedSignature()",
    "methodName" : "getErasedSignature",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.upgradeFrom(simpleType0, simpleType0);\n    String string0 = collectionLikeType0.getErasedSignature();\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_LONG;\n    Class<ReferenceType> class0 = ReferenceType.class;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    CollectionLikeType collectionLikeType1 = collectionLikeType0.withContentTypeHandler(collectionLikeType0);\n    collectionLikeType1.equals((Object) collectionLikeType0);\n}",
    "testName" : "test022"
  },
  "test0912" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0912() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_INT;\n    Class<String> class0 = String.class;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    CollectionLikeType collectionLikeType1 = collectionLikeType0.withValueHandler(simpleType0);\n    collectionLikeType1.equals((Object) collectionLikeType0);\n}",
    "testName" : "test0912"
  },
  "test023" : {
    "methodSignature" : "public boolean hasHandlers()",
    "methodName" : "hasHandlers",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test023() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_LONG;\n    Class<ReferenceType> class0 = ReferenceType.class;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    CollectionLikeType collectionLikeType1 = collectionLikeType0.withContentTypeHandler(collectionLikeType0);\n    collectionLikeType1.hasHandlers();\n}",
    "testName" : "test023"
  },
  "test0913" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0913() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_INT;\n    Class<String> class0 = String.class;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    CollectionLikeType collectionLikeType1 = collectionLikeType0.withValueHandler(simpleType0);\n    collectionLikeType1.useStaticType();\n}",
    "testName" : "test0913"
  },
  "test1826" : {
    "methodSignature" : "public boolean hasHandlers()",
    "methodName" : "hasHandlers",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1826() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    Class<String> class0 = String.class;\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    JavaType[] javaTypeArray0 = new JavaType[0];\n    TypeFactory typeFactory0 = new TypeFactory((LRUMap<Object, JavaType>) null);\n    Class<HashMap> class1 = HashMap.class;\n    MapType mapType0 = typeFactory0.constructRawMapType(class1);\n    CollectionLikeType collectionLikeType0 = new CollectionLikeType(class0, typeBindings0, simpleType0, javaTypeArray0, simpleType0, typeBindings0, mapType0, true);\n    boolean boolean0 = collectionLikeType0.hasHandlers();\n}",
    "testName" : "test1826"
  },
  "test1927" : {
    "methodSignature" : "public boolean hasHandlers()",
    "methodName" : "hasHandlers",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1927() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<LinkedList> class0 = LinkedList.class;\n    CollectionType collectionType0 = typeFactory0.constructRawCollectionType(class0);\n    CollectionLikeType collectionLikeType0 = collectionType0.withContentValueHandler(class0);\n    boolean boolean0 = collectionLikeType0.hasHandlers();\n}",
    "testName" : "test1927"
  },
  "test1623" : {
    "methodSignature" : "public JavaType withContentType(JavaType contentType)",
    "methodName" : "withContentType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1623() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_INT;\n    Class<String> class0 = String.class;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    JavaType javaType0 = collectionLikeType0.withContentType(simpleType0);\n}",
    "testName" : "test1623"
  },
  "test0810" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0810() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_INT;\n    Class<String> class0 = String.class;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    CollectionLikeType collectionLikeType1 = collectionLikeType0.withTypeHandler(simpleType0);\n    collectionLikeType1.equals((Object) collectionLikeType0);\n}",
    "testName" : "test0810"
  },
  "test1624" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1624() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_INT;\n    Class<String> class0 = String.class;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    JavaType javaType0 = collectionLikeType0.withContentType(simpleType0);\n    javaType0.useStaticType();\n}",
    "testName" : "test1624"
  },
  "test2437" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2437() throws Throwable {\n    Class<ObjectReader> class0 = ObjectReader.class;\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    CollectionLikeType collectionLikeType1 = CollectionLikeType.construct((Class<?>) class0, (JavaType) collectionLikeType0);\n    boolean boolean0 = collectionLikeType1.equals(collectionLikeType0);\n    collectionLikeType1.useStaticType();\n}",
    "testName" : "test2437"
  },
  "test0811" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0811() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_INT;\n    Class<String> class0 = String.class;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    CollectionLikeType collectionLikeType1 = collectionLikeType0.withTypeHandler(simpleType0);\n    collectionLikeType1.useStaticType();\n}",
    "testName" : "test0811"
  },
  "test1725" : {
    "methodSignature" : "public CollectionLikeType withStaticTyping()",
    "methodName" : "withStaticTyping",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1725() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_BOOL;\n    MapLikeType mapLikeType0 = new MapLikeType(resolvedRecursiveType0, simpleType0, resolvedRecursiveType0);\n    CollectionType collectionType0 = CollectionType.construct((Class<?>) class0, (TypeBindings) null, (JavaType) simpleType0, (JavaType[]) null, (JavaType) simpleType0);\n    CollectionLikeType collectionLikeType0 = new CollectionLikeType(class0, (TypeBindings) null, mapLikeType0, (JavaType[]) null, simpleType0, simpleType0, collectionType0, true);\n    CollectionLikeType collectionLikeType1 = collectionLikeType0.withStaticTyping();\n}",
    "testName" : "test1725"
  },
  "test035" : {
    "methodSignature" : "public boolean hasHandlers()",
    "methodName" : "hasHandlers",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test035() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<LinkedList> class0 = LinkedList.class;\n    Class<CollectionType> class1 = CollectionType.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class1, (TypeBindings) null);\n    CollectionType collectionType0 = typeFactory0.constructCollectionType((Class<? extends Collection>) class0, (JavaType) resolvedRecursiveType0);\n    collectionType0.getContentValueHandler();\n    collectionType0.hasHandlers();\n}",
    "testName" : "test035"
  },
  "test057" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test057() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_BOOL;\n    Class<ObjectIdGenerators.IntSequenceGenerator> class0 = ObjectIdGenerators.IntSequenceGenerator.class;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (JavaType) simpleType0);\n    Class<MapLikeType> class1 = MapLikeType.class;\n    TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;\n    JavaType javaType0 = collectionLikeType0.refine(class1, typeBindings0, simpleType0, (JavaType[]) null);\n    javaType0.useStaticType();\n}",
    "testName" : "test057"
  },
  "test079" : {
    "methodSignature" : "public String getGenericSignature()",
    "methodName" : "getGenericSignature",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.upgradeFrom(simpleType0, simpleType0);\n    String string0 = collectionLikeType0.getGenericSignature();\n}",
    "testName" : "test079"
  },
  "test2130" : {
    "methodSignature" : "protected String buildCanonicalName()",
    "methodName" : "buildCanonicalName",
    "className" : "com.fasterxml.jackson.databind.type.CollectionLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2130() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.upgradeFrom(simpleType0, simpleType0);\n    String string0 = collectionLikeType0.buildCanonicalName();\n}",
    "testName" : "test2130"
  }
}