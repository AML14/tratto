{
  "test1212" : {
    "methodSignature" : "public static // since 2.7; remove from 2.8\nMapLikeType construct(Class<?> rawType, JavaType keyT, JavaType valueT)",
    "methodName" : "construct",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_INT;\n    Class<Integer> class0 = Integer.class;\n    MapLikeType mapLikeType0 = MapLikeType.construct(class0, simpleType0, simpleType0);\n    mapLikeType0.withTypeHandler(class0);\n    MapLikeType.construct(class0, mapLikeType0, mapLikeType0);\n}",
    "testName" : "test1212"
  },
  "test2323" : {
    "methodSignature" : "public MapType constructMapType(Class<? extends Map> mapClass, JavaType keyType, JavaType valueType)",
    "methodName" : "constructMapType",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    Class<CollectionType> class0 = CollectionType.class;\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<HashMap> class1 = HashMap.class;\n    Class<HashMap> class2 = HashMap.class;\n    MapType mapType0 = typeFactory0.constructRawMapType(class2);\n    MapLikeType mapLikeType0 = mapType0.withKeyTypeHandler(class0);\n    MapLikeType mapLikeType1 = mapType0.withKeyType(mapLikeType0);\n    typeFactory0.constructMapType((Class<? extends Map>) class1, (JavaType) mapType0, (JavaType) mapLikeType1);\n}",
    "testName" : "test2323"
  },
  "test3434" : {
    "methodSignature" : "public static MapLikeType upgradeFrom(JavaType baseType, JavaType keyT, JavaType valueT)",
    "methodName" : "upgradeFrom",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    Class<Object> class0 = Object.class;\n    TypeBase._bogusSuperClass(class0);\n    MapLikeType.upgradeFrom((JavaType) null, (JavaType) null, (JavaType) null);\n}",
    "testName" : "test3434"
  },
  "test1313" : {
    "methodSignature" : "public Object getContentValueHandler()",
    "methodName" : "getContentValueHandler",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<CollectionType> class0 = CollectionType.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);\n    mapLikeType0.getContentValueHandler();\n}",
    "testName" : "test1313"
  },
  "test2424" : {
    "methodSignature" : "protected String buildCanonicalName()",
    "methodName" : "buildCanonicalName",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<CollectionType> class0 = CollectionType.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);\n    MapLikeType mapLikeType1 = mapLikeType0.withStaticTyping();\n    mapLikeType1.withStaticTyping();\n    mapLikeType1.buildCanonicalName();\n}",
    "testName" : "test2424"
  },
  "test1010" : {
    "methodSignature" : "public MapLikeType constructRawMapLikeType(Class<?> mapClass)",
    "methodName" : "constructRawMapLikeType",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<Object> class0 = Object.class;\n    typeFactory0.constructRawMapLikeType(class0);\n}",
    "testName" : "test1010"
  },
  "test2121" : {
    "methodSignature" : "public static // since 2.7; remove from 2.8\nMapLikeType construct(Class<?> rawType, JavaType keyT, JavaType valueT)",
    "methodName" : "construct",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    Class<MapType> class0 = MapType.class;\n    MapLikeType mapLikeType0 = MapLikeType.construct(class0, simpleType0, simpleType0);\n    JavaType[] javaTypeArray0 = new JavaType[0];\n    mapLikeType0.refine(class0, (TypeBindings) null, simpleType0, javaTypeArray0);\n    Class<String> class1 = String.class;\n    MapLikeType.construct(class1, mapLikeType0, simpleType0);\n}",
    "testName" : "test2121"
  },
  "test3232" : {
    "methodSignature" : "public JavaType withContentType(JavaType contentType)",
    "methodName" : "withContentType",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_ENUM;\n    Class<Object> class0 = Object.class;\n    MapLikeType mapLikeType0 = MapLikeType.construct(class0, simpleType0, simpleType0);\n    mapLikeType0.withContentType(simpleType0);\n}",
    "testName" : "test3232"
  },
  "test1111" : {
    "methodSignature" : "public MapLikeType withKeyTypeHandler(Object h)",
    "methodName" : "withKeyTypeHandler",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_INT;\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    MapLikeType mapLikeType0 = MapLikeType.construct(class0, simpleType0, simpleType0);\n    mapLikeType0.withKeyTypeHandler(simpleType0);\n}",
    "testName" : "test1111"
  },
  "test2222" : {
    "methodSignature" : "public static // since 2.7; remove from 2.8\nMapLikeType construct(Class<?> rawType, JavaType keyT, JavaType valueT)",
    "methodName" : "construct",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    Class<Integer> class0 = Integer.class;\n    MapLikeType mapLikeType0 = MapLikeType.construct(class0, simpleType0, simpleType0);\n    MapLikeType mapLikeType1 = mapLikeType0.withContentValueHandler(class0);\n    MapLikeType.construct(class0, mapLikeType1, simpleType0);\n}",
    "testName" : "test2222"
  },
  "test3333" : {
    "methodSignature" : "public MapLikeType withKeyType(JavaType keyType)",
    "methodName" : "withKeyType",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    Class<String> class0 = String.class;\n    MapLikeType mapLikeType0 = MapLikeType.construct(class0, simpleType0, simpleType0);\n    mapLikeType0.withKeyType(simpleType0);\n}",
    "testName" : "test3333"
  },
  "test011" : {
    "methodSignature" : "public boolean hasHandlers()",
    "methodName" : "hasHandlers",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<HashMap> class0 = HashMap.class;\n    MapType mapType0 = typeFactory0.constructRawMapType(class0);\n    mapType0.hasHandlers();\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<CollectionType> class0 = CollectionType.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);\n    mapLikeType0.equals(mapLikeType0);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public String getGenericSignature()",
    "methodName" : "getGenericSignature",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<CollectionType> class0 = CollectionType.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);\n    mapLikeType0.getGenericSignature();\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public boolean isMapLikeType()",
    "methodName" : "isMapLikeType",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<String> class0 = String.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);\n    mapLikeType0.isThrowable();\n    mapLikeType0.isMapLikeType();\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<CollectionType> class0 = CollectionType.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);\n    mapLikeType0.toString();\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "public boolean isContainerType()",
    "methodName" : "isContainerType",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<CollectionType> class0 = CollectionType.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);\n    mapLikeType0._narrow(class0);\n    mapLikeType0.isContainerType();\n}",
    "testName" : "test1616"
  },
  "test2727" : {
    "methodSignature" : "public Object getContentTypeHandler()",
    "methodName" : "getContentTypeHandler",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<CollectionType> class0 = CollectionType.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);\n    mapLikeType0.getContentTypeHandler();\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "protected String buildCanonicalName()",
    "methodName" : "buildCanonicalName",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<CollectionType> class0 = CollectionType.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);\n    mapLikeType0.withValueHandler(class0);\n    MapLikeType mapLikeType1 = mapLikeType0.withStaticTyping();\n    mapLikeType1.buildCanonicalName();\n}",
    "testName" : "test1717"
  },
  "test2828" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    Class<MapLikeType> class0 = MapLikeType.class;\n    MapLikeType mapLikeType0 = MapLikeType.construct(class0, simpleType0, simpleType0);\n    mapLikeType0.equals((Object) null);\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public MapLikeType withKeyType(JavaType keyType)",
    "methodName" : "withKeyType",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<CollectionType> class0 = CollectionType.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);\n    mapLikeType0.withKeyType(mapLikeType0);\n}",
    "testName" : "test1414"
  },
  "test2525" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<CollectionType> class0 = CollectionType.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);\n    Class<Object> class1 = Object.class;\n    MapLikeType mapLikeType1 = MapLikeType.construct(class1, mapLikeType0, mapLikeType0);\n    mapLikeType0.equals(mapLikeType1);\n}",
    "testName" : "test2525"
  },
  "test3636" : {
    "methodSignature" : "protected String buildCanonicalName()",
    "methodName" : "buildCanonicalName",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3636() throws Throwable {\n    Class<Integer> class0 = Integer.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    MapLikeType mapLikeType0 = MapLikeType.upgradeFrom(simpleType0, (JavaType) null, simpleType0);\n    mapLikeType0.buildCanonicalName();\n}",
    "testName" : "test3636"
  },
  "test1515" : {
    "methodSignature" : "protected JavaType _narrow(Class<?> subclass)",
    "methodName" : "_narrow",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<CollectionType> class0 = CollectionType.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);\n    mapLikeType0._narrow(class0);\n}",
    "testName" : "test1515"
  },
  "test2626" : {
    "methodSignature" : "public abstract boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<CollectionType> class0 = CollectionType.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);\n    JavaType javaType0 = mapLikeType0._narrow(class0);\n    javaType0.equals(mapLikeType0);\n}",
    "testName" : "test2626"
  },
  "test3030" : {
    "methodSignature" : "public MapLikeType withContentTypeHandler(Object h)",
    "methodName" : "withContentTypeHandler",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<CollectionType> class0 = CollectionType.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);\n    mapLikeType0.withContentTypeHandler(class0);\n}",
    "testName" : "test3030"
  },
  "test2020" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    Class<ArrayType> class0 = ArrayType.class;\n    MapLikeType mapLikeType0 = MapLikeType.construct(class0, simpleType0, simpleType0);\n    mapLikeType0.equals(simpleType0);\n}",
    "testName" : "test2020"
  },
  "test3131" : {
    "methodSignature" : "public MapLikeType withKeyValueHandler(Object h)",
    "methodName" : "withKeyValueHandler",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_INT;\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    MapLikeType mapLikeType0 = MapLikeType.construct(class0, simpleType0, simpleType0);\n    mapLikeType0.withKeyValueHandler(class0);\n}",
    "testName" : "test3131"
  },
  "test000" : {
    "methodSignature" : "public static // since 2.7; remove from 2.8\nMapLikeType construct(Class<?> rawType, JavaType keyT, JavaType valueT)",
    "methodName" : "construct",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Class<Object> class0 = Object.class;\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    MapLikeType.construct(class0, simpleType0, simpleType0);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public static // since 2.7; remove from 2.8\nMapLikeType construct(Class<?> rawType, JavaType keyT, JavaType valueT)",
    "methodName" : "construct",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    Class<String> class0 = String.class;\n    MapLikeType mapLikeType0 = MapLikeType.construct(class0, simpleType0, simpleType0);\n    mapLikeType0.isTrueMapType();\n    MapLikeType.construct(class0, simpleType0, mapLikeType0);\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "protected String buildCanonicalName()",
    "methodName" : "buildCanonicalName",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<CollectionType> class0 = CollectionType.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);\n    mapLikeType0.buildCanonicalName();\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public String getErasedSignature()",
    "methodName" : "getErasedSignature",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_BOOL;\n    Class<CollectionType> class0 = CollectionType.class;\n    MapLikeType mapLikeType0 = MapLikeType.construct(class0, simpleType0, simpleType0);\n    mapLikeType0.getErasedSignature();\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public boolean isContainerType()",
    "methodName" : "isContainerType",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_INT;\n    MapType mapType0 = new MapType(simpleType0, simpleType0, simpleType0);\n    MapType mapType1 = mapType0.withValueHandler(simpleType0);\n    mapType0.withKeyValueHandler(mapType1);\n    mapType1.hasHandlers();\n    mapType1.isContainerType();\n}",
    "testName" : "test088"
  },
  "test1818" : {
    "methodSignature" : "public abstract boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<CollectionType> class0 = CollectionType.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);\n    mapLikeType0.isContainerType();\n    JavaType javaType0 = mapLikeType0.withContentType(mapLikeType0);\n    javaType0.equals(mapLikeType0);\n}",
    "testName" : "test1818"
  },
  "test2929" : {
    "methodSignature" : "public static // since 2.7; remove from 2.8\nMapLikeType construct(Class<?> rawType, JavaType keyT, JavaType valueT)",
    "methodName" : "construct",
    "className" : "com.fasterxml.jackson.databind.type.MapLikeType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    Class<HashMap> class0 = HashMap.class;\n    CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class0, 3);\n    coreXMLDeserializers_Std0.getValueType();\n    MapLikeType.construct(class0, (JavaType) null, (JavaType) null);\n}",
    "testName" : "test2929"
  }
}