project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = new ExternalTypeHandler.Builder();
    PropertyName propertyName0 = new PropertyName("""");
    SimpleType simpleType0 = (SimpleType) TypeBindings.UNBOUND;
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(simpleType0, typeFactory0);
    Class<Module> class0 = Module.class;
    AsArrayTypeDeserializer asArrayTypeDeserializer0 = new AsArrayTypeDeserializer(simpleType0, classNameIdResolver0, """", true, class0);
    AnnotationMap annotationMap0 = new AnnotationMap();
    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;
    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, simpleType0, propertyName0, asArrayTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, (-283), """", propertyMetadata0);
    externalTypeHandler_Builder0.addExternal(creatorProperty0, asArrayTypeDeserializer0);
    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build();
    ExternalTypeHandler externalTypeHandler1 = new ExternalTypeHandler(externalTypeHandler0);
    CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla(123);
    SettableBeanProperty[] settableBeanPropertyArray0 = new SettableBeanProperty[3];
    settableBeanPropertyArray0[0] = (SettableBeanProperty) creatorProperty0;
    settableBeanPropertyArray0[1] = (SettableBeanProperty) creatorProperty0;
    settableBeanPropertyArray0[2] = (SettableBeanProperty) creatorProperty0;
    PropertyBasedCreator propertyBasedCreator0 = new PropertyBasedCreator(creatorCollector_Vanilla0, settableBeanPropertyArray0);
    // Undeclared exception!
    try {
        externalTypeHandler1.complete((JsonParser) null, (DeserializationContext) null, (PropertyValueBuffer) null, propertyBasedCreator0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler"", e);
    }
}",0,
project,0,test011,"public void test011() throws Throwable {
    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = new ExternalTypeHandler.Builder();
    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build();
    ExternalTypeHandler externalTypeHandler1 = externalTypeHandler0.start();
    assertNotSame(externalTypeHandler0, externalTypeHandler1);
}",0,
project,0,test022,"public void test022() throws Throwable {
    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = new ExternalTypeHandler.Builder();
    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build();
    // Undeclared exception!
    try {
        externalTypeHandler0._deserialize((JsonParser) null, (DeserializationContext) null, (-108), ""X5%"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler"", e);
    }
}",0,
project,0,test033,"public void test033() throws Throwable {
    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = new ExternalTypeHandler.Builder();
    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build();
    // Undeclared exception!
    try {
        externalTypeHandler0._deserializeAndSet((JsonParser) null, (DeserializationContext) null, externalTypeHandler_Builder0, 1579, """");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler"", e);
    }
}",0,
project,0,test044,"public void test044() throws Throwable {
    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = new ExternalTypeHandler.Builder();
    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build();
    boolean boolean0 = externalTypeHandler0.handleTypePropertyValue((JsonParser) null, (DeserializationContext) null, ""~+E"", (Object) null);
    assertFalse(boolean0);
}",0,
project,0,test055,"public void test055() throws Throwable {
    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = new ExternalTypeHandler.Builder();
    PropertyName propertyName0 = new PropertyName(""com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty"", ""com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty"");
    SimpleType simpleType0 = (SimpleType) TypeBindings.UNBOUND;
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(simpleType0, typeFactory0);
    Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
    AsArrayTypeDeserializer asArrayTypeDeserializer0 = new AsArrayTypeDeserializer(simpleType0, classNameIdResolver0, ""gC_p"", true, class0);
    AnnotationMap annotationMap0 = new AnnotationMap();
    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;
    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, simpleType0, propertyName0, asArrayTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 7, externalTypeHandler_Builder0, propertyMetadata0);
    externalTypeHandler_Builder0.addExternal(creatorProperty0, asArrayTypeDeserializer0);
    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build();
    boolean boolean0 = externalTypeHandler0.handleTypePropertyValue((JsonParser) null, (DeserializationContext) null, ""com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty"", propertyMetadata0);
    assertFalse(boolean0);
}",0,
project,0,test066,"public void test066() throws Throwable {
    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = new ExternalTypeHandler.Builder();
    PropertyName propertyName0 = PropertyName.construct(""co.aster1ml.jacks{n.databind.deser.impl.ExternalTypeHavdler$ExtyedProperty"");
    SimpleType simpleType0 = (SimpleType) TypeBindings.UNBOUND;
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(simpleType0, typeFactory0);
    Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
    AsArrayTypeDeserializer asArrayTypeDeserializer0 = new AsArrayTypeDeserializer(simpleType0, classNameIdResolver0, ""co.aster1ml.jacks{n.databind.deser.impl.ExternalTypeHavdler$ExtyedProperty"", false, class0);
    AnnotationMap annotationMap0 = new AnnotationMap();
    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, simpleType0, propertyName0, asArrayTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, (-12), typeFactory0, propertyMetadata0);
    externalTypeHandler_Builder0.addExternal(creatorProperty0, asArrayTypeDeserializer0);
    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build();
    JsonFactory jsonFactory0 = new JsonFactory();
    PipedReader pipedReader0 = new PipedReader();
    JsonParser jsonParser0 = jsonFactory0.createParser((Reader) pipedReader0);
    // Undeclared exception!
    try {
        externalTypeHandler0.handleTypePropertyValue(jsonParser0, (DeserializationContext) null, ""co.aster1ml.jacks{n.databind.deser.impl.ExternalTypeHavdler$ExtyedProperty"", (Object) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler"", e);
    }
}",0,
project,0,test077,"public void test077() throws Throwable {
    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = new ExternalTypeHandler.Builder();
    PropertyName propertyName0 = new PropertyName(""com.fasterxml.jackson.databind.deser.impl.ExternalTypeHavdler$ExtypedProperty"");
    SimpleType simpleType0 = (SimpleType) TypeBindings.UNBOUND;
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(simpleType0, typeFactory0);
    Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
    AsArrayTypeDeserializer asArrayTypeDeserializer0 = new AsArrayTypeDeserializer(simpleType0, classNameIdResolver0, ""com.fasterxml.jackson.databind.deser.impl.ExternalTypeHavdler$ExtypedProperty"", false, class0);
    AnnotationMap annotationMap0 = new AnnotationMap();
    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, simpleType0, propertyName0, asArrayTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 17, typeFactory0, propertyMetadata0);
    externalTypeHandler_Builder0.addExternal(creatorProperty0, asArrayTypeDeserializer0);
    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build();
    ExternalTypeHandler externalTypeHandler1 = new ExternalTypeHandler(externalTypeHandler0);
    JsonFactory jsonFactory0 = new JsonFactory();
    PipedReader pipedReader0 = new PipedReader();
    JsonParser jsonParser0 = jsonFactory0.createParser((Reader) pipedReader0);
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    boolean boolean0 = externalTypeHandler1.handleTypePropertyValue(jsonParser0, defaultDeserializationContext_Impl0, ""com.fasterxml.jackson.databind.deser.impl.ExternalTypeHavdler$ExtypedProperty"", typeFactory0);
    assertTrue(boolean0);
}",0,
project,0,test088,"public void test088() throws Throwable {
    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = new ExternalTypeHandler.Builder();
    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build();
    boolean boolean0 = externalTypeHandler0.handlePropertyValue((JsonParser) null, (DeserializationContext) null, ""com.fastKrxml.jackson.databind.ser.std.N8mberSerializer`$LongSerializer"", externalTypeHandler_Builder0);
    assertFalse(boolean0);
}",0,
project,0,test099,"public void test099() throws Throwable {
    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = new ExternalTypeHandler.Builder();
    PropertyName propertyName0 = PropertyName.construct(""com.fasterxm.jackson.databinddser.std.dkDeserikWizers"");
    SimpleType simpleType0 = (SimpleType) TypeBindings.UNBOUND;
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(simpleType0, typeFactory0);
    Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
    AsArrayTypeDeserializer asArrayTypeDeserializer0 = new AsArrayTypeDeserializer(simpleType0, classNameIdResolver0, (String) null, true, class0);
    AnnotationMap annotationMap0 = new AnnotationMap();
    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;
    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, simpleType0, propertyName0, asArrayTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, (-18), class0, propertyMetadata0);
    externalTypeHandler_Builder0.addExternal(creatorProperty0, asArrayTypeDeserializer0);
    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build();
    // Undeclared exception!
    try {
        externalTypeHandler0.handlePropertyValue((JsonParser) null, (DeserializationContext) null, ""com.fasterxm.jackson.databinddser.std.dkDeserikWizers"", ""com.fasterxm.jackson.databinddser.std.dkDeserikWizers"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.util.TokenBuffer"", e);
    }
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = new ExternalTypeHandler.Builder();
    PropertyName propertyName0 = PropertyName.NO_NAME;
    SimpleType simpleType0 = (SimpleType) TypeBindings.UNBOUND;
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(simpleType0, typeFactory0);
    Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
    AsArrayTypeDeserializer asArrayTypeDeserializer0 = new AsArrayTypeDeserializer(simpleType0, classNameIdResolver0, ""ZTpMX^%%$v"", true, class0);
    AnnotationMap annotationMap0 = new AnnotationMap();
    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, simpleType0, propertyName0, asArrayTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, (-2912), classNameIdResolver0, propertyMetadata0);
    externalTypeHandler_Builder0.addExternal(creatorProperty0, asArrayTypeDeserializer0);
    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build();
    ExternalTypeHandler externalTypeHandler1 = new ExternalTypeHandler(externalTypeHandler0);
    JsonFactory jsonFactory0 = new JsonFactory();
    PipedReader pipedReader0 = new PipedReader();
    JsonParser jsonParser0 = jsonFactory0.createParser((Reader) pipedReader0);
    boolean boolean0 = externalTypeHandler1.handlePropertyValue(jsonParser0, (DeserializationContext) null, ""ZTpMX^%%$v"", (Object) null);
    assertTrue(boolean0);
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = new ExternalTypeHandler.Builder();
    PropertyName propertyName0 = new PropertyName(""com.fasterxml.jackson.databind.deser.impl.ExternalTypeHavdler$ExtypedProperty"");
    SimpleType simpleType0 = (SimpleType) TypeBindings.UNBOUND;
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(simpleType0, typeFactory0);
    Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
    AsArrayTypeDeserializer asArrayTypeDeserializer0 = new AsArrayTypeDeserializer(simpleType0, classNameIdResolver0, ""com.fasterxml.jackson.databind.deser.impl.ExternalTypeHavdler$ExtypedProperty"", false, class0);
    AnnotationMap annotationMap0 = new AnnotationMap();
    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, simpleType0, propertyName0, asArrayTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, (-2883), classNameIdResolver0, propertyMetadata0);
    externalTypeHandler_Builder0.addExternal(creatorProperty0, asArrayTypeDeserializer0);
    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build();
    ExternalTypeHandler externalTypeHandler1 = new ExternalTypeHandler(externalTypeHandler0);
    JsonFactory jsonFactory0 = new JsonFactory();
    PipedReader pipedReader0 = new PipedReader();
    JsonParser jsonParser0 = jsonFactory0.createParser((Reader) pipedReader0);
    boolean boolean0 = externalTypeHandler1.handlePropertyValue(jsonParser0, (DeserializationContext) null, ""com.fasterxml.jackson.databind.deser.impl.ExternalTypeHavdler$ExtypedProperty"", jsonParser0);
    assertTrue(boolean0);
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = new ExternalTypeHandler.Builder();
    PropertyName propertyName0 = PropertyName.USE_DEFAULT;
    SimpleType simpleType0 = (SimpleType) TypeBindings.UNBOUND;
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(simpleType0, typeFactory0);
    Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
    AsArrayTypeDeserializer asArrayTypeDeserializer0 = new AsArrayTypeDeserializer(simpleType0, classNameIdResolver0, ""com.fasterxm.jackson.databinddeser.std.dkDeserializers"", true, class0);
    AnnotationMap annotationMap0 = new AnnotationMap();
    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, simpleType0, propertyName0, asArrayTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 1763, typeFactory0, propertyMetadata0);
    externalTypeHandler_Builder0.addExternal(creatorProperty0, asArrayTypeDeserializer0);
    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build();
    ExternalTypeHandler externalTypeHandler1 = new ExternalTypeHandler(externalTypeHandler0);
    AnnotationMap annotationMap1 = (AnnotationMap) externalTypeHandler1.complete((JsonParser) null, (DeserializationContext) null, (Object) annotationMap0);
    assertEquals(0, annotationMap1.size());
}",0,"assertEquals(0, annotationMap1.size())"
project,0,test1313,"public void test1313() throws Throwable {
    ExternalTypeHandler.Builder externalTypeHandler_Builder0 = new ExternalTypeHandler.Builder();
    PropertyName propertyName0 = new PropertyName(""com.kasterxml.jacksondatabid.deser.impl.ExternalTypeHandler$ExtTJpePopTy"");
    SimpleType simpleType0 = (SimpleType) TypeBindings.UNBOUND;
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(simpleType0, typeFactory0);
    Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
    AsArrayTypeDeserializer asArrayTypeDeserializer0 = new AsArrayTypeDeserializer(simpleType0, classNameIdResolver0, ""com.kasterxml.jacksondatabid.deser.impl.ExternalTypeHandler$ExtTJpePopTy"", false, class0);
    AnnotationMap annotationMap0 = new AnnotationMap();
    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;
    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, simpleType0, propertyName0, asArrayTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 2, classNameIdResolver0, propertyMetadata0);
    externalTypeHandler_Builder0.addExternal(creatorProperty0, asArrayTypeDeserializer0);
    ExternalTypeHandler externalTypeHandler0 = externalTypeHandler_Builder0.build();
    ExternalTypeHandler externalTypeHandler1 = new ExternalTypeHandler(externalTypeHandler0);
    CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla(2);
    SettableBeanProperty[] settableBeanPropertyArray0 = new SettableBeanProperty[0];
    PropertyBasedCreator propertyBasedCreator0 = PropertyBasedCreator.construct((DeserializationContext) null, creatorCollector_Vanilla0, settableBeanPropertyArray0);
    // Undeclared exception!
    try {
        externalTypeHandler1.complete((JsonParser) null, (DeserializationContext) null, (PropertyValueBuffer) null, propertyBasedCreator0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator"", e);
    }
}",0,
