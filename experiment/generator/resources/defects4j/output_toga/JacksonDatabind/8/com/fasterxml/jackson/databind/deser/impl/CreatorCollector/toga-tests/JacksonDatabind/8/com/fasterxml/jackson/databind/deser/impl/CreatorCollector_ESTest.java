/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 27 23:16:08 GMT 2024
 */
package com.fasterxml.jackson.databind.deser.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.databind.AnnotationIntrospector;
import com.fasterxml.jackson.databind.BeanDescription;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.MapperFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.PropertyMetadata;
import com.fasterxml.jackson.databind.PropertyName;
import com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig;
import com.fasterxml.jackson.databind.cfg.MapperConfig;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.deser.CreatorProperty;
import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
import com.fasterxml.jackson.databind.deser.impl.CreatorCollector;
import com.fasterxml.jackson.databind.introspect.AnnotatedClass;
import com.fasterxml.jackson.databind.introspect.AnnotatedConstructor;
import com.fasterxml.jackson.databind.introspect.AnnotatedMember;
import com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
import com.fasterxml.jackson.databind.introspect.AnnotatedParameter;
import com.fasterxml.jackson.databind.introspect.AnnotatedWithParams;
import com.fasterxml.jackson.databind.introspect.AnnotationMap;
import com.fasterxml.jackson.databind.introspect.BasicBeanDescription;
import com.fasterxml.jackson.databind.introspect.ClassIntrospector;
import com.fasterxml.jackson.databind.introspect.ObjectIdInfo;
import com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector;
import com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer;
import com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer;
import com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;
import com.fasterxml.jackson.databind.node.LongNode;
import com.fasterxml.jackson.databind.type.SimpleType;
import com.fasterxml.jackson.databind.type.TypeBindings;
import com.fasterxml.jackson.databind.type.TypeFactory;
import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class CreatorCollector_ESTest extends CreatorCollector_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        CreatorCollector creatorCollector0 = new CreatorCollector((BeanDescription) null, false);
        creatorCollector0.addLongCreator((AnnotatedWithParams) null, false);
        creatorCollector0.hasDefaultCreator();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        CreatorCollector creatorCollector0 = new CreatorCollector((BeanDescription) null, true);
        creatorCollector0.addLongCreator((AnnotatedWithParams) null);
        creatorCollector0.hasDefaultCreator();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        CreatorCollector creatorCollector0 = new CreatorCollector((BeanDescription) null, true);
        creatorCollector0.verifyNonDup((AnnotatedWithParams) null, 2724);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        CreatorCollector creatorCollector0 = new CreatorCollector((BeanDescription) null, false);
        creatorCollector0.addIntCreator((AnnotatedWithParams) null);
        creatorCollector0.hasDefaultCreator();
        assertFalse(creatorCollector0.hasDefaultCreator());
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        CreatorCollector creatorCollector0 = new CreatorCollector((BeanDescription) null, true);
        CreatorProperty[] creatorPropertyArray0 = new CreatorProperty[0];
        creatorCollector0.addDelegatingCreator((AnnotatedWithParams) null, creatorPropertyArray0);
        creatorCollector0.hasDefaultCreator();
        assertTrue(creatorCollector0.hasDefaultCreator());
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        CreatorCollector creatorCollector0 = new CreatorCollector((BeanDescription) null, false);
        creatorCollector0.addBooleanCreator((AnnotatedWithParams) null);
        creatorCollector0.hasDefaultCreator();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        CreatorCollector creatorCollector0 = new CreatorCollector((BeanDescription) null, true);
        creatorCollector0.addPropertyCreator((AnnotatedWithParams) null, (CreatorProperty[]) null);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        CreatorCollector creatorCollector0 = new CreatorCollector((BeanDescription) null, true);
        creatorCollector0.addDoubleCreator((AnnotatedWithParams) null);
        creatorCollector0.hasDefaultCreator();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        CreatorCollector creatorCollector0 = new CreatorCollector((BeanDescription) null, false);
        creatorCollector0.addStringCreator((AnnotatedWithParams) null);
        creatorCollector0.hasDefaultCreator();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        CreatorCollector creatorCollector0 = new CreatorCollector((BeanDescription) null, false);
        creatorCollector0.addDoubleCreator((AnnotatedWithParams) null, false);
        creatorCollector0.hasDefaultCreator();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        MapperFeature[] mapperFeatureArray0 = new MapperFeature[6];
        MapperFeature mapperFeature0 = MapperFeature.USE_STD_BEAN_NAMING;
        mapperFeatureArray0[0] = mapperFeature0;
        mapperFeatureArray0[1] = mapperFeature0;
        mapperFeatureArray0[2] = mapperFeatureArray0[1];
        mapperFeatureArray0[3] = mapperFeature0;
        MapperFeature mapperFeature1 = MapperFeature.AUTO_DETECT_CREATORS;
        mapperFeatureArray0[4] = mapperFeature1;
        mapperFeatureArray0[5] = mapperFeature0;
        objectMapper0.disable(mapperFeatureArray0);
        Object object0 = new Object();
        ObjectReader objectReader0 = objectMapper0.readerForUpdating(object0);
        assertNotNull(objectReader0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla(1451);
        boolean boolean0 = creatorCollector_Vanilla0.canInstantiate();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        Class<Field> class0 = Field.class;
        ObjectReader objectReader0 = objectMapper0.reader((Class<?>) class0);
        assertNotNull(objectReader0);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        CreatorCollector creatorCollector0 = new CreatorCollector((BeanDescription) null, false);
        CreatorProperty[] creatorPropertyArray0 = new CreatorProperty[0];
        creatorCollector0.addPropertyCreator((AnnotatedWithParams) null, false, creatorPropertyArray0);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());
        doReturn((AnnotatedMember) null).when(pOJOPropertiesCollector0).getAnyGetter();
        doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();
        doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();
        doReturn((AnnotatedMethod) null).when(pOJOPropertiesCollector0).getJsonValueMethod();
        doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();
        doReturn((List) null).when(pOJOPropertiesCollector0).getProperties();
        doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();
        BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);
        CreatorCollector creatorCollector0 = new CreatorCollector(basicBeanDescription0, true);
        PropertyName propertyName0 = new PropertyName("");
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        Class<AnnotatedConstructor> class0 = AnnotatedConstructor.class;
        AnnotatedClass annotatedClass0 = AnnotatedClass.constructWithoutSuperTypes(class0, annotationIntrospector0, (ClassIntrospector.MixInResolver) null);
        CreatorProperty[] creatorPropertyArray0 = new CreatorProperty[2];
        JavaType javaType0 = TypeFactory.unknownType();
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(javaType0, typeFactory0);
        AsExternalTypeDeserializer asExternalTypeDeserializer0 = new AsExternalTypeDeserializer(javaType0, classNameIdResolver0, "", false, class0);
        AnnotationMap annotationMap0 = new AnnotationMap();
        AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, javaType0, annotationMap0, 4);
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, javaType0, propertyName0, asExternalTypeDeserializer0, annotationMap0, annotatedParameter0, 4, annotatedClass0, propertyMetadata0);
        creatorPropertyArray0[0] = creatorProperty0;
        creatorPropertyArray0[1] = creatorProperty0;
        creatorCollector0.addPropertyCreator((AnnotatedWithParams) null, true, creatorPropertyArray0);
        creatorCollector0.hasDefaultCreator();
        assertFalse(creatorCollector0.hasDefaultCreator());
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());
        doReturn((AnnotatedMember) null).when(pOJOPropertiesCollector0).getAnyGetter();
        doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();
        doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();
        doReturn((AnnotatedMethod) null).when(pOJOPropertiesCollector0).getJsonValueMethod();
        doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();
        doReturn((List) null).when(pOJOPropertiesCollector0).getProperties();
        doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();
        BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);
        CreatorCollector creatorCollector0 = new CreatorCollector(basicBeanDescription0, true);
        PropertyName propertyName0 = PropertyName.construct("", "");
        Class<AnnotatedConstructor> class0 = AnnotatedConstructor.class;
        CreatorProperty[] creatorPropertyArray0 = new CreatorProperty[2];
        JavaType javaType0 = TypeFactory.unknownType();
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(javaType0, typeFactory0);
        AsExternalTypeDeserializer asExternalTypeDeserializer0 = new AsExternalTypeDeserializer(javaType0, classNameIdResolver0, "", true, class0);
        AnnotationMap annotationMap0 = new AnnotationMap();
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;
        CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, javaType0, propertyName0, asExternalTypeDeserializer0, annotationMap0, (AnnotatedParameter) null, 4, (Object) null, propertyMetadata0);
        creatorPropertyArray0[0] = creatorProperty0;
        creatorCollector0.addPropertyCreator((AnnotatedWithParams) null, true, creatorPropertyArray0);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        Class<LongNode> class0 = LongNode.class;
        SimpleType simpleType0 = (SimpleType) TypeBindings.UNBOUND;
        Class<AnnotatedMethod> class1 = AnnotatedMethod.class;
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(simpleType0, typeFactory0);
        JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.PROPERTY;
        AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(simpleType0, classNameIdResolver0, " returned null for 'getContentDeserializer()'", true, class1, jsonTypeInfo_As0);
        AnnotationMap annotationMap0 = new AnnotationMap();
        AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, class0, annotationMap0, 20);
        PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED;
        PropertyName propertyName0 = PropertyName.construct(" returned null for 'getContentDeserializer()'", " returned null for 'getContentDeserializer()'");
        CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, simpleType0, propertyName0, asPropertyTypeDeserializer0, annotationMap0, annotatedParameter0, (-2419), typeFactory0, propertyMetadata0);
        CreatorCollector creatorCollector0 = new CreatorCollector((BeanDescription) null, true);
        CreatorProperty[] creatorPropertyArray0 = new CreatorProperty[2];
        creatorPropertyArray0[0] = creatorProperty0;
        creatorPropertyArray0[1] = creatorProperty0;
        creatorCollector0.addPropertyCreator((AnnotatedWithParams) null, true, creatorPropertyArray0);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());
        doReturn((AnnotatedMember) null).when(pOJOPropertiesCollector0).getAnyGetter();
        doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();
        doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();
        doReturn((AnnotatedMethod) null).when(pOJOPropertiesCollector0).getJsonValueMethod();
        doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();
        doReturn((List) null).when(pOJOPropertiesCollector0).getProperties();
        doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();
        BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);
        CreatorCollector creatorCollector0 = new CreatorCollector(basicBeanDescription0, true);
        JavaType javaType0 = TypeFactory.unknownType();
        AnnotationMap annotationMap0 = new AnnotationMap();
        AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, javaType0, annotationMap0, 4);
        creatorCollector0.addIncompeteParameter(annotatedParameter0);
        creatorCollector0.addIncompeteParameter(annotatedParameter0);
        annotatedParameter0.getName();
        assertNotNull(annotatedParameter0.getName());
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        MapperFeature[] mapperFeatureArray0 = new MapperFeature[6];
        MapperFeature mapperFeature0 = MapperFeature.USE_STD_BEAN_NAMING;
        mapperFeatureArray0[0] = mapperFeature0;
        MapperFeature mapperFeature1 = MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS;
        mapperFeatureArray0[1] = mapperFeature1;
        mapperFeatureArray0[2] = mapperFeatureArray0[0];
        mapperFeatureArray0[3] = mapperFeatureArray0[0];
        mapperFeatureArray0[4] = mapperFeatureArray0[1];
        mapperFeatureArray0[5] = mapperFeature0;
        objectMapper0.disable(mapperFeatureArray0);
        Object object0 = new Object();
        ObjectReader objectReader0 = objectMapper0.readerForUpdating(object0);
        assertNotNull(objectReader0);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla(1);
        String string0 = creatorCollector_Vanilla0.getValueTypeDesc();
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla(206);
        String string0 = creatorCollector_Vanilla0.getValueTypeDesc();
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla(2);
        String string0 = creatorCollector_Vanilla0.getValueTypeDesc();
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla(3);
        String string0 = creatorCollector_Vanilla0.getValueTypeDesc();
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla(1);
        ArrayList arrayList0 = (ArrayList) creatorCollector_Vanilla0.createUsingDefault(defaultDeserializationContext_Impl0);
        arrayList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla(2);
        LinkedHashMap linkedHashMap0 = (LinkedHashMap) creatorCollector_Vanilla0.createUsingDefault((DeserializationContext) null);
        linkedHashMap0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla(3);
        DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
        BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        HashMap hashMap0 = (HashMap) creatorCollector_Vanilla0.createUsingDefault(defaultDeserializationContext_Impl0);
        hashMap0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla(1451);
        creatorCollector_Vanilla0.createUsingDefault((DeserializationContext) null);
    }
}
