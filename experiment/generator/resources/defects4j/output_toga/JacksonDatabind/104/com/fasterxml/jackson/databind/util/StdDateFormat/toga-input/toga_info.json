{
  "test2940" : {
    "methodSignature" : "public boolean isColonIncludedInTimeZone()",
    "methodName" : "isColonIncludedInTimeZone",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2940() throws Throwable {\n    StdDateFormat stdDateFormat0 = new StdDateFormat();\n    boolean boolean0 = stdDateFormat0.equals(stdDateFormat0);\n    stdDateFormat0.isColonIncludedInTimeZone();\n}",
    "testName" : "test2940"
  },
  "test1114" : {
    "methodSignature" : "protected Date _parseAsISO8601(String dateStr, ParsePosition bogus) throws IllegalArgumentException, ParseException",
    "methodName" : "_parseAsISO8601",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1114() throws Throwable {\n    StdDateFormat stdDateFormat0 = StdDateFormat.instance;\n    ZoneInfo zoneInfo0 = (ZoneInfo) StdDateFormat.DEFAULT_TIMEZONE;\n    StdDateFormat stdDateFormat1 = stdDateFormat0.withTimeZone(zoneInfo0);\n    stdDateFormat1._parseAsISO8601(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\", (ParsePosition) null);\n}",
    "testName" : "test1114"
  },
  "test1215" : {
    "methodSignature" : "public boolean isColonIncludedInTimeZone()",
    "methodName" : "isColonIncludedInTimeZone",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1215() throws Throwable {\n    StdDateFormat stdDateFormat0 = StdDateFormat.instance;\n    StdDateFormat stdDateFormat1 = stdDateFormat0.withTimeZone((TimeZone) null);\n    StdDateFormat stdDateFormat2 = stdDateFormat1.withTimeZone((TimeZone) null);\n    stdDateFormat2.isColonIncludedInTimeZone();\n}",
    "testName" : "test1215"
  },
  "test1930" : {
    "methodSignature" : "public boolean isLenient()",
    "methodName" : "isLenient",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1930() throws Throwable {\n    TimeZone timeZone0 = StdDateFormat.getDefaultTimeZone();\n    Locale locale0 = Locale.TAIWAN;\n    Boolean boolean0 = Boolean.FALSE;\n    StdDateFormat stdDateFormat0 = new StdDateFormat(timeZone0, locale0, boolean0);\n    stdDateFormat0.setTimeZone(timeZone0);\n    stdDateFormat0.isLenient();\n}",
    "testName" : "test1930"
  },
  "test2941" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2941() throws Throwable {\n    StdDateFormat stdDateFormat0 = new StdDateFormat();\n    boolean boolean0 = stdDateFormat0.equals(stdDateFormat0);\n}",
    "testName" : "test2941"
  },
  "test1013" : {
    "methodSignature" : "public boolean isColonIncludedInTimeZone()",
    "methodName" : "isColonIncludedInTimeZone",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1013() throws Throwable {\n    StdDateFormat stdDateFormat0 = new StdDateFormat();\n    boolean boolean0 = stdDateFormat0.isColonIncludedInTimeZone();\n}",
    "testName" : "test1013"
  },
  "test011" : {
    "methodSignature" : "public boolean isColonIncludedInTimeZone()",
    "methodName" : "isColonIncludedInTimeZone",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    StdDateFormat stdDateFormat0 = new StdDateFormat();\n    StdDateFormat stdDateFormat1 = stdDateFormat0.clone();\n    boolean boolean0 = stdDateFormat1.equals(stdDateFormat0);\n    stdDateFormat1.isColonIncludedInTimeZone();\n}",
    "testName" : "test011"
  },
  "test012" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test012() throws Throwable {\n    StdDateFormat stdDateFormat0 = new StdDateFormat();\n    StdDateFormat stdDateFormat1 = stdDateFormat0.clone();\n    boolean boolean0 = stdDateFormat1.equals(stdDateFormat0);\n}",
    "testName" : "test012"
  },
  "test034" : {
    "methodSignature" : "public Date parse(String dateStr) throws ParseException",
    "methodName" : "parse",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    StdDateFormat stdDateFormat0 = StdDateFormat.instance;\n    stdDateFormat0.parse(\"0000-00-00\");\n}",
    "testName" : "test034"
  },
  "test1216" : {
    "methodSignature" : "public StdDateFormat withTimeZone(TimeZone tz)",
    "methodName" : "withTimeZone",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1216() throws Throwable {\n    StdDateFormat stdDateFormat0 = StdDateFormat.instance;\n    StdDateFormat stdDateFormat1 = stdDateFormat0.withTimeZone((TimeZone) null);\n    StdDateFormat stdDateFormat2 = stdDateFormat1.withTimeZone((TimeZone) null);\n}",
    "testName" : "test1216"
  },
  "test1318" : {
    "methodSignature" : "public StdDateFormat withTimeZone(TimeZone tz)",
    "methodName" : "withTimeZone",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1318() throws Throwable {\n    StdDateFormat stdDateFormat0 = new StdDateFormat();\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");\n    StdDateFormat stdDateFormat1 = stdDateFormat0.withTimeZone(timeZone0);\n    TimeZone timeZone1 = TimeZone.getDefault();\n    StdDateFormat stdDateFormat2 = stdDateFormat1.withTimeZone(timeZone1);\n}",
    "testName" : "test1318"
  },
  "test1929" : {
    "methodSignature" : "public boolean isColonIncludedInTimeZone()",
    "methodName" : "isColonIncludedInTimeZone",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1929() throws Throwable {\n    TimeZone timeZone0 = StdDateFormat.getDefaultTimeZone();\n    Locale locale0 = Locale.TAIWAN;\n    Boolean boolean0 = Boolean.FALSE;\n    StdDateFormat stdDateFormat0 = new StdDateFormat(timeZone0, locale0, boolean0);\n    stdDateFormat0.setTimeZone(timeZone0);\n    stdDateFormat0.isColonIncludedInTimeZone();\n}",
    "testName" : "test1929"
  },
  "test046" : {
    "methodSignature" : "public boolean isColonIncludedInTimeZone()",
    "methodName" : "isColonIncludedInTimeZone",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test046() throws Throwable {\n    StdDateFormat stdDateFormat0 = new StdDateFormat();\n    String string0 = stdDateFormat0.instance.toString();\n    stdDateFormat0.isColonIncludedInTimeZone();\n}",
    "testName" : "test046"
  },
  "test1421" : {
    "methodSignature" : "public Date parse(String dateStr) throws ParseException",
    "methodName" : "parse",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1421() throws Throwable {\n    StdDateFormat stdDateFormat0 = StdDateFormat.instance;\n    Locale locale0 = Locale.JAPAN;\n    StdDateFormat stdDateFormat1 = stdDateFormat0.withLocale(locale0);\n    stdDateFormat1.parse(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");\n}",
    "testName" : "test1421"
  },
  "test3446" : {
    "methodSignature" : "public Date parse(String dateStr) throws ParseException",
    "methodName" : "parse",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3446() throws Throwable {\n    StdDateFormat stdDateFormat0 = StdDateFormat.instance;\n    Locale locale0 = Locale.JAPAN;\n    stdDateFormat0.parse(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");\n}",
    "testName" : "test3446"
  },
  "test2334" : {
    "methodSignature" : "public Date parse(String dateStr) throws ParseException",
    "methodName" : "parse",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2334() throws Throwable {\n    StdDateFormat stdDateFormat0 = new StdDateFormat();\n    stdDateFormat0.parse(\"=\");\n}",
    "testName" : "test2334"
  },
  "test1522" : {
    "methodSignature" : "public StdDateFormat withLocale(Locale loc)",
    "methodName" : "withLocale",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1522() throws Throwable {\n    StdDateFormat stdDateFormat0 = new StdDateFormat();\n    Locale locale0 = Locale.US;\n    StdDateFormat stdDateFormat1 = stdDateFormat0.withLocale(locale0);\n}",
    "testName" : "test1522"
  },
  "test3547" : {
    "methodSignature" : "protected static <T> boolean _equals(T value1, T value2)",
    "methodName" : "_equals",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3547() throws Throwable {\n    Integer integer0 = new Integer(5);\n    boolean boolean0 = StdDateFormat._equals((Integer) null, integer0);\n}",
    "testName" : "test3547"
  },
  "test1523" : {
    "methodSignature" : "public boolean isColonIncludedInTimeZone()",
    "methodName" : "isColonIncludedInTimeZone",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1523() throws Throwable {\n    StdDateFormat stdDateFormat0 = new StdDateFormat();\n    Locale locale0 = Locale.US;\n    StdDateFormat stdDateFormat1 = stdDateFormat0.withLocale(locale0);\n    stdDateFormat1.isColonIncludedInTimeZone();\n}",
    "testName" : "test1523"
  },
  "test3244" : {
    "methodSignature" : "public Date parse(String dateStr) throws ParseException",
    "methodName" : "parse",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3244() throws Throwable {\n    StdDateFormat stdDateFormat0 = new StdDateFormat();\n    stdDateFormat0.parse(\"0000-u00-00T00:00\");\n}",
    "testName" : "test3244"
  },
  "test2132" : {
    "methodSignature" : "public boolean isLenient()",
    "methodName" : "isLenient",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2132() throws Throwable {\n    StdDateFormat stdDateFormat0 = StdDateFormat.instance;\n    stdDateFormat0.setLenient(false);\n    stdDateFormat0.isLenient();\n}",
    "testName" : "test2132"
  },
  "test1320" : {
    "methodSignature" : "public boolean isColonIncludedInTimeZone()",
    "methodName" : "isColonIncludedInTimeZone",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1320() throws Throwable {\n    StdDateFormat stdDateFormat0 = new StdDateFormat();\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");\n    StdDateFormat stdDateFormat1 = stdDateFormat0.withTimeZone(timeZone0);\n    TimeZone timeZone1 = TimeZone.getDefault();\n    StdDateFormat stdDateFormat2 = stdDateFormat1.withTimeZone(timeZone1);\n    stdDateFormat2.isColonIncludedInTimeZone();\n}",
    "testName" : "test1320"
  },
  "test3345" : {
    "methodSignature" : "public Date parse(String dateStr) throws ParseException",
    "methodName" : "parse",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3345() throws Throwable {\n    StdDateFormat stdDateFormat0 = new StdDateFormat();\n    stdDateFormat0.parse(\"00=0-00-00\");\n}",
    "testName" : "test3345"
  },
  "test2233" : {
    "methodSignature" : "public Date parse(String dateStr) throws ParseException",
    "methodName" : "parse",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2233() throws Throwable {\n    StdDateFormat stdDateFormat0 = StdDateFormat.instance;\n    stdDateFormat0.parse(\"0000-00-00T00:00\");\n}",
    "testName" : "test2233"
  },
  "test045" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test045() throws Throwable {\n    StdDateFormat stdDateFormat0 = new StdDateFormat();\n    String string0 = stdDateFormat0.instance.toString();\n}",
    "testName" : "test045"
  },
  "test1828" : {
    "methodSignature" : "public StdDateFormat withColonInTimeZone(boolean b)",
    "methodName" : "withColonInTimeZone",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1828() throws Throwable {\n    StdDateFormat stdDateFormat0 = StdDateFormat.instance;\n    StdDateFormat stdDateFormat1 = stdDateFormat0.withColonInTimeZone(false);\n}",
    "testName" : "test1828"
  },
  "test2839" : {
    "methodSignature" : "public String toPattern()",
    "methodName" : "toPattern",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2839() throws Throwable {\n    StdDateFormat stdDateFormat0 = StdDateFormat.instance;\n    String string0 = stdDateFormat0.instance.toPattern();\n}",
    "testName" : "test2839"
  },
  "test1624" : {
    "methodSignature" : "public boolean isLenient()",
    "methodName" : "isLenient",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1624() throws Throwable {\n    StdDateFormat stdDateFormat0 = StdDateFormat.instance;\n    Boolean boolean0 = Boolean.valueOf(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");\n    StdDateFormat stdDateFormat1 = stdDateFormat0.withLenient(boolean0);\n    stdDateFormat1.isLenient();\n}",
    "testName" : "test1624"
  },
  "test0811" : {
    "methodSignature" : "public boolean isColonIncludedInTimeZone()",
    "methodName" : "isColonIncludedInTimeZone",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0811() throws Throwable {\n    TimeZone timeZone0 = StdDateFormat.getDefaultTimeZone();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    Boolean boolean0 = Boolean.TRUE;\n    StdDateFormat stdDateFormat0 = new StdDateFormat(timeZone0, locale0, boolean0);\n    stdDateFormat0.hashCode();\n    stdDateFormat0.isColonIncludedInTimeZone();\n}",
    "testName" : "test0811"
  },
  "test1625" : {
    "methodSignature" : "public boolean isColonIncludedInTimeZone()",
    "methodName" : "isColonIncludedInTimeZone",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1625() throws Throwable {\n    StdDateFormat stdDateFormat0 = StdDateFormat.instance;\n    Boolean boolean0 = Boolean.valueOf(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");\n    StdDateFormat stdDateFormat1 = stdDateFormat0.withLenient(boolean0);\n    stdDateFormat1.isColonIncludedInTimeZone();\n}",
    "testName" : "test1625"
  },
  "test057" : {
    "methodSignature" : "public boolean isColonIncludedInTimeZone()",
    "methodName" : "isColonIncludedInTimeZone",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test057() throws Throwable {\n    TimeZone timeZone0 = StdDateFormat.getDefaultTimeZone();\n    Locale locale0 = Locale.ITALIAN;\n    StdDateFormat stdDateFormat0 = new StdDateFormat(timeZone0, locale0);\n    TimeZone timeZone1 = stdDateFormat0.getTimeZone();\n    stdDateFormat0.isColonIncludedInTimeZone();\n}",
    "testName" : "test057"
  },
  "test058" : {
    "methodSignature" : "public TimeZone getTimeZone()",
    "methodName" : "getTimeZone",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test058() throws Throwable {\n    TimeZone timeZone0 = StdDateFormat.getDefaultTimeZone();\n    Locale locale0 = Locale.ITALIAN;\n    StdDateFormat stdDateFormat0 = new StdDateFormat(timeZone0, locale0);\n    TimeZone timeZone1 = stdDateFormat0.getTimeZone();\n}",
    "testName" : "test058"
  },
  "test3042" : {
    "methodSignature" : "public Date parse(String dateStr) throws ParseException",
    "methodName" : "parse",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3042() throws Throwable {\n    StdDateFormat stdDateFormat0 = new StdDateFormat();\n    stdDateFormat0.parse(\"00,G-00-00T00:W0\");\n}",
    "testName" : "test3042"
  },
  "test3143" : {
    "methodSignature" : "public Date parse(String dateStr) throws ParseException",
    "methodName" : "parse",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3143() throws Throwable {\n    StdDateFormat stdDateFormat0 = new StdDateFormat();\n    stdDateFormat0.parse(\"2.2250738585072012e-308\");\n}",
    "testName" : "test3143"
  },
  "test2031" : {
    "methodSignature" : "public boolean isColonIncludedInTimeZone()",
    "methodName" : "isColonIncludedInTimeZone",
    "className" : "com.fasterxml.jackson.databind.util.StdDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2031() throws Throwable {\n    StdDateFormat stdDateFormat0 = StdDateFormat.instance;\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");\n    stdDateFormat0.instance.setTimeZone(timeZone0);\n    stdDateFormat0.isColonIncludedInTimeZone();\n}",
    "testName" : "test2031"
  }
}