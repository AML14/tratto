project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test022,"public void test022() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<LinkedList> class0 = LinkedList.class;
    Class<SQLWarning> class1 = SQLWarning.class;
    CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class1);
    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());
    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();
    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();
    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();
    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();
    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    // Undeclared exception!
    try {
        beanDeserializerFactory0.resolveType(defaultDeserializationContext_Impl0, basicBeanDescription0, collectionType0, (AnnotatedMember) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.DeserializationContext"", e);
    }
}",1,
project,0,test033,"public void test033() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DeserializerFactoryConfig deserializerFactoryConfig0 = beanDeserializerFactory0.getFactoryConfig();
    assertFalse(deserializerFactoryConfig0.hasDeserializers());
}",0,assertTrue(deserializerFactoryConfig0.hasDeserializers())
project,0,test044,"public void test044() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    // Undeclared exception!
    try {
        beanDeserializerFactory0.withValueInstantiators((ValueInstantiators) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Cannot pass null resolver
        //
        verifyException(""com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig"", e);
    }
}",0,
project,0,test055,"public void test055() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());
    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();
    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();
    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();
    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();
    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);
    // Undeclared exception!
    try {
        beanDeserializerFactory0._reportUnwrappedCreatorProperty(defaultDeserializationContext_Impl0, basicBeanDescription0, (AnnotatedParameter) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.BasicDeserializerFactory"", e);
    }
}",0,
project,0,test077,"public void test077() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();
    DeserializerFactory deserializerFactory0 = beanDeserializerFactory0.withAbstractTypeResolver(simpleAbstractTypeResolver0);
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl1 = new DefaultDeserializationContext.Impl(defaultDeserializationContext_Impl0, deserializerFactory0);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<LinkedList> class0 = LinkedList.class;
    CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class0);
    AtomicReference<Throwable> atomicReference0 = new AtomicReference<Throwable>();
    boolean boolean0 = defaultDeserializationContext_Impl1.hasValueDeserializerFor(collectionType0, atomicReference0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test099,"public void test099() throws Throwable {
    Deserializers.Base deserializers_Base0 = new Deserializers.Base();
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    // Undeclared exception!
    try {
        beanDeserializerFactory0._valueInstantiatorInstance((DeserializationConfig) null, (Annotated) null, deserializers_Base0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // AnnotationIntrospector returned key deserializer definition of type com.fasterxml.jackson.databind.deser.Deserializers$Base; expected type KeyDeserializer or Class<KeyDeserializer> instead
        //
        verifyException(""com.fasterxml.jackson.databind.deser.BasicDeserializerFactory"", e);
    }
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    ValueInstantiator valueInstantiator0 = beanDeserializerFactory0._valueInstantiatorInstance((DeserializationConfig) null, (Annotated) null, (Object) null);
    assertNull(valueInstantiator0);
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    SQLClientInfoException sQLClientInfoException0 = new SQLClientInfoException();
    ObjectReader objectReader0 = objectMapper0.readerForUpdating(sQLClientInfoException0);
    assertNotNull(objectReader0);
}",0,assertNotNull(objectReader0)
project,0,test1414,"public void test1414() throws Throwable {
    JsonFactory jsonFactory0 = new JsonFactory();
    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
    LinkedList<UTF8DataInputJsonParser> linkedList0 = new LinkedList<UTF8DataInputJsonParser>();
    ObjectReader objectReader0 = objectMapper0.readerForUpdating(linkedList0);
    assertNotNull(objectReader0);
}",0,assertNotNull(objectReader0)
project,0,test1515,"public void test1515() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    JavaType javaType0 = TypeFactory.unknownType();
    CollectionType collectionType0 = beanDeserializerFactory0._mapAbstractCollectionType(javaType0, (DeserializationConfig) null);
    assertNull(collectionType0);
}",0,
project,0,test1616,"public void test1616() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    Class<MapType> class0 = MapType.class;
    CollectionLikeType collectionLikeType0 = typeFactory0.constructRawCollectionLikeType(class0);
    // Undeclared exception!
    try {
        beanDeserializerFactory0.createCollectionLikeDeserializer(defaultDeserializationContext_Impl0, collectionLikeType0, (BeanDescription) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.BasicDeserializerFactory"", e);
    }
}",0,
project,0,test1717,"public void test1717() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<ConcurrentHashMap> class0 = ConcurrentHashMap.class;
    MapType mapType0 = typeFactory0.constructRawMapType(class0);
    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(mapType0, typeFactory0);
    Class<BatchUpdateException> class1 = BatchUpdateException.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class1);
    AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer(mapType0, classNameIdResolver0, ""java.java.util.HashMap"", false, simpleType0);
    MapType mapType1 = mapType0.withContentTypeHandler(asWrapperTypeDeserializer0);
    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());
    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();
    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();
    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();
    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();
    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forDeserialization(pOJOPropertiesCollector0);
    JsonDeserializer<?> jsonDeserializer0 = beanDeserializerFactory0.createMapLikeDeserializer(defaultDeserializationContext_Impl0, mapType1, basicBeanDescription0);
    assertNull(jsonDeserializer0);
}",1,
project,0,test1818,"public void test1818() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<TreeMap> class0 = TreeMap.class;
    MapType mapType0 = typeFactory0.constructRawMapType(class0);
    // Undeclared exception!
    try {
        beanDeserializerFactory0.createMapLikeDeserializer(defaultDeserializationContext_Impl0, mapType0, (BeanDescription) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.BasicDeserializerFactory"", e);
    }
}",1,
project,0,test1919,"public void test1919() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<MapType> class0 = MapType.class;
    CollectionLikeType collectionLikeType0 = typeFactory0.constructRawCollectionLikeType(class0);
    JsonDeserializer<?> jsonDeserializer0 = beanDeserializerFactory0.createTreeDeserializer((DeserializationConfig) null, collectionLikeType0, (BeanDescription) null);
    assertEquals(AccessPattern.DYNAMIC, jsonDeserializer0.getEmptyAccessPattern());
}",0,
project,0,test2020,"public void test2020() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    Class<AsExternalTypeDeserializer> class0 = AsExternalTypeDeserializer.class;
    CollectionLikeType collectionLikeType0 = typeFactory0.constructRawCollectionLikeType(class0);
    ReferenceType referenceType0 = ReferenceType.upgradeFrom(collectionLikeType0, collectionLikeType0);
    // Undeclared exception!
    try {
        beanDeserializerFactory0.createReferenceDeserializer(defaultDeserializationContext_Impl0, referenceType0, (BeanDescription) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.BasicDeserializerFactory"", e);
    }
}",0,
project,0,test2222,"public void test2222() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());
    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();
    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();
    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();
    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();
    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forDeserialization(pOJOPropertiesCollector0);
    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
    SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();
    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAbstractTypeResolver(simpleAbstractTypeResolver0);
    BeanDeserializerFactory beanDeserializerFactory1 = new BeanDeserializerFactory(deserializerFactoryConfig1);
    BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
    JavaType javaType0 = beanProperty_Bogus0.getType();
    // Undeclared exception!
    try {
        beanDeserializerFactory1.findDefaultDeserializer(defaultDeserializationContext_Impl0, javaType0, basicBeanDescription0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.BasicDeserializerFactory"", e);
    }
}",0,
project,0,test2424,"public void test2424() throws Throwable {
    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());
    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();
    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();
    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();
    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();
    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);
    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
    Deserializers.Base deserializers_Base0 = new Deserializers.Base();
    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);
    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);
    Class<BooleanNode> class0 = BooleanNode.class;
    JsonDeserializer<?> jsonDeserializer0 = beanDeserializerFactory0._findCustomTreeNodeDeserializer(class0, (DeserializationConfig) null, basicBeanDescription0);
    assertNull(jsonDeserializer0);
}",0,assertNotNull(jsonDeserializer0)
project,0,test2525,"public void test2525() throws Throwable {
    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());
    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();
    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();
    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();
    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();
    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);
    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
    Deserializers.Base deserializers_Base0 = new Deserializers.Base();
    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);
    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);
    JsonDeserializer<SQLFeatureNotSupportedException> jsonDeserializer0 = (JsonDeserializer<SQLFeatureNotSupportedException>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
    JsonDeserializer<?> jsonDeserializer1 = beanDeserializerFactory0._findCustomReferenceDeserializer((ReferenceType) null, (DeserializationConfig) null, basicBeanDescription0, (TypeDeserializer) null, jsonDeserializer0);
    assertNull(jsonDeserializer1);
}",0,"assertEquals(jsonDeserializer0, jsonDeserializer1)"
project,0,test2626,"public void test2626() throws Throwable {
    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());
    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();
    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();
    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();
    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();
    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);
    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
    Deserializers.Base deserializers_Base0 = new Deserializers.Base();
    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);
    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);
    JsonDeserializer<Object> jsonDeserializer0 = beanDeserializerFactory0._findCustomBeanDeserializer((JavaType) null, (DeserializationConfig) null, basicBeanDescription0);
    assertNull(jsonDeserializer0);
}",0,assertNotNull(jsonDeserializer0)
project,0,test2727,"public void test2727() throws Throwable {
    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());
    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();
    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();
    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();
    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();
    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);
    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
    Deserializers.Base deserializers_Base0 = new Deserializers.Base();
    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);
    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<LinkedList> class0 = LinkedList.class;
    ArrayType arrayType0 = typeFactory0.constructArrayType(class0);
    JsonDeserializer<?> jsonDeserializer0 = beanDeserializerFactory0._findCustomArrayDeserializer(arrayType0, (DeserializationConfig) null, basicBeanDescription0, (TypeDeserializer) null, (JsonDeserializer<?>) null);
    assertNull(jsonDeserializer0);
}",0,
project,0,test2828,"public void test2828() throws Throwable {
    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());
    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();
    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();
    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();
    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();
    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);
    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
    Deserializers.Base deserializers_Base0 = new Deserializers.Base();
    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);
    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);
    JsonDeserializer<Object> jsonDeserializer0 = SettableBeanProperty.MISSING_VALUE_DESERIALIZER;
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<LinkedList> class0 = LinkedList.class;
    CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class0);
    JsonDeserializer<?> jsonDeserializer1 = beanDeserializerFactory0._findCustomCollectionDeserializer(collectionType0, (DeserializationConfig) null, basicBeanDescription0, (TypeDeserializer) null, jsonDeserializer0);
    assertNull(jsonDeserializer1);
}",0,"assertEquals(jsonDeserializer0, jsonDeserializer1)"
project,0,test2929,"public void test2929() throws Throwable {
    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());
    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();
    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();
    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();
    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();
    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);
    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
    Deserializers.Base deserializers_Base0 = new Deserializers.Base();
    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);
    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<LinkedList> class0 = LinkedList.class;
    CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class0);
    JsonDeserializer<?> jsonDeserializer0 = beanDeserializerFactory0._findCustomCollectionLikeDeserializer(collectionType0, (DeserializationConfig) null, basicBeanDescription0, (TypeDeserializer) null, (JsonDeserializer<?>) null);
    assertNull(jsonDeserializer0);
}",0,assertNotNull(jsonDeserializer0)
project,0,test3030,"public void test3030() throws Throwable {
    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());
    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();
    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();
    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();
    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();
    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);
    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
    Deserializers.Base deserializers_Base0 = new Deserializers.Base();
    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);
    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);
    Class<DecimalNode> class0 = DecimalNode.class;
    JsonDeserializer<?> jsonDeserializer0 = beanDeserializerFactory0._findCustomEnumDeserializer(class0, (DeserializationConfig) null, basicBeanDescription0);
    assertNull(jsonDeserializer0);
}",1,
project,0,test3131,"public void test3131() throws Throwable {
    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());
    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();
    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();
    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();
    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();
    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);
    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
    Deserializers.Base deserializers_Base0 = new Deserializers.Base();
    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);
    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<Deserializers.Base> class0 = Deserializers.Base.class;
    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);
    Class<ConcurrentHashMap> class1 = ConcurrentHashMap.class;
    MapType mapType0 = typeFactory0.constructMapType((Class<? extends Map>) class1, (JavaType) mapLikeType0, (JavaType) mapLikeType0);
    JsonDeserializer<?> jsonDeserializer0 = beanDeserializerFactory0._findCustomMapDeserializer(mapType0, (DeserializationConfig) null, basicBeanDescription0, (KeyDeserializer) null, (TypeDeserializer) null, (JsonDeserializer<?>) null);
    assertNull(jsonDeserializer0);
}",0,
project,0,test3232,"public void test3232() throws Throwable {
    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());
    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();
    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();
    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();
    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();
    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);
    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
    Deserializers.Base deserializers_Base0 = new Deserializers.Base();
    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);
    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<Deserializers.Base> class0 = Deserializers.Base.class;
    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);
    JsonDeserializer<BatchUpdateException> jsonDeserializer0 = (JsonDeserializer<BatchUpdateException>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
    JsonDeserializer<?> jsonDeserializer1 = beanDeserializerFactory0._findCustomMapLikeDeserializer(mapLikeType0, (DeserializationConfig) null, basicBeanDescription0, (KeyDeserializer) null, (TypeDeserializer) null, jsonDeserializer0);
    assertNull(jsonDeserializer1);
}",0,"assertEquals(jsonDeserializer0, jsonDeserializer1)"
project,0,test3434,"public void test3434() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    JavaType javaType0 = TypeFactory.unknownType();
    Class<MapType> class0 = MapType.class;
    VirtualAnnotatedMember virtualAnnotatedMember0 = new VirtualAnnotatedMember((TypeResolutionContext) null, class0, ""18OG@PD"", javaType0);
    // Undeclared exception!
    try {
        beanDeserializerFactory0.constructEnumResolver(class0, (DeserializationConfig) null, virtualAnnotatedMember0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.BasicDeserializerFactory"", e);
    }
}",0,
project,0,test3535,"public void test3535() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    JavaType javaType0 = TypeFactory.unknownType();
    // Undeclared exception!
    try {
        beanDeserializerFactory0._findJsonValueFor((DeserializationConfig) null, javaType0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.BasicDeserializerFactory"", e);
    }
}",0,
project,0,test3636,"public void test3636() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    AnnotatedMethod annotatedMethod0 = beanDeserializerFactory0._findJsonValueFor((DeserializationConfig) null, (JavaType) null);
    assertNull(annotatedMethod0);
}",0,assertNotNull(annotatedMethod0)
