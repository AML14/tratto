[ {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "protected JavaType resolveType(DeserializationContext ctxt, BeanDescription beanDesc, JavaType type, AnnotatedMember member) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test022"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "public boolean hasDeserializers()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(deserializerFactoryConfig0.hasDeserializers())",
  "exception" : "",
  "testName" : "test033"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "public final DeserializerFactory withValueInstantiators(ValueInstantiators instantiators)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test044"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "protected void _reportUnwrappedCreatorProperty(DeserializationContext ctxt, BeanDescription beanDesc, AnnotatedParameter param) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test055"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "public boolean hasValueDeserializerFor(JavaType type, AtomicReference<Throwable> cause)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test077"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "public ValueInstantiator _valueInstantiatorInstance(DeserializationConfig config, Annotated annotated, Object instDef) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test099"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "public ValueInstantiator _valueInstantiatorInstance(DeserializationConfig config, Annotated annotated, Object instDef) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1010"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(objectReader0)",
  "exception" : "",
  "testName" : "test1313"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(objectReader0)",
  "exception" : "",
  "testName" : "test1414"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "protected CollectionType _mapAbstractCollectionType(JavaType type, DeserializationConfig config)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1515"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "public JsonDeserializer<?> createCollectionLikeDeserializer(DeserializationContext ctxt, CollectionLikeType type, final BeanDescription beanDesc) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1616"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "public JsonDeserializer<?> createMapLikeDeserializer(DeserializationContext ctxt, MapLikeType type, final BeanDescription beanDesc) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1717"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "public JsonDeserializer<?> createMapLikeDeserializer(DeserializationContext ctxt, MapLikeType type, final BeanDescription beanDesc) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1818"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "public AccessPattern getEmptyAccessPattern()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1919"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "public JsonDeserializer<?> createReferenceDeserializer(DeserializationContext ctxt, ReferenceType type, BeanDescription beanDesc) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2020"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "public JsonDeserializer<?> findDefaultDeserializer(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2222"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "protected JsonDeserializer<?> _findCustomTreeNodeDeserializer(Class<? extends JsonNode> type, DeserializationConfig config, BeanDescription beanDesc) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(jsonDeserializer0)",
  "exception" : "",
  "testName" : "test2424"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "protected JsonDeserializer<?> _findCustomReferenceDeserializer(ReferenceType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer contentTypeDeserializer, JsonDeserializer<?> contentDeserializer) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(jsonDeserializer0, jsonDeserializer1)",
  "exception" : "",
  "testName" : "test2525"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "protected JsonDeserializer<Object> _findCustomBeanDeserializer(JavaType type, DeserializationConfig config, BeanDescription beanDesc) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(jsonDeserializer0)",
  "exception" : "",
  "testName" : "test2626"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "protected JsonDeserializer<?> _findCustomArrayDeserializer(ArrayType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2727"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "protected JsonDeserializer<?> _findCustomCollectionDeserializer(CollectionType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(jsonDeserializer0, jsonDeserializer1)",
  "exception" : "",
  "testName" : "test2828"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "protected JsonDeserializer<?> _findCustomCollectionLikeDeserializer(CollectionLikeType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(jsonDeserializer0)",
  "exception" : "",
  "testName" : "test2929"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "protected JsonDeserializer<?> _findCustomEnumDeserializer(Class<?> type, DeserializationConfig config, BeanDescription beanDesc) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3030"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "protected JsonDeserializer<?> _findCustomMapDeserializer(MapType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3131"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "protected JsonDeserializer<?> _findCustomMapLikeDeserializer(MapLikeType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer) throws JsonMappingException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(jsonDeserializer0, jsonDeserializer1)",
  "exception" : "",
  "testName" : "test3232"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "protected EnumResolver constructEnumResolver(Class<?> enumClass, DeserializationConfig config, AnnotatedMember jsonValueAccessor)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3434"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "protected AnnotatedMethod _findJsonValueFor(DeserializationConfig config, JavaType enumType)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3535"
}, {
  "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
  "methodSignature" : "protected AnnotatedMethod _findJsonValueFor(DeserializationConfig config, JavaType enumType)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(annotatedMethod0)",
  "exception" : "",
  "testName" : "test3636"
} ]