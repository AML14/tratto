{
  "test3434" : {
    "methodSignature" : "protected EnumResolver constructEnumResolver(Class<?> enumClass, DeserializationConfig config, AnnotatedMember jsonValueAccessor)",
    "methodName" : "constructEnumResolver",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    JavaType javaType0 = TypeFactory.unknownType();\n    Class<MapType> class0 = MapType.class;\n    VirtualAnnotatedMember virtualAnnotatedMember0 = new VirtualAnnotatedMember((TypeResolutionContext) null, class0, \"18OG@PD\", javaType0);\n    beanDeserializerFactory0.constructEnumResolver(class0, (DeserializationConfig) null, virtualAnnotatedMember0);\n}",
    "testName" : "test3434"
  },
  "test1313" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    SQLClientInfoException sQLClientInfoException0 = new SQLClientInfoException();\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(sQLClientInfoException0);\n}",
    "testName" : "test1313"
  },
  "test2424" : {
    "methodSignature" : "protected JsonDeserializer<?> _findCustomTreeNodeDeserializer(Class<? extends JsonNode> type, DeserializationConfig config, BeanDescription beanDesc) throws JsonMappingException",
    "methodName" : "_findCustomTreeNodeDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    Deserializers.Base deserializers_Base0 = new Deserializers.Base();\n    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);\n    Class<BooleanNode> class0 = BooleanNode.class;\n    JsonDeserializer<?> jsonDeserializer0 = beanDeserializerFactory0._findCustomTreeNodeDeserializer(class0, (DeserializationConfig) null, basicBeanDescription0);\n}",
    "testName" : "test2424"
  },
  "test3535" : {
    "methodSignature" : "protected AnnotatedMethod _findJsonValueFor(DeserializationConfig config, JavaType enumType)",
    "methodName" : "_findJsonValueFor",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    JavaType javaType0 = TypeFactory.unknownType();\n    beanDeserializerFactory0._findJsonValueFor((DeserializationConfig) null, javaType0);\n}",
    "testName" : "test3535"
  },
  "test1010" : {
    "methodSignature" : "public ValueInstantiator _valueInstantiatorInstance(DeserializationConfig config, Annotated annotated, Object instDef) throws JsonMappingException",
    "methodName" : "_valueInstantiatorInstance",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    ValueInstantiator valueInstantiator0 = beanDeserializerFactory0._valueInstantiatorInstance((DeserializationConfig) null, (Annotated) null, (Object) null);\n}",
    "testName" : "test1010"
  },
  "test3232" : {
    "methodSignature" : "protected JsonDeserializer<?> _findCustomMapLikeDeserializer(MapLikeType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer) throws JsonMappingException",
    "methodName" : "_findCustomMapLikeDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    Deserializers.Base deserializers_Base0 = new Deserializers.Base();\n    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<Deserializers.Base> class0 = Deserializers.Base.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);\n    JsonDeserializer<BatchUpdateException> jsonDeserializer0 = (JsonDeserializer<BatchUpdateException>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    JsonDeserializer<?> jsonDeserializer1 = beanDeserializerFactory0._findCustomMapLikeDeserializer(mapLikeType0, (DeserializationConfig) null, basicBeanDescription0, (KeyDeserializer) null, (TypeDeserializer) null, jsonDeserializer0);\n}",
    "testName" : "test3232"
  },
  "test2222" : {
    "methodSignature" : "public JsonDeserializer<?> findDefaultDeserializer(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc) throws JsonMappingException",
    "methodName" : "findDefaultDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forDeserialization(pOJOPropertiesCollector0);\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();\n    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAbstractTypeResolver(simpleAbstractTypeResolver0);\n    BeanDeserializerFactory beanDeserializerFactory1 = new BeanDeserializerFactory(deserializerFactoryConfig1);\n    BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();\n    JavaType javaType0 = beanProperty_Bogus0.getType();\n    beanDeserializerFactory1.findDefaultDeserializer(defaultDeserializationContext_Impl0, javaType0, basicBeanDescription0);\n}",
    "testName" : "test2222"
  },
  "test033" : {
    "methodSignature" : "public boolean hasDeserializers()",
    "methodName" : "hasDeserializers",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DeserializerFactoryConfig deserializerFactoryConfig0 = beanDeserializerFactory0.getFactoryConfig();\n    deserializerFactoryConfig0.hasDeserializers();\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "protected void _reportUnwrappedCreatorProperty(DeserializationContext ctxt, BeanDescription beanDesc, AnnotatedParameter param) throws JsonMappingException",
    "methodName" : "_reportUnwrappedCreatorProperty",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);\n    beanDeserializerFactory0._reportUnwrappedCreatorProperty(defaultDeserializationContext_Impl0, basicBeanDescription0, (AnnotatedParameter) null);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public boolean hasValueDeserializerFor(JavaType type, AtomicReference<Throwable> cause)",
    "methodName" : "hasValueDeserializerFor",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();\n    DeserializerFactory deserializerFactory0 = beanDeserializerFactory0.withAbstractTypeResolver(simpleAbstractTypeResolver0);\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl1 = new DefaultDeserializationContext.Impl(defaultDeserializationContext_Impl0, deserializerFactory0);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<LinkedList> class0 = LinkedList.class;\n    CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class0);\n    AtomicReference<Throwable> atomicReference0 = new AtomicReference<Throwable>();\n    boolean boolean0 = defaultDeserializationContext_Impl1.hasValueDeserializerFor(collectionType0, atomicReference0);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public ValueInstantiator _valueInstantiatorInstance(DeserializationConfig config, Annotated annotated, Object instDef) throws JsonMappingException",
    "methodName" : "_valueInstantiatorInstance",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Deserializers.Base deserializers_Base0 = new Deserializers.Base();\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    beanDeserializerFactory0._valueInstantiatorInstance((DeserializationConfig) null, (Annotated) null, deserializers_Base0);\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "public JsonDeserializer<?> createCollectionLikeDeserializer(DeserializationContext ctxt, CollectionLikeType type, final BeanDescription beanDesc) throws JsonMappingException",
    "methodName" : "createCollectionLikeDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    Class<MapType> class0 = MapType.class;\n    CollectionLikeType collectionLikeType0 = typeFactory0.constructRawCollectionLikeType(class0);\n    beanDeserializerFactory0.createCollectionLikeDeserializer(defaultDeserializationContext_Impl0, collectionLikeType0, (BeanDescription) null);\n}",
    "testName" : "test1616"
  },
  "test2727" : {
    "methodSignature" : "protected JsonDeserializer<?> _findCustomArrayDeserializer(ArrayType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer) throws JsonMappingException",
    "methodName" : "_findCustomArrayDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    Deserializers.Base deserializers_Base0 = new Deserializers.Base();\n    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<LinkedList> class0 = LinkedList.class;\n    ArrayType arrayType0 = typeFactory0.constructArrayType(class0);\n    JsonDeserializer<?> jsonDeserializer0 = beanDeserializerFactory0._findCustomArrayDeserializer(arrayType0, (DeserializationConfig) null, basicBeanDescription0, (TypeDeserializer) null, (JsonDeserializer<?>) null);\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "public JsonDeserializer<?> createMapLikeDeserializer(DeserializationContext ctxt, MapLikeType type, final BeanDescription beanDesc) throws JsonMappingException",
    "methodName" : "createMapLikeDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<ConcurrentHashMap> class0 = ConcurrentHashMap.class;\n    MapType mapType0 = typeFactory0.constructRawMapType(class0);\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(mapType0, typeFactory0);\n    Class<BatchUpdateException> class1 = BatchUpdateException.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class1);\n    AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer(mapType0, classNameIdResolver0, \"java.java.util.HashMap\", false, simpleType0);\n    MapType mapType1 = mapType0.withContentTypeHandler(asWrapperTypeDeserializer0);\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forDeserialization(pOJOPropertiesCollector0);\n    JsonDeserializer<?> jsonDeserializer0 = beanDeserializerFactory0.createMapLikeDeserializer(defaultDeserializationContext_Impl0, mapType1, basicBeanDescription0);\n}",
    "testName" : "test1717"
  },
  "test2828" : {
    "methodSignature" : "protected JsonDeserializer<?> _findCustomCollectionDeserializer(CollectionType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer) throws JsonMappingException",
    "methodName" : "_findCustomCollectionDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    Deserializers.Base deserializers_Base0 = new Deserializers.Base();\n    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);\n    JsonDeserializer<Object> jsonDeserializer0 = SettableBeanProperty.MISSING_VALUE_DESERIALIZER;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<LinkedList> class0 = LinkedList.class;\n    CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class0);\n    JsonDeserializer<?> jsonDeserializer1 = beanDeserializerFactory0._findCustomCollectionDeserializer(collectionType0, (DeserializationConfig) null, basicBeanDescription0, (TypeDeserializer) null, jsonDeserializer0);\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    LinkedList<UTF8DataInputJsonParser> linkedList0 = new LinkedList<UTF8DataInputJsonParser>();\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(linkedList0);\n}",
    "testName" : "test1414"
  },
  "test2525" : {
    "methodSignature" : "protected JsonDeserializer<?> _findCustomReferenceDeserializer(ReferenceType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer contentTypeDeserializer, JsonDeserializer<?> contentDeserializer) throws JsonMappingException",
    "methodName" : "_findCustomReferenceDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    Deserializers.Base deserializers_Base0 = new Deserializers.Base();\n    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);\n    JsonDeserializer<SQLFeatureNotSupportedException> jsonDeserializer0 = (JsonDeserializer<SQLFeatureNotSupportedException>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    JsonDeserializer<?> jsonDeserializer1 = beanDeserializerFactory0._findCustomReferenceDeserializer((ReferenceType) null, (DeserializationConfig) null, basicBeanDescription0, (TypeDeserializer) null, jsonDeserializer0);\n}",
    "testName" : "test2525"
  },
  "test3636" : {
    "methodSignature" : "protected AnnotatedMethod _findJsonValueFor(DeserializationConfig config, JavaType enumType)",
    "methodName" : "_findJsonValueFor",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3636() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    AnnotatedMethod annotatedMethod0 = beanDeserializerFactory0._findJsonValueFor((DeserializationConfig) null, (JavaType) null);\n}",
    "testName" : "test3636"
  },
  "test1515" : {
    "methodSignature" : "protected CollectionType _mapAbstractCollectionType(JavaType type, DeserializationConfig config)",
    "methodName" : "_mapAbstractCollectionType",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    JavaType javaType0 = TypeFactory.unknownType();\n    CollectionType collectionType0 = beanDeserializerFactory0._mapAbstractCollectionType(javaType0, (DeserializationConfig) null);\n}",
    "testName" : "test1515"
  },
  "test2626" : {
    "methodSignature" : "protected JsonDeserializer<Object> _findCustomBeanDeserializer(JavaType type, DeserializationConfig config, BeanDescription beanDesc) throws JsonMappingException",
    "methodName" : "_findCustomBeanDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    Deserializers.Base deserializers_Base0 = new Deserializers.Base();\n    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);\n    JsonDeserializer<Object> jsonDeserializer0 = beanDeserializerFactory0._findCustomBeanDeserializer((JavaType) null, (DeserializationConfig) null, basicBeanDescription0);\n}",
    "testName" : "test2626"
  },
  "test3030" : {
    "methodSignature" : "protected JsonDeserializer<?> _findCustomEnumDeserializer(Class<?> type, DeserializationConfig config, BeanDescription beanDesc) throws JsonMappingException",
    "methodName" : "_findCustomEnumDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    Deserializers.Base deserializers_Base0 = new Deserializers.Base();\n    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);\n    Class<DecimalNode> class0 = DecimalNode.class;\n    JsonDeserializer<?> jsonDeserializer0 = beanDeserializerFactory0._findCustomEnumDeserializer(class0, (DeserializationConfig) null, basicBeanDescription0);\n}",
    "testName" : "test3030"
  },
  "test2020" : {
    "methodSignature" : "public JsonDeserializer<?> createReferenceDeserializer(DeserializationContext ctxt, ReferenceType type, BeanDescription beanDesc) throws JsonMappingException",
    "methodName" : "createReferenceDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    Class<AsExternalTypeDeserializer> class0 = AsExternalTypeDeserializer.class;\n    CollectionLikeType collectionLikeType0 = typeFactory0.constructRawCollectionLikeType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(collectionLikeType0, collectionLikeType0);\n    beanDeserializerFactory0.createReferenceDeserializer(defaultDeserializationContext_Impl0, referenceType0, (BeanDescription) null);\n}",
    "testName" : "test2020"
  },
  "test3131" : {
    "methodSignature" : "protected JsonDeserializer<?> _findCustomMapDeserializer(MapType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer) throws JsonMappingException",
    "methodName" : "_findCustomMapDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    Deserializers.Base deserializers_Base0 = new Deserializers.Base();\n    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<Deserializers.Base> class0 = Deserializers.Base.class;\n    MapLikeType mapLikeType0 = typeFactory0.constructRawMapLikeType(class0);\n    Class<ConcurrentHashMap> class1 = ConcurrentHashMap.class;\n    MapType mapType0 = typeFactory0.constructMapType((Class<? extends Map>) class1, (JavaType) mapLikeType0, (JavaType) mapLikeType0);\n    JsonDeserializer<?> jsonDeserializer0 = beanDeserializerFactory0._findCustomMapDeserializer(mapType0, (DeserializationConfig) null, basicBeanDescription0, (KeyDeserializer) null, (TypeDeserializer) null, (JsonDeserializer<?>) null);\n}",
    "testName" : "test3131"
  },
  "test022" : {
    "methodSignature" : "protected JavaType resolveType(DeserializationContext ctxt, BeanDescription beanDesc, JavaType type, AnnotatedMember member) throws JsonMappingException",
    "methodName" : "resolveType",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<LinkedList> class0 = LinkedList.class;\n    Class<SQLWarning> class1 = SQLWarning.class;\n    CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class1);\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    beanDeserializerFactory0.resolveType(defaultDeserializationContext_Impl0, basicBeanDescription0, collectionType0, (AnnotatedMember) null);\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public final DeserializerFactory withValueInstantiators(ValueInstantiators instantiators)",
    "methodName" : "withValueInstantiators",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    beanDeserializerFactory0.withValueInstantiators((ValueInstantiators) null);\n}",
    "testName" : "test044"
  },
  "test1818" : {
    "methodSignature" : "public JsonDeserializer<?> createMapLikeDeserializer(DeserializationContext ctxt, MapLikeType type, final BeanDescription beanDesc) throws JsonMappingException",
    "methodName" : "createMapLikeDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<TreeMap> class0 = TreeMap.class;\n    MapType mapType0 = typeFactory0.constructRawMapType(class0);\n    beanDeserializerFactory0.createMapLikeDeserializer(defaultDeserializationContext_Impl0, mapType0, (BeanDescription) null);\n}",
    "testName" : "test1818"
  },
  "test2929" : {
    "methodSignature" : "protected JsonDeserializer<?> _findCustomCollectionLikeDeserializer(CollectionLikeType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer) throws JsonMappingException",
    "methodName" : "_findCustomCollectionLikeDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    Deserializers.Base deserializers_Base0 = new Deserializers.Base();\n    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<LinkedList> class0 = LinkedList.class;\n    CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class0);\n    JsonDeserializer<?> jsonDeserializer0 = beanDeserializerFactory0._findCustomCollectionLikeDeserializer(collectionType0, (DeserializationConfig) null, basicBeanDescription0, (TypeDeserializer) null, (JsonDeserializer<?>) null);\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public AccessPattern getEmptyAccessPattern()",
    "methodName" : "getEmptyAccessPattern",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<MapType> class0 = MapType.class;\n    CollectionLikeType collectionLikeType0 = typeFactory0.constructRawCollectionLikeType(class0);\n    JsonDeserializer<?> jsonDeserializer0 = beanDeserializerFactory0.createTreeDeserializer((DeserializationConfig) null, collectionLikeType0, (BeanDescription) null);\n    jsonDeserializer0.getEmptyAccessPattern();\n}",
    "testName" : "test1919"
  }
}