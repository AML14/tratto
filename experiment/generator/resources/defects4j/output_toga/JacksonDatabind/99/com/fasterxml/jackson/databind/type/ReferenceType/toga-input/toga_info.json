{
  "test1113" : {
    "methodSignature" : "public final boolean isJavaLangObject()",
    "methodName" : "isJavaLangObject",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1113() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<MapType> class0 = MapType.class;\n    ArrayType arrayType0 = typeFactory0.constructArrayType(class0);\n    ReferenceType referenceType0 = new ReferenceType(arrayType0, arrayType0);\n    JavaType javaType0 = referenceType0.getContentType();\n    javaType0.isJavaLangObject();\n}",
    "testName" : "test1113"
  },
  "test2126" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2126() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    ReferenceType referenceType1 = (ReferenceType) referenceType0.withContentValueHandler(class0);\n    referenceType1.equals((Object) referenceType0);\n}",
    "testName" : "test2126"
  },
  "test1214" : {
    "methodSignature" : "public static ReferenceType upgradeFrom(JavaType baseType, JavaType refdType)",
    "methodName" : "upgradeFrom",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1214() throws Throwable {\n    ReferenceType.upgradeFrom((JavaType) null, (JavaType) null);\n}",
    "testName" : "test1214"
  },
  "test2127" : {
    "methodSignature" : "public boolean isAnchorType()",
    "methodName" : "isAnchorType",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2127() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    ReferenceType referenceType1 = (ReferenceType) referenceType0.withContentValueHandler(class0);\n    referenceType1.isAnchorType();\n}",
    "testName" : "test2127"
  },
  "test2025" : {
    "methodSignature" : "public boolean isAnchorType()",
    "methodName" : "isAnchorType",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2025() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(0);\n    ReferenceType referenceType0 = new ReferenceType(placeholderForType0, placeholderForType0);\n    ReferenceType referenceType1 = referenceType0.withValueHandler((Object) null);\n    referenceType1.isAnchorType();\n}",
    "testName" : "test2025"
  },
  "test011" : {
    "methodSignature" : "public abstract int containedTypeCount()",
    "methodName" : "containedTypeCount",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    JavaType javaType0 = referenceType0.getReferencedType();\n    javaType0.containedTypeCount();\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    String string0 = referenceType0.toString();\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public boolean isAnchorType()",
    "methodName" : "isAnchorType",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    JavaType[] javaTypeArray0 = new JavaType[7];\n    javaTypeArray0[5] = (JavaType) simpleType0;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (TypeBindings) null, (JavaType) simpleType0, javaTypeArray0, javaTypeArray0[5]);\n    MapLikeType mapLikeType0 = MapLikeType.upgradeFrom(collectionLikeType0, javaTypeArray0[2], javaTypeArray0[4]);\n    CollectionType collectionType0 = new CollectionType(mapLikeType0, javaTypeArray0[2]);\n    ReferenceType referenceType0 = new ReferenceType(collectionType0, collectionLikeType0);\n    Class<Integer> class1 = Integer.class;\n    ReferenceType referenceType1 = (ReferenceType) referenceType0._narrow(class1);\n    referenceType1.isAnchorType();\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public static ReferenceType construct(Class<?> cls, JavaType refType)",
    "methodName" : "construct",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Class<CollectionLikeType> class0 = CollectionLikeType.class;\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_BOOL;\n    CollectionType collectionType0 = new CollectionType(simpleType0, simpleType0);\n    ReferenceType.construct((Class<?>) class0, (JavaType) collectionType0);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public boolean isAnchorType()",
    "methodName" : "isAnchorType",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_ENUM;\n    ReferenceType referenceType0 = new ReferenceType(simpleType0, simpleType0);\n    JavaType[] javaTypeArray0 = new JavaType[0];\n    ReferenceType referenceType1 = ReferenceType.construct((Class<?>) class0, typeBindings0, (JavaType) null, javaTypeArray0, (JavaType) referenceType0);\n    boolean boolean0 = referenceType1.equals(referenceType0);\n    referenceType1.isAnchorType();\n}",
    "testName" : "test099"
  },
  "test1518" : {
    "methodSignature" : "public boolean isAnchorType()",
    "methodName" : "isAnchorType",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1518() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<MapType> class0 = MapType.class;\n    ArrayType arrayType0 = typeFactory0.constructArrayType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(arrayType0, arrayType0);\n    ReferenceType referenceType1 = (ReferenceType) referenceType0.withContentType(arrayType0);\n    referenceType1.isAnchorType();\n}",
    "testName" : "test1518"
  },
  "test1619" : {
    "methodSignature" : "public boolean hasHandlers()",
    "methodName" : "hasHandlers",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1619() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    Class<Integer> class1 = Integer.class;\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded((Class<?>) class1, (JavaType) referenceType0);\n    Class<MapLikeType> class2 = MapLikeType.class;\n    CollectionType collectionType0 = CollectionType.construct((Class<?>) class2, typeBindings0, (JavaType) referenceType0, (JavaType[]) null, (JavaType) referenceType0);\n    CollectionLikeType collectionLikeType0 = collectionType0.withContentTypeHandler(typeBindings0);\n    collectionLikeType0.hasHandlers();\n}",
    "testName" : "test1619"
  },
  "test1315" : {
    "methodSignature" : "public static ReferenceType upgradeFrom(JavaType baseType, JavaType refdType)",
    "methodName" : "upgradeFrom",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1315() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    ReferenceType.upgradeFrom((JavaType) null, referenceType0);\n}",
    "testName" : "test1315"
  },
  "test2228" : {
    "methodSignature" : "public boolean isAnchorType()",
    "methodName" : "isAnchorType",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2228() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_ENUM;\n    ReferenceType referenceType0 = new ReferenceType(simpleType0, simpleType0);\n    ReferenceType referenceType1 = referenceType0.withContentValueHandler((Object) null);\n    referenceType1.isAnchorType();\n}",
    "testName" : "test2228"
  },
  "test1416" : {
    "methodSignature" : "public boolean isAnchorType()",
    "methodName" : "isAnchorType",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1416() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    ReferenceType referenceType1 = (ReferenceType) referenceType0.withContentType(referenceType0);\n    referenceType1.isAnchorType();\n}",
    "testName" : "test1416"
  },
  "test1417" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1417() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    ReferenceType referenceType1 = (ReferenceType) referenceType0.withContentType(referenceType0);\n    referenceType1.equals((Object) referenceType0);\n}",
    "testName" : "test1417"
  },
  "test2329" : {
    "methodSignature" : "public boolean isAnchorType()",
    "methodName" : "isAnchorType",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2329() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    Class<Integer> class1 = Integer.class;\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded((Class<?>) class1, (JavaType) referenceType0);\n    ReferenceType referenceType1 = referenceType0.withStaticTyping();\n    Class<MapLikeType> class2 = MapLikeType.class;\n    CollectionType collectionType0 = CollectionType.construct((Class<?>) class2, typeBindings0, (JavaType) referenceType1, (JavaType[]) null, (JavaType) referenceType1);\n    collectionType0.withStaticTyping();\n    referenceType1.isAnchorType();\n}",
    "testName" : "test2329"
  },
  "test2434" : {
    "methodSignature" : "public boolean isAnchorType()",
    "methodName" : "isAnchorType",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2434() throws Throwable {\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    JavaType[] javaTypeArray0 = new JavaType[7];\n    javaTypeArray0[1] = (JavaType) simpleType0;\n    javaTypeArray0[5] = (JavaType) simpleType0;\n    javaTypeArray0[6] = (JavaType) simpleType0;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (TypeBindings) null, (JavaType) simpleType0, javaTypeArray0, javaTypeArray0[5]);\n    MapLikeType mapLikeType0 = MapLikeType.upgradeFrom(javaTypeArray0[6], simpleType0, javaTypeArray0[2]);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(javaTypeArray0[1], collectionLikeType0);\n    ReferenceType referenceType1 = referenceType0.withContentTypeHandler(mapLikeType0);\n    boolean boolean0 = referenceType1.isAnchorType();\n}",
    "testName" : "test2434"
  },
  "test1620" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1620() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    Class<Integer> class1 = Integer.class;\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded((Class<?>) class1, (JavaType) referenceType0);\n    Class<MapLikeType> class2 = MapLikeType.class;\n    CollectionType collectionType0 = CollectionType.construct((Class<?>) class2, typeBindings0, (JavaType) referenceType0, (JavaType[]) null, (JavaType) referenceType0);\n    CollectionLikeType collectionLikeType0 = collectionType0.withContentTypeHandler(typeBindings0);\n    collectionLikeType0.equals((Object) collectionType0);\n}",
    "testName" : "test1620"
  },
  "test2433" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2433() throws Throwable {\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    JavaType[] javaTypeArray0 = new JavaType[7];\n    javaTypeArray0[1] = (JavaType) simpleType0;\n    javaTypeArray0[5] = (JavaType) simpleType0;\n    javaTypeArray0[6] = (JavaType) simpleType0;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (TypeBindings) null, (JavaType) simpleType0, javaTypeArray0, javaTypeArray0[5]);\n    MapLikeType mapLikeType0 = MapLikeType.upgradeFrom(javaTypeArray0[6], simpleType0, javaTypeArray0[2]);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(javaTypeArray0[1], collectionLikeType0);\n    ReferenceType referenceType1 = referenceType0.withContentTypeHandler(mapLikeType0);\n    boolean boolean0 = referenceType1.isAnchorType();\n    referenceType0.equals((Object) referenceType1);\n}",
    "testName" : "test2433"
  },
  "test2535" : {
    "methodSignature" : "public boolean isAnchorType()",
    "methodName" : "isAnchorType",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2535() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<MapType> class0 = MapType.class;\n    ArrayType arrayType0 = typeFactory0.constructArrayType(class0);\n    ReferenceType referenceType0 = new ReferenceType(arrayType0, arrayType0);\n    boolean boolean0 = referenceType0.isAnchorType();\n}",
    "testName" : "test2535"
  },
  "test1721" : {
    "methodSignature" : "public boolean isAnchorType()",
    "methodName" : "isAnchorType",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1721() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    ReferenceType referenceType1 = referenceType0.withTypeHandler((Object) null);\n    referenceType1.isAnchorType();\n}",
    "testName" : "test1721"
  },
  "test2331" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2331() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    Class<Integer> class1 = Integer.class;\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded((Class<?>) class1, (JavaType) referenceType0);\n    ReferenceType referenceType1 = referenceType0.withStaticTyping();\n    Class<MapLikeType> class2 = MapLikeType.class;\n    CollectionType collectionType0 = CollectionType.construct((Class<?>) class2, typeBindings0, (JavaType) referenceType1, (JavaType[]) null, (JavaType) referenceType1);\n    collectionType0.withStaticTyping();\n    referenceType0.equals((Object) referenceType1);\n}",
    "testName" : "test2331"
  },
  "test2330" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2330() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    Class<Integer> class1 = Integer.class;\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded((Class<?>) class1, (JavaType) referenceType0);\n    ReferenceType referenceType1 = referenceType0.withStaticTyping();\n    Class<MapLikeType> class2 = MapLikeType.class;\n    CollectionType collectionType0 = CollectionType.construct((Class<?>) class2, typeBindings0, (JavaType) referenceType1, (JavaType[]) null, (JavaType) referenceType1);\n    collectionType0.withStaticTyping();\n    referenceType1.useStaticType();\n}",
    "testName" : "test2330"
  },
  "test2432" : {
    "methodSignature" : "public boolean isAnchorType()",
    "methodName" : "isAnchorType",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2432() throws Throwable {\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    JavaType[] javaTypeArray0 = new JavaType[7];\n    javaTypeArray0[1] = (JavaType) simpleType0;\n    javaTypeArray0[5] = (JavaType) simpleType0;\n    javaTypeArray0[6] = (JavaType) simpleType0;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (TypeBindings) null, (JavaType) simpleType0, javaTypeArray0, javaTypeArray0[5]);\n    MapLikeType mapLikeType0 = MapLikeType.upgradeFrom(javaTypeArray0[6], simpleType0, javaTypeArray0[2]);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(javaTypeArray0[1], collectionLikeType0);\n    ReferenceType referenceType1 = referenceType0.withContentTypeHandler(mapLikeType0);\n    boolean boolean0 = referenceType1.isAnchorType();\n    referenceType0.isAnchorType();\n}",
    "testName" : "test2432"
  },
  "test000" : {
    "methodSignature" : "public boolean isAnchorType()",
    "methodName" : "isAnchorType",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    Class<Integer> class1 = Integer.class;\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded((Class<?>) class1, (JavaType) referenceType0);\n    Class<MapLikeType> class2 = MapLikeType.class;\n    JavaType[] javaTypeArray0 = new JavaType[5];\n    ReferenceType referenceType1 = (ReferenceType) referenceType0.refine(class2, typeBindings0, referenceType0, javaTypeArray0);\n    referenceType1.isAnchorType();\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public boolean isReferenceType()",
    "methodName" : "isReferenceType",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    JavaType[] javaTypeArray0 = new JavaType[7];\n    javaTypeArray0[5] = (JavaType) simpleType0;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (TypeBindings) null, (JavaType) simpleType0, javaTypeArray0, javaTypeArray0[5]);\n    MapLikeType mapLikeType0 = MapLikeType.upgradeFrom(collectionLikeType0, javaTypeArray0[2], javaTypeArray0[4]);\n    CollectionType collectionType0 = new CollectionType(mapLikeType0, javaTypeArray0[2]);\n    ReferenceType referenceType0 = new ReferenceType(collectionType0, collectionType0);\n    boolean boolean0 = referenceType0.isReferenceType();\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public String getErasedSignature()",
    "methodName" : "getErasedSignature",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    String string0 = referenceType0.getErasedSignature();\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public boolean hasContentType()",
    "methodName" : "hasContentType",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    boolean boolean0 = referenceType0.hasContentType();\n}",
    "testName" : "test066"
  },
  "test1924" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1924() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    Class<Integer> class1 = Integer.class;\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded((Class<?>) class1, (JavaType) referenceType0);\n    Class<MapLikeType> class2 = MapLikeType.class;\n    CollectionType collectionType0 = CollectionType.construct((Class<?>) class2, typeBindings0, (JavaType) referenceType0, (JavaType[]) null, (JavaType) referenceType0);\n    ReferenceType referenceType1 = referenceType0.withValueHandler(collectionType0);\n    referenceType1.equals((Object) referenceType0);\n}",
    "testName" : "test1924"
  },
  "test2838" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2838() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    ReferenceType referenceType1 = new ReferenceType(simpleType0, referenceType0);\n    boolean boolean0 = referenceType1.equals(referenceType0);\n}",
    "testName" : "test2838"
  },
  "test2839" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2839() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    ReferenceType referenceType1 = new ReferenceType(simpleType0, referenceType0);\n    boolean boolean0 = referenceType1.equals(referenceType0);\n    referenceType0.equals((Object) referenceType1);\n}",
    "testName" : "test2839"
  },
  "test2636" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2636() throws Throwable {\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    JavaType[] javaTypeArray0 = new JavaType[7];\n    javaTypeArray0[1] = (JavaType) simpleType0;\n    javaTypeArray0[5] = (JavaType) simpleType0;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.construct((Class<?>) class0, (TypeBindings) null, (JavaType) simpleType0, javaTypeArray0, javaTypeArray0[5]);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(javaTypeArray0[1], collectionLikeType0);\n    boolean boolean0 = referenceType0.equals(javaTypeArray0[3]);\n}",
    "testName" : "test2636"
  },
  "test1822" : {
    "methodSignature" : "public boolean isAnchorType()",
    "methodName" : "isAnchorType",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1822() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    ReferenceType referenceType1 = referenceType0.withContentTypeHandler((Object) null);\n    referenceType1.isAnchorType();\n}",
    "testName" : "test1822"
  },
  "test0910" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0910() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_ENUM;\n    ReferenceType referenceType0 = new ReferenceType(simpleType0, simpleType0);\n    JavaType[] javaTypeArray0 = new JavaType[0];\n    ReferenceType referenceType1 = ReferenceType.construct((Class<?>) class0, typeBindings0, (JavaType) null, javaTypeArray0, (JavaType) referenceType0);\n    boolean boolean0 = referenceType1.equals(referenceType0);\n}",
    "testName" : "test0910"
  },
  "test2737" : {
    "methodSignature" : "public boolean isArrayType()",
    "methodName" : "isArrayType",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2737() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<SimpleType> class0 = SimpleType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    Class<EnumSet> class1 = EnumSet.class;\n    CollectionType collectionType0 = typeFactory0.constructCollectionType((Class<? extends Collection>) class1, (JavaType) referenceType0);\n    collectionType0.isArrayType();\n}",
    "testName" : "test2737"
  },
  "test0911" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0911() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_ENUM;\n    ReferenceType referenceType0 = new ReferenceType(simpleType0, simpleType0);\n    JavaType[] javaTypeArray0 = new JavaType[0];\n    ReferenceType referenceType1 = ReferenceType.construct((Class<?>) class0, typeBindings0, (JavaType) null, javaTypeArray0, (JavaType) referenceType0);\n    boolean boolean0 = referenceType1.equals(referenceType0);\n    referenceType1.useStaticType();\n}",
    "testName" : "test0911"
  },
  "test1923" : {
    "methodSignature" : "public boolean isAnchorType()",
    "methodName" : "isAnchorType",
    "className" : "com.fasterxml.jackson.databind.type.ReferenceType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1923() throws Throwable {\n    Class<MapType> class0 = MapType.class;\n    SimpleType simpleType0 = new SimpleType(class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);\n    Class<Integer> class1 = Integer.class;\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded((Class<?>) class1, (JavaType) referenceType0);\n    Class<MapLikeType> class2 = MapLikeType.class;\n    CollectionType collectionType0 = CollectionType.construct((Class<?>) class2, typeBindings0, (JavaType) referenceType0, (JavaType[]) null, (JavaType) referenceType0);\n    ReferenceType referenceType1 = referenceType0.withValueHandler(collectionType0);\n    referenceType1.isAnchorType();\n}",
    "testName" : "test1923"
  }
}