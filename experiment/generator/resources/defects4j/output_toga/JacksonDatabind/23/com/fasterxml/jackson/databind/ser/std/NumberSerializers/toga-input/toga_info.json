{
  "test1212" : {
    "methodSignature" : "public void writeValue(File resultFile, Object value) throws IOException, JsonGenerationException, JsonMappingException",
    "methodName" : "writeValue",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory((ObjectCodec) null);\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    MockFile mockFile0 = new MockFile(\"JSON\");\n    objectMapper0.writeValue((File) mockFile0, (Object) mockFile0);\n}",
    "testName" : "test1212"
  },
  "test1010" : {
    "methodSignature" : "public boolean isUnwrappingSerializer()",
    "methodName" : "isUnwrappingSerializer",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    NumberSerializers.FloatSerializer numberSerializers_FloatSerializer0 = new NumberSerializers.FloatSerializer();\n    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base();\n    numberSerializers_FloatSerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper_Base0, (JavaType) null);\n    numberSerializers_FloatSerializer0.isUnwrappingSerializer();\n}",
    "testName" : "test1010"
  },
  "test1111" : {
    "methodSignature" : "public boolean usesObjectId()",
    "methodName" : "usesObjectId",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    NumberSerializers.FloatSerializer numberSerializers_FloatSerializer0 = new NumberSerializers.FloatSerializer();\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    JsonSerializer<?> jsonSerializer0 = numberSerializers_FloatSerializer0.createContextual(defaultSerializerProvider_Impl0, (BeanProperty) null);\n    jsonSerializer0.usesObjectId();\n}",
    "testName" : "test1111"
  },
  "test000" : {
    "methodSignature" : "public boolean isLong()",
    "methodName" : "isLong",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    NumberSerializers.FloatSerializer numberSerializers_FloatSerializer0 = new NumberSerializers.FloatSerializer();\n    JsonNode jsonNode0 = numberSerializers_FloatSerializer0.getSchema((SerializerProvider) null, (Type) null, false);\n    jsonNode0.isLong();\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public void serializeWithType(T value, JsonGenerator jgen, SerializerProvider provider, TypeSerializer typeSer) throws IOException",
    "methodName" : "serializeWithType",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    NumberSerializers.IntegerSerializer numberSerializers_IntegerSerializer0 = new NumberSerializers.IntegerSerializer();\n    numberSerializers_IntegerSerializer0.serializeWithType((Object) null, (JsonGenerator) null, (SerializerProvider) null, (TypeSerializer) null);\n}",
    "testName" : "test022"
  },
  "test033" : {
    "methodSignature" : "public abstract void serialize(T value, JsonGenerator gen, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    NumberSerializers.FloatSerializer numberSerializers_FloatSerializer0 = new NumberSerializers.FloatSerializer();\n    Float float0 = new Float((-1692.891F));\n    numberSerializers_FloatSerializer0.serialize(float0, (JsonGenerator) null, (SerializerProvider) null);\n}",
    "testName" : "test033"
  },
  "test044" : {
    "methodSignature" : "public boolean isUnwrappingSerializer()",
    "methodName" : "isUnwrappingSerializer",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    NumberSerializers.LongSerializer numberSerializers_LongSerializer0 = new NumberSerializers.LongSerializer();\n    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base();\n    numberSerializers_LongSerializer0.acceptJsonFormatVisitor(jsonFormatVisitorWrapper_Base0, (JavaType) null);\n    numberSerializers_LongSerializer0.isUnwrappingSerializer();\n}",
    "testName" : "test044"
  },
  "test055" : {
    "methodSignature" : "public abstract void serialize(T value, JsonGenerator gen, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    NumberSerializers.IntLikeSerializer numberSerializers_IntLikeSerializer0 = new NumberSerializers.IntLikeSerializer();\n    NumberSerializers.LongSerializer numberSerializers_LongSerializer0 = new NumberSerializers.LongSerializer();\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    numberSerializers_LongSerializer0.serialize(numberSerializers_IntLikeSerializer0, (JsonGenerator) null, defaultSerializerProvider_Impl0);\n}",
    "testName" : "test055"
  },
  "test066" : {
    "methodSignature" : "public abstract void serialize(T value, JsonGenerator gen, SerializerProvider provider) throws IOException",
    "methodName" : "serialize",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    NumberSerializers.IntLikeSerializer numberSerializers_IntLikeSerializer0 = NumberSerializers.IntLikeSerializer.instance;\n    Double double0 = new Double(0.0);\n    JsonGeneratorDelegate jsonGeneratorDelegate0 = new JsonGeneratorDelegate((JsonGenerator) null, true);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    numberSerializers_IntLikeSerializer0.serialize((Number) double0, (JsonGenerator) jsonGeneratorDelegate0, (SerializerProvider) defaultSerializerProvider_Impl0);\n}",
    "testName" : "test066"
  },
  "test077" : {
    "methodSignature" : "public void serializeWithType(T value, JsonGenerator jgen, SerializerProvider provider, TypeSerializer typeSer) throws IOException",
    "methodName" : "serializeWithType",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"JSON\");\n    JsonGenerator jsonGenerator0 = jsonFactory0.createGenerator((OutputStream) mockPrintStream0);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    NumberSerializers.DoubleSerializer numberSerializers_DoubleSerializer0 = NumberSerializers.DoubleSerializer.instance;\n    Object object0 = new Object();\n    numberSerializers_DoubleSerializer0.serializeWithType(object0, jsonGenerator0, defaultSerializerProvider_Impl0, (TypeSerializer) null);\n}",
    "testName" : "test077"
  },
  "test088" : {
    "methodSignature" : "public boolean usesObjectId()",
    "methodName" : "usesObjectId",
    "className" : "com.fasterxml.jackson.databind.ser.std.NumberSerializers",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    NumberSerializers.DoubleSerializer numberSerializers_DoubleSerializer0 = new NumberSerializers.DoubleSerializer();\n    numberSerializers_DoubleSerializer0.usesObjectId();\n}",
    "testName" : "test088"
  }
}