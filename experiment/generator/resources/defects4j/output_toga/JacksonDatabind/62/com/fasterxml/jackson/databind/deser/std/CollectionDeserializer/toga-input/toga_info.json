{
  "test1314" : {
    "methodSignature" : "public Collection<Object> deserialize(JsonParser p, DeserializationContext ctxt) throws IOException",
    "methodName" : "deserialize",
    "className" : "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1314() throws Throwable {\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    CollectionDeserializer collectionDeserializer0 = new CollectionDeserializer((JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null, jsonLocationInstantiator0);\n    ArrayNode arrayNode0 = new ArrayNode((JsonNodeFactory) null);\n    JsonParser jsonParser0 = arrayNode0.traverse();\n    collectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) null);\n}",
    "testName" : "test1314"
  },
  "test1011" : {
    "methodSignature" : "public CollectionDeserializer createContextual(DeserializationContext ctxt, BeanProperty property) throws JsonMappingException",
    "methodName" : "createContextual",
    "className" : "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1011() throws Throwable {\n    CollectionDeserializer collectionDeserializer0 = new CollectionDeserializer((JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null, (ValueInstantiator) null);\n    collectionDeserializer0.createContextual((DeserializationContext) null, (BeanProperty) null);\n}",
    "testName" : "test1011"
  },
  "test011" : {
    "methodSignature" : "public Object deserializeWithType(JsonParser jp, DeserializationContext ctxt, TypeDeserializer typeDeserializer) throws IOException",
    "methodName" : "deserializeWithType",
    "className" : "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    ArrayNode arrayNode0 = new ArrayNode((JsonNodeFactory) null);\n    JsonParser jsonParser0 = arrayNode0.traverse();\n    CollectionDeserializer collectionDeserializer0 = new CollectionDeserializer((JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null, jsonLocationInstantiator0);\n    collectionDeserializer0.deserializeWithType(jsonParser0, (DeserializationContext) null, (TypeDeserializer) null);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public SettableBeanProperty findBackReference(String refName)",
    "methodName" : "findBackReference",
    "className" : "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    CollectionDeserializer collectionDeserializer0 = new CollectionDeserializer((JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null, jsonLocationInstantiator0);\n    collectionDeserializer0.findBackReference(\"M}.Zg#SH!.h#p1YWd\");\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Class<Object> class0 = Object.class;\n    TypeBindings typeBindings0 = TypeBindings.create(class0, (JavaType[]) null);\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    CollectionDeserializer collectionDeserializer0 = new CollectionDeserializer(resolvedRecursiveType0, (JsonDeserializer<Object>) null, (TypeDeserializer) null, jsonLocationInstantiator0);\n    Boolean boolean0 = Boolean.TRUE;\n    CollectionDeserializer collectionDeserializer1 = collectionDeserializer0.withResolved((JsonDeserializer<?>) null, collectionDeserializer0, (TypeDeserializer) null, boolean0);\n    boolean boolean1 = collectionDeserializer1.isCachable();\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "protected CollectionDeserializer withResolved(JsonDeserializer<?> dd, JsonDeserializer<?> vd, TypeDeserializer vtd, Boolean unwrapSingle)",
    "methodName" : "withResolved",
    "className" : "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    Class<Object> class0 = Object.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    CollectionDeserializer collectionDeserializer0 = new CollectionDeserializer(resolvedRecursiveType0, (JsonDeserializer<Object>) null, (TypeDeserializer) null, jsonLocationInstantiator0);\n    Boolean boolean0 = Boolean.TRUE;\n    CollectionDeserializer collectionDeserializer1 = collectionDeserializer0.withResolved((JsonDeserializer<?>) null, (JsonDeserializer<?>) null, (TypeDeserializer) null, boolean0);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Class<InputStream> class0 = InputStream.class;\n    JavaType[] javaTypeArray0 = new JavaType[0];\n    TypeBindings typeBindings0 = TypeBindings.create(class0, javaTypeArray0);\n    Class<RuntimeException> class1 = RuntimeException.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class1, typeBindings0);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    CollectionDeserializer collectionDeserializer0 = new CollectionDeserializer(resolvedRecursiveType0, (JsonDeserializer<Object>) null, (TypeDeserializer) null, jsonLocationInstantiator0);\n    Boolean boolean0 = Boolean.TRUE;\n    CollectionDeserializer collectionDeserializer1 = collectionDeserializer0.withResolved(collectionDeserializer0, (JsonDeserializer<?>) null, (TypeDeserializer) null, boolean0);\n    boolean boolean1 = collectionDeserializer1.isCachable();\n    collectionDeserializer0.isCachable();\n}",
    "testName" : "test099"
  },
  "test1617" : {
    "methodSignature" : "public Collection<Object> deserialize(JsonParser p, DeserializationContext ctxt, Collection<Object> result) throws IOException",
    "methodName" : "deserialize",
    "className" : "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1617() throws Throwable {\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    ArrayNode arrayNode0 = new ArrayNode((JsonNodeFactory) null);\n    JsonParser jsonParser0 = arrayNode0.traverse();\n    ArrayList<Object> arrayList0 = new ArrayList<Object>();\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter0, true, true);\n    filteringParserDelegate0.nextBooleanValue();\n    Class<Locale> class0 = Locale.class;\n    CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class0, 22);\n    CollectionDeserializer collectionDeserializer0 = new CollectionDeserializer((JavaType) null, coreXMLDeserializers_Std0, (TypeDeserializer) null, jsonLocationInstantiator0, coreXMLDeserializers_Std0, (Boolean) null);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    Collection<Object> collection0 = collectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0, (Collection<Object>) arrayList0);\n    collectionDeserializer0.deserialize((JsonParser) filteringParserDelegate0, (DeserializationContext) null, collection0);\n}",
    "testName" : "test1617"
  },
  "test1718" : {
    "methodSignature" : "public Collection<Object> deserialize(JsonParser p, DeserializationContext ctxt, Collection<Object> result) throws IOException",
    "methodName" : "deserialize",
    "className" : "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1718() throws Throwable {\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    ArrayNode arrayNode0 = new ArrayNode((JsonNodeFactory) null);\n    JsonParser jsonParser0 = arrayNode0.traverse();\n    ArrayList<Object> arrayList0 = new ArrayList<Object>();\n    Boolean boolean0 = Boolean.TRUE;\n    CollectionDeserializer collectionDeserializer0 = new CollectionDeserializer((JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null, jsonLocationInstantiator0, (JsonDeserializer<Object>) null, boolean0);\n    collectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) null, (Collection<Object>) arrayList0);\n}",
    "testName" : "test1718"
  },
  "test1415" : {
    "methodSignature" : "public Collection<Object> deserialize(JsonParser p, DeserializationContext ctxt) throws IOException",
    "methodName" : "deserialize",
    "className" : "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1415() throws Throwable {\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    ArrayNode arrayNode0 = new ArrayNode((JsonNodeFactory) null);\n    JsonParser jsonParser0 = arrayNode0.traverse();\n    Class<Locale> class0 = Locale.class;\n    CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class0, 42);\n    CollectionDeserializer collectionDeserializer0 = new CollectionDeserializer((JavaType) null, coreXMLDeserializers_Std0, (TypeDeserializer) null, jsonLocationInstantiator0, coreXMLDeserializers_Std0, (Boolean) null);\n    collectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) null);\n}",
    "testName" : "test1415"
  },
  "test1516" : {
    "methodSignature" : "public Collection<Object> deserialize(JsonParser p, DeserializationContext ctxt, Collection<Object> result) throws IOException",
    "methodName" : "deserialize",
    "className" : "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1516() throws Throwable {\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    ArrayNode arrayNode0 = new ArrayNode((JsonNodeFactory) null);\n    JsonParser jsonParser0 = arrayNode0.traverse();\n    ArrayList<Object> arrayList0 = new ArrayList<Object>();\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextBooleanValue();\n    Class<Locale> class0 = Locale.class;\n    CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class0, 22);\n    CollectionDeserializer collectionDeserializer0 = new CollectionDeserializer((JavaType) null, coreXMLDeserializers_Std0, (TypeDeserializer) null, jsonLocationInstantiator0, coreXMLDeserializers_Std0, (Boolean) null);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    collectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0, (Collection<Object>) arrayList0);\n    collectionDeserializer0.deserialize((JsonParser) filteringParserDelegate0, (DeserializationContext) defaultDeserializationContext_Impl0, (Collection<Object>) arrayList0);\n}",
    "testName" : "test1516"
  },
  "test2021" : {
    "methodSignature" : "protected final Collection<Object> handleNonArray(JsonParser p, DeserializationContext ctxt, Collection<Object> result) throws IOException",
    "methodName" : "handleNonArray",
    "className" : "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2021() throws Throwable {\n    ArrayList<Object> arrayList0 = new ArrayList<Object>();\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    Class<SettableBeanProperty> class0 = SettableBeanProperty.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    Boolean boolean0 = Boolean.TRUE;\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    byte[] byteArray0 = new byte[0];\n    JsonParser jsonParser0 = jsonFactory0.createParser(byteArray0);\n    Class<InputStream> class1 = InputStream.class;\n    AsExternalTypeDeserializer asExternalTypeDeserializer0 = new AsExternalTypeDeserializer(resolvedRecursiveType0, (TypeIdResolver) null, \"END_ARRAY\", true, class1);\n    CollectionDeserializer collectionDeserializer0 = new CollectionDeserializer(resolvedRecursiveType0, (JsonDeserializer<Object>) null, asExternalTypeDeserializer0, jsonLocationInstantiator0, (JsonDeserializer<Object>) null, boolean0);\n    collectionDeserializer0.handleNonArray(jsonParser0, (DeserializationContext) null, arrayList0);\n}",
    "testName" : "test2021"
  },
  "test000" : {
    "methodSignature" : "public byte[] writeValueAsBytes(Object value) throws JsonProcessingException",
    "methodName" : "writeValueAsBytes",
    "className" : "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    CollectionDeserializer collectionDeserializer0 = new CollectionDeserializer((JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null, jsonLocationInstantiator0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    objectMapper0.writeValueAsBytes(collectionDeserializer0);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    Class<SettableBeanProperty> class0 = SettableBeanProperty.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    CollectionDeserializer collectionDeserializer0 = new CollectionDeserializer(resolvedRecursiveType0, (JsonDeserializer<Object>) null, (TypeDeserializer) null, jsonLocationInstantiator0);\n    CollectionDeserializer collectionDeserializer1 = new CollectionDeserializer(collectionDeserializer0);\n    collectionDeserializer1.isCachable();\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "protected CollectionDeserializer withResolved(JsonDeserializer<?> dd, JsonDeserializer<?> vd, TypeDeserializer vtd)",
    "methodName" : "withResolved",
    "className" : "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    CollectionDeserializer collectionDeserializer0 = new CollectionDeserializer((JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null, (ValueInstantiator) null);\n    CollectionDeserializer collectionDeserializer1 = collectionDeserializer0.withResolved((JsonDeserializer<?>) null, (JsonDeserializer<?>) null, (TypeDeserializer) null);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    Class<SimpleModule> class0 = SimpleModule.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    CollectionDeserializer collectionDeserializer0 = new CollectionDeserializer(resolvedRecursiveType0, (JsonDeserializer<Object>) null, (TypeDeserializer) null, jsonLocationInstantiator0);\n    Boolean boolean0 = Boolean.TRUE;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(resolvedRecursiveType0, typeFactory0);\n    Class<Integer> class1 = Integer.class;\n    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.WRAPPER_OBJECT;\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(resolvedRecursiveType0, classNameIdResolver0, \"0ZtIb{8$scA&Gfjc;5B\", true, class1, jsonTypeInfo_As0);\n    CollectionDeserializer collectionDeserializer1 = collectionDeserializer0.withResolved((JsonDeserializer<?>) null, (JsonDeserializer<?>) null, asPropertyTypeDeserializer0, boolean0);\n    collectionDeserializer1.isCachable();\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Class<Object> class0 = Object.class;\n    TypeBindings typeBindings0 = TypeBindings.create(class0, (JavaType[]) null);\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<RuntimeException> class1 = RuntimeException.class;\n    JavaType javaType0 = typeFactory0.constructReferenceType(class1, resolvedRecursiveType0);\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(resolvedRecursiveType0, typeFactory0);\n    Class<BooleanNode> class2 = BooleanNode.class;\n    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.WRAPPER_OBJECT;\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(javaType0, classNameIdResolver0, \"_ahMC~QJ9{m+JF^PXH\", true, class2, jsonTypeInfo_As0);\n    CollectionDeserializer collectionDeserializer0 = new CollectionDeserializer(resolvedRecursiveType0, (JsonDeserializer<Object>) null, asPropertyTypeDeserializer0, jsonLocationInstantiator0);\n    boolean boolean0 = collectionDeserializer0.isCachable();\n}",
    "testName" : "test088"
  },
  "test1920" : {
    "methodSignature" : "public Collection<Object> deserialize(JsonParser p, DeserializationContext ctxt, Collection<Object> result) throws IOException",
    "methodName" : "deserialize",
    "className" : "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1920() throws Throwable {\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    CollectionDeserializer collectionDeserializer0 = new CollectionDeserializer((JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null, jsonLocationInstantiator0);\n    ArrayList<Object> arrayList0 = new ArrayList<Object>();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    collectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0, (Collection<Object>) arrayList0);\n}",
    "testName" : "test1920"
  },
  "test0910" : {
    "methodSignature" : "public boolean isCachable()",
    "methodName" : "isCachable",
    "className" : "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0910() throws Throwable {\n    Class<InputStream> class0 = InputStream.class;\n    JavaType[] javaTypeArray0 = new JavaType[0];\n    TypeBindings typeBindings0 = TypeBindings.create(class0, javaTypeArray0);\n    Class<RuntimeException> class1 = RuntimeException.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class1, typeBindings0);\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    CollectionDeserializer collectionDeserializer0 = new CollectionDeserializer(resolvedRecursiveType0, (JsonDeserializer<Object>) null, (TypeDeserializer) null, jsonLocationInstantiator0);\n    Boolean boolean0 = Boolean.TRUE;\n    CollectionDeserializer collectionDeserializer1 = collectionDeserializer0.withResolved(collectionDeserializer0, (JsonDeserializer<?>) null, (TypeDeserializer) null, boolean0);\n    boolean boolean1 = collectionDeserializer1.isCachable();\n}",
    "testName" : "test0910"
  },
  "test1819" : {
    "methodSignature" : "public Collection<Object> deserialize(JsonParser p, DeserializationContext ctxt, Collection<Object> result) throws IOException",
    "methodName" : "deserialize",
    "className" : "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1819() throws Throwable {\n    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();\n    ArrayNode arrayNode0 = new ArrayNode((JsonNodeFactory) null);\n    JsonParser jsonParser0 = arrayNode0.traverse();\n    ArrayList<Object> arrayList0 = new ArrayList<Object>();\n    Boolean boolean0 = Boolean.FALSE;\n    CollectionDeserializer collectionDeserializer0 = new CollectionDeserializer((JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null, jsonLocationInstantiator0, (JsonDeserializer<Object>) null, boolean0);\n    collectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) null, (Collection<Object>) arrayList0);\n}",
    "testName" : "test1819"
  }
}