focal_method,test_prefix,docstring
"@Override
public boolean isConcrete() {
    int mod = _class.getModifiers();
    if ((mod & (Modifier.INTERFACE | Modifier.ABSTRACT)) == 0) {
        return true;
    }
    /* 19-Feb-2010, tatus: Holy mackarel; primitive types
         *    have 'abstract' flag set...
         */
    return _class.isPrimitive();
}","public void test00() throws Throwable {
    SubTypeValidator subTypeValidator0 = new SubTypeValidator();
    JavaType javaType0 = TypeFactory.unknownType();
    subTypeValidator0.validateSubType((DeserializationContext) null, javaType0);
    assertTrue(javaType0.isConcrete());
}","/**
 * Convenience method for checking whether underlying Java type
 * is a concrete class or not: abstract classes and interfaces
 * are not.
 */"
"public boolean hasValueHandler() {
    return _valueHandler != null;
}","public void test11() throws Throwable {
    Class<Module> class0 = Module.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    SubTypeValidator subTypeValidator0 = SubTypeValidator.instance();
    subTypeValidator0.validateSubType((DeserializationContext) null, simpleType0);
    assertFalse(simpleType0.hasValueHandler());
}","/**
 * @since 2.6
 */"
