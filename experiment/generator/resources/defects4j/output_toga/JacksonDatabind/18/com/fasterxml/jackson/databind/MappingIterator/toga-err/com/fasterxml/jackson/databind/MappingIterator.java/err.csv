com.fasterxml.jackson.databind.MappingIterator,@Test(timeout = 4000)
public void test022() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    Class<ThaiBuddhistEra> class0 = ThaiBuddhistEra.class;
    ObjectReader objectReader0 = objectMapper0.readerFor(class0);
    ArrayNode arrayNode0 = objectMapper0.createArrayNode();
    JsonParser jsonParser0 = arrayNode0.traverse();
    MappingIterator<String> mappingIterator0 = objectReader0._bindAndReadValues(jsonParser0, (Object) jsonParser0);
    Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
    mappingIterator0.forEachRemaining(consumer0);
    jsonParser0.isClosed();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_18b/src/main/java/com/fasterxml/jackson/core/JsonParser.java
com.fasterxml.jackson.databind.MappingIterator,@Test(timeout = 4000)
public void test023() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    Class<ThaiBuddhistEra> class0 = ThaiBuddhistEra.class;
    ObjectReader objectReader0 = objectMapper0.readerFor(class0);
    ArrayNode arrayNode0 = objectMapper0.createArrayNode();
    JsonParser jsonParser0 = arrayNode0.traverse();
    MappingIterator<String> mappingIterator0 = objectReader0._bindAndReadValues(jsonParser0, (Object) jsonParser0);
    Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
    mappingIterator0.forEachRemaining(consumer0);
    jsonParser0.getCurrentTokenId();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_18b/src/main/java/com/fasterxml/jackson/core/JsonParser.java
com.fasterxml.jackson.databind.MappingIterator,@Test(timeout = 4000)
public void test034() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    Class<ThaiBuddhistEra> class0 = ThaiBuddhistEra.class;
    ObjectReader objectReader0 = objectMapper0.readerFor(class0);
    ArrayNode arrayNode0 = objectMapper0.createArrayNode();
    JsonParser jsonParser0 = arrayNode0.traverse();
    Integer integer0 = new Integer(1);
    MappingIterator<SequenceInputStream> mappingIterator0 = objectReader0._bindAndReadValues(jsonParser0, (Object) integer0);
    mappingIterator0.readAll();
    jsonParser0.isClosed();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_18b/src/main/java/com/fasterxml/jackson/core/JsonParser.java
com.fasterxml.jackson.databind.MappingIterator,@Test(timeout = 4000)
public void test045() throws Throwable {
    Vector<Object> vector0 = new Vector<Object>();
    ObjectMapper objectMapper0 = new ObjectMapper();
    JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);
    char[] charArray0 = new char[2];
    charArray0[0] = '\""';
    JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);
    Class<InputStream> class0 = InputStream.class;
    ObjectReader objectReader0 = objectMapper0.readerFor(class0);
    MappingIterator<String> mappingIterator0 = objectReader0._bindAndReadValues(jsonParser0, (Object) vector0);
    JsonParser jsonParser1 = mappingIterator0.getParser();
    jsonParser1.isExpectedStartArrayToken();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_18b/src/main/java/com/fasterxml/jackson/core/JsonParser.java
com.fasterxml.jackson.databind.MappingIterator,@Test(timeout = 4000)
public void test1011() throws Throwable {
    MappingIterator<InputStream> mappingIterator0 = new MappingIterator<InputStream>((JavaType) null, (JsonParser) null, (DeserializationContext) null, (JsonDeserializer<?>) null, true, (Object) null);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_18b/src/main/java/com/fasterxml/jackson/databind/MappingIterator<java/io/InputStream>.java
com.fasterxml.jackson.databind.MappingIterator,@Test(timeout = 4000)
public void test1314() throws Throwable {
    MappingIterator<ThaiBuddhistEra> mappingIterator0 = MappingIterator.emptyIterator();
    Vector<Object> vector0 = new Vector<Object>();
    List<Object> list0 = mappingIterator0.readAll((List<Object>) vector0);
    list0.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_18b/src/main/java/java/util/List.java
com.fasterxml.jackson.databind.MappingIterator,@Test(timeout = 4000)
public void test1415() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);
    char[] charArray0 = new char[2];
    charArray0[0] = '\""';
    JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);
    Class<InputStream> class0 = InputStream.class;
    ObjectReader objectReader0 = objectMapper0.readerFor(class0);
    MappingIterator<String> mappingIterator0 = objectReader0._bindAndReadValues(jsonParser0, (Object) null);
    mappingIterator0.hasNextValue();
    Vector<String> vector0 = new Vector<String>();
    mappingIterator0.readAll((List<String>) vector0);
},ERROR,com.github.javaparser.resolution.MethodAmbiguityException,Ambiguous method call: cannot find a most applicable method: ReflectionMethodDeclaration{method=public java.util.Collection com.fasterxml.jackson.databind.MappingIterator.readAll(java.util.Collection) throws java.io.IOException}, ReflectionMethodDeclaration{method=public java.util.List com.fasterxml.jackson.databind.MappingIterator.readAll(java.util.List) throws java.io.IOException}
com.fasterxml.jackson.databind.MappingIterator,@Test(timeout = 4000)
public void test1516() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);
    char[] charArray0 = new char[2];
    charArray0[0] = '\""';
    charArray0[1] = '\""';
    JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);
    LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
    Class<Boolean> class0 = Boolean.class;
    MappingIterator<Boolean> mappingIterator0 = objectMapper0.readValues(jsonParser0, class0);
    mappingIterator0.readAll((List<Boolean>) linkedList0);
    linkedList0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_18b/src/main/java/java/util/LinkedList.java
com.fasterxml.jackson.databind.MappingIterator,@Test(timeout = 4000)
public void test1517() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);
    char[] charArray0 = new char[2];
    charArray0[0] = '\""';
    charArray0[1] = '\""';
    JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);
    LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
    Class<Boolean> class0 = Boolean.class;
    MappingIterator<Boolean> mappingIterator0 = objectMapper0.readValues(jsonParser0, class0);
    mappingIterator0.readAll((List<Boolean>) linkedList0);
    jsonParser0.getCurrentTokenId();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_18b/src/main/java/com/fasterxml/jackson/core/JsonParser.java
com.fasterxml.jackson.databind.MappingIterator,@Test(timeout = 4000)
public void test1719() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.withExactBigDecimals(false);
    ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0);
    JsonParser jsonParser0 = objectMapper0.treeAsTokens(objectNode0);
    Class<Integer> class0 = Integer.class;
    MappingIterator<Integer> mappingIterator0 = objectMapper0.readValues(jsonParser0, class0);
    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
    mappingIterator0.readAll((List<Integer>) linkedList0);
},ERROR,com.github.javaparser.resolution.MethodAmbiguityException,Ambiguous method call: cannot find a most applicable method: ReflectionMethodDeclaration{method=public java.util.Collection com.fasterxml.jackson.databind.MappingIterator.readAll(java.util.Collection) throws java.io.IOException}, ReflectionMethodDeclaration{method=public java.util.List com.fasterxml.jackson.databind.MappingIterator.readAll(java.util.List) throws java.io.IOException}
