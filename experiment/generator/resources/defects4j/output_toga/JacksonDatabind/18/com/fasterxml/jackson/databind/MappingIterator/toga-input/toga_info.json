{
  "test1213" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "com.fasterxml.jackson.databind.MappingIterator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1213() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);\n    char[] charArray0 = new char[2];\n    JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<Map> class0 = Map.class;\n    MapType mapType0 = typeFactory0.constructRawMapType(class0);\n    MappingIterator<POJONode> mappingIterator0 = objectMapper0.readValues(jsonParser0, (ResolvedType) mapType0);\n    mappingIterator0.close();\n}",
    "testName" : "test1213"
  },
  "test1112" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "com.fasterxml.jackson.databind.MappingIterator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1112() throws Throwable {\n    MappingIterator<SequenceInputStream> mappingIterator0 = MappingIterator.emptyIterator();\n    mappingIterator0.close();\n}",
    "testName" : "test1112"
  },
  "test000" : {
    "methodSignature" : "public T next()",
    "methodName" : "next",
    "className" : "com.fasterxml.jackson.databind.MappingIterator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.withExactBigDecimals(false);\n    ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);\n    RawValue rawValue0 = new RawValue(arrayNode0);\n    ValueNode valueNode0 = arrayNode0.rawValueNode(rawValue0);\n    JsonParser jsonParser0 = objectMapper0.treeAsTokens(valueNode0);\n    MappingIterator<List<SettableBeanProperty>> mappingIterator0 = new MappingIterator<List<SettableBeanProperty>>((JavaType) null, jsonParser0, (DeserializationContext) null, (JsonDeserializer<?>) null, false, rawValue0);\n    mappingIterator0.next();\n}",
    "testName" : "test000"
  },
  "test011" : {
    "methodSignature" : "protected <R> R _handleIOException(IOException e)",
    "methodName" : "_handleIOException",
    "className" : "com.fasterxml.jackson.databind.MappingIterator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    MappingIterator<InputStream> mappingIterator0 = MappingIterator.emptyIterator();\n    mappingIterator0._handleIOException((IOException) null);\n}",
    "testName" : "test011"
  },
  "test056" : {
    "methodSignature" : "public JsonLocation getCurrentLocation()",
    "methodName" : "getCurrentLocation",
    "className" : "com.fasterxml.jackson.databind.MappingIterator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056() throws Throwable {\n    MappingIterator<SequenceInputStream> mappingIterator0 = MappingIterator.emptyIterator();\n    mappingIterator0.getCurrentLocation();\n}",
    "testName" : "test056"
  },
  "test067" : {
    "methodSignature" : "public void remove()",
    "methodName" : "remove",
    "className" : "com.fasterxml.jackson.databind.MappingIterator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067() throws Throwable {\n    MappingIterator<SequenceInputStream> mappingIterator0 = MappingIterator.emptyIterator();\n    mappingIterator0.remove();\n}",
    "testName" : "test067"
  },
  "test078" : {
    "methodSignature" : "public FormatSchema getParserSchema()",
    "methodName" : "getParserSchema",
    "className" : "com.fasterxml.jackson.databind.MappingIterator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<String> class0 = String.class;\n    ObjectReader objectReader0 = objectMapper0.readerFor(class0);\n    MappingIterator<InputStream> mappingIterator0 = objectReader0.readValues(\"\");\n    FormatSchema formatSchema0 = mappingIterator0.getParserSchema();\n}",
    "testName" : "test078"
  },
  "test089" : {
    "methodSignature" : "public T nextValue() throws IOException",
    "methodName" : "nextValue",
    "className" : "com.fasterxml.jackson.databind.MappingIterator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089() throws Throwable {\n    MappingIterator<SequenceInputStream> mappingIterator0 = MappingIterator.emptyIterator();\n    mappingIterator0.nextValue();\n}",
    "testName" : "test089"
  },
  "test1618" : {
    "methodSignature" : "public T nextValue() throws IOException",
    "methodName" : "nextValue",
    "className" : "com.fasterxml.jackson.databind.MappingIterator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1618() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<SequenceInputStream> class0 = SequenceInputStream.class;\n    MappingIterator<SequenceInputStream> mappingIterator0 = objectMapper0.readValues((JsonParser) null, class0);\n    mappingIterator0.nextValue();\n}",
    "testName" : "test1618"
  },
  "test0910" : {
    "methodSignature" : "protected <R> R _handleMappingException(JsonMappingException e)",
    "methodName" : "_handleMappingException",
    "className" : "com.fasterxml.jackson.databind.MappingIterator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0910() throws Throwable {\n    Vector<Object> vector0 = new Vector<Object>();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);\n    char[] charArray0 = new char[2];\n    charArray0[0] = '\\\"';\n    JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);\n    Class<InputStream> class0 = InputStream.class;\n    ObjectReader objectReader0 = objectMapper0.readerFor(class0);\n    MappingIterator<String> mappingIterator0 = objectReader0._bindAndReadValues(jsonParser0, (Object) vector0);\n    mappingIterator0._handleMappingException((JsonMappingException) null);\n}",
    "testName" : "test0910"
  }
}