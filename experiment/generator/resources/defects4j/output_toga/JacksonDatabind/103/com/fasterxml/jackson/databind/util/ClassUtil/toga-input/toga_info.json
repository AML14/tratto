{
  "test07681" : {
    "methodSignature" : "public static Object defaultValue(Class<?> cls)",
    "methodName" : "defaultValue",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07681() throws Throwable {\n    Class<Short> class0 = Short.class;\n    ClassUtil.defaultValue(class0);\n}",
    "testName" : "test07681"
  },
  "test08691" : {
    "methodSignature" : "public static Class<?> primitiveType(Class<?> type)",
    "methodName" : "primitiveType",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08691() throws Throwable {\n    Class<JsonMappingException> class0 = JsonMappingException.class;\n    Class<?> class1 = ClassUtil.primitiveType(class0);\n}",
    "testName" : "test08691"
  },
  "test0000" : {
    "methodSignature" : "public static void checkAndFixAccess(Member member)",
    "methodName" : "checkAndFixAccess",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    ClassUtil.checkAndFixAccess((Member) null);\n}",
    "testName" : "test0000"
  },
  "test0044" : {
    "methodSignature" : "public static void closeOnFailAndThrowAsIOE(JsonGenerator g, Exception fail) throws IOException",
    "methodName" : "closeOnFailAndThrowAsIOE",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0044() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, (-1514));\n    DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayBuilder0);\n    JsonEncoding jsonEncoding0 = JsonEncoding.UTF16_BE;\n    JsonGenerator jsonGenerator0 = jsonFactory0.createGenerator((DataOutput) dataOutputStream0, jsonEncoding0);\n    BatchUpdateException batchUpdateException0 = new BatchUpdateException();\n    ClassUtil.closeOnFailAndThrowAsIOE(jsonGenerator0, (Exception) batchUpdateException0);\n}",
    "testName" : "test0044"
  },
  "test0088" : {
    "methodSignature" : "public static Throwable throwRootCauseIfIOE(Throwable t) throws IOException",
    "methodName" : "throwRootCauseIfIOE",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0088() throws Throwable {\n    SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException(\"2p#.X}#J)j )G\");\n    Throwable throwable0 = ClassUtil.throwRootCauseIfIOE(sQLIntegrityConstraintViolationException0);\n}",
    "testName" : "test0088"
  },
  "test05862" : {
    "methodSignature" : "public static String getClassDescription(Object classOrInstance)",
    "methodName" : "getClassDescription",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05862() throws Throwable {\n    Class<AccessPattern> class0 = AccessPattern.class;\n    String string0 = ClassUtil.getClassDescription(class0);\n}",
    "testName" : "test05862"
  },
  "test03640" : {
    "methodSignature" : "public static boolean hasClass(Object inst, Class<?> raw)",
    "methodName" : "hasClass",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03640() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<ArrayType> class0 = ArrayType.class;\n    ArrayType arrayType0 = typeFactory0.constructArrayType(class0);\n    boolean boolean0 = ClassUtil.hasClass(arrayType0, class0);\n}",
    "testName" : "test03640"
  },
  "test06873" : {
    "methodSignature" : "public static Object defaultValue(Class<?> cls)",
    "methodName" : "defaultValue",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06873() throws Throwable {\n    Class<Double> class0 = Double.TYPE;\n    Object object0 = ClassUtil.defaultValue(class0);\n}",
    "testName" : "test06873"
  },
  "test05660" : {
    "methodSignature" : "public static String nonNullString(String str)",
    "methodName" : "nonNullString",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05660() throws Throwable {\n    String string0 = ClassUtil.nonNullString((String) null);\n}",
    "testName" : "test05660"
  },
  "test06671" : {
    "methodSignature" : "public static String nameOf(Named named)",
    "methodName" : "nameOf",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06671() throws Throwable {\n    String string0 = ClassUtil.nameOf((Named) null);\n}",
    "testName" : "test06671"
  },
  "test08893" : {
    "methodSignature" : "public static Class<?> primitiveType(Class<?> type)",
    "methodName" : "primitiveType",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08893() throws Throwable {\n    Class<Integer> class0 = Integer.class;\n    Class<?> class1 = ClassUtil.primitiveType(class0);\n}",
    "testName" : "test08893"
  },
  "test04650" : {
    "methodSignature" : "public static <T> T createInstance(Class<T> cls, boolean canFixAccess) throws IllegalArgumentException",
    "methodName" : "createInstance",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04650() throws Throwable {\n    Class<Object> class0 = Object.class;\n    Object object0 = ClassUtil.createInstance(class0, false);\n}",
    "testName" : "test04650"
  },
  "test104117" : {
    "methodSignature" : "public static boolean isJacksonStdImpl(Object impl)",
    "methodName" : "isJacksonStdImpl",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104117() throws Throwable {\n    boolean boolean0 = ClassUtil.isJacksonStdImpl((Object) null);\n}",
    "testName" : "test104117"
  },
  "test03438" : {
    "methodSignature" : "public static String isLocalType(Class<?> type, boolean allowNonStatic)",
    "methodName" : "isLocalType",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03438() throws Throwable {\n    Class<Void> class0 = Void.TYPE;\n    String string0 = ClassUtil.isLocalType(class0, true);\n}",
    "testName" : "test03438"
  },
  "test02224" : {
    "methodSignature" : "public static String canBeABeanType(Class<?> type)",
    "methodName" : "canBeABeanType",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02224() throws Throwable {\n    Class<Integer> class0 = Integer.TYPE;\n    String string0 = ClassUtil.canBeABeanType(class0);\n}",
    "testName" : "test02224"
  },
  "test110123" : {
    "methodSignature" : "public static Class<?> getDeclaringClass(Class<?> cls)",
    "methodName" : "getDeclaringClass",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110123() throws Throwable {\n    Class<Object> class0 = Object.class;\n    Class<?> class1 = ClassUtil.getDeclaringClass(class0);\n}",
    "testName" : "test110123"
  },
  "test03236" : {
    "methodSignature" : "public static boolean isBogusClass(Class<?> cls)",
    "methodName" : "isBogusClass",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03236() throws Throwable {\n    Class<NoClass> class0 = NoClass.class;\n    boolean boolean0 = ClassUtil.isBogusClass(class0);\n}",
    "testName" : "test03236"
  },
  "test109122" : {
    "methodSignature" : "public static Class<?> getDeclaringClass(Class<?> cls)",
    "methodName" : "getDeclaringClass",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109122() throws Throwable {\n    Class<CollectionType> class0 = CollectionType.class;\n    Class<?> class1 = ClassUtil.getDeclaringClass(class0);\n}",
    "testName" : "test109122"
  },
  "test05458" : {
    "methodSignature" : "public static String nullOrToString(Object value)",
    "methodName" : "nullOrToString",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05458() throws Throwable {\n    Class<Float> class0 = Float.class;\n    String string0 = ClassUtil.nullOrToString(class0);\n}",
    "testName" : "test05458"
  },
  "test02427" : {
    "methodSignature" : "public static Class<?> getOuterClass(Class<?> type)",
    "methodName" : "getOuterClass",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02427() throws Throwable {\n    Class<AccessPattern> class0 = AccessPattern.class;\n    Class<?> class1 = ClassUtil.getOuterClass(class0);\n}",
    "testName" : "test02427"
  },
  "test04448" : {
    "methodSignature" : "public static <T> T throwAsMappingException(DeserializationContext ctxt, IOException e0) throws JsonMappingException",
    "methodName" : "throwAsMappingException",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04448() throws Throwable {\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    JsonMappingException jsonMappingException0 = JsonMappingException.from((SerializerProvider) defaultSerializerProvider_Impl0, \"#)63]v9\");\n    ClassUtil.throwAsMappingException((DeserializationContext) defaultDeserializationContext_Impl0, (IOException) jsonMappingException0);\n}",
    "testName" : "test04448"
  },
  "test093104" : {
    "methodSignature" : "public static Class<?> primitiveType(Class<?> type)",
    "methodName" : "primitiveType",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093104() throws Throwable {\n    Class<Byte> class0 = Byte.class;\n    Class<?> class1 = ClassUtil.primitiveType(class0);\n}",
    "testName" : "test093104"
  },
  "test07075" : {
    "methodSignature" : "public static Object defaultValue(Class<?> cls)",
    "methodName" : "defaultValue",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07075() throws Throwable {\n    Class<Long> class0 = Long.TYPE;\n    Object object0 = ClassUtil.defaultValue(class0);\n}",
    "testName" : "test07075"
  },
  "test06064" : {
    "methodSignature" : "public static String getClassDescription(Object classOrInstance)",
    "methodName" : "getClassDescription",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06064() throws Throwable {\n    MockError mockError0 = new MockError();\n    String string0 = ClassUtil.getClassDescription(mockError0);\n}",
    "testName" : "test06064"
  },
  "test09097" : {
    "methodSignature" : "public static Class<?> primitiveType(Class<?> type)",
    "methodName" : "primitiveType",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09097() throws Throwable {\n    Class<Boolean> class0 = Boolean.class;\n    Class<?> class1 = ClassUtil.primitiveType(class0);\n}",
    "testName" : "test09097"
  },
  "test0011" : {
    "methodSignature" : "public static void unwrapAndThrowAsIAE(Throwable t)",
    "methodName" : "unwrapAndThrowAsIAE",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException();\n    ClassUtil.unwrapAndThrowAsIAE((Throwable) sQLNonTransientConnectionException0);\n}",
    "testName" : "test0011"
  },
  "test0055" : {
    "methodSignature" : "public static String quotedOr(Object str, String forNull)",
    "methodName" : "quotedOr",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0055() throws Throwable {\n    ClassUtil classUtil0 = new ClassUtil();\n    String string0 = ClassUtil.quotedOr(classUtil0, \"4?7+a&bK'Z;A]vg~V[2\");\n}",
    "testName" : "test0055"
  },
  "test0099" : {
    "methodSignature" : "public static <T> Constructor<T> findConstructor(Class<T> cls, boolean forceAccess) throws IllegalArgumentException",
    "methodName" : "findConstructor",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0099() throws Throwable {\n    Class<Error> class0 = Error.class;\n    Constructor<Error> constructor0 = ClassUtil.findConstructor(class0, true);\n}",
    "testName" : "test0099"
  },
  "test02021" : {
    "methodSignature" : "public ObjectReader readerFor(JavaType type)",
    "methodName" : "readerFor",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02021() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(129);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.readerFor((JavaType) placeholderForType0);\n}",
    "testName" : "test02021"
  },
  "test03034" : {
    "methodSignature" : "public static boolean isBogusClass(Class<?> cls)",
    "methodName" : "isBogusClass",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03034() throws Throwable {\n    Class<Void> class0 = Void.class;\n    boolean boolean0 = ClassUtil.isBogusClass(class0);\n}",
    "testName" : "test03034"
  },
  "test07479" : {
    "methodSignature" : "public static Object defaultValue(Class<?> cls)",
    "methodName" : "defaultValue",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07479() throws Throwable {\n    Class<Byte> class0 = Byte.TYPE;\n    Object object0 = ClassUtil.defaultValue(class0);\n}",
    "testName" : "test07479"
  },
  "test05256" : {
    "methodSignature" : "public static <T> T nonNull(T valueOrNull, T defaultValue)",
    "methodName" : "nonNull",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05256() throws Throwable {\n    SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException(\"Wkk6Gf!BNw|Wa\", \"Wkk6Gf!BNw|Wa\");\n    MockRuntimeException mockRuntimeException0 = new MockRuntimeException(sQLFeatureNotSupportedException0);\n    RuntimeException runtimeException0 = ClassUtil.nonNull((RuntimeException) mockRuntimeException0, (RuntimeException) mockRuntimeException0);\n}",
    "testName" : "test05256"
  },
  "test04246" : {
    "methodSignature" : "public static Throwable getRootCause(Throwable t)",
    "methodName" : "getRootCause",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04246() throws Throwable {\n    SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException();\n    SQLDataException sQLDataException0 = new SQLDataException(sQLTransactionRollbackException0);\n    Throwable throwable0 = ClassUtil.getRootCause(sQLDataException0);\n}",
    "testName" : "test04246"
  },
  "test07277" : {
    "methodSignature" : "public static Object defaultValue(Class<?> cls)",
    "methodName" : "defaultValue",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07277() throws Throwable {\n    Class<Character> class0 = Character.TYPE;\n    Object object0 = ClassUtil.defaultValue(class0);\n}",
    "testName" : "test07277"
  },
  "test04044" : {
    "methodSignature" : "public static void throwAsIAE(Throwable t, String msg)",
    "methodName" : "throwAsIAE",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04044() throws Throwable {\n    SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException();\n    MockError mockError0 = new MockError(sQLInvalidAuthorizationSpecException0);\n    ClassUtil.throwAsIAE((Throwable) mockError0, \"NyLL\");\n}",
    "testName" : "test04044"
  },
  "test06266" : {
    "methodSignature" : "public static String classNameOf(Object inst)",
    "methodName" : "classNameOf",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06266() throws Throwable {\n    String string0 = ClassUtil.classNameOf((Object) null);\n}",
    "testName" : "test06266"
  },
  "test02730" : {
    "methodSignature" : "public static boolean isConcrete(Member member)",
    "methodName" : "isConcrete",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02730() throws Throwable {\n    Class<AccessibleObject> class0 = AccessibleObject.class;\n    Constructor<AccessibleObject> constructor0 = ClassUtil.findConstructor(class0, true);\n    ClassUtil.Ctor classUtil_Ctor0 = new ClassUtil.Ctor(constructor0);\n    boolean boolean0 = ClassUtil.isConcrete((Member) classUtil_Ctor0._ctor);\n}",
    "testName" : "test02730"
  },
  "test108121" : {
    "methodSignature" : "public static Ctor[] getConstructors(Class<?> cls)",
    "methodName" : "getConstructors",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108121() throws Throwable {\n    Class<Integer> class0 = Integer.TYPE;\n    ClassUtil.Ctor[] classUtil_CtorArray0 = ClassUtil.getConstructors(class0);\n}",
    "testName" : "test108121"
  },
  "test04953" : {
    "methodSignature" : "public static Class<?> classOf(Object inst)",
    "methodName" : "classOf",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04953() throws Throwable {\n    Class<?> class0 = ClassUtil.classOf((Object) null);\n}",
    "testName" : "test04953"
  },
  "test02933" : {
    "methodSignature" : "public static boolean isCollectionMapOrArray(Class<?> type)",
    "methodName" : "isCollectionMapOrArray",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02933() throws Throwable {\n    Class<IOException> class0 = IOException.class;\n    boolean boolean0 = ClassUtil.isCollectionMapOrArray(class0);\n}",
    "testName" : "test02933"
  },
  "test03943" : {
    "methodSignature" : "public static void verifyMustOverride(Class<?> expType, Object instance, String method)",
    "methodName" : "verifyMustOverride",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03943() throws Throwable {\n    Class<Float> class0 = Float.class;\n    SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException();\n    MockRuntimeException mockRuntimeException0 = new MockRuntimeException(sQLTransactionRollbackException0);\n    ClassUtil.verifyMustOverride(class0, mockRuntimeException0, (String) null);\n}",
    "testName" : "test03943"
  },
  "test094106" : {
    "methodSignature" : "public static Class<?> primitiveType(Class<?> type)",
    "methodName" : "primitiveType",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094106() throws Throwable {\n    Class<Short> class0 = Short.class;\n    Class<?> class1 = ClassUtil.primitiveType(class0);\n}",
    "testName" : "test094106"
  },
  "test111124" : {
    "methodSignature" : "public static Class<?> getOuterClass(Class<?> type)",
    "methodName" : "getOuterClass",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111124() throws Throwable {\n    Class<Object> class0 = Object.class;\n    Class<?> class1 = ClassUtil.getOuterClass(class0);\n}",
    "testName" : "test111124"
  },
  "test07580" : {
    "methodSignature" : "public static Object defaultValue(Class<?> cls)",
    "methodName" : "defaultValue",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07580() throws Throwable {\n    Class<Short> class0 = Short.TYPE;\n    Object object0 = ClassUtil.defaultValue(class0);\n}",
    "testName" : "test07580"
  },
  "test06570" : {
    "methodSignature" : "public static String nameOf(Named named)",
    "methodName" : "nameOf",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06570() throws Throwable {\n    Class<AccessibleObject> class0 = AccessibleObject.class;\n    Constructor<AccessibleObject> constructor0 = ClassUtil.findConstructor(class0, true);\n    ClassUtil.Ctor classUtil_Ctor0 = new ClassUtil.Ctor(constructor0);\n    PropertyName propertyName0 = PropertyName.USE_DEFAULT;\n    PlaceholderForType placeholderForType0 = new PlaceholderForType((-10));\n    ArrayType arrayType0 = ArrayType.construct((JavaType) placeholderForType0, (TypeBindings) null, (Object) classUtil_Ctor0, (Object) class0);\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.upgradeFrom(arrayType0, placeholderForType0);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    TypeResolutionContext.Basic typeResolutionContext_Basic0 = new TypeResolutionContext.Basic(typeFactory0, (TypeBindings) null);\n    Class<Object> class1 = Object.class;\n    VirtualAnnotatedMember virtualAnnotatedMember0 = new VirtualAnnotatedMember(typeResolutionContext_Basic0, class1, \"org.hibernate.proxy.java.lang.reflect.AccessibleObject\", arrayType0);\n    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;\n    BeanProperty.Std beanProperty_Std0 = new BeanProperty.Std(propertyName0, collectionLikeType0, propertyName0, virtualAnnotatedMember0, propertyMetadata0);\n    String string0 = ClassUtil.nameOf((Named) beanProperty_Std0);\n}",
    "testName" : "test06570"
  },
  "test08590" : {
    "methodSignature" : "public static Class<?> wrapperType(Class<?> primitiveType)",
    "methodName" : "wrapperType",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08590() throws Throwable {\n    Class<NoClass> class0 = NoClass.class;\n    ClassUtil.wrapperType(class0);\n}",
    "testName" : "test08590"
  },
  "test106119" : {
    "methodSignature" : "public static String getPackageName(Class<?> cls)",
    "methodName" : "getPackageName",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106119() throws Throwable {\n    Class<Character> class0 = Character.TYPE;\n    String string0 = ClassUtil.getPackageName(class0);\n}",
    "testName" : "test106119"
  },
  "test04751" : {
    "methodSignature" : "public static <T> T createInstance(Class<T> cls, boolean canFixAccess) throws IllegalArgumentException",
    "methodName" : "createInstance",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04751() throws Throwable {\n    Class<ArrayType> class0 = ArrayType.class;\n    ClassUtil.createInstance(class0, false);\n}",
    "testName" : "test04751"
  },
  "test05963" : {
    "methodSignature" : "public static String getClassDescription(Object classOrInstance)",
    "methodName" : "getClassDescription",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05963() throws Throwable {\n    String string0 = ClassUtil.getClassDescription((Object) null);\n}",
    "testName" : "test05963"
  },
  "test08996" : {
    "methodSignature" : "public static Class<?> primitiveType(Class<?> type)",
    "methodName" : "primitiveType",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08996() throws Throwable {\n    Class<Long> class0 = Long.class;\n    Class<?> class1 = ClassUtil.primitiveType(class0);\n}",
    "testName" : "test08996"
  },
  "test03741" : {
    "methodSignature" : "public static boolean hasClass(Object inst, Class<?> raw)",
    "methodName" : "hasClass",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03741() throws Throwable {\n    Class<Object> class0 = Object.class;\n    boolean boolean0 = ClassUtil.hasClass(class0, class0);\n}",
    "testName" : "test03741"
  },
  "test06974" : {
    "methodSignature" : "public static Object defaultValue(Class<?> cls)",
    "methodName" : "defaultValue",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06974() throws Throwable {\n    Class<Integer> class0 = Integer.TYPE;\n    Object object0 = ClassUtil.defaultValue(class0);\n}",
    "testName" : "test06974"
  },
  "test05761" : {
    "methodSignature" : "public static String quotedOr(Object str, String forNull)",
    "methodName" : "quotedOr",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05761() throws Throwable {\n    String string0 = ClassUtil.quotedOr((Object) null, \"3qrS?IGt\");\n}",
    "testName" : "test05761"
  },
  "test06772" : {
    "methodSignature" : "public static String backticked(String text)",
    "methodName" : "backticked",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06772() throws Throwable {\n    String string0 = ClassUtil.backticked((String) null);\n}",
    "testName" : "test06772"
  },
  "test02326" : {
    "methodSignature" : "public static String isLocalType(Class<?> type, boolean allowNonStatic)",
    "methodName" : "isLocalType",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02326() throws Throwable {\n    Class<PlaceholderForType> class0 = PlaceholderForType.class;\n    String string0 = ClassUtil.isLocalType(class0, false);\n}",
    "testName" : "test02326"
  },
  "test04549" : {
    "methodSignature" : "public static void closeOnFailAndThrowAsIOE(JsonGenerator g, Closeable toClose, Exception fail) throws IOException",
    "methodName" : "closeOnFailAndThrowAsIOE",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04549() throws Throwable {\n    SQLSyntaxErrorException sQLSyntaxErrorException0 = new SQLSyntaxErrorException(\"elementType\");\n    ClassUtil.closeOnFailAndThrowAsIOE((JsonGenerator) null, (Closeable) null, (Exception) sQLSyntaxErrorException0);\n}",
    "testName" : "test04549"
  },
  "test03539" : {
    "methodSignature" : "public static boolean hasClass(Object inst, Class<?> raw)",
    "methodName" : "hasClass",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03539() throws Throwable {\n    Class<Object> class0 = Object.class;\n    boolean boolean0 = ClassUtil.hasClass((Object) null, class0);\n}",
    "testName" : "test03539"
  },
  "test04347" : {
    "methodSignature" : "public static <T> T throwAsMappingException(DeserializationContext ctxt, IOException e0) throws JsonMappingException",
    "methodName" : "throwAsMappingException",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04347() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    MockIOException mockIOException0 = new MockIOException(\"xY3uryV\");\n    ClassUtil.throwAsMappingException((DeserializationContext) defaultDeserializationContext_Impl0, (IOException) mockIOException0);\n}",
    "testName" : "test04347"
  },
  "test107120" : {
    "methodSignature" : "public static Ctor[] getConstructors(Class<?> cls)",
    "methodName" : "getConstructors",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107120() throws Throwable {\n    Class<Annotation> class0 = Annotation.class;\n    ClassUtil.Ctor[] classUtil_CtorArray0 = ClassUtil.getConstructors(class0);\n}",
    "testName" : "test107120"
  },
  "test03337" : {
    "methodSignature" : "public static boolean isBogusClass(Class<?> cls)",
    "methodName" : "isBogusClass",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03337() throws Throwable {\n    Class<JsonMappingException> class0 = JsonMappingException.class;\n    boolean boolean0 = ClassUtil.isBogusClass(class0);\n}",
    "testName" : "test03337"
  },
  "test05559" : {
    "methodSignature" : "public static String nullOrToString(Object value)",
    "methodName" : "nullOrToString",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05559() throws Throwable {\n    String string0 = ClassUtil.nullOrToString((Object) null);\n}",
    "testName" : "test05559"
  },
  "test095108" : {
    "methodSignature" : "public static Class<?> primitiveType(Class<?> type)",
    "methodName" : "primitiveType",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095108() throws Throwable {\n    Class<Character> class0 = Character.class;\n    Class<?> class1 = ClassUtil.primitiveType(class0);\n}",
    "testName" : "test095108"
  },
  "test09199" : {
    "methodSignature" : "public static Class<?> primitiveType(Class<?> type)",
    "methodName" : "primitiveType",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09199() throws Throwable {\n    Class<Double> class0 = Double.class;\n    Class<?> class1 = ClassUtil.primitiveType(class0);\n}",
    "testName" : "test09199"
  },
  "test07176" : {
    "methodSignature" : "public static Object defaultValue(Class<?> cls)",
    "methodName" : "defaultValue",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07176() throws Throwable {\n    Class<Boolean> class0 = Boolean.TYPE;\n    Object object0 = ClassUtil.defaultValue(class0);\n}",
    "testName" : "test07176"
  },
  "test0077" : {
    "methodSignature" : "public static <T> Constructor<T> findConstructor(Class<T> cls, boolean forceAccess) throws IllegalArgumentException",
    "methodName" : "findConstructor",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0077() throws Throwable {\n    Class<AccessibleObject> class0 = AccessibleObject.class;\n    ClassUtil.findConstructor(class0, false);\n}",
    "testName" : "test0077"
  },
  "test04145" : {
    "methodSignature" : "public static void closeOnFailAndThrowAsIOE(JsonGenerator g, Closeable toClose, Exception fail) throws IOException",
    "methodName" : "closeOnFailAndThrowAsIOE",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04145() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    MockFileWriter mockFileWriter0 = new MockFileWriter(\"java.lang.Class@0000000001\", true);\n    JsonGenerator jsonGenerator0 = jsonFactory0.createGenerator((Writer) mockFileWriter0);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    Class<Boolean> class0 = Boolean.class;\n    JsonMappingException jsonMappingException0 = defaultDeserializationContext_Impl0.weirdKeyException(class0, \"JSON\", \"0dWyN22u\");\n    ClassUtil.closeOnFailAndThrowAsIOE(jsonGenerator0, (Closeable) jsonGenerator0, (Exception) jsonMappingException0);\n}",
    "testName" : "test04145"
  },
  "test06367" : {
    "methodSignature" : "public static String nameOf(Class<?> cls)",
    "methodName" : "nameOf",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06367() throws Throwable {\n    String string0 = ClassUtil.nameOf((Class<?>) null);\n}",
    "testName" : "test06367"
  },
  "test03135" : {
    "methodSignature" : "public static boolean isBogusClass(Class<?> cls)",
    "methodName" : "isBogusClass",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03135() throws Throwable {\n    Class<Void> class0 = Void.TYPE;\n    boolean boolean0 = ClassUtil.isBogusClass(class0);\n}",
    "testName" : "test03135"
  },
  "test05357" : {
    "methodSignature" : "public static <T> T nonNull(T valueOrNull, T defaultValue)",
    "methodName" : "nonNull",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05357() throws Throwable {\n    Character character0 = Character.valueOf('&');\n    Character character1 = ClassUtil.nonNull((Character) null, character0);\n}",
    "testName" : "test05357"
  },
  "test06165" : {
    "methodSignature" : "public static String classNameOf(Object inst)",
    "methodName" : "classNameOf",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06165() throws Throwable {\n    Class<Float> class0 = Float.class;\n    String string0 = ClassUtil.classNameOf(class0);\n}",
    "testName" : "test06165"
  },
  "test02122" : {
    "methodSignature" : "public static String canBeABeanType(Class<?> type)",
    "methodName" : "canBeABeanType",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02122() throws Throwable {\n    Class<ClientInfoStatus> class0 = ClientInfoStatus.class;\n    String string0 = ClassUtil.canBeABeanType(class0);\n}",
    "testName" : "test02122"
  },
  "test07378" : {
    "methodSignature" : "public static Object defaultValue(Class<?> cls)",
    "methodName" : "defaultValue",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07378() throws Throwable {\n    Class<Float> class0 = Float.TYPE;\n    Object object0 = ClassUtil.defaultValue(class0);\n}",
    "testName" : "test07378"
  },
  "test05155" : {
    "methodSignature" : "public static Class<?> rawClass(JavaType t)",
    "methodName" : "rawClass",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05155() throws Throwable {\n    Class<?> class0 = ClassUtil.rawClass((JavaType) null);\n}",
    "testName" : "test05155"
  },
  "test105118" : {
    "methodSignature" : "public static boolean isJacksonStdImpl(Object impl)",
    "methodName" : "isJacksonStdImpl",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105118() throws Throwable {\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(129);\n    boolean boolean0 = ClassUtil.isJacksonStdImpl((Object) placeholderForType0);\n}",
    "testName" : "test105118"
  },
  "test02832" : {
    "methodSignature" : "public static boolean isCollectionMapOrArray(Class<?> type)",
    "methodName" : "isCollectionMapOrArray",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02832() throws Throwable {\n    Class<List> class0 = List.class;\n    boolean boolean0 = ClassUtil.isCollectionMapOrArray(class0);\n}",
    "testName" : "test02832"
  },
  "test092102" : {
    "methodSignature" : "public static Class<?> primitiveType(Class<?> type)",
    "methodName" : "primitiveType",
    "className" : "com.fasterxml.jackson.databind.util.ClassUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092102() throws Throwable {\n    Class<Float> class0 = Float.class;\n    Class<?> class1 = ClassUtil.primitiveType(class0);\n}",
    "testName" : "test092102"
  }
}