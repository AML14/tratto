project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    TypeResolutionContext.Basic typeResolutionContext_Basic0 = new TypeResolutionContext.Basic((TypeFactory) null, (TypeBindings) null);
    Class<NamedType> class0 = NamedType.class;
    VirtualAnnotatedMember virtualAnnotatedMember0 = new VirtualAnnotatedMember(typeResolutionContext_Basic0, class0, ""]that w#n't 2reviousby egistered."", (JavaType) null);
    SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty((BeanProperty) null, virtualAnnotatedMember0, (JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
    MockIllegalArgumentException mockIllegalArgumentException0 = new MockIllegalArgumentException(""]that w#n't 2reviousby egistered."");
    try {
        settableAnyProperty0._throwAsIOE(mockIllegalArgumentException0, (Object) null, (Object) null);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Problem deserializing \""any\"" property 'null' of class com.fasterxml.jackson.databind.jsontype.NamedType (expected type: null; actual type: [null]), problem: ]that w#n't 2reviousby egistered.
        //
        verifyException(""com.fasterxml.jackson.databind.deser.SettableAnyProperty"", e);
    }
}",1,
project,0,test011,"public void test011() throws Throwable {
    SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty((BeanProperty) null, (AnnotatedMember) null, (JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
    // Undeclared exception!
    try {
        settableAnyProperty0.toString();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.SettableAnyProperty"", e);
    }
}",0,
project,0,test022,"public void test022() throws Throwable {
    SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty((BeanProperty) null, (AnnotatedMember) null, (JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
    SettableAnyProperty settableAnyProperty1 = settableAnyProperty0.withValueDeserializer((JsonDeserializer<Object>) null);
    assertNotSame(settableAnyProperty1, settableAnyProperty0);
}",0,
project,0,test033,"public void test033() throws Throwable {
    SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty((BeanProperty) null, (AnnotatedMember) null, (JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
    // Undeclared exception!
    try {
        settableAnyProperty0.fixAccess((DeserializationConfig) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.SettableAnyProperty"", e);
    }
}",0,
project,0,test044,"public void test044() throws Throwable {
    Class<AnnotatedMethod> class0 = AnnotatedMethod.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty((BeanProperty) null, (AnnotatedMember) null, simpleType0, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
    JavaType javaType0 = settableAnyProperty0.getType();
    assertFalse(javaType0.isPrimitive());
}",0,assertFalse(javaType0.isPrimitive())
project,0,test055,"public void test055() throws Throwable {
    Class<AnnotatedMethod> class0 = AnnotatedMethod.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty((BeanProperty) null, (AnnotatedMember) null, simpleType0, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
    BeanProperty beanProperty0 = settableAnyProperty0.getProperty();
    assertNull(beanProperty0);
}",0,
project,0,test066,"public void test066() throws Throwable {
    SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty((BeanProperty) null, (AnnotatedMember) null, (JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
    // Undeclared exception!
    try {
        settableAnyProperty0.readResolve();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Missing method (broken JDK (de)serialization?)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.SettableAnyProperty"", e);
    }
}",0,
project,0,test077,"public void test077() throws Throwable {
    AnnotationMap annotationMap0 = new AnnotationMap();
    AnnotatedField annotatedField0 = new AnnotatedField((TypeResolutionContext) null, (Field) null, annotationMap0);
    SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty((BeanProperty) null, annotatedField0, (JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
    // Undeclared exception!
    try {
        settableAnyProperty0.readResolve();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Missing method (broken JDK (de)serialization?)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.SettableAnyProperty"", e);
    }
}",0,
project,0,test088,"public void test088() throws Throwable {
    SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty((BeanProperty) null, (AnnotatedMember) null, (JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
    boolean boolean0 = settableAnyProperty0.hasValueDeserializer();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test099,"public void test099() throws Throwable {
    Class<AnnotatedMethod> class0 = AnnotatedMethod.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    VirtualAnnotatedMember virtualAnnotatedMember0 = new VirtualAnnotatedMember((TypeResolutionContext) null, class0, ""Unresolved forward reference but no identity info."", simpleType0);
    CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class0, (-4676));
    SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty((BeanProperty) null, virtualAnnotatedMember0, simpleType0, coreXMLDeserializers_Std0, (TypeDeserializer) null);
    boolean boolean0 = settableAnyProperty0.hasValueDeserializer();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test1010,"public void test1010() throws Throwable {
    SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty((BeanProperty) null, (AnnotatedMember) null, (JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
    JsonFactory jsonFactory0 = new JsonFactory();
    JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
    // Undeclared exception!
    try {
        settableAnyProperty0.deserializeAndSet(jsonParser0, (DeserializationContext) null, jsonFactory0, ""JSON"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.SettableAnyProperty"", e);
    }
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer((JavaType) null, classNameIdResolver0, "")"", false, (JavaType) null);
    SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty((BeanProperty) null, (AnnotatedMember) null, (JavaType) null, (JsonDeserializer<Object>) null, asPropertyTypeDeserializer0);
    JsonFactory jsonFactory0 = new JsonFactory();
    JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
    // Undeclared exception!
    try {
        settableAnyProperty0.deserializeAndSet(jsonParser0, (DeserializationContext) null, (Object) null, ""JSON"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.SettableAnyProperty"", e);
    }
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty((BeanProperty) null, (AnnotatedMember) null, (JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
    // Undeclared exception!
    try {
        settableAnyProperty0.set((Object) null, (Object) null, (Object) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.SettableAnyProperty"", e);
    }
}",1,
project,0,test1313,"public void test1313() throws Throwable {
    AnnotationMap annotationMap0 = new AnnotationMap();
    AnnotatedField annotatedField0 = new AnnotatedField((TypeResolutionContext) null, (Field) null, annotationMap0);
    SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty((BeanProperty) null, annotatedField0, (JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
    // Undeclared exception!
    try {
        settableAnyProperty0.set(annotatedField0, annotatedField0, (Object) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.introspect.AnnotatedField"", e);
    }
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    TypeBindings typeBindings0 = TypeBindings.emptyBindings();
    TypeResolutionContext.Basic typeResolutionContext_Basic0 = new TypeResolutionContext.Basic(typeFactory0, typeBindings0);
    Class<Integer> class0 = Integer.class;
    VirtualAnnotatedMember virtualAnnotatedMember0 = new VirtualAnnotatedMember(typeResolutionContext_Basic0, class0, ""] that wasn't previously reistered."", (JavaType) null);
    SettableAnyProperty settableAnyProperty0 = new SettableAnyProperty((BeanProperty) null, virtualAnnotatedMember0, (JavaType) null, (JsonDeserializer<Object>) null, (TypeDeserializer) null);
    MockIllegalArgumentException mockIllegalArgumentException0 = new MockIllegalArgumentException();
    SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
    try {
        settableAnyProperty0._throwAsIOE(mockIllegalArgumentException0, typeBindings0, simpleObjectIdResolver0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Problem deserializing \""any\"" property '<>' of class java.lang.Integer (expected type: null; actual type: `com.fasterxml.jackson.annotation.SimpleObjectIdResolver`) (no error message provided)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.SettableAnyProperty"", e);
    }
}",1,
