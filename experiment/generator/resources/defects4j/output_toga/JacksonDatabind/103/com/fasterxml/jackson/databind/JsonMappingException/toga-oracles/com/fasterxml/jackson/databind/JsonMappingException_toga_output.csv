project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test079,"public void test079() throws Throwable {
    SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException();
    JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference();
    JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) sQLFeatureNotSupportedException0, jsonMappingException_Reference0);
    String string0 = jsonMappingException0.getPathReference();
    assertEquals(""UNKNOWN[?]"", string0);
}",0,
project,0,test1012,"public void test1012() throws Throwable {
    JsonMappingException jsonMappingException0 = JsonMappingException.from((JsonGenerator) null, ""~w8E\"""");
    assertNotNull(jsonMappingException0);
}",1,
project,0,test1113,"public void test1113() throws Throwable {
    SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException();
    JsonFactory jsonFactory0 = new JsonFactory();
    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
    ObjectReader objectReader0 = objectMapper0.readerForUpdating(jsonFactory0);
    ArrayNode arrayNode0 = new ArrayNode((JsonNodeFactory) null);
    JsonParser jsonParser0 = arrayNode0.traverse((ObjectCodec) objectReader0);
    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);
    JsonMappingException jsonMappingException0 = JsonMappingException.from((DeserializationContext) defaultDeserializationContext0, ""JSON"", (Throwable) sQLFeatureNotSupportedException0);
    assertNotNull(jsonMappingException0);
}",1,
project,0,test1214,"public void test1214() throws Throwable {
    // Undeclared exception!
    try {
        JsonMappingException.from((DeserializationContext) null, ""&5z+k2$fC7dPu"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.JsonMappingException"", e);
    }
}",1,
project,0,test1315,"public void test1315() throws Throwable {
    SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException("": "", ""[ObjectId: key=%s, type=%s, scope=%s]"", 0);
    JsonMappingException jsonMappingException0 = new JsonMappingException(""f>gEi)<r?}\"""", sQLIntegrityConstraintViolationException0);
    Object object0 = jsonMappingException0.getProcessor();
    assertNull(object0);
}",0,
project,0,test1416,"public void test1416() throws Throwable {
    SQLException sQLException0 = new SQLException();
    JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) sQLException0, (Object) sQLException0, 3406);
    JsonMappingException jsonMappingException1 = JsonMappingException.from((JsonGenerator) null, """", (Throwable) jsonMappingException0);
    assertNotSame(jsonMappingException1, jsonMappingException0);
}",0,
project,0,test1517,"public void test1517() throws Throwable {
    SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException();
    JsonMappingException jsonMappingException0 = JsonMappingException.from((JsonParser) null, ""(@dFf}akv>"", (Throwable) sQLFeatureNotSupportedException0);
    String string0 = jsonMappingException0._buildMessage();
    assertEquals(""(@dFf}akv>"", string0);
}",0,assertNotNull(string0)
project,0,test1618,"public void test1618() throws Throwable {
    // Undeclared exception!
    try {
        JsonMappingException.from((SerializerProvider) null, """");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.JsonMappingException"", e);
    }
}",0,
project,0,test1719,"public void test1719() throws Throwable {
    SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException();
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    JsonMappingException jsonMappingException0 = JsonMappingException.from((SerializerProvider) defaultSerializerProvider_Impl0, ""int"", (Throwable) sQLFeatureNotSupportedException0);
    assertNotNull(jsonMappingException0);
}",0,
project,0,test1820,"public void test1820() throws Throwable {
    SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException();
    JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) sQLFeatureNotSupportedException0, (Object) sQLFeatureNotSupportedException0, (-380));
    String string0 = jsonMappingException0.toString();
    assertEquals(""com.fasterxml.jackson.databind.JsonMappingException: (was java.sql.SQLFeatureNotSupportedException) (through reference chain: java.sql.SQLFeatureNotSupportedException[?])"", string0);
}",0,assertNotNull(string0)
project,0,test1821,"public void test1821() throws Throwable {
    SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException();
    JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) sQLFeatureNotSupportedException0, (Object) sQLFeatureNotSupportedException0, (-380));
    String string0 = jsonMappingException0.toString();
    String string1 = jsonMappingException0._buildMessage();
    assertEquals(""(was java.sql.SQLFeatureNotSupportedException) (through reference chain: java.sql.SQLFeatureNotSupportedException[?])"", string1);
}",0,assertNotNull(string1)
project,0,test1922,"public void test1922() throws Throwable {
    SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException();
    JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) sQLFeatureNotSupportedException0, (Object) sQLFeatureNotSupportedException0, 604);
    jsonMappingException0.prependPath((Object) sQLFeatureNotSupportedException0, ""yTS=>e_RS{X?"");
    String string0 = jsonMappingException0._buildMessage();
    assertEquals(""(was java.sql.SQLFeatureNotSupportedException) (through reference chain: java.sql.SQLFeatureNotSupportedException[\""yTS=>e_RS{X?\""]->java.sql.SQLFeatureNotSupportedException[604])"", string0);
}",0,
project,0,test2023,"public void test2023() throws Throwable {
    SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException();
    JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) sQLFeatureNotSupportedException0, (Object) sQLFeatureNotSupportedException0, ""MvjR*`|4bmC"");
    assertNotNull(jsonMappingException0);
}",0,assertNotNull(jsonMappingException0)
project,0,test2326,"public void test2326() throws Throwable {
    SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException();
    JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) sQLFeatureNotSupportedException0, (Object) sQLFeatureNotSupportedException0, 700);
    String string0 = jsonMappingException0.getLocalizedMessage();
    assertEquals(""(was java.sql.SQLFeatureNotSupportedException) (through reference chain: java.sql.SQLFeatureNotSupportedException[700])"", string0);
}",0,
project,0,test2427,"public void test2427() throws Throwable {
    SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException();
    JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) sQLFeatureNotSupportedException0, (Object) sQLFeatureNotSupportedException0, 14);
    JsonMappingException jsonMappingException1 = JsonMappingException.fromUnexpectedIOE(jsonMappingException0);
    assertNotSame(jsonMappingException0, jsonMappingException1);
}",0,
project,0,test2630,"public void test2630() throws Throwable {
    Class<String> class0 = String.class;
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    Class<JsonParserSequence> class1 = JsonParserSequence.class;
    JsonMappingException jsonMappingException0 = defaultDeserializationContext_Impl0.weirdKeyException(class1, ""{pl`YSkubS=wnguZU)"", ""{pl`YSkubS=wnguZU)"");
    JsonMappingException.Reference jsonMappingException_Reference0 = new JsonMappingException.Reference(class0);
    JsonMappingException.wrapWithPath((Throwable) jsonMappingException0, jsonMappingException_Reference0);
    String string0 = jsonMappingException0.getPathReference();
    assertEquals(""java.lang.String[?]"", string0);
}",0,
project,0,test2731,"public void test2731() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    ArrayNode arrayNode0 = objectMapper0.createArrayNode();
    JsonParser jsonParser0 = arrayNode0.traverse((ObjectCodec) objectMapper0);
    JsonMappingException jsonMappingException0 = JsonMappingException.from(jsonParser0, ""Unexpected IOException (of type %s): %s"");
    assertNotNull(jsonMappingException0);
}",0,assertNotNull(jsonMappingException0)
project,0,test2832,"public void test2832() throws Throwable {
    SQLTransientException sQLTransientException0 = new SQLTransientException("""");
    JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) sQLTransientException0, (Object) sQLTransientException0, 676);
    assertNotNull(jsonMappingException0);
}",0,assertNotNull(jsonMappingException0)
project,0,test2933,"public void test2933() throws Throwable {
    SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException();
    SQLTransientException sQLTransientException0 = new SQLTransientException(sQLFeatureNotSupportedException0);
    JsonMappingException jsonMappingException0 = JsonMappingException.wrapWithPath((Throwable) sQLTransientException0, (Object) sQLFeatureNotSupportedException0, 20);
    assertNotNull(jsonMappingException0);
}",0,assertNotNull(jsonMappingException0)
project,0,test3236,"public void test3236() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    Class<String> class0 = String.class;
    JsonMappingException jsonMappingException0 = defaultDeserializationContext_Impl0.weirdKeyException(class0, ""{pl`YSkubS=wnguZU)"", ""READ_UNKNOWN_ENUM_VALUES_USING_DEFAULT_VALUE"");
    String string0 = jsonMappingException0.getPathReference();
    assertEquals("""", string0);
}",0,
