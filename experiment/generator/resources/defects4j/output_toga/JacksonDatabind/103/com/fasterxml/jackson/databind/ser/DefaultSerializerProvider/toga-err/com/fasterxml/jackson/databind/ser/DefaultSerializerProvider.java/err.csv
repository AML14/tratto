com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,@Test(timeout = 4000)
public void test000() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    AtomicReference<Throwable> atomicReference0 = new AtomicReference<Throwable>();
    Class<Object> class0 = Object.class;
    boolean boolean0 = objectMapper0.canSerialize(class0, atomicReference0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,@Test(timeout = 4000)
public void test011() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    DefaultSerializerProvider defaultSerializerProvider0 = defaultSerializerProvider_Impl0.copy();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider/Impl.java
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,@Test(timeout = 4000)
public void test022() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    AtomicReference<Throwable> atomicReference0 = new AtomicReference<Throwable>();
    MockIOException mockIOException0 = new MockIOException();
    IOException iOException0 = objectMapper0.updateValue((IOException) mockIOException0, (Object) atomicReference0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,@Test(timeout = 4000)
public void test077() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    NioPathSerializer nioPathSerializer0 = new NioPathSerializer();
    JsonSerializer<Object> jsonSerializer0 = defaultSerializerProvider_Impl0.serializerInstance((Annotated) null, nioPathSerializer0);
    jsonSerializer0.isUnwrappingSerializer();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,@Test(timeout = 4000)
public void test2020() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, (ConfigOverrides) null);
    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl1 = (DefaultSerializerProvider.Impl) defaultSerializerProvider_Impl0.createInstance(serializationConfig0, beanSerializerFactory0);
    Map<Object, WritableObjectId> map0 = defaultSerializerProvider_Impl1._createObjectIdMap();
    map0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/util/Map.java
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,@Test(timeout = 4000)
public void test2121() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, (ConfigOverrides) null);
    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;
    SerializationFeature serializationFeature0 = SerializationFeature.USE_EQUALITY_FOR_OBJECT_ID;
    SerializationConfig serializationConfig1 = serializationConfig0.with(serializationFeature0);
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl1 = (DefaultSerializerProvider.Impl) defaultSerializerProvider_Impl0.createInstance(serializationConfig1, beanSerializerFactory0);
    Map<Object, WritableObjectId> map0 = defaultSerializerProvider_Impl1._createObjectIdMap();
    map0.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/util/Map.java
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,@Test(timeout = 4000)
public void test2222() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    AtomicReference<Throwable> atomicReference0 = new AtomicReference<Throwable>();
    Class<NioPathSerializer> class0 = NioPathSerializer.class;
    boolean boolean0 = objectMapper0.canSerialize(class0, atomicReference0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
