{
  "test1212" : {
    "methodSignature" : "public Locale getLocale()",
    "methodName" : "getLocale",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    defaultDeserializationContext_Impl0.getLocale();\n}",
    "testName" : "test1212"
  },
  "test3435" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3435() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    DeserializerFactory deserializerFactory0 = defaultDeserializationContext_Impl0.getFactory();\n    defaultDeserializationContext_Impl0.getDeserializationFeatures();\n}",
    "testName" : "test3435"
  },
  "test3434" : {
    "methodSignature" : "public DeserializerFactory getFactory()",
    "methodName" : "getFactory",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    DeserializerFactory deserializerFactory0 = defaultDeserializationContext_Impl0.getFactory();\n}",
    "testName" : "test3434"
  },
  "test2424" : {
    "methodSignature" : "public Object handleWeirdStringValue(Class<?> targetClass, String value, String msg, Object... msgArgs) throws IOException",
    "methodName" : "handleWeirdStringValue",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    Class<PlaceholderForType> class0 = PlaceholderForType.class;\n    Object[] objectArray0 = new Object[1];\n    defaultDeserializationContext0.handleWeirdStringValue(class0, \"JSON\", \"JSON\", objectArray0);\n}",
    "testName" : "test2424"
  },
  "test4447" : {
    "methodSignature" : "public final boolean hasSomeOfFeatures(int featureMask)",
    "methodName" : "hasSomeOfFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4447() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    boolean boolean0 = defaultDeserializationContext_Impl0.hasSomeOfFeatures((-861));\n}",
    "testName" : "test4447"
  },
  "test1010" : {
    "methodSignature" : "public final boolean canOverrideAccessModifiers()",
    "methodName" : "canOverrideAccessModifiers",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();\n    deserializationContext0.canOverrideAccessModifiers();\n}",
    "testName" : "test1010"
  },
  "test5258" : {
    "methodSignature" : "public final ObjectBuffer leaseObjectBuffer()",
    "methodName" : "leaseObjectBuffer",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5258() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ObjectBuffer objectBuffer0 = defaultDeserializationContext_Impl0.leaseObjectBuffer();\n}",
    "testName" : "test5258"
  },
  "test3232" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    defaultDeserializationContext_Impl0.getActiveView();\n    defaultDeserializationContext_Impl0.getDeserializationFeatures();\n}",
    "testName" : "test3232"
  },
  "test5259" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5259() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ObjectBuffer objectBuffer0 = defaultDeserializationContext_Impl0.leaseObjectBuffer();\n    defaultDeserializationContext_Impl0.getDeserializationFeatures();\n}",
    "testName" : "test5259"
  },
  "test4244" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4244() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    boolean boolean0 = defaultDeserializationContext_Impl0.hasDeserializationFeatures((-950));\n    defaultDeserializationContext_Impl0.getDeserializationFeatures();\n}",
    "testName" : "test4244"
  },
  "test033" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    defaultDeserializationContext_Impl0.unknownTypeException((JavaType) null, (String) null, (String) null);\n    defaultDeserializationContext_Impl0.getDeserializationFeatures();\n}",
    "testName" : "test033"
  },
  "test077" : {
    "methodSignature" : "public <T> T readValue(byte[] src) throws IOException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_MISSING_CREATOR_PROPERTIES;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    byte[] byteArray0 = new byte[0];\n    objectReader0.readValue(byteArray0);\n}",
    "testName" : "test077"
  },
  "test1616" : {
    "methodSignature" : "public void reportMappingException(String msg, Object... msgArgs) throws JsonMappingException",
    "methodName" : "reportMappingException",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    Object[] objectArray0 = new Object[0];\n    defaultDeserializationContext_Impl0.reportMappingException(\"}f\", objectArray0);\n}",
    "testName" : "test1616"
  },
  "test3839" : {
    "methodSignature" : "public DeserializationContext setAttribute(Object key, Object value)",
    "methodName" : "setAttribute",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3839() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();\n    deserializationContext0.setAttribute(objectMapper0, objectMapper0);\n}",
    "testName" : "test3839"
  },
  "test2828" : {
    "methodSignature" : "public Object handleWeirdNativeValue(JavaType targetType, Object badValue, JsonParser p) throws IOException",
    "methodName" : "handleWeirdNativeValue",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    Class<SequenceInputStream> class0 = SequenceInputStream.class;\n    JavaType javaType0 = defaultDeserializationContext0.constructType(class0);\n    defaultDeserializationContext0.handleWeirdNativeValue(javaType0, jsonFactory0, jsonParser0);\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public JsonMappingException mappingException(String msg, Object... msgArgs)",
    "methodName" : "mappingException",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();\n    deserializationContext0.mappingException(\"Cannot deserialize value of type %s from native value (`JsonToken.VALUE_EMBEDDED_OBJECT`) of type %s: incompatible types\", (Object[]) null);\n}",
    "testName" : "test1414"
  },
  "test3637" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3637() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    Class<ObjectIdResolver> class0 = ObjectIdResolver.class;\n    JsonToken jsonToken0 = JsonToken.START_OBJECT;\n    defaultDeserializationContext_Impl0.mappingException(class0, jsonToken0);\n    defaultDeserializationContext_Impl0.getDeserializationFeatures();\n}",
    "testName" : "test3637"
  },
  "test4649" : {
    "methodSignature" : "public boolean hasValueDeserializerFor(JavaType type, AtomicReference<Throwable> cause)",
    "methodName" : "hasValueDeserializerFor",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4649() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    AtomicReference<Throwable> atomicReference0 = new AtomicReference<Throwable>();\n    boolean boolean0 = defaultDeserializationContext_Impl0.hasValueDeserializerFor((JavaType) null, atomicReference0);\n}",
    "testName" : "test4649"
  },
  "test6068" : {
    "methodSignature" : "public Object handleWeirdKey(Class<?> keyClass, String keyValue, String msg, Object... msgArgs) throws IOException",
    "methodName" : "handleWeirdKey",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6068() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn((Object) null).when(deserializationProblemHandler0).handleWeirdKey(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(java.lang.Class.class), anyString(), anyString());\n    objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    Class<Object> class0 = Object.class;\n    Object[] objectArray0 = new Object[0];\n    Object object0 = defaultDeserializationContext0.handleWeirdKey(class0, \"\", \"\", objectArray0);\n}",
    "testName" : "test6068"
  },
  "test3030" : {
    "methodSignature" : "public <T> T reportUnresolvedObjectId(ObjectIdReader oidReader, Object bean) throws JsonMappingException",
    "methodName" : "reportUnresolvedObjectId",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();\n    deserializationContext0.reportUnresolvedObjectId((ObjectIdReader) null, (Object) objectMapper0);\n}",
    "testName" : "test3030"
  },
  "test4243" : {
    "methodSignature" : "public final boolean hasDeserializationFeatures(int featureMask)",
    "methodName" : "hasDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4243() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    boolean boolean0 = defaultDeserializationContext_Impl0.hasDeserializationFeatures((-950));\n}",
    "testName" : "test4243"
  },
  "test5054" : {
    "methodSignature" : "public Object handleInstantiationProblem(Class<?> instClass, Object argument, Throwable t) throws IOException",
    "methodName" : "handleInstantiationProblem",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5054() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException(\"JSON\", \"JSON\");\n    defaultDeserializationContext0.handleInstantiationProblem((Class<?>) null, jsonParser0, sQLTransientConnectionException0);\n}",
    "testName" : "test5054"
  },
  "test7078" : {
    "methodSignature" : "public <T> T treeToValue(TreeNode n, Class<T> valueType) throws JsonProcessingException",
    "methodName" : "treeToValue",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7078() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn((Object) null).when(deserializationProblemHandler0).handleMissingInstantiator(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(java.lang.Class.class), any(com.fasterxml.jackson.databind.deser.ValueInstantiator.class), any(com.fasterxml.jackson.core.JsonParser.class), anyString());\n    objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    BooleanNode booleanNode0 = BooleanNode.getTrue();\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    ResolvedRecursiveType resolvedRecursiveType0 = objectReader0.treeToValue((TreeNode) booleanNode0, class0);\n}",
    "testName" : "test7078"
  },
  "test8089" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8089() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = (DefaultDeserializationContext.Impl) objectMapper0.getDeserializationContext();\n    Class<Object> class0 = Object.class;\n    boolean boolean0 = ((DeserializationContext) defaultDeserializationContext_Impl0)._isCompatible(class0, objectMapper0);\n    defaultDeserializationContext_Impl0.getDeserializationFeatures();\n}",
    "testName" : "test8089"
  },
  "test8088" : {
    "methodSignature" : "protected boolean _isCompatible(Class<?> target, Object value)",
    "methodName" : "_isCompatible",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8088() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = (DefaultDeserializationContext.Impl) objectMapper0.getDeserializationContext();\n    Class<Object> class0 = Object.class;\n    boolean boolean0 = ((DeserializationContext) defaultDeserializationContext_Impl0)._isCompatible(class0, objectMapper0);\n}",
    "testName" : "test8088"
  },
  "test5866" : {
    "methodSignature" : "public boolean handleUnknownProperty(JsonParser p, JsonDeserializer<?> deser, Object instanceOrClass, String propName) throws IOException",
    "methodName" : "handleUnknownProperty",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5866() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    defaultDeserializationContext0.handleUnknownProperty(jsonParser0, (JsonDeserializer<?>) null, jsonParser0, \"JSON\");\n}",
    "testName" : "test5866"
  },
  "test6876" : {
    "methodSignature" : "public Object handleWeirdNativeValue(JavaType targetType, Object badValue, JsonParser p) throws IOException",
    "methodName" : "handleWeirdNativeValue",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6876() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn(objectMapper0).when(deserializationProblemHandler0).handleWeirdNativeValue(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(com.fasterxml.jackson.databind.JavaType.class), any(), any(com.fasterxml.jackson.core.JsonParser.class));\n    objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    Class<String> class0 = String.class;\n    JavaType javaType0 = defaultDeserializationContext0.constructType(class0);\n    PlaceholderForType placeholderForType0 = new PlaceholderForType((-1204));\n    defaultDeserializationContext0.handleWeirdNativeValue(javaType0, placeholderForType0, jsonParser0);\n}",
    "testName" : "test6876"
  },
  "test4852" : {
    "methodSignature" : "public <T> T readValue(JsonParser p, JavaType type) throws IOException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4852() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.OBJECT_AND_NON_CONCRETE;\n    objectMapper0.enableDefaultTyping(objectMapper_DefaultTyping0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(633);\n    defaultDeserializationContext0.readValue(jsonParser0, (JavaType) placeholderForType0);\n}",
    "testName" : "test4852"
  },
  "test7886" : {
    "methodSignature" : "public JavaType handleMissingTypeId(JavaType baseType, TypeIdResolver idResolver, String extraDesc) throws IOException",
    "methodName" : "handleMissingTypeId",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7886() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<Map> class0 = Map.class;\n    Class<TypeNameIdResolver> class1 = TypeNameIdResolver.class;\n    Class<String> class2 = String.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class1, class2);\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn(mapType0).when(deserializationProblemHandler0).handleMissingTypeId(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(com.fasterxml.jackson.databind.JavaType.class), any(com.fasterxml.jackson.databind.jsontype.TypeIdResolver.class), anyString());\n    objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    JavaType javaType0 = TypeFactory.unknownType();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(javaType0, typeFactory0);\n    JavaType javaType1 = defaultDeserializationContext0.handleMissingTypeId(javaType0, classNameIdResolver0, \"JSON\");\n}",
    "testName" : "test7886"
  },
  "test5664" : {
    "methodSignature" : "public boolean handleUnknownProperty(JsonParser p, JsonDeserializer<?> deser, Object instanceOrClass, String propName) throws IOException",
    "methodName" : "handleUnknownProperty",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5664() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(deserializationProblemHandler0).handleUnknownProperty(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(com.fasterxml.jackson.core.JsonParser.class), any(com.fasterxml.jackson.databind.JsonDeserializer.class), any(), anyString());\n    ObjectMapper objectMapper1 = objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    JsonDeserializer<DoubleNode> jsonDeserializer0 = (JsonDeserializer<DoubleNode>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    doReturn((Collection) null).when(jsonDeserializer0).getKnownPropertyNames();\n    defaultDeserializationContext0.handleUnknownProperty(jsonParser0, jsonDeserializer0, objectMapper1, \"JSON\");\n}",
    "testName" : "test5664"
  },
  "test8897" : {
    "methodSignature" : "public Object handleInstantiationProblem(Class<?> instClass, Object argument, Throwable t) throws IOException",
    "methodName" : "handleInstantiationProblem",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8897() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException();\n    Class<MockDateFormat> class0 = MockDateFormat.class;\n    defaultDeserializationContext0.handleInstantiationProblem(class0, sQLTransientConnectionException0, sQLTransientConnectionException0);\n}",
    "testName" : "test8897"
  },
  "test022" : {
    "methodSignature" : "public Object handleWeirdNumberValue(Class<?> targetClass, Number value, String msg, Object... msgArgs) throws IOException",
    "methodName" : "handleWeirdNumberValue",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    Class<Integer> class0 = Integer.TYPE;\n    BigInteger bigInteger0 = BigInteger.ONE;\n    Object[] objectArray0 = new Object[1];\n    defaultDeserializationContext0.handleWeirdNumberValue(class0, bigInteger0, \"JSON\", objectArray0);\n}",
    "testName" : "test022"
  },
  "test066" : {
    "methodSignature" : "public Calendar constructCalendar(Date d)",
    "methodName" : "constructCalendar",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    MockDate mockDate0 = new MockDate(1L);\n    defaultDeserializationContext_Impl0.constructCalendar(mockDate0);\n}",
    "testName" : "test066"
  },
  "test6270" : {
    "methodSignature" : "public Object handleWeirdStringValue(Class<?> targetClass, String value, String msg, Object... msgArgs) throws IOException",
    "methodName" : "handleWeirdStringValue",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6270() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn((Object) null).when(deserializationProblemHandler0).handleWeirdStringValue(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(java.lang.Class.class), anyString(), anyString());\n    objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    Class<SimpleType> class0 = SimpleType.class;\n    Object[] objectArray0 = new Object[0];\n    Object object0 = defaultDeserializationContext0.handleWeirdStringValue(class0, \"JSON\", \"JSON\", objectArray0);\n}",
    "testName" : "test6270"
  },
  "test7280" : {
    "methodSignature" : "public Object handleInstantiationProblem(Class<?> instClass, Object argument, Throwable t) throws IOException",
    "methodName" : "handleInstantiationProblem",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7280() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn(objectMapper0).when(deserializationProblemHandler0).handleInstantiationProblem(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(java.lang.Class.class), any(), any(java.lang.Throwable.class));\n    objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException(\"JSON\");\n    Class<String> class0 = String.class;\n    defaultDeserializationContext0.handleInstantiationProblem(class0, objectMapper0, sQLTransientConnectionException0);\n}",
    "testName" : "test7280"
  },
  "test8291" : {
    "methodSignature" : "public <T> T reportInputMismatch(BeanProperty prop, String msg, Object... msgArgs) throws JsonMappingException",
    "methodName" : "reportInputMismatch",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8291() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    Object[] objectArray0 = new Object[9];\n    defaultDeserializationContext_Impl0.reportInputMismatch((BeanProperty) null, \"Could not find JsonDeserializer for type %s (via property %s)\", objectArray0);\n}",
    "testName" : "test8291"
  },
  "test1818" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    defaultDeserializationContext_Impl0.mappingException(\"DeserializationProblemHandler.handleWeirdNativeValue() for type %s returned value of type %s\");\n    defaultDeserializationContext_Impl0.getDeserializationFeatures();\n}",
    "testName" : "test1818"
  },
  "test6674" : {
    "methodSignature" : "public Object handleWeirdNativeValue(JavaType targetType, Object badValue, JsonParser p) throws IOException",
    "methodName" : "handleWeirdNativeValue",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6674() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn((Object) null).when(deserializationProblemHandler0).handleWeirdNativeValue(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(com.fasterxml.jackson.databind.JavaType.class), any(), any(com.fasterxml.jackson.core.JsonParser.class));\n    objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(633);\n    Object object0 = defaultDeserializationContext0.handleWeirdNativeValue(placeholderForType0, objectReader0, jsonParser0);\n}",
    "testName" : "test6674"
  },
  "test4650" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4650() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    AtomicReference<Throwable> atomicReference0 = new AtomicReference<Throwable>();\n    boolean boolean0 = defaultDeserializationContext_Impl0.hasValueDeserializerFor((JavaType) null, atomicReference0);\n    defaultDeserializationContext_Impl0.getDeserializationFeatures();\n}",
    "testName" : "test4650"
  },
  "test5461" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5461() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    ObjectBuffer objectBuffer0 = new ObjectBuffer();\n    objectBuffer0.resetAndStart();\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    defaultDeserializationContext_Impl0.returnObjectBuffer(objectBuffer0);\n    ObjectBuffer objectBuffer1 = new ObjectBuffer();\n    defaultDeserializationContext_Impl0.returnObjectBuffer(objectBuffer1);\n    defaultDeserializationContext_Impl0.getDeserializationFeatures();\n}",
    "testName" : "test5461"
  },
  "test7684" : {
    "methodSignature" : "public Object handleUnexpectedToken(Class<?> instClass, JsonToken t, JsonParser p, String msg, Object... msgArgs) throws IOException",
    "methodName" : "handleUnexpectedToken",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7684() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    Class<Locale.LanguageRange> class0 = Locale.LanguageRange.class;\n    JsonToken jsonToken0 = JsonToken.VALUE_TRUE;\n    Object[] objectArray0 = new Object[0];\n    defaultDeserializationContext0.handleUnexpectedToken(class0, jsonToken0, jsonParser0, \"com.fasterxml.jackson.core.ObjectCodec\", objectArray0);\n}",
    "testName" : "test7684"
  },
  "test8695" : {
    "methodSignature" : "public <T> T reportBadMerge(JsonDeserializer<?> deser) throws JsonMappingException",
    "methodName" : "reportBadMerge",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8695() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    Object object0 = defaultDeserializationContext0.reportBadMerge((JsonDeserializer<?>) null);\n}",
    "testName" : "test8695"
  },
  "test6472" : {
    "methodSignature" : "public Object handleWeirdNumberValue(Class<?> targetClass, Number value, String msg, Object... msgArgs) throws IOException",
    "methodName" : "handleWeirdNumberValue",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6472() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn((Object) null).when(deserializationProblemHandler0).handleWeirdNumberValue(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(java.lang.Class.class), any(java.lang.Number.class), anyString());\n    objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    Class<Locale> class0 = Locale.class;\n    BigDecimal bigDecimal0 = BigDecimal.ZERO;\n    Object[] objectArray0 = new Object[1];\n    Object object0 = defaultDeserializationContext0.handleWeirdNumberValue(class0, bigDecimal0, \"JSON\", objectArray0);\n}",
    "testName" : "test6472"
  },
  "test7482" : {
    "methodSignature" : "public <T> T readValue(JsonParser p, JavaType type) throws IOException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7482() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn(objectMapper0).when(deserializationProblemHandler0).handleUnexpectedToken(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(java.lang.Class.class), any(com.fasterxml.jackson.core.JsonToken.class), any(com.fasterxml.jackson.core.JsonParser.class), anyString());\n    objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();\n    JavaType javaType0 = beanProperty_Bogus0.getType();\n    DateFormat dateFormat0 = defaultDeserializationContext0.readValue(jsonParser0, javaType0);\n}",
    "testName" : "test7482"
  },
  "test8493" : {
    "methodSignature" : "public void reportUnknownProperty(Object instanceOrClass, String fieldName, JsonDeserializer<?> deser) throws JsonMappingException",
    "methodName" : "reportUnknownProperty",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8493() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    JsonDeserializer<AbstractDeserializer> jsonDeserializer0 = (JsonDeserializer<AbstractDeserializer>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    doReturn((Collection) null).when(jsonDeserializer0).getKnownPropertyNames();\n    defaultDeserializationContext0.reportUnknownProperty(jsonFactory0, \"JSON\", jsonDeserializer0);\n}",
    "testName" : "test8493"
  },
  "test2323" : {
    "methodSignature" : "public <T> T reportTrailingTokens(Class<?> targetType, JsonParser p, JsonToken trailingToken) throws JsonMappingException",
    "methodName" : "reportTrailingTokens",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    Class<BeanDeserializer> class0 = BeanDeserializer.class;\n    JsonToken jsonToken0 = JsonToken.END_ARRAY;\n    defaultDeserializationContext_Impl0.reportTrailingTokens((Class<?>) class0, (JsonParser) null, jsonToken0);\n}",
    "testName" : "test2323"
  },
  "test4548" : {
    "methodSignature" : "public final boolean hasSomeOfFeatures(int featureMask)",
    "methodName" : "hasSomeOfFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4548() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<BuilderBasedDeserializer> class0 = BuilderBasedDeserializer.class;\n    ObjectReader objectReader0 = objectMapper0.readerFor(class0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"Cannot construct instance of %s (no Creators, like default construct, exist): %s\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    boolean boolean0 = defaultDeserializationContext0.hasSomeOfFeatures(20);\n}",
    "testName" : "test4548"
  },
  "test1313" : {
    "methodSignature" : "public void reportWrongTokenException(JavaType targetType, JsonToken expToken, String msg, Object... msgArgs) throws JsonMappingException",
    "methodName" : "reportWrongTokenException",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    JsonToken jsonToken0 = JsonToken.VALUE_NULL;\n    Object[] objectArray0 = new Object[0];\n    defaultDeserializationContext_Impl0.reportWrongTokenException((JavaType) null, jsonToken0, (String) null, objectArray0);\n}",
    "testName" : "test1313"
  },
  "test3536" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3536() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.with(beanDeserializerFactory0);\n    defaultDeserializationContext0.getDeserializationFeatures();\n}",
    "testName" : "test3536"
  },
  "test4345" : {
    "methodSignature" : "public final boolean hasDeserializationFeatures(int featureMask)",
    "methodName" : "hasDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4345() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();\n    boolean boolean0 = deserializationContext0.hasDeserializationFeatures((byte) 0);\n}",
    "testName" : "test4345"
  },
  "test2121" : {
    "methodSignature" : "public final Base64Variant getBase64Variant()",
    "methodName" : "getBase64Variant",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    defaultDeserializationContext_Impl0.getBase64Variant();\n}",
    "testName" : "test2121"
  },
  "test4346" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4346() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();\n    boolean boolean0 = deserializationContext0.hasDeserializationFeatures((byte) 0);\n    deserializationContext0.getDeserializationFeatures();\n}",
    "testName" : "test4346"
  },
  "test1111" : {
    "methodSignature" : "public <T> T reportInputMismatch(JsonDeserializer<?> src, String msg, Object... msgArgs) throws JsonMappingException",
    "methodName" : "reportInputMismatch",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    Object[] objectArray0 = new Object[3];\n    defaultDeserializationContext_Impl0.reportInputMismatch((JsonDeserializer<?>) null, \"g1?Mo7~E'k@B\", objectArray0);\n}",
    "testName" : "test1111"
  },
  "test6169" : {
    "methodSignature" : "public Object handleWeirdKey(Class<?> keyClass, String keyValue, String msg, Object... msgArgs) throws IOException",
    "methodName" : "handleWeirdKey",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6169() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn(objectMapper0).when(deserializationProblemHandler0).handleWeirdKey(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(java.lang.Class.class), anyString(), anyString());\n    objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    Object[] objectArray0 = new Object[0];\n    Class<Module> class0 = Module.class;\n    defaultDeserializationContext0.handleWeirdKey(class0, \"JSON\", \"\", objectArray0);\n}",
    "testName" : "test6169"
  },
  "test011" : {
    "methodSignature" : "public Object handleWeirdKey(Class<?> keyClass, String keyValue, String msg, Object... msgArgs) throws IOException",
    "methodName" : "handleWeirdKey",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    Object[] objectArray0 = new Object[0];\n    Class<DateFormat> class0 = DateFormat.class;\n    defaultDeserializationContext0.handleWeirdKey(class0, \"JSON\", \"JSON\", objectArray0);\n}",
    "testName" : "test011"
  },
  "test055" : {
    "methodSignature" : "public void reportWrongTokenException(JsonParser p, JsonToken expToken, String msg, Object... msgArgs) throws JsonMappingException",
    "methodName" : "reportWrongTokenException",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<BuilderBasedDeserializer> class0 = BuilderBasedDeserializer.class;\n    ObjectReader objectReader0 = objectMapper0.readerFor(class0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    JsonToken jsonToken0 = JsonToken.NOT_AVAILABLE;\n    Object[] objectArray0 = new Object[3];\n    defaultDeserializationContext0.reportWrongTokenException(jsonParser0, jsonToken0, \"JSON\", objectArray0);\n}",
    "testName" : "test055"
  },
  "test2727" : {
    "methodSignature" : "public <T> T reportBadPropertyDefinition(BeanDescription bean, BeanPropertyDefinition prop, String msg, Object... msgArgs) throws JsonMappingException",
    "methodName" : "reportBadPropertyDefinition",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    Class<Throwable> class0 = Throwable.class;\n    ObjectReader objectReader0 = objectMapper0.readerWithView(class0);\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext((JsonParser) null);\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);\n    Object[] objectArray0 = new Object[2];\n    defaultDeserializationContext0.reportBadPropertyDefinition((BeanDescription) basicBeanDescription0, (BeanPropertyDefinition) null, \"G/\", objectArray0);\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "public void reportWrongTokenException(JsonDeserializer<?> deser, JsonToken expToken, String msg, Object... msgArgs) throws JsonMappingException",
    "methodName" : "reportWrongTokenException",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    JsonToken jsonToken0 = JsonToken.VALUE_EMBEDDED_OBJECT;\n    Object[] objectArray0 = new Object[4];\n    defaultDeserializationContext_Impl0.reportWrongTokenException((JsonDeserializer<?>) null, jsonToken0, \"EE@Joj\", objectArray0);\n}",
    "testName" : "test1717"
  },
  "test2525" : {
    "methodSignature" : "public JsonMappingException instantiationException(Class<?> instClass, String msg0)",
    "methodName" : "instantiationException",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();\n    Class<SimpleObjectIdResolver> class0 = SimpleObjectIdResolver.class;\n    deserializationContext0.instantiationException(class0, \"com.fasterxml.jackson.databind.SerializationFeature\");\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public Class<?> findClass(String className) throws ClassNotFoundException",
    "methodName" : "findClass",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    defaultDeserializationContext_Impl0.findClass(\"QUx*JK$yo18q<T4 \");\n}",
    "testName" : "test1515"
  },
  "test3738" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3738() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();\n    int int0 = deserializationContext0.getDeserializationFeatures();\n}",
    "testName" : "test3738"
  },
  "test5155" : {
    "methodSignature" : "public final ObjectBuffer leaseObjectBuffer()",
    "methodName" : "leaseObjectBuffer",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5155() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ObjectBuffer objectBuffer0 = new ObjectBuffer();\n    defaultDeserializationContext_Impl0.returnObjectBuffer(objectBuffer0);\n    ObjectBuffer objectBuffer1 = defaultDeserializationContext_Impl0.leaseObjectBuffer();\n}",
    "testName" : "test5155"
  },
  "test5156" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5156() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ObjectBuffer objectBuffer0 = new ObjectBuffer();\n    defaultDeserializationContext_Impl0.returnObjectBuffer(objectBuffer0);\n    ObjectBuffer objectBuffer1 = defaultDeserializationContext_Impl0.leaseObjectBuffer();\n    defaultDeserializationContext_Impl0.getDeserializationFeatures();\n}",
    "testName" : "test5156"
  },
  "test7179" : {
    "methodSignature" : "public Object handleMissingInstantiator(Class<?> instClass, ValueInstantiator valueInst, JsonParser p, String msg, Object... msgArgs) throws IOException",
    "methodName" : "handleMissingInstantiator",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7179() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn(objectMapper0).when(deserializationProblemHandler0).handleMissingInstantiator(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(java.lang.Class.class), any(com.fasterxml.jackson.databind.deser.ValueInstantiator.class), any(com.fasterxml.jackson.core.JsonParser.class), anyString());\n    objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    Class<SimpleType> class0 = SimpleType.class;\n    ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(class0);\n    Object[] objectArray0 = new Object[1];\n    defaultDeserializationContext0.handleMissingInstantiator(class0, valueInstantiator_Base0, jsonParser0, \"JSON\", objectArray0);\n}",
    "testName" : "test7179"
  },
  "test3131" : {
    "methodSignature" : "public <T> T reportBadTypeDefinition(BeanDescription bean, String msg, Object... msgArgs) throws JsonMappingException",
    "methodName" : "reportBadTypeDefinition",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    Object[] objectArray0 = new Object[0];\n    defaultDeserializationContext_Impl0.reportBadTypeDefinition((BeanDescription) null, \"em?\", objectArray0);\n}",
    "testName" : "test3131"
  },
  "test3940" : {
    "methodSignature" : "public final JsonNodeFactory getNodeFactory()",
    "methodName" : "getNodeFactory",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3940() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    defaultDeserializationContext_Impl0.getNodeFactory();\n}",
    "testName" : "test3940"
  },
  "test5967" : {
    "methodSignature" : "public Object handleWeirdKey(Class<?> keyClass, String keyValue, String msg, Object... msgArgs) throws IOException",
    "methodName" : "handleWeirdKey",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5967() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn((Object) null).when(deserializationProblemHandler0).handleWeirdKey(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(java.lang.Class.class), anyString(), anyString());\n    ObjectMapper objectMapper1 = objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    Class<Object> class0 = Object.class;\n    Object[] objectArray0 = new Object[0];\n    Object object0 = defaultDeserializationContext0.handleWeirdKey(class0, \"JSON\", \"JSON\", objectArray0);\n}",
    "testName" : "test5967"
  },
  "test6977" : {
    "methodSignature" : "public Object handleMissingInstantiator(Class<?> instClass, ValueInstantiator valueInst, JsonParser p, String msg, Object... msgArgs) throws IOException",
    "methodName" : "handleMissingInstantiator",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6977() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    Object[] objectArray0 = new Object[2];\n    defaultDeserializationContext0.handleMissingInstantiator(class0, (ValueInstantiator) null, jsonParser0, \"JSON\", objectArray0);\n}",
    "testName" : "test6977"
  },
  "test4953" : {
    "methodSignature" : "public final KeyDeserializer findKeyDeserializer(JavaType keyType, BeanProperty prop) throws JsonMappingException",
    "methodName" : "findKeyDeserializer",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4953() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();\n    JavaType javaType0 = beanProperty_Bogus0.getType();\n    KeyDeserializer keyDeserializer0 = defaultDeserializationContext0.findKeyDeserializer(javaType0, beanProperty_Bogus0);\n}",
    "testName" : "test4953"
  },
  "test7987" : {
    "methodSignature" : "public JavaType handleMissingTypeId(JavaType baseType, TypeIdResolver idResolver, String extraDesc) throws IOException",
    "methodName" : "handleMissingTypeId",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7987() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn((JavaType) null).when(deserializationProblemHandler0).handleMissingTypeId(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(com.fasterxml.jackson.databind.JavaType.class), any(com.fasterxml.jackson.databind.jsontype.TypeIdResolver.class), anyString());\n    objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    JavaType javaType0 = TypeFactory.unknownType();\n    TypeFactory typeFactory0 = objectReader0.getTypeFactory();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(javaType0, typeFactory0);\n    defaultDeserializationContext0.handleMissingTypeId(javaType0, classNameIdResolver0, \"JSON\");\n}",
    "testName" : "test7987"
  },
  "test5765" : {
    "methodSignature" : "public boolean handleUnknownProperty(JsonParser p, JsonDeserializer<?> deser, Object instanceOrClass, String propName) throws IOException",
    "methodName" : "handleUnknownProperty",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5765() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn(true).when(deserializationProblemHandler0).handleUnknownProperty(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(com.fasterxml.jackson.core.JsonParser.class), any(com.fasterxml.jackson.databind.JsonDeserializer.class), any(), anyString());\n    objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    JsonDeserializer<ObjectIdResolver> jsonDeserializer0 = (JsonDeserializer<ObjectIdResolver>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    boolean boolean0 = defaultDeserializationContext0.handleUnknownProperty(jsonParser0, jsonDeserializer0, jsonParser0, \"JSON\");\n}",
    "testName" : "test5765"
  },
  "test6775" : {
    "methodSignature" : "public Object handleWeirdNativeValue(JavaType targetType, Object badValue, JsonParser p) throws IOException",
    "methodName" : "handleWeirdNativeValue",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6775() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn(objectMapper0).when(deserializationProblemHandler0).handleWeirdNativeValue(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(com.fasterxml.jackson.databind.JavaType.class), any(), any(com.fasterxml.jackson.core.JsonParser.class));\n    ObjectMapper objectMapper1 = objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(633);\n    Object object0 = defaultDeserializationContext0.handleWeirdNativeValue(placeholderForType0, objectReader0, jsonParser0);\n}",
    "testName" : "test6775"
  },
  "test4751" : {
    "methodSignature" : "public boolean hasValueDeserializerFor(JavaType type, AtomicReference<Throwable> cause)",
    "methodName" : "hasValueDeserializerFor",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4751() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    defaultDeserializationContext_Impl0.hasValueDeserializerFor((JavaType) null, (AtomicReference<Throwable>) null);\n}",
    "testName" : "test4751"
  },
  "test000" : {
    "methodSignature" : "public <T> T treeToValue(TreeNode n, Class<T> valueType) throws JsonProcessingException",
    "methodName" : "treeToValue",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    BooleanNode booleanNode0 = BooleanNode.getTrue();\n    Class<ResolvedRecursiveType> class0 = ResolvedRecursiveType.class;\n    objectReader0.treeToValue((TreeNode) booleanNode0, class0);\n}",
    "testName" : "test000"
  },
  "test044" : {
    "methodSignature" : "public int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    ObjectMapper objectMapper1 = new ObjectMapper(objectMapper0);\n    objectMapper1.mixInCount();\n}",
    "testName" : "test044"
  },
  "test088" : {
    "methodSignature" : "public Object getAttribute(Object key)",
    "methodName" : "getAttribute",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    defaultDeserializationContext_Impl0.getAttribute(beanDeserializerFactory0);\n}",
    "testName" : "test088"
  },
  "test7381" : {
    "methodSignature" : "public Object handleInstantiationProblem(Class<?> instClass, Object argument, Throwable t) throws IOException",
    "methodName" : "handleInstantiationProblem",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7381() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn((Object) null).when(deserializationProblemHandler0).handleInstantiationProblem(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(java.lang.Class.class), any(), any(java.lang.Throwable.class));\n    objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException(\"JSON\");\n    Class<String> class0 = String.class;\n    Object object0 = defaultDeserializationContext0.handleInstantiationProblem(class0, objectMapper0, sQLTransientConnectionException0);\n}",
    "testName" : "test7381"
  },
  "test8392" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8392() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    defaultDeserializationContext_Impl0.reportUnknownProperty(beanDeserializerFactory0, \"\", (JsonDeserializer<?>) null);\n    defaultDeserializationContext_Impl0.getDeserializationFeatures();\n}",
    "testName" : "test8392"
  },
  "test2929" : {
    "methodSignature" : "public void reportMissingContent(String msg, Object... msgArgs) throws JsonMappingException",
    "methodName" : "reportMissingContent",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    Object[] objectArray0 = new Object[1];\n    defaultDeserializationContext_Impl0.reportMissingContent(\"~{~hISY3\", objectArray0);\n}",
    "testName" : "test2929"
  },
  "test8190" : {
    "methodSignature" : "public <T> T reportInputMismatch(BeanProperty prop, String msg, Object... msgArgs) throws JsonMappingException",
    "methodName" : "reportInputMismatch",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8190() throws Throwable {\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();\n    Object[] objectArray0 = new Object[6];\n    defaultDeserializationContext_Impl0.reportInputMismatch((BeanProperty) beanProperty_Bogus0, \"|JZ(\", objectArray0);\n}",
    "testName" : "test8190"
  },
  "test1919" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();\n    Class<BeanDeserializer> class0 = BeanDeserializer.class;\n    deserializationContext0.endOfInputException(class0);\n    deserializationContext0.getDeserializationFeatures();\n}",
    "testName" : "test1919"
  },
  "test5562" : {
    "methodSignature" : "public final ArrayBuilders getArrayBuilders()",
    "methodName" : "getArrayBuilders",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5562() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    defaultDeserializationContext_Impl0.getArrayBuilders();\n    ArrayBuilders arrayBuilders0 = defaultDeserializationContext_Impl0.getArrayBuilders();\n}",
    "testName" : "test5562"
  },
  "test7785" : {
    "methodSignature" : "public JavaType handleUnknownTypeId(JavaType baseType, String id, TypeIdResolver idResolver, String extraDesc) throws IOException",
    "methodName" : "handleUnknownTypeId",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7785() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn((JavaType) null).when(deserializationProblemHandler0).handleUnknownTypeId(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(com.fasterxml.jackson.databind.JavaType.class), anyString(), any(com.fasterxml.jackson.databind.jsontype.TypeIdResolver.class), anyString());\n    objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    defaultDeserializationContext0.handleUnknownTypeId((JavaType) null, \"JSON\", (TypeIdResolver) null, (String) null);\n}",
    "testName" : "test7785"
  },
  "test5563" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5563() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    defaultDeserializationContext_Impl0.getArrayBuilders();\n    ArrayBuilders arrayBuilders0 = defaultDeserializationContext_Impl0.getArrayBuilders();\n    defaultDeserializationContext_Impl0.getDeserializationFeatures();\n}",
    "testName" : "test5563"
  },
  "test8796" : {
    "methodSignature" : "public Object handleInstantiationProblem(Class<?> instClass, Object argument, Throwable t) throws IOException",
    "methodName" : "handleInstantiationProblem",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8796() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    Class<Integer> class0 = Integer.TYPE;\n    defaultDeserializationContext0.handleInstantiationProblem(class0, jsonFactory0, (Throwable) null);\n}",
    "testName" : "test8796"
  },
  "test6573" : {
    "methodSignature" : "public Object handleWeirdNumberValue(Class<?> targetClass, Number value, String msg, Object... msgArgs) throws IOException",
    "methodName" : "handleWeirdNumberValue",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6573() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn(objectMapper0).when(deserializationProblemHandler0).handleWeirdNumberValue(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(java.lang.Class.class), any(java.lang.Number.class), anyString());\n    objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    Class<Integer> class0 = Integer.TYPE;\n    BigInteger bigInteger0 = BigInteger.ONE;\n    Object[] objectArray0 = new Object[1];\n    defaultDeserializationContext0.handleWeirdNumberValue(class0, bigInteger0, \"JSON\", objectArray0);\n}",
    "testName" : "test6573"
  },
  "test5360" : {
    "methodSignature" : "public final int getDeserializationFeatures()",
    "methodName" : "getDeserializationFeatures",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5360() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    ObjectBuffer objectBuffer0 = new ObjectBuffer();\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    defaultDeserializationContext_Impl0.returnObjectBuffer(objectBuffer0);\n    defaultDeserializationContext_Impl0.returnObjectBuffer(objectBuffer0);\n    defaultDeserializationContext_Impl0.getDeserializationFeatures();\n}",
    "testName" : "test5360"
  },
  "test7583" : {
    "methodSignature" : "public Object handleUnexpectedToken(Class<?> instClass, JsonToken t, JsonParser p, String msg, Object... msgArgs) throws IOException",
    "methodName" : "handleUnexpectedToken",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7583() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn(objectMapper0).when(deserializationProblemHandler0).handleUnexpectedToken(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(java.lang.Class.class), any(com.fasterxml.jackson.core.JsonToken.class), any(com.fasterxml.jackson.core.JsonParser.class), anyString());\n    objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    Class<InputStream> class0 = InputStream.class;\n    JsonToken jsonToken0 = JsonToken.END_OBJECT;\n    Object[] objectArray0 = new Object[1];\n    defaultDeserializationContext0.handleUnexpectedToken(class0, jsonToken0, jsonParser0, \"JSON\", objectArray0);\n}",
    "testName" : "test7583"
  },
  "test8594" : {
    "methodSignature" : "public void reportUnknownProperty(Object instanceOrClass, String fieldName, JsonDeserializer<?> deser) throws JsonMappingException",
    "methodName" : "reportUnknownProperty",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8594() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    StringReader stringReader0 = new StringReader(\"JSON\");\n    JsonParser jsonParser0 = jsonFactory0.createParser((Reader) stringReader0);\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    defaultDeserializationContext0.reportUnknownProperty(jsonFactory0, \"JSON\", (JsonDeserializer<?>) null);\n}",
    "testName" : "test8594"
  },
  "test6371" : {
    "methodSignature" : "public Object handleWeirdStringValue(Class<?> targetClass, String value, String msg, Object... msgArgs) throws IOException",
    "methodName" : "handleWeirdStringValue",
    "className" : "com.fasterxml.jackson.databind.DeserializationContext",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6371() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());\n    doReturn(objectMapper0).when(deserializationProblemHandler0).handleWeirdStringValue(any(com.fasterxml.jackson.databind.DeserializationContext.class), any(java.lang.Class.class), anyString(), anyString());\n    objectMapper0.addHandler(deserializationProblemHandler0);\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    DefaultDeserializationContext defaultDeserializationContext0 = objectReader0.createDeserializationContext(jsonParser0);\n    Class<PlaceholderForType> class0 = PlaceholderForType.class;\n    Object[] objectArray0 = new Object[1];\n    defaultDeserializationContext0.handleWeirdStringValue(class0, \"JSON\", \"JSON\", objectArray0);\n}",
    "testName" : "test6371"
  }
}