com.fasterxml.jackson.databind.deser.DeserializerCache,@Test(timeout = 4000)
public void test033() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    PropertyAccessor propertyAccessor0 = PropertyAccessor.ALL;
    JsonAutoDetect.Visibility jsonAutoDetect_Visibility0 = JsonAutoDetect.Visibility.PROTECTED_AND_PUBLIC;
    ObjectMapper objectMapper1 = objectMapper0.setVisibility(propertyAccessor0, jsonAutoDetect_Visibility0);
    Class<SimpleModule> class0 = SimpleModule.class;
    ObjectReader objectReader0 = objectMapper1.readerFor(class0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.deser.DeserializerCache,@Test(timeout = 4000)
public void test033() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    PropertyAccessor propertyAccessor0 = PropertyAccessor.ALL;
    JsonAutoDetect.Visibility jsonAutoDetect_Visibility0 = JsonAutoDetect.Visibility.PROTECTED_AND_PUBLIC;
    ObjectMapper objectMapper1 = objectMapper0.setVisibility(propertyAccessor0, jsonAutoDetect_Visibility0);
    Class<SimpleModule> class0 = SimpleModule.class;
    ObjectReader objectReader0 = objectMapper1.readerFor(class0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.deser.DeserializerCache,@Test(timeout = 4000)
public void test044() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    PropertyAccessor propertyAccessor0 = PropertyAccessor.ALL;
    JsonAutoDetect.Visibility jsonAutoDetect_Visibility0 = JsonAutoDetect.Visibility.NON_PRIVATE;
    objectMapper0.setVisibility(propertyAccessor0, jsonAutoDetect_Visibility0);
    Class<BeanDeserializer> class0 = BeanDeserializer.class;
    ObjectReader objectReader0 = objectMapper0.readerFor(class0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.deser.DeserializerCache,@Test(timeout = 4000)
public void test044() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    PropertyAccessor propertyAccessor0 = PropertyAccessor.ALL;
    JsonAutoDetect.Visibility jsonAutoDetect_Visibility0 = JsonAutoDetect.Visibility.NON_PRIVATE;
    objectMapper0.setVisibility(propertyAccessor0, jsonAutoDetect_Visibility0);
    Class<BeanDeserializer> class0 = BeanDeserializer.class;
    ObjectReader objectReader0 = objectMapper0.readerFor(class0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.deser.DeserializerCache,@Test(timeout = 4000)
public void test055() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    PropertyAccessor propertyAccessor0 = PropertyAccessor.ALL;
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<ArrayNode> class0 = ArrayNode.class;
    Class<CoreXMLDeserializers.Std> class1 = CoreXMLDeserializers.Std.class;
    CollectionLikeType collectionLikeType0 = typeFactory0.constructCollectionLikeType(class0, class1);
    objectMapper0.convertValue((Object) propertyAccessor0, (JavaType) collectionLikeType0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.deser.DeserializerCache,@Test(timeout = 4000)
public void test066() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    Class<BeanDeserializer> class0 = BeanDeserializer.class;
    objectMapper0.readerFor(class0);
    JavaType javaType0 = TypeFactory.unknownType();
    AtomicReference<Throwable> atomicReference0 = new AtomicReference<Throwable>((Throwable) null);
    boolean boolean0 = objectMapper0.canDeserialize(javaType0, atomicReference0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.deser.DeserializerCache,@Test(timeout = 4000)
public void test077() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    AtomicReference<Throwable> atomicReference0 = new AtomicReference<Throwable>((Throwable) null);
    Class<NioPathDeserializer> class0 = NioPathDeserializer.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
    CollectionLikeType collectionLikeType0 = CollectionLikeType.upgradeFrom(referenceType0, simpleType0);
    MapLikeType mapLikeType0 = MapLikeType.upgradeFrom(collectionLikeType0, simpleType0, simpleType0);
    boolean boolean0 = objectMapper0.canDeserialize((JavaType) mapLikeType0, atomicReference0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.deser.DeserializerCache,@Test(timeout = 4000)
public void test078() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    AtomicReference<Throwable> atomicReference0 = new AtomicReference<Throwable>((Throwable) null);
    Class<NioPathDeserializer> class0 = NioPathDeserializer.class;
    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
    ReferenceType referenceType0 = ReferenceType.upgradeFrom(simpleType0, simpleType0);
    CollectionLikeType collectionLikeType0 = CollectionLikeType.upgradeFrom(referenceType0, simpleType0);
    MapLikeType mapLikeType0 = MapLikeType.upgradeFrom(collectionLikeType0, simpleType0, simpleType0);
    boolean boolean0 = objectMapper0.canDeserialize((JavaType) mapLikeType0, atomicReference0);
    atomicReference0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/util/concurrent/atomic/AtomicReference.java
com.fasterxml.jackson.databind.deser.DeserializerCache,@Test(timeout = 4000)
public void test0910() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<ConcurrentHashMap> class0 = ConcurrentHashMap.class;
    Class<JsonSerializer> class1 = JsonSerializer.class;
    MapType mapType0 = typeFactory0.constructMapType(class0, class0, class1);
    MapLikeType mapLikeType0 = mapType0.withContentValueHandler(objectMapper0);
    objectMapper0.canDeserialize((JavaType) mapLikeType0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.deser.DeserializerCache,@Test(timeout = 4000)
public void test1011() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    Class<BeanDeserializer> class0 = BeanDeserializer.class;
    ObjectMapper objectMapper1 = objectMapper0.enableDefaultTyping();
    ObjectReader objectReader0 = objectMapper1.readerFor(class0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.deser.DeserializerCache,@Test(timeout = 4000)
public void test1011() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    Class<BeanDeserializer> class0 = BeanDeserializer.class;
    ObjectMapper objectMapper1 = objectMapper0.enableDefaultTyping();
    ObjectReader objectReader0 = objectMapper1.readerFor(class0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.deser.DeserializerCache,@Test(timeout = 4000)
public void test1213() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    TypeBindings typeBindings0 = TypeBindings.emptyBindings();
    Class<BigIntegerNode> class0 = BigIntegerNode.class;
    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);
    AtomicReference<Throwable> atomicReference0 = new AtomicReference<Throwable>((Throwable) null);
    boolean boolean0 = objectMapper0.canDeserialize((JavaType) resolvedRecursiveType0, atomicReference0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
