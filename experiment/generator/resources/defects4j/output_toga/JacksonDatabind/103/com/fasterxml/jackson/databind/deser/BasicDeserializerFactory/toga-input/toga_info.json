{
  "test1212" : {
    "methodSignature" : "public ValueInstantiator _valueInstantiatorInstance(DeserializationConfig config, Annotated annotated, Object instDef) throws JsonMappingException",
    "methodName" : "_valueInstantiatorInstance",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    TextNode textNode0 = TextNode.valueOf(\"java.com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder\");\n    beanDeserializerFactory0._valueInstantiatorInstance((DeserializationConfig) null, (Annotated) null, textNode0);\n}",
    "testName" : "test1212"
  },
  "test2323" : {
    "methodSignature" : "protected JsonDeserializer<?> _findCustomMapLikeDeserializer(MapLikeType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer) throws JsonMappingException",
    "methodName" : "_findCustomMapLikeDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    Deserializers.Base deserializers_Base0 = new Deserializers.Base();\n    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);\n    Class<UTF8StreamJsonParser> class0 = UTF8StreamJsonParser.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    JsonDeserializer<?> jsonDeserializer0 = beanDeserializerFactory0.createTreeDeserializer((DeserializationConfig) null, simpleType0, (BeanDescription) null);\n    MapLikeType mapLikeType0 = MapLikeType.upgradeFrom(simpleType0, simpleType0, simpleType0);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(mapLikeType0, typeFactory0);\n    AsArrayTypeDeserializer asArrayTypeDeserializer0 = new AsArrayTypeDeserializer(mapLikeType0, classNameIdResolver0, \"@JsonUnwrapped\", false, mapLikeType0);\n    JsonDeserializer<?> jsonDeserializer1 = beanDeserializerFactory0._findCustomMapLikeDeserializer(mapLikeType0, (DeserializationConfig) null, (BeanDescription) null, (KeyDeserializer) null, asArrayTypeDeserializer0, jsonDeserializer0);\n}",
    "testName" : "test2323"
  },
  "test1313" : {
    "methodSignature" : "public ValueInstantiator _valueInstantiatorInstance(DeserializationConfig config, Annotated annotated, Object instDef) throws JsonMappingException",
    "methodName" : "_valueInstantiatorInstance",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    ValueInstantiator valueInstantiator0 = beanDeserializerFactory0._valueInstantiatorInstance((DeserializationConfig) null, (Annotated) null, (Object) null);\n}",
    "testName" : "test1313"
  },
  "test2424" : {
    "methodSignature" : "protected JsonDeserializer<?> _findCustomReferenceDeserializer(ReferenceType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer contentTypeDeserializer, JsonDeserializer<?> contentDeserializer) throws JsonMappingException",
    "methodName" : "_findCustomReferenceDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    Class<POJOPropertyBuilder> class0 = POJOPropertyBuilder.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded((Class<?>) class0, (JavaType) simpleType0);\n    JavaType[] javaTypeArray0 = new JavaType[4];\n    javaTypeArray0[0] = (JavaType) simpleType0;\n    javaTypeArray0[2] = (JavaType) simpleType0;\n    ReferenceType referenceType0 = ReferenceType.construct((Class<?>) class0, typeBindings0, (JavaType) simpleType0, javaTypeArray0, javaTypeArray0[2]);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(referenceType0, typeFactory0);\n    MapLikeType mapLikeType0 = MapLikeType.upgradeFrom(referenceType0, referenceType0, javaTypeArray0[0]);\n    ArrayType arrayType0 = ArrayType.construct(javaTypeArray0[0], typeBindings0, (Object) javaTypeArray0[2], (Object) mapLikeType0);\n    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.WRAPPER_OBJECT;\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(referenceType0, classNameIdResolver0, \"_QJXN?E,w0\", false, arrayType0, jsonTypeInfo_As0);\n    JsonDeserializer<?> jsonDeserializer0 = beanDeserializerFactory0._findCustomReferenceDeserializer(referenceType0, (DeserializationConfig) null, (BeanDescription) null, asPropertyTypeDeserializer0, (JsonDeserializer<?>) null);\n}",
    "testName" : "test2424"
  },
  "test1010" : {
    "methodSignature" : "public final boolean isFinal()",
    "methodName" : "isFinal",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();\n    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAbstractTypeResolver(simpleAbstractTypeResolver0);\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);\n    Class<CollectionType> class0 = CollectionType.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    JavaType javaType0 = beanDeserializerFactory0.mapAbstractType((DeserializationConfig) null, simpleType0);\n    javaType0.isFinal();\n}",
    "testName" : "test1010"
  },
  "test2121" : {
    "methodSignature" : "public JsonDeserializer<?> createReferenceDeserializer(DeserializationContext ctxt, ReferenceType type, BeanDescription beanDesc) throws JsonMappingException",
    "methodName" : "createReferenceDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<ConcurrentHashMap> class0 = ConcurrentHashMap.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class0, class0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(mapType0, mapType0);\n    beanDeserializerFactory0.createReferenceDeserializer(defaultDeserializationContext_Impl0, referenceType0, (BeanDescription) null);\n}",
    "testName" : "test2121"
  },
  "test1111" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    BeanDeserializerBuilder beanDeserializerBuilder0 = new BeanDeserializerBuilder((BeanDescription) null, defaultDeserializationContext_Impl0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(beanDeserializerBuilder0);\n}",
    "testName" : "test1111"
  },
  "test2222" : {
    "methodSignature" : "public JsonDeserializer<?> findDefaultDeserializer(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc) throws JsonMappingException",
    "methodName" : "findDefaultDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();\n    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAbstractTypeResolver(simpleAbstractTypeResolver0);\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();\n    BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();\n    JavaType javaType0 = beanProperty_Bogus0.getType();\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forDeserialization(pOJOPropertiesCollector0);\n    beanDeserializerFactory0.findDefaultDeserializer(deserializationContext0, javaType0, basicBeanDescription0);\n}",
    "testName" : "test2222"
  },
  "test011" : {
    "methodSignature" : "public final DeserializerFactory withDeserializerModifier(BeanDeserializerModifier modifier)",
    "methodName" : "withDeserializerModifier",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    beanDeserializerFactory0.withDeserializerModifier((BeanDeserializerModifier) null);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "protected JavaType resolveType(DeserializationContext ctxt, BeanDescription beanDesc, JavaType type, AnnotatedMember member) throws JsonMappingException",
    "methodName" : "resolveType",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forDeserialization(pOJOPropertiesCollector0);\n    Class<AsArrayTypeDeserializer> class0 = AsArrayTypeDeserializer.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    MapLikeType mapLikeType0 = MapLikeType.upgradeFrom(simpleType0, simpleType0, simpleType0);\n    beanDeserializerFactory0.resolveType(defaultDeserializationContext_Impl0, basicBeanDescription0, mapLikeType0, (AnnotatedMember) null);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public final DeserializerFactory withValueInstantiators(ValueInstantiators instantiators)",
    "methodName" : "withValueInstantiators",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    SimpleValueInstantiators simpleValueInstantiators0 = new SimpleValueInstantiators();\n    DeserializerFactory deserializerFactory0 = beanDeserializerFactory0.withValueInstantiators(simpleValueInstantiators0);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public final DeserializerFactory withAdditionalKeyDeserializers(KeyDeserializers additional)",
    "methodName" : "withAdditionalKeyDeserializers",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    StdKeyDeserializers stdKeyDeserializers0 = new StdKeyDeserializers();\n    DeserializerFactory deserializerFactory0 = beanDeserializerFactory0.withAdditionalKeyDeserializers(stdKeyDeserializers0);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ConcurrentHashMap<AnnotatedMethod, Boolean> concurrentHashMap0 = new ConcurrentHashMap<AnnotatedMethod, Boolean>();\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(concurrentHashMap0);\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    TreeSet<SQLTransientException> treeSet0 = new TreeSet<SQLTransientException>();\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(treeSet0);\n}",
    "testName" : "test1616"
  },
  "test2727" : {
    "methodSignature" : "protected JsonDeserializer<?> _findCustomEnumDeserializer(Class<?> type, DeserializationConfig config, BeanDescription beanDesc) throws JsonMappingException",
    "methodName" : "_findCustomEnumDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    Deserializers.Base deserializers_Base0 = new Deserializers.Base();\n    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);\n    Class<POJOPropertyBuilder> class0 = POJOPropertyBuilder.class;\n    JsonDeserializer<?> jsonDeserializer0 = beanDeserializerFactory0._findCustomEnumDeserializer(class0, (DeserializationConfig) null, (BeanDescription) null);\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forDeserialization(pOJOPropertiesCollector0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(basicBeanDescription0);\n}",
    "testName" : "test1717"
  },
  "test2828" : {
    "methodSignature" : "protected EnumResolver constructEnumResolver(Class<?> enumClass, DeserializationConfig config, AnnotatedMember jsonValueAccessor)",
    "methodName" : "constructEnumResolver",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    Class<SQLFeatureNotSupportedException> class0 = SQLFeatureNotSupportedException.class;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    PlaceholderForType placeholderForType0 = new PlaceholderForType(2);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(placeholderForType0, placeholderForType0);\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded((Class<?>) class0, (JavaType) referenceType0);\n    TypeResolutionContext.Basic typeResolutionContext_Basic0 = new TypeResolutionContext.Basic(typeFactory0, typeBindings0);\n    VirtualAnnotatedMember virtualAnnotatedMember0 = new VirtualAnnotatedMember(typeResolutionContext_Basic0, class0, \"-#c+Bagd~dxM\", referenceType0);\n    beanDeserializerFactory0.constructEnumResolver(class0, (DeserializationConfig) null, virtualAnnotatedMember0);\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    SQLClientInfoException sQLClientInfoException0 = new SQLClientInfoException();\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(sQLClientInfoException0);\n}",
    "testName" : "test1414"
  },
  "test2525" : {
    "methodSignature" : "public JsonDeserializer<Object> createBeanDeserializer(DeserializationContext ctxt, JavaType type, BeanDescription beanDesc) throws JsonMappingException",
    "methodName" : "createBeanDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    Deserializers.Base deserializers_Base0 = new Deserializers.Base();\n    DeserializerFactoryConfig deserializerFactoryConfig1 = deserializerFactoryConfig0.withAdditionalDeserializers(deserializers_Base0);\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig1);\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forDeserialization(pOJOPropertiesCollector0);\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    beanDeserializerFactory0.createBeanDeserializer(defaultDeserializationContext_Impl0, (JavaType) null, basicBeanDescription0);\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    TypeBindings typeBindings0 = TypeBindings.emptyBindings();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.OBJECT_AND_NON_CONCRETE;\n    objectMapper0.enableDefaultTypingAsProperty(objectMapper_DefaultTyping0, \"JSON\");\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(typeBindings0);\n}",
    "testName" : "test1515"
  },
  "test2626" : {
    "methodSignature" : "protected JsonDeserializer<?> _findCustomCollectionLikeDeserializer(CollectionLikeType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer) throws JsonMappingException",
    "methodName" : "_findCustomCollectionLikeDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<List> class0 = List.class;\n    Class<MapType> class1 = MapType.class;\n    CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class1);\n    ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(collectionType0, typeFactory0);\n    JsonTypeInfo.As jsonTypeInfo_As0 = JsonTypeInfo.As.WRAPPER_ARRAY;\n    AsPropertyTypeDeserializer asPropertyTypeDeserializer0 = new AsPropertyTypeDeserializer(collectionType0, classNameIdResolver0, \"java.com.fasterxl.jackson.databind.cfg.DeserializerFactoryConfig\", true, collectionType0, jsonTypeInfo_As0);\n    JsonDeserializer<?> jsonDeserializer0 = beanDeserializerFactory0._findCustomCollectionLikeDeserializer(collectionType0, (DeserializationConfig) null, (BeanDescription) null, asPropertyTypeDeserializer0, (JsonDeserializer<?>) null);\n}",
    "testName" : "test2626"
  },
  "test3030" : {
    "methodSignature" : "protected AnnotatedMethod _findJsonValueFor(DeserializationConfig config, JavaType enumType)",
    "methodName" : "_findJsonValueFor",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    AnnotatedMethod annotatedMethod0 = beanDeserializerFactory0._findJsonValueFor((DeserializationConfig) null, (JavaType) null);\n}",
    "testName" : "test3030"
  },
  "test2020" : {
    "methodSignature" : "public JsonDeserializer<?> createMapLikeDeserializer(DeserializationContext ctxt, MapLikeType type, final BeanDescription beanDesc) throws JsonMappingException",
    "methodName" : "createMapLikeDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<ConcurrentHashMap> class0 = ConcurrentHashMap.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class0, class0);\n    beanDeserializerFactory0.createMapLikeDeserializer(defaultDeserializationContext_Impl0, mapType0, (BeanDescription) null);\n}",
    "testName" : "test2020"
  },
  "test000" : {
    "methodSignature" : "public final DeserializerFactory withAdditionalDeserializers(Deserializers additional)",
    "methodName" : "withAdditionalDeserializers",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    beanDeserializerFactory0.withAdditionalDeserializers((Deserializers) null);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public ObjectReader readerForUpdating(Object valueToUpdate)",
    "methodName" : "readerForUpdating",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    int[] intArray0 = new int[3];\n    BatchUpdateException batchUpdateException0 = new BatchUpdateException(intArray0);\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating(batchUpdateException0);\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public boolean hasDeserializers()",
    "methodName" : "hasDeserializers",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DeserializerFactoryConfig deserializerFactoryConfig0 = beanDeserializerFactory0.getFactoryConfig();\n    deserializerFactoryConfig0.hasDeserializers();\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "protected void _reportUnwrappedCreatorProperty(DeserializationContext ctxt, BeanDescription beanDesc, AnnotatedParameter param) throws JsonMappingException",
    "methodName" : "_reportUnwrappedCreatorProperty",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());\n    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();\n    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();\n    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();\n    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();\n    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forDeserialization(pOJOPropertiesCollector0);\n    beanDeserializerFactory0._reportUnwrappedCreatorProperty(defaultDeserializationContext_Impl0, basicBeanDescription0, (AnnotatedParameter) null);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public final DeserializerFactory withAbstractTypeResolver(AbstractTypeResolver resolver)",
    "methodName" : "withAbstractTypeResolver",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    SimpleAbstractTypeResolver simpleAbstractTypeResolver0 = new SimpleAbstractTypeResolver();\n    DeserializerFactory deserializerFactory0 = beanDeserializerFactory0.withAbstractTypeResolver(simpleAbstractTypeResolver0);\n}",
    "testName" : "test088"
  },
  "test1818" : {
    "methodSignature" : "protected CollectionType _mapAbstractCollectionType(JavaType type, DeserializationConfig config)",
    "methodName" : "_mapAbstractCollectionType",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<BuilderBasedDeserializer> class0 = BuilderBasedDeserializer.class;\n    CollectionLikeType collectionLikeType0 = typeFactory0.constructRawCollectionLikeType(class0);\n    CollectionType collectionType0 = beanDeserializerFactory0._mapAbstractCollectionType(collectionLikeType0, (DeserializationConfig) null);\n}",
    "testName" : "test1818"
  },
  "test2929" : {
    "methodSignature" : "protected AnnotatedMethod _findJsonValueFor(DeserializationConfig config, JavaType enumType)",
    "methodName" : "_findJsonValueFor",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    Class<POJOPropertyBuilder> class0 = POJOPropertyBuilder.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    beanDeserializerFactory0._findJsonValueFor((DeserializationConfig) null, simpleType0);\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public JsonDeserializer<?> createCollectionLikeDeserializer(DeserializationContext ctxt, CollectionLikeType type, final BeanDescription beanDesc) throws JsonMappingException",
    "methodName" : "createCollectionLikeDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<ConcurrentHashMap> class0 = ConcurrentHashMap.class;\n    Class<List> class1 = List.class;\n    CollectionType collectionType0 = typeFactory0.constructCollectionType(class1, class0);\n    beanDeserializerFactory0.createCollectionLikeDeserializer(defaultDeserializationContext_Impl0, collectionType0, (BeanDescription) null);\n}",
    "testName" : "test1919"
  }
}