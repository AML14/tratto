project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
    AnnotatedMethod annotatedMethod0 = basicBeanDescription0.findMethod(""cpul-,B"", (Class<?>[]) null);
    assertNull(annotatedMethod0);
}",0,
project,0,test011,"public void test011() throws Throwable {
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
    TypeBindings typeBindings0 = basicBeanDescription0.bindingsForBeanType();
    assertEquals(0, typeBindings0.size());
}",0,
project,0,test022,"public void test022() throws Throwable {
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
    boolean boolean0 = basicBeanDescription0.removeProperty(""com.fasterxml.jackson.annotation.SimpleObjectIdResolver"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test033,"public void test033() throws Throwable {
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
    PropertyName propertyName0 = PropertyName.NO_NAME;
    boolean boolean0 = basicBeanDescription0.hasProperty(propertyName0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test044,"public void test044() throws Throwable {
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
    BeanPropertyDefinition beanPropertyDefinition0 = basicBeanDescription0.findProperty((PropertyName) null);
    assertNull(beanPropertyDefinition0);
}",0,
project,0,test055,"public void test055() throws Throwable {
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
    AnnotatedMethod annotatedMethod0 = basicBeanDescription0.findJsonValueMethod();
    assertNull(annotatedMethod0);
}",0,assertNotNull(annotatedMethod0)
project,0,test077,"public void test077() throws Throwable {
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
    Class<Float> class0 = Float.TYPE;
    // Undeclared exception!
    try {
        basicBeanDescription0.resolveType(class0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.introspect.BasicBeanDescription"", e);
    }
}",0,
project,0,test088,"public void test088() throws Throwable {
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
    JavaType javaType0 = basicBeanDescription0.resolveType((Type) null);
    assertNull(javaType0);
}",0,
project,0,test099,"public void test099() throws Throwable {
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
    AnnotatedMember annotatedMember0 = basicBeanDescription0.findAnySetterAccessor();
    assertNull(annotatedMember0);
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
    Object object0 = basicBeanDescription0.instantiateBean(false);
    assertNull(object0);
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
    JsonFormat.Value jsonFormat_Value0 = new JsonFormat.Value();
    // Undeclared exception!
    try {
        basicBeanDescription0.findExpectedFormat(jsonFormat_Value0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.introspect.BasicBeanDescription"", e);
    }
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;
    // Undeclared exception!
    try {
        basicBeanDescription0.findDefaultViews();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.introspect.BasicBeanDescription"", e);
    }
}",0,
project,0,test1515,"public void test1515() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    MapperFeature[] mapperFeatureArray0 = new MapperFeature[2];
    MapperFeature mapperFeature0 = MapperFeature.IGNORE_DUPLICATE_MODULE_REGISTRATIONS;
    mapperFeatureArray0[0] = mapperFeature0;
    MapperFeature mapperFeature1 = MapperFeature.DEFAULT_VIEW_INCLUSION;
    mapperFeatureArray0[1] = mapperFeature1;
    ObjectMapper objectMapper1 = objectMapper0.disable(mapperFeatureArray0);
    Class<POJOPropertyBuilder> class0 = POJOPropertyBuilder.class;
    boolean boolean0 = objectMapper1.canSerialize(class0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test1616,"public void test1616() throws Throwable {
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
    JsonInclude.Value jsonInclude_Value0 = BeanProperty.EMPTY_INCLUDE;
    JsonInclude.Value jsonInclude_Value1 = basicBeanDescription0.findPropertyInclusion(jsonInclude_Value0);
    assertSame(jsonInclude_Value1, jsonInclude_Value0);
}",0,
project,0,test1717,"public void test1717() throws Throwable {
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;
    AnnotatedMember annotatedMember0 = basicBeanDescription0.findAnyGetter();
    assertNull(annotatedMember0);
}",0,assertNotNull(annotatedMember0)
project,0,test1818,"public void test1818() throws Throwable {
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
    Map<String, AnnotatedMember> map0 = basicBeanDescription0.findBackReferenceProperties();
    assertNull(map0);
}",0,
project,0,test2121,"public void test2121() throws Throwable {
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;
    JsonPOJOBuilder.Value jsonPOJOBuilder_Value0 = basicBeanDescription0.findPOJOBuilderConfig();
    assertNull(jsonPOJOBuilder_Value0);
}",0,assertNotNull(jsonPOJOBuilder_Value0)
project,0,test2222,"public void test2222() throws Throwable {
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
    String string0 = basicBeanDescription0.findClassDescription();
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test2424,"public void test2424() throws Throwable {
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
    ArrayList<BeanPropertyDefinition> arrayList0 = new ArrayList<BeanPropertyDefinition>();
    basicBeanDescription0._properties = (List<BeanPropertyDefinition>) arrayList0;
    arrayList0.add((BeanPropertyDefinition) null);
    Vector<String> vector0 = new Vector<String>();
    // Undeclared exception!
    try {
        basicBeanDescription0._findPropertyFields(vector0, true);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.introspect.BasicBeanDescription"", e);
    }
}",0,
project,0,test2525,"public void test2525() throws Throwable {
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;
    Class<Integer> class0 = Integer.TYPE;
    // Undeclared exception!
    try {
        basicBeanDescription0._createConverter(class0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // AnnotationIntrospector returned Class int; expected Class<Converter>
        //
        verifyException(""com.fasterxml.jackson.databind.introspect.BasicBeanDescription"", e);
    }
}",0,
project,0,test2626,"public void test2626() throws Throwable {
    BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
    PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
    // Undeclared exception!
    try {
        basicBeanDescription0._createConverter(priorityQueue0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // AnnotationIntrospector returned Converter definition of type java.util.PriorityQueue; expected type Converter or Class<Converter> instead
        //
        verifyException(""com.fasterxml.jackson.databind.introspect.BasicBeanDescription"", e);
    }
}",0,
