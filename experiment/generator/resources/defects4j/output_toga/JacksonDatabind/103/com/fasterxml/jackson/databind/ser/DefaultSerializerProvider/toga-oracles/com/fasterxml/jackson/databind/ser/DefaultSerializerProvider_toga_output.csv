project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    AtomicReference<Throwable> atomicReference0 = new AtomicReference<Throwable>();
    Class<Object> class0 = Object.class;
    boolean boolean0 = objectMapper0.canSerialize(class0, atomicReference0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test022,"public void test022() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    AtomicReference<Throwable> atomicReference0 = new AtomicReference<Throwable>();
    MockIOException mockIOException0 = new MockIOException();
    IOException iOException0 = objectMapper0.updateValue((IOException) mockIOException0, (Object) atomicReference0);
    assertSame(iOException0, mockIOException0);
}",0,
project,0,test033,"public void test033() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    try {
        defaultSerializerProvider_Impl0.serializePolymorphic((JsonGenerator) null, (Object) null, (JavaType) null, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER, (TypeSerializer) null);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // [no message for java.lang.NullPointerException]
        //
        verifyException(""com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"", e);
    }
}",0,
project,0,test044,"public void test044() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    defaultSerializerProvider_Impl0.flushCachedSerializers();
}",0,
project,0,test055,"public void test055() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    int int0 = defaultSerializerProvider_Impl0.cachedSerializersCount();
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test066,"public void test066() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    TypeBindings typeBindings0 = TypeBindings.emptyBindings();
    Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);
    NioPathSerializer nioPathSerializer0 = new NioPathSerializer();
    try {
        defaultSerializerProvider_Impl0.serializePolymorphic((JsonGenerator) null, nioPathSerializer0, resolvedRecursiveType0, (JsonSerializer<Object>) null, (TypeSerializer) null);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Incompatible types: declared root type ([recursive type; UNRESOLVED) vs `com.fasterxml.jackson.databind.ext.NioPathSerializer`
        //
        verifyException(""com.fasterxml.jackson.databind.exc.InvalidDefinitionException"", e);
    }
}",0,
project,0,test077,"public void test077() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    NioPathSerializer nioPathSerializer0 = new NioPathSerializer();
    JsonSerializer<Object> jsonSerializer0 = defaultSerializerProvider_Impl0.serializerInstance((Annotated) null, nioPathSerializer0);
    assertFalse(jsonSerializer0.isUnwrappingSerializer());
}",0,
project,0,test088,"public void test088() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    JsonSerializer<Object> jsonSerializer0 = defaultSerializerProvider_Impl0.serializerInstance((Annotated) null, (Object) null);
    assertNull(jsonSerializer0);
}",0,
project,0,test099,"public void test099() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    Class<BeanSerializer> class0 = BeanSerializer.class;
    // Undeclared exception!
    try {
        defaultSerializerProvider_Impl0.serializerInstance((Annotated) null, class0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"", e);
    }
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    // Undeclared exception!
    try {
        defaultSerializerProvider_Impl0.serializerInstance((Annotated) null, defaultSerializerProvider_Impl0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"", e);
    }
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    Class<Object> class0 = Object.class;
    // Undeclared exception!
    try {
        defaultSerializerProvider_Impl0.serializerInstance((Annotated) null, class0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"", e);
    }
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    SerializationConfig serializationConfig0 = new SerializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, (ConfigOverrides) null);
    PropertyName propertyName0 = PropertyName.construct(""[eTPYX?JMnM/Yn$5"", ""[eTPYX?JMnM/Yn$5"");
    POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder(serializationConfig0, (AnnotationIntrospector) null, false, propertyName0);
    Class<Throwable> class0 = Throwable.class;
    // Undeclared exception!
    try {
        defaultSerializerProvider_Impl0.includeFilterInstance(pOJOPropertyBuilder0, class0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"", e);
    }
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    Object object0 = defaultSerializerProvider_Impl0.includeFilterInstance((BeanPropertyDefinition) null, (Class<?>) null);
    assertNull(object0);
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    boolean boolean0 = defaultSerializerProvider_Impl0.includeFilterSuppressNulls(defaultSerializerProvider_Impl0);
    assertFalse(boolean0);
}",0,assertFalse(boolean0)
project,0,test1515,"public void test1515() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    boolean boolean0 = defaultSerializerProvider_Impl0.includeFilterSuppressNulls((Object) null);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test1616,"public void test1616() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    HashMap<Object, WritableObjectId> hashMap0 = new HashMap<Object, WritableObjectId>();
    defaultSerializerProvider_Impl0._seenObjectIds = (Map<Object, WritableObjectId>) hashMap0;
    ObjectIdGenerators.StringIdGenerator objectIdGenerators_StringIdGenerator0 = new ObjectIdGenerators.StringIdGenerator();
    WritableObjectId writableObjectId0 = defaultSerializerProvider_Impl0.findObjectId(""<{`z!`9n["", objectIdGenerators_StringIdGenerator0);
    WritableObjectId writableObjectId1 = defaultSerializerProvider_Impl0.findObjectId((Object) null, objectIdGenerators_StringIdGenerator0);
    assertNotSame(writableObjectId1, writableObjectId0);
}",0,
project,0,test1717,"public void test1717() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    ObjectIdGenerators.StringIdGenerator objectIdGenerators_StringIdGenerator0 = new ObjectIdGenerators.StringIdGenerator();
    // Undeclared exception!
    try {
        defaultSerializerProvider_Impl0.findObjectId(objectIdGenerators_StringIdGenerator0, objectIdGenerators_StringIdGenerator0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.SerializerProvider"", e);
    }
}",0,
project,0,test1818,"public void test1818() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    HashMap<Object, WritableObjectId> hashMap0 = new HashMap<Object, WritableObjectId>();
    defaultSerializerProvider_Impl0._seenObjectIds = (Map<Object, WritableObjectId>) hashMap0;
    ObjectIdGenerators.StringIdGenerator objectIdGenerators_StringIdGenerator0 = new ObjectIdGenerators.StringIdGenerator();
    SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
    WritableObjectId writableObjectId0 = defaultSerializerProvider_Impl0.findObjectId(simpleObjectIdResolver0, objectIdGenerators_StringIdGenerator0);
    ObjectIdGenerators.IntSequenceGenerator objectIdGenerators_IntSequenceGenerator0 = new ObjectIdGenerators.IntSequenceGenerator();
    WritableObjectId writableObjectId1 = defaultSerializerProvider_Impl0.findObjectId(simpleObjectIdResolver0, objectIdGenerators_IntSequenceGenerator0);
    assertSame(writableObjectId1, writableObjectId0);
}",0,
project,0,test1919,"public void test1919() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    HashMap<Object, WritableObjectId> hashMap0 = new HashMap<Object, WritableObjectId>();
    defaultSerializerProvider_Impl0._seenObjectIds = (Map<Object, WritableObjectId>) hashMap0;
    ObjectIdGenerators.StringIdGenerator objectIdGenerators_StringIdGenerator0 = new ObjectIdGenerators.StringIdGenerator();
    WritableObjectId writableObjectId0 = defaultSerializerProvider_Impl0.findObjectId((Object) null, objectIdGenerators_StringIdGenerator0);
    ObjectIdGenerators.IntSequenceGenerator objectIdGenerators_IntSequenceGenerator0 = new ObjectIdGenerators.IntSequenceGenerator();
    WritableObjectId writableObjectId1 = defaultSerializerProvider_Impl0.findObjectId(objectIdGenerators_IntSequenceGenerator0, objectIdGenerators_IntSequenceGenerator0);
    assertNotSame(writableObjectId1, writableObjectId0);
}",0,
project,0,test2222,"public void test2222() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    AtomicReference<Throwable> atomicReference0 = new AtomicReference<Throwable>();
    Class<NioPathSerializer> class0 = NioPathSerializer.class;
    boolean boolean0 = objectMapper0.canSerialize(class0, atomicReference0);
    assertTrue(boolean0);
}",1,
project,0,test2323,"public void test2323() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    AtomicReference<Throwable> atomicReference0 = new AtomicReference<Throwable>();
    Class<ObjectIdGenerators.IntSequenceGenerator> class0 = ObjectIdGenerators.IntSequenceGenerator.class;
    boolean boolean0 = defaultSerializerProvider_Impl0.hasSerializerFor(class0, atomicReference0);
    assertFalse(boolean0);
}",0,
project,0,test2424,"public void test2424() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    Class<IOException> class0 = IOException.class;
    // Undeclared exception!
    try {
        defaultSerializerProvider_Impl0.hasSerializerFor(class0, (AtomicReference<Throwable>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.SerializerProvider"", e);
    }
}",0,
project,0,test2525,"public void test2525() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    try {
        defaultSerializerProvider_Impl0.serializeValue((JsonGenerator) null, (Object) null);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // [no message for java.lang.NullPointerException]
        //
        verifyException(""com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"", e);
    }
}",0,
project,0,test2626,"public void test2626() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    try {
        defaultSerializerProvider_Impl0.serializeValue((JsonGenerator) null, (Object) null, (JavaType) null);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // [no message for java.lang.NullPointerException]
        //
        verifyException(""com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"", e);
    }
}",0,
project,0,test2727,"public void test2727() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    PlaceholderForType placeholderForType0 = new PlaceholderForType(0);
    // Undeclared exception!
    try {
        defaultSerializerProvider_Impl0.serializeValue((JsonGenerator) null, (Object) placeholderForType0, (JavaType) placeholderForType0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.SerializerProvider"", e);
    }
}",0,
project,0,test2828,"public void test2828() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    TypeBindings typeBindings0 = TypeBindings.emptyBindings();
    Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);
    try {
        defaultSerializerProvider_Impl0.serializeValue((JsonGenerator) null, (Object) resolvedRecursiveType0, (JavaType) resolvedRecursiveType0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Incompatible types: declared root type ([recursive type; UNRESOLVED) vs `com.fasterxml.jackson.databind.type.ResolvedRecursiveType`
        //
        verifyException(""com.fasterxml.jackson.databind.exc.InvalidDefinitionException"", e);
    }
}",0,
project,0,test2929,"public void test2929() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    JavaType javaType0 = TypeFactory.unknownType();
    // Undeclared exception!
    try {
        defaultSerializerProvider_Impl0.serializeValue((JsonGenerator) null, (Object) defaultSerializerProvider_Impl0, javaType0, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"", e);
    }
}",0,
project,0,test3030,"public void test3030() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    try {
        defaultSerializerProvider_Impl0.serializeValue((JsonGenerator) null, (Object) null, (JavaType) null, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // [no message for java.lang.NullPointerException]
        //
        verifyException(""com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"", e);
    }
}",0,
project,0,test3131,"public void test3131() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    DeserializationFeature deserializationFeature0 = DeserializationFeature.READ_UNKNOWN_ENUM_VALUES_AS_NULL;
    // Undeclared exception!
    try {
        defaultSerializerProvider_Impl0.serializeValue((JsonGenerator) null, (Object) deserializationFeature0, (JavaType) null, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"", e);
    }
}",0,
project,0,test3232,"public void test3232() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    TypeBindings typeBindings0 = TypeBindings.emptyBindings();
    Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, typeBindings0);
    try {
        defaultSerializerProvider_Impl0.serializeValue((JsonGenerator) null, (Object) resolvedRecursiveType0, (JavaType) resolvedRecursiveType0, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Incompatible types: declared root type ([recursive type; UNRESOLVED) vs `com.fasterxml.jackson.databind.type.ResolvedRecursiveType`
        //
        verifyException(""com.fasterxml.jackson.databind.exc.InvalidDefinitionException"", e);
    }
}",0,
project,0,test3333,"public void test3333() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
    // Undeclared exception!
    try {
        defaultSerializerProvider_Impl0.serializeValue((JsonGenerator) null, (Object) simpleObjectIdResolver0, (JavaType) null, (JsonSerializer<Object>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.SerializerProvider"", e);
    }
}",0,
project,0,test3434,"public void test3434() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    DeserializationFeature deserializationFeature0 = DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS;
    // Undeclared exception!
    try {
        defaultSerializerProvider_Impl0.serializePolymorphic((JsonGenerator) null, deserializationFeature0, (JavaType) null, (JsonSerializer<Object>) null, (TypeSerializer) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.SerializerProvider"", e);
    }
}",0,
project,0,test3535,"public void test3535() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
    FilteringGeneratorDelegate filteringGeneratorDelegate0 = new FilteringGeneratorDelegate((JsonGenerator) null, tokenFilter0, true, true);
    JavaType javaType0 = TypeFactory.unknownType();
    CollectionLikeType collectionLikeType0 = CollectionLikeType.upgradeFrom(javaType0, javaType0);
    // Undeclared exception!
    try {
        defaultSerializerProvider_Impl0.serializePolymorphic(filteringGeneratorDelegate0, tokenFilter0, collectionLikeType0, (JsonSerializer<Object>) null, (TypeSerializer) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.SerializerProvider"", e);
    }
}",0,
project,0,test3636,"public void test3636() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    PlaceholderForType placeholderForType0 = new PlaceholderForType(0);
    // Undeclared exception!
    try {
        defaultSerializerProvider_Impl0.serializePolymorphic((JsonGenerator) null, placeholderForType0, placeholderForType0, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER, (TypeSerializer) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"", e);
    }
}",0,
project,0,test3737,"public void test3737() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    PlaceholderForType placeholderForType0 = new PlaceholderForType(24);
    // Undeclared exception!
    try {
        defaultSerializerProvider_Impl0.serializePolymorphic((JsonGenerator) null, placeholderForType0, placeholderForType0, (JsonSerializer<Object>) null, (TypeSerializer) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.SerializerProvider"", e);
    }
}",0,
project,0,test3838,"public void test3838() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    defaultSerializerProvider_Impl0.setNullValueSerializer(defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER);
    try {
        defaultSerializerProvider_Impl0._serializeNull((JsonGenerator) null);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Null key for a Map not allowed in JSON (use a converting NullKeySerializer?)
        //
        verifyException(""com.fasterxml.jackson.databind.JsonMappingException"", e);
    }
}",0,
project,0,test3939,"public void test3939() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base();
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<HashMap> class0 = HashMap.class;
    MapType mapType0 = typeFactory0.constructRawMapType(class0);
    // Undeclared exception!
    try {
        defaultSerializerProvider_Impl0.acceptJsonFormatVisitor(mapType0, jsonFormatVisitorWrapper_Base0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.SerializerProvider"", e);
    }
}",0,
project,0,test4040,"public void test4040() throws Throwable {
    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base();
    // Undeclared exception!
    try {
        defaultSerializerProvider_Impl0.acceptJsonFormatVisitor((JavaType) null, jsonFormatVisitorWrapper_Base0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // A class must be provided
        //
        verifyException(""com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"", e);
    }
}",0,
