com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test0022() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    Class<Module> class0 = Module.class;
    ObjectReader objectReader0 = objectMapper0.readerFor(class0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test0022() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    Class<Module> class0 = Module.class;
    ObjectReader objectReader0 = objectMapper0.readerFor(class0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test0033() throws Throwable {
    Class<LinkedList> class0 = LinkedList.class;
    Class<Float> class1 = Float.TYPE;
    List<Class<?>> list0 = ClassUtil.findRawSuperTypes(class0, class1, false);
    list0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/util/List.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test0066() throws Throwable {
    Class<MapType> class0 = MapType.class;
    List<Class<?>> list0 = ClassUtil.findSuperTypes(class0, class0);
    list0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/util/List.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test00910() throws Throwable {
    Class<Error> class0 = Error.class;
    Constructor<Error> constructor0 = ClassUtil.findConstructor(class0, true);
    ClassUtil.Ctor classUtil_Ctor0 = new ClassUtil.Ctor(constructor0);
    classUtil_Ctor0.getDeclaringClass();
    constructor0.isAccessible();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/reflect/AccessibleObject.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test01011() throws Throwable {
    Class<TypeIdResolver> class0 = TypeIdResolver.class;
    List<JavaType> list0 = ClassUtil.findSuperTypes((JavaType) null, class0, true);
    list0.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/util/List.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test01112() throws Throwable {
    Class<Float> class0 = Float.class;
    Class<MapLikeType> class1 = MapLikeType.class;
    TypeBindings typeBindings0 = TypeBindings.create(class1, (List<JavaType>) null);
    Class<ReferenceType> class2 = ReferenceType.class;
    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class2, typeBindings0);
    JavaType[] javaTypeArray0 = new JavaType[6];
    javaTypeArray0[2] = (JavaType) resolvedRecursiveType0;
    CollectionType collectionType0 = CollectionType.construct((Class<?>) class2, typeBindings0, (JavaType) resolvedRecursiveType0, javaTypeArray0, javaTypeArray0[2]);
    ReferenceType referenceType0 = ReferenceType.construct((Class<?>) class0, typeBindings0, (JavaType) collectionType0, javaTypeArray0, (JavaType) resolvedRecursiveType0);
    List<JavaType> list0 = ClassUtil.findSuperTypes((JavaType) referenceType0, (Class<?>) class0, true);
    list0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/util/List.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test01213() throws Throwable {
    Class<JsonMappingException> class0 = JsonMappingException.class;
    List<Class<?>> list0 = ClassUtil.findRawSuperTypes((Class<?>) null, class0, false);
    list0.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/util/List.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test01314() throws Throwable {
    Class<Integer> class0 = Integer.class;
    List<Class<?>> list0 = ClassUtil.findRawSuperTypes(class0, class0, false);
    list0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/util/List.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test01415() throws Throwable {
    Class<Object> class0 = Object.class;
    Class<IOException> class1 = IOException.class;
    List<Class<?>> list0 = ClassUtil.findRawSuperTypes(class0, class1, false);
    list0.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/util/List.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test01516() throws Throwable {
    Class<AccessPattern> class0 = AccessPattern.class;
    List<Class<?>> list0 = ClassUtil.findSuperClasses((Class<?>) null, class0, true);
    list0.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/util/List.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test01617() throws Throwable {
    Class<Float> class0 = Float.class;
    List<Class<?>> list0 = ClassUtil.findSuperClasses(class0, class0, true);
    list0.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/util/List.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test01718() throws Throwable {
    Class<Float> class0 = Float.class;
    Class<Annotation> class1 = Annotation.class;
    List<Class<?>> list0 = ClassUtil.findSuperClasses(class1, class0, false);
    list0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/util/List.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test01819() throws Throwable {
    Class<CollectionType> class0 = CollectionType.class;
    Class<Object> class1 = Object.class;
    List<Class<?>> list0 = ClassUtil.findSuperClasses(class0, class1, true);
    list0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/util/List.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test01920() throws Throwable {
    Class<AccessPattern> class0 = AccessPattern.class;
    TypeBindings typeBindings0 = TypeBindings.create(class0, (List<JavaType>) null);
    Class<Short> class1 = Short.class;
    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class1, typeBindings0);
    JavaType[] javaTypeArray0 = new JavaType[5];
    javaTypeArray0[4] = (JavaType) resolvedRecursiveType0;
    Class<Long> class2 = Long.class;
    ReferenceType referenceType0 = ReferenceType.construct(class2, typeBindings0, javaTypeArray0[2], javaTypeArray0, javaTypeArray0[4]);
    List<JavaType> list0 = ClassUtil.findSuperTypes((JavaType) referenceType0, (Class<?>) class1, false);
    list0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/util/List.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test02021() throws Throwable {
    PlaceholderForType placeholderForType0 = new PlaceholderForType(129);
    ObjectMapper objectMapper0 = new ObjectMapper();
    ObjectReader objectReader0 = objectMapper0.readerFor((JavaType) placeholderForType0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test02528() throws Throwable {
    Class<Integer> class0 = Integer.TYPE;
    boolean boolean0 = ClassUtil.isConcrete(class0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test02629() throws Throwable {
    Class<AccessibleObject> class0 = AccessibleObject.class;
    boolean boolean0 = ClassUtil.isConcrete(class0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test02731() throws Throwable {
    Class<AccessibleObject> class0 = AccessibleObject.class;
    Constructor<AccessibleObject> constructor0 = ClassUtil.findConstructor(class0, true);
    ClassUtil.Ctor classUtil_Ctor0 = new ClassUtil.Ctor(constructor0);
    boolean boolean0 = ClassUtil.isConcrete((Member) classUtil_Ctor0._ctor);
    constructor0.isAccessible();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/reflect/AccessibleObject.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test03842() throws Throwable {
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.copy();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/com/fasterxml/jackson/databind/deser/DefaultDeserializationContext/Impl.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test04852() throws Throwable {
    Character character0 = new Character(' ');
    Class<?> class0 = ClassUtil.classOf(character0);
    class0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test05054() throws Throwable {
    Class<AccessPattern> class0 = AccessPattern.class;
    TypeBindings typeBindings0 = TypeBindings.create(class0, (List<JavaType>) null);
    Class<Short> class1 = Short.class;
    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class1, typeBindings0);
    Class<?> class2 = ClassUtil.rawClass(resolvedRecursiveType0);
    class2.isPrimitive();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test06468() throws Throwable {
    Class<Short> class0 = Short.TYPE;
    String string0 = ClassUtil.nameOf(class0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test06569() throws Throwable {
    Class<AccessibleObject> class0 = AccessibleObject.class;
    Constructor<AccessibleObject> constructor0 = ClassUtil.findConstructor(class0, true);
    ClassUtil.Ctor classUtil_Ctor0 = new ClassUtil.Ctor(constructor0);
    PropertyName propertyName0 = PropertyName.USE_DEFAULT;
    PlaceholderForType placeholderForType0 = new PlaceholderForType((-10));
    ArrayType arrayType0 = ArrayType.construct((JavaType) placeholderForType0, (TypeBindings) null, (Object) classUtil_Ctor0, (Object) class0);
    CollectionLikeType collectionLikeType0 = CollectionLikeType.upgradeFrom(arrayType0, placeholderForType0);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    TypeResolutionContext.Basic typeResolutionContext_Basic0 = new TypeResolutionContext.Basic(typeFactory0, (TypeBindings) null);
    Class<Object> class1 = Object.class;
    VirtualAnnotatedMember virtualAnnotatedMember0 = new VirtualAnnotatedMember(typeResolutionContext_Basic0, class1, ""org.hibernate.proxy.java.lang.reflect.AccessibleObject"", arrayType0);
    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
    BeanProperty.Std beanProperty_Std0 = new BeanProperty.Std(propertyName0, collectionLikeType0, propertyName0, virtualAnnotatedMember0, propertyMetadata0);
    String string0 = ClassUtil.nameOf((Named) beanProperty_Std0);
    constructor0.isAccessible();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/reflect/AccessibleObject.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test07782() throws Throwable {
    Class<Boolean> class0 = Boolean.TYPE;
    Class<?> class1 = ClassUtil.wrapperType(class0);
    class1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test07883() throws Throwable {
    Class<Integer> class0 = Integer.TYPE;
    Class<?> class1 = ClassUtil.wrapperType(class0);
    class1.isEnum();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test07984() throws Throwable {
    Class<Long> class0 = Long.TYPE;
    Class<?> class1 = ClassUtil.wrapperType(class0);
    class1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test08085() throws Throwable {
    Class<Byte> class0 = Byte.TYPE;
    Class<?> class1 = ClassUtil.wrapperType(class0);
    class1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test08186() throws Throwable {
    Class<Double> class0 = Double.TYPE;
    Class<?> class1 = ClassUtil.wrapperType(class0);
    class1.isAnnotation();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test08287() throws Throwable {
    Class<Float> class0 = Float.TYPE;
    Class<?> class1 = ClassUtil.wrapperType(class0);
    class1.getModifiers();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test08388() throws Throwable {
    Class<Character> class0 = Character.TYPE;
    Class<?> class1 = ClassUtil.wrapperType(class0);
    class1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test08489() throws Throwable {
    Class<Short> class0 = Short.TYPE;
    Class<?> class1 = ClassUtil.wrapperType(class0);
    class1.getModifiers();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test08792() throws Throwable {
    Class<Integer> class0 = Integer.TYPE;
    Class<?> class1 = ClassUtil.primitiveType(class0);
    class1.isEnum();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test08894() throws Throwable {
    Class<Integer> class0 = Integer.class;
    Class<?> class1 = ClassUtil.primitiveType(class0);
    class1.isPrimitive();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test08995() throws Throwable {
    Class<Long> class0 = Long.class;
    Class<?> class1 = ClassUtil.primitiveType(class0);
    class1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test09098() throws Throwable {
    Class<Boolean> class0 = Boolean.class;
    Class<?> class1 = ClassUtil.primitiveType(class0);
    class1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test091100() throws Throwable {
    Class<Double> class0 = Double.class;
    Class<?> class1 = ClassUtil.primitiveType(class0);
    class1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test092101() throws Throwable {
    Class<Float> class0 = Float.class;
    Class<?> class1 = ClassUtil.primitiveType(class0);
    class1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test093103() throws Throwable {
    Class<Byte> class0 = Byte.class;
    Class<?> class1 = ClassUtil.primitiveType(class0);
    class1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test094105() throws Throwable {
    Class<Short> class0 = Short.class;
    Class<?> class1 = ClassUtil.primitiveType(class0);
    class1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test095107() throws Throwable {
    Class<Character> class0 = Character.class;
    Class<?> class1 = ClassUtil.primitiveType(class0);
    class1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test096109() throws Throwable {
    Class<NoClass> class0 = NoClass.class;
    Constructor<NoClass> constructor0 = ClassUtil.findConstructor(class0, true);
    ClassUtil.checkAndFixAccess((Member) constructor0, false);
    constructor0.isAccessible();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/reflect/AccessibleObject.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test097110() throws Throwable {
    Class<RuntimeException> class0 = RuntimeException.class;
    Constructor<RuntimeException> constructor0 = ClassUtil.findConstructor(class0, false);
    ClassUtil.checkAndFixAccess((Member) constructor0, false);
    constructor0.isAccessible();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/reflect/AccessibleObject.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test098111() throws Throwable {
    AccessPattern accessPattern0 = AccessPattern.CONSTANT;
    EnumSet<AccessPattern> enumSet0 = EnumSet.of(accessPattern0);
    Class<? extends Enum<?>> class0 = ClassUtil.findEnumType(enumSet0);
    class0.getModifiers();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test099112() throws Throwable {
    Class<AccessPattern> class0 = AccessPattern.class;
    EnumMap<AccessPattern, Void> enumMap0 = new EnumMap<AccessPattern, Void>(class0);
    Class<? extends Enum<?>> class1 = ClassUtil.findEnumType(enumMap0);
    class1.isSynthetic();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test100113() throws Throwable {
    Class<ClientInfoStatus> class0 = ClientInfoStatus.class;
    EnumMap<ClientInfoStatus, Object> enumMap0 = new EnumMap<ClientInfoStatus, Object>(class0);
    ClientInfoStatus clientInfoStatus0 = ClientInfoStatus.REASON_VALUE_INVALID;
    enumMap0.put(clientInfoStatus0, (Object) class0);
    Class<? extends Enum<?>> class1 = ClassUtil.findEnumType(enumMap0);
    class1.isEnum();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test101114() throws Throwable {
    Class<AccessPattern> class0 = AccessPattern.class;
    Class<? extends Enum<?>> class1 = ClassUtil.findEnumType(class0);
    class1.getModifiers();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test102115() throws Throwable {
    Class<InputStream> class0 = InputStream.class;
    Class<? extends Enum<?>> class1 = ClassUtil.findEnumType(class0);
    class1.getModifiers();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/Class.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test103116() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    Class<ClientInfoStatus> class0 = ClientInfoStatus.class;
    ObjectReader objectReader0 = objectMapper0.readerFor(class0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test103116() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    Class<ClientInfoStatus> class0 = ClientInfoStatus.class;
    ObjectReader objectReader0 = objectMapper0.readerFor(class0);
},ERROR,java.util.NoSuchElementException,[ERROR] - Multiple candidate methods/constructors found. Impossible to discern the focal method.
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test112125() throws Throwable {
    Class<IOException> class0 = IOException.class;
    Constructor<IOException> constructor0 = ClassUtil.findConstructor(class0, false);
    ClassUtil.Ctor classUtil_Ctor0 = new ClassUtil.Ctor(constructor0);
    classUtil_Ctor0.getDeclaredAnnotations();
    Annotation[] annotationArray0 = classUtil_Ctor0.getDeclaredAnnotations();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/com/fasterxml/jackson/databind/util/ClassUtil/Ctor.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test112126() throws Throwable {
    Class<IOException> class0 = IOException.class;
    Constructor<IOException> constructor0 = ClassUtil.findConstructor(class0, false);
    ClassUtil.Ctor classUtil_Ctor0 = new ClassUtil.Ctor(constructor0);
    classUtil_Ctor0.getDeclaredAnnotations();
    Annotation[] annotationArray0 = classUtil_Ctor0.getDeclaredAnnotations();
    constructor0.isAccessible();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/reflect/AccessibleObject.java
com.fasterxml.jackson.databind.util.ClassUtil,@Test(timeout = 4000)
public void test113127() throws Throwable {
    Class<String> class0 = String.class;
    Constructor<String> constructor0 = ClassUtil.findConstructor(class0, true);
    ClassUtil.Ctor classUtil_Ctor0 = new ClassUtil.Ctor(constructor0);
    classUtil_Ctor0.getParameterAnnotations();
    classUtil_Ctor0.getParameterAnnotations();
    constructor0.isAccessible();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_103b/src/main/java/java/lang/reflect/AccessibleObject.java
