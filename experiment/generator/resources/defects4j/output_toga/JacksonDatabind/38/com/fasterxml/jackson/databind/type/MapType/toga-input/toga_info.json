{
  "test1113" : {
    "methodSignature" : "public JavaType withContentType(JavaType contentType)",
    "methodName" : "withContentType",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1113() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<Map> class0 = Map.class;\n    Class<Object> class1 = Object.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class1, class1);\n    JavaType javaType0 = mapType0.withContentType(mapType0);\n}",
    "testName" : "test1113"
  },
  "test1421" : {
    "methodSignature" : "public MapType withKeyType(JavaType keyType)",
    "methodName" : "withKeyType",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1421() throws Throwable {\n    Class<Integer> class0 = Integer.class;\n    Class<Object> class1 = Object.class;\n    SimpleType simpleType0 = new SimpleType(class1);\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded((Class<?>) class0, (JavaType) simpleType0);\n    JavaType[] javaTypeArray0 = new JavaType[4];\n    javaTypeArray0[0] = (JavaType) simpleType0;\n    javaTypeArray0[1] = (JavaType) simpleType0;\n    javaTypeArray0[3] = (JavaType) simpleType0;\n    MapType mapType0 = MapType.construct((Class<?>) class0, typeBindings0, (JavaType) simpleType0, javaTypeArray0, javaTypeArray0[3], javaTypeArray0[1]);\n    MapType mapType1 = mapType0.withKeyType(javaTypeArray0[0]);\n}",
    "testName" : "test1421"
  },
  "test1114" : {
    "methodSignature" : "public abstract boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1114() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<Map> class0 = Map.class;\n    Class<Object> class1 = Object.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class1, class1);\n    JavaType javaType0 = mapType0.withContentType(mapType0);\n    javaType0.equals((Object) mapType0);\n}",
    "testName" : "test1114"
  },
  "test1422" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1422() throws Throwable {\n    Class<Integer> class0 = Integer.class;\n    Class<Object> class1 = Object.class;\n    SimpleType simpleType0 = new SimpleType(class1);\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded((Class<?>) class0, (JavaType) simpleType0);\n    JavaType[] javaTypeArray0 = new JavaType[4];\n    javaTypeArray0[0] = (JavaType) simpleType0;\n    javaTypeArray0[1] = (JavaType) simpleType0;\n    javaTypeArray0[3] = (JavaType) simpleType0;\n    MapType mapType0 = MapType.construct((Class<?>) class0, typeBindings0, (JavaType) simpleType0, javaTypeArray0, javaTypeArray0[3], javaTypeArray0[1]);\n    MapType mapType1 = mapType0.withKeyType(javaTypeArray0[0]);\n    mapType1.useStaticType();\n}",
    "testName" : "test1422"
  },
  "test1115" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1115() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<Map> class0 = Map.class;\n    Class<Object> class1 = Object.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class1, class1);\n    JavaType javaType0 = mapType0.withContentType(mapType0);\n    javaType0.useStaticType();\n}",
    "testName" : "test1115"
  },
  "test1011" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1011() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<Map> class0 = Map.class;\n    MapType mapType0 = typeFactory0.constructRawMapType(class0);\n    MapType mapType1 = mapType0.withStaticTyping();\n    MapType mapType2 = mapType1.withStaticTyping();\n    mapType0.useStaticType();\n}",
    "testName" : "test1011"
  },
  "test1012" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1012() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<Map> class0 = Map.class;\n    MapType mapType0 = typeFactory0.constructRawMapType(class0);\n    MapType mapType1 = mapType0.withStaticTyping();\n    MapType mapType2 = mapType1.withStaticTyping();\n    mapType2.useStaticType();\n}",
    "testName" : "test1012"
  },
  "test1320" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1320() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<Map> class0 = Map.class;\n    Class<Object> class1 = Object.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class1, class1);\n    MapType mapType1 = mapType0.withKeyType(mapType0);\n    mapType1.equals((Object) mapType0);\n}",
    "testName" : "test1320"
  },
  "test000" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Class<Object> class0 = Object.class;\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    MapType mapType0 = MapType.construct((Class<?>) class0, (JavaType) simpleType0, (JavaType) simpleType0);\n    Class<String> class1 = String.class;\n    JavaType javaType0 = mapType0._narrow(class1);\n    javaType0.useStaticType();\n}",
    "testName" : "test000"
  },
  "test011" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<Map> class0 = Map.class;\n    MapType mapType0 = typeFactory0.constructRawMapType(class0);\n    MapType mapType1 = mapType0.withContentValueHandler(class0);\n    mapType1.useStaticType();\n}",
    "testName" : "test011"
  },
  "test022" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Class<Object> class0 = Object.class;\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    MapType mapType0 = MapType.construct((Class<?>) class0, (JavaType) simpleType0, (JavaType) simpleType0);\n    TypeBindings typeBindings0 = TypeBindings.create(class0, (List<JavaType>) null);\n    JavaType[] javaTypeArray0 = new JavaType[5];\n    JavaType javaType0 = mapType0.refine(class0, typeBindings0, simpleType0, javaTypeArray0);\n    javaType0.useStaticType();\n}",
    "testName" : "test022"
  },
  "test033" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<Map> class0 = Map.class;\n    MapType mapType0 = typeFactory0.constructRawMapType(class0);\n    MapType mapType1 = mapType0.withTypeHandler(mapType0);\n    mapType1.useStaticType();\n}",
    "testName" : "test033"
  },
  "test044" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Class<Object> class0 = Object.class;\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    MapType mapType0 = MapType.construct((Class<?>) class0, (JavaType) simpleType0, (JavaType) simpleType0);\n    Integer integer0 = new Integer(48);\n    MapType mapType1 = mapType0.withKeyValueHandler(integer0);\n    mapType1.useStaticType();\n}",
    "testName" : "test044"
  },
  "test055" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<Map> class0 = Map.class;\n    Class<Object> class1 = Object.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class1, class1);\n    Object object0 = new Object();\n    MapType mapType1 = mapType0.withContentTypeHandler(object0);\n    mapType1.useStaticType();\n}",
    "testName" : "test055"
  },
  "test1319" : {
    "methodSignature" : "public MapType withKeyType(JavaType keyType)",
    "methodName" : "withKeyType",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1319() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<Map> class0 = Map.class;\n    Class<Object> class1 = Object.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class1, class1);\n    MapType mapType1 = mapType0.withKeyType(mapType0);\n}",
    "testName" : "test1319"
  },
  "test067" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067() throws Throwable {\n    Class<Integer> class0 = Integer.class;\n    Class<Object> class1 = Object.class;\n    SimpleType simpleType0 = new SimpleType(class1);\n    TypeBindings typeBindings0 = TypeBindings.createIfNeeded((Class<?>) class0, (JavaType) simpleType0);\n    JavaType[] javaTypeArray0 = new JavaType[4];\n    javaTypeArray0[1] = (JavaType) simpleType0;\n    javaTypeArray0[3] = (JavaType) simpleType0;\n    MapType mapType0 = MapType.construct((Class<?>) class0, typeBindings0, (JavaType) simpleType0, javaTypeArray0, javaTypeArray0[3], javaTypeArray0[1]);\n    String string0 = mapType0.getTypeName();\n    mapType0.useStaticType();\n}",
    "testName" : "test067"
  },
  "test078" : {
    "methodSignature" : "public final boolean isEnumType()",
    "methodName" : "isEnumType",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078() throws Throwable {\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    MapLikeType mapLikeType0 = MapLikeType.upgradeFrom(simpleType0, simpleType0, simpleType0);\n    MapType mapType0 = new MapType(mapLikeType0, mapLikeType0, mapLikeType0);\n    mapType0.isEnumType();\n}",
    "testName" : "test078"
  },
  "test089" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<Map> class0 = Map.class;\n    Class<Object> class1 = Object.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class1, class1);\n    MapType mapType1 = mapType0.withKeyTypeHandler(mapType0);\n    mapType1.useStaticType();\n}",
    "testName" : "test089"
  },
  "test1216" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1216() throws Throwable {\n    Class<Object> class0 = Object.class;\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    MapType mapType0 = MapType.construct((Class<?>) class0, (JavaType) simpleType0, (JavaType) simpleType0);\n    JavaType javaType0 = mapType0.withContentType(simpleType0);\n    javaType0.useStaticType();\n}",
    "testName" : "test1216"
  },
  "test1217" : {
    "methodSignature" : "public JavaType withContentType(JavaType contentType)",
    "methodName" : "withContentType",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1217() throws Throwable {\n    Class<Object> class0 = Object.class;\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_OBJECT;\n    MapType mapType0 = MapType.construct((Class<?>) class0, (JavaType) simpleType0, (JavaType) simpleType0);\n    JavaType javaType0 = mapType0.withContentType(simpleType0);\n}",
    "testName" : "test1217"
  },
  "test0910" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0910() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<Map> class0 = Map.class;\n    Class<Object> class1 = Object.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class1, class1);\n    MapType mapType1 = mapType0.withValueHandler(mapType0);\n    mapType1.useStaticType();\n}",
    "testName" : "test0910"
  },
  "test1318" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.MapType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1318() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<Map> class0 = Map.class;\n    Class<Object> class1 = Object.class;\n    MapType mapType0 = typeFactory0.constructMapType(class0, class1, class1);\n    MapType mapType1 = mapType0.withKeyType(mapType0);\n    mapType1.useStaticType();\n}",
    "testName" : "test1318"
  }
}