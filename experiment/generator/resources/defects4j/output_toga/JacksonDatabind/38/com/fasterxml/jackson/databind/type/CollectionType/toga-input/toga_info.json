{
  "test58" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test58() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<HashSet> class0 = HashSet.class;\n    Class<String> class1 = String.class;\n    CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class1);\n    Integer integer0 = new Integer(1);\n    CollectionType collectionType1 = collectionType0.withTypeHandler(integer0);\n    collectionType1.useStaticType();\n}",
    "testName" : "test58"
  },
  "test69" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.CollectionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test69() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<HashSet> class0 = HashSet.class;\n    CollectionType collectionType0 = typeFactory0.constructRawCollectionType(class0);\n    CollectionType collectionType1 = collectionType0.withContentTypeHandler((Object) null);\n    collectionType1.equals((Object) collectionType0);\n}",
    "testName" : "test69"
  },
  "test35" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<HashSet> class0 = HashSet.class;\n    CollectionType collectionType0 = typeFactory0.constructRawCollectionType(class0);\n    CollectionType collectionType1 = collectionType0.withContentValueHandler(typeFactory0);\n    collectionType1.useStaticType();\n}",
    "testName" : "test35"
  },
  "test46" : {
    "methodSignature" : "public CollectionType withStaticTyping()",
    "methodName" : "withStaticTyping",
    "className" : "com.fasterxml.jackson.databind.type.CollectionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46() throws Throwable {\n    Class<String> class0 = String.class;\n    TypeBindings typeBindings0 = TypeFactory.EMPTY_BINDINGS;\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_ENUM;\n    CollectionLikeType collectionLikeType0 = CollectionLikeType.upgradeFrom(simpleType0, simpleType0);\n    JavaType[] javaTypeArray0 = new JavaType[0];\n    ReferenceType referenceType0 = new ReferenceType(class0, typeBindings0, collectionLikeType0, javaTypeArray0, simpleType0, \";B#Cz\", \";B#Cz\", true);\n    CollectionType collectionType0 = new CollectionType(referenceType0, referenceType0);\n    CollectionType collectionType1 = collectionType0.withStaticTyping();\n}",
    "testName" : "test46"
  },
  "test57" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.CollectionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test57() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<HashSet> class0 = HashSet.class;\n    Class<String> class1 = String.class;\n    CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class1);\n    Integer integer0 = new Integer(1);\n    CollectionType collectionType1 = collectionType0.withTypeHandler(integer0);\n    collectionType1.equals((Object) collectionType0);\n}",
    "testName" : "test57"
  },
  "test01" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "com.fasterxml.jackson.databind.type.CollectionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01() throws Throwable {\n    Class<Object> class0 = Object.class;\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_ENUM;\n    CollectionType collectionType0 = CollectionType.construct((Class<?>) class0, (JavaType) simpleType0);\n    String string0 = collectionType0.toString();\n}",
    "testName" : "test01"
  },
  "test12" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<HashSet> class0 = HashSet.class;\n    CollectionType collectionType0 = typeFactory0.constructRawCollectionType(class0);\n    Class<Object> class1 = Object.class;\n    JavaType javaType0 = collectionType0._narrow(class1);\n    javaType0.useStaticType();\n}",
    "testName" : "test12"
  },
  "test23" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test23() throws Throwable {\n    Class<Object> class0 = Object.class;\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_ENUM;\n    CollectionType collectionType0 = CollectionType.construct((Class<?>) class0, (JavaType) simpleType0);\n    CollectionType collectionType1 = collectionType0.withValueHandler(class0);\n    collectionType1.useStaticType();\n}",
    "testName" : "test23"
  },
  "test34" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.CollectionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<HashSet> class0 = HashSet.class;\n    CollectionType collectionType0 = typeFactory0.constructRawCollectionType(class0);\n    CollectionType collectionType1 = collectionType0.withContentValueHandler(typeFactory0);\n    collectionType1.equals((Object) collectionType0);\n}",
    "testName" : "test34"
  },
  "test00" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00() throws Throwable {\n    Class<Object> class0 = Object.class;\n    SimpleType simpleType0 = TypeFactory.CORE_TYPE_ENUM;\n    CollectionType collectionType0 = CollectionType.construct((Class<?>) class0, (JavaType) simpleType0);\n    String string0 = collectionType0.toString();\n    collectionType0.useStaticType();\n}",
    "testName" : "test00"
  },
  "test712" : {
    "methodSignature" : "public abstract boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.CollectionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test712() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<HashSet> class0 = HashSet.class;\n    CollectionType collectionType0 = typeFactory0.constructRawCollectionType(class0);\n    JavaType javaType0 = collectionType0.withContentType(collectionType0);\n    javaType0.equals((Object) collectionType0);\n}",
    "testName" : "test712"
  },
  "test713" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test713() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<HashSet> class0 = HashSet.class;\n    CollectionType collectionType0 = typeFactory0.constructRawCollectionType(class0);\n    JavaType javaType0 = collectionType0.withContentType(collectionType0);\n    javaType0.useStaticType();\n}",
    "testName" : "test713"
  },
  "test711" : {
    "methodSignature" : "public JavaType withContentType(JavaType contentType)",
    "methodName" : "withContentType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test711() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<HashSet> class0 = HashSet.class;\n    CollectionType collectionType0 = typeFactory0.constructRawCollectionType(class0);\n    JavaType javaType0 = collectionType0.withContentType(collectionType0);\n}",
    "testName" : "test711"
  },
  "test610" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test610() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<HashSet> class0 = HashSet.class;\n    CollectionType collectionType0 = typeFactory0.constructRawCollectionType(class0);\n    CollectionType collectionType1 = collectionType0.withContentTypeHandler((Object) null);\n    collectionType1.useStaticType();\n}",
    "testName" : "test610"
  },
  "test918" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "com.fasterxml.jackson.databind.type.CollectionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test918() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<HashSet> class0 = HashSet.class;\n    CollectionType collectionType0 = typeFactory0.constructRawCollectionType(class0);\n    CollectionType collectionType1 = collectionType0.withStaticTyping();\n    collectionType1.equals((Object) collectionType0);\n}",
    "testName" : "test918"
  },
  "test916" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test916() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<HashSet> class0 = HashSet.class;\n    CollectionType collectionType0 = typeFactory0.constructRawCollectionType(class0);\n    CollectionType collectionType1 = collectionType0.withStaticTyping();\n    collectionType0.useStaticType();\n}",
    "testName" : "test916"
  },
  "test917" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test917() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<HashSet> class0 = HashSet.class;\n    CollectionType collectionType0 = typeFactory0.constructRawCollectionType(class0);\n    CollectionType collectionType1 = collectionType0.withStaticTyping();\n    collectionType1.useStaticType();\n}",
    "testName" : "test917"
  },
  "test815" : {
    "methodSignature" : "public final boolean useStaticType()",
    "methodName" : "useStaticType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test815() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<HashSet> class0 = HashSet.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    MapType mapType0 = new MapType(simpleType0, simpleType0, simpleType0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(mapType0, mapType0);\n    CollectionType collectionType0 = typeFactory0.constructCollectionType((Class<? extends Collection>) class0, (JavaType) referenceType0);\n    JavaType javaType0 = collectionType0.withContentType(referenceType0);\n    javaType0.useStaticType();\n}",
    "testName" : "test815"
  },
  "test814" : {
    "methodSignature" : "public JavaType withContentType(JavaType contentType)",
    "methodName" : "withContentType",
    "className" : "com.fasterxml.jackson.databind.type.CollectionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test814() throws Throwable {\n    TypeFactory typeFactory0 = TypeFactory.instance;\n    Class<HashSet> class0 = HashSet.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    MapType mapType0 = new MapType(simpleType0, simpleType0, simpleType0);\n    ReferenceType referenceType0 = ReferenceType.upgradeFrom(mapType0, mapType0);\n    CollectionType collectionType0 = typeFactory0.constructCollectionType((Class<? extends Collection>) class0, (JavaType) referenceType0);\n    JavaType javaType0 = collectionType0.withContentType(referenceType0);\n}",
    "testName" : "test814"
  }
}