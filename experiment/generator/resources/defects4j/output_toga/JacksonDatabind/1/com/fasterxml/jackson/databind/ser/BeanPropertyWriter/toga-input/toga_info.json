{
  "test00" : {
    "methodSignature" : "public final int mixInCount()",
    "methodName" : "mixInCount",
    "className" : "com.fasterxml.jackson.databind.ser.BeanPropertyWriter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<CoreXMLSerializers.XMLGregorianCalendarSerializer> class0 = CoreXMLSerializers.XMLGregorianCalendarSerializer.class;\n    JsonObjectFormatVisitor.Base jsonObjectFormatVisitor_Base0 = new JsonObjectFormatVisitor.Base((SerializerProvider) null);\n    JsonFormatVisitorWrapper jsonFormatVisitorWrapper0 = mock(JsonFormatVisitorWrapper.class, new ViolatedAssumptionAnswer());\n    doReturn(jsonObjectFormatVisitor_Base0).when(jsonFormatVisitorWrapper0).expectObjectFormat(any(com.fasterxml.jackson.databind.JavaType.class));\n    objectMapper0.acceptJsonFormatVisitor(class0, jsonFormatVisitorWrapper0);\n    objectMapper0.mixInCount();\n}",
    "testName" : "test00"
  },
  "test33" : {
    "methodSignature" : "public boolean hasPrefetchedSerializer()",
    "methodName" : "hasPrefetchedSerializer",
    "className" : "com.fasterxml.jackson.databind.ser.BeanPropertyWriter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<JsonDeserializer> class0 = JsonDeserializer.class;\n    ObjectWriter objectWriter0 = objectMapper0.writerWithType(class0);\n    objectWriter0.hasPrefetchedSerializer();\n}",
    "testName" : "test33"
  },
  "test66" : {
    "methodSignature" : "public void writeValue(File resultFile, Object value) throws IOException, JsonGenerationException, JsonMappingException",
    "methodName" : "writeValue",
    "className" : "com.fasterxml.jackson.databind.ser.BeanPropertyWriter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test66() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.NON_EMPTY;\n    objectMapper0.setSerializationInclusion(jsonInclude_Include0);\n    MockFile mockFile0 = new MockFile(\" out of \", \" out of \");\n    DateFormat dateFormat0 = MockDateFormat.getInstance();\n    objectMapper0.writeValue((File) mockFile0, (Object) dateFormat0);\n}",
    "testName" : "test66"
  }
}