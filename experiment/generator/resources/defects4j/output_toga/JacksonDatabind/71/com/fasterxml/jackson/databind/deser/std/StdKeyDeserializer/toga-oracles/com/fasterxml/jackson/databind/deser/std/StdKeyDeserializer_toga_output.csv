project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test011,"public void test011() throws Throwable {
    Class<URL> class0 = URL.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""\""aS"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test022,"public void test022() throws Throwable {
    Class<Byte> class0 = Byte.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    Object object0 = stdKeyDeserializer0.deserializeKey(""6"", (DeserializationContext) null);
    assertNotNull(object0);
}",0,assertNotNull(object0)
project,0,test034,"public void test034() throws Throwable {
    Class<Long> class0 = Long.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""A^WsIn2+b`ow<"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test045,"public void test045() throws Throwable {
    Class<Double> class0 = Double.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""y,x:cRCbsP;n"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test056,"public void test056() throws Throwable {
    Class<Calendar> class0 = Calendar.class;
    StdKeyDeserializer.StringKD stdKeyDeserializer_StringKD0 = StdKeyDeserializer.StringKD.forType(class0);
    Class<?> class1 = stdKeyDeserializer_StringKD0.getKeyClass();
    assertNotNull(class1);
}",0,"assertEquals(class0, class1)"
project,0,test0911,"public void test0911() throws Throwable {
    Class<String> class0 = String.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    assertEquals(8, StdKeyDeserializer.TYPE_DOUBLE);
}",0,
project,0,test1012,"public void test1012() throws Throwable {
    Class<Object> class0 = Object.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    assertEquals(4, StdKeyDeserializer.TYPE_CHAR);
}",0,
project,0,test1214,"public void test1214() throws Throwable {
    Class<Integer> class0 = Integer.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    try {
        stdKeyDeserializer0._parse(""unable to parse key as Class"", (DeserializationContext) null);
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // For input string: \""unable to parse key as Class\""
        //
        verifyException(""java.lang.NumberFormatException"", e);
    }
}",0,
project,0,test1315,"public void test1315() throws Throwable {
    Class<Date> class0 = Date.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test1416,"public void test1416() throws Throwable {
    Class<Calendar> class0 = Calendar.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""6"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test1517,"public void test1517() throws Throwable {
    Class<Boolean> class0 = Boolean.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""}1d3(?=D%i"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test1618,"public void test1618() throws Throwable {
    Class<Character> class0 = Character.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    assertNotNull(stdKeyDeserializer0);
}",0,
project,0,test1619,"public void test1619() throws Throwable {
    Class<Character> class0 = Character.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    Object object0 = stdKeyDeserializer0.deserializeKey(""h"", (DeserializationContext) null);
    assertNotNull(object0);
}",0,
project,0,test1721,"public void test1721() throws Throwable {
    Class<Short> class0 = Short.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    Object object0 = stdKeyDeserializer0.deserializeKey(""6"", (DeserializationContext) null);
    assertEquals((short) 6, object0);
}",0,assertNotNull(object0)
project,0,test1823,"public void test1823() throws Throwable {
    Class<Float> class0 = Float.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey("":00.000"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test1924,"public void test1924() throws Throwable {
    Class<URI> class0 = URI.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    try {
        stdKeyDeserializer0._parse(""QZ+AE{Dx@ko6i"", (DeserializationContext) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal character in path at index 5: QZ+AE{Dx@ko6i
        //
        verifyException(""java.net.URI"", e);
    }
}",0,
project,0,test2126,"public void test2126() throws Throwable {
    Class<Currency> class0 = Currency.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    Object object0 = stdKeyDeserializer0.deserializeKey((String) null, (DeserializationContext) null);
    assertNull(object0);
}",0,assertNotNull(object0)
project,0,test2227,"public void test2227() throws Throwable {
    Class<ShortNode> class0 = ShortNode.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    assertNull(stdKeyDeserializer0);
}",0,
project,0,test2328,"public void test2328() throws Throwable {
    Class<Long> class0 = Long.class;
    StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer((-3087), class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""true"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test2429,"public void test2429() throws Throwable {
    Class<TextStyle> class0 = TextStyle.class;
    StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer((-2029), class0);
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, (SubtypeResolver) null, (SimpleMixInResolver) null, rootNameLookup0);
    InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();
    DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, (JsonParser) null, injectableValues_Std0);
    try {
        stdKeyDeserializer0.deserializeKey(""com.fasterxmljackson.databind.util.ArrayIterator"", defaultDeserializationContext0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Can not construct Map key of type java.time.format.TextStyle from String (\""com.fasterxmljackson.databind.util.ArrayIterator\""): not a valid representation
        //
        verifyException(""com.fasterxml.jackson.databind.exc.InvalidFormatException"", e);
    }
}",0,
project,0,test2530,"public void test2530() throws Throwable {
    Class<Calendar> class0 = Calendar.class;
    StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer(15, class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""L"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test2631,"public void test2631() throws Throwable {
    Class<Currency> class0 = Currency.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""coN.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test2732,"public void test2732() throws Throwable {
    Class<Boolean> class0 = Boolean.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    Object object0 = stdKeyDeserializer0.deserializeKey(""true"", defaultDeserializationContext_Impl0);
    assertEquals(true, object0);
}",0,assertFalse(object0)
project,0,test2833,"public void test2833() throws Throwable {
    Class<Boolean> class0 = Boolean.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    Object object0 = stdKeyDeserializer0._parse(""false"", (DeserializationContext) null);
    assertNotNull(object0);
}",0,
project,0,test2935,"public void test2935() throws Throwable {
    Class<Byte> class0 = Byte.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""-685"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test3036,"public void test3036() throws Throwable {
    Class<Byte> class0 = Byte.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    // Undeclared exception!
    try {
        stdKeyDeserializer0.deserializeKey(""3412"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test3137,"public void test3137() throws Throwable {
    Class<Short> class0 = Short.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    try {
        stdKeyDeserializer0._parse(""-36285"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test3238,"public void test3238() throws Throwable {
    Class<Short> class0 = Short.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    try {
        stdKeyDeserializer0._parse(""93685"", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test3339,"public void test3339() throws Throwable {
    Class<Character> class0 = Character.class;
    StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    try {
        stdKeyDeserializer0._parse("""", (DeserializationContext) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer"", e);
    }
}",0,
project,0,test3642,"public void test3642() throws Throwable {
    Class<Float> class0 = Float.class;
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    ShortNode shortNode0 = ShortNode.valueOf((short) 117);
    JsonDeserializer<ShortNode> jsonDeserializer0 = (JsonDeserializer<ShortNode>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
    doReturn(shortNode0).when(jsonDeserializer0).deserialize(any(com.fasterxml.jackson.core.JsonParser.class), any(com.fasterxml.jackson.databind.DeserializationContext.class));
    StdKeyDeserializer.DelegatingKD stdKeyDeserializer_DelegatingKD0 = new StdKeyDeserializer.DelegatingKD(class0, jsonDeserializer0);
    ShortNode shortNode1 = (ShortNode) stdKeyDeserializer_DelegatingKD0.deserializeKey(""73"", defaultDeserializationContext_Impl0);
    assertEquals((short) 117, shortNode1.shortValue());
}",0,assertNotNull(shortNode1.shortValue())
project,0,test3743,"public void test3743() throws Throwable {
    Class<TextStyle> class0 = TextStyle.class;
    EnumResolver enumResolver0 = EnumResolver.constructUnsafeUsingToString(class0);
    StdKeyDeserializer.EnumKD stdKeyDeserializer_EnumKD0 = new StdKeyDeserializer.EnumKD(enumResolver0, (AnnotatedMethod) null);
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);
    InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, (JsonParser) null, injectableValues_Std0);
    try {
        stdKeyDeserializer_EnumKD0.deserializeKey(""&a^r$^H.RvI'Y5Y"", defaultDeserializationContext0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Can not construct Map key of type java.time.format.TextStyle from String (\""&a^r$^H.RvI'Y5Y\""): not a valid representation: Can not construct Map key of type java.time.format.TextStyle from String (\""&a^r$^H.RvI'Y5Y\""): not one of values excepted for Enum class: [SHORT_STANDALONE, NARROW_STANDALONE, FULL_STANDALONE, FULL, NARROW, SHORT]
        //
        verifyException(""com.fasterxml.jackson.databind.exc.InvalidFormatException"", e);
    }
}",0,
