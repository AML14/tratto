project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.ALWAYS;
    annotationIntrospector1.findSerializationInclusionForContent((Annotated) null, jsonInclude_Include0);
    AnnotationIntrospector.nopInstance();
    JavaType javaType0 = null;
    ReferenceType referenceType0 = ReferenceType.upgradeFrom((JavaType) null, (JavaType) null);
    // Undeclared exception!
    try {
        referenceType0.withValueHandler(javaType0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Missing referencedType
        //
        verifyException(""com.fasterxml.jackson.databind.type.ReferenceType"", e);
    }
}",0,
project,0,test011,"public void test011() throws Throwable {
    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = (JacksonAnnotationIntrospector) ObjectMapper.DEFAULT_ANNOTATION_INTROSPECTOR;
    jacksonAnnotationIntrospector0.findPropertyInclusion((Annotated) null);
}",1,
project,0,test055,"public void test055() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    Class<ObjectIdResolver> class0 = ObjectIdResolver.class;
    objectMapper0.readerFor(class0);
    AnnotationIntrospector.nopInstance();
}",1,
project,0,test066,"public void test066() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    objectMapper0.getSerializerProviderInstance();
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    objectMapper0.setAnnotationIntrospectors(annotationIntrospector0, annotationIntrospector0);
    Class<AnnotationIntrospector> class0 = AnnotationIntrospector.class;
    objectMapper0.readerFor(class0);
    AnnotationIntrospector.nopInstance();
}",1,
project,0,test077,"public void test077() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.findKeyDeserializer((Annotated) null);
}",0,
project,0,test088,"public void test088() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.findDeserializer((Annotated) null);
    AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();
    jsonLocationInstantiator0.getDefaultCreator();
    annotationIntrospector0.findKeyDeserializer((Annotated) null);
    annotationIntrospector0.findDeserializer((Annotated) null);
    annotationIntrospector0.findReferenceType((AnnotatedMember) null);
    Class<Annotation>[] classArray0 = (Class<Annotation>[]) Array.newInstance(Class.class, 9);
    Class<Annotation> class0 = Annotation.class;
    classArray0[4] = class0;
    classArray0[6] = classArray0[2];
    classArray0[7] = class0;
    classArray0[8] = classArray0[6];
    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.NON_EMPTY;
    annotationIntrospector0.findSerializationInclusion((Annotated) null, jsonInclude_Include0);
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = (JacksonAnnotationIntrospector) ObjectMapper.DEFAULT_ANNOTATION_INTROSPECTOR;
    jacksonAnnotationIntrospector0.hasAnySetterAnnotation((AnnotatedMethod) null);
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.allIntrospectors();
    annotationIntrospector0.findClassDescription((AnnotatedClass) null);
}",0,
project,0,test1515,"public void test1515() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();
    jsonLocationInstantiator0.getArrayDelegateCreator();
    annotationIntrospector0.findInjectableValueId((AnnotatedMember) null);
}",0,
project,0,test1616,"public void test1616() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();
    jsonLocationInstantiator0.getArrayDelegateCreator();
    annotationIntrospector0.findObjectIdInfo((Annotated) null);
}",0,
project,0,test1717,"public void test1717() throws Throwable {
    AnnotationIntrospector.nopInstance();
    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();
    jsonLocationInstantiator0.getArrayDelegateCreator();
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.findInjectableValueId((AnnotatedMember) null);
    annotationIntrospector0.hasRequiredMarker((AnnotatedMember) null);
}",0,
project,0,test1818,"public void test1818() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base();
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
    objectMapper0.setAnnotationIntrospectors(annotationIntrospector1, annotationIntrospector1);
    Class<Annotation> class0 = Annotation.class;
    objectMapper0.acceptJsonFormatVisitor((Class<?>) class0, (JsonFormatVisitorWrapper) jsonFormatVisitorWrapper_Base0);
}",1,
project,0,test2020,"public void test2020() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    JacksonAnnotationIntrospector jacksonAnnotationIntrospector0 = (JacksonAnnotationIntrospector) ObjectMapper.DEFAULT_ANNOTATION_INTROSPECTOR;
    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();
    jsonLocationInstantiator0.getWithArgsCreator();
    annotationIntrospector0.isTypeId((AnnotatedMember) null);
    PropertyName propertyName0 = PropertyName.NO_NAME;
    Class<Integer> class0 = Integer.class;
    Class<ObjectIdGenerators.IntSequenceGenerator> class1 = ObjectIdGenerators.IntSequenceGenerator.class;
    Class<SimpleObjectIdResolver> class2 = SimpleObjectIdResolver.class;
    ObjectIdInfo objectIdInfo0 = new ObjectIdInfo(propertyName0, class0, class1, class2);
    annotationIntrospector0.findObjectReferenceInfo((Annotated) null, objectIdInfo0);
}",0,
project,0,test2121,"public void test2121() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.version();
    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();
    AnnotationIntrospector.ReferenceProperty annotationIntrospector_ReferenceProperty0 = AnnotationIntrospector.ReferenceProperty.managed("""");
    jsonLocationInstantiator0.getDefaultCreator();
    annotationIntrospector0.findPropertyInclusion((Annotated) null);
    annotationIntrospector_ReferenceProperty0.getName();
    annotationIntrospector0.findDeserializer((Annotated) null);
    annotationIntrospector0.findNameForSerialization((Annotated) null);
}",0,
project,0,test2222,"public void test2222() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    MapperFeature[] mapperFeatureArray0 = new MapperFeature[2];
    MapperFeature mapperFeature0 = MapperFeature.USE_ANNOTATIONS;
    mapperFeatureArray0[0] = mapperFeature0;
    MapperFeature mapperFeature1 = MapperFeature.AUTO_DETECT_SETTERS;
    mapperFeatureArray0[1] = mapperFeature1;
    objectMapper0.disable(mapperFeatureArray0);
    Class<BeanPropertyWriter> class0 = BeanPropertyWriter.class;
    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base();
    objectMapper0.acceptJsonFormatVisitor((Class<?>) class0, (JsonFormatVisitorWrapper) jsonFormatVisitorWrapper_Base0);
    AnnotationIntrospector.nopInstance();
}",1,
project,0,test2323,"public void test2323() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.findPropertyInclusion((Annotated) null);
}",0,
project,0,test2424,"public void test2424() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.findSubtypes((Annotated) null);
}",0,
project,0,test2525,"public void test2525() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();
    AnnotationMap annotationMap0 = new AnnotationMap();
    Class<Annotation> class0 = Annotation.class;
    annotationMap0.get(class0);
    annotationIntrospector0.isAnnotationBundle((Annotation) null);
}",0,
project,0,test2626,"public void test2626() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();
    jsonLocationInstantiator0.getArrayDelegateCreator();
    Object object0 = new Object();
    annotationIntrospector0.findSerializer((Annotated) null);
}",0,
project,0,test2727,"public void test2727() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.findPropertyIndex((Annotated) null);
    annotationIntrospector0.findFilterId((Annotated) null);
}",0,
project,0,test2828,"public void test2828() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    Class<BeanPropertyWriter> class0 = BeanPropertyWriter.class;
    objectMapper0.readerFor(class0);
    AnnotationIntrospector.nopInstance();
}",1,
project,0,test2929,"public void test2929() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.findKeySerializer((Annotated) null);
}",0,
project,0,test3333,"public void test3333() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();
    jsonLocationInstantiator0.getWithArgsCreator();
    annotationIntrospector0.findUnwrappingNameTransformer((AnnotatedMember) null);
}",0,
project,0,test3434,"public void test3434() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();
    jsonLocationInstantiator0.getArrayDelegateCreator();
    annotationIntrospector0.hasRequiredMarker((AnnotatedMember) null);
    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.ALWAYS;
    annotationIntrospector0.findSerializationInclusion((Annotated) null, jsonInclude_Include0);
}",0,
project,0,test3535,"public void test3535() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();
    jsonLocationInstantiator0.getArrayDelegateCreator();
    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.NON_ABSENT;
    annotationIntrospector0.findPropertyDescription((Annotated) null);
}",0,
project,0,test3737,"public void test3737() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.findViews((Annotated) null);
}",0,
project,0,test3838,"public void test3838() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.findFormat((Annotated) null);
    annotationIntrospector0.findImplicitPropertyName((AnnotatedMember) null);
    annotationIntrospector0.findViews((Annotated) null);
}",0,
project,0,test3939,"public void test3939() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.findFormat((Annotated) null);
}",0,
project,0,test4040,"public void test4040() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.findSerializationPropertyOrder((AnnotatedClass) null);
}",0,
project,0,test4141,"public void test4141() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.findPOJOBuilderConfig((AnnotatedClass) null);
}",0,
project,0,test4242,"public void test4242() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.findNullSerializer((Annotated) null);
}",0,
project,0,test4343,"public void test4343() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();
    jsonLocationInstantiator0.getWithArgsCreator();
    annotationIntrospector0.findSerializationConverter((Annotated) null);
}",0,
project,0,test4545,"public void test4545() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    defaultDeserializationContext_Impl0.getConfig();
    Class<ObjectIdResolver> class0 = ObjectIdResolver.class;
    StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator((DeserializationConfig) null, class0);
    stdValueInstantiator0.getDelegateCreator();
    annotationIntrospector0.findDeserializationContentConverter((AnnotatedMember) null);
}",0,
project,0,test4646,"public void test4646() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();
    jsonLocationInstantiator0.getDefaultCreator();
    annotationIntrospector0.findDeserializationType((Annotated) null, (JavaType) null);
}",0,
project,0,test4747,"public void test4747() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    POJOPropertiesCollector pOJOPropertiesCollector0 = mock(POJOPropertiesCollector.class, new ViolatedAssumptionAnswer());
    doReturn((AnnotatedClass) null).when(pOJOPropertiesCollector0).getClassDef();
    doReturn((MapperConfig) null).when(pOJOPropertiesCollector0).getConfig();
    doReturn((ObjectIdInfo) null).when(pOJOPropertiesCollector0).getObjectIdInfo();
    doReturn((JavaType) null).when(pOJOPropertiesCollector0).getType();
    BasicBeanDescription basicBeanDescription0 = BasicBeanDescription.forSerialization(pOJOPropertiesCollector0);
    BeanSerializerBuilder beanSerializerBuilder0 = new BeanSerializerBuilder(basicBeanDescription0);
    beanSerializerBuilder0.getClassInfo();
    annotationIntrospector0.findRootName((AnnotatedClass) null);
    annotationIntrospector0.findValueInstantiator((AnnotatedClass) null);
}",0,
project,0,test4848,"public void test4848() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.findContentDeserializer((Annotated) null);
}",0,
project,0,test4949,"public void test4949() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();
    jsonLocationInstantiator0.getWithArgsCreator();
    annotationIntrospector0.findPropertyAccess((Annotated) null);
}",0,
project,0,test5050,"public void test5050() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();
    jsonLocationInstantiator0.getWithArgsCreator();
    annotationIntrospector0.findNameForDeserialization((Annotated) null);
}",0,
project,0,test5151,"public void test5151() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.findContentSerializer((Annotated) null);
}",0,
project,0,test5252,"public void test5252() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.version();
    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();
    jsonLocationInstantiator0.getArrayDelegateCreator();
    annotationIntrospector0.findSerializationContentConverter((AnnotatedMember) null);
}",0,
project,0,test5353,"public void test5353() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.findPOJOBuilder((AnnotatedClass) null);
}",0,
project,0,test5454,"public void test5454() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.findClassDescription((AnnotatedClass) null);
    annotationIntrospector0.findNamingStrategy((AnnotatedClass) null);
}",0,
project,0,test5555,"public void test5555() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    AnnotationIntrospector.ReferenceProperty.Type.values();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, (SubtypeResolver) null, simpleMixInResolver0, rootNameLookup0);
    Class<AnnotationIntrospector> class0 = AnnotationIntrospector.class;
    StdValueInstantiator stdValueInstantiator0 = new StdValueInstantiator(deserializationConfig0, class0);
    stdValueInstantiator0.getDelegateCreator();
    annotationIntrospector0.findPropertyDefaultValue((Annotated) null);
}",0,
project,0,test5656,"public void test5656() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();
    jsonLocationInstantiator0.getDelegateCreator();
    annotationIntrospector0.findDeserializationKeyType((Annotated) null, (JavaType) null);
}",0,
project,0,test5757,"public void test5757() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();
    jsonLocationInstantiator0.getArrayDelegateCreator();
    annotationIntrospector0.findDeserializationConverter((Annotated) null);
}",0,
project,0,test5858,"public void test5858() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.hasAnySetterAnnotation((AnnotatedMethod) null);
}",0,
project,0,test5959,"public void test5959() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.findEnumValue((Enum<?>) null);
}",0,
project,0,test6060,"public void test6060() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    Collection<AnnotationIntrospector> collection0 = annotationIntrospector0.allIntrospectors();
    annotationIntrospector0.findKeySerializer((Annotated) null);
    annotationIntrospector0.findTypeName((AnnotatedClass) null);
    annotationIntrospector0.findDeserializer((Annotated) null);
    annotationIntrospector0.findPropertyInclusion((Annotated) null);
    annotationIntrospector0.allIntrospectors(collection0);
    // Undeclared exception!
    try {
        annotationIntrospector0.version();
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.AbstractList"", e);
    }
}",0,
project,0,test6161,"public void test6161() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    AnnotationIntrospector.ReferenceProperty.Type[] annotationIntrospector_ReferenceProperty_TypeArray0 = AnnotationIntrospector.ReferenceProperty.Type.values();
    String[] stringArray0 = new String[3];
    Class<BeanPropertyWriter> class0 = BeanPropertyWriter.class;
    annotationIntrospector0.findEnumValues(class0, annotationIntrospector_ReferenceProperty_TypeArray0, stringArray0);
}",0,
project,0,test6363,"public void test6363() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.isIgnorableType((AnnotatedClass) null);
}",0,
project,0,test6464,"public void test6464() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    annotationIntrospector0.findIgnoreUnknownProperties((AnnotatedClass) null);
}",0,
project,0,test6565,"public void test6565() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    JsonLocationInstantiator jsonLocationInstantiator0 = new JsonLocationInstantiator();
    jsonLocationInstantiator0.getWithArgsCreator();
    annotationIntrospector0.findSerializationKeyType((Annotated) null, (JavaType) null);
}",0,
project,0,test6767,"public void test6767() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base();
    Class<Annotation> class0 = Annotation.class;
    objectMapper0.acceptJsonFormatVisitor((Class<?>) class0, (JsonFormatVisitorWrapper) jsonFormatVisitorWrapper_Base0);
}",1,
project,0,test6868,"public void test6868() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    Class<BeanPropertyWriter> class0 = BeanPropertyWriter.class;
    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base();
    objectMapper0.acceptJsonFormatVisitor((Class<?>) class0, (JsonFormatVisitorWrapper) jsonFormatVisitorWrapper_Base0);
    AnnotationIntrospector.nopInstance();
}",1,
project,0,test6969,"public void test6969() throws Throwable {
    AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
    AnnotationIntrospector.ReferenceProperty.Type.values();
    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, (SubtypeResolver) null, simpleMixInResolver0, rootNameLookup0);
    System.setCurrentTimeMillis(0L);
    annotationIntrospector0.resolveSetterConflict(deserializationConfig0, (AnnotatedMethod) null, (AnnotatedMethod) null);
}",0,
project,0,test7070,"public void test7070() throws Throwable {
    ObjectMapper objectMapper0 = new ObjectMapper();
    JavaType javaType0 = TypeFactory.unknownType();
    MapLikeType mapLikeType0 = MapLikeType.upgradeFrom(javaType0, javaType0, javaType0);
    JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base();
    objectMapper0.acceptJsonFormatVisitor((JavaType) mapLikeType0, (JsonFormatVisitorWrapper) jsonFormatVisitorWrapper_Base0);
    AnnotationIntrospector.nopInstance();
}",0,
