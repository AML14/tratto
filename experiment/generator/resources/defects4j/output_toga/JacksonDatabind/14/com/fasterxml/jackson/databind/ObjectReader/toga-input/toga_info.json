{
  "test1212" : {
    "methodSignature" : "public ObjectReader without(JsonParser.Feature feature)",
    "methodName" : "without",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_NUMERIC_LEADING_ZEROS;\n    ObjectReader objectReader1 = objectReader0.without(jsonParser_Feature0);\n}",
    "testName" : "test1212"
  },
  "test4646" : {
    "methodSignature" : "public ObjectReader withoutAttribute(Object key)",
    "methodName" : "withoutAttribute",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4646() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    ObjectReader objectReader1 = objectReader0.withoutAttribute(\"Can not use source of type \");\n}",
    "testName" : "test4646"
  },
  "test3434" : {
    "methodSignature" : "public <T> Iterator<T> readValues(JsonParser jp, TypeReference<?> valueTypeRef) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened((JsonParser) null, (JsonParser) null);\n    TypeReference<Object> typeReference0 = (TypeReference<Object>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    doReturn((Type) null).when(typeReference0).getType();\n    objectReader0.readValues((JsonParser) jsonParserSequence0, (TypeReference<?>) typeReference0);\n}",
    "testName" : "test3434"
  },
  "test6868" : {
    "methodSignature" : "public JsonNode readTree(InputStream in) throws IOException, JsonProcessingException",
    "methodName" : "readTree",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6868() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.readTree((InputStream) null);\n}",
    "testName" : "test6868"
  },
  "test5656" : {
    "methodSignature" : "public ObjectReader with(JsonFactory f)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5656() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating((Object) jsonFactory0);\n    ObjectReader objectReader1 = objectReader0.with(jsonFactory0);\n}",
    "testName" : "test5656"
  },
  "test7878" : {
    "methodSignature" : "protected void _verifySchemaType(FormatSchema schema)",
    "methodName" : "_verifySchemaType",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7878() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0._verifySchemaType((FormatSchema) null);\n}",
    "testName" : "test7878"
  },
  "test1010" : {
    "methodSignature" : "protected void _reportUndetectableSource(Object src) throws JsonProcessingException",
    "methodName" : "_reportUndetectableSource",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.ALWAYS;\n    objectReader0._reportUndetectableSource(jsonInclude_Include0);\n}",
    "testName" : "test1010"
  },
  "test4444" : {
    "methodSignature" : "public ObjectReader withType(java.lang.reflect.Type valueType)",
    "methodName" : "withType",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4444() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<BooleanNode> class0 = BooleanNode.class;\n    ObjectReader objectReader0 = objectMapper0.reader((Class<?>) class0);\n    ObjectReader objectReader1 = objectReader0.withType((Type) class0);\n}",
    "testName" : "test4444"
  },
  "test3232" : {
    "methodSignature" : "public <T> T readValue(JsonParser jp, TypeReference<?> valueTypeRef) throws IOException, JsonProcessingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    TypeReference<BeanDeserializer> typeReference0 = (TypeReference<BeanDeserializer>) mock(TypeReference.class, new ViolatedAssumptionAnswer());\n    doReturn((Type) null).when(typeReference0).getType();\n    objectReader0.readValue((JsonParser) null, (TypeReference<?>) typeReference0);\n}",
    "testName" : "test3232"
  },
  "test6666" : {
    "methodSignature" : "public <T> T readValue(File src) throws IOException, JsonProcessingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6666() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.readValue((File) null);\n}",
    "testName" : "test6666"
  },
  "test5454" : {
    "methodSignature" : "public <T> T treeToValue(TreeNode n, Class<T> valueType) throws JsonProcessingException",
    "methodName" : "treeToValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5454() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    ObjectReader objectReader1 = objectMapper0.readerForUpdating((Object) objectReader0);\n    JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;\n    ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0);\n    Class<MissingNode> class0 = MissingNode.class;\n    objectReader1.treeToValue((TreeNode) objectNode0, class0);\n}",
    "testName" : "test5454"
  },
  "test2222" : {
    "methodSignature" : "public <T> Iterator<T> readValues(JsonParser jp, ResolvedType valueType) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    TypeFactory typeFactory0 = TypeFactory.defaultInstance();\n    Class<ConcurrentHashMap> class0 = ConcurrentHashMap.class;\n    MapType mapType0 = typeFactory0.constructRawMapType(class0);\n    Iterator<AbstractDeserializer> iterator0 = objectReader0.readValues((JsonParser) null, (ResolvedType) mapType0);\n}",
    "testName" : "test2222"
  },
  "test7676" : {
    "methodSignature" : "public ObjectReader withType(java.lang.reflect.Type valueType)",
    "methodName" : "withType",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7676() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<BooleanNode> class0 = BooleanNode.class;\n    objectMapper0.reader((Class<?>) class0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    ObjectReader objectReader1 = objectReader0.withType((Type) class0);\n}",
    "testName" : "test7676"
  },
  "test077" : {
    "methodSignature" : "public ObjectReader withAttributes(Map<Object, Object> attrs)",
    "methodName" : "withAttributes",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();\n    ObjectReader objectReader1 = objectReader0.withAttributes(hashMap0);\n}",
    "testName" : "test077"
  },
  "test2828" : {
    "methodSignature" : "public ObjectReader with(DeserializationConfig config)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.USE_BIG_INTEGER_FOR_INTS;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    objectReader0.with((DeserializationConfig) null);\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public ObjectReader with(DeserializationFeature feature)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS;\n    ObjectReader objectReader1 = objectReader0.with(deserializationFeature0);\n}",
    "testName" : "test1414"
  },
  "test4848" : {
    "methodSignature" : "public ObjectReader with(DeserializationFeature first, DeserializationFeature... other)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4848() throws Throwable {\n    DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();\n    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();\n    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null, defaultSerializerProvider_Impl0, defaultDeserializationContext_Impl0);\n    ContextAttributes contextAttributes0 = ContextAttributes.Impl.getEmpty();\n    ObjectReader objectReader0 = objectMapper0.reader(contextAttributes0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[2];\n    objectReader0.with(deserializationFeature0, deserializationFeatureArray0);\n}",
    "testName" : "test4848"
  },
  "test3636" : {
    "methodSignature" : "public <T> T readValue(JsonParser jp, JavaType valueType) throws IOException, JsonProcessingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3636() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<Object> class0 = Object.class;\n    ObjectReader objectReader0 = objectMapper0.reader((Class<?>) class0);\n    ArrayNode arrayNode0 = objectMapper0.createArrayNode();\n    JsonParser jsonParser0 = objectMapper0.treeAsTokens(arrayNode0);\n    objectReader0.readValue(jsonParser0, (JavaType) null);\n}",
    "testName" : "test3636"
  },
  "test5858" : {
    "methodSignature" : "public ObjectReader with(FormatSchema schema)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5858() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    ObjectReader objectReader1 = objectReader0.with((FormatSchema) null);\n}",
    "testName" : "test5858"
  },
  "test6060" : {
    "methodSignature" : "public ObjectReader withValueToUpdate(Object value)",
    "methodName" : "withValueToUpdate",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6060() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<DecimalNode> class0 = DecimalNode.class;\n    ObjectReader objectReader0 = objectMapper0.readerWithView((Class<?>) class0);\n    ObjectReader objectReader1 = objectReader0.withValueToUpdate((Object) null);\n}",
    "testName" : "test6060"
  },
  "test7070" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(InputStream src) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7070() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.readValues((InputStream) null);\n}",
    "testName" : "test7070"
  },
  "test4242" : {
    "methodSignature" : "public ObjectReader without(DeserializationFeature feature)",
    "methodName" : "without",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4242() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ADJUST_DATES_TO_CONTEXT_TIME_ZONE;\n    ObjectReader objectReader1 = objectReader0.without(deserializationFeature0);\n}",
    "testName" : "test4242"
  },
  "test3030" : {
    "methodSignature" : "public ObjectReader with(ContextAttributes attrs)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<BooleanNode> class0 = BooleanNode.class;\n    ObjectReader objectReader0 = objectMapper0.reader((Class<?>) class0);\n    ContextAttributes contextAttributes0 = ContextAttributes.getEmpty();\n    ObjectReader objectReader1 = objectReader0.with(contextAttributes0);\n}",
    "testName" : "test3030"
  },
  "test6464" : {
    "methodSignature" : "public <T> T readValue(byte[] src) throws IOException, JsonProcessingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6464() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_INVALID_SUBTYPE;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    byte[] byteArray0 = new byte[1];\n    objectReader0.readValue(byteArray0);\n}",
    "testName" : "test6464"
  },
  "test5252" : {
    "methodSignature" : "public ObjectReader forType(TypeReference<?> valueTypeRef)",
    "methodName" : "forType",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5252() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.forType((TypeReference<?>) null);\n}",
    "testName" : "test5252"
  },
  "test2020" : {
    "methodSignature" : "public <T extends TreeNode> T readTree(JsonParser jp) throws IOException, JsonProcessingException",
    "methodName" : "readTree",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.READ_ENUMS_USING_TO_STRING;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    char[] charArray0 = new char[1];\n    JsonParser jsonParser0 = jsonFactory0.createParser(charArray0, (-808), (-808));\n    objectReader0.readTree(jsonParser0);\n}",
    "testName" : "test2020"
  },
  "test7474" : {
    "methodSignature" : "public <T> T readValue(JsonNode src) throws IOException, JsonProcessingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7474() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    NullNode nullNode0 = NullNode.instance;\n    objectReader0.readValue((JsonNode) nullNode0);\n}",
    "testName" : "test7474"
  },
  "test4040" : {
    "methodSignature" : "public boolean isInt()",
    "methodName" : "isInt",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4040() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonNode jsonNode0 = objectReader0.createArrayNode();\n    jsonNode0.isInt();\n}",
    "testName" : "test4040"
  },
  "test6262" : {
    "methodSignature" : "public <T> T readValue(Reader src) throws IOException, JsonProcessingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6262() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    PipedReader pipedReader0 = new PipedReader();\n    objectReader0.readValue((Reader) pipedReader0);\n}",
    "testName" : "test6262"
  },
  "test7272" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(String json) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7272() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.readValues(\"\");\n}",
    "testName" : "test7272"
  },
  "test022" : {
    "methodSignature" : "public void writeTree(JsonGenerator jgen, TreeNode rootNode)",
    "methodName" : "writeTree",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.READ_DATE_TIMESTAMPS_AS_NANOSECONDS;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    MissingNode missingNode0 = MissingNode.getInstance();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, missingNode0, false);\n    MockFile mockFile0 = new MockFile(\"\", \".n:UoBD2T\\\"p8\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, objectReader0, mockPrintStream0);\n    objectReader0.writeTree(uTF8JsonGenerator0, missingNode0);\n}",
    "testName" : "test022"
  },
  "test066" : {
    "methodSignature" : "public ObjectReader withView(Class<?> activeView)",
    "methodName" : "withView",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    Class<DecimalNode> class0 = DecimalNode.class;\n    ObjectReader objectReader1 = objectReader0.withView(class0);\n}",
    "testName" : "test066"
  },
  "test1818" : {
    "methodSignature" : "public ObjectReader withHandler(DeserializationProblemHandler h)",
    "methodName" : "withHandler",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    ObjectReader objectReader1 = objectReader0.withHandler((DeserializationProblemHandler) null);\n}",
    "testName" : "test1818"
  },
  "test5757" : {
    "methodSignature" : "public ObjectReader with(JsonFactory f)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5757() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper1 = new ObjectMapper(jsonFactory0);\n    ObjectReader objectReader1 = objectReader0.with(jsonFactory0);\n}",
    "testName" : "test5757"
  },
  "test2323" : {
    "methodSignature" : "public <T> T readValue(JsonNode src) throws IOException, JsonProcessingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<CoreXMLDeserializers.Std> class0 = CoreXMLDeserializers.Std.class;\n    ObjectReader objectReader0 = objectMapper0.reader((Class<?>) class0);\n    MissingNode missingNode0 = MissingNode.getInstance();\n    objectReader0.readValue((JsonNode) missingNode0);\n}",
    "testName" : "test2323"
  },
  "test4545" : {
    "methodSignature" : "public <T> T readValue(InputStream src) throws IOException, JsonProcessingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4545() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader((JsonNodeFactory) null);\n    objectReader0.readValue((InputStream) null);\n}",
    "testName" : "test4545"
  },
  "test3535" : {
    "methodSignature" : "protected InputStream _inputStream(URL src) throws IOException",
    "methodName" : "_inputStream",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.READ_ENUMS_USING_TO_STRING;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    URL uRL0 = MockURL.getFileExample();\n    objectReader0._inputStream(uRL0);\n}",
    "testName" : "test3535"
  },
  "test6767" : {
    "methodSignature" : "public <T> T readValue(URL src) throws IOException, JsonProcessingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6767() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    URL uRL0 = MockURL.getFileExample();\n    objectReader0.readValue(uRL0);\n}",
    "testName" : "test6767"
  },
  "test5555" : {
    "methodSignature" : "public ObjectReader with(InjectableValues injectableValues)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5555() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();\n    ObjectReader objectReader1 = objectReader0.with((InjectableValues) injectableValues_Std0);\n}",
    "testName" : "test5555"
  },
  "test2121" : {
    "methodSignature" : "public ObjectReader with(Locale l)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    Locale locale0 = Locale.ITALIAN;\n    ObjectReader objectReader1 = objectReader0.with(locale0);\n}",
    "testName" : "test2121"
  },
  "test7777" : {
    "methodSignature" : "protected <T> MappingIterator<T> _detectBindAndReadValues(DataFormatReaders.Match match, boolean forceClosing) throws IOException, JsonProcessingException",
    "methodName" : "_detectBindAndReadValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7777() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    byte[] byteArray0 = new byte[7];\n    Stack<ObjectReader> stack0 = new Stack<ObjectReader>();\n    DataFormatReaders dataFormatReaders0 = new DataFormatReaders(stack0);\n    DataFormatReaders.Match dataFormatReaders_Match0 = dataFormatReaders0.findFormat(byteArray0);\n    objectReader0._detectBindAndReadValues(dataFormatReaders_Match0, false);\n}",
    "testName" : "test7777"
  },
  "test1111" : {
    "methodSignature" : "public ObjectReader with(JsonParser.Feature feature)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_UNQUOTED_CONTROL_CHARS;\n    ObjectReader objectReader1 = objectReader0.with(jsonParser_Feature0);\n}",
    "testName" : "test1111"
  },
  "test4343" : {
    "methodSignature" : "public ObjectReader withAttribute(Object key, Object value)",
    "methodName" : "withAttribute",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4343() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    MissingNode missingNode0 = MissingNode.getInstance();\n    ObjectReader objectReader1 = objectReader0.withAttribute(objectMapper0, missingNode0);\n}",
    "testName" : "test4343"
  },
  "test3333" : {
    "methodSignature" : "public TypeFactory getTypeFactory()",
    "methodName" : "getTypeFactory",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    TypeFactory typeFactory0 = objectReader0.getTypeFactory();\n}",
    "testName" : "test3333"
  },
  "test6565" : {
    "methodSignature" : "public <T> T readValue(byte[] src, int offset, int length) throws IOException, JsonProcessingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6565() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.readValue((byte[]) null, 1, 1);\n}",
    "testName" : "test6565"
  },
  "test011" : {
    "methodSignature" : "public final String getRootName()",
    "methodName" : "getRootName",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader((FormatSchema) null);\n    DeserializationConfig deserializationConfig0 = objectReader0.getConfig();\n    deserializationConfig0.getRootName();\n}",
    "testName" : "test011"
  },
  "test055" : {
    "methodSignature" : "public ObjectReader with(JsonFactory f)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectReader objectReader1 = objectReader0.with(jsonFactory0);\n}",
    "testName" : "test055"
  },
  "test099" : {
    "methodSignature" : "public byte[] writeValueAsBytes(Object value) throws JsonProcessingException",
    "methodName" : "writeValueAsBytes",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);\n    ObjectReader objectReader0 = objectMapper0.readerForUpdating((Object) jsonFactory0);\n    objectMapper0.writeValueAsBytes(objectReader0);\n}",
    "testName" : "test099"
  },
  "test1717" : {
    "methodSignature" : "public ObjectReader withRootName(String rootName)",
    "methodName" : "withRootName",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    ObjectReader objectReader1 = objectReader0.withRootName(\"\");\n}",
    "testName" : "test1717"
  },
  "test4949" : {
    "methodSignature" : "public boolean isDouble()",
    "methodName" : "isDouble",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4949() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[1];\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0, deserializationFeatureArray0);\n    JsonNode jsonNode0 = objectReader0.readTree(\"0\");\n    jsonNode0.isDouble();\n}",
    "testName" : "test4949"
  },
  "test3939" : {
    "methodSignature" : "public boolean isEnabled(JsonParser.Feature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3939() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    HashMap<String, Object> hashMap0 = new HashMap<String, Object>();\n    InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std(hashMap0);\n    ObjectReader objectReader0 = objectMapper0.reader((InjectableValues) injectableValues_Std0);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.AUTO_CLOSE_SOURCE;\n    boolean boolean0 = objectReader0.isEnabled(jsonParser_Feature0);\n}",
    "testName" : "test3939"
  },
  "test5959" : {
    "methodSignature" : "public ObjectReader withValueToUpdate(Object value)",
    "methodName" : "withValueToUpdate",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5959() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    ObjectReader objectReader1 = objectReader0.withValueToUpdate(objectMapper0);\n}",
    "testName" : "test5959"
  },
  "test1515" : {
    "methodSignature" : "protected Object _detectBindAndClose(DataFormatReaders.Match match, boolean forceClosing) throws IOException",
    "methodName" : "_detectBindAndClose",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    Vector<ObjectReader> vector0 = new Vector<ObjectReader>(1);\n    DataFormatReaders dataFormatReaders0 = new DataFormatReaders(vector0);\n    DataFormatReaders.Match dataFormatReaders_Match0 = dataFormatReaders0.findFormat((byte[]) null, 64, 64);\n    objectReader0._detectBindAndClose(dataFormatReaders_Match0, true);\n}",
    "testName" : "test1515"
  },
  "test4747" : {
    "methodSignature" : "public ObjectReader with(TimeZone tz)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4747() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_INVALID_SUBTYPE;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    TimeZone timeZone0 = TimeZone.getDefault();\n    ObjectReader objectReader1 = objectReader0.with(timeZone0);\n}",
    "testName" : "test4747"
  },
  "test6969" : {
    "methodSignature" : "public JsonNode readTree(Reader r) throws IOException, JsonProcessingException",
    "methodName" : "readTree",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6969() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    PipedReader pipedReader0 = new PipedReader();\n    objectReader0.readTree((Reader) pipedReader0);\n}",
    "testName" : "test6969"
  },
  "test7171" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(Reader src) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7171() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    PipedReader pipedReader0 = new PipedReader();\n    objectReader0.readValues((Reader) pipedReader0);\n}",
    "testName" : "test7171"
  },
  "test5353" : {
    "methodSignature" : "public void writeValue(JsonGenerator jgen, Object value) throws IOException, JsonProcessingException",
    "methodName" : "writeValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5353() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, deserializationFeature0, true);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"f7T>\");\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-1030), objectReader0, mockPrintStream0);\n    objectReader0.writeValue(uTF8JsonGenerator0, (Object) null);\n}",
    "testName" : "test5353"
  },
  "test7575" : {
    "methodSignature" : "public JsonNode readTree(String json) throws IOException, JsonProcessingException",
    "methodName" : "readTree",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7575() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.UNWRAP_ROOT_VALUE;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[1];\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0, deserializationFeatureArray0);\n    objectReader0.readTree(\"0\");\n}",
    "testName" : "test7575"
  },
  "test4141" : {
    "methodSignature" : "public ObjectReader with(Base64Variant defaultBase64)",
    "methodName" : "with",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4141() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[1];\n    deserializationFeatureArray0[0] = deserializationFeature0;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0, deserializationFeatureArray0);\n    ObjectReader objectReader1 = objectReader0.with((Base64Variant) null);\n}",
    "testName" : "test4141"
  },
  "test6363" : {
    "methodSignature" : "public <T> T readValue(String src) throws IOException, JsonProcessingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6363() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.readValue(\"'), but \");\n}",
    "testName" : "test6363"
  },
  "test3131" : {
    "methodSignature" : "public ObjectReader without(DeserializationFeature first, DeserializationFeature... other)",
    "methodName" : "without",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES;\n    DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[4];\n    objectReader0.without(deserializationFeature0, deserializationFeatureArray0);\n}",
    "testName" : "test3131"
  },
  "test5151" : {
    "methodSignature" : "public ContextAttributes getAttributes()",
    "methodName" : "getAttributes",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5151() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    ContextAttributes contextAttributes0 = objectReader0.getAttributes();\n}",
    "testName" : "test5151"
  },
  "test7373" : {
    "methodSignature" : "public <T> MappingIterator<T> readValues(File src) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7373() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    objectReader0.readValues((File) null);\n}",
    "testName" : "test7373"
  },
  "test6161" : {
    "methodSignature" : "public ObjectReader withValueToUpdate(Object value)",
    "methodName" : "withValueToUpdate",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6161() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    Class<SimpleType> class0 = SimpleType.class;\n    SimpleType simpleType0 = SimpleType.constructUnsafe(class0);\n    ObjectReader objectReader0 = objectMapper0.reader((JavaType) simpleType0);\n    ObjectReader objectReader1 = objectReader0.withValueToUpdate(class0);\n}",
    "testName" : "test6161"
  },
  "test000" : {
    "methodSignature" : "public boolean isEnabled(MapperFeature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    MapperFeature mapperFeature0 = MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES;\n    boolean boolean0 = objectReader0.isEnabled(mapperFeature0);\n}",
    "testName" : "test000"
  },
  "test088" : {
    "methodSignature" : "public final <T> MappingIterator<T> readValues(byte[] src) throws IOException, JsonProcessingException",
    "methodName" : "readValues",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ObjectReader objectReader0 = objectMapper0.reader();\n    byte[] byteArray0 = new byte[0];\n    objectReader0.readValues(byteArray0);\n}",
    "testName" : "test088"
  },
  "test2929" : {
    "methodSignature" : "public boolean isEnabled(DeserializationFeature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_INVALID_SUBTYPE;\n    ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);\n    boolean boolean0 = objectReader0.isEnabled(deserializationFeature0);\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public <T> T readValue(JsonParser jp, ResolvedType valueType) throws IOException, JsonProcessingException",
    "methodName" : "readValue",
    "className" : "com.fasterxml.jackson.databind.ObjectReader",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"IN=zJhe\\\"N(OMS7M\", false);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 252, (Reader) null, objectMapper0, charsToNameCanonicalizer0);\n    ObjectReader objectReader0 = objectMapper0.reader((FormatSchema) null);\n    objectReader0.readValue((JsonParser) readerBasedJsonParser0, (ResolvedType) null);\n}",
    "testName" : "test1919"
  }
}