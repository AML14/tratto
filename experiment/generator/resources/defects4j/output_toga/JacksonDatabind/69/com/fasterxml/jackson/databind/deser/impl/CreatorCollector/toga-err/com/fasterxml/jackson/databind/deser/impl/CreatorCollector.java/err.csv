com.fasterxml.jackson.databind.deser.impl.CreatorCollector,@Test(timeout = 4000)
public void test1010() throws Throwable {
    CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla(0);
    boolean boolean0 = creatorCollector_Vanilla0.canCreateUsingDefault();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_69b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector/Vanilla.java
com.fasterxml.jackson.databind.deser.impl.CreatorCollector,@Test(timeout = 4000)
public void test1111() throws Throwable {
    CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla((-2115));
    boolean boolean0 = creatorCollector_Vanilla0.canInstantiate();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_69b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector/Vanilla.java
com.fasterxml.jackson.databind.deser.impl.CreatorCollector,@Test(timeout = 4000)
public void test1212() throws Throwable {
    BasicClassIntrospector basicClassIntrospector0 = new BasicClassIntrospector();
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<String> class0 = String.class;
    MapLikeType mapLikeType0 = typeFactory0.constructMapLikeType(class0, class0, class0);
    BasicBeanDescription basicBeanDescription0 = basicClassIntrospector0.forDeserialization(deserializationConfig0, mapLikeType0, (ClassIntrospector.MixInResolver) null);
    AnnotatedConstructor annotatedConstructor0 = basicBeanDescription0.findDefaultConstructor();
    CreatorCollector creatorCollector0 = new CreatorCollector(basicBeanDescription0, deserializationConfig0);
    creatorCollector0.verifyNonDup(annotatedConstructor0, 8, false);
    ValueInstantiator valueInstantiator0 = creatorCollector0.constructValueInstantiator(deserializationConfig0);
    valueInstantiator0.canInstantiate();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.deser.impl.CreatorCollector,@Test(timeout = 4000)
public void test1213() throws Throwable {
    BasicClassIntrospector basicClassIntrospector0 = new BasicClassIntrospector();
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<String> class0 = String.class;
    MapLikeType mapLikeType0 = typeFactory0.constructMapLikeType(class0, class0, class0);
    BasicBeanDescription basicBeanDescription0 = basicClassIntrospector0.forDeserialization(deserializationConfig0, mapLikeType0, (ClassIntrospector.MixInResolver) null);
    AnnotatedConstructor annotatedConstructor0 = basicBeanDescription0.findDefaultConstructor();
    CreatorCollector creatorCollector0 = new CreatorCollector(basicBeanDescription0, deserializationConfig0);
    creatorCollector0.verifyNonDup(annotatedConstructor0, 8, false);
    ValueInstantiator valueInstantiator0 = creatorCollector0.constructValueInstantiator(deserializationConfig0);
    valueInstantiator0.getValueTypeDesc();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.deser.impl.CreatorCollector,@Test(timeout = 4000)
public void test1314() throws Throwable {
    BasicClassIntrospector basicClassIntrospector0 = new BasicClassIntrospector();
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<String> class0 = String.class;
    MapLikeType mapLikeType0 = typeFactory0.constructMapLikeType(class0, class0, class0);
    BasicBeanDescription basicBeanDescription0 = basicClassIntrospector0.forDeserialization(deserializationConfig0, mapLikeType0, (ClassIntrospector.MixInResolver) null);
    CreatorCollector creatorCollector0 = new CreatorCollector(basicBeanDescription0, deserializationConfig0);
    ValueInstantiator valueInstantiator0 = creatorCollector0.constructValueInstantiator(deserializationConfig0);
    valueInstantiator0.canInstantiate();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.deser.impl.CreatorCollector,@Test(timeout = 4000)
public void test1315() throws Throwable {
    BasicClassIntrospector basicClassIntrospector0 = new BasicClassIntrospector();
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<String> class0 = String.class;
    MapLikeType mapLikeType0 = typeFactory0.constructMapLikeType(class0, class0, class0);
    BasicBeanDescription basicBeanDescription0 = basicClassIntrospector0.forDeserialization(deserializationConfig0, mapLikeType0, (ClassIntrospector.MixInResolver) null);
    CreatorCollector creatorCollector0 = new CreatorCollector(basicBeanDescription0, deserializationConfig0);
    ValueInstantiator valueInstantiator0 = creatorCollector0.constructValueInstantiator(deserializationConfig0);
    valueInstantiator0.getValueTypeDesc();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.deser.impl.CreatorCollector,@Test(timeout = 4000)
public void test1820() throws Throwable {
    BasicClassIntrospector basicClassIntrospector0 = new BasicClassIntrospector();
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<String> class0 = String.class;
    Class<TextStyle> class1 = TextStyle.class;
    Class<Integer> class2 = Integer.TYPE;
    MapLikeType mapLikeType0 = typeFactory0.constructMapLikeType(class0, class1, class2);
    BasicBeanDescription basicBeanDescription0 = basicClassIntrospector0.forDeserialization(deserializationConfig0, mapLikeType0, (ClassIntrospector.MixInResolver) null);
    CreatorCollector creatorCollector0 = new CreatorCollector(basicBeanDescription0, deserializationConfig0);
    AnnotatedConstructor annotatedConstructor0 = basicBeanDescription0.findDefaultConstructor();
    AnnotatedParameter annotatedParameter0 = annotatedConstructor0.getParameter(492);
    creatorCollector0.addIncompeteParameter(annotatedParameter0);
    creatorCollector0.addIncompeteParameter(annotatedParameter0);
    annotatedParameter0.getName();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.deser.impl.CreatorCollector,@Test(timeout = 4000)
public void test2426() throws Throwable {
    BasicClassIntrospector basicClassIntrospector0 = new BasicClassIntrospector();
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<String> class0 = String.class;
    MapLikeType mapLikeType0 = typeFactory0.constructMapLikeType(class0, class0, class0);
    BasicBeanDescription basicBeanDescription0 = basicClassIntrospector0.forClassAnnotations(deserializationConfig0, mapLikeType0, deserializationConfig0);
    AnnotatedConstructor annotatedConstructor0 = basicBeanDescription0.findDefaultConstructor();
    CreatorCollector creatorCollector0 = new CreatorCollector(basicBeanDescription0, deserializationConfig0);
    SettableBeanProperty[] settableBeanPropertyArray0 = new SettableBeanProperty[1];
    creatorCollector0._arrayDelegateArgs = settableBeanPropertyArray0;
    creatorCollector0.verifyNonDup(annotatedConstructor0, 8, true);
    ValueInstantiator valueInstantiator0 = creatorCollector0.constructValueInstantiator(deserializationConfig0);
    valueInstantiator0.getValueTypeDesc();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.deser.impl.CreatorCollector,@Test(timeout = 4000)
public void test2427() throws Throwable {
    BasicClassIntrospector basicClassIntrospector0 = new BasicClassIntrospector();
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<String> class0 = String.class;
    MapLikeType mapLikeType0 = typeFactory0.constructMapLikeType(class0, class0, class0);
    BasicBeanDescription basicBeanDescription0 = basicClassIntrospector0.forClassAnnotations(deserializationConfig0, mapLikeType0, deserializationConfig0);
    AnnotatedConstructor annotatedConstructor0 = basicBeanDescription0.findDefaultConstructor();
    CreatorCollector creatorCollector0 = new CreatorCollector(basicBeanDescription0, deserializationConfig0);
    SettableBeanProperty[] settableBeanPropertyArray0 = new SettableBeanProperty[1];
    creatorCollector0._arrayDelegateArgs = settableBeanPropertyArray0;
    creatorCollector0.verifyNonDup(annotatedConstructor0, 8, true);
    ValueInstantiator valueInstantiator0 = creatorCollector0.constructValueInstantiator(deserializationConfig0);
    valueInstantiator0.canInstantiate();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.deser.impl.CreatorCollector,@Test(timeout = 4000)
public void test2528() throws Throwable {
    BasicClassIntrospector basicClassIntrospector0 = new BasicClassIntrospector();
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);
    TypeFactory typeFactory0 = TypeFactory.defaultInstance();
    Class<String> class0 = String.class;
    MapLikeType mapLikeType0 = typeFactory0.constructMapLikeType(class0, class0, class0);
    BasicBeanDescription basicBeanDescription0 = basicClassIntrospector0.forClassAnnotations(deserializationConfig0, mapLikeType0, deserializationConfig0);
    AnnotatedConstructor annotatedConstructor0 = basicBeanDescription0.findDefaultConstructor();
    CreatorCollector creatorCollector0 = new CreatorCollector(basicBeanDescription0, deserializationConfig0);
    SettableBeanProperty[] settableBeanPropertyArray0 = new SettableBeanProperty[1];
    PropertyName propertyName0 = PropertyName.construct("""");
    AnnotationMap annotationMap0 = new AnnotationMap();
    AnnotatedParameter annotatedParameter0 = new AnnotatedParameter(annotatedConstructor0, mapLikeType0, annotationMap0, 8);
    Integer integer0 = new Integer(54);
    PropertyMetadata propertyMetadata0 = PropertyMetadata.construct(true, ""ftsm!\""q>rdEd<+Anv"", integer0, "", encountered "");
    CreatorProperty creatorProperty0 = new CreatorProperty(propertyName0, mapLikeType0, propertyName0, (TypeDeserializer) null, annotationMap0, annotatedParameter0, 54, (Object) null, propertyMetadata0);
    settableBeanPropertyArray0[0] = (SettableBeanProperty) creatorProperty0;
    creatorCollector0._arrayDelegateArgs = settableBeanPropertyArray0;
    creatorCollector0.verifyNonDup(annotatedConstructor0, 8, true);
    ValueInstantiator valueInstantiator0 = creatorCollector0.constructValueInstantiator(deserializationConfig0);
    valueInstantiator0.canCreateFromObjectWith();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.deser.impl.CreatorCollector,@Test(timeout = 4000)
public void test3134() throws Throwable {
    CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla(1);
    ObjectMapper objectMapper0 = new ObjectMapper();
    DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
    Object[] objectArray0 = new Object[0];
    creatorCollector_Vanilla0.createFromObjectWith(deserializationContext0, objectArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.fasterxml.jackson.databind.deser.impl.CreatorCollector,@Test(timeout = 4000)
public void test3235() throws Throwable {
    CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla(3);
    String string0 = creatorCollector_Vanilla0.getValueTypeDesc();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_69b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector/Vanilla.java
com.fasterxml.jackson.databind.deser.impl.CreatorCollector,@Test(timeout = 4000)
public void test3336() throws Throwable {
    CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla(2);
    String string0 = creatorCollector_Vanilla0.getValueTypeDesc();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_69b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector/Vanilla.java
com.fasterxml.jackson.databind.deser.impl.CreatorCollector,@Test(timeout = 4000)
public void test3437() throws Throwable {
    CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla(2817);
    String string0 = creatorCollector_Vanilla0.getValueTypeDesc();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_69b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector/Vanilla.java
com.fasterxml.jackson.databind.deser.impl.CreatorCollector,@Test(timeout = 4000)
public void test3538() throws Throwable {
    CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla(1);
    DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
    BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    ArrayList arrayList0 = (ArrayList) creatorCollector_Vanilla0.createUsingDefault(defaultDeserializationContext_Impl0);
    arrayList0.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_69b/src/main/java/java/util/ArrayList.java
com.fasterxml.jackson.databind.deser.impl.CreatorCollector,@Test(timeout = 4000)
public void test3639() throws Throwable {
    CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla((-1782));
    creatorCollector_Vanilla0.createUsingDefault((DeserializationContext) null);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_69b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector/Vanilla.java
com.fasterxml.jackson.databind.deser.impl.CreatorCollector,@Test(timeout = 4000)
public void test3740() throws Throwable {
    CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla(2);
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    LinkedHashMap linkedHashMap0 = (LinkedHashMap) creatorCollector_Vanilla0.createUsingDefault(defaultDeserializationContext_Impl0);
    linkedHashMap0.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_69b/src/main/java/java/util/HashMap.java
com.fasterxml.jackson.databind.deser.impl.CreatorCollector,@Test(timeout = 4000)
public void test3841() throws Throwable {
    CreatorCollector.Vanilla creatorCollector_Vanilla0 = new CreatorCollector.Vanilla(3);
    HashMap hashMap0 = (HashMap) creatorCollector_Vanilla0.createUsingDefault((DeserializationContext) null);
    hashMap0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonDatabind_69b/src/main/java/java/util/HashMap.java
