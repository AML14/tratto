{
  "test00" : {
    "methodSignature" : "public AnnotatedMember getMember()",
    "methodName" : "getMember",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00() throws Throwable {\n    JsonDeserializer<String> jsonDeserializer0 = (JsonDeserializer<String>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;\n    PropertyName propertyName0 = PropertyName.construct(\"\", \"\");\n    ObjectIdGenerator<Object> objectIdGenerator0 = (ObjectIdGenerator<Object>) mock(ObjectIdGenerator.class, new ViolatedAssumptionAnswer());\n    SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();\n    ObjectIdReader objectIdReader0 = ObjectIdReader.construct((JavaType) null, propertyName0, (ObjectIdGenerator<?>) objectIdGenerator0, (JsonDeserializer<?>) jsonDeserializer0, (SettableBeanProperty) null, (ObjectIdResolver) simpleObjectIdResolver0);\n    ObjectIdValueProperty objectIdValueProperty0 = new ObjectIdValueProperty(objectIdReader0, propertyMetadata0);\n    AnnotatedMember annotatedMember0 = objectIdValueProperty0.getMember();\n}",
    "testName" : "test00"
  },
  "test11" : {
    "methodSignature" : "public boolean hasValueDeserializer()",
    "methodName" : "hasValueDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11() throws Throwable {\n    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;\n    PropertyName propertyName0 = PropertyName.USE_DEFAULT;\n    SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();\n    ObjectIdGenerator<MissingNode> objectIdGenerator0 = (ObjectIdGenerator<MissingNode>) mock(ObjectIdGenerator.class, new ViolatedAssumptionAnswer());\n    JsonDeserializer<ObjectIdResolver> jsonDeserializer0 = (JsonDeserializer<ObjectIdResolver>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    ObjectIdReader objectIdReader0 = new ObjectIdReader((JavaType) null, propertyName0, objectIdGenerator0, jsonDeserializer0, (SettableBeanProperty) null, simpleObjectIdResolver0);\n    ObjectIdValueProperty objectIdValueProperty0 = new ObjectIdValueProperty(objectIdReader0, propertyMetadata0);\n    SettableBeanProperty settableBeanProperty0 = objectIdValueProperty0.withSimpleName(\"7hn\");\n    settableBeanProperty0.hasValueDeserializer();\n}",
    "testName" : "test11"
  },
  "test22" : {
    "methodSignature" : "public void set(Object instance, Object value) throws IOException",
    "methodName" : "set",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22() throws Throwable {\n    PropertyName propertyName0 = PropertyName.construct(\"H6FY?B}nFINSF\", \"J\");\n    SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();\n    ObjectIdReader objectIdReader0 = ObjectIdReader.construct((JavaType) null, propertyName0, (ObjectIdGenerator<?>) null, (JsonDeserializer<?>) null, (SettableBeanProperty) null, (ObjectIdResolver) simpleObjectIdResolver0);\n    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;\n    ObjectIdValueProperty objectIdValueProperty0 = new ObjectIdValueProperty(objectIdReader0, propertyMetadata0);\n    objectIdValueProperty0.set((Object) null, \"J\");\n}",
    "testName" : "test22"
  },
  "test33" : {
    "methodSignature" : "public <A extends Annotation> A getAnnotation(Class<A> acls)",
    "methodName" : "getAnnotation",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33() throws Throwable {\n    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;\n    PropertyName propertyName0 = PropertyName.USE_DEFAULT;\n    SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();\n    ObjectIdGenerator<MissingNode> objectIdGenerator0 = (ObjectIdGenerator<MissingNode>) mock(ObjectIdGenerator.class, new ViolatedAssumptionAnswer());\n    JsonDeserializer<ObjectIdResolver> jsonDeserializer0 = (JsonDeserializer<ObjectIdResolver>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    ObjectIdReader objectIdReader0 = ObjectIdReader.construct((JavaType) null, propertyName0, (ObjectIdGenerator<?>) objectIdGenerator0, (JsonDeserializer<?>) jsonDeserializer0, (SettableBeanProperty) null, (ObjectIdResolver) simpleObjectIdResolver0);\n    ObjectIdValueProperty objectIdValueProperty0 = new ObjectIdValueProperty(objectIdReader0, propertyMetadata0);\n    Class<Annotation> class0 = Annotation.class;\n    Annotation annotation0 = objectIdValueProperty0.getAnnotation(class0);\n}",
    "testName" : "test33"
  },
  "test44" : {
    "methodSignature" : "public boolean hasValueDeserializer()",
    "methodName" : "hasValueDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44() throws Throwable {\n    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;\n    PropertyName propertyName0 = PropertyName.construct(\"J\", \"J\");\n    SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();\n    ObjectIdReader objectIdReader0 = ObjectIdReader.construct((JavaType) null, propertyName0, (ObjectIdGenerator<?>) null, (JsonDeserializer<?>) null, (SettableBeanProperty) null, (ObjectIdResolver) simpleObjectIdResolver0);\n    ObjectIdValueProperty objectIdValueProperty0 = new ObjectIdValueProperty(objectIdReader0, propertyMetadata0);\n    ObjectIdValueProperty objectIdValueProperty1 = objectIdValueProperty0.withValueDeserializer((JsonDeserializer<?>) null);\n    objectIdValueProperty1.hasValueDeserializer();\n}",
    "testName" : "test44"
  },
  "test55" : {
    "methodSignature" : "public boolean hasValueDeserializer()",
    "methodName" : "hasValueDeserializer",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test55() throws Throwable {\n    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;\n    PropertyName propertyName0 = PropertyName.USE_DEFAULT;\n    SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();\n    ObjectIdGenerator.IdKey objectIdGenerator_IdKey0 = mock(ObjectIdGenerator.IdKey.class, new ViolatedAssumptionAnswer());\n    ObjectIdGenerator<MissingNode> objectIdGenerator0 = (ObjectIdGenerator<MissingNode>) mock(ObjectIdGenerator.class, new ViolatedAssumptionAnswer());\n    doReturn(objectIdGenerator_IdKey0).when(objectIdGenerator0).key(any());\n    JsonDeserializer<ObjectIdResolver> jsonDeserializer0 = (JsonDeserializer<ObjectIdResolver>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    doReturn(simpleObjectIdResolver0).when(jsonDeserializer0).deserialize(any(com.fasterxml.jackson.core.JsonParser.class), any(com.fasterxml.jackson.databind.DeserializationContext.class));\n    ObjectIdReader objectIdReader0 = new ObjectIdReader((JavaType) null, propertyName0, objectIdGenerator0, jsonDeserializer0, (SettableBeanProperty) null, simpleObjectIdResolver0);\n    ObjectIdValueProperty objectIdValueProperty0 = new ObjectIdValueProperty(objectIdReader0, propertyMetadata0);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    objectIdValueProperty0.deserializeAndSet((JsonParser) null, defaultDeserializationContext_Impl0, objectIdValueProperty0);\n    objectIdValueProperty0.hasValueDeserializer();\n}",
    "testName" : "test55"
  },
  "test66" : {
    "methodSignature" : "public boolean isRequired()",
    "methodName" : "isRequired",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test66() throws Throwable {\n    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;\n    PropertyName propertyName0 = PropertyName.USE_DEFAULT;\n    SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();\n    ObjectIdGenerator<Object> objectIdGenerator0 = (ObjectIdGenerator<Object>) mock(ObjectIdGenerator.class, new ViolatedAssumptionAnswer());\n    JsonDeserializer<ObjectIdResolver> jsonDeserializer0 = (JsonDeserializer<ObjectIdResolver>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    doReturn((Object) null).when(jsonDeserializer0).deserialize(any(com.fasterxml.jackson.core.JsonParser.class), any(com.fasterxml.jackson.databind.DeserializationContext.class));\n    ObjectIdReader objectIdReader0 = ObjectIdReader.construct((JavaType) null, propertyName0, (ObjectIdGenerator<?>) objectIdGenerator0, (JsonDeserializer<?>) jsonDeserializer0, (SettableBeanProperty) null, (ObjectIdResolver) simpleObjectIdResolver0);\n    ObjectIdValueProperty objectIdValueProperty0 = new ObjectIdValueProperty(objectIdReader0, propertyMetadata0);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    objectIdValueProperty0.deserializeAndSet((JsonParser) null, defaultDeserializationContext_Impl0, (Object) null);\n    objectIdValueProperty0.isRequired();\n}",
    "testName" : "test66"
  },
  "test77" : {
    "methodSignature" : "public void deserializeAndSet(JsonParser p, DeserializationContext ctxt, Object instance) throws IOException",
    "methodName" : "deserializeAndSet",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test77() throws Throwable {\n    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;\n    PropertyName propertyName0 = PropertyName.USE_DEFAULT;\n    SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();\n    ObjectIdGenerator.IdKey objectIdGenerator_IdKey0 = mock(ObjectIdGenerator.IdKey.class, new ViolatedAssumptionAnswer());\n    ObjectIdGenerator<MissingNode> objectIdGenerator0 = (ObjectIdGenerator<MissingNode>) mock(ObjectIdGenerator.class, new ViolatedAssumptionAnswer());\n    doReturn(objectIdGenerator_IdKey0).when(objectIdGenerator0).key(any());\n    JsonDeserializer<ObjectIdResolver> jsonDeserializer0 = (JsonDeserializer<ObjectIdResolver>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    doReturn(simpleObjectIdResolver0).when(jsonDeserializer0).deserialize(any(com.fasterxml.jackson.core.JsonParser.class), any(com.fasterxml.jackson.databind.DeserializationContext.class));\n    ObjectIdReader objectIdReader0 = new ObjectIdReader((JavaType) null, propertyName0, objectIdGenerator0, jsonDeserializer0, (SettableBeanProperty) null, simpleObjectIdResolver0);\n    ObjectIdValueProperty objectIdValueProperty0 = new ObjectIdValueProperty(objectIdReader0, propertyMetadata0);\n    ObjectIdReader objectIdReader1 = ObjectIdReader.construct((JavaType) null, propertyName0, (ObjectIdGenerator<?>) objectIdGenerator0, (JsonDeserializer<?>) jsonDeserializer0, (SettableBeanProperty) objectIdValueProperty0, objectIdReader0.resolver);\n    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;\n    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);\n    ObjectIdValueProperty objectIdValueProperty1 = new ObjectIdValueProperty(objectIdReader1, propertyMetadata0);\n    objectIdValueProperty1.deserializeAndSet((JsonParser) null, defaultDeserializationContext_Impl0, objectIdValueProperty0);\n}",
    "testName" : "test77"
  },
  "test88" : {
    "methodSignature" : "public Object setAndReturn(Object instance, Object value) throws IOException",
    "methodName" : "setAndReturn",
    "className" : "com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test88() throws Throwable {\n    JsonDeserializer<String> jsonDeserializer0 = (JsonDeserializer<String>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;\n    PropertyName propertyName0 = PropertyName.construct(\"\", \"\");\n    ObjectIdGenerator<Object> objectIdGenerator0 = (ObjectIdGenerator<Object>) mock(ObjectIdGenerator.class, new ViolatedAssumptionAnswer());\n    SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();\n    ObjectIdReader objectIdReader0 = ObjectIdReader.construct((JavaType) null, propertyName0, (ObjectIdGenerator<?>) objectIdGenerator0, (JsonDeserializer<?>) jsonDeserializer0, (SettableBeanProperty) null, (ObjectIdResolver) simpleObjectIdResolver0);\n    ObjectIdValueProperty objectIdValueProperty0 = new ObjectIdValueProperty(objectIdReader0, propertyMetadata0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);\n    JsonDeserializer<MissingNode> jsonDeserializer1 = (JsonDeserializer<MissingNode>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    ObjectIdReader objectIdReader1 = ObjectIdReader.construct((JavaType) null, propertyName0, objectIdReader0.generator, (JsonDeserializer<?>) jsonDeserializer1, (SettableBeanProperty) objectIdValueProperty0, (ObjectIdResolver) simpleObjectIdResolver0);\n    ObjectIdValueProperty objectIdValueProperty1 = new ObjectIdValueProperty(objectIdReader1, propertyMetadata0);\n    ObjectIdGenerators.IntSequenceGenerator objectIdGenerators_IntSequenceGenerator0 = new ObjectIdGenerators.IntSequenceGenerator((Class<?>) null, (-1743));\n    objectIdValueProperty1.setAndReturn(objectIdGenerators_IntSequenceGenerator0, jsonFactory0);\n}",
    "testName" : "test88"
  }
}