/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 28 02:24:31 GMT 2024
 */
package com.fasterxml.jackson.databind.ser.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.SerializableString;
import com.fasterxml.jackson.core.io.SerializedString;
import com.fasterxml.jackson.core.util.ByteArrayBuilder;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
import com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter;
import com.fasterxml.jackson.databind.ser.impl.WritableObjectId;
import com.fasterxml.jackson.databind.type.TypeFactory;
import java.io.IOException;
import java.io.OutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class WritableObjectId_ESTest extends WritableObjectId_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        ObjectIdGenerators.IntSequenceGenerator objectIdGenerators_IntSequenceGenerator0 = new ObjectIdGenerators.IntSequenceGenerator();
        WritableObjectId writableObjectId0 = new WritableObjectId(objectIdGenerators_IntSequenceGenerator0);
        JsonFactory jsonFactory0 = new JsonFactory();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
        JsonGenerator jsonGenerator0 = jsonFactory0.createGenerator((OutputStream) byteArrayBuilder0);
        boolean boolean0 = writableObjectId0.writeAsId(jsonGenerator0, defaultSerializerProvider_Impl0, (ObjectIdWriter) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        ObjectIdGenerators.IntSequenceGenerator objectIdGenerators_IntSequenceGenerator0 = new ObjectIdGenerators.IntSequenceGenerator();
        WritableObjectId writableObjectId0 = new WritableObjectId(objectIdGenerators_IntSequenceGenerator0);
        writableObjectId0.idWritten = true;
        writableObjectId0.generateId(objectIdGenerators_IntSequenceGenerator0);
        JsonFactory jsonFactory0 = new JsonFactory();
        DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        JsonGenerator jsonGenerator0 = jsonFactory0.createGenerator((OutputStream) byteArrayBuilder0);
        writableObjectId0.writeAsId(jsonGenerator0, defaultSerializerProvider_Impl0, (ObjectIdWriter) null);
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        ObjectIdGenerators.IntSequenceGenerator objectIdGenerators_IntSequenceGenerator0 = new ObjectIdGenerators.IntSequenceGenerator();
        WritableObjectId writableObjectId0 = new WritableObjectId(objectIdGenerators_IntSequenceGenerator0);
        DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
        JavaType javaType0 = TypeFactory.unknownType();
        Object object0 = writableObjectId0.generateId(javaType0);
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test23() throws Throwable {
        ObjectIdGenerators.IntSequenceGenerator objectIdGenerators_IntSequenceGenerator0 = new ObjectIdGenerators.IntSequenceGenerator();
        WritableObjectId writableObjectId0 = new WritableObjectId(objectIdGenerators_IntSequenceGenerator0);
        DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
        JavaType javaType0 = TypeFactory.unknownType();
        Object object0 = writableObjectId0.generateId(javaType0);
        ObjectIdWriter objectIdWriter0 = new ObjectIdWriter(javaType0, (SerializableString) null, objectIdGenerators_IntSequenceGenerator0, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER, false);
        boolean boolean0 = writableObjectId0.writeAsId((JsonGenerator) null, defaultSerializerProvider_Impl0, objectIdWriter0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test34() throws Throwable {
        ObjectIdGenerators.IntSequenceGenerator objectIdGenerators_IntSequenceGenerator0 = new ObjectIdGenerators.IntSequenceGenerator();
        WritableObjectId writableObjectId0 = new WritableObjectId(objectIdGenerators_IntSequenceGenerator0);
        DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
        JavaType javaType0 = TypeFactory.unknownType();
        writableObjectId0.generateId(javaType0);
        ObjectIdWriter objectIdWriter0 = new ObjectIdWriter(javaType0, (SerializableString) null, objectIdGenerators_IntSequenceGenerator0, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER, true);
        writableObjectId0.writeAsId((JsonGenerator) null, defaultSerializerProvider_Impl0, objectIdWriter0);
    }

    @Test(timeout = 4000)
    public void test45() throws Throwable {
        ObjectIdGenerators.IntSequenceGenerator objectIdGenerators_IntSequenceGenerator0 = new ObjectIdGenerators.IntSequenceGenerator();
        WritableObjectId writableObjectId0 = new WritableObjectId(objectIdGenerators_IntSequenceGenerator0);
        JsonFactory jsonFactory0 = new JsonFactory();
        DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
        JavaType javaType0 = TypeFactory.unknownType();
        ObjectIdWriter objectIdWriter0 = new ObjectIdWriter(javaType0, (SerializableString) null, objectIdGenerators_IntSequenceGenerator0, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER, true);
        JsonGenerator jsonGenerator0 = jsonFactory0.createGenerator((OutputStream) null);
        writableObjectId0.writeAsField(jsonGenerator0, defaultSerializerProvider_Impl0, objectIdWriter0);
        jsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test56() throws Throwable {
        ObjectIdGenerators.IntSequenceGenerator objectIdGenerators_IntSequenceGenerator0 = new ObjectIdGenerators.IntSequenceGenerator();
        WritableObjectId writableObjectId0 = new WritableObjectId(objectIdGenerators_IntSequenceGenerator0);
        JsonFactory jsonFactory0 = new JsonFactory();
        SerializedString serializedString0 = new SerializedString("JSON");
        DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
        JavaType javaType0 = TypeFactory.unknownType();
        ObjectIdWriter objectIdWriter0 = new ObjectIdWriter(javaType0, serializedString0, objectIdGenerators_IntSequenceGenerator0, defaultSerializerProvider_Impl0.DEFAULT_NULL_KEY_SERIALIZER, true);
        JsonGenerator jsonGenerator0 = jsonFactory0.createGenerator((OutputStream) null);
        writableObjectId0.writeAsField(jsonGenerator0, defaultSerializerProvider_Impl0, objectIdWriter0);
    }
}
