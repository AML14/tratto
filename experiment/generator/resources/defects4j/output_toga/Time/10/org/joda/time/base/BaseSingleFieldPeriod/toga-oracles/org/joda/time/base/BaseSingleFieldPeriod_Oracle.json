[ {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public boolean equals(Object period)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public boolean equals(Object period)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test001"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int getYears()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, years1.getYears())",
  "exception" : "",
  "testName" : "test002"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int getValue(int index)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test013"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public DurationFieldType getFieldType(int index)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test024"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int getDays()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, days0.getDays())",
  "exception" : "",
  "testName" : "test035"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public static Hours hoursBetween(ReadablePartial start, ReadablePartial end)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test046"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public boolean equals(Object period)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test057"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "protected static int standardPeriodIn(ReadablePeriod period, long millisPerUnit)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test068"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "protected static int standardPeriodIn(ReadablePeriod period, long millisPerUnit)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test079"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int getValue(int index)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0810"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int getValue(int index)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0911"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(periodType0.getName())",
  "exception" : "",
  "testName" : "test1012"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(durationFieldType0.getName())",
  "exception" : "",
  "testName" : "test1113"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int get(DurationFieldType type)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test1214"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "protected static int between(ReadableInstant start, ReadableInstant end, DurationFieldType field)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test1315"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "protected static int between(ReadableInstant start, ReadableInstant end, DurationFieldType field)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test1416"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "protected static int between(ReadableInstant start, ReadableInstant end, DurationFieldType field)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test1517"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "protected static int standardPeriodIn(ReadablePeriod period, long millisPerUnit)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1618"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "protected static int standardPeriodIn(ReadablePeriod period, long millisPerUnit)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1719"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int compareTo(BaseSingleFieldPeriod other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1820"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int getValue(int index)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1921"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2022"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int getHours()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2123"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int compareTo(BaseSingleFieldPeriod other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test2124"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int getMonths()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, months1.getMonths())",
  "exception" : "",
  "testName" : "test2225"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int compareTo(BaseSingleFieldPeriod other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test2226"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int compareTo(BaseSingleFieldPeriod other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2327"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int getDays()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, days0.getDays())",
  "exception" : "",
  "testName" : "test2428"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int compareTo(BaseSingleFieldPeriod other)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2429"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public boolean equals(Object period)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test2530"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public boolean equals(Object period)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test2631"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int getWeeks()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, weeks0.getWeeks())",
  "exception" : "",
  "testName" : "test2732"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public boolean equals(Object period)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test2733"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public boolean equals(Object period)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2834"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int getYears()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, years1.getYears())",
  "exception" : "",
  "testName" : "test2835"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public boolean equals(Object period)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test2836"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public boolean isSupported(DurationFieldType type)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test2937"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int getSeconds()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, seconds0.getSeconds())",
  "exception" : "",
  "testName" : "test3038"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public boolean isSupported(DurationFieldType type)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test3039"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int getDays()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, days0.getDays())",
  "exception" : "",
  "testName" : "test3040"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int get(DurationFieldType type)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3141"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int get(DurationFieldType type)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test3242"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int getValue(int index)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3343"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "protected static int standardPeriodIn(ReadablePeriod period, long millisPerUnit)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3444"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public static Weeks weeksBetween(ReadablePartial start, ReadablePartial end)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3545"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public static Days daysBetween(ReadablePartial start, ReadablePartial end)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3646"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "protected static int between(ReadablePartial start, ReadablePartial end, ReadablePeriod zeroInstance)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3747"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "protected static int between(ReadablePartial start, ReadablePartial end, ReadablePeriod zeroInstance)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3848"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public static Seconds secondsBetween(ReadablePartial start, ReadablePartial end)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3949"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public DurationFieldType getFieldType(int index)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4050"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public static Seconds secondsBetween(ReadableInstant start, ReadableInstant end)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4151"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "protected static int between(ReadableInstant start, ReadableInstant end, DurationFieldType field)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4252"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int getYears()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, years0.getYears())",
  "exception" : "",
  "testName" : "test4353"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, years0.size())",
  "exception" : "",
  "testName" : "test4354"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, years0.size())",
  "exception" : "",
  "testName" : "test4455"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int getYears()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, years0.getYears())",
  "exception" : "",
  "testName" : "test4456"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "protected static int standardPeriodIn(ReadablePeriod period, long millisPerUnit)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test4557"
}, {
  "className" : "org.joda.time.base.BaseSingleFieldPeriod",
  "methodSignature" : "public int getMonths()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, months0.getMonths())",
  "exception" : "",
  "testName" : "test4658"
} ]