org.joda.time.format.DateTimeParserBucket,@Test(timeout = 4000)
public void test000() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfDay();
    DateTimeField dateTimeField0 = dateTimeFieldType0.getField((Chronology) null);
    OffsetDateTimeField offsetDateTimeField0 = new OffsetDateTimeField(dateTimeField0, dateTimeFieldType0, 73, 73, 73);
    DateTimeParserBucket.SavedField dateTimeParserBucket_SavedField0 = new DateTimeParserBucket.SavedField(offsetDateTimeField0, 73);
    DateTimeParserBucket.SavedField dateTimeParserBucket_SavedField1 = new DateTimeParserBucket.SavedField(dateTimeField0, ""57600146"", locale0);
    dateTimeParserBucket_SavedField0.compareTo(dateTimeParserBucket_SavedField1);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Time_24b/src/main/java/org/joda/time/format/DateTimeParserBucket/SavedField.java
org.joda.time.format.DateTimeParserBucket,@Test(timeout = 4000)
public void test011() throws Throwable {
    LocalDate.parse(""43r]uw&4"");
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.format.DateTimeParserBucket,@Test(timeout = 4000)
public void test022() throws Throwable {
    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
    DateTimeField dateTimeField0 = buddhistChronology0.secondOfDay();
    Locale locale0 = Locale.ITALY;
    DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(0, buddhistChronology0, locale0, (Integer) 1);
    dateTimeParserBucket0.saveField(dateTimeField0, 0);
    DateTimeParserBucket.SavedState dateTimeParserBucket_SavedState0 = (DateTimeParserBucket.SavedState) dateTimeParserBucket0.saveState();
    dateTimeParserBucket_SavedState0.restoreState(dateTimeParserBucket0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Time_24b/src/main/java/org/joda/time/format/DateTimeParserBucket/SavedState.java
org.joda.time.format.DateTimeParserBucket,@Test(timeout = 4000)
public void test2122() throws Throwable {
    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.clockhourOfDay();
    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis((-1814));
    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance(dateTimeZone0);
    DateTimeField dateTimeField0 = buddhistChronology0.dayOfMonth();
    OffsetDateTimeField offsetDateTimeField0 = new OffsetDateTimeField(dateTimeField0, dateTimeFieldType0, 939, 1702, 3152);
    DateTimeParserBucket.SavedField dateTimeParserBucket_SavedField0 = new DateTimeParserBucket.SavedField(offsetDateTimeField0, 939);
    DateTimeField dateTimeField1 = buddhistChronology0.minuteOfHour();
    Locale locale0 = Locale.TAIWAN;
    DateTimeParserBucket.SavedField dateTimeParserBucket_SavedField1 = new DateTimeParserBucket.SavedField(dateTimeField1, ""!g,P+:QrA'6M?8"", locale0);
    int int0 = dateTimeParserBucket_SavedField0.compareTo(dateTimeParserBucket_SavedField1);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Time_24b/src/main/java/org/joda/time/format/DateTimeParserBucket/SavedField.java
org.joda.time.format.DateTimeParserBucket,@Test(timeout = 4000)
public void test3437() throws Throwable {
    DateTimeZone dateTimeZone0 = DateTimeZone.forID((String) null);
    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance(dateTimeZone0);
    DateTimeField dateTimeField0 = buddhistChronology0.secondOfDay();
    DateTimeParserBucket.SavedField dateTimeParserBucket_SavedField0 = new DateTimeParserBucket.SavedField(dateTimeField0, 1);
    long long0 = dateTimeParserBucket_SavedField0.set(1, true);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Time_24b/src/main/java/org/joda/time/format/DateTimeParserBucket/SavedField.java
org.joda.time.format.DateTimeParserBucket,@Test(timeout = 4000)
public void test3538() throws Throwable {
    GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
    Locale locale0 = Locale.KOREAN;
    DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(31449599966L, gregorianChronology0, locale0);
    DateTimeParserBucket.SavedState dateTimeParserBucket_SavedState0 = (DateTimeParserBucket.SavedState) dateTimeParserBucket0.saveState();
    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.minuteOfHour();
    dateTimeParserBucket0.saveField(dateTimeFieldType0, ""&h-UNPsd[>x7o=S"", locale0);
    boolean boolean0 = dateTimeParserBucket_SavedState0.restoreState(dateTimeParserBucket0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Time_24b/src/main/java/org/joda/time/format/DateTimeParserBucket/SavedState.java
org.joda.time.format.DateTimeParserBucket,@Test(timeout = 4000)
public void test3948() throws Throwable {
    GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
    Locale locale0 = Locale.SIMPLIFIED_CHINESE;
    DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket((-1328L), gregorianChronology0, locale0);
    DateTimeParserBucket.SavedState dateTimeParserBucket_SavedState0 = dateTimeParserBucket0.new SavedState();
    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance((DateTimeZone) null);
    DateTimeField dateTimeField0 = buddhistChronology0.clockhourOfHalfday();
    dateTimeParserBucket0.saveField(dateTimeField0, 1);
    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfYear();
    boolean boolean0 = dateTimeParserBucket_SavedState0.restoreState(dateTimeParserBucket0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Time_24b/src/main/java/org/joda/time/format/DateTimeParserBucket/SavedState.java
