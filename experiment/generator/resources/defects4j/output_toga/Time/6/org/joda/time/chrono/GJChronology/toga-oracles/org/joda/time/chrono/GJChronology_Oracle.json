[ {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public static GJChronology getInstance(DateTimeZone zone, long gregorianCutover, int minDaysInFirstWeek)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "protected void assemble(Fields fields)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test011"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public static GJChronology getInstance(DateTimeZone zone, long gregorianCutover, int minDaysInFirstWeek)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test022"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long julianToGregorianByYear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test033"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long julianToGregorianByWeekyear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test044"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long julianToGregorianByWeekyear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test055"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long gregorianToJulianByYear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test066"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long gregorianToJulianByWeekyear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test077"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public Instant getGregorianCutover()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test088"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long gregorianToJulianByYear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test099"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long gregorianToJulianByWeekyear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1010"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public static synchronized GJChronology getInstance(DateTimeZone zone, ReadableInstant gregorianCutover, int minDaysInFirstWeek)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1111"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "protected void assemble(Fields fields)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1212"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1313"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1414"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1515"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1616"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1717"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public Chronology withZone(DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1818"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public DateTimeZone getZone()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1919"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public DateTimeZone getZone()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2020"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public static synchronized GJChronology getInstance(DateTimeZone zone, ReadableInstant gregorianCutover, int minDaysInFirstWeek)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2121"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public static synchronized GJChronology getInstance(DateTimeZone zone, ReadableInstant gregorianCutover, int minDaysInFirstWeek)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2222"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2323"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public Instant getGregorianCutover()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2424"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2525"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long add(ReadablePeriod period, long instant, int scalar)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2626"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long add(ReadablePeriod period, long instant, int scalar)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2727"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public abstract int[] get(ReadablePeriod period, long startInstant, long endInstant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2828"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int[] get(ReadablePeriod period, long startInstant, long endInstant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2929"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int[] get(ReadablePeriod period, long startInstant, long endInstant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3030"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public LocalDate withWeekyear(int weekyear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3131"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long set(ReadablePartial partial, long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3232"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long set(ReadablePartial partial, long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3333"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public LocalDateTime(Object instant, Chronology chronology)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3434"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3535"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public boolean equals(Object obj)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3636"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public boolean equals(Object obj)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3737"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public boolean equals(Object obj)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3838"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3939"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public static GJChronology getInstance(DateTimeZone zone, long gregorianCutover, int minDaysInFirstWeek)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4040"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4141"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test4242"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public long add(ReadablePeriod period, long instant, int scalar)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test4243"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test4344"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long gregorianToJulianByWeekyear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test4445"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4446"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test4547"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4648"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public Chronology withUTC()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4649"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long gregorianToJulianByYear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test4750"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test4751"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4852"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long julianToGregorianByYear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test4853"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int[] get(ReadablePeriod period, long startInstant, long endInstant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4954"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, gJChronology0.getMinimumDaysInFirstWeek())",
  "exception" : "",
  "testName" : "test4955"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "public int getMinimumDaysInFirstWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5056"
}, {
  "className" : "org.joda.time.chrono.GJChronology",
  "methodSignature" : "long julianToGregorianByWeekyear(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test5057"
} ]