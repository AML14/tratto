org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test2626() throws Throwable {
    GJChronology gJChronology0 = GJChronology.getInstanceUTC();
    Months months0 = Months.TEN;
    gJChronology0.add((ReadablePeriod) months0, (-667L), 4);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test2727() throws Throwable {
    MutableDateTime mutableDateTime0 = new MutableDateTime((DateTimeZone) null);
    Months months0 = Months.TEN;
    DateTime dateTime0 = mutableDateTime0.toDateTime();
    GJChronology gJChronology0 = GJChronology.getInstance((DateTimeZone) null, (ReadableInstant) dateTime0);
    gJChronology0.add((ReadablePeriod) months0, 392L, (-2578));
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test2828() throws Throwable {
    GJChronology gJChronology0 = GJChronology.getInstanceUTC();
    Months months0 = Months.TEN;
    Chronology chronology0 = gJChronology0.withZone((DateTimeZone) null);
    chronology0.get((ReadablePeriod) months0, (-12219292800000L), 131327999333L);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test2929() throws Throwable {
    GJChronology gJChronology0 = GJChronology.getInstanceUTC();
    Months months0 = Months.MAX_VALUE;
    gJChronology0.get((ReadablePeriod) months0, (-2414L), 1583L);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test3030() throws Throwable {
    MutableDateTime mutableDateTime0 = new MutableDateTime((DateTimeZone) null);
    Months months0 = Months.TEN;
    DateTime dateTime0 = mutableDateTime0.toDateTime();
    GJChronology gJChronology0 = GJChronology.getInstance((DateTimeZone) null, (ReadableInstant) dateTime0);
    gJChronology0.get((ReadablePeriod) months0, (-12219292800000L), (-20958393600667L));
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test3131() throws Throwable {
    GJChronology gJChronology0 = GJChronology.getInstanceUTC();
    LocalDate localDate0 = new LocalDate((Chronology) gJChronology0);
    localDate0.withWeekyear(178);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test3232() throws Throwable {
    GJChronology gJChronology0 = GJChronology.getInstanceUTC();
    LocalDateTime localDateTime0 = new LocalDateTime((-12219321178000L));
    gJChronology0.set(localDateTime0, (-12219321178000L));
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test3333() throws Throwable {
    GJChronology gJChronology0 = GJChronology.getInstanceUTC();
    LocalDateTime localDateTime0 = LocalDateTime.now();
    gJChronology0.set(localDateTime0, (-79302582000000L));
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test3434() throws Throwable {
    MutableDateTime mutableDateTime0 = new MutableDateTime((DateTimeZone) null);
    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
    LocalDateTime localDateTime0 = new LocalDateTime(mutableDateTime0, buddhistChronology0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test4243() throws Throwable {
    GJChronology gJChronology0 = GJChronology.getInstance();
    Months months0 = Months.TEN;
    long long0 = gJChronology0.add((ReadablePeriod) months0, (-667L), (-797));
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test4954() throws Throwable {
    GJChronology gJChronology0 = GJChronology.getInstanceUTC();
    Months months0 = Months.TEN;
    int[] intArray0 = gJChronology0.get((ReadablePeriod) months0, (long) 44481320, (-20958393600667L));
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
