[ {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test0000"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0001"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0002"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test0013"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test0014"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public long parseMillis(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0015"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test0027"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test0038"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test0039"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test00410"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test00411"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test00512"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test00513"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test00614"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test00615"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test00716"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test00717"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test00819"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00920"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter2.isOffsetParsed())",
  "exception" : "",
  "testName" : "test00921"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test00922"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withZoneUTC()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00923"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test00924"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test01025"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test01026"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter2.getDefaultYear())",
  "exception" : "",
  "testName" : "test01027"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test01028"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withZoneUTC()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01029"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter2.isOffsetParsed())",
  "exception" : "",
  "testName" : "test01030"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter2.getDefaultYear())",
  "exception" : "",
  "testName" : "test01131"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter2.isOffsetParsed())",
  "exception" : "",
  "testName" : "test01132"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test01133"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withZone(DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01234"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter2.getDefaultYear())",
  "exception" : "",
  "testName" : "test01235"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test01236"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter2.isOffsetParsed())",
  "exception" : "",
  "testName" : "test01237"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test01238"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter2.getDefaultYear())",
  "exception" : "",
  "testName" : "test01339"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withZone(DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01340"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test01341"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test01342"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeFormatter2.isOffsetParsed())",
  "exception" : "",
  "testName" : "test01343"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test01344"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test01445"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test01446"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withPivotYear(Integer pivotYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01447"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter2.getDefaultYear())",
  "exception" : "",
  "testName" : "test01448"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test01449"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test01550"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withPivotYear(Integer pivotYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01551"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter3.getDefaultYear())",
  "exception" : "",
  "testName" : "test01552"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test01554"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test01655"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter2.getDefaultYear())",
  "exception" : "",
  "testName" : "test01656"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test01657"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test01658"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withPivotYear(Integer pivotYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01659"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test01760"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter2.getDefaultYear())",
  "exception" : "",
  "testName" : "test01761"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01762"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withPivotYear(int pivotYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01763"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test01764"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test01765"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01866"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01867"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withPivotYear(int pivotYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01868"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test01869"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter2.getDefaultYear())",
  "exception" : "",
  "testName" : "test01870"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test01871"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test01972"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter2.isOffsetParsed())",
  "exception" : "",
  "testName" : "test01973"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01974"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01975"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test02076"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02077"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test02078"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02079"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter2.isOffsetParsed())",
  "exception" : "",
  "testName" : "test02080"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withLocale(Locale locale)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02181"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test02182"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter2.getDefaultYear())",
  "exception" : "",
  "testName" : "test02183"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test02184"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withLocale(Locale locale)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02285"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02286"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test02287"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test02288"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02289"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test02390"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test02391"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter2.getDefaultYear())",
  "exception" : "",
  "testName" : "test02392"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test02393"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test02494"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test02495"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test02496"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter2.getDefaultYear())",
  "exception" : "",
  "testName" : "test02497"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withChronology(Chronology chrono)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02498"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withChronology(Chronology chrono)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02599"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test025100"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test025101"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter2.getDefaultYear())",
  "exception" : "",
  "testName" : "test025102"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test026103"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test026104"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test026105"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withChronology(Chronology chrono)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test026106"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test026107"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test027108"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test027109"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test028110"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test028111"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test029112"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test029113"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test030114"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public String print(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test030115"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test030116"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test031117"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test031118"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test032119"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test032120"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test032121"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test032122"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public long parseMillis(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, long0)",
  "exception" : "",
  "testName" : "test033123"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test033124"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test033125"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test034126"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test034127"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test035128"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int parseInto(ReadWritableInstant instant, String text, int position)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test035129"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test035130"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test035131"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTime0.getMillis())",
  "exception" : "",
  "testName" : "test036132"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test036133"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test036134"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test037135"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test037136"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test037137"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test038138"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test038139"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test039140"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test039141"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test040142"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test040143"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test041144"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test041145"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test041146"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test042148"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test042149"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test042150"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test043151"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test043152"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test044153"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test044154"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test045155"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test045156"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public Locale getLocale()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(locale0, locale1)",
  "exception" : "",
  "testName" : "test046157"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test046158"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test046159"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test047160"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test047161"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test047162"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public Chronology getChronology()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(chronology0)",
  "exception" : "",
  "testName" : "test048163"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test048164"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test048165"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public Chronology getChronolgy()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test049166"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter3.isOffsetParsed())",
  "exception" : "",
  "testName" : "test049168"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test049169"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test049170"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(StringBuffer buf, ReadablePartial partial)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test050171"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(StringBuffer buf, ReadablePartial partial)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test051172"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(StringBuffer buf, ReadableInstant instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test052173"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(StringBuffer buf, long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test053174"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(StringBuffer buf, long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test054175"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(StringBuffer buf, long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test055176"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(StringBuffer buf, long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test056177"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(Appendable appendable, ReadablePartial partial) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test057178"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(Appendable appendable, ReadablePartial partial) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test058179"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(Appendable appendable, ReadableInstant instant) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test059180"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(Appendable appendable, long instant) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test060181"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(Appendable appendable, long instant) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test061182"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(Writer out, ReadablePartial partial) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test062183"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(Writer out, long instant) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test063184"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(Writer out, long instant) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test064185"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public String print(ReadablePartial partial)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test065186"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public String print(ReadablePartial partial)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test066187"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public String print(ReadablePartial partial)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test067188"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public String print(ReadableInstant instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test068189"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public String print(ReadableInstant instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test069190"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public String print(ReadableInstant instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test070191"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public String print(ReadableInstant instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test071192"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public String print(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test072193"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public String print(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test073194"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public String print(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test074195"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public String print(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test075196"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public MutableDateTime parseMutableDateTime(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test076197"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public MutableDateTime parseMutableDateTime(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test077198"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public long parseMillis(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test078199"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public long parseMillis(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test079200"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public LocalTime parseLocalTime(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test080201"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public LocalTime parseLocalTime(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test081202"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public LocalDateTime parseLocalDateTime(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test082203"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public LocalDateTime parseLocalDateTime(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test083204"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public LocalDate parseLocalDate(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test084205"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public LocalDate parseLocalDate(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test085206"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int parseInto(ReadWritableInstant instant, String text, int position)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test086207"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int parseInto(ReadWritableInstant instant, String text, int position)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test087208"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTime parseDateTime(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test088209"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTime parseDateTime(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test089210"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test090211"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test090212"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public LocalDateTime parseLocalDateTime(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test091213"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(StringBuffer buf, ReadablePartial partial)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test092214"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(StringBuffer buf, ReadablePartial partial)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test093215"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test094216"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test094217"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test094218"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withPivotYear(Integer pivotYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test094219"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test095221"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test096222"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test096223"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public String print(long instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test097224"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test099227"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test099228"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public String print(ReadablePartial partial)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test100229"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test101230"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test101231"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int parseInto(ReadWritableInstant instant, String text, int position)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test102232"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test103233"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test103234"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test103235"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public MutableDateTime parseMutableDateTime(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test103236"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test103237"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test104238"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test104239"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test104240"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test104241"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public MutableDateTime parseMutableDateTime(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test105242"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public MutableDateTime parseMutableDateTime(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test106243"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test107244"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test107245"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test107246"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test107247"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test108248"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTime0.getMillis())",
  "exception" : "",
  "testName" : "test108249"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test108250"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test108251"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTime parseDateTime(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test109252"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test110253"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test110254"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test111255"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test111256"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public LocalDateTime parseLocalDateTime(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test112257"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public long parseMillis(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test113258"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public long parseMillis(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test114259"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutableDateTime0.getMillis())",
  "exception" : "",
  "testName" : "test115260"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test115261"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int parseInto(ReadWritableInstant instant, String text, int position)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test115262"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test115263"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test115264"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test116266"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test116267"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int parseInto(ReadWritableInstant instant, String text, int position)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test116268"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test116269"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test116270"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int parseInto(ReadWritableInstant instant, String text, int position)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test117271"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(Writer out, ReadableInstant instant) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test118272"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(Writer out, ReadablePartial partial) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test119273"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test120274"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test120275"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(Appendable appendable, ReadablePartial partial) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test121276"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withPivotYear(int pivotYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test122277"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter2.getDefaultYear())",
  "exception" : "",
  "testName" : "test122278"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter2.isOffsetParsed())",
  "exception" : "",
  "testName" : "test122279"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test123281"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter2.isOffsetParsed())",
  "exception" : "",
  "testName" : "test123282"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withZone(DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test123283"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test123284"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test124285"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withChronology(Chronology chrono)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test124286"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test124287"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter2.getDefaultYear())",
  "exception" : "",
  "testName" : "test125288"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test125289"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test125290"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter2.isOffsetParsed())",
  "exception" : "",
  "testName" : "test125291"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test126292"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withLocale(Locale locale)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test126293"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test126294"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test127295"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test127296"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isParser()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test127297"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test128298"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isParser()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test128299"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test128300"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test129301"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test129302"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isPrinter()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test129303"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test130304"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isPrinter()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test130305"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test130306"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test131307"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test131308"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test132309"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test132310"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test133311"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test133312"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test134313"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test134314"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeZone getZone()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0)",
  "exception" : "",
  "testName" : "test134315"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test134316"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(Appendable appendable, ReadableInstant instant) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test135317"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test136318"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test136319"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(Appendable appendable, ReadablePartial partial) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test137320"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(Appendable appendable, long instant) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test138321"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test139322"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test139323"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public String print(ReadableInstant instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test140324"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test140325"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test140326"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public DateTimeFormatter withPivotYear(int pivotYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test141327"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter1.isOffsetParsed())",
  "exception" : "",
  "testName" : "test141328"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter1.getDefaultYear())",
  "exception" : "",
  "testName" : "test141329"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test141330"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(Writer out, ReadableInstant instant) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test142331"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public void printTo(Writer out, long instant) throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test143332"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public static MutableDateTime parse(String str)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test144333"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public LocalDate parseLocalDate(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test145334"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public LocalTime parseLocalTime(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test146335"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test147336"
}, {
  "className" : "org.joda.time.format.DateTimeFormatter",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test147337"
} ]