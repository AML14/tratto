{
  "test141141" : {
    "methodSignature" : "public Partial(DateTimeFieldType[] types, int[] values, Chronology chronology)",
    "methodName" : "Partial",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test141141() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[6];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfSecond();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType0;\n    DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.monthOfYear();\n    dateTimeFieldTypeArray0[2] = dateTimeFieldType1;\n    DateTimeFieldType.yearOfCentury();\n    dateTimeFieldTypeArray0[3] = dateTimeFieldType0;\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();\n    DurationField durationField0 = buddhistChronology0.hours();\n    UnsupportedDateTimeField unsupportedDateTimeField0 = UnsupportedDateTimeField.getInstance(dateTimeFieldType0, durationField0);\n    DateTimeFieldType dateTimeFieldType2 = unsupportedDateTimeField0.getType();\n    dateTimeFieldTypeArray0[4] = dateTimeFieldType2;\n    DateTimeFieldType dateTimeFieldType3 = DateTimeFieldType.hourOfDay();\n    dateTimeFieldTypeArray0[5] = dateTimeFieldType3;\n    int[] intArray0 = new int[3];\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    intArray0[0] = 1;\n    intArray0[1] = 1;\n    intArray0[2] = 1;\n    DateTimeFormat.StyleFormatter dateTimeFormat_StyleFormatter0 = new DateTimeFormat.StyleFormatter(1, 1, (-1));\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormat_StyleFormatter0, dateTimeFormat_StyleFormatter0);\n    Integer integer0 = new Integer((-2145318844));\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(integer0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withDefaultYear(1);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withChronology(buddhistChronology0);\n    Locale locale0 = Locale.CANADA;\n    StringBuffer stringBuffer0 = new StringBuffer(1);\n    StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);\n    dateTimeFormatter4.printTo(stringBuffer1, 918518400000L);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withLocale(locale0);\n    ReadablePartial readablePartial0 = null;\n    dateTimeFormatter5.print(readablePartial0);\n    Partial partial0 = null;\n    partial0 = new Partial(dateTimeFieldTypeArray0, intArray0, buddhistChronology0);\n}",
    "testName" : "test141141"
  },
  "test124124" : {
    "methodSignature" : "public LocalDateTime withHourOfDay(int hour)",
    "methodName" : "withHourOfDay",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test124124() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfSecond();\n    dateTimeFieldType0.getRangeDurationType();\n    DateTimeFormatterBuilder.TextField dateTimeFormatterBuilder_TextField0 = new DateTimeFormatterBuilder.TextField(dateTimeFieldType0, false);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TextField0, dateTimeFormatterBuilder_TextField0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZoneUTC();\n    EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstance();\n    LocalDateTime localDateTime0 = new LocalDateTime(\"5+5&Nq'Q=6Y_YwNr8?b\", ethiopicChronology0);\n    dateTimeFormatter1.withZoneUTC();\n    localDateTime0.withHourOfDay(ethiopicChronology0.EE);\n}",
    "testName" : "test124124"
  },
  "test0000" : {
    "methodSignature" : "public Chronology getChronolgy()",
    "methodName" : "getChronolgy",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    DateTimeFormatterBuilder.TimeZoneName dateTimeFormatterBuilder_TimeZoneName0 = new DateTimeFormatterBuilder.TimeZoneName(0, (Map<String, DateTimeZone>) null);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TimeZoneName0, dateTimeFormatterBuilder_TimeZoneName0);\n    dateTimeFormatter0.getPivotYear();\n    UTCProvider uTCProvider0 = new UTCProvider();\n    ZoneId.getAvailableZoneIds();\n    StringWriter stringWriter0 = new StringWriter(2275);\n    stringWriter0.append('O');\n    MutableDateTime.now();\n    dateTimeFormatter0.parseMutableDateTime(\"O-Y1EtX /r)6t63A1{I\");\n    dateTimeFormatter0.withZoneUTC();\n    String string0 = \"\";\n    LocalTime localTime0 = dateTimeFormatter0.parseLocalTime(string0);\n    dateTimeFormatter0.printTo((Appendable) stringWriter0, (ReadablePartial) localTime0);\n    dateTimeFormatter0.getChronolgy();\n}",
    "testName" : "test0000"
  },
  "test0088" : {
    "methodSignature" : "public DateTimeFormatter withChronology(Chronology chrono)",
    "methodName" : "withChronology",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0088() throws Throwable {\n    DateTimeFormatterBuilder.StringLiteral dateTimeFormatterBuilder_StringLiteral0 = new DateTimeFormatterBuilder.StringLiteral(\"\");\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_StringLiteral0, dateTimeFormatterBuilder_StringLiteral0);\n    Integer integer0 = new Integer(314);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withOffsetParsed();\n    dateTimeFormatter1.parseDateTime(\"\");\n    StringBuffer stringBuffer0 = new StringBuffer(314);\n    dateTimeFormatter0.printTo(stringBuffer0, (-2114L));\n    DateTimeZone.getDefault();\n    CharArrayWriter charArrayWriter0 = new CharArrayWriter();\n    dateTimeFormatter1.printTo((Writer) charArrayWriter0, (long) 314);\n    LocalDate localDate0 = dateTimeFormatter1.parseLocalDate(\"\");\n    stringBuffer0.setLength(314);\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withOffsetParsed();\n    dateTimeFormatter1.isParser();\n    dateTimeFormatter2.parseDateTime(\"\");\n    Locale locale0 = Locale.KOREA;\n    dateTimeFormatterBuilder_StringLiteral0.printTo((Writer) charArrayWriter0, (ReadablePartial) localDate0, locale0);\n    Chronology chronology0 = null;\n    dateTimeFormatter0.parseDateTime(\"The datetime zone must not be null\");\n    LenientChronology lenientChronology0 = LenientChronology.getInstance(chronology0);\n    dateTimeFormatter0.withChronology(lenientChronology0);\n}",
    "testName" : "test0088"
  },
  "test149149" : {
    "methodSignature" : "public int parseInto(ReadWritableInstant instant, String text, int position)",
    "methodName" : "parseInto",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test149149() throws Throwable {\n    DateTimeFormatterBuilder.CharacterLiteral dateTimeFormatterBuilder_CharacterLiteral0 = new DateTimeFormatterBuilder.CharacterLiteral('{');\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_CharacterLiteral0, dateTimeFormatterBuilder_CharacterLiteral0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(90);\n    MutableDateTime mutableDateTime0 = MutableDateTime.now();\n    DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();\n    MutableDateTime mutableDateTime1 = mutableDateTime0.toMutableDateTime(dateTimeZone0);\n    PipedWriter pipedWriter0 = new PipedWriter();\n    BufferedWriter bufferedWriter0 = new BufferedWriter(pipedWriter0, 1);\n    LocalDateTime localDateTime0 = new LocalDateTime((-1656L));\n    dateTimeFormatter1.printTo((Appendable) bufferedWriter0, (ReadablePartial) localDateTime0);\n    String string0 = \"\";\n    int int0 = (-2866);\n    dateTimeFormatter1.parseInto(mutableDateTime1, string0, int0);\n}",
    "testName" : "test149149"
  },
  "test107107" : {
    "methodSignature" : "public void printTo(Writer out, ReadableInstant instant) throws IOException",
    "methodName" : "printTo",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107107() throws Throwable {\n    FileSystemHandling.appendLineToFile((EvoSuiteFile) null, \"Instant must not be null\");\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.halfdayOfDay();\n    DateTimeFormatterBuilder.Fraction dateTimeFormatterBuilder_Fraction0 = new DateTimeFormatterBuilder.Fraction(dateTimeFieldType0, 2000, 2000);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Fraction0, dateTimeFormatterBuilder_Fraction0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withDefaultYear(2147483573);\n    CopticChronology copticChronology0 = CopticChronology.getInstance();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withChronology(copticChronology0);\n    dateTimeFormatter2.withZoneUTC();\n    StringBuffer stringBuffer0 = new StringBuffer();\n    ZoneOffset zoneOffset0 = ZoneOffset.MIN;\n    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);\n    DateTimeZone dateTimeZone0 = DateTimeZone.forTimeZone(timeZone0);\n    Locale locale0 = Locale.GERMANY;\n    dateTimeFormatterBuilder_Fraction0.printTo(stringBuffer0, (long) 2147483573, (Chronology) copticChronology0, (-745), dateTimeZone0, locale0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter0.withPivotYear((Integer) null);\n    dateTimeFormatter3.printTo((Writer) null, (ReadableInstant) null);\n}",
    "testName" : "test107107"
  },
  "test03636" : {
    "methodSignature" : "public DateTimeFormatter withDefaultYear(int defaultYear)",
    "methodName" : "withDefaultYear",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03636() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyear();\n    DateTimeFormatterBuilder.PaddedNumber dateTimeFormatterBuilder_PaddedNumber0 = new DateTimeFormatterBuilder.PaddedNumber(dateTimeFieldType0, (-2392), true, (-5267));\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_PaddedNumber0, dateTimeFormatterBuilder_PaddedNumber0);\n    DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZone(dateTimeZone0);\n    Integer integer0 = new Integer(117);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withPivotYear(integer0);\n    dateTimeFormatter2.withDefaultYear(117);\n}",
    "testName" : "test03636"
  },
  "test02424" : {
    "methodSignature" : "public DateTimeParser getParser()",
    "methodName" : "getParser",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02424() throws Throwable {\n    DateTimeFormatterBuilder.CharacterLiteral dateTimeFormatterBuilder_CharacterLiteral0 = new DateTimeFormatterBuilder.CharacterLiteral('~');\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter((DateTimePrinter) null, dateTimeFormatterBuilder_CharacterLiteral0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZoneUTC();\n    Integer integer0 = new Integer(1207);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withPivotYear(integer0);\n    dateTimeFormatter2.getParser();\n}",
    "testName" : "test02424"
  },
  "test01212" : {
    "methodSignature" : "public void printTo(Writer out, ReadableInstant instant) throws IOException",
    "methodName" : "printTo",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01212() throws Throwable {\n    FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfMonth();\n    DateTimeFormatterBuilder.TextField dateTimeFormatterBuilder_TextField0 = new DateTimeFormatterBuilder.TextField(dateTimeFieldType0, false);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TextField0, dateTimeFormatterBuilder_TextField0);\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance((DateTimeZone) fixedDateTimeZone0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withChronology(buddhistChronology0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withOffsetParsed();\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withZoneUTC();\n    byte[] byteArray0 = new byte[4];\n    byteArray0[1] = (byte) 9;\n    byteArray0[1] = (byte) 6;\n    byteArray0[2] = (byte) 0;\n    byteArray0[3] = (byte) (-83);\n    FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withPivotYear(1);\n    CharArrayWriter charArrayWriter0 = new CharArrayWriter();\n    CharArrayWriter charArrayWriter1 = charArrayWriter0.append('X');\n    dateTimeFormatter3.printTo((Writer) charArrayWriter1, (ReadablePartial) null);\n    dateTimeFormatter2.getParser();\n    String string0 = \"\";\n    dateTimeFormatter4.parseLocalDate(string0);\n    String string1 = \"\";\n    dateTimeFormatter3.parseMutableDateTime(string1);\n    String string2 = \"\";\n    MutableDateTime mutableDateTime0 = MutableDateTime.parse(string2, dateTimeFormatter0);\n    String string3 = \"Ox\\\\M O:\\\\KqaO\";\n    dateTimeFormatter4.parseInto(mutableDateTime0, string3, byteArray0[2]);\n    dateTimeFormatter0.printTo((Writer) charArrayWriter0, (ReadableInstant) mutableDateTime0);\n}",
    "testName" : "test01212"
  },
  "test06868" : {
    "methodSignature" : "public MutableDateTime parseMutableDateTime(String text)",
    "methodName" : "parseMutableDateTime",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06868() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    DateTimeFormatterBuilder.Composite dateTimeFormatterBuilder_Composite0 = new DateTimeFormatterBuilder.Composite(linkedList0);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Composite0, dateTimeFormatterBuilder_Composite0);\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withChronology(buddhistChronology0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withDefaultYear((-2317));\n    Integer.getInteger(\"$BxB)A)a^.Zjn.5If-E\");\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withPivotYear((Integer) null);\n    Locale locale0 = new Locale(\"$BxB)A)a^.Zjn.5If-E\", (String) null);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withLocale(locale0);\n    String string0 = null;\n    dateTimeFormatter5.parseMutableDateTime(string0);\n}",
    "testName" : "test06868"
  },
  "test02828" : {
    "methodSignature" : "public void printTo(StringBuffer buf, ReadablePartial partial)",
    "methodName" : "printTo",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02828() throws Throwable {\n    ISOChronology iSOChronology0 = ISOChronology.getInstance();\n    LocalDate localDate0 = new LocalDate((Chronology) iSOChronology0);\n    Partial partial0 = new Partial(localDate0);\n    DateTimeFormatter dateTimeFormatter0 = partial0.getFormatter();\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZoneUTC();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"w\");\n    Object[] objectArray0 = new Object[8];\n    objectArray0[0] = (Object) \"|\";\n    objectArray0[1] = (Object) \"w\";\n    objectArray0[2] = (Object) \"|\";\n    objectArray0[3] = (Object) \"w\";\n    objectArray0[4] = (Object) localDate0;\n    objectArray0[5] = (Object) \"w\";\n    objectArray0[6] = (Object) dateTimeFormatter1;\n    objectArray0[7] = (Object) dateTimeFormatter1;\n    PrintStream printStream0 = mockPrintStream0.printf(\"|\", objectArray0);\n    dateTimeFormatter1.printTo((Appendable) printStream0, (ReadablePartial) partial0);\n    dateTimeFormatter1.getChronology();\n    MutableDateTime mutableDateTime0 = new MutableDateTime(0L);\n    dateTimeFormatter1.printTo((Appendable) printStream0, (ReadableInstant) mutableDateTime0);\n    dateTimeFormatter1.parseLocalTime(\"w\");\n    StringBuffer stringBuffer0 = null;\n    dateTimeFormatter0.printTo(stringBuffer0, (ReadablePartial) partial0);\n}",
    "testName" : "test02828"
  },
  "test113113" : {
    "methodSignature" : "public static final void setCurrentMillisProvider(MillisProvider millisProvider) throws SecurityException",
    "methodName" : "setCurrentMillisProvider",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113113() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.yearOfCentury();\n    dateTimeFieldType0.getDurationType();\n    int int0 = 2428;\n    DateTimeFormatterBuilder.TwoDigitYear dateTimeFormatterBuilder_TwoDigitYear0 = new DateTimeFormatterBuilder.TwoDigitYear(dateTimeFieldType0, 2428, true);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TwoDigitYear0, dateTimeFormatterBuilder_TwoDigitYear0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withOffsetParsed();\n    FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    Locale locale0 = Locale.JAPAN;\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withLocale(locale0);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withDefaultYear(2428);\n    ISOChronology iSOChronology0 = ISOChronology.getInstance();\n    MutableDateTime mutableDateTime0 = new MutableDateTime((Chronology) iSOChronology0);\n    dateTimeFormatter1.parseInto(mutableDateTime0, \"Multiplication overflows a long: \", 17887500);\n    dateTimeFormatter3.print((ReadablePartial) null);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withChronology(iSOChronology0);\n    dateTimeFormatter5.withDefaultYear(int0);\n    String string0 = \"\";\n    dateTimeFormatter3.parseLocalDateTime(string0);\n    dateTimeFormatter5.withLocale(locale0);\n    DateTimeUtils.MillisProvider dateTimeUtils_MillisProvider0 = mock(DateTimeUtils.MillisProvider.class, new ViolatedAssumptionAnswer());\n    DateTimeUtils.setCurrentMillisProvider(dateTimeUtils_MillisProvider0);\n}",
    "testName" : "test113113"
  },
  "test01616" : {
    "methodSignature" : "public DateTimeFormatter withZoneUTC()",
    "methodName" : "withZoneUTC",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01616() throws Throwable {\n    DateTimeFormatterBuilder.CharacterLiteral dateTimeFormatterBuilder_CharacterLiteral0 = new DateTimeFormatterBuilder.CharacterLiteral('w');\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_CharacterLiteral0, dateTimeFormatterBuilder_CharacterLiteral0);\n    GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withChronology(gregorianChronology0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withOffsetParsed();\n    FileSystemHandling.appendStringToFile((EvoSuiteFile) null, \"org.joda.time.chrono.ZonedChronology$ZonedDurationField\");\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withPivotYear((-148));\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withZone((DateTimeZone) null);\n    MutableDateTime mutableDateTime0 = MutableDateTime.now();\n    MutableDateTime mutableDateTime1 = mutableDateTime0.toMutableDateTimeISO();\n    dateTimeFormatter5.parseInto(mutableDateTime1, \"\", 3);\n    dateTimeFormatter0.withZoneUTC();\n}",
    "testName" : "test01616"
  },
  "test08484" : {
    "methodSignature" : "public DateTime parseDateTime(String text)",
    "methodName" : "parseDateTime",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08484() throws Throwable {\n    FileSystemHandling fileSystemHandling0 = new FileSystemHandling();\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfYear();\n    DateTimeFormatterBuilder.TextField dateTimeFormatterBuilder_TextField0 = new DateTimeFormatterBuilder.TextField(dateTimeFieldType0, true);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter((DateTimePrinter) null, dateTimeFormatterBuilder_TextField0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(32);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withOffsetParsed();\n    Integer integer0 = Integer.getInteger(\"ALL_IDS\", 1894);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withPivotYear(integer0);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withDefaultYear(2000);\n    dateTimeFormatter5.parseDateTime((String) null);\n}",
    "testName" : "test08484"
  },
  "test07272" : {
    "methodSignature" : "public String print(long instant)",
    "methodName" : "print",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07272() throws Throwable {\n    DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();\n    MutableDateTime mutableDateTime0 = new MutableDateTime((-2785L));\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.era();\n    DateTimeFormatterBuilder.Fraction dateTimeFormatterBuilder_Fraction0 = new DateTimeFormatterBuilder.Fraction(dateTimeFieldType0, (-1), 692);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Fraction0, dateTimeFormatterBuilder_Fraction0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(12);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZone(dateTimeZone0);\n    dateTimeFormatter2.print((-2856L));\n}",
    "testName" : "test07272"
  },
  "test144144" : {
    "methodSignature" : "public DateTimeFormatter withChronology(Chronology chrono)",
    "methodName" : "withChronology",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test144144() throws Throwable {\n    DateTimeFormatterBuilder.StringLiteral dateTimeFormatterBuilder_StringLiteral0 = new DateTimeFormatterBuilder.StringLiteral(\"\");\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_StringLiteral0, dateTimeFormatterBuilder_StringLiteral0);\n    Integer integer0 = new Integer(314);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(integer0);\n    DateTime dateTime0 = dateTimeFormatter1.parseDateTime(\"\");\n    StringBuffer stringBuffer0 = new StringBuffer(314);\n    dateTimeFormatter0.printTo(stringBuffer0, 0L);\n    DateTimeZone.getDefault();\n    CharArrayWriter charArrayWriter0 = new CharArrayWriter();\n    dateTimeFormatter1.printTo((Writer) charArrayWriter0, (long) 314);\n    dateTimeFormatter1.parseLocalDate(\"\");\n    stringBuffer0.setLength(314);\n    dateTimeFormatter1.isParser();\n    dateTimeFormatter1.print((ReadableInstant) dateTime0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withOffsetParsed();\n    dateTimeFormatter1.isParser();\n    dateTimeFormatter2.parseDateTime(\"\");\n    LenientChronology lenientChronology0 = LenientChronology.getInstance((Chronology) null);\n    dateTimeFormatter0.withChronology(lenientChronology0);\n}",
    "testName" : "test144144"
  },
  "test04040" : {
    "methodSignature" : "public String print(long instant)",
    "methodName" : "print",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04040() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfDay();\n    DateTimeFormatterBuilder.Fraction dateTimeFormatterBuilder_Fraction0 = new DateTimeFormatterBuilder.Fraction(dateTimeFieldType0, 2847, 2847);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Fraction0, dateTimeFormatterBuilder_Fraction0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(2847);\n    Integer integer0 = new Integer(7593750);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withPivotYear(integer0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withOffsetParsed();\n    dateTimeFormatter3.print((long) 2847);\n}",
    "testName" : "test04040"
  },
  "test121121" : {
    "methodSignature" : "public String print(ReadableInstant instant)",
    "methodName" : "print",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121121() throws Throwable {\n    DateTimeFormatterBuilder.CharacterLiteral dateTimeFormatterBuilder_CharacterLiteral0 = new DateTimeFormatterBuilder.CharacterLiteral('.');\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    Integer integer0 = new Integer(3);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_CharacterLiteral0, dateTimeFormatterBuilder_CharacterLiteral0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withDefaultYear(3);\n    Locale locale0 = Locale.PRC;\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withLocale(locale0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withOffsetParsed();\n    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetHours(3);\n    IslamicChronology islamicChronology0 = IslamicChronology.getInstance(dateTimeZone0);\n    Chronology chronology0 = islamicChronology0.withZone(dateTimeZone0);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withChronology(chronology0);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withZoneUTC();\n    MutableDateTime mutableDateTime0 = MutableDateTime.now();\n    DateTime dateTime0 = mutableDateTime0.toDateTime();\n    DateTime dateTime1 = dateTime0.withDayOfYear(1);\n    DateTime dateTime2 = dateTime1.plusMillis(0);\n    DateTime dateTime3 = dateTime2.plusMinutes(1852);\n    dateTimeFormatter5.print((ReadableInstant) dateTime3);\n}",
    "testName" : "test121121"
  },
  "test0099" : {
    "methodSignature" : "public void printTo(Appendable appendable, long instant) throws IOException",
    "methodName" : "printTo",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0099() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.yearOfEra();\n    FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);\n    DateTimeFormatterBuilder.UnpaddedNumber dateTimeFormatterBuilder_UnpaddedNumber0 = new DateTimeFormatterBuilder.UnpaddedNumber(dateTimeFieldType0, (-706), true);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_UnpaddedNumber0, dateTimeFormatterBuilder_UnpaddedNumber0);\n    dateTimeFormatter0.withZoneUTC();\n    Locale locale0 = Locale.FRANCE;\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear((-706));\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withPivotYear((-706));\n    GJChronology gJChronology0 = GJChronology.getInstanceUTC();\n    Integer integer0 = new Integer((-706));\n    DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket((-706), gJChronology0, locale0, integer0, (-706));\n    DateTimeZone dateTimeZone0 = dateTimeParserBucket0.getZone();\n    DateTimeUtils.MillisProvider dateTimeUtils_MillisProvider0 = mock(DateTimeUtils.MillisProvider.class, new ViolatedAssumptionAnswer());\n    doReturn((long) (-706)).when(dateTimeUtils_MillisProvider0).getMillis();\n    DateTimeUtils.setCurrentMillisProvider(dateTimeUtils_MillisProvider0);\n    dateTimeParserBucket0.computeMillis();\n    MutableDateTime mutableDateTime0 = new MutableDateTime(dateTimeZone0);\n    dateTimeFormatter3.parseInto(mutableDateTime0, \"6?OG.\", (-706));\n    System.setCurrentTimeMillis(4121L);\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"6?OG.\", true);\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, true);\n    dateTimeFormatter1.printTo((Appendable) mockPrintWriter0, (long) 3);\n}",
    "testName" : "test0099"
  },
  "test09292" : {
    "methodSignature" : "public LocalDate withMonthOfYear(int monthOfYear)",
    "methodName" : "withMonthOfYear",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09292() throws Throwable {\n    int int0 = 7;\n    DateTimeFormatterBuilder.TimeZoneOffset dateTimeFormatterBuilder_TimeZoneOffset0 = new DateTimeFormatterBuilder.TimeZoneOffset(\"^,\", \"\", false, 7, 7);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TimeZoneOffset0, dateTimeFormatterBuilder_TimeZoneOffset0);\n    Integer integer0 = new Integer(2128);\n    dateTimeFormatter0.withPivotYear(integer0);\n    CharArrayWriter charArrayWriter0 = new CharArrayWriter();\n    MonthDay monthDay0 = MonthDay.parse(\"=1tR*\", dateTimeFormatter0);\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.hourOfDay();\n    int int1 = 0;\n    MonthDay monthDay1 = monthDay0.withField(dateTimeFieldType0, int1);\n    LocalDate localDate0 = monthDay1.toLocalDate(int0);\n    localDate0.withMonthOfYear(int0);\n}",
    "testName" : "test09292"
  },
  "test06060" : {
    "methodSignature" : "public Chronology getChronolgy()",
    "methodName" : "getChronolgy",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06060() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.centuryOfEra();\n    DateTimeFormatterBuilder.TextField dateTimeFormatterBuilder_TextField0 = new DateTimeFormatterBuilder.TextField(dateTimeFieldType0, true);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TextField0, dateTimeFormatterBuilder_TextField0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZoneUTC();\n    Locale locale0 = Locale.KOREAN;\n    Integer integer0 = new Integer(1443);\n    Integer integer1 = Integer.getInteger(\"Z'XETJC>(;)qj'x'.-\", integer0);\n    DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(1687L, (Chronology) null, locale0, integer1, 1443);\n    dateTimeFormatterBuilder_TextField0.parseInto(dateTimeParserBucket0, \"2yGA3&5>{Ut5h$c\", (-974));\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withDefaultYear((-845));\n    dateTimeFormatter2.getChronolgy();\n}",
    "testName" : "test06060"
  },
  "test03232" : {
    "methodSignature" : "public String print(long instant)",
    "methodName" : "print",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03232() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.era();\n    DateTimeFormatterBuilder.Fraction dateTimeFormatterBuilder_Fraction0 = new DateTimeFormatterBuilder.Fraction(dateTimeFieldType0, 0, 0);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter((DateTimePrinter) null, dateTimeFormatterBuilder_Fraction0);\n    Locale locale0 = Locale.UK;\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withLocale(locale0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withPivotYear(0);\n    int int0 = (-1);\n    dateTimeFormatter1.withLocale(locale0);\n    dateTimeFormatter0.withDefaultYear((-1));\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withDefaultYear((-1));\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withZoneUTC();\n    UTCProvider uTCProvider0 = new UTCProvider();\n    String string0 = \"Parsing not supported\";\n    dateTimeFormatter0.parseMutableDateTime(\"Parsing not supported\");\n    DateTimeZone dateTimeZone0 = uTCProvider0.getZone(string0);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withZone(dateTimeZone0);\n    dateTimeFormatter5.print((long) int0);\n}",
    "testName" : "test03232"
  },
  "test08888" : {
    "methodSignature" : "public LocalDateTime parseLocalDateTime(String text)",
    "methodName" : "parseLocalDateTime",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08888() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekOfWeekyear();\n    DateTimeFormatterBuilder.TextField dateTimeFormatterBuilder_TextField0 = new DateTimeFormatterBuilder.TextField(dateTimeFieldType0, false);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TextField0, dateTimeFormatterBuilder_TextField0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withDefaultYear((-2912));\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withPivotYear((Integer) null);\n    Locale locale0 = new Locale(\"ugN&'O\");\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withLocale(locale0);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withPivotYear((-35));\n    DateTimeFormatter dateTimeFormatter6 = dateTimeFormatter5.withOffsetParsed();\n    dateTimeFormatter6.parseLocalDate((String) null);\n    String string0 = \"YB\";\n    dateTimeFormatter3.parseLocalDateTime(string0);\n}",
    "testName" : "test08888"
  },
  "test102102" : {
    "methodSignature" : "public DateTimePrinter getPrinter()",
    "methodName" : "getPrinter",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102102() throws Throwable {\n    FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);\n    HashMap<String, DateTimeZone> hashMap0 = new HashMap<String, DateTimeZone>();\n    DateTimeFormatterBuilder.TimeZoneName dateTimeFormatterBuilder_TimeZoneName0 = new DateTimeFormatterBuilder.TimeZoneName((-974), hashMap0);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TimeZoneName0, dateTimeFormatterBuilder_TimeZoneName0);\n    Locale locale0 = Locale.SIMPLIFIED_CHINESE;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);\n    Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;\n    List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);\n    Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;\n    List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode1);\n    Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;\n    List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2, locale_FilteringMode2);\n    Locale.lookup(linkedList0, list3);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withLocale(locale0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withPivotYear((-974));\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withZoneUTC();\n    dateTimeFormatter3.getPrinter();\n}",
    "testName" : "test102102"
  },
  "test02020" : {
    "methodSignature" : "public ZoneInfoProvider(String resourcePath) throws IOException",
    "methodName" : "ZoneInfoProvider",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02020() throws Throwable {\n    DateTimeFormatterBuilder.TimeZoneId dateTimeFormatterBuilder_TimeZoneId0 = DateTimeFormatterBuilder.TimeZoneId.INSTANCE;\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TimeZoneId0, dateTimeFormatterBuilder_TimeZoneId0);\n    ZoneInfoProvider zoneInfoProvider0 = new ZoneInfoProvider(\"r!nOfir>3qi9T!ms6\");\n}",
    "testName" : "test02020"
  },
  "test07676" : {
    "methodSignature" : "public void printTo(Writer out, ReadableInstant instant) throws IOException",
    "methodName" : "printTo",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07676() throws Throwable {\n    FileSystemHandling.appendLineToFile((EvoSuiteFile) null, \"Instant must not be null\");\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.halfdayOfDay();\n    DateTimeFormatterBuilder.Fraction dateTimeFormatterBuilder_Fraction0 = new DateTimeFormatterBuilder.Fraction(dateTimeFieldType0, 2000, 2000);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Fraction0, dateTimeFormatterBuilder_Fraction0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withDefaultYear(2147483573);\n    CopticChronology copticChronology0 = CopticChronology.getInstance();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withChronology(copticChronology0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withOffsetParsed();\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withPivotYear((Integer) null);\n    dateTimeFormatter5.printTo((Writer) null, (ReadableInstant) null);\n}",
    "testName" : "test07676"
  },
  "test129129" : {
    "methodSignature" : "public LocalDateTime parseLocalDateTime(String text)",
    "methodName" : "parseLocalDateTime",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test129129() throws Throwable {\n    DateTimeFormatterBuilder.StringLiteral dateTimeFormatterBuilder_StringLiteral0 = new DateTimeFormatterBuilder.StringLiteral(\"\");\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_StringLiteral0, dateTimeFormatterBuilder_StringLiteral0);\n    Integer integer0 = new Integer(314);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(integer0);\n    dateTimeFormatter1.parseDateTime(\"\");\n    GJChronology gJChronology0 = GJChronology.getInstanceUTC();\n    DateTimeZone dateTimeZone0 = gJChronology0.getZone();\n    GregorianChronology gregorianChronology0 = GregorianChronology.getInstance(dateTimeZone0);\n    gregorianChronology0.withUTC();\n    Locale locale0 = Locale.GERMANY;\n    CharArrayWriter charArrayWriter0 = new CharArrayWriter();\n    dateTimeFormatter1.printTo((Writer) charArrayWriter0, (long) 0);\n    dateTimeFormatter1.parseLocalDate(\"\");\n    dateTimeFormatter0.parseLocalDateTime(\"`wQX;fRQu\");\n}",
    "testName" : "test129129"
  },
  "test05252" : {
    "methodSignature" : "public DateTimeParser getParser()",
    "methodName" : "getParser",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05252() throws Throwable {\n    DateTimeFormatterBuilder.TimeZoneId dateTimeFormatterBuilder_TimeZoneId0 = DateTimeFormatterBuilder.TimeZoneId.INSTANCE;\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TimeZoneId0, dateTimeFormatterBuilder_TimeZoneId0);\n    DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZone(dateTimeZone0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withOffsetParsed();\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withOffsetParsed();\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(12);\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"rW;M,l*\\\"f\");\n    CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);\n    PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) charBuffer0, (-2147483572), 1);\n    long long0 = 0L;\n    dateTimeFormatter3.printTo((Appendable) printWriter0, long0);\n    dateTimeFormatter2.getParser();\n}",
    "testName" : "test05252"
  },
  "test09696" : {
    "methodSignature" : "public Partial minus(ReadablePeriod period)",
    "methodName" : "minus",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09696() throws Throwable {\n    DateTimeFormatterBuilder.TimeZoneId dateTimeFormatterBuilder_TimeZoneId0 = DateTimeFormatterBuilder.TimeZoneId.INSTANCE;\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TimeZoneId0, dateTimeFormatterBuilder_TimeZoneId0);\n    Locale locale0 = Locale.TAIWAN;\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withLocale(locale0);\n    dateTimeFormatter1.withOffsetParsed();\n    DateTimeFormatterBuilder.CharacterLiteral dateTimeFormatterBuilder_CharacterLiteral0 = new DateTimeFormatterBuilder.CharacterLiteral('k');\n    DateTimeFormatter dateTimeFormatter2 = new DateTimeFormatter(dateTimeFormatterBuilder_CharacterLiteral0, dateTimeFormatterBuilder_CharacterLiteral0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withZone((DateTimeZone) null);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withPivotYear(6);\n    DateTimeFormatter dateTimeFormatter6 = dateTimeFormatter5.withDefaultYear(523);\n    CharArrayWriter charArrayWriter0 = new CharArrayWriter();\n    dateTimeFormatter6.printTo((Appendable) charArrayWriter0, (-28801249L));\n    LocalDateTime localDateTime0 = LocalDateTime.now((DateTimeZone) null);\n    Partial partial0 = new Partial(localDateTime0);\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.monthOfYear();\n    int int0 = 3116;\n    Partial partial1 = partial0.withField(dateTimeFieldType0, int0);\n    ReadablePeriod readablePeriod0 = null;\n    partial1.minus(readablePeriod0);\n}",
    "testName" : "test09696"
  },
  "test06464" : {
    "methodSignature" : "public int getDefaultYear()",
    "methodName" : "getDefaultYear",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06464() throws Throwable {\n    DateTimeFormatterBuilder.CharacterLiteral dateTimeFormatterBuilder_CharacterLiteral0 = new DateTimeFormatterBuilder.CharacterLiteral('h');\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_CharacterLiteral0, dateTimeFormatterBuilder_CharacterLiteral0);\n    Integer integer0 = new Integer(3600000);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(integer0);\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstance((DateTimeZone) fixedDateTimeZone0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withChronology(ethiopicChronology0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withPivotYear(3600000);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withDefaultYear(0);\n    Locale locale0 = Locale.SIMPLIFIED_CHINESE;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    UTCProvider uTCProvider0 = new UTCProvider();\n    Set<String> set0 = uTCProvider0.getAvailableIDs();\n    Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;\n    Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withLocale(locale0);\n    dateTimeFormatter5.getDefaultYear();\n}",
    "testName" : "test06464"
  },
  "test133133" : {
    "methodSignature" : "public MutableDateTime parseMutableDateTime(String text)",
    "methodName" : "parseMutableDateTime",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test133133() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    LinkedList<Object> linkedList1 = new LinkedList<Object>(linkedList0);\n    DateTimeFormatterBuilder.Composite dateTimeFormatterBuilder_Composite0 = new DateTimeFormatterBuilder.Composite(linkedList1);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Composite0, dateTimeFormatterBuilder_Composite0);\n    Chronology chronology0 = null;\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withChronology((Chronology) null);\n    String string0 = \"centuryOfEra\";\n    dateTimeFormatter1.parseMutableDateTime(\"centuryOfEra\");\n}",
    "testName" : "test133133"
  },
  "test08080" : {
    "methodSignature" : "public int parseInto(ReadWritableInstant instant, String text, int position)",
    "methodName" : "parseInto",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08080() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.minuteOfDay();\n    dateTimeFieldType0.getRangeDurationType();\n    DateTimeFormatterBuilder.TextField dateTimeFormatterBuilder_TextField0 = new DateTimeFormatterBuilder.TextField(dateTimeFieldType0, false);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TextField0, dateTimeFormatterBuilder_TextField0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withOffsetParsed();\n    EthiopicChronology.getInstance();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    Locale locale0 = Locale.SIMPLIFIED_CHINESE;\n    dateTimeFormatter2.withLocale(locale0);\n    dateTimeFormatter2.isPrinter();\n    dateTimeFormatter1.getPivotYear();\n    dateTimeFormatter1.withOffsetParsed();\n    dateTimeFormatter2.getLocale();\n    dateTimeFormatter2.parseInto((ReadWritableInstant) null, \"\", 1154);\n}",
    "testName" : "test08080"
  },
  "test118118" : {
    "methodSignature" : "public static final void setCurrentMillisProvider(MillisProvider millisProvider) throws SecurityException",
    "methodName" : "setCurrentMillisProvider",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118118() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.yearOfCentury();\n    dateTimeFieldType0.getDurationType();\n    int int0 = 2428;\n    DateTimeFormatterBuilder.TwoDigitYear dateTimeFormatterBuilder_TwoDigitYear0 = new DateTimeFormatterBuilder.TwoDigitYear(dateTimeFieldType0, 2428, true);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TwoDigitYear0, dateTimeFormatterBuilder_TwoDigitYear0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withOffsetParsed();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    Locale locale0 = Locale.JAPAN;\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withLocale(locale0);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withDefaultYear(2428);\n    ISOChronology iSOChronology0 = ISOChronology.getInstance();\n    MutableDateTime mutableDateTime0 = new MutableDateTime((Chronology) iSOChronology0);\n    dateTimeFormatter1.parseInto(mutableDateTime0, \"Multiplication overflows a long: \", 17887500);\n    dateTimeFieldType0.getRangeDurationType();\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withChronology(iSOChronology0);\n    dateTimeFormatter5.withDefaultYear(2428);\n    String string0 = \"\";\n    StringBuffer stringBuffer0 = new StringBuffer(0);\n    dateTimeFormatter0.printTo(stringBuffer0, (ReadablePartial) null);\n    dateTimeFormatter3.parseLocalDateTime(string0);\n    dateTimeFormatter5.withLocale(locale0);\n    DateTimeUtils.MillisProvider dateTimeUtils_MillisProvider0 = mock(DateTimeUtils.MillisProvider.class, new ViolatedAssumptionAnswer());\n    DateTimeUtils.setCurrentMillisProvider(dateTimeUtils_MillisProvider0);\n}",
    "testName" : "test118118"
  },
  "test143143" : {
    "methodSignature" : "public String print(ReadablePartial partial)",
    "methodName" : "print",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test143143() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyearOfCentury();\n    DateTimeFormatterBuilder.PaddedNumber dateTimeFormatterBuilder_PaddedNumber0 = new DateTimeFormatterBuilder.PaddedNumber(dateTimeFieldType0, 12, true, 12);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_PaddedNumber0, dateTimeFormatterBuilder_PaddedNumber0);\n    TimeZone timeZone0 = TimeZone.getDefault();\n    DateTimeZone dateTimeZone0 = DateTimeZone.forTimeZone(timeZone0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withOffsetParsed();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    byte[] byteArray0 = new byte[1];\n    FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withDefaultYear((-1483));\n    EthiopicChronology.getInstance(dateTimeZone0);\n    EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstance(dateTimeZone0, 1);\n    dateTimeFieldType0.getDurationType();\n    DateTimeUtils.setCurrentMillisOffset((-1483));\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withChronology(ethiopicChronology0);\n    dateTimeFormatter4.print((-61L));\n    dateTimeFormatter1.parseMutableDateTime(\"000000000063\");\n    dateTimeFormatter3.isParser();\n    dateTimeFormatter4.withOffsetParsed();\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter3.withZone(dateTimeZone0);\n    dateTimeFormatter5.parseMutableDateTime(\"000000000063\");\n    dateTimeFormatter5.parseMutableDateTime(\"000000000063\");\n    LocalTime localTime0 = LocalTime.now();\n    dateTimeFormatter5.print((ReadablePartial) localTime0);\n}",
    "testName" : "test143143"
  },
  "test122122" : {
    "methodSignature" : "public String print(long instant)",
    "methodName" : "print",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test122122() throws Throwable {\n    DateTimeFormatterBuilder.StringLiteral dateTimeFormatterBuilder_StringLiteral0 = new DateTimeFormatterBuilder.StringLiteral(\"\");\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_StringLiteral0, dateTimeFormatterBuilder_StringLiteral0);\n    Integer integer0 = new Integer(314);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(integer0);\n    dateTimeFormatter1.parseDateTime(\"\");\n    StringBuffer stringBuffer0 = new StringBuffer(0);\n    dateTimeFormatter0.printTo(stringBuffer0, 0L);\n    GJChronology gJChronology0 = GJChronology.getInstanceUTC();\n    DateTimeZone dateTimeZone0 = gJChronology0.getZone();\n    GregorianChronology gregorianChronology0 = GregorianChronology.getInstance(dateTimeZone0);\n    Chronology chronology0 = gregorianChronology0.withUTC();\n    gJChronology0.withUTC();\n    Locale locale0 = Locale.GERMANY;\n    dateTimeFormatterBuilder_StringLiteral0.printTo(stringBuffer0, (long) 314, chronology0, 0, dateTimeZone0, locale0);\n    CharArrayWriter charArrayWriter0 = new CharArrayWriter();\n    dateTimeFormatter1.printTo((Writer) charArrayWriter0, (long) 0);\n    dateTimeFormatter1.parseLocalDate(\"\");\n    stringBuffer0.setLength(0);\n    dateTimeFormatter0.print((long) 0);\n}",
    "testName" : "test122122"
  },
  "test01313" : {
    "methodSignature" : "public void printTo(Writer out, ReadableInstant instant) throws IOException",
    "methodName" : "printTo",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01313() throws Throwable {\n    FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfMonth();\n    DateTimeFormatterBuilder.TextField dateTimeFormatterBuilder_TextField0 = new DateTimeFormatterBuilder.TextField(dateTimeFieldType0, false);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TextField0, dateTimeFormatterBuilder_TextField0);\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance((DateTimeZone) fixedDateTimeZone0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withChronology(buddhistChronology0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withOffsetParsed();\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withZoneUTC();\n    byte[] byteArray0 = new byte[4];\n    byteArray0[0] = (byte) 9;\n    byteArray0[1] = (byte) 6;\n    byteArray0[2] = (byte) 0;\n    byteArray0[3] = (byte) (-83);\n    FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withPivotYear(1);\n    CharArrayWriter charArrayWriter0 = new CharArrayWriter();\n    CharArrayWriter charArrayWriter1 = charArrayWriter0.append('X');\n    dateTimeFormatter3.printTo((Writer) charArrayWriter1, (ReadablePartial) null);\n    dateTimeFormatter2.getParser();\n    String string0 = \"\";\n    dateTimeFormatter4.parseLocalDate(string0);\n    String string1 = \"\";\n    MutableDateTime mutableDateTime0 = MutableDateTime.parse(string1, dateTimeFormatter0);\n    String string2 = \"Ox\\\\M O:\\\\KqaO\";\n    dateTimeFormatter4.parseInto(mutableDateTime0, string2, byteArray0[2]);\n    dateTimeFormatter0.printTo((Writer) charArrayWriter0, (ReadableInstant) mutableDateTime0);\n}",
    "testName" : "test01313"
  },
  "test06969" : {
    "methodSignature" : "public Integer getPivotYear()",
    "methodName" : "getPivotYear",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06969() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.monthOfYear();\n    DateTimeFormatterBuilder.PaddedNumber dateTimeFormatterBuilder_PaddedNumber0 = new DateTimeFormatterBuilder.PaddedNumber(dateTimeFieldType0, (-1313), false, (-1313));\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_PaddedNumber0, dateTimeFormatterBuilder_PaddedNumber0);\n    DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZone(dateTimeZone0);\n    ISOChronology iSOChronology0 = ISOChronology.getInstanceUTC();\n    LimitChronology limitChronology0 = LimitChronology.getInstance(iSOChronology0, (ReadableDateTime) null, (ReadableDateTime) null);\n    StrictChronology strictChronology0 = StrictChronology.getInstance(limitChronology0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withChronology(strictChronology0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withLocale((Locale) null);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withPivotYear((-1313));\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withOffsetParsed();\n    dateTimeFormatter5.getPivotYear();\n}",
    "testName" : "test06969"
  },
  "test03737" : {
    "methodSignature" : "public LocalTime parseLocalTime(String text)",
    "methodName" : "parseLocalTime",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03737() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    DateTimeFormatterBuilder.Composite dateTimeFormatterBuilder_Composite0 = new DateTimeFormatterBuilder.Composite(linkedList0);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Composite0, dateTimeFormatterBuilder_Composite0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withOffsetParsed();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withDefaultYear(0);\n    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetHours(0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withZone(dateTimeZone0);\n    Integer integer0 = new Integer(0);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withPivotYear(integer0);\n    dateTimeFormatter4.parseLocalTime(\"u]@Q\");\n}",
    "testName" : "test03737"
  },
  "test04545" : {
    "methodSignature" : "public DateTimeFormatter withPivotYear(int pivotYear)",
    "methodName" : "withPivotYear",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04545() throws Throwable {\n    DateTimeFormatterBuilder.TimeZoneId dateTimeFormatterBuilder_TimeZoneId0 = DateTimeFormatterBuilder.TimeZoneId.INSTANCE;\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TimeZoneId0, dateTimeFormatterBuilder_TimeZoneId0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withChronology((Chronology) null);\n    Integer integer0 = new Integer(0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withPivotYear(integer0);\n    DateTimeUtils.setCurrentMillisOffset(0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withOffsetParsed();\n    Locale locale0 = Locale.JAPAN;\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withLocale(locale0);\n    dateTimeFormatter4.withPivotYear(23);\n}",
    "testName" : "test04545"
  },
  "test08989" : {
    "methodSignature" : "public DateTimePrinter getPrinter()",
    "methodName" : "getPrinter",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08989() throws Throwable {\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter((DateTimePrinter) null, (DateTimeParser) null);\n    Integer integer0 = new Integer((-1980));\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(integer0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withDefaultYear((-641));\n    dateTimeFormatter2.getPrinter();\n}",
    "testName" : "test08989"
  },
  "test02525" : {
    "methodSignature" : "public DateTimeFormatter withChronology(Chronology chrono)",
    "methodName" : "withChronology",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02525() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfMonth();\n    DateTimeFormatterBuilder.TextField dateTimeFormatterBuilder_TextField0 = new DateTimeFormatterBuilder.TextField(dateTimeFieldType0, true);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TextField0, dateTimeFormatterBuilder_TextField0);\n    CopticChronology copticChronology0 = CopticChronology.getInstance();\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withChronology(copticChronology0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withPivotYear(1);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withOffsetParsed();\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withDefaultYear(1);\n    Integer integer0 = new Integer(1);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withPivotYear(integer0);\n    dateTimeFormatter5.withChronology(copticChronology0);\n}",
    "testName" : "test02525"
  },
  "test05757" : {
    "methodSignature" : "public Chronology getChronology()",
    "methodName" : "getChronology",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05757() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    DateTimeFormatterBuilder.Composite dateTimeFormatterBuilder_Composite0 = new DateTimeFormatterBuilder.Composite(linkedList0);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Composite0, dateTimeFormatterBuilder_Composite0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(0);\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZone(fixedDateTimeZone0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withOffsetParsed();\n    Integer integer0 = new Integer((-1101));\n    Integer integer1 = Integer.getInteger(\"\", integer0);\n    Integer integer2 = Integer.getInteger(\"~C'u?aC}:-~\", integer1);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withPivotYear(integer2);\n    ISOChronology iSOChronology0 = ISOChronology.getInstanceUTC();\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withChronology(iSOChronology0);\n    dateTimeFormatter5.getChronology();\n}",
    "testName" : "test05757"
  },
  "test01717" : {
    "methodSignature" : "public DateTimeFormatter withDefaultYear(int defaultYear)",
    "methodName" : "withDefaultYear",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01717() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfDay();\n    FileSystemHandling.createFolder((EvoSuiteFile) null);\n    DateTimeFormatterBuilder.TwoDigitYear dateTimeFormatterBuilder_TwoDigitYear0 = new DateTimeFormatterBuilder.TwoDigitYear(dateTimeFieldType0, 190, false);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TwoDigitYear0, dateTimeFormatterBuilder_TwoDigitYear0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withDefaultYear(190);\n    Locale locale0 = Locale.TAIWAN;\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withLocale(locale0);\n    Integer integer0 = new Integer(190);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withPivotYear(integer0);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withPivotYear(190);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withOffsetParsed();\n    GJChronology gJChronology0 = GJChronology.getInstanceUTC();\n    DateTimeZone dateTimeZone0 = gJChronology0.getZone();\n    MutableDateTime mutableDateTime0 = new MutableDateTime(dateTimeZone0);\n    mutableDateTime0.addSeconds((-2147483613));\n    DateTimeUtils.setCurrentMillisSystem();\n    dateTimeFormatter5.parseInto(mutableDateTime0, \"LxePfoH9K{<P[QT>\", 3);\n    dateTimeFormatter1.parseLocalDateTime(\"LxePfoH9K{<P[QT>\");\n    String string0 = \"uKt@8'1K2taE);:TEX\";\n    dateTimeFormatter2.parseLocalTime(string0);\n    int int0 = 2000;\n    dateTimeFormatter1.withDefaultYear(int0);\n}",
    "testName" : "test01717"
  },
  "test119119" : {
    "methodSignature" : "public int getDefaultYear()",
    "methodName" : "getDefaultYear",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119119() throws Throwable {\n    LocalTime localTime0 = LocalTime.MIDNIGHT;\n    Partial partial0 = new Partial(localTime0);\n    DateTimeFormatter dateTimeFormatter0 = partial0.getFormatter();\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withDefaultYear((-1357));\n    dateTimeFormatter1.print(31536000000L);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    dateTimeFormatter2.getDefaultYear();\n}",
    "testName" : "test119119"
  },
  "test111111" : {
    "methodSignature" : "public LocalDateTime minusHours(int hours)",
    "methodName" : "minusHours",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111111() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.clockhourOfDay();\n    int int0 = (-1480);\n    DateTimeFormatterBuilder.Fraction dateTimeFormatterBuilder_Fraction0 = new DateTimeFormatterBuilder.Fraction(dateTimeFieldType0, (-1480), (-1480));\n    dateTimeFieldType0.getDurationType();\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Fraction0, dateTimeFormatterBuilder_Fraction0);\n    Locale locale0 = Locale.ENGLISH;\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withLocale(locale0);\n    dateTimeFormatter1.getParser();\n    int int1 = 1953;\n    dateTimeFormatter1.withPivotYear(1953);\n    StringWriter stringWriter0 = new StringWriter();\n    StringWriter stringWriter1 = stringWriter0.append('u');\n    stringWriter1.getBuffer();\n    LocalDateTime localDateTime0 = LocalDateTime.now((DateTimeZone) null);\n    LocalDateTime localDateTime1 = localDateTime0.withWeekOfWeekyear(int0);\n    localDateTime1.minusHours(int1);\n}",
    "testName" : "test111111"
  },
  "test04949" : {
    "methodSignature" : "public DateTimeFormatter withChronology(Chronology chrono)",
    "methodName" : "withChronology",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04949() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekOfWeekyear();\n    DateTimeFormatterBuilder.UnpaddedNumber dateTimeFormatterBuilder_UnpaddedNumber0 = new DateTimeFormatterBuilder.UnpaddedNumber(dateTimeFieldType0, (-826), false);\n    DateTimeFormatterBuilder.TimeZoneId dateTimeFormatterBuilder_TimeZoneId0 = DateTimeFormatterBuilder.TimeZoneId.INSTANCE;\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_UnpaddedNumber0, dateTimeFormatterBuilder_TimeZoneId0);\n    Locale locale0 = Locale.KOREAN;\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withLocale(locale0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    Instant instant0 = new Instant((long) (-826));\n    Chronology chronology0 = instant0.getChronology();\n    DateTime dateTime0 = new DateTime(0L);\n    instant0.isBefore(dateTime0);\n    LocalDateTime localDateTime0 = LocalDateTime.now(chronology0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter0.withOffsetParsed();\n    LocalDateTime localDateTime1 = localDateTime0.minusHours((-826));\n    Integer integer0 = new Integer((-826));\n    DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket((-11L), chronology0, locale0, integer0, (-826));\n    Integer.toUnsignedLong((-826));\n    dateTimeParserBucket0.computeMillis(false);\n    Integer.compare((-826), (-826));\n    DateTimeZone dateTimeZone0 = dateTimeParserBucket0.getZone();\n    dateTimeFormatter3.withZone(dateTimeZone0);\n    localDateTime1.toLocalDate();\n    dateTimeFormatter2.print((ReadablePartial) localDateTime1);\n    dateTimeFormatter2.print((ReadablePartial) localDateTime1);\n    long long0 = 1L;\n    dateTimeFormatter3.print(long0);\n    dateTimeFormatter0.withChronology(chronology0);\n}",
    "testName" : "test04949"
  },
  "test02929" : {
    "methodSignature" : "public DateTimeFormatter withPivotYear(Integer pivotYear)",
    "methodName" : "withPivotYear",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02929() throws Throwable {\n    DateTimeFormatterBuilder.CharacterLiteral dateTimeFormatterBuilder_CharacterLiteral0 = new DateTimeFormatterBuilder.CharacterLiteral('p');\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_CharacterLiteral0, dateTimeFormatterBuilder_CharacterLiteral0);\n    Integer integer0 = new Integer(15271875);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(integer0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    Locale locale0 = Locale.JAPAN;\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withLocale(locale0);\n    dateTimeFormatter3.isParser();\n    dateTimeFormatter0.withPivotYear(integer0);\n}",
    "testName" : "test02929"
  },
  "test06161" : {
    "methodSignature" : "public DateTimeParser getParser()",
    "methodName" : "getParser",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06161() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.monthOfYear();\n    DateTimeFormatterBuilder.Fraction dateTimeFormatterBuilder_Fraction0 = new DateTimeFormatterBuilder.Fraction(dateTimeFieldType0, 256, 256);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Fraction0, dateTimeFormatterBuilder_Fraction0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withDefaultYear(256);\n    Integer integer0 = new Integer(256);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withPivotYear(integer0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withZoneUTC();\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();\n    DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withZone(dateTimeZone0);\n    Locale locale0 = Locale.ITALIAN;\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withLocale(locale0);\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    UTCProvider uTCProvider0 = new UTCProvider();\n    Set<String> set0 = uTCProvider0.getAvailableIDs();\n    Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);\n    dateTimeFormatter5.getDefaultYear();\n    dateTimeFormatter5.getParser();\n}",
    "testName" : "test06161"
  },
  "test07373" : {
    "methodSignature" : "public void printTo(Writer out, long instant) throws IOException",
    "methodName" : "printTo",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07373() throws Throwable {\n    int int0 = (-63);\n    HashMap<String, DateTimeZone> hashMap0 = new HashMap<String, DateTimeZone>();\n    DateTimeFormatterBuilder.TimeZoneName dateTimeFormatterBuilder_TimeZoneName0 = new DateTimeFormatterBuilder.TimeZoneName((-63), hashMap0);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TimeZoneName0, dateTimeFormatterBuilder_TimeZoneName0);\n    int int1 = 694;\n    Integer integer0 = new Integer(694);\n    FileSystemHandling fileSystemHandling0 = new FileSystemHandling();\n    Integer.toUnsignedLong(694);\n    Writer writer0 = null;\n    GJChronology.getInstance();\n    int int2 = 2700;\n    dateTimeFormatter0.printTo((Writer) null, 694L);\n}",
    "testName" : "test07373"
  },
  "test09393" : {
    "methodSignature" : "public DateTimeZone getZone()",
    "methodName" : "getZone",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09393() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.secondOfMinute();\n    DateTimeFormatterBuilder.UnpaddedNumber dateTimeFormatterBuilder_UnpaddedNumber0 = new DateTimeFormatterBuilder.UnpaddedNumber(dateTimeFieldType0, (-2180), false);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter((DateTimePrinter) null, dateTimeFormatterBuilder_UnpaddedNumber0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear((-2180));\n    EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstance((DateTimeZone) null);\n    Chronology chronology0 = ethiopicChronology0.withZone((DateTimeZone) null);\n    dateTimeFormatter1.withChronology(chronology0);\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter0.withZone(fixedDateTimeZone0);\n    dateTimeFormatter2.withDefaultYear(409);\n    dateTimeFormatter2.getZone();\n}",
    "testName" : "test09393"
  },
  "test0033" : {
    "methodSignature" : "public boolean isPrinter()",
    "methodName" : "isPrinter",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0033() throws Throwable {\n    DateTimeFormatterBuilder.CharacterLiteral dateTimeFormatterBuilder_CharacterLiteral0 = new DateTimeFormatterBuilder.CharacterLiteral('.');\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_CharacterLiteral0, dateTimeFormatterBuilder_CharacterLiteral0);\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withOffsetParsed();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withOffsetParsed();\n    Integer integer0 = new Integer(3);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withPivotYear(integer0);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withChronology((Chronology) null);\n    DateTimeUtils.MillisProvider dateTimeUtils_MillisProvider0 = mock(DateTimeUtils.MillisProvider.class, new ViolatedAssumptionAnswer());\n    DateTimeUtils.setCurrentMillisProvider(dateTimeUtils_MillisProvider0);\n    dateTimeFormatter5.withZone(fixedDateTimeZone0);\n    dateTimeFormatter5.isPrinter();\n}",
    "testName" : "test0033"
  },
  "test08181" : {
    "methodSignature" : "public DateTimeFormatter withPivotYear(Integer pivotYear)",
    "methodName" : "withPivotYear",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08181() throws Throwable {\n    DateTimeFormatterBuilder.StringLiteral dateTimeFormatterBuilder_StringLiteral0 = new DateTimeFormatterBuilder.StringLiteral(\"\");\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_StringLiteral0, dateTimeFormatterBuilder_StringLiteral0);\n    dateTimeFormatter0.getParser();\n    dateTimeFormatter0.getPrinter();\n    DateTimeUtils.setCurrentMillisSystem();\n    Integer integer0 = new Integer(45);\n    dateTimeFormatter0.withPivotYear(integer0);\n}",
    "testName" : "test08181"
  },
  "test07777" : {
    "methodSignature" : "public LocalDateTime parseLocalDateTime(String text)",
    "methodName" : "parseLocalDateTime",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07777() throws Throwable {\n    DateTimeFieldType.weekOfWeekyear();\n    DateTimeFormatterBuilder.StringLiteral dateTimeFormatterBuilder_StringLiteral0 = new DateTimeFormatterBuilder.StringLiteral(\"org.joda.time.JodaTimePermission\");\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_StringLiteral0, dateTimeFormatterBuilder_StringLiteral0);\n    dateTimeFormatter0.parseLocalDateTime(\"org.joda.time.JodaTimePermission\");\n}",
    "testName" : "test07777"
  },
  "test06565" : {
    "methodSignature" : "public boolean isOffsetParsed()",
    "methodName" : "isOffsetParsed",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06565() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfYear();\n    DateTimeFormatterBuilder.TwoDigitYear dateTimeFormatterBuilder_TwoDigitYear0 = new DateTimeFormatterBuilder.TwoDigitYear(dateTimeFieldType0, 623191204, false);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TwoDigitYear0, (DateTimeParser) null);\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZone(fixedDateTimeZone0);\n    dateTimeFieldType0.getRangeDurationType();\n    fixedDateTimeZone0.getNameKey(623191204);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withDefaultYear((-311));\n    dateTimeFormatter2.getChronolgy();\n    Integer integer0 = new Integer(623191204);\n    dateTimeFormatter1.withPivotYear(integer0);\n    dateTimeFormatter0.withOffsetParsed();\n    String string0 = \"Instant must not be null\";\n    StringBuffer stringBuffer0 = new StringBuffer(\"Instant must not be null\");\n    LocalDateTime localDateTime0 = new LocalDateTime((-1699L));\n    LocalDateTime localDateTime1 = localDateTime0.withYearOfCentury(192);\n    String string1 = \"Parsing not supported\";\n    Locale locale0 = new Locale(string1, string1, string0);\n    dateTimeFormatterBuilder_TwoDigitYear0.printTo(stringBuffer0, (ReadablePartial) localDateTime1, locale0);\n    dateTimeFormatter1.getLocale();\n    dateTimeFormatter0.getChronology();\n    dateTimeFormatter2.isOffsetParsed();\n}",
    "testName" : "test06565"
  },
  "test03333" : {
    "methodSignature" : "public DateTimeFormatter withZone(DateTimeZone zone)",
    "methodName" : "withZone",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03333() throws Throwable {\n    DateTimeFormatterBuilder.CharacterLiteral dateTimeFormatterBuilder_CharacterLiteral0 = new DateTimeFormatterBuilder.CharacterLiteral('.');\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_CharacterLiteral0, dateTimeFormatterBuilder_CharacterLiteral0);\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZone(fixedDateTimeZone0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withOffsetParsed();\n    Integer integer0 = new Integer(0);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withPivotYear(integer0);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withChronology((Chronology) null);\n    dateTimeFormatter5.withZone(fixedDateTimeZone0);\n}",
    "testName" : "test03333"
  },
  "test127127" : {
    "methodSignature" : "public DateTime parseDateTime(String text)",
    "methodName" : "parseDateTime",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test127127() throws Throwable {\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter((DateTimePrinter) null, (DateTimeParser) null);\n    PipedWriter pipedWriter0 = new PipedWriter();\n    LocalTime localTime0 = new LocalTime(0, 0, 0);\n    LocalTime localTime1 = localTime0.minusSeconds(0);\n    int int0 = (-605);\n    localTime1.plusHours((-605));\n    localTime1.getFieldType(0);\n    LocalTime localTime2 = localTime1.withFields(localTime0);\n    LocalTime localTime3 = localTime2.minusMinutes(1512);\n    dateTimeFormatter0.printTo((Writer) pipedWriter0, (ReadablePartial) localTime3);\n    String string0 = \"-k[cc%:%@/z]&_\";\n    dateTimeFormatter0.parseDateTime(string0);\n    String string1 = \"HW|{3\";\n    dateTimeFormatter0.parseDateTime(string1);\n}",
    "testName" : "test127127"
  },
  "test100100" : {
    "methodSignature" : "public LocalTime parseLocalTime(String text)",
    "methodName" : "parseLocalTime",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100100() throws Throwable {\n    DateTimeFormatterBuilder.TimeZoneName dateTimeFormatterBuilder_TimeZoneName0 = new DateTimeFormatterBuilder.TimeZoneName(0, (Map<String, DateTimeZone>) null);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter((DateTimePrinter) null, (DateTimeParser) null);\n    dateTimeFormatter0.getPivotYear();\n    UTCProvider uTCProvider0 = new UTCProvider();\n    uTCProvider0.getAvailableIDs();\n    String string0 = null;\n    uTCProvider0.getZone((String) null);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZone((DateTimeZone) null);\n    StringWriter stringWriter0 = new StringWriter(2275);\n    StringWriter stringWriter1 = stringWriter0.append('O');\n    StringBuffer stringBuffer0 = stringWriter1.getBuffer();\n    MutableDateTime mutableDateTime0 = MutableDateTime.now();\n    dateTimeFormatter1.printTo(stringBuffer0, (ReadableInstant) mutableDateTime0);\n    dateTimeFormatter1.parseLocalTime(string0);\n    String string1 = \"O-Y1EtX /r)6t63A1{I\";\n    dateTimeFormatter0.parseMutableDateTime(string1);\n    String string2 = \"\";\n    dateTimeFormatter0.parseLocalTime(string2);\n}",
    "testName" : "test100100"
  },
  "test04141" : {
    "methodSignature" : "public String print(long instant)",
    "methodName" : "print",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04141() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.era();\n    DurationFieldType durationFieldType0 = DurationFieldType.weekyears();\n    PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 0L);\n    UnsupportedDateTimeField unsupportedDateTimeField0 = UnsupportedDateTimeField.getInstance(dateTimeFieldType0, preciseDurationField0);\n    DateTimeFieldType dateTimeFieldType1 = unsupportedDateTimeField0.getType();\n    DateTimeFormatterBuilder.Fraction dateTimeFormatterBuilder_Fraction0 = new DateTimeFormatterBuilder.Fraction(dateTimeFieldType1, 1272, (-1425));\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Fraction0, dateTimeFormatterBuilder_Fraction0);\n    dateTimeFormatter0.print(2450L);\n}",
    "testName" : "test04141"
  },
  "test08585" : {
    "methodSignature" : "public DateTimeFormatter withZoneUTC()",
    "methodName" : "withZoneUTC",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08585() throws Throwable {\n    HashMap<String, DateTimeZone> hashMap0 = new HashMap<String, DateTimeZone>();\n    Locale locale0 = Locale.JAPAN;\n    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis((-969));\n    EthiopicChronology.getInstance(dateTimeZone0);\n    DateTimeFormatterBuilder.CharacterLiteral dateTimeFormatterBuilder_CharacterLiteral0 = new DateTimeFormatterBuilder.CharacterLiteral('K');\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_CharacterLiteral0, dateTimeFormatterBuilder_CharacterLiteral0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withOffsetParsed();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZone(dateTimeZone0);\n    dateTimeFormatter2.isParser();\n    dateTimeFormatter0.withZoneUTC();\n}",
    "testName" : "test08585"
  },
  "test02121" : {
    "methodSignature" : "public void printTo(StringBuffer buf, long instant)",
    "methodName" : "printTo",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02121() throws Throwable {\n    DateTimeFormatterBuilder.StringLiteral dateTimeFormatterBuilder_StringLiteral0 = new DateTimeFormatterBuilder.StringLiteral(\"ZoneInfoMap\");\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_StringLiteral0, dateTimeFormatterBuilder_StringLiteral0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZoneUTC();\n    StringBuffer stringBuffer0 = new StringBuffer();\n    dateTimeFormatter1.printTo(stringBuffer0, 1L);\n}",
    "testName" : "test02121"
  },
  "test05353" : {
    "methodSignature" : "public int parseInto(ReadWritableInstant instant, String text, int position)",
    "methodName" : "parseInto",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05353() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.halfdayOfDay();\n    DateTimeFormatterBuilder.UnpaddedNumber dateTimeFormatterBuilder_UnpaddedNumber0 = new DateTimeFormatterBuilder.UnpaddedNumber(dateTimeFieldType0, 1027, false);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_UnpaddedNumber0, dateTimeFormatterBuilder_UnpaddedNumber0);\n    dateTimeFormatter0.withDefaultYear(10080);\n    int int0 = 292271022;\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZone(fixedDateTimeZone0);\n    fixedDateTimeZone0.getName((long) 10080);\n    String string0 = \"5b`o@6e,FTZ0\";\n    MutableDateTime mutableDateTime0 = dateTimeFormatter1.parseMutableDateTime(\"5b`o@6e,FTZ0\");\n    String string1 = \"org.joda.time.chrono.GJYearOfEraDateTimeField\";\n    int int1 = 0;\n    dateTimeFormatter0.parseInto(mutableDateTime0, string1, int1);\n}",
    "testName" : "test05353"
  },
  "test108108" : {
    "methodSignature" : "public Period(int years, int months, int weeks, int days, int hours, int minutes, int seconds, int millis, PeriodType type)",
    "methodName" : "Period",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108108() throws Throwable {\n    DateTimeFormatterBuilder.StringLiteral dateTimeFormatterBuilder_StringLiteral0 = new DateTimeFormatterBuilder.StringLiteral(\"\");\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_StringLiteral0, dateTimeFormatterBuilder_StringLiteral0);\n    int int0 = 314;\n    Integer integer0 = new Integer(314);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(integer0);\n    dateTimeFormatter1.parseDateTime(\"\");\n    int int1 = 0;\n    StringBuffer stringBuffer0 = new StringBuffer(0);\n    dateTimeFormatter0.printTo(stringBuffer0, 0L);\n    GJChronology gJChronology0 = GJChronology.getInstanceUTC();\n    DateTimeZone dateTimeZone0 = gJChronology0.getZone();\n    GregorianChronology gregorianChronology0 = GregorianChronology.getInstance(dateTimeZone0);\n    Chronology chronology0 = gregorianChronology0.withUTC();\n    Locale locale0 = Locale.GERMANY;\n    dateTimeFormatterBuilder_StringLiteral0.printTo(stringBuffer0, (long) 314, chronology0, 0, dateTimeZone0, locale0);\n    CharArrayWriter charArrayWriter0 = new CharArrayWriter();\n    dateTimeFormatter1.printTo((Writer) charArrayWriter0, (long) 0);\n    stringBuffer0.setLength((-2714));\n    JulianChronology julianChronology0 = JulianChronology.getInstanceUTC();\n    YearMonth yearMonth0 = new YearMonth((Chronology) julianChronology0);\n    int int2 = 1;\n    int int3 = 0;\n    PeriodType periodType0 = PeriodType.yearMonthDay();\n    Period period0 = null;\n    period0 = new Period(int2, int0, int1, int2, yearMonth0.MONTH_OF_YEAR, int3, yearMonth0.MONTH_OF_YEAR, yearMonth0.YEAR, periodType0);\n}",
    "testName" : "test108108"
  },
  "test135135" : {
    "methodSignature" : "public boolean isPrinter()",
    "methodName" : "isPrinter",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test135135() throws Throwable {\n    DateTimeFormatterBuilder.CharacterLiteral dateTimeFormatterBuilder_CharacterLiteral0 = new DateTimeFormatterBuilder.CharacterLiteral('.');\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_CharacterLiteral0, dateTimeFormatterBuilder_CharacterLiteral0);\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withOffsetParsed();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withOffsetParsed();\n    Integer integer0 = new Integer(3);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withPivotYear(integer0);\n    Chronology chronology0 = null;\n    LocalDate localDate0 = new LocalDate(2325L, (Chronology) null);\n    DateTime dateTime0 = localDate0.toDateTimeAtCurrentTime((DateTimeZone) fixedDateTimeZone0);\n    DateTime dateTime1 = dateTime0.toDateTimeISO();\n    DateTime dateTime2 = dateTime1.withYearOfCentury(13);\n    DateTime dateTime3 = dateTime2.withDayOfMonth(13);\n    dateTimeFormatter4.printTo((Appendable) null, (ReadableInstant) dateTime3);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withChronology(chronology0);\n    DateTimeUtils.MillisProvider dateTimeUtils_MillisProvider0 = mock(DateTimeUtils.MillisProvider.class, new ViolatedAssumptionAnswer());\n    DateTimeUtils.setCurrentMillisProvider(dateTimeUtils_MillisProvider0);\n    dateTimeFormatter5.withZone(fixedDateTimeZone0);\n    dateTimeFormatter5.isPrinter();\n}",
    "testName" : "test135135"
  },
  "test0044" : {
    "methodSignature" : "public DateTimeFormatter withPivotYear(int pivotYear)",
    "methodName" : "withPivotYear",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0044() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[6];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfSecond();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType0;\n    DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.monthOfYear();\n    dateTimeFieldTypeArray0[2] = dateTimeFieldType1;\n    dateTimeFieldTypeArray0[3] = dateTimeFieldType0;\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();\n    DurationField durationField0 = buddhistChronology0.hours();\n    UnsupportedDateTimeField unsupportedDateTimeField0 = UnsupportedDateTimeField.getInstance(dateTimeFieldType0, durationField0);\n    DateTimeFieldType dateTimeFieldType2 = unsupportedDateTimeField0.getType();\n    dateTimeFieldTypeArray0[4] = dateTimeFieldType2;\n    DateTimeFieldType dateTimeFieldType3 = DateTimeFieldType.hourOfDay();\n    dateTimeFieldTypeArray0[5] = dateTimeFieldType3;\n    int[] intArray0 = new int[3];\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    intArray0[0] = 1;\n    intArray0[1] = 1;\n    intArray0[2] = 1;\n    DateTimeFormat.StyleFormatter dateTimeFormat_StyleFormatter0 = new DateTimeFormat.StyleFormatter(1, 1, (-1));\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormat_StyleFormatter0, dateTimeFormat_StyleFormatter0);\n    Integer integer0 = new Integer((-2145318844));\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(integer0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withDefaultYear(1);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withChronology(buddhistChronology0);\n    Locale locale0 = Locale.CANADA;\n    FileSystemHandling fileSystemHandling0 = new FileSystemHandling();\n    Integer.sum(1, (-1408));\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withLocale((Locale) null);\n    dateTimeFormatter5.print((ReadablePartial) null);\n    Partial partial0 = new Partial(dateTimeFieldTypeArray0, intArray0, buddhistChronology0);\n    dateTimeFormatter3.withPivotYear(intArray0[0]);\n}",
    "testName" : "test0044"
  },
  "test145145" : {
    "methodSignature" : "public String print(ReadablePartial partial)",
    "methodName" : "print",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test145145() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.monthOfYear();\n    DateTimeFormatterBuilder.PaddedNumber dateTimeFormatterBuilder_PaddedNumber0 = new DateTimeFormatterBuilder.PaddedNumber(dateTimeFieldType0, 12, true, 12);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_PaddedNumber0, dateTimeFormatterBuilder_PaddedNumber0);\n    TimeZone timeZone0 = TimeZone.getDefault();\n    DateTimeZone dateTimeZone0 = DateTimeZone.forTimeZone(timeZone0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZone(dateTimeZone0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    byte[] byteArray0 = new byte[1];\n    FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withDefaultYear(2619);\n    EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstance(dateTimeZone0);\n    Chronology chronology0 = ethiopicChronology0.withUTC();\n    dateTimeFieldType0.getDurationType();\n    DateTimeUtils.setCurrentMillisOffset(2619);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withChronology(chronology0);\n    dateTimeFormatter4.print((-61L));\n    dateTimeFormatter1.parseMutableDateTime(\"000000000004\");\n    dateTimeFormatter3.isParser();\n    dateTimeFormatter4.withOffsetParsed();\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter3.withZone(dateTimeZone0);\n    dateTimeFormatter5.parseMutableDateTime(\"000000000004\");\n    dateTimeFormatter5.parseMutableDateTime(\"000000000004\");\n    LocalTime localTime0 = LocalTime.now();\n    dateTimeFormatter5.print((ReadablePartial) localTime0);\n}",
    "testName" : "test145145"
  },
  "test103103" : {
    "methodSignature" : "public String print(ReadableInstant instant)",
    "methodName" : "print",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103103() throws Throwable {\n    DateTimeFormatterBuilder.CharacterLiteral dateTimeFormatterBuilder_CharacterLiteral0 = new DateTimeFormatterBuilder.CharacterLiteral('.');\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_CharacterLiteral0, dateTimeFormatterBuilder_CharacterLiteral0);\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withOffsetParsed();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withOffsetParsed();\n    Integer integer0 = new Integer(3);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withPivotYear(integer0);\n    Locale locale0 = Locale.KOREAN;\n    StringBuffer stringBuffer0 = new StringBuffer();\n    dateTimeFormatter2.printTo(stringBuffer0, (long) 3);\n    dateTimeFormatter4.withLocale(locale0);\n    ISOChronology iSOChronology0 = ISOChronology.getInstance();\n    YearMonth yearMonth0 = YearMonth.now((Chronology) iSOChronology0);\n    dateTimeFormatter2.printTo(stringBuffer0, (ReadablePartial) yearMonth0);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withChronology((Chronology) null);\n    dateTimeFormatter5.withZone(fixedDateTimeZone0);\n    dateTimeFormatter5.getPivotYear();\n    LocalDateTime localDateTime0 = new LocalDateTime((long) 3, (DateTimeZone) fixedDateTimeZone0);\n    DateTime dateTime0 = localDateTime0.toDateTime();\n    DateTime dateTime1 = dateTime0.withTime((-1), 1705, (-3716), (-3716));\n    dateTimeFormatter0.print((ReadableInstant) dateTime1);\n}",
    "testName" : "test103103"
  },
  "test128128" : {
    "methodSignature" : "public DateTimeParser getParser()",
    "methodName" : "getParser",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test128128() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.yearOfCentury();\n    dateTimeFieldType0.getDurationType();\n    DateTimeFormatterBuilder.TwoDigitYear dateTimeFormatterBuilder_TwoDigitYear0 = new DateTimeFormatterBuilder.TwoDigitYear(dateTimeFieldType0, 2428, true);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TwoDigitYear0, dateTimeFormatterBuilder_TwoDigitYear0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withOffsetParsed();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    Locale locale0 = Locale.JAPAN;\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter0.withDefaultYear(2428);\n    ISOChronology iSOChronology0 = ISOChronology.getInstance();\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withChronology(iSOChronology0);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withDefaultYear(2428);\n    dateTimeFormatter4.withLocale(locale0);\n    DateTimeUtils.MillisProvider dateTimeUtils_MillisProvider0 = mock(DateTimeUtils.MillisProvider.class, new ViolatedAssumptionAnswer());\n    DateTimeUtils.setCurrentMillisProvider(dateTimeUtils_MillisProvider0);\n    dateTimeFormatter2.getParser();\n    dateTimeFormatter5.isPrinter();\n    StringBuffer stringBuffer0 = new StringBuffer();\n    dateTimeFormatter2.print((long) 2428);\n    Integer integer0 = new Integer(2428);\n    dateTimeFormatter4.withPivotYear(integer0);\n    dateTimeFormatter2.isParser();\n    dateTimeFormatter0.parseDateTime(\"5i{(v\");\n    dateTimeFormatter3.getParser();\n}",
    "testName" : "test128128"
  },
  "test05858" : {
    "methodSignature" : "public LocalTime parseLocalTime(String text)",
    "methodName" : "parseLocalTime",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05858() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    DateTimeFormatterBuilder.Composite dateTimeFormatterBuilder_Composite0 = new DateTimeFormatterBuilder.Composite(linkedList0);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Composite0, dateTimeFormatterBuilder_Composite0);\n    int int0 = 1;\n    dateTimeFormatter0.withDefaultYear(1);\n    String string0 = \"(>TC|[5nkz p1^\";\n    dateTimeFormatter0.parseLocalTime(\"(>TC|[5nkz p1^\");\n}",
    "testName" : "test05858"
  },
  "test151151" : {
    "methodSignature" : "public void printTo(Appendable appendable, long instant) throws IOException",
    "methodName" : "printTo",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test151151() throws Throwable {\n    ISOChronology iSOChronology0 = ISOChronology.getInstance();\n    LocalDate localDate0 = new LocalDate((Chronology) iSOChronology0);\n    Partial partial0 = new Partial(localDate0);\n    DateTimeFormatter dateTimeFormatter0 = partial0.getFormatter();\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZoneUTC();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"w\");\n    Object[] objectArray0 = new Object[8];\n    objectArray0[0] = (Object) \"|\";\n    objectArray0[2] = (Object) \"|\";\n    objectArray0[3] = (Object) \"w\";\n    objectArray0[4] = (Object) localDate0;\n    objectArray0[5] = (Object) \"w\";\n    objectArray0[6] = (Object) dateTimeFormatter1;\n    PrintStream printStream0 = mockPrintStream0.printf(\"|\", objectArray0);\n    dateTimeFormatter1.printTo((Appendable) printStream0, (ReadablePartial) partial0);\n    dateTimeFormatter1.getChronology();\n    MutableDateTime mutableDateTime0 = new MutableDateTime(0L);\n    dateTimeFormatter1.printTo((Appendable) printStream0, (ReadableInstant) mutableDateTime0);\n    dateTimeFormatter0.printTo((StringBuffer) null, (ReadablePartial) partial0);\n    dateTimeFormatter1.printTo((Appendable) mockPrintStream0, (long) mutableDateTime0.ROUND_HALF_FLOOR);\n}",
    "testName" : "test151151"
  },
  "test02626" : {
    "methodSignature" : "public LocalDateTime withYear(int year)",
    "methodName" : "withYear",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02626() throws Throwable {\n    DateTimeFormatterBuilder.TimeZoneId dateTimeFormatterBuilder_TimeZoneId0 = DateTimeFormatterBuilder.TimeZoneId.INSTANCE;\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TimeZoneId0, dateTimeFormatterBuilder_TimeZoneId0);\n    int int0 = 65;\n    dateTimeFormatter0.withDefaultYear(65);\n    StringWriter stringWriter0 = new StringWriter();\n    stringWriter0.getBuffer();\n    LocalDateTime localDateTime0 = LocalDateTime.parse(\"\");\n    localDateTime0.withYear(int0);\n}",
    "testName" : "test02626"
  },
  "test04646" : {
    "methodSignature" : "public LocalDate parseLocalDate(String text)",
    "methodName" : "parseLocalDate",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04646() throws Throwable {\n    HashMap<String, DateTimeZone> hashMap0 = new HashMap<String, DateTimeZone>();\n    DateTimeFormatterBuilder.TimeZoneName dateTimeFormatterBuilder_TimeZoneName0 = new DateTimeFormatterBuilder.TimeZoneName((-542), hashMap0);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TimeZoneName0, dateTimeFormatterBuilder_TimeZoneName0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear((-635));\n    Locale locale0 = Locale.KOREAN;\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withLocale(locale0);\n    dateTimeFormatter2.parseLocalDate(\"=\");\n}",
    "testName" : "test04646"
  },
  "test01414" : {
    "methodSignature" : "public String print(long instant)",
    "methodName" : "print",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01414() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyearOfCentury();\n    DateTimeFormatterBuilder.PaddedNumber dateTimeFormatterBuilder_PaddedNumber0 = new DateTimeFormatterBuilder.PaddedNumber(dateTimeFieldType0, 12, true, 12);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_PaddedNumber0, dateTimeFormatterBuilder_PaddedNumber0);\n    TimeZone timeZone0 = TimeZone.getDefault();\n    DateTimeZone dateTimeZone0 = DateTimeZone.forTimeZone(timeZone0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZone(dateTimeZone0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    byte[] byteArray0 = new byte[1];\n    FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withDefaultYear((-1483));\n    EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstance(dateTimeZone0);\n    Chronology chronology0 = ethiopicChronology0.withUTC();\n    DateTimeUtils.setCurrentMillisOffset((-1483));\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withChronology(chronology0);\n    dateTimeFormatter4.print((-61L));\n    dateTimeFormatter1.parseMutableDateTime(\"000000000063\");\n    dateTimeFormatter3.isParser();\n    dateTimeFormatter4.withOffsetParsed();\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter3.withZone(dateTimeZone0);\n    dateTimeFormatter5.parseMutableDateTime(\"000000000063\");\n    dateTimeFormatter5.parseMutableDateTime(\"000000000063\");\n    LocalTime localTime0 = LocalTime.now();\n    dateTimeFormatter5.print((ReadablePartial) localTime0);\n    dateTimeFormatter3.print((-28799686L));\n}",
    "testName" : "test01414"
  },
  "test134134" : {
    "methodSignature" : "public String print(long instant)",
    "methodName" : "print",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test134134() throws Throwable {\n    FileSystemHandling.appendLineToFile((EvoSuiteFile) null, \"Instant must not be null\");\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.halfdayOfDay();\n    DateTimeFormatterBuilder.Fraction dateTimeFormatterBuilder_Fraction0 = new DateTimeFormatterBuilder.Fraction(dateTimeFieldType0, 2013, 2013);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Fraction0, dateTimeFormatterBuilder_Fraction0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withDefaultYear(2147483573);\n    ZoneOffset zoneOffset0 = ZoneOffset.MIN;\n    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(\"lxR(=S/;M;|gxVBbzh\");\n    PrintWriter printWriter0 = mockPrintWriter0.append('D');\n    GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();\n    Chronology chronology0 = gregorianChronology0.withUTC();\n    LocalDateTime localDateTime0 = LocalDateTime.now(chronology0);\n    Period period0 = new Period();\n    Days days0 = period0.toStandardDays();\n    LocalDateTime localDateTime1 = localDateTime0.plus((ReadablePeriod) days0);\n    dateTimeFormatter0.printTo((Writer) printWriter0, (ReadablePartial) localDateTime1);\n    DateTimeZone.forTimeZone(timeZone0);\n    dateTimeFormatter0.withPivotYear((Integer) null);\n    dateTimeFormatter1.print((-984L));\n}",
    "testName" : "test134134"
  },
  "test117117" : {
    "methodSignature" : "public Period(int years, int months, int weeks, int days, int hours, int minutes, int seconds, int millis, PeriodType type)",
    "methodName" : "Period",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test117117() throws Throwable {\n    DateTimeFormatterBuilder.StringLiteral dateTimeFormatterBuilder_StringLiteral0 = new DateTimeFormatterBuilder.StringLiteral(\"\");\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_StringLiteral0, dateTimeFormatterBuilder_StringLiteral0);\n    int int0 = 314;\n    Integer integer0 = new Integer(314);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withOffsetParsed();\n    dateTimeFormatter1.parseDateTime(\"\");\n    int int1 = 0;\n    StringBuffer stringBuffer0 = new StringBuffer(0);\n    dateTimeFormatter0.printTo(stringBuffer0, 0L);\n    GJChronology.getInstanceUTC();\n    dateTimeFormatter0.parseLocalTime(\"\");\n    Locale locale0 = Locale.GERMANY;\n    CharArrayWriter charArrayWriter0 = new CharArrayWriter();\n    dateTimeFormatter1.printTo((Writer) charArrayWriter0, (long) 0);\n    stringBuffer0.setLength((-2714));\n    JulianChronology julianChronology0 = JulianChronology.getInstanceUTC();\n    YearMonth yearMonth0 = new YearMonth((Chronology) julianChronology0);\n    int int2 = 1;\n    int int3 = 0;\n    PeriodType periodType0 = PeriodType.yearMonthDay();\n    Period period0 = null;\n    period0 = new Period(int2, int0, int1, int2, yearMonth0.MONTH_OF_YEAR, int3, yearMonth0.MONTH_OF_YEAR, yearMonth0.YEAR, periodType0);\n}",
    "testName" : "test117117"
  },
  "test03838" : {
    "methodSignature" : "public String print(ReadableInstant instant)",
    "methodName" : "print",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03838() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    DateTimeFormatterBuilder.Composite dateTimeFormatterBuilder_Composite0 = new DateTimeFormatterBuilder.Composite(linkedList0);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Composite0, dateTimeFormatterBuilder_Composite0);\n    Locale locale0 = Locale.JAPAN;\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withLocale(locale0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withDefaultYear(0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withPivotYear((-6852));\n    GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();\n    DateTime dateTime0 = new DateTime(1235, 0, (-6852), (-135), 1571, 0, 1687, gregorianChronology0);\n    int int0 = (-816);\n    DateTime dateTime1 = dateTime0.plusMillis(int0);\n    int int1 = 0;\n    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetHours(int1);\n    DateTime dateTime2 = dateTime1.toDateTime(dateTimeZone0);\n    dateTimeFormatter4.print((ReadableInstant) dateTime2);\n}",
    "testName" : "test03838"
  },
  "test01818" : {
    "methodSignature" : "public void printTo(StringBuffer buf, ReadablePartial partial)",
    "methodName" : "printTo",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01818() throws Throwable {\n    ISOChronology iSOChronology0 = ISOChronology.getInstance();\n    LocalDate localDate0 = new LocalDate((Chronology) iSOChronology0);\n    Partial partial0 = new Partial(localDate0);\n    DateTimeFormatter dateTimeFormatter0 = partial0.getFormatter();\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZoneUTC();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"w\");\n    Object[] objectArray0 = new Object[8];\n    objectArray0[0] = (Object) \"|\";\n    objectArray0[2] = (Object) \"|\";\n    objectArray0[3] = (Object) \"w\";\n    objectArray0[4] = (Object) localDate0;\n    objectArray0[5] = (Object) \"w\";\n    objectArray0[6] = (Object) dateTimeFormatter1;\n    PrintStream printStream0 = mockPrintStream0.printf(\"|\", objectArray0);\n    dateTimeFormatter1.printTo((Appendable) printStream0, (ReadablePartial) partial0);\n    dateTimeFormatter1.getChronology();\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(printStream0);\n    PrintWriter printWriter0 = mockPrintWriter0.append('Y');\n    MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);\n    dateTimeFormatter1.printTo((Writer) mockPrintWriter1, (ReadablePartial) localDate0);\n    MutableDateTime mutableDateTime0 = new MutableDateTime(0L);\n    dateTimeFormatter1.printTo((Appendable) printStream0, (ReadableInstant) mutableDateTime0);\n    dateTimeFormatter1.parseLocalTime(\"w\");\n    String string0 = \"\";\n    dateTimeFormatter0.parseLocalTime(string0);\n    StringBuffer stringBuffer0 = null;\n    dateTimeFormatter0.printTo(stringBuffer0, (ReadablePartial) partial0);\n}",
    "testName" : "test01818"
  },
  "test06262" : {
    "methodSignature" : "public boolean isPrinter()",
    "methodName" : "isPrinter",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06262() throws Throwable {\n    DateTimeFormatterBuilder.StringLiteral dateTimeFormatterBuilder_StringLiteral0 = new DateTimeFormatterBuilder.StringLiteral(\"ik=evj=Ig\");\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_StringLiteral0, dateTimeFormatterBuilder_StringLiteral0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZoneUTC();\n    Locale locale0 = Locale.CHINA;\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withLocale(locale0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withPivotYear((-1825));\n    dateTimeFormatter3.isPrinter();\n}",
    "testName" : "test06262"
  },
  "test140140" : {
    "methodSignature" : "public Partial(DateTimeFieldType[] types, int[] values, Chronology chronology)",
    "methodName" : "Partial",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test140140() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[6];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfSecond();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType0;\n    DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.monthOfYear();\n    dateTimeFieldTypeArray0[2] = dateTimeFieldType1;\n    DateTimeFieldType.yearOfCentury();\n    dateTimeFieldTypeArray0[3] = dateTimeFieldType0;\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();\n    DurationField durationField0 = buddhistChronology0.hours();\n    UnsupportedDateTimeField unsupportedDateTimeField0 = UnsupportedDateTimeField.getInstance(dateTimeFieldType0, durationField0);\n    DateTimeFieldType dateTimeFieldType2 = unsupportedDateTimeField0.getType();\n    dateTimeFieldTypeArray0[4] = dateTimeFieldType2;\n    DateTimeFieldType dateTimeFieldType3 = DateTimeFieldType.hourOfDay();\n    dateTimeFieldTypeArray0[5] = dateTimeFieldType3;\n    int[] intArray0 = new int[3];\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    intArray0[0] = 1;\n    intArray0[1] = 1;\n    intArray0[2] = 1;\n    DateTimeFormat.StyleFormatter dateTimeFormat_StyleFormatter0 = new DateTimeFormat.StyleFormatter(1, 1, (-1));\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormat_StyleFormatter0, dateTimeFormat_StyleFormatter0);\n    Integer integer0 = new Integer(1);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(integer0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withDefaultYear(1);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withChronology(buddhistChronology0);\n    Locale locale0 = Locale.CANADA;\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withLocale(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"gHht]{P>bzw^87h3`2\");\n    dateTimeFormatter5.printTo(stringBuffer0, (ReadableInstant) null);\n    ReadablePartial readablePartial0 = null;\n    dateTimeFormatter5.print(readablePartial0);\n    Partial partial0 = new Partial(dateTimeFieldTypeArray0, intArray0, buddhistChronology0);\n}",
    "testName" : "test140140"
  },
  "test07070" : {
    "methodSignature" : "public void printTo(Appendable appendable, ReadablePartial partial) throws IOException",
    "methodName" : "printTo",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07070() throws Throwable {\n    DateTimeFormatterBuilder.TimeZoneName dateTimeFormatterBuilder_TimeZoneName0 = new DateTimeFormatterBuilder.TimeZoneName(0, (Map<String, DateTimeZone>) null);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TimeZoneName0, dateTimeFormatterBuilder_TimeZoneName0);\n    dateTimeFormatter0.getPivotYear();\n    UTCProvider uTCProvider0 = new UTCProvider();\n    uTCProvider0.getAvailableIDs();\n    uTCProvider0.getZone((String) null);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZone((DateTimeZone) null);\n    StringWriter stringWriter0 = new StringWriter(2275);\n    StringWriter stringWriter1 = stringWriter0.append('O');\n    StringBuffer stringBuffer0 = stringWriter1.getBuffer();\n    MutableDateTime mutableDateTime0 = MutableDateTime.now();\n    dateTimeFormatter1.printTo(stringBuffer0, (ReadableInstant) mutableDateTime0);\n    dateTimeFormatter1.parseLocalTime((String) null);\n    String string0 = \"O-Y1EtX /r)6t63A1{I\";\n    dateTimeFormatter0.parseMutableDateTime(string0);\n    String string1 = \"\";\n    LocalTime localTime0 = dateTimeFormatter0.parseLocalTime(string1);\n    dateTimeFormatter0.printTo((Appendable) stringWriter0, (ReadablePartial) localTime0);\n}",
    "testName" : "test07070"
  },
  "test0055" : {
    "methodSignature" : "public DateTimeParser getParser()",
    "methodName" : "getParser",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0055() throws Throwable {\n    FileSystemHandling.appendLineToFile((EvoSuiteFile) null, \"Instant must not be null\");\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.halfdayOfDay();\n    DateTimeFormatterBuilder.Fraction dateTimeFormatterBuilder_Fraction0 = new DateTimeFormatterBuilder.Fraction(dateTimeFieldType0, 2000, 2000);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Fraction0, dateTimeFormatterBuilder_Fraction0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withDefaultYear(2147483573);\n    CopticChronology copticChronology0 = CopticChronology.getInstance();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withChronology(copticChronology0);\n    ZoneOffset zoneOffset0 = ZoneOffset.MIN;\n    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);\n    DateTimeZone dateTimeZone0 = DateTimeZone.forTimeZone(timeZone0);\n    copticChronology0.withZone(dateTimeZone0);\n    dateTimeFormatter2.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter0.withPivotYear((Integer) null);\n    dateTimeFormatter3.printTo((Writer) null, (ReadableInstant) null);\n    dateTimeFormatter0.withChronology(copticChronology0);\n    dateTimeFormatter0.getParser();\n}",
    "testName" : "test0055"
  },
  "test148148" : {
    "methodSignature" : "public String print(ReadableInstant instant)",
    "methodName" : "print",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test148148() throws Throwable {\n    FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfYear();\n    DateTimeFormatterBuilder.Fraction dateTimeFormatterBuilder_Fraction0 = new DateTimeFormatterBuilder.Fraction(dateTimeFieldType0, 2435, 3550);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter((DateTimePrinter) null, dateTimeFormatterBuilder_Fraction0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZoneUTC();\n    DateTime dateTime0 = new DateTime((-1044L));\n    DurationFieldType durationFieldType0 = DurationFieldType.halfdays();\n    DateTime dateTime1 = dateTime0.withFieldAdded(durationFieldType0, 3550);\n    dateTimeFormatter1.print((ReadableInstant) dateTime1);\n}",
    "testName" : "test148148"
  },
  "test09898" : {
    "methodSignature" : "public DateTimeFormatter withZoneUTC()",
    "methodName" : "withZoneUTC",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09898() throws Throwable {\n    FileSystemHandling.appendLineToFile((EvoSuiteFile) null, \"Instant must not be null\");\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.halfdayOfDay();\n    DateTimeFormatterBuilder.Fraction dateTimeFormatterBuilder_Fraction0 = new DateTimeFormatterBuilder.Fraction(dateTimeFieldType0, 2000, 2000);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Fraction0, dateTimeFormatterBuilder_Fraction0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withDefaultYear(2147483573);\n    CopticChronology copticChronology0 = CopticChronology.getInstance();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withChronology(copticChronology0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withPivotYear((Integer) null);\n    dateTimeFormatter5.printTo((Writer) null, (ReadableInstant) null);\n    dateTimeFormatter0.withZoneUTC();\n}",
    "testName" : "test09898"
  },
  "test06666" : {
    "methodSignature" : "public Locale getLocale()",
    "methodName" : "getLocale",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06666() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.year();\n    DateTimeFormatterBuilder.FixedNumber dateTimeFormatterBuilder_FixedNumber0 = new DateTimeFormatterBuilder.FixedNumber(dateTimeFieldType0, 0, false);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_FixedNumber0, dateTimeFormatterBuilder_FixedNumber0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withOffsetParsed();\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withPivotYear(1);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withDefaultYear(1900);\n    dateTimeFormatter4.parseDateTime((String) null);\n    String string0 = \"subtrahend\";\n    Locale locale0 = new Locale(string0);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withLocale(locale0);\n    dateTimeFormatter5.getDefaultYear();\n    dateTimeFormatter2.getLocale();\n}",
    "testName" : "test06666"
  },
  "test03030" : {
    "methodSignature" : "public LocalTime parseLocalTime(String text)",
    "methodName" : "parseLocalTime",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03030() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.secondOfDay();\n    DateTimeFormatterBuilder.PaddedNumber dateTimeFormatterBuilder_PaddedNumber0 = new DateTimeFormatterBuilder.PaddedNumber(dateTimeFieldType0, 1, false, 1);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_PaddedNumber0, dateTimeFormatterBuilder_PaddedNumber0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withLocale((Locale) null);\n    dateTimeFormatter1.withOffsetParsed();\n    dateTimeFormatter1.parseLocalTime((String) null);\n}",
    "testName" : "test03030"
  },
  "test08686" : {
    "methodSignature" : "public DateTime minusYears(int years)",
    "methodName" : "minusYears",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08686() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekOfWeekyear();\n    int int0 = 115;\n    DateTimeFormatterBuilder.UnpaddedNumber dateTimeFormatterBuilder_UnpaddedNumber0 = new DateTimeFormatterBuilder.UnpaddedNumber(dateTimeFieldType0, 115, false);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_UnpaddedNumber0, dateTimeFormatterBuilder_UnpaddedNumber0);\n    FileSystemHandling.appendLineToFile((EvoSuiteFile) null, \"No instant converter found for type: \");\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(115);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withDefaultYear(0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withOffsetParsed();\n    EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstanceUTC();\n    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(115);\n    Chronology chronology0 = ethiopicChronology0.withZone(dateTimeZone0);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withChronology(chronology0);\n    dateTimeFormatter4.withChronology(chronology0);\n    Locale locale0 = Locale.FRENCH;\n    dateTimeFormatter4.withLocale(locale0);\n    Object object0 = new Object();\n    DateTime dateTime0 = new DateTime(object0);\n    DateTime dateTime1 = dateTime0.plusMonths(int0);\n    DateTime dateTime2 = dateTime1.withMillis(int0);\n    int int1 = 86400;\n    dateTime2.minusYears(int1);\n}",
    "testName" : "test08686"
  },
  "test02222" : {
    "methodSignature" : "public Integer getPivotYear()",
    "methodName" : "getPivotYear",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02222() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.year();\n    DateTimeFormatterBuilder.UnpaddedNumber dateTimeFormatterBuilder_UnpaddedNumber0 = new DateTimeFormatterBuilder.UnpaddedNumber(dateTimeFieldType0, (-889), false);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_UnpaddedNumber0, dateTimeFormatterBuilder_UnpaddedNumber0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withOffsetParsed();\n    dateTimeFormatter1.getPivotYear();\n}",
    "testName" : "test02222"
  },
  "test07474" : {
    "methodSignature" : "public static EthiopicChronology getInstance(DateTimeZone zone, int minDaysInFirstWeek)",
    "methodName" : "getInstance",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07474() throws Throwable {\n    String string0 = \"8\";\n    DateTimeFormatterBuilder.StringLiteral dateTimeFormatterBuilder_StringLiteral0 = new DateTimeFormatterBuilder.StringLiteral(\"8\");\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_StringLiteral0, dateTimeFormatterBuilder_StringLiteral0);\n    int int0 = (-365);\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    dateTimeFormatter0.parseLocalTime(\"8\");\n    EthiopicChronology.getInstance((DateTimeZone) fixedDateTimeZone0, (-365));\n}",
    "testName" : "test07474"
  },
  "test04242" : {
    "methodSignature" : "public long parseMillis(String text)",
    "methodName" : "parseMillis",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04242() throws Throwable {\n    DateTimeFormatterBuilder.TimeZoneName dateTimeFormatterBuilder_TimeZoneName0 = new DateTimeFormatterBuilder.TimeZoneName(0, (Map<String, DateTimeZone>) null);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TimeZoneName0, dateTimeFormatterBuilder_TimeZoneName0);\n    Locale locale0 = Locale.SIMPLIFIED_CHINESE;\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withLocale(locale0);\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();\n    Chronology chronology0 = buddhistChronology0.withUTC();\n    dateTimeFormatter1.withChronology(chronology0);\n    dateTimeFormatter1.parseMillis(\"Z*MA_Y|UT>`mbD\");\n}",
    "testName" : "test04242"
  },
  "test106106" : {
    "methodSignature" : "public DateTimeParser getParser()",
    "methodName" : "getParser",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106106() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.yearOfCentury();\n    dateTimeFieldType0.getDurationType();\n    int int0 = 2428;\n    DateTimeFormatterBuilder.TwoDigitYear dateTimeFormatterBuilder_TwoDigitYear0 = new DateTimeFormatterBuilder.TwoDigitYear(dateTimeFieldType0, 2428, true);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TwoDigitYear0, dateTimeFormatterBuilder_TwoDigitYear0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withOffsetParsed();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    Locale locale0 = Locale.JAPAN;\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withLocale(locale0);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withDefaultYear(2428);\n    ISOChronology iSOChronology0 = ISOChronology.getInstance();\n    MutableDateTime mutableDateTime0 = new MutableDateTime((Chronology) iSOChronology0);\n    dateTimeFormatter1.parseInto(mutableDateTime0, \"Multiplication overflows a long: \", 17887500);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withChronology(iSOChronology0);\n    dateTimeFormatter5.withDefaultYear(2428);\n    dateTimeFormatter3.parseLocalDateTime(\"\");\n    dateTimeFormatter5.withLocale(locale0);\n    DateTimeUtils.MillisProvider dateTimeUtils_MillisProvider0 = mock(DateTimeUtils.MillisProvider.class, new ViolatedAssumptionAnswer());\n    DateTimeUtils.setCurrentMillisProvider(dateTimeUtils_MillisProvider0);\n    dateTimeFormatter2.getParser();\n}",
    "testName" : "test106106"
  },
  "test137137" : {
    "methodSignature" : "public void printTo(Appendable appendable, long instant) throws IOException",
    "methodName" : "printTo",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test137137() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.yearOfEra();\n    FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);\n    DateTimeFormatterBuilder.UnpaddedNumber dateTimeFormatterBuilder_UnpaddedNumber0 = new DateTimeFormatterBuilder.UnpaddedNumber(dateTimeFieldType0, (-706), true);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_UnpaddedNumber0, dateTimeFormatterBuilder_UnpaddedNumber0);\n    dateTimeFormatter0.withZoneUTC();\n    Locale locale0 = Locale.FRANCE;\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear((-706));\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withPivotYear((-706));\n    GJChronology gJChronology0 = GJChronology.getInstanceUTC();\n    Integer integer0 = new Integer((-706));\n    DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket((-706), gJChronology0, locale0, integer0, (-706));\n    DateTimeZone dateTimeZone0 = dateTimeParserBucket0.getZone();\n    DateTimeUtils.MillisProvider dateTimeUtils_MillisProvider0 = mock(DateTimeUtils.MillisProvider.class, new ViolatedAssumptionAnswer());\n    doReturn((long) (-706)).when(dateTimeUtils_MillisProvider0).getMillis();\n    DateTimeUtils.setCurrentMillisProvider(dateTimeUtils_MillisProvider0);\n    dateTimeParserBucket0.computeMillis();\n    MutableDateTime mutableDateTime0 = new MutableDateTime(dateTimeZone0);\n    dateTimeFormatter3.parseInto(mutableDateTime0, \"6?OG.\", (-706));\n    mutableDateTime0.getZone();\n    System.setCurrentTimeMillis(4121L);\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"6?OG.\", true);\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, true);\n    dateTimeFormatter1.getPrinter();\n    dateTimeFormatter1.printTo((Appendable) mockPrintWriter0, (long) 3);\n}",
    "testName" : "test137137"
  },
  "test09090" : {
    "methodSignature" : "public long parseMillis(String text)",
    "methodName" : "parseMillis",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09090() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    DateTimeFormatterBuilder.Composite dateTimeFormatterBuilder_Composite0 = new DateTimeFormatterBuilder.Composite(linkedList0);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Composite0, dateTimeFormatterBuilder_Composite0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(0);\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withOffsetParsed();\n    FileSystemHandling.createFolder((EvoSuiteFile) null);\n    Integer integer0 = new Integer((-1101));\n    Integer.getInteger(\"\", integer0);\n    ISOChronology.getInstanceUTC();\n    dateTimeFormatter2.getPivotYear();\n    dateTimeFormatter0.withPivotYear((-1101));\n    dateTimeFormatter0.parseMillis(\"\");\n}",
    "testName" : "test09090"
  },
  "test114114" : {
    "methodSignature" : "public String print(long instant)",
    "methodName" : "print",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test114114() throws Throwable {\n    DateTimeFormatterBuilder.TimeZoneOffset dateTimeFormatterBuilder_TimeZoneOffset0 = new DateTimeFormatterBuilder.TimeZoneOffset(\"\", \"Q+S.Z\", true, 1244, 1244);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TimeZoneOffset0, dateTimeFormatterBuilder_TimeZoneOffset0);\n    Integer integer0 = new Integer(14);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(integer0);\n    dateTimeFormatter1.getDefaultYear();\n    FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    Calendar calendar0 = MockCalendar.getInstance(locale0);\n    Integer.compare(2000, (-2881));\n    MonthDay monthDay0 = MonthDay.fromCalendarFields(calendar0);\n    MonthDay monthDay1 = monthDay0.plusMonths(2147483603);\n    dateTimeFormatter1.print((ReadablePartial) monthDay1);\n    dateTimeFormatter0.getParser();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withOffsetParsed();\n    dateTimeFormatter2.parseLocalDateTime(\"Instant must not be null\");\n    dateTimeFormatter2.print((long) monthDay1.MONTH_OF_YEAR);\n}",
    "testName" : "test114114"
  },
  "test0066" : {
    "methodSignature" : "public DateTimeFormatter withChronology(Chronology chrono)",
    "methodName" : "withChronology",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0066() throws Throwable {\n    FileSystemHandling.appendLineToFile((EvoSuiteFile) null, \"Instant must not be null\");\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.halfdayOfDay();\n    DateTimeFormatterBuilder.Fraction dateTimeFormatterBuilder_Fraction0 = new DateTimeFormatterBuilder.Fraction(dateTimeFieldType0, 2000, 2000);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter((DateTimePrinter) null, dateTimeFormatterBuilder_Fraction0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withDefaultYear(2147483573);\n    CopticChronology copticChronology0 = CopticChronology.getInstance();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withChronology(copticChronology0);\n    ZoneOffset zoneOffset0 = ZoneOffset.MIN;\n    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);\n    DateTimeZone dateTimeZone0 = DateTimeZone.forTimeZone(timeZone0);\n    copticChronology0.withZone(dateTimeZone0);\n    dateTimeFormatter2.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter0.withPivotYear((Integer) null);\n    dateTimeFormatter3.printTo((Writer) null, (ReadableInstant) null);\n    dateTimeFormatter0.withChronology(copticChronology0);\n}",
    "testName" : "test0066"
  },
  "test147147" : {
    "methodSignature" : "public LocalDate parseLocalDate(String text)",
    "methodName" : "parseLocalDate",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test147147() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    DateTimeFormatterBuilder.Composite dateTimeFormatterBuilder_Composite0 = new DateTimeFormatterBuilder.Composite(linkedList0);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Composite0, dateTimeFormatterBuilder_Composite0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(0);\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    dateTimeFormatter1.withOffsetParsed();\n    FileSystemHandling.createFolder((EvoSuiteFile) null);\n    Integer integer0 = new Integer((-1101));\n    Integer integer1 = new Integer((-1101));\n    ISOChronology.getInstanceUTC();\n    Integer integer2 = new Integer(0);\n    dateTimeFormatter0.withPivotYear((-1101));\n    long long0 = new Integer(0);\n    dateTimeFormatter0.parseLocalDate(\"Printing not supported\");\n}",
    "testName" : "test147147"
  },
  "test101101" : {
    "methodSignature" : "public LocalDate(long instant)",
    "methodName" : "LocalDate",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101101() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyear();\n    DateTimeFormatterBuilder.TwoDigitYear dateTimeFormatterBuilder_TwoDigitYear0 = new DateTimeFormatterBuilder.TwoDigitYear(dateTimeFieldType0, 560, true);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter((DateTimePrinter) null, dateTimeFormatterBuilder_TwoDigitYear0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZoneUTC();\n    String string0 = \"Z\";\n    int int0 = 9;\n    Integer integer0 = Integer.getInteger(\"Z\", 9);\n    dateTimeFieldType0.getRangeDurationType();\n    StringBuffer stringBuffer0 = new StringBuffer();\n    dateTimeFormatter0.printTo(stringBuffer0, 3L);\n    dateTimeFormatter1.withPivotYear(integer0);\n    int int1 = (-3298);\n    long long0 = (-2492L);\n    LocalDate localDate0 = null;\n    localDate0 = new LocalDate(long0);\n}",
    "testName" : "test101101"
  },
  "test02323" : {
    "methodSignature" : "public DateTimeFormatter withChronology(Chronology chrono)",
    "methodName" : "withChronology",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02323() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.monthOfYear();\n    DateTimeFormatterBuilder.FixedNumber dateTimeFormatterBuilder_FixedNumber0 = new DateTimeFormatterBuilder.FixedNumber(dateTimeFieldType0, (-2375), false);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_FixedNumber0, dateTimeFormatterBuilder_FixedNumber0);\n    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetHours(17);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZone(dateTimeZone0);\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();\n    dateTimeFormatter1.withChronology(buddhistChronology0);\n}",
    "testName" : "test02323"
  },
  "test05959" : {
    "methodSignature" : "public void printTo(Writer out, ReadableInstant instant) throws IOException",
    "methodName" : "printTo",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05959() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    DateTimeFormatterBuilder.Composite dateTimeFormatterBuilder_Composite0 = new DateTimeFormatterBuilder.Composite(linkedList0);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Composite0, dateTimeFormatterBuilder_Composite0);\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    linkedList0.add((Object) dateTimeFormatterBuilder_Composite0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZone(fixedDateTimeZone0);\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();\n    Chronology chronology0 = buddhistChronology0.withZone(fixedDateTimeZone0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withChronology(chronology0);\n    Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());\n    linkedList0.forEach(consumer0);\n    DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();\n    DateTimeZone.setNameProvider(defaultNameProvider0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withDefaultYear((-527));\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter1.withPivotYear(2000);\n    Locale locale0 = Locale.TAIWAN;\n    DateTimeZone.forTimeZone((TimeZone) null);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter3.withLocale(locale0);\n    dateTimeFormatter5.getLocale();\n    DateTimeFormatter dateTimeFormatter6 = dateTimeFormatter1.withOffsetParsed();\n    dateTimeFormatter0.getZone();\n    dateTimeFormatter4.withPivotYear(1023);\n    dateTimeFormatter6.isOffsetParsed();\n    DateTimeFormatter dateTimeFormatter7 = dateTimeFormatter3.withChronology(buddhistChronology0);\n    dateTimeFormatter7.parseLocalDateTime(\"The datetime zone id '\");\n    String string0 = \"VADxWbj\";\n    dateTimeFormatter7.parseMutableDateTime(string0);\n    Writer writer0 = null;\n    Instant instant0 = Instant.now();\n    dateTimeFormatter1.printTo(writer0, (ReadableInstant) instant0);\n}",
    "testName" : "test05959"
  },
  "test07979" : {
    "methodSignature" : "public void printTo(Appendable appendable, ReadableInstant instant) throws IOException",
    "methodName" : "printTo",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07979() throws Throwable {\n    DateTimeFormatterBuilder.StringLiteral dateTimeFormatterBuilder_StringLiteral0 = new DateTimeFormatterBuilder.StringLiteral(\"2VvSxU\");\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_StringLiteral0, dateTimeFormatterBuilder_StringLiteral0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear((-3088));\n    CopticChronology copticChronology0 = CopticChronology.getInstance();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withChronology(copticChronology0);\n    StringWriter stringWriter0 = new StringWriter();\n    Object object0 = new Object();\n    char[] charArray0 = new char[6];\n    charArray0[0] = 'S';\n    charArray0[1] = 'C';\n    charArray0[2] = '{';\n    charArray0[3] = 'H';\n    charArray0[4] = '#';\n    charArray0[5] = '5';\n    MutableDateTime mutableDateTime0 = new MutableDateTime((long) (-1755), (Chronology) copticChronology0);\n    dateTimeFormatter1.parseInto(mutableDateTime0, \"2VvSxU\", 4);\n    stringWriter0.write(charArray0);\n    MonthDay monthDay0 = new MonthDay(1, (-1755));\n    dateTimeFormatter0.printTo((Appendable) stringWriter0, (ReadablePartial) monthDay0);\n    Instant instant0 = new Instant(object0);\n    Instant instant1 = instant0.withMillis(copticChronology0.AM);\n    dateTimeFormatter2.printTo((Appendable) stringWriter0, (ReadableInstant) instant1);\n}",
    "testName" : "test07979"
  },
  "test01515" : {
    "methodSignature" : "public DateTimeFormatter withZoneUTC()",
    "methodName" : "withZoneUTC",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01515() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    DateTimeFormatterBuilder.Composite dateTimeFormatterBuilder_Composite0 = new DateTimeFormatterBuilder.Composite(linkedList0);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Composite0, dateTimeFormatterBuilder_Composite0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(0);\n    FileSystemHandling.createFolder((EvoSuiteFile) null);\n    dateTimeFormatter1.withDefaultYear(1470);\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZone(fixedDateTimeZone0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withOffsetParsed();\n    FileSystemHandling fileSystemHandling0 = new FileSystemHandling();\n    Integer integer0 = new Integer((-1101));\n    Integer integer1 = Integer.getInteger(\"\", integer0);\n    Integer integer2 = Integer.getInteger(\"~C'u?aC}:-~\", integer1);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withPivotYear(integer2);\n    DateTimeUtils.setCurrentMillisOffset(0);\n    ISOChronology iSOChronology0 = ISOChronology.getInstanceUTC();\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withChronology(iSOChronology0);\n    dateTimeFormatter5.getChronology();\n    dateTimeFormatter0.isOffsetParsed();\n    dateTimeFormatter5.withZoneUTC();\n}",
    "testName" : "test01515"
  },
  "test02727" : {
    "methodSignature" : "public Chronology getChronology()",
    "methodName" : "getChronology",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02727() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyearOfCentury();\n    DateTimeFormatterBuilder.Fraction dateTimeFormatterBuilder_Fraction0 = new DateTimeFormatterBuilder.Fraction(dateTimeFieldType0, 228, 228);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Fraction0, dateTimeFormatterBuilder_Fraction0);\n    dateTimeFormatter0.getChronology();\n}",
    "testName" : "test02727"
  },
  "test115115" : {
    "methodSignature" : "public Period minusMillis(int millis)",
    "methodName" : "minusMillis",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115115() throws Throwable {\n    DateTimeFormatterBuilder.StringLiteral dateTimeFormatterBuilder_StringLiteral0 = new DateTimeFormatterBuilder.StringLiteral(\"\");\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_StringLiteral0, dateTimeFormatterBuilder_StringLiteral0);\n    int int0 = 314;\n    Integer integer0 = new Integer(314);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(integer0);\n    dateTimeFormatter1.parseDateTime(\"\");\n    int int1 = 0;\n    StringBuffer stringBuffer0 = new StringBuffer(0);\n    dateTimeFormatter0.printTo(stringBuffer0, 0L);\n    GJChronology gJChronology0 = GJChronology.getInstanceUTC();\n    DateTimeZone dateTimeZone0 = gJChronology0.getZone();\n    GregorianChronology gregorianChronology0 = GregorianChronology.getInstance(dateTimeZone0);\n    Chronology chronology0 = gregorianChronology0.withUTC();\n    gJChronology0.withUTC();\n    Locale locale0 = Locale.GERMANY;\n    dateTimeFormatterBuilder_StringLiteral0.printTo(stringBuffer0, (long) 314, chronology0, 0, dateTimeZone0, locale0);\n    CharArrayWriter charArrayWriter0 = new CharArrayWriter();\n    dateTimeFormatter1.printTo((Writer) charArrayWriter0, (long) 0);\n    dateTimeFormatter1.parseLocalDate(\"\");\n    stringBuffer0.setLength((-2714));\n    JulianChronology julianChronology0 = JulianChronology.getInstanceUTC();\n    YearMonth yearMonth0 = new YearMonth((Chronology) julianChronology0);\n    int int2 = 1;\n    int int3 = 0;\n    PeriodType periodType0 = PeriodType.yearMonthDay();\n    Period period0 = new Period(int2, int0, int1, int2, yearMonth0.MONTH_OF_YEAR, int3, yearMonth0.MONTH_OF_YEAR, yearMonth0.YEAR, periodType0);\n    period0.minusMillis(int3);\n}",
    "testName" : "test115115"
  },
  "test01919" : {
    "methodSignature" : "public long parseMillis(String text)",
    "methodName" : "parseMillis",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01919() throws Throwable {\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter((DateTimePrinter) null, (DateTimeParser) null);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZoneUTC();\n    EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstanceUTC();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withChronology(ethiopicChronology0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withOffsetParsed();\n    Locale locale0 = Locale.PRC;\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withLocale(locale0);\n    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetHours(1);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withZone(dateTimeZone0);\n    dateTimeFormatter5.parseMillis(\"org.joda.time.DateTimeZone.NameProvider\");\n}",
    "testName" : "test01919"
  },
  "test03939" : {
    "methodSignature" : "public DateTime toDateTimeAtCurrentTime(DateTimeZone zone)",
    "methodName" : "toDateTimeAtCurrentTime",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03939() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.halfdayOfDay();\n    DateTimeFormatterBuilder.TwoDigitYear dateTimeFormatterBuilder_TwoDigitYear0 = new DateTimeFormatterBuilder.TwoDigitYear(dateTimeFieldType0, 47, true);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TwoDigitYear0, dateTimeFormatterBuilder_TwoDigitYear0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withPivotYear(47);\n    Integer integer0 = new Integer(245);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withPivotYear(integer0);\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    dateTimeFormatter3.withZone(fixedDateTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer();\n    LocalDateTime localDateTime0 = LocalDateTime.parse(\"E+b^jb2^~g<$<4v!-u|\");\n    int int0 = 1;\n    LocalDateTime localDateTime1 = localDateTime0.plusDays(int0);\n    LocalDate localDate0 = localDateTime1.toLocalDate();\n    localDate0.toDateTimeAtCurrentTime((DateTimeZone) fixedDateTimeZone0);\n}",
    "testName" : "test03939"
  },
  "test09595" : {
    "methodSignature" : "public void printTo(Appendable appendable, long instant) throws IOException",
    "methodName" : "printTo",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09595() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.yearOfEra();\n    FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);\n    DateTimeFormatterBuilder.UnpaddedNumber dateTimeFormatterBuilder_UnpaddedNumber0 = new DateTimeFormatterBuilder.UnpaddedNumber(dateTimeFieldType0, (-706), true);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_UnpaddedNumber0, dateTimeFormatterBuilder_UnpaddedNumber0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withOffsetParsed();\n    Locale locale0 = Locale.FRANCE;\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withLocale(locale0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withPivotYear((-706));\n    GJChronology gJChronology0 = GJChronology.getInstanceUTC();\n    Integer integer0 = new Integer(1411);\n    DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket((-706), gJChronology0, locale0, integer0, (-706));\n    DateTimeZone dateTimeZone0 = dateTimeParserBucket0.getZone();\n    DateTimeUtils.MillisProvider dateTimeUtils_MillisProvider0 = mock(DateTimeUtils.MillisProvider.class, new ViolatedAssumptionAnswer());\n    doReturn(0L).when(dateTimeUtils_MillisProvider0).getMillis();\n    DateTimeUtils.setCurrentMillisProvider(dateTimeUtils_MillisProvider0);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withZone(dateTimeZone0);\n    dateTimeParserBucket0.computeMillis();\n    MutableDateTime mutableDateTime0 = new MutableDateTime(dateTimeZone0);\n    dateTimeFormatter5.parseInto(mutableDateTime0, \"\", (-706));\n    System.setCurrentTimeMillis(4121L);\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"\", true);\n    boolean boolean0 = true;\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, boolean0);\n    dateTimeFormatter2.printTo((Appendable) mockPrintWriter0, (long) mutableDateTime0.ROUND_HALF_FLOOR);\n}",
    "testName" : "test09595"
  },
  "test142142" : {
    "methodSignature" : "public void printTo(Appendable appendable, long instant) throws IOException",
    "methodName" : "printTo",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test142142() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.yearOfEra();\n    FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);\n    DateTimeFormatterBuilder.UnpaddedNumber dateTimeFormatterBuilder_UnpaddedNumber0 = new DateTimeFormatterBuilder.UnpaddedNumber(dateTimeFieldType0, (-706), true);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_UnpaddedNumber0, dateTimeFormatterBuilder_UnpaddedNumber0);\n    dateTimeFormatter0.withZoneUTC();\n    Locale locale0 = Locale.FRANCE;\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear((-706));\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withPivotYear((-706));\n    GJChronology gJChronology0 = GJChronology.getInstanceUTC();\n    Integer integer0 = new Integer((-706));\n    DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket((-706), gJChronology0, locale0, integer0, (-706));\n    DateTimeZone dateTimeZone0 = dateTimeParserBucket0.getZone();\n    DateTimeUtils.MillisProvider dateTimeUtils_MillisProvider0 = mock(DateTimeUtils.MillisProvider.class, new ViolatedAssumptionAnswer());\n    doReturn((long) (-706)).when(dateTimeUtils_MillisProvider0).getMillis();\n    DateTimeUtils.setCurrentMillisProvider(dateTimeUtils_MillisProvider0);\n    dateTimeParserBucket0.computeMillis();\n    MutableDateTime mutableDateTime0 = new MutableDateTime(dateTimeZone0);\n    dateTimeFormatter3.parseInto(mutableDateTime0, \"6?OG.\", (-706));\n    System.setCurrentTimeMillis(4121L);\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"6?OG.\", true);\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, true);\n    dateTimeFormatter0.print((ReadableInstant) mutableDateTime0);\n    dateTimeFormatter1.printTo((Appendable) mockPrintWriter0, (long) mutableDateTime0.ROUND_HALF_FLOOR);\n}",
    "testName" : "test142142"
  },
  "test08383" : {
    "methodSignature" : "public long parseMillis(String text)",
    "methodName" : "parseMillis",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08383() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    DateTimeFormatterBuilder.Composite dateTimeFormatterBuilder_Composite0 = new DateTimeFormatterBuilder.Composite(linkedList0);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Composite0, dateTimeFormatterBuilder_Composite0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(0);\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZone(fixedDateTimeZone0);\n    dateTimeFormatter2.withOffsetParsed();\n    String string0 = \"\";\n    Integer integer0 = new Integer((-1101));\n    Integer.getInteger(\"\", integer0);\n    ISOChronology.getInstanceUTC();\n    dateTimeFormatter1.parseDateTime(\"25._0u\");\n    dateTimeFormatter2.isPrinter();\n    dateTimeFormatter1.parseMillis(string0);\n}",
    "testName" : "test08383"
  },
  "test05151" : {
    "methodSignature" : "public DateTimeZone getZone()",
    "methodName" : "getZone",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05151() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.secondOfMinute();\n    DateTimeFormatterBuilder.UnpaddedNumber dateTimeFormatterBuilder_UnpaddedNumber0 = new DateTimeFormatterBuilder.UnpaddedNumber(dateTimeFieldType0, (-2180), false);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter((DateTimePrinter) null, dateTimeFormatterBuilder_UnpaddedNumber0);\n    dateTimeFormatter0.withPivotYear((-2180));\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZone(fixedDateTimeZone0);\n    dateTimeFormatter1.getZone();\n}",
    "testName" : "test05151"
  },
  "test123123" : {
    "methodSignature" : "public LocalDateTime parseLocalDateTime(String text)",
    "methodName" : "parseLocalDateTime",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test123123() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.yearOfCentury();\n    dateTimeFieldType0.getDurationType();\n    DateTimeFormatterBuilder.TwoDigitYear dateTimeFormatterBuilder_TwoDigitYear0 = new DateTimeFormatterBuilder.TwoDigitYear(dateTimeFieldType0, 2428, true);\n    Locale locale0 = Locale.JAPAN;\n    ISOChronology.getInstance();\n    DateTimeUtils.MillisProvider dateTimeUtils_MillisProvider0 = mock(DateTimeUtils.MillisProvider.class, new ViolatedAssumptionAnswer());\n    DateTimeUtils.setCurrentMillisProvider(dateTimeUtils_MillisProvider0);\n    StringBuffer stringBuffer0 = new StringBuffer();\n    Integer integer0 = new Integer(2428);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TwoDigitYear0, dateTimeFormatterBuilder_TwoDigitYear0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withLocale(locale0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withDefaultYear(17);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withPivotYear(2041);\n    dateTimeFormatter4.parseLocalDateTime((String) null);\n}",
    "testName" : "test123123"
  },
  "test04343" : {
    "methodSignature" : "public String print(long instant)",
    "methodName" : "print",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04343() throws Throwable {\n    HashMap<String, DateTimeZone> hashMap0 = new HashMap<String, DateTimeZone>();\n    DateTimeFormatterBuilder.TimeZoneName dateTimeFormatterBuilder_TimeZoneName0 = new DateTimeFormatterBuilder.TimeZoneName(0, hashMap0);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TimeZoneName0, dateTimeFormatterBuilder_TimeZoneName0);\n    Locale locale0 = Locale.JAPAN;\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withLocale(locale0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withOffsetParsed();\n    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis((-969));\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withZone(dateTimeZone0);\n    EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstance(dateTimeZone0);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withChronology(ethiopicChronology0);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withPivotYear(0);\n    dateTimeFormatter5.print((long) 0);\n}",
    "testName" : "test04343"
  },
  "test09999" : {
    "methodSignature" : "public String print(ReadablePartial partial)",
    "methodName" : "print",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09999() throws Throwable {\n    FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);\n    DateTimeFormatterBuilder.StringLiteral dateTimeFormatterBuilder_StringLiteral0 = new DateTimeFormatterBuilder.StringLiteral(\"kdD|M1)SX/EebKI#Cfr\");\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter((DateTimePrinter) null, dateTimeFormatterBuilder_StringLiteral0);\n    Locale locale0 = Locale.KOREAN;\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withLocale(locale0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withPivotYear((-1));\n    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(9);\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance(dateTimeZone0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withChronology(buddhistChronology0);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withPivotYear((Integer) 1);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withZone(dateTimeZone0);\n    LocalTime localTime0 = new LocalTime((long) (-1), (Chronology) buddhistChronology0);\n    dateTimeFormatter5.print((ReadablePartial) localTime0);\n}",
    "testName" : "test09999"
  },
  "test104104" : {
    "methodSignature" : "public void printTo(Appendable appendable, long instant) throws IOException",
    "methodName" : "printTo",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104104() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.yearOfEra();\n    FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);\n    DateTimeFormatterBuilder.UnpaddedNumber dateTimeFormatterBuilder_UnpaddedNumber0 = new DateTimeFormatterBuilder.UnpaddedNumber(dateTimeFieldType0, (-706), true);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_UnpaddedNumber0, dateTimeFormatterBuilder_UnpaddedNumber0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withOffsetParsed();\n    Locale locale0 = Locale.FRANCE;\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withLocale(locale0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withPivotYear((-706));\n    GJChronology gJChronology0 = GJChronology.getInstanceUTC();\n    Integer integer0 = new Integer((-706));\n    DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket((-706), gJChronology0, locale0, integer0, (-706));\n    DateTimeZone dateTimeZone0 = dateTimeParserBucket0.getZone();\n    DateTimeUtils.MillisProvider dateTimeUtils_MillisProvider0 = mock(DateTimeUtils.MillisProvider.class, new ViolatedAssumptionAnswer());\n    doReturn((long) (-706)).when(dateTimeUtils_MillisProvider0).getMillis();\n    DateTimeUtils.setCurrentMillisProvider(dateTimeUtils_MillisProvider0);\n    dateTimeParserBucket0.computeMillis();\n    MutableDateTime mutableDateTime0 = new MutableDateTime(dateTimeZone0);\n    dateTimeFormatter4.parseInto(mutableDateTime0, \"6?OG.\", (-706));\n    System.setCurrentTimeMillis(4121L);\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"6?OG.\", true);\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, true);\n    dateTimeFormatter2.printTo((Appendable) mockPrintWriter0, (long) 3);\n}",
    "testName" : "test104104"
  },
  "test08787" : {
    "methodSignature" : "public boolean isOffsetParsed()",
    "methodName" : "isOffsetParsed",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08787() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    DateTimeFormatterBuilder.Composite dateTimeFormatterBuilder_Composite0 = new DateTimeFormatterBuilder.Composite(linkedList0);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Composite0, dateTimeFormatterBuilder_Composite0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withPivotYear(0);\n    dateTimeFormatter1.withDefaultYear(1470);\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZone(fixedDateTimeZone0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withOffsetParsed();\n    Integer integer0 = new Integer((-1101));\n    Integer integer1 = Integer.getInteger(\"\", integer0);\n    Integer integer2 = Integer.getInteger(\"~C'u?aC}:-~\", integer1);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withPivotYear(integer2);\n    ISOChronology iSOChronology0 = ISOChronology.getInstanceUTC();\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withChronology(iSOChronology0);\n    dateTimeFormatter5.getChronology();\n    dateTimeFormatter0.isOffsetParsed();\n}",
    "testName" : "test08787"
  },
  "test05555" : {
    "methodSignature" : "public static final void setCurrentMillisOffset(long offsetMillis) throws SecurityException",
    "methodName" : "setCurrentMillisOffset",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05555() throws Throwable {\n    HashMap<String, DateTimeZone> hashMap0 = new HashMap<String, DateTimeZone>(0);\n    DateTimeFormatterBuilder.TimeZoneName dateTimeFormatterBuilder_TimeZoneName0 = new DateTimeFormatterBuilder.TimeZoneName(0, hashMap0);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_TimeZoneName0, dateTimeFormatterBuilder_TimeZoneName0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withDefaultYear((-1505));\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withLocale(locale0);\n    int int0 = (-955);\n    Integer integer0 = Integer.valueOf(\"Instant must not be null\", (-955));\n    dateTimeFormatter3.withPivotYear(integer0);\n    long long0 = (-2836L);\n    DateTimeUtils.setCurrentMillisOffset(long0);\n}",
    "testName" : "test05555"
  },
  "test06363" : {
    "methodSignature" : "public DateTime getUpperLimit()",
    "methodName" : "getUpperLimit",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06363() throws Throwable {\n    DateTimeFormatterBuilder.CharacterLiteral dateTimeFormatterBuilder_CharacterLiteral0 = new DateTimeFormatterBuilder.CharacterLiteral('J');\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_CharacterLiteral0, dateTimeFormatterBuilder_CharacterLiteral0);\n    CopticChronology copticChronology0 = CopticChronology.getInstance();\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withChronology(copticChronology0);\n    dateTimeFormatter1.getChronolgy();\n    int int0 = 12740625;\n    PipedWriter pipedWriter0 = new PipedWriter();\n    DateTime dateTime0 = DateTime.parse(\"\");\n    LimitChronology limitChronology0 = LimitChronology.getInstance(copticChronology0, dateTime0, dateTime0);\n    limitChronology0.getUpperLimit();\n}",
    "testName" : "test06363"
  },
  "test07575" : {
    "methodSignature" : "public Integer getPivotYear()",
    "methodName" : "getPivotYear",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07575() throws Throwable {\n    DateTimeFormatterBuilder.CharacterLiteral dateTimeFormatterBuilder_CharacterLiteral0 = new DateTimeFormatterBuilder.CharacterLiteral('.');\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_CharacterLiteral0, dateTimeFormatterBuilder_CharacterLiteral0);\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withOffsetParsed();\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withOffsetParsed();\n    Integer integer0 = new Integer(3);\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withPivotYear(integer0);\n    Locale locale0 = Locale.KOREAN;\n    dateTimeFormatter4.withLocale(locale0);\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter4.withChronology((Chronology) null);\n    dateTimeFormatter5.withZone(fixedDateTimeZone0);\n    dateTimeFormatter5.getPivotYear();\n}",
    "testName" : "test07575"
  },
  "test139139" : {
    "methodSignature" : "public String print(ReadablePartial partial)",
    "methodName" : "print",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test139139() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyearOfCentury();\n    DateTimeFormatterBuilder.PaddedNumber dateTimeFormatterBuilder_PaddedNumber0 = new DateTimeFormatterBuilder.PaddedNumber(dateTimeFieldType0, 12, true, 12);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_PaddedNumber0, dateTimeFormatterBuilder_PaddedNumber0);\n    TimeZone timeZone0 = TimeZone.getDefault();\n    DateTimeZone dateTimeZone0 = DateTimeZone.forTimeZone(timeZone0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withZone(dateTimeZone0);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter1.withZoneUTC();\n    byte[] byteArray0 = new byte[1];\n    FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);\n    DateTimeFormatter dateTimeFormatter3 = dateTimeFormatter2.withDefaultYear((-1483));\n    EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstance(dateTimeZone0);\n    Chronology chronology0 = ethiopicChronology0.withUTC();\n    dateTimeFieldType0.getDurationType();\n    DateTimeUtils.setCurrentMillisOffset((-1483));\n    DateTimeFormatter dateTimeFormatter4 = dateTimeFormatter3.withChronology(chronology0);\n    dateTimeFormatter4.print((-61L));\n    dateTimeFormatter1.parseMutableDateTime(\"000000000063\");\n    dateTimeFormatter3.isParser();\n    dateTimeFormatter4.withOffsetParsed();\n    DateTimeFormatter dateTimeFormatter5 = dateTimeFormatter3.withZone(dateTimeZone0);\n    dateTimeFormatter5.parseMutableDateTime(\"000000000063\");\n    dateTimeFormatter5.parseMutableDateTime(\"000000000063\");\n    LocalTime localTime0 = LocalTime.now();\n    dateTimeFormatter5.print((ReadablePartial) localTime0);\n}",
    "testName" : "test139139"
  },
  "test131131" : {
    "methodSignature" : "public boolean isOffsetParsed()",
    "methodName" : "isOffsetParsed",
    "className" : "org.joda.time.format.DateTimeFormatter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test131131() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    DateTimeFormatterBuilder.Composite dateTimeFormatterBuilder_Composite0 = new DateTimeFormatterBuilder.Composite(linkedList0);\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfWeek();\n    int int0 = 0;\n    DateTimeFormatterBuilder.TwoDigitYear dateTimeFormatterBuilder_TwoDigitYear0 = new DateTimeFormatterBuilder.TwoDigitYear(dateTimeFieldType0, 0, true);\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_Composite0, dateTimeFormatterBuilder_TwoDigitYear0);\n    DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();\n    dateTimeFieldType0.getRangeDurationType();\n    EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstance(dateTimeZone0);\n    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;\n    ethiopicChronology0.withZone(fixedDateTimeZone0);\n    DateTimeFormatter dateTimeFormatter1 = dateTimeFormatter0.withOffsetParsed();\n    DateTimeZone.getDefault();\n    dateTimeFormatter1.withPivotYear(1);\n    DateTimeFormatter dateTimeFormatter2 = dateTimeFormatter0.withDefaultYear(1);\n    MockFileWriter mockFileWriter0 = new MockFileWriter(\".uUz1ti80\");\n    MutableDateTime mutableDateTime0 = new MutableDateTime((-28799686L), (Chronology) ethiopicChronology0);\n    dateTimeFormatter0.parseInto(mutableDateTime0, (String) null, 3081);\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0);\n    long long0 = 86400000L;\n    DateTime dateTime0 = new DateTime(long0);\n    dateTimeFormatter2.printTo((Appendable) mockPrintWriter0, (ReadableInstant) dateTime0);\n    dateTimeFormatter1.isOffsetParsed();\n}",
    "testName" : "test131131"
  }
}