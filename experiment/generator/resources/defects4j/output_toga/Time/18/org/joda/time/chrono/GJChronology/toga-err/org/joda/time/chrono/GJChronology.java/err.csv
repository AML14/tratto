org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test001() throws Throwable {
    GJChronology gJChronology0 = GJChronology.getInstanceUTC();
    MutablePeriod mutablePeriod0 = new MutablePeriod((Object) null);
    int[] intArray0 = gJChronology0.get((ReadablePeriod) mutablePeriod0, (-1585L), (-12219292800000L));
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test0813() throws Throwable {
    DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
    GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0, 168L, 1);
    Instant instant0 = gJChronology0.getGregorianCutover();
    instant0.getMillis();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test1117() throws Throwable {
    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
    LocalDate localDate0 = new LocalDate((long) 1);
    long long0 = buddhistChronology0.set(localDate0, (-57358001L));
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test1623() throws Throwable {
    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetHours(1);
    GJChronology.getInstance(dateTimeZone0, (ReadableInstant) null, 1);
    DateTimeZone.forID(""cKI+| >S2"");
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test2130() throws Throwable {
    GJChronology gJChronology0 = GJChronology.getInstance();
    Months months0 = Months.NINE;
    int[] intArray0 = gJChronology0.get((ReadablePeriod) months0, (-12219292800000L), 31449600000L);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test2231() throws Throwable {
    GJChronology gJChronology0 = GJChronology.getInstance();
    Months months0 = Months.ZERO;
    int[] intArray0 = gJChronology0.get((ReadablePeriod) months0, (long) 499, (-25252563974400000L));
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test2334() throws Throwable {
    GJChronology gJChronology0 = GJChronology.getInstanceUTC();
    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
    DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
    DateMidnight dateMidnight0 = new DateMidnight(1123200004L, dateTimeZone0);
    DateMidnight dateMidnight1 = dateMidnight0.withChronology(gJChronology0);
    DateMidnight dateMidnight2 = dateMidnight1.plusDays((-292275054));
    DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
    DateMidnight dateMidnight3 = dateMidnight2.withFieldAdded(durationFieldType0, 1);
    dateMidnight3.getMillis();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test2435() throws Throwable {
    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
    DateTime dateTime0 = DateTime.now((Chronology) buddhistChronology0);
    dateTime0.withWeekyear((-541));
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test3143() throws Throwable {
    GJChronology gJChronology0 = GJChronology.getInstanceUTC();
    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
    DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
    DateMidnight dateMidnight0 = new DateMidnight(1123200004L, dateTimeZone0);
    DateMidnight dateMidnight1 = dateMidnight0.withChronology(gJChronology0);
    DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
    DateMidnight dateMidnight2 = dateMidnight1.withFieldAdded(durationFieldType0, 1);
    dateMidnight2.getMillis();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test3245() throws Throwable {
    GJChronology gJChronology0 = GJChronology.getInstance();
    Months months0 = Months.EIGHT;
    long long0 = gJChronology0.add((ReadablePeriod) months0, (-1L), 1136);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test3347() throws Throwable {
    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetHours(508);
    GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
    YearMonth yearMonth0 = new YearMonth(5154L, (Chronology) gJChronology0);
    Interval interval0 = yearMonth0.toInterval();
    Months months0 = Months.monthsIn(interval0);
    interval0.getEndMillis();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test3348() throws Throwable {
    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetHours(508);
    GJChronology gJChronology0 = GJChronology.getInstance(dateTimeZone0);
    YearMonth yearMonth0 = new YearMonth(5154L, (Chronology) gJChronology0);
    Interval interval0 = yearMonth0.toInterval();
    Months months0 = Months.monthsIn(interval0);
    months0.getMonths();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.chrono.GJChronology,@Test(timeout = 4000)
public void test3449() throws Throwable {
    GJChronology gJChronology0 = GJChronology.getInstanceUTC();
    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.secondOfMinute();
    Partial partial0 = new Partial(dateTimeFieldType0, 1, gJChronology0);
    PeriodType periodType0 = PeriodType.standard();
    Period period0 = new Period(15356250, 15356250, 4221, (-649), (-649), (-649), (-3611), 0, periodType0);
    Partial partial1 = partial0.withPeriodAdded(period0, (-649));
    partial1.equals((Object) partial0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
