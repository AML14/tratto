org.joda.time.Period,@Test(timeout = 4000)
public void test0011() throws Throwable {
    Period period0 = Period.minutes(648);
    Period period1 = period0.plusDays((-2241));
    Duration duration0 = period1.toStandardDuration();
    duration0.getMillis();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test0022() throws Throwable {
    Period period0 = Period.hours(98);
    Duration duration0 = period0.toStandardDuration();
    duration0.getMillis();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test0033() throws Throwable {
    Period period0 = Period.minutes(648);
    Duration duration0 = period0.toStandardDuration();
    duration0.getMillis();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test0044() throws Throwable {
    Period period0 = new Period();
    Period period1 = period0.plusSeconds(2527);
    Duration duration0 = period1.toStandardDuration();
    duration0.getMillis();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test0055() throws Throwable {
    Period period0 = Period.weeks(758);
    Seconds seconds0 = period0.toStandardSeconds();
    seconds0.getSeconds();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test0066() throws Throwable {
    Period period0 = Period.weeks(648);
    Minutes minutes0 = period0.toStandardMinutes();
    minutes0.getMinutes();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test0077() throws Throwable {
    PeriodType periodType0 = PeriodType.yearDayTime();
    Period period0 = new Period((-4294967296L), periodType0);
    Minutes minutes0 = period0.toStandardMinutes();
    minutes0.getMinutes();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test0088() throws Throwable {
    ISOChronology iSOChronology0 = ISOChronology.getInstance();
    Period period0 = new Period((Object) null, iSOChronology0);
    Period period1 = period0.minusMinutes(30);
    Days days0 = period1.toStandardDays();
    days0.getDays();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test00911() throws Throwable {
    Period period0 = new Period();
    Period period1 = period0.plusDays(2527);
    Period period2 = period1.plusSeconds(2527);
    Weeks weeks0 = period2.toStandardWeeks();
    weeks0.getWeeks();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test01012() throws Throwable {
    Duration duration0 = Duration.standardMinutes(1000L);
    Period period0 = duration0.toPeriod();
    Weeks weeks0 = period0.toStandardWeeks();
    weeks0.getWeeks();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test01315() throws Throwable {
    PeriodType periodType0 = PeriodType.yearWeekDay();
    PeriodType periodType1 = periodType0.withYearsRemoved();
    Period period0 = new Period(30962844000000L, 31556952000L, periodType1);
    Weeks weeks0 = period0.toStandardWeeks();
    weeks0.getWeeks();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test01416() throws Throwable {
    Days days0 = Days.SEVEN;
    Duration duration0 = days0.toStandardDuration();
    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;
    DateTime dateTime0 = new DateTime((DateTimeZone) fixedDateTimeZone0);
    PeriodType periodType0 = PeriodType.minutes();
    Period period0 = duration0.toPeriodFrom((ReadableInstant) dateTime0, periodType0);
    Seconds seconds0 = period0.toStandardSeconds();
    seconds0.getSeconds();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test01517() throws Throwable {
    LocalTime localTime0 = new LocalTime();
    LocalTime localTime1 = localTime0.withLocalMillis(0L);
    Period period0 = Period.fieldDifference(localTime0, localTime1);
    Seconds seconds0 = period0.toStandardSeconds();
    seconds0.getSeconds();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test01618() throws Throwable {
    Period period0 = Period.minutes(648);
    Period period1 = period0.plusDays((-2241));
    Minutes minutes0 = period1.toStandardMinutes();
    minutes0.getMinutes();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test01719() throws Throwable {
    Period period0 = Period.minutes(648);
    Period period1 = period0.plusDays((-2241));
    Hours hours0 = period1.toStandardHours();
    hours0.getHours();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test01820() throws Throwable {
    Period period0 = Period.minutes(10209375);
    Duration duration0 = period0.ZERO.toStandardDuration();
    duration0.getMillis();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test01921() throws Throwable {
    GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
    DateTime dateTime0 = DateTime.now((Chronology) gregorianChronology0);
    Period period0 = new Period(dateTime0, dateTime0);
    Period period1 = period0.withWeeks(1007);
    Duration duration0 = period1.toStandardDuration();
    duration0.getMillis();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test02022() throws Throwable {
    Period period0 = Period.ZERO;
    Period period1 = period0.plusWeeks((-2230));
    Duration duration0 = period1.toStandardDuration();
    duration0.getStandardSeconds();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test02123() throws Throwable {
    Period period0 = Period.hours(839);
    Days days0 = period0.toStandardDays();
    days0.getDays();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test02224() throws Throwable {
    ISOChronology iSOChronology0 = ISOChronology.getInstance();
    Period period0 = new Period((Object) null, iSOChronology0);
    Period period1 = period0.withWeeks((-420));
    Days days0 = period1.toStandardDays();
    days0.getDays();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test05356() throws Throwable {
    Period period0 = new Period();
    Period period1 = period0.plusDays(2527);
    Period period2 = period1.plusSeconds(2527);
    Period period3 = period1.ZERO.plusHours((-5051));
    Hours hours0 = period2.toStandardHours();
    period3.withFields(hours0);
    period3.equals((Object) period0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test05358() throws Throwable {
    Period period0 = new Period();
    Period period1 = period0.plusDays(2527);
    Period period2 = period1.plusSeconds(2527);
    Period period3 = period1.ZERO.plusHours((-5051));
    Hours hours0 = period2.toStandardHours();
    period3.withFields(hours0);
    hours0.getHours();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test113118() throws Throwable {
    Duration duration0 = Duration.standardMinutes(60L);
    PeriodType periodType0 = PeriodType.yearMonthDayTime();
    Period period0 = duration0.toPeriod(periodType0);
    Period period1 = period0.normalizedStandard(periodType0);
    period1.equals((Object) period0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test114120() throws Throwable {
    Period period0 = Period.millis(0);
    Period period1 = period0.multipliedBy(0);
    period1.equals((Object) period0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test136142() throws Throwable {
    ISOChronology iSOChronology0 = ISOChronology.getInstance();
    Period period0 = new Period((Object) null, iSOChronology0);
    Minutes minutes0 = period0.toStandardMinutes();
    minutes0.getMinutes();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test137143() throws Throwable {
    Period period0 = new Period();
    PeriodType periodType0 = PeriodType.yearWeekDay();
    Period period1 = period0.withYears(137);
    Period period2 = period1.normalizedStandard(periodType0);
    period2.equals((Object) period1);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test138144() throws Throwable {
    Period period0 = Period.months(8);
    Period period1 = period0.normalizedStandard();
    period1.equals((Object) period0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test144150() throws Throwable {
    Period period0 = Period.weeks(0);
    Period period1 = period0.ZERO.plusSeconds(0);
    period1.equals((Object) period0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test165171() throws Throwable {
    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;
    ISOChronology iSOChronology0 = ISOChronology.getInstance((DateTimeZone) fixedDateTimeZone0);
    LenientChronology lenientChronology0 = LenientChronology.getInstance(iSOChronology0);
    Period period0 = new Period((-870L), (-870L), lenientChronology0);
    Period period1 = period0.minusSeconds(1);
    Days days0 = period1.toStandardDays();
    days0.getDays();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test166173() throws Throwable {
    Period period0 = new Period();
    Seconds seconds0 = period0.toStandardSeconds();
    seconds0.getSeconds();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test175182() throws Throwable {
    Period period0 = new Period();
    Hours hours0 = period0.toStandardHours();
    Period period1 = period0.withFields(hours0);
    hours0.getHours();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test181189() throws Throwable {
    Period period0 = Period.weeks(0);
    Period period1 = period0.ZERO.negated();
    period1.equals((Object) period0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Period,@Test(timeout = 4000)
public void test182190() throws Throwable {
    Period period0 = Period.minutes(10209375);
    Period period1 = period0.withSeconds(10209375);
    period1.equals((Object) period0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
