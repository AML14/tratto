[ {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public void setValue(int index, int value)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public void add(ReadablePeriod period)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test011"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public void addYears(int years)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test022"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public void setMillis(int millis)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test033"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutablePeriod0.size())",
  "exception" : "",
  "testName" : "test044"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, period0.size())",
  "exception" : "",
  "testName" : "test055"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public Period(int years, int months, int weeks, int days, int hours, int minutes, int seconds, int millis, PeriodType type)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test066"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, duration0.getMillis())",
  "exception" : "",
  "testName" : "test077"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public long getStandardSeconds()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, duration0.getStandardSeconds())",
  "exception" : "",
  "testName" : "test088"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, duration0.getMillis())",
  "exception" : "",
  "testName" : "test099"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public long getStandardHours()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, duration0.getStandardHours())",
  "exception" : "",
  "testName" : "test1010"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public long getStandardSeconds()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, duration0.getStandardSeconds())",
  "exception" : "",
  "testName" : "test1111"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public long getStandardHours()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, duration0.getStandardHours())",
  "exception" : "",
  "testName" : "test1212"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, duration0.getMillis())",
  "exception" : "",
  "testName" : "test1313"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public int getValue(int index)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1414"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public int getValue(int index)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test1515"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(periodType0.getName())",
  "exception" : "",
  "testName" : "test1616"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public int getValue(int index)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1717"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(durationFieldType0.getName())",
  "exception" : "",
  "testName" : "test1818"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test1919"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public void add(ReadablePeriod period)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2020"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutablePeriod0.size())",
  "exception" : "",
  "testName" : "test2121"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutablePeriod0.size())",
  "exception" : "",
  "testName" : "test2222"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutablePeriod0.size())",
  "exception" : "",
  "testName" : "test2323"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutablePeriod0.size())",
  "exception" : "",
  "testName" : "test2424"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public void mergePeriod(ReadablePeriod period)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2525"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public DurationFieldType getFieldType(int index)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2626"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public void setWeeks(int weeks)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2727"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, period0.size())",
  "exception" : "",
  "testName" : "test2828"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public Period(ReadablePartial start, ReadablePartial end)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2929"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public Period(ReadablePartial start, ReadablePartial end)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3030"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, period0.size())",
  "exception" : "",
  "testName" : "test3131"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public void addDays(int days)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3232"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, mutablePeriod0.size())",
  "exception" : "",
  "testName" : "test3333"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, duration0.getMillis())",
  "exception" : "",
  "testName" : "test3434"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, mutablePeriod0.size())",
  "exception" : "",
  "testName" : "test3535"
}, {
  "className" : "org.joda.time.base.BasePeriod",
  "methodSignature" : "public long getMillis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3636"
} ]