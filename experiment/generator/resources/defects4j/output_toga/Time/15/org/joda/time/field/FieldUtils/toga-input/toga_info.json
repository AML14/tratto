{
  "test1212" : {
    "methodSignature" : "public static long safeAdd(long val1, long val2)",
    "methodName" : "safeAdd",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    FieldUtils.safeAdd((-9223372036854775808L), (-9223372036854775808L));\n}",
    "testName" : "test1212"
  },
  "test4646" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4646() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.secondOfMinute();\n    FieldUtils.verifyValueBounds(dateTimeFieldType0, Integer.MIN_VALUE, Integer.MIN_VALUE, Integer.MIN_VALUE);\n    dateTimeFieldType0.getName();\n}",
    "testName" : "test4646"
  },
  "test3434" : {
    "methodSignature" : "public static long safeMultiply(long val1, long val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    long long0 = FieldUtils.safeMultiply(2147483647L, (long) 3224);\n}",
    "testName" : "test3434"
  },
  "test6868" : {
    "methodSignature" : "public static long safeSubtract(long val1, long val2)",
    "methodName" : "safeSubtract",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6868() throws Throwable {\n    long long0 = FieldUtils.safeSubtract(1907, (-1267));\n}",
    "testName" : "test6868"
  },
  "test5656" : {
    "methodSignature" : "public static long safeMultiply(long val1, long val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5656() throws Throwable {\n    long long0 = FieldUtils.safeMultiply((-801L), 0L);\n}",
    "testName" : "test5656"
  },
  "test2424" : {
    "methodSignature" : "public static long safeAdd(long val1, long val2)",
    "methodName" : "safeAdd",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    long long0 = FieldUtils.safeAdd(0L, 0L);\n}",
    "testName" : "test2424"
  },
  "test1010" : {
    "methodSignature" : "public static int safeMultiply(int val1, int val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    int int0 = FieldUtils.safeMultiply(1, Integer.MIN_VALUE);\n}",
    "testName" : "test1010"
  },
  "test4444" : {
    "methodSignature" : "public static void verifyValueBounds(String fieldName, int value, int lowerBound, int upperBound)",
    "methodName" : "verifyValueBounds",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4444() throws Throwable {\n    Integer integer0 = new Integer(0);\n    FieldUtils.verifyValueBounds(\" * \", (int) integer0, 3654, 0);\n}",
    "testName" : "test4444"
  },
  "test3232" : {
    "methodSignature" : "public static int safeToInt(long value)",
    "methodName" : "safeToInt",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    FieldUtils.safeToInt(9223372036854775807L);\n}",
    "testName" : "test3232"
  },
  "test6666" : {
    "methodSignature" : "public static long safeSubtract(long val1, long val2)",
    "methodName" : "safeSubtract",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6666() throws Throwable {\n    FieldUtils.safeSubtract((-9223372036854775776L), 21600000L);\n}",
    "testName" : "test6666"
  },
  "test5454" : {
    "methodSignature" : "public static long safeMultiply(long val1, long val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5454() throws Throwable {\n    FieldUtils.safeMultiply((-9223372036854775808L), (-1L));\n}",
    "testName" : "test5454"
  },
  "test2222" : {
    "methodSignature" : "public static long safeMultiply(long val1, int val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    long long0 = FieldUtils.safeMultiply((-1L), 2031);\n}",
    "testName" : "test2222"
  },
  "test7676" : {
    "methodSignature" : "public static int safeNegate(int value)",
    "methodName" : "safeNegate",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7676() throws Throwable {\n    int int0 = FieldUtils.safeNegate(0);\n}",
    "testName" : "test7676"
  },
  "test033" : {
    "methodSignature" : "public static void verifyValueBounds(String fieldName, int value, int lowerBound, int upperBound)",
    "methodName" : "verifyValueBounds",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    FieldUtils.verifyValueBounds(\"Multiplication overflows an int: \", 3349, 3349, 3912);\n}",
    "testName" : "test033"
  },
  "test077" : {
    "methodSignature" : "public static long safeMultiply(long val1, long val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    FieldUtils.safeMultiply(1605L, 10000000000000000L);\n}",
    "testName" : "test077"
  },
  "test1616" : {
    "methodSignature" : "public static long safeSubtract(long val1, long val2)",
    "methodName" : "safeSubtract",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    long long0 = FieldUtils.safeSubtract(0L, 0L);\n}",
    "testName" : "test1616"
  },
  "test3838" : {
    "methodSignature" : "public static boolean equals(Object object1, Object object2)",
    "methodName" : "equals",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3838() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfWeek();\n    DateTimeField dateTimeField0 = dateTimeFieldType0.getField((Chronology) null);\n    Object object0 = new Object();\n    boolean boolean0 = FieldUtils.equals((Object) dateTimeField0, object0);\n}",
    "testName" : "test3838"
  },
  "test2828" : {
    "methodSignature" : "public static int getWrappedValue(int value, int minValue, int maxValue)",
    "methodName" : "getWrappedValue",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    int int0 = FieldUtils.getWrappedValue(Integer.MIN_VALUE, Integer.MIN_VALUE, (-1));\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public static int safeToInt(long value)",
    "methodName" : "safeToInt",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    int int0 = FieldUtils.safeToInt(0L);\n}",
    "testName" : "test1414"
  },
  "test4848" : {
    "methodSignature" : "public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound)",
    "methodName" : "verifyValueBounds",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4848() throws Throwable {\n    FieldUtils.verifyValueBounds((DateTimeField) null, 841, (-251526), (-3169));\n}",
    "testName" : "test4848"
  },
  "test3636" : {
    "methodSignature" : "public static long safeMultiply(long val1, int val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3636() throws Throwable {\n    long long0 = FieldUtils.safeMultiply((-2359L), (-1));\n}",
    "testName" : "test3636"
  },
  "test5858" : {
    "methodSignature" : "public static int safeMultiplyToInt(long val1, long val2)",
    "methodName" : "safeMultiplyToInt",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5858() throws Throwable {\n    int int0 = FieldUtils.safeMultiplyToInt(10L, 10L);\n}",
    "testName" : "test5858"
  },
  "test2626" : {
    "methodSignature" : "public static int getWrappedValue(int currentValue, int wrapValue, int minValue, int maxValue)",
    "methodName" : "getWrappedValue",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    int int0 = FieldUtils.getWrappedValue(0, 0, 0, 412);\n}",
    "testName" : "test2626"
  },
  "test6060" : {
    "methodSignature" : "public static long safeMultiply(long val1, int val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6060() throws Throwable {\n    FieldUtils.safeMultiply(9223372036854775805L, 1017);\n}",
    "testName" : "test6060"
  },
  "test7070" : {
    "methodSignature" : "public static long safeAdd(long val1, long val2)",
    "methodName" : "safeAdd",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7070() throws Throwable {\n    long long0 = FieldUtils.safeAdd(10L, (-1958L));\n}",
    "testName" : "test7070"
  },
  "test4242" : {
    "methodSignature" : "public static void verifyValueBounds(String fieldName, int value, int lowerBound, int upperBound)",
    "methodName" : "verifyValueBounds",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4242() throws Throwable {\n    FieldUtils.verifyValueBounds(\"U:b\", 0, 0, (-97));\n}",
    "testName" : "test4242"
  },
  "test3030" : {
    "methodSignature" : "public static int getWrappedValue(int value, int minValue, int maxValue)",
    "methodName" : "getWrappedValue",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    int int0 = FieldUtils.getWrappedValue(1430, (-1), 17971875);\n}",
    "testName" : "test3030"
  },
  "test6464" : {
    "methodSignature" : "public static int safeMultiply(int val1, int val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6464() throws Throwable {\n    FieldUtils.safeMultiply(Integer.MIN_VALUE, Integer.MIN_VALUE);\n}",
    "testName" : "test6464"
  },
  "test5252" : {
    "methodSignature" : "public static int safeToInt(long value)",
    "methodName" : "safeToInt",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5252() throws Throwable {\n    FieldUtils.safeToInt((-9223372036854775808L));\n}",
    "testName" : "test5252"
  },
  "test2020" : {
    "methodSignature" : "public static int safeMultiplyToInt(long val1, long val2)",
    "methodName" : "safeMultiplyToInt",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    int int0 = FieldUtils.safeMultiplyToInt((-1440L), 2856L);\n}",
    "testName" : "test2020"
  },
  "test7474" : {
    "methodSignature" : "public static int safeAdd(int val1, int val2)",
    "methodName" : "safeAdd",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7474() throws Throwable {\n    int int0 = FieldUtils.safeAdd(0, 0);\n}",
    "testName" : "test7474"
  },
  "test4040" : {
    "methodSignature" : "public static boolean equals(Object object1, Object object2)",
    "methodName" : "equals",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4040() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfWeek();\n    DurationFieldType durationFieldType0 = dateTimeFieldType0.getRangeDurationType();\n    boolean boolean0 = FieldUtils.equals((Object) null, (Object) durationFieldType0);\n}",
    "testName" : "test4040"
  },
  "test6262" : {
    "methodSignature" : "public static long safeMultiply(long val1, int val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6262() throws Throwable {\n    long long0 = FieldUtils.safeMultiply((long) 0, 0);\n}",
    "testName" : "test6262"
  },
  "test5050" : {
    "methodSignature" : "public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound)",
    "methodName" : "verifyValueBounds",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5050() throws Throwable {\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();\n    DateTimeField dateTimeField0 = buddhistChronology0.millisOfSecond();\n    FieldUtils.verifyValueBounds(dateTimeField0, 1, 1776, (-1207));\n}",
    "testName" : "test5050"
  },
  "test7272" : {
    "methodSignature" : "public static int safeAdd(int val1, int val2)",
    "methodName" : "safeAdd",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7272() throws Throwable {\n    FieldUtils.safeAdd(2147483639, 2147483639);\n}",
    "testName" : "test7272"
  },
  "test022" : {
    "methodSignature" : "public static int getWrappedValue(int currentValue, int wrapValue, int minValue, int maxValue)",
    "methodName" : "getWrappedValue",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    FieldUtils.getWrappedValue(3912, 3349, 3912, 3349);\n}",
    "testName" : "test022"
  },
  "test066" : {
    "methodSignature" : "public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound)",
    "methodName" : "verifyValueBounds",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    FieldUtils.verifyValueBounds((DateTimeField) null, Integer.MIN_VALUE, Integer.MIN_VALUE, (-1));\n}",
    "testName" : "test066"
  },
  "test1818" : {
    "methodSignature" : "public static int safeNegate(int value)",
    "methodName" : "safeNegate",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    int int0 = FieldUtils.safeNegate(231);\n}",
    "testName" : "test1818"
  },
  "test5757" : {
    "methodSignature" : "public static long safeMultiply(long val1, long val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5757() throws Throwable {\n    long long0 = FieldUtils.safeMultiply((long) 0, (long) 0);\n}",
    "testName" : "test5757"
  },
  "test2323" : {
    "methodSignature" : "public static int safeMultiply(int val1, int val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    int int0 = FieldUtils.safeMultiply(0, 0);\n}",
    "testName" : "test2323"
  },
  "test1313" : {
    "methodSignature" : "public static int safeAdd(int val1, int val2)",
    "methodName" : "safeAdd",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    FieldUtils.safeAdd((-200), Integer.MIN_VALUE);\n}",
    "testName" : "test1313"
  },
  "test4545" : {
    "methodSignature" : "public static void verifyValueBounds(DateTimeFieldType fieldType, int value, int lowerBound, int upperBound)",
    "methodName" : "verifyValueBounds",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4545() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfMonth();\n    FieldUtils.verifyValueBounds(dateTimeFieldType0, (-1), (-1570), (-1570));\n}",
    "testName" : "test4545"
  },
  "test3535" : {
    "methodSignature" : "public static long safeMultiply(long val1, long val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    long long0 = FieldUtils.safeMultiply(1L, 1L);\n}",
    "testName" : "test3535"
  },
  "test6767" : {
    "methodSignature" : "public static long safeSubtract(long val1, long val2)",
    "methodName" : "safeSubtract",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6767() throws Throwable {\n    long long0 = FieldUtils.safeSubtract(0L, 10L);\n}",
    "testName" : "test6767"
  },
  "test5555" : {
    "methodSignature" : "public static long safeMultiply(long val1, long val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5555() throws Throwable {\n    FieldUtils.safeMultiply((-3520L), 1000000000000000000L);\n}",
    "testName" : "test5555"
  },
  "test2121" : {
    "methodSignature" : "public static long safeMultiply(long val1, long val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    long long0 = FieldUtils.safeMultiply(63L, (long) (-2206));\n}",
    "testName" : "test2121"
  },
  "test7777" : {
    "methodSignature" : "public static int safeMultiplyToInt(long val1, long val2)",
    "methodName" : "safeMultiplyToInt",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7777() throws Throwable {\n    int int0 = FieldUtils.safeMultiplyToInt(170L, 1L);\n}",
    "testName" : "test7777"
  },
  "test1111" : {
    "methodSignature" : "public static long safeSubtract(long val1, long val2)",
    "methodName" : "safeSubtract",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    long long0 = FieldUtils.safeSubtract((-861L), (-861L));\n}",
    "testName" : "test1111"
  },
  "test4343" : {
    "methodSignature" : "public static void verifyValueBounds(String fieldName, int value, int lowerBound, int upperBound)",
    "methodName" : "verifyValueBounds",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4343() throws Throwable {\n    FieldUtils.verifyValueBounds(\"YearMonthDay\", Integer.MIN_VALUE, Integer.MIN_VALUE, Integer.MIN_VALUE);\n}",
    "testName" : "test4343"
  },
  "test3333" : {
    "methodSignature" : "public static int safeToInt(long value)",
    "methodName" : "safeToInt",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    int int0 = FieldUtils.safeToInt(2147483647L);\n}",
    "testName" : "test3333"
  },
  "test6565" : {
    "methodSignature" : "public static int safeMultiply(int val1, int val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6565() throws Throwable {\n    FieldUtils.safeMultiply(25, (-2145181949));\n}",
    "testName" : "test6565"
  },
  "test011" : {
    "methodSignature" : "public static int getWrappedValue(int currentValue, int wrapValue, int minValue, int maxValue)",
    "methodName" : "getWrappedValue",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    int int0 = FieldUtils.getWrappedValue(0, 0, Integer.MIN_VALUE, 0);\n}",
    "testName" : "test011"
  },
  "test055" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.hourOfHalfday();\n    FieldUtils.verifyValueBounds(dateTimeFieldType0, 0, 0, 2022);\n    dateTimeFieldType0.toString();\n}",
    "testName" : "test055"
  },
  "test099" : {
    "methodSignature" : "public static int safeMultiply(int val1, int val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    int int0 = FieldUtils.safeMultiply((-1), (-2147483647));\n}",
    "testName" : "test099"
  },
  "test2727" : {
    "methodSignature" : "public static int getWrappedValue(int currentValue, int wrapValue, int minValue, int maxValue)",
    "methodName" : "getWrappedValue",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    int int0 = FieldUtils.getWrappedValue((-2283), Integer.MIN_VALUE, Integer.MIN_VALUE, 2);\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "public static int safeNegate(int value)",
    "methodName" : "safeNegate",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    int int0 = FieldUtils.safeNegate((-1126));\n}",
    "testName" : "test1717"
  },
  "test4949" : {
    "methodSignature" : "public static void verifyValueBounds(DateTimeField field, int value, int lowerBound, int upperBound)",
    "methodName" : "verifyValueBounds",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4949() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfWeek();\n    DateTimeField dateTimeField0 = dateTimeFieldType0.getField((Chronology) null);\n    FieldUtils.verifyValueBounds(dateTimeField0, 0, 0, 0);\n}",
    "testName" : "test4949"
  },
  "test3939" : {
    "methodSignature" : "public static boolean equals(Object object1, Object object2)",
    "methodName" : "equals",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3939() throws Throwable {\n    Object object0 = new Object();\n    boolean boolean0 = FieldUtils.equals(object0, object0);\n}",
    "testName" : "test3939"
  },
  "test5959" : {
    "methodSignature" : "public static long safeMultiply(long val1, long val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5959() throws Throwable {\n    long long0 = FieldUtils.safeMultiply(1L, 170L);\n}",
    "testName" : "test5959"
  },
  "test2525" : {
    "methodSignature" : "public static int safeAdd(int val1, int val2)",
    "methodName" : "safeAdd",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    int int0 = FieldUtils.safeAdd(365, 365);\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public static int safeToInt(long value)",
    "methodName" : "safeToInt",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    int int0 = FieldUtils.safeToInt((-2147483648L));\n}",
    "testName" : "test1515"
  },
  "test4747" : {
    "methodSignature" : "public static void verifyValueBounds(DateTimeFieldType fieldType, int value, int lowerBound, int upperBound)",
    "methodName" : "verifyValueBounds",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4747() throws Throwable {\n    FieldUtils.verifyValueBounds((DateTimeFieldType) null, (-1958), 100, (-1958));\n}",
    "testName" : "test4747"
  },
  "test3737" : {
    "methodSignature" : "public static boolean equals(Object object1, Object object2)",
    "methodName" : "equals",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3737() throws Throwable {\n    Integer integer0 = new Integer(271);\n    boolean boolean0 = FieldUtils.equals((Object) integer0, (Object) null);\n}",
    "testName" : "test3737"
  },
  "test6969" : {
    "methodSignature" : "public static long safeAdd(long val1, long val2)",
    "methodName" : "safeAdd",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6969() throws Throwable {\n    FieldUtils.safeAdd((-1504L), (-9223372036854775808L));\n}",
    "testName" : "test6969"
  },
  "test7171" : {
    "methodSignature" : "public static long safeAdd(long val1, long val2)",
    "methodName" : "safeAdd",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7171() throws Throwable {\n    long long0 = FieldUtils.safeAdd((long) 170, 1L);\n}",
    "testName" : "test7171"
  },
  "test5353" : {
    "methodSignature" : "public static long safeMultiply(long val1, long val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5353() throws Throwable {\n    FieldUtils.safeMultiply((-1L), (-9223372036854775800L));\n}",
    "testName" : "test5353"
  },
  "test7575" : {
    "methodSignature" : "public static int safeNegate(int value)",
    "methodName" : "safeNegate",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7575() throws Throwable {\n    FieldUtils.safeNegate(Integer.MIN_VALUE);\n}",
    "testName" : "test7575"
  },
  "test4141" : {
    "methodSignature" : "public static int getWrappedValue(int value, int minValue, int maxValue)",
    "methodName" : "getWrappedValue",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4141() throws Throwable {\n    int int0 = FieldUtils.getWrappedValue((-2146907296), 0, 31);\n}",
    "testName" : "test4141"
  },
  "test6363" : {
    "methodSignature" : "public long add(long instant, long duration, int scalar)",
    "methodName" : "add",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6363() throws Throwable {\n    EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstance((DateTimeZone) null);\n    long long0 = ethiopicChronology0.add((-313L), (-1556L), (-1));\n}",
    "testName" : "test6363"
  },
  "test3131" : {
    "methodSignature" : "public static int getWrappedValue(int value, int minValue, int maxValue)",
    "methodName" : "getWrappedValue",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    FieldUtils.getWrappedValue(16, 16, 16);\n}",
    "testName" : "test3131"
  },
  "test5151" : {
    "methodSignature" : "public static int safeMultiplyToInt(long val1, long val2)",
    "methodName" : "safeMultiplyToInt",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5151() throws Throwable {\n    FieldUtils.safeMultiplyToInt((-761L), (-2147483648L));\n}",
    "testName" : "test5151"
  },
  "test7373" : {
    "methodSignature" : "public static int safeAdd(int val1, int val2)",
    "methodName" : "safeAdd",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7373() throws Throwable {\n    int int0 = FieldUtils.safeAdd(0, (-2456));\n}",
    "testName" : "test7373"
  },
  "test6161" : {
    "methodSignature" : "public static long safeMultiply(long val1, int val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6161() throws Throwable {\n    Integer integer0 = new Integer(25);\n    long long0 = FieldUtils.safeMultiply((long) integer0, 1);\n}",
    "testName" : "test6161"
  },
  "test000" : {
    "methodSignature" : "public static int getWrappedValue(int value, int minValue, int maxValue)",
    "methodName" : "getWrappedValue",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    int int0 = FieldUtils.getWrappedValue((-2206), (-1), 1);\n}",
    "testName" : "test000"
  },
  "test044" : {
    "methodSignature" : "public static void verifyValueBounds(String fieldName, int value, int lowerBound, int upperBound)",
    "methodName" : "verifyValueBounds",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    FieldUtils.verifyValueBounds(\"*<\", 3566, (-495), (-495));\n}",
    "testName" : "test044"
  },
  "test088" : {
    "methodSignature" : "public static long safeMultiply(long val1, int val2)",
    "methodName" : "safeMultiply",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    FieldUtils.safeMultiply((-9223372036854775808L), (-851));\n}",
    "testName" : "test088"
  },
  "test2929" : {
    "methodSignature" : "public static int getWrappedValue(int value, int minValue, int maxValue)",
    "methodName" : "getWrappedValue",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    int int0 = FieldUtils.getWrappedValue((-417), 231, 898);\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public static int safeMultiplyToInt(long val1, long val2)",
    "methodName" : "safeMultiplyToInt",
    "className" : "org.joda.time.field.FieldUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    int int0 = FieldUtils.safeMultiplyToInt(0L, 0L);\n}",
    "testName" : "test1919"
  }
}