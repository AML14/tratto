[ {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static GregorianChronology getInstance(DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(gregorianChronology0)",
  "exception" : "",
  "testName" : "test00011"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00131"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendFractionOfSecond(int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00132"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendTimeZoneOffset(String zeroOffsetText, boolean showSeparators, int minFields, int maxFields)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(dateTimeFormatterBuilder1, dateTimeFormatterBuilder2)",
  "exception" : "",
  "testName" : "test00135"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean canBuildPrinter()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00140"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendClockhourOfHalfday(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(dateTimeFormatterBuilder0, dateTimeFormatterBuilder1)",
  "exception" : "",
  "testName" : "test00246"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimePrinter toPrinter()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFormatterBuilder_UnpaddedNumber0)",
  "exception" : "",
  "testName" : "test00249"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType millisOfSecond()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test00254"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test00255"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test00256"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test00258"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test00259"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatter(DateTimePrinter printer, DateTimeParser parser)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00262"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test00266"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean isParser()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isParser())",
  "exception" : "",
  "testName" : "test00267"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean isPrinter()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isPrinter())",
  "exception" : "",
  "testName" : "test00268"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00269"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFormatter0.getPivotYear())",
  "exception" : "",
  "testName" : "test00270"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static Instant parse(String str, DateTimeFormatter formatter)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00271"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static GJChronology getInstance()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00372"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType weekOfWeekyear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00380"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test00381"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test00382"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeParserBucket(long instantLocal, Chronology chrono, Locale locale, Integer pivotYear, int defaultYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0)",
  "exception" : "",
  "testName" : "test00385"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00392"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00393"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00394"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test00396"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test00397"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test003107"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test003108"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test003109"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test003110"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test003111"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeZone getDefault()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test004117"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test004118"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test004119"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType hourOfHalfday()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test004127"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test004128"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test004129"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test004131"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test004132"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static BuddhistChronology getInstanceUTC()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(buddhistChronology0)",
  "exception" : "",
  "testName" : "test004135"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test004140"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test004141"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test004148"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test004149"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Instant(Object instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test005152"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Instant(Object instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test006153"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType yearOfCentury()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test008158"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test008159"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test008160"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendFixedSignedDecimal(DateTimeFieldType fieldType, int numDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test008161"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType halfdayOfDay()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test009163"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test009164"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test009165"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendFixedDecimal(DateTimeFieldType fieldType, int numDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test009166"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType yearOfCentury()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test010167"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test010168"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test010169"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test010171"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test010172"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test010176"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test010177"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType hourOfHalfday()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test011180"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test011181"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test011182"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test011184"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test011185"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test011189"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test011190"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType centuryOfEra()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test014205"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test014206"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test014207"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test014209"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test014210"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test014214"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test014215"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static GJChronology getInstance()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test015221"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static LenientChronology getInstance(Chronology base)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test015222"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeParserBucket(long instantLocal, Chronology chrono, Locale locale, Integer pivotYear, int defaultYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test015232"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test015239"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test015240"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test015241"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test015251"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test015252"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test015253"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType hourOfDay()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test018266"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test018267"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test018268"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test018270"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test018271"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test018275"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test018276"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType minuteOfHour()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test019279"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test019280"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test019281"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test019283"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test019284"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test019288"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test019289"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static synchronized BuddhistChronology getInstance(DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(buddhistChronology0)",
  "exception" : "",
  "testName" : "test020302"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static LenientChronology getInstance(Chronology base)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test020304"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeParserBucket(long instantLocal, Chronology chrono, Locale locale, Integer pivotYear, int defaultYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test020306"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test020314"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test020315"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test020316"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test020327"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test020328"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test020329"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test021334"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test021335"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test021339"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test021340"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType halfdayOfDay()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test027385"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test027386"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test027387"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test027389"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test027390"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public LocalTime(long instant, DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(localTime0)",
  "exception" : "",
  "testName" : "test027396"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, localTime0.size())",
  "exception" : "",
  "testName" : "test027397"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test027405"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test027406"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, localTime0.size())",
  "exception" : "",
  "testName" : "test027411"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static GregorianChronology getInstance()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test028454"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeParserBucket(long instantLocal, Chronology chrono, Locale locale, Integer pivotYear, int defaultYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test028464"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test028471"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test028472"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test028473"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeZone getZone()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test028474"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(integer0, dateTimeParserBucket0.getOffsetInteger())",
  "exception" : "",
  "testName" : "test028481"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test028482"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test028483"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test028484"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test028485"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(integer0, dateTimeParserBucket0.getOffsetInteger())",
  "exception" : "",
  "testName" : "test028503"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test028504"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test028505"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test028506"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.getID())",
  "exception" : "",
  "testName" : "test028507"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType weekyearOfCentury()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test029508"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test029509"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test029510"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static EthiopicChronology getInstanceUTC()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(ethiopicChronology0)",
  "exception" : "",
  "testName" : "test029514"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeZone forOffsetMillis(int millisOffset)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0)",
  "exception" : "",
  "testName" : "test029516"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test029517"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test029518"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test029519"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test029528"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test029529"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test029533"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test029534"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test029537"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test029538"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test029539"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static EthiopicChronology getInstance()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(ethiopicChronology0)",
  "exception" : "",
  "testName" : "test030556"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeParserBucket(long instantLocal, Chronology chrono, Locale locale, Integer pivotYear, int defaultYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0)",
  "exception" : "",
  "testName" : "test030565"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test030573"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0.getPivotYear())",
  "exception" : "",
  "testName" : "test030574"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0.getOffsetInteger())",
  "exception" : "",
  "testName" : "test030575"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test031581"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test031582"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeZone forOffsetHours(int hoursOffset) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0)",
  "exception" : "",
  "testName" : "test031588"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test031589"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test031590"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.getID())",
  "exception" : "",
  "testName" : "test031591"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public YearMonth(DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(yearMonth0)",
  "exception" : "",
  "testName" : "test031592"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test031595"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test031596"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.getID())",
  "exception" : "",
  "testName" : "test031597"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, yearMonth0.getYear())",
  "exception" : "",
  "testName" : "test031598"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, yearMonth0.size())",
  "exception" : "",
  "testName" : "test031599"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getMonthOfYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, yearMonth0.getMonthOfYear())",
  "exception" : "",
  "testName" : "test031600"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test031610"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test031611"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test031616"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test031617"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.getID())",
  "exception" : "",
  "testName" : "test031618"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, yearMonth0.getYear())",
  "exception" : "",
  "testName" : "test031619"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, yearMonth0.size())",
  "exception" : "",
  "testName" : "test031620"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getMonthOfYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, yearMonth0.getMonthOfYear())",
  "exception" : "",
  "testName" : "test031621"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test032632"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test032633"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static BuddhistChronology getInstanceUTC()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(buddhistChronology0)",
  "exception" : "",
  "testName" : "test032666"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeZone forOffsetHours(int hoursOffset) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0)",
  "exception" : "",
  "testName" : "test032668"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test032669"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.getID())",
  "exception" : "",
  "testName" : "test032670"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test032671"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test032682"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test032683"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test032699"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.getID())",
  "exception" : "",
  "testName" : "test032700"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test032701"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test033712"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test033713"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static EthiopicChronology getInstanceUTC()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(ethiopicChronology0)",
  "exception" : "",
  "testName" : "test033719"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeZone forOffsetMillis(int millisOffset)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0)",
  "exception" : "",
  "testName" : "test033721"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test033722"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.getID())",
  "exception" : "",
  "testName" : "test033723"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test033724"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test033733"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test033734"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test033739"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.getID())",
  "exception" : "",
  "testName" : "test033740"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test033741"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendSecondOfMinute(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(dateTimeFormatterBuilder0, dateTimeFormatterBuilder1)",
  "exception" : "",
  "testName" : "test034749"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendSecondOfDay(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test035753"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendPattern(String pattern)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test036757"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendMillisOfDay(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(dateTimeFormatterBuilder0, dateTimeFormatterBuilder1)",
  "exception" : "",
  "testName" : "test037761"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendFractionOfMinute(int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(dateTimeFormatterBuilder0, dateTimeFormatterBuilder1)",
  "exception" : "",
  "testName" : "test038765"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendFractionOfHour(int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test039769"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendFractionOfDay(int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(dateTimeFormatterBuilder0, dateTimeFormatterBuilder1)",
  "exception" : "",
  "testName" : "test040773"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendDayOfYear(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(dateTimeFormatterBuilder0, dateTimeFormatterBuilder1)",
  "exception" : "",
  "testName" : "test041777"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendDayOfWeek(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(dateTimeFormatterBuilder0, dateTimeFormatterBuilder1)",
  "exception" : "",
  "testName" : "test042781"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendClockhourOfDay(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test043785"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendCenturyOfEra(int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test044789"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendYearOfCentury(int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test045793"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendYear(int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test046795"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendWeekyear(int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test047797"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendWeekOfWeekyear(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test048799"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendTimeZoneOffset(String zeroOffsetText, boolean showSeparators, int minFields, int maxFields)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test049801"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendPattern(String pattern)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test050803"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendOptional(DateTimeParser parser)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test051805"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendMonthOfYear(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test052807"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendMinuteOfHour(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test053809"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendMinuteOfDay(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test054811"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendMillisOfSecond(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test055813"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendHourOfHalfday(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test056815"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendHourOfDay(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test057817"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendFractionOfSecond(int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test058819"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendDayOfMonth(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test059821"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendClockhourOfHalfday(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test060823"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test061832"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder append(DateTimePrinter printer, DateTimeParser[] parsers)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test061833"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder append(DateTimePrinter printer)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test062835"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType dayOfMonth()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test063837"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test063838"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test063839"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendFraction(DateTimeFieldType fieldType, int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test063840"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType minuteOfHour()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test064842"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test064843"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test064844"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendFraction(DateTimeFieldType fieldType, int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test064845"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType secondOfMinute()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test065847"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test065848"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test065849"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendFraction(DateTimeFieldType fieldType, int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test065850"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test065853"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test065854"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType minuteOfDay()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test066856"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test066857"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test066858"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendShortText(DateTimeFieldType fieldType)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test066859"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test066862"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test066863"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test067867"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendText(DateTimeFieldType fieldType)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test067868"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test067871"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test067872"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendSignedDecimal(DateTimeFieldType fieldType, int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test068877"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType clockhourOfHalfday()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test069879"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test069880"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test069881"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendSignedDecimal(DateTimeFieldType fieldType, int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test069882"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test069885"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test069886"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType hourOfDay()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test070888"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test070889"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test070890"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendDecimal(DateTimeFieldType fieldType, int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test070891"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test070894"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test070895"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendDecimal(DateTimeFieldType fieldType, int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test071900"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendDecimal(DateTimeFieldType fieldType, int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test072905"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test072908"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test072909"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType monthOfYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test073911"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test073912"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test073913"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendDecimal(DateTimeFieldType fieldType, int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test073914"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendLiteral(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(dateTimeFormatterBuilder0, dateTimeFormatterBuilder1)",
  "exception" : "",
  "testName" : "test074916"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder append(DateTimePrinter printer, DateTimeParser[] parsers)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test075920"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static LocalDateTime fromCalendarFields(Calendar calendar)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test076927"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, localDateTime0.size())",
  "exception" : "",
  "testName" : "test076932"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Partial(ReadablePartial partial)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test076933"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, localDateTime0.size())",
  "exception" : "",
  "testName" : "test076938"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, partial0.size())",
  "exception" : "",
  "testName" : "test076939"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatter getFormatter()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test076940"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, localDateTime0.size())",
  "exception" : "",
  "testName" : "test076945"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, partial0.size())",
  "exception" : "",
  "testName" : "test076946"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test076947"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean isPrinter()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isPrinter())",
  "exception" : "",
  "testName" : "test076948"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test076949"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean isParser()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isParser())",
  "exception" : "",
  "testName" : "test076950"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFormatter0.getPivotYear())",
  "exception" : "",
  "testName" : "test076951"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder append(DateTimeFormatter formatter)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test076952"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, localDateTime0.size())",
  "exception" : "",
  "testName" : "test076959"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, partial0.size())",
  "exception" : "",
  "testName" : "test076960"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test076961"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean isPrinter()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isPrinter())",
  "exception" : "",
  "testName" : "test076962"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test076963"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean isParser()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isParser())",
  "exception" : "",
  "testName" : "test076964"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFormatter0.getPivotYear())",
  "exception" : "",
  "testName" : "test076965"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder append(DateTimeParser parser)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test077970"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatter toFormatter()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test077975"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean isPrinter()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isPrinter())",
  "exception" : "",
  "testName" : "test077977"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test077978"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFormatter0.getPivotYear())",
  "exception" : "",
  "testName" : "test077979"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test077980"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean isParser()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isParser())",
  "exception" : "",
  "testName" : "test077981"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendWeekOfWeekyear(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test078983"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendHourOfDay(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(dateTimeFormatterBuilder0, dateTimeFormatterBuilder1)",
  "exception" : "",
  "testName" : "test079987"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendSecondOfMinute(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test080991"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendDayOfMonth(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test081993"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendMonthOfYear(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(dateTimeFormatterBuilder0, dateTimeFormatterBuilder1)",
  "exception" : "",
  "testName" : "test082997"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendDayOfWeekShortText()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(dateTimeFormatterBuilder0, dateTimeFormatterBuilder1)",
  "exception" : "",
  "testName" : "test0831001"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendDayOfWeek(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0841005"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendTwoDigitWeekyear(int pivot, boolean lenientParse)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0851007"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendFractionOfHour(int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0861011"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendMinuteOfHour(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(dateTimeFormatterBuilder0, dateTimeFormatterBuilder1)",
  "exception" : "",
  "testName" : "test0871013"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendDayOfYear(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0881017"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendLiteral(char c)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0891019"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendDayOfWeekText()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(dateTimeFormatterBuilder0, dateTimeFormatterBuilder1)",
  "exception" : "",
  "testName" : "test0901023"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder append(DateTimePrinter printer)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0901032"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean canBuildParser()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0901042"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendFractionOfSecond(int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0911048"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendTimeZoneShortName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(dateTimeFormatterBuilder0, dateTimeFormatterBuilder2)",
  "exception" : "",
  "testName" : "test0911051"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean canBuildFormatter()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0911058"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static CopticChronology getInstance()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(copticChronology0)",
  "exception" : "",
  "testName" : "test0921069"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeParserBucket(long instantLocal, Chronology chrono, Locale locale, Integer pivotYear, int defaultYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0)",
  "exception" : "",
  "testName" : "test0921078"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0921086"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0.getOffsetInteger())",
  "exception" : "",
  "testName" : "test0921087"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0921088"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, localDate0.size())",
  "exception" : "",
  "testName" : "test0931100"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeZone forOffsetMillis(int millisOffset)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0)",
  "exception" : "",
  "testName" : "test0951123"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.getID())",
  "exception" : "",
  "testName" : "test0951124"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test0951125"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test0951126"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static CopticChronology getInstance()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0961135"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static GJChronology getInstanceUTC()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0961146"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeZone getZone()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0961147"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0961148"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test0961149"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test0961150"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static ISOChronology getInstanceUTC()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(iSOChronology0)",
  "exception" : "",
  "testName" : "test0971159"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeParserBucket(long instantLocal, Chronology chrono, Locale locale, Integer pivotYear, int defaultYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0)",
  "exception" : "",
  "testName" : "test0971164"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0971171"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0971172"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeParserBucket0.getOffset())",
  "exception" : "",
  "testName" : "test0971173"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0971183"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0971184"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeParserBucket0.getOffset())",
  "exception" : "",
  "testName" : "test0971185"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static ISOChronology getInstanceUTC()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(iSOChronology0)",
  "exception" : "",
  "testName" : "test0981194"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeZone getDefault()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0981195"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test0981196"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0981197"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test0981210"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0981211"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendTimeZoneShortName(Map<String, DateTimeZone> parseLookup)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1001233"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendTimeZoneName(Map<String, DateTimeZone> parseLookup)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(dateTimeFormatterBuilder0, dateTimeFormatterBuilder2)",
  "exception" : "",
  "testName" : "test1001236"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeParser toParser()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFormatterBuilder_Composite0)",
  "exception" : "",
  "testName" : "test1001243"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static JulianChronology getInstanceUTC()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(julianChronology0)",
  "exception" : "",
  "testName" : "test1021268"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeParserBucket(long instantLocal, Chronology chrono, Locale locale, Integer pivotYear, int defaultYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1021278"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1021285"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1021286"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1021287"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1021297"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1021298"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1021299"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeZone forOffsetMillis(int millisOffset)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0)",
  "exception" : "",
  "testName" : "test1031306"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1031307"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test1031308"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test1031309"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static GJChronology getInstance(DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1031310"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1031311"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test1031312"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test1031313"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1031318"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test1031319"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test1031320"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeZone forOffsetMillis(int millisOffset)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1041327"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test1041328"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.getID())",
  "exception" : "",
  "testName" : "test1041329"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test1041330"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static GJChronology getInstance(DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1041331"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test1041332"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1041333"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test1041334"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test1041339"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.getID())",
  "exception" : "",
  "testName" : "test1041340"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test1041341"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static GJChronology getInstance(DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1051348"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1061371"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test1061372"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test1061373"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static ISOChronology getInstanceUTC()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(iSOChronology0)",
  "exception" : "",
  "testName" : "test1071384"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeZone forOffsetMillis(int millisOffset)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0)",
  "exception" : "",
  "testName" : "test1081404"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test1081405"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1081406"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test1081407"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static GJChronology getInstance(DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1081408"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test1081409"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1081410"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test1081411"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test1081423"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1081424"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test1081425"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType dayOfWeek()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1101433"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1101434"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1101435"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1101437"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1101438"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeZone forOffsetHours(int hoursOffset) throws IllegalArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0)",
  "exception" : "",
  "testName" : "test1101441"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.getID())",
  "exception" : "",
  "testName" : "test1101442"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test1101443"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test1101444"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static synchronized BuddhistChronology getInstance(DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(buddhistChronology0)",
  "exception" : "",
  "testName" : "test1101445"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.getID())",
  "exception" : "",
  "testName" : "test1101447"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test1101448"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test1101449"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeParserBucket(long instantLocal, Chronology chrono, Locale locale, Integer pivotYear, int defaultYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0)",
  "exception" : "",
  "testName" : "test1101450"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.getID())",
  "exception" : "",
  "testName" : "test1101452"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test1101453"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test1101454"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1101455"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1101456"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0.getOffsetInteger())",
  "exception" : "",
  "testName" : "test1101457"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static CopticChronology getInstanceUTC()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1111467"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeParserBucket(long instantLocal, Chronology chrono, Locale locale, Integer pivotYear, int defaultYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0)",
  "exception" : "",
  "testName" : "test1111476"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0.getOffsetInteger())",
  "exception" : "",
  "testName" : "test1111484"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1111485"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1111486"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1111489"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1111490"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0.getOffsetInteger())",
  "exception" : "",
  "testName" : "test1111499"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1111500"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1111501"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType weekyear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test1121502"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1121503"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1121504"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1121506"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1121507"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeZone getDefault()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1121514"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test1121515"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.getID())",
  "exception" : "",
  "testName" : "test1121516"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static synchronized BuddhistChronology getInstance(DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(buddhistChronology0)",
  "exception" : "",
  "testName" : "test1121517"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test1121519"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.getID())",
  "exception" : "",
  "testName" : "test1121520"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1121522"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1121523"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test1121528"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.getID())",
  "exception" : "",
  "testName" : "test1121529"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1131534"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1131535"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatter(DateTimePrinter printer, DateTimeParser parser)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1131538"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1131539"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1131540"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getDefaultYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeFormatter0.getDefaultYear())",
  "exception" : "",
  "testName" : "test1131543"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean isParser()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isParser())",
  "exception" : "",
  "testName" : "test1131544"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean isOffsetParsed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isOffsetParsed())",
  "exception" : "",
  "testName" : "test1131545"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFormatter0.getPivotYear())",
  "exception" : "",
  "testName" : "test1131546"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean isPrinter()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(dateTimeFormatter0.isPrinter())",
  "exception" : "",
  "testName" : "test1131547"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static LocalDate parse(String str, DateTimeFormatter formatter)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1131548"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType weekOfWeekyear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test1141550"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1141551"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1141552"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1141554"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1141555"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendOptional(DateTimeParser parser)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1141558"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1141561"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1141562"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public LocalDateTime(Object instant, Chronology chronology)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(localDateTime0)",
  "exception" : "",
  "testName" : "test1151566"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, localDateTime0.size())",
  "exception" : "",
  "testName" : "test1151567"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType secondOfMinute()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1151575"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1151576"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1151577"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1151579"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1151580"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, localDateTime0.size())",
  "exception" : "",
  "testName" : "test1151584"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1151591"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1151592"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType secondOfDay()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test1161595"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1161596"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1161597"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1161599"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1161600"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static IslamicChronology getInstance()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(islamicChronology0)",
  "exception" : "",
  "testName" : "test1161606"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Partial(DateTimeFieldType type, int value, Chronology chronology)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(partial0)",
  "exception" : "",
  "testName" : "test1161608"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1161610"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1161611"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, partial0.size())",
  "exception" : "",
  "testName" : "test1161612"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1161621"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1161622"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, partial0.size())",
  "exception" : "",
  "testName" : "test1161627"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType minuteOfDay()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test1171634"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1171635"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1171636"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static EthiopicChronology getInstanceUTC()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1171637"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1171647"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1171648"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeParserBucket(long instantLocal, Chronology chrono, Locale locale, Integer pivotYear, int defaultYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0)",
  "exception" : "",
  "testName" : "test1171651"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1171659"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1171660"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0.getOffsetInteger())",
  "exception" : "",
  "testName" : "test1171661"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1171664"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1171665"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1171674"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1171675"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0.getOffsetInteger())",
  "exception" : "",
  "testName" : "test1171676"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType dayOfMonth()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test1181677"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1181678"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1181679"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static ISOChronology getInstanceUTC()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(iSOChronology0)",
  "exception" : "",
  "testName" : "test1181687"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1181689"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1181690"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeParserBucket(long instantLocal, Chronology chrono, Locale locale, Integer pivotYear, int defaultYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0)",
  "exception" : "",
  "testName" : "test1181695"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1181702"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeParserBucket0.getOffset())",
  "exception" : "",
  "testName" : "test1181703"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1181704"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1191719"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1191720"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeParserBucket(long instantLocal, Chronology chrono, Locale locale, Integer pivotYear, int defaultYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0)",
  "exception" : "",
  "testName" : "test1191723"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1191731"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0.getOffsetInteger())",
  "exception" : "",
  "testName" : "test1191732"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1191733"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1191736"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1191737"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1191746"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0.getOffsetInteger())",
  "exception" : "",
  "testName" : "test1191747"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1191748"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1201761"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1201762"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeParserBucket(long instantLocal, Chronology chrono, Locale locale, Integer pivotYear, int defaultYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0)",
  "exception" : "",
  "testName" : "test1201767"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, dateTimeParserBucket0.getOffset())",
  "exception" : "",
  "testName" : "test1201774"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1201775"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1201776"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1211782"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1211783"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static ISOChronology getInstance()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(iSOChronology0)",
  "exception" : "",
  "testName" : "test1211786"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeParserBucket(long instantLocal, Chronology chrono, Locale locale, Integer pivotYear, int defaultYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0)",
  "exception" : "",
  "testName" : "test1211794"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0.getOffsetInteger())",
  "exception" : "",
  "testName" : "test1211801"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1211802"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1211803"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1211805"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1211806"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0.getOffsetInteger())",
  "exception" : "",
  "testName" : "test1211815"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1211816"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1211817"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType yearOfEra()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test1221818"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1221819"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1221820"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1221822"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1221823"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static IslamicChronology getInstance()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(islamicChronology0)",
  "exception" : "",
  "testName" : "test1221828"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static LenientChronology getInstance(Chronology base)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1221830"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public YearMonth(long instant, Chronology chronology)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(yearMonth0)",
  "exception" : "",
  "testName" : "test1221832"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, yearMonth0.getYear())",
  "exception" : "",
  "testName" : "test1221836"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1221837"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getMonthOfYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, yearMonth0.getMonthOfYear())",
  "exception" : "",
  "testName" : "test1221838"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1221849"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1221850"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, yearMonth0.getYear())",
  "exception" : "",
  "testName" : "test1221869"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1221870"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getMonthOfYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, yearMonth0.getMonthOfYear())",
  "exception" : "",
  "testName" : "test1221871"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeZone forTimeZone(TimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1231892"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test1231898"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1231899"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test1231900"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static CopticChronology getInstance(DateTimeZone zone)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(copticChronology0)",
  "exception" : "",
  "testName" : "test1231901"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test1231908"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1231909"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test1231910"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public LocalDate(Chronology chronology)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(localDate0)",
  "exception" : "",
  "testName" : "test1231911"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeZone0.toString())",
  "exception" : "",
  "testName" : "test1231918"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public final String getID()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1231919"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public abstract boolean isFixed()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(dateTimeZone0.isFixed())",
  "exception" : "",
  "testName" : "test1231920"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, localDate0.size())",
  "exception" : "",
  "testName" : "test1231921"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType year()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test1241930"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1241931"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1241932"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1241934"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1241935"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public MonthDay()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(monthDay0)",
  "exception" : "",
  "testName" : "test1241964"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getDayOfMonth()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, monthDay0.getDayOfMonth())",
  "exception" : "",
  "testName" : "test1241967"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1241968"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getMonthOfYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, monthDay0.getMonthOfYear())",
  "exception" : "",
  "testName" : "test1241969"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1241979"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1241980"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getDayOfMonth()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, monthDay0.getDayOfMonth())",
  "exception" : "",
  "testName" : "test1241996"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1241997"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getMonthOfYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1241998"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1252009"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1252010"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static GJChronology getInstance()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1252013"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeParserBucket(long instantLocal, Chronology chrono, Locale locale, Integer pivotYear, int defaultYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0)",
  "exception" : "",
  "testName" : "test1252023"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1252030"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1252031"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1252032"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1252034"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1252035"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1252044"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1252045"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1252046"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static MonthDay parse(String str)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1262047"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static GJChronology getInstance()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(gJChronology0)",
  "exception" : "",
  "testName" : "test1272051"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeParserBucket(long instantLocal, Chronology chrono, Locale locale, Integer pivotYear, int defaultYear)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeParserBucket0)",
  "exception" : "",
  "testName" : "test1272061"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1272068"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1272069"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1272070"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int getOffset()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1272080"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getOffsetInteger()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1272081"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Integer getPivotYear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1272082"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1282087"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1282088"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static BuddhistChronology getInstanceUTC()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(buddhistChronology0)",
  "exception" : "",
  "testName" : "test1282092"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public LocalDateTime(long instant, Chronology chronology)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(localDateTime0)",
  "exception" : "",
  "testName" : "test1282094"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, localDateTime0.size())",
  "exception" : "",
  "testName" : "test1282096"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendFractionOfMinute(int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1302110"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendShortText(DateTimeFieldType fieldType)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1312112"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType secondOfDay()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test1322114"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1322115"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1322116"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendFixedSignedDecimal(DateTimeFieldType fieldType, int numDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1322117"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendFixedSignedDecimal(DateTimeFieldType fieldType, int numDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1332119"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendFixedSignedDecimal(DateTimeFieldType fieldType, int numDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1342124"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1342127"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1342128"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendWeekyear(int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(dateTimeFormatterBuilder0, dateTimeFormatterBuilder1)",
  "exception" : "",
  "testName" : "test1352130"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType millisOfSecond()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test1362134"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1362135"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1362136"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendSignedDecimal(DateTimeFieldType fieldType, int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1362137"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendYear(int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1372139"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendSignedDecimal(DateTimeFieldType fieldType, int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1382143"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendFixedDecimal(DateTimeFieldType fieldType, int numDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1392148"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static DateTimeFieldType clockhourOfDay()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0)",
  "exception" : "",
  "testName" : "test1402150"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1402151"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1402152"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendFixedDecimal(DateTimeFieldType fieldType, int numDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1402153"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1402156"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1402157"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendYearOfEra(int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1412159"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendDecimal(DateTimeFieldType fieldType, int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1422161"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendLiteral(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(dateTimeFormatterBuilder0, dateTimeFormatterBuilder1)",
  "exception" : "",
  "testName" : "test1432163"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendLiteral(String text)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1442167"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder append(DateTimePrinter printer, DateTimeParser parser)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1452172"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder append(DateTimeParser parser)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1462174"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder append(DateTimePrinter printer, DateTimeParser[] parsers)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1472182"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder append(DateTimePrinter printer, DateTimeParser[] parsers)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1482196"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeParser toParser()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1492198"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public static LocalTime fromMillisOfDay(long millisOfDay, Chronology chrono)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(localTime0)",
  "exception" : "",
  "testName" : "test1502219"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, localTime0.size())",
  "exception" : "",
  "testName" : "test1502221"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String getName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.getName())",
  "exception" : "",
  "testName" : "test1502223"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public String toString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(dateTimeFieldType0.toString())",
  "exception" : "",
  "testName" : "test1502224"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public int size()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, localTime0.size())",
  "exception" : "",
  "testName" : "test1502233"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendClockhourOfDay(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1682255"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendHalfdayOfDayText()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1692256"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendTwoDigitWeekyear(int pivot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1702257"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendMinuteOfDay(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1712258"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendYearOfCentury(int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1722259"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendTimeZoneOffset(String zeroOffsetPrintText, String zeroOffsetParseText, boolean showSeparators, int minFields, int maxFields)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1742262"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendMillisOfDay(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1752263"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendMonthOfYearShortText()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1762264"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean canBuildPrinter()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test1772265"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendMillisOfSecond(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1782266"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean canBuildParser()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test1792267"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendSecondOfDay(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1802268"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendTimeZoneName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1812269"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public void clear()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1832276"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendPattern(String pattern)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1842277"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean canBuildParser()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test1852278"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendFractionOfDay(int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1862279"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendMonthOfYearText()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1872280"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public boolean canBuildFormatter()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test1882281"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendHourOfHalfday(int minDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1892282"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendCenturyOfEra(int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1912285"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendYearOfEra(int minDigits, int maxDigits)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1922286"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public DateTimeFormatterBuilder appendTwoDigitYear(int pivot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1932287"
}, {
  "className" : "org.joda.time.format.DateTimeFormatterBuilder",
  "methodSignature" : "public Instant(Object instant)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1972292"
} ]