{
  "test07682" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07682() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[0];\n    int[] intArray0 = new int[0];\n    Partial partial0 = new Partial(dateTimeFieldTypeArray0, intArray0);\n    String string0 = partial0.toString();\n}",
    "testName" : "test07682"
  },
  "test08491" : {
    "methodSignature" : "public Partial withFieldAddWrapped(DurationFieldType fieldType, int amount)",
    "methodName" : "withFieldAddWrapped",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08491() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[9];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.yearOfEra();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.era();\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType1;\n    DurationFieldType durationFieldType0 = dateTimeFieldTypeArray0[0].getRangeDurationType();\n    int[] intArray0 = new int[5];\n    Partial partial0 = new Partial((Chronology) null, dateTimeFieldTypeArray0, intArray0);\n    Partial partial1 = partial0.withFieldAddWrapped(durationFieldType0, 0);\n}",
    "testName" : "test08491"
  },
  "test0000" : {
    "methodSignature" : "public boolean isMatch(ReadablePartial partial)",
    "methodName" : "isMatch",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    DateTimePrinter dateTimePrinter0 = mock(DateTimePrinter.class, new ViolatedAssumptionAnswer());\n    DateTimeParser dateTimeParser0 = mock(DateTimeParser.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(dateTimeParser0).parseInto(any(org.joda.time.format.DateTimeParserBucket.class), anyString(), anyInt());\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimePrinter0, dateTimeParser0);\n    LocalDateTime localDateTime0 = LocalDateTime.parse(\"\", dateTimeFormatter0);\n    Partial partial0 = new Partial(localDateTime0);\n    DateTimeFieldType dateTimeFieldType0 = partial0.getFieldType(0);\n    Partial partial1 = partial0.withField(dateTimeFieldType0, 0);\n    boolean boolean0 = partial1.isMatch((ReadablePartial) partial0);\n}",
    "testName" : "test0000"
  },
  "test03640" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03640() throws Throwable {\n    GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[4];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.halfdayOfDay();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    dateTimeFieldTypeArray0[1] = dateTimeFieldTypeArray0[0];\n    int[] intArray0 = new int[1];\n    Partial partial0 = new Partial(gregorianChronology0, dateTimeFieldTypeArray0, intArray0);\n    partial0.toString();\n}",
    "testName" : "test03640"
  },
  "test06873" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06873() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.yearOfEra();\n    Partial partial0 = new Partial(dateTimeFieldType0, 120);\n    int int0 = partial0.size();\n}",
    "testName" : "test06873"
  },
  "test04852" : {
    "methodSignature" : "Partial(Partial partial, int[] values)",
    "methodName" : "Partial",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04852() throws Throwable {\n    int[] intArray0 = new int[6];\n    Partial partial0 = null;\n    partial0 = new Partial((Partial) null, intArray0);\n}",
    "testName" : "test04852"
  },
  "test104113" : {
    "methodSignature" : "public Partial(DateTimeFieldType[] types, int[] values)",
    "methodName" : "Partial",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104113() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[2];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.centuryOfEra();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.era();\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType1;\n    int[] intArray0 = new int[2];\n    Partial partial0 = null;\n    partial0 = new Partial(dateTimeFieldTypeArray0, intArray0);\n}",
    "testName" : "test104113"
  },
  "test05660" : {
    "methodSignature" : "public DateTimeFormatter getFormatter()",
    "methodName" : "getFormatter",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05660() throws Throwable {\n    Partial partial0 = new Partial();\n    DateTimeFormatter dateTimeFormatter0 = partial0.getFormatter();\n}",
    "testName" : "test05660"
  },
  "test08896" : {
    "methodSignature" : "public Partial withField(DateTimeFieldType fieldType, int value)",
    "methodName" : "withField",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08896() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyear();\n    Partial partial0 = new Partial(dateTimeFieldType0, 2881);\n    Partial partial1 = partial0.withField(dateTimeFieldType0, 2881);\n}",
    "testName" : "test08896"
  },
  "test01213" : {
    "methodSignature" : "public boolean equals(Object partial)",
    "methodName" : "equals",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01213() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyear();\n    ISOChronology iSOChronology0 = ISOChronology.getInstance();\n    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis((-883));\n    ZonedChronology zonedChronology0 = ZonedChronology.getInstance(iSOChronology0, dateTimeZone0);\n    Partial partial0 = new Partial(dateTimeFieldType0, (-883), zonedChronology0);\n    Partial.Property partial_Property0 = partial0.property(dateTimeFieldType0);\n    Partial partial1 = partial_Property0.setCopy((-883));\n    partial1.equals((Object) partial0);\n}",
    "testName" : "test01213"
  },
  "test03236" : {
    "methodSignature" : "public Partial with(DateTimeFieldType fieldType, int value)",
    "methodName" : "with",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03236() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[9];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.yearOfEra();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType0;\n    dateTimeFieldTypeArray0[2] = dateTimeFieldTypeArray0[0];\n    dateTimeFieldTypeArray0[3] = dateTimeFieldTypeArray0[1];\n    dateTimeFieldTypeArray0[4] = dateTimeFieldTypeArray0[0];\n    dateTimeFieldTypeArray0[5] = dateTimeFieldTypeArray0[0];\n    int[] intArray0 = new int[5];\n    Partial partial0 = new Partial((Chronology) null, dateTimeFieldTypeArray0, intArray0);\n    partial0.with(dateTimeFieldTypeArray0[0], 3);\n}",
    "testName" : "test03236"
  },
  "test02428" : {
    "methodSignature" : "public Partial withFieldAddWrapped(DurationFieldType fieldType, int amount)",
    "methodName" : "withFieldAddWrapped",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02428() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[20];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.yearOfEra();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.era();\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType1;\n    DurationFieldType durationFieldType0 = dateTimeFieldType0.getRangeDurationType();\n    int[] intArray0 = new int[5];\n    intArray0[1] = 105;\n    Partial partial0 = new Partial((Chronology) null, dateTimeFieldTypeArray0, intArray0);\n    partial0.withFieldAddWrapped(durationFieldType0, (-1));\n}",
    "testName" : "test02428"
  },
  "test04448" : {
    "methodSignature" : "protected DateTimeField getField(int index, Chronology chrono)",
    "methodName" : "getField",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04448() throws Throwable {\n    JulianChronology julianChronology0 = JulianChronology.getInstance();\n    int[] intArray0 = new int[3];\n    Partial partial0 = new Partial(julianChronology0, (DateTimeFieldType[]) null, intArray0);\n    partial0.getField((-4493), (Chronology) julianChronology0);\n}",
    "testName" : "test04448"
  },
  "test097105" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097105() throws Throwable {\n    MockDate mockDate0 = new MockDate(2066, 11, 2284, 91, 11);\n    LocalDate localDate0 = LocalDate.fromDateFields(mockDate0);\n    Partial partial0 = new Partial(localDate0);\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfDay();\n    Partial partial1 = partial0.with(dateTimeFieldType0, 2066);\n    partial1.size();\n}",
    "testName" : "test097105"
  },
  "test06065" : {
    "methodSignature" : "public Partial(DateTimeFieldType[] types, int[] values, Chronology chronology)",
    "methodName" : "Partial",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06065() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[6];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyear();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.weekOfWeekyear();\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType1;\n    dateTimeFieldTypeArray0[2] = dateTimeFieldTypeArray0[0];\n    dateTimeFieldTypeArray0[3] = dateTimeFieldTypeArray0[0];\n    dateTimeFieldTypeArray0[4] = dateTimeFieldTypeArray0[3];\n    dateTimeFieldTypeArray0[5] = dateTimeFieldType1;\n    int[] intArray0 = new int[6];\n    Partial partial0 = null;\n    partial0 = new Partial(dateTimeFieldTypeArray0, intArray0, (Chronology) null);\n}",
    "testName" : "test06065"
  },
  "test08086" : {
    "methodSignature" : "public boolean isMatch(ReadableInstant instant)",
    "methodName" : "isMatch",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08086() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.halfdayOfDay();\n    Partial partial0 = new Partial(dateTimeFieldType0, 0);\n    Instant instant0 = new Instant((long) 0);\n    boolean boolean0 = partial0.isMatch((ReadableInstant) instant0);\n}",
    "testName" : "test08086"
  },
  "test0011" : {
    "methodSignature" : "public boolean isMatch(ReadableInstant instant)",
    "methodName" : "isMatch",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfDay();\n    Partial partial0 = new Partial(dateTimeFieldType0, 106);\n    Instant instant0 = new Instant((Object) null);\n    boolean boolean0 = partial0.isMatch((ReadableInstant) instant0);\n}",
    "testName" : "test0011"
  },
  "test0099" : {
    "methodSignature" : "public Partial withFieldAdded(DurationFieldType fieldType, int amount)",
    "methodName" : "withFieldAdded",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0099() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[5];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfDay();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    DurationFieldType durationFieldType0 = dateTimeFieldType0.getDurationType();\n    Partial partial0 = new Partial(dateTimeFieldTypeArray0[0], 2390, (Chronology) null);\n    Partial partial1 = partial0.withFieldAdded(durationFieldType0, 256);\n}",
    "testName" : "test0099"
  },
  "test05256" : {
    "methodSignature" : "public String toStringList()",
    "methodName" : "toStringList",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05256() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[7];\n    int[] intArray0 = new int[21];\n    Partial partial0 = new Partial((Chronology) null, dateTimeFieldTypeArray0, intArray0);\n    partial0.toStringList();\n}",
    "testName" : "test05256"
  },
  "test06469" : {
    "methodSignature" : "public Partial(DateTimeFieldType[] types, int[] values, Chronology chronology)",
    "methodName" : "Partial",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06469() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[1];\n    Instant instant0 = Instant.now();\n    Chronology chronology0 = instant0.getChronology();\n    Partial partial0 = null;\n    partial0 = new Partial(dateTimeFieldTypeArray0, (int[]) null, chronology0);\n}",
    "testName" : "test06469"
  },
  "test07277" : {
    "methodSignature" : "public String toString(String pattern, Locale locale)",
    "methodName" : "toString",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07277() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[5];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfDay();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    Partial partial0 = new Partial(dateTimeFieldTypeArray0[0], 2390, (Chronology) null);\n    Locale locale0 = Locale.ITALY;\n    partial0.toString(\"Cj;=GD8F8\", locale0);\n}",
    "testName" : "test07277"
  },
  "test107116" : {
    "methodSignature" : "public Partial(DateTimeFieldType type, int value)",
    "methodName" : "Partial",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107116() throws Throwable {\n    Partial partial0 = null;\n    partial0 = new Partial((DateTimeFieldType) null, 74);\n}",
    "testName" : "test107116"
  },
  "test02024" : {
    "methodSignature" : "public Partial without(DateTimeFieldType fieldType)",
    "methodName" : "without",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02024() throws Throwable {\n    GJChronology gJChronology0 = GJChronology.getInstance();\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[5];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekOfWeekyear();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType0;\n    int[] intArray0 = new int[8];\n    Partial partial0 = new Partial(gJChronology0, dateTimeFieldTypeArray0, intArray0);\n    partial0.without(dateTimeFieldType0);\n}",
    "testName" : "test02024"
  },
  "test04044" : {
    "methodSignature" : "public int getValue(int index)",
    "methodName" : "getValue",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04044() throws Throwable {\n    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(1);\n    EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstance(dateTimeZone0);\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[9];\n    Partial partial0 = new Partial(ethiopicChronology0, dateTimeFieldTypeArray0, (int[]) null);\n    partial0.getValue(1);\n}",
    "testName" : "test04044"
  },
  "test01721" : {
    "methodSignature" : "public int getValue(int index)",
    "methodName" : "getValue",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01721() throws Throwable {\n    DateTimePrinter dateTimePrinter0 = mock(DateTimePrinter.class, new ViolatedAssumptionAnswer());\n    DateTimeParser dateTimeParser0 = mock(DateTimeParser.class, new ViolatedAssumptionAnswer());\n    doReturn(52).when(dateTimeParser0).parseInto(any(org.joda.time.format.DateTimeParserBucket.class), anyString(), anyInt());\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimePrinter0, dateTimeParser0);\n    LocalDateTime localDateTime0 = LocalDateTime.parse(\"\", dateTimeFormatter0);\n    Partial partial0 = new Partial(localDateTime0);\n    int int0 = partial0.getValue(0);\n}",
    "testName" : "test01721"
  },
  "test00910" : {
    "methodSignature" : "public boolean equals(Object partial)",
    "methodName" : "equals",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00910() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[5];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfDay();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    DurationFieldType durationFieldType0 = dateTimeFieldType0.getDurationType();\n    Partial partial0 = new Partial(dateTimeFieldTypeArray0[0], 2390, (Chronology) null);\n    Partial partial1 = partial0.withFieldAdded(durationFieldType0, 256);\n    partial1.equals((Object) partial0);\n}",
    "testName" : "test00910"
  },
  "test04953" : {
    "methodSignature" : "public Partial(DateTimeFieldType type, int value, Chronology chronology)",
    "methodName" : "Partial",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04953() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.dayOfYear();\n    ISOChronology iSOChronology0 = ISOChronology.getInstanceUTC();\n    Partial partial0 = null;\n    partial0 = new Partial(dateTimeFieldType0, 0, iSOChronology0);\n}",
    "testName" : "test04953"
  },
  "test02933" : {
    "methodSignature" : "public Partial withField(DateTimeFieldType fieldType, int value)",
    "methodName" : "withField",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02933() throws Throwable {\n    CopticChronology copticChronology0 = CopticChronology.getInstanceUTC();\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[4];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.year();\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType0;\n    int[] intArray0 = new int[1];\n    Partial partial0 = new Partial(copticChronology0, dateTimeFieldTypeArray0, intArray0);\n    partial0.withField(dateTimeFieldType0, 1);\n}",
    "testName" : "test02933"
  },
  "test094102" : {
    "methodSignature" : "public Partial with(DateTimeFieldType fieldType, int value)",
    "methodName" : "with",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094102() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[5];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfDay();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.weekOfWeekyear();\n    dateTimeFieldTypeArray0[3] = dateTimeFieldType1;\n    Partial partial0 = new Partial(dateTimeFieldTypeArray0[0], 1, (Chronology) null);\n    partial0.with(dateTimeFieldTypeArray0[3], 543);\n}",
    "testName" : "test094102"
  },
  "test08592" : {
    "methodSignature" : "public Partial withFieldAddWrapped(DurationFieldType fieldType, int amount)",
    "methodName" : "withFieldAddWrapped",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08592() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.yearOfEra();\n    DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.dayOfYear();\n    DurationFieldType durationFieldType0 = dateTimeFieldType1.getRangeDurationType();\n    Partial partial0 = new Partial(dateTimeFieldType0, 3405, (Chronology) null);\n    Partial partial1 = partial0.withFieldAddWrapped(durationFieldType0, (-1));\n}",
    "testName" : "test08592"
  },
  "test06570" : {
    "methodSignature" : "public Partial(DateTimeFieldType[] types, int[] values, Chronology chronology)",
    "methodName" : "Partial",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06570() throws Throwable {\n    int[] intArray0 = new int[5];\n    JulianChronology julianChronology0 = JulianChronology.getInstanceUTC();\n    Partial partial0 = null;\n    partial0 = new Partial((DateTimeFieldType[]) null, intArray0, julianChronology0);\n}",
    "testName" : "test06570"
  },
  "test08593" : {
    "methodSignature" : "public boolean equals(Object partial)",
    "methodName" : "equals",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08593() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.yearOfEra();\n    DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.dayOfYear();\n    DurationFieldType durationFieldType0 = dateTimeFieldType1.getRangeDurationType();\n    Partial partial0 = new Partial(dateTimeFieldType0, 3405, (Chronology) null);\n    Partial partial1 = partial0.withFieldAddWrapped(durationFieldType0, (-1));\n    partial1.equals((Object) partial0);\n}",
    "testName" : "test08593"
  },
  "test0022" : {
    "methodSignature" : "public Partial withFieldAddWrapped(DurationFieldType fieldType, int amount)",
    "methodName" : "withFieldAddWrapped",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0022() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[7];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyearOfCentury();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType0;\n    DurationFieldType durationFieldType0 = dateTimeFieldTypeArray0[1].getDurationType();\n    int[] intArray0 = new int[21];\n    Partial partial0 = new Partial((Chronology) null, dateTimeFieldTypeArray0, intArray0);\n    partial0.withFieldAddWrapped(durationFieldType0, 86400);\n}",
    "testName" : "test0022"
  },
  "test05762" : {
    "methodSignature" : "public boolean equals(Object partial)",
    "methodName" : "equals",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05762() throws Throwable {\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance((DateTimeZone) null);\n    Months months0 = Months.NINE;\n    Partial partial0 = new Partial(buddhistChronology0);\n    Partial partial1 = partial0.withPeriodAdded(months0, 1);\n    partial1.equals((Object) partial0);\n}",
    "testName" : "test05762"
  },
  "test102111" : {
    "methodSignature" : "public Partial(DateTimeFieldType[] types, int[] values, Chronology chronology)",
    "methodName" : "Partial",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102111() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[9];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.clockhourOfHalfday();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.hourOfDay();\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType1;\n    dateTimeFieldTypeArray0[2] = dateTimeFieldType1;\n    dateTimeFieldTypeArray0[3] = dateTimeFieldTypeArray0[0];\n    dateTimeFieldTypeArray0[4] = dateTimeFieldTypeArray0[1];\n    dateTimeFieldTypeArray0[5] = dateTimeFieldTypeArray0[4];\n    dateTimeFieldTypeArray0[6] = dateTimeFieldType0;\n    dateTimeFieldTypeArray0[7] = dateTimeFieldTypeArray0[5];\n    dateTimeFieldTypeArray0[8] = dateTimeFieldTypeArray0[0];\n    int[] intArray0 = new int[9];\n    Partial partial0 = null;\n    partial0 = new Partial(dateTimeFieldTypeArray0, intArray0, (Chronology) null);\n}",
    "testName" : "test102111"
  },
  "test03741" : {
    "methodSignature" : "public Property property(DateTimeFieldType type)",
    "methodName" : "property",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03741() throws Throwable {\n    Partial partial0 = new Partial();\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.minuteOfDay();\n    partial0.property(dateTimeFieldType0);\n}",
    "testName" : "test03741"
  },
  "test06974" : {
    "methodSignature" : "public int getValue(int index)",
    "methodName" : "getValue",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06974() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.halfdayOfDay();\n    Partial partial0 = new Partial(dateTimeFieldType0, 0);\n    int int0 = partial0.getValue(0);\n}",
    "testName" : "test06974"
  },
  "test08997" : {
    "methodSignature" : "public boolean isMatch(ReadablePartial partial)",
    "methodName" : "isMatch",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08997() throws Throwable {\n    DateTimePrinter dateTimePrinter0 = mock(DateTimePrinter.class, new ViolatedAssumptionAnswer());\n    DateTimeParser dateTimeParser0 = mock(DateTimeParser.class, new ViolatedAssumptionAnswer());\n    doReturn(52).when(dateTimeParser0).parseInto(any(org.joda.time.format.DateTimeParserBucket.class), anyString(), anyInt());\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimePrinter0, dateTimeParser0);\n    LocalDateTime localDateTime0 = LocalDateTime.parse(\"\", dateTimeFormatter0);\n    Partial partial0 = new Partial(localDateTime0);\n    DateTimeFieldType dateTimeFieldType0 = partial0.getFieldType(0);\n    Partial partial1 = partial0.withField(dateTimeFieldType0, 0);\n    boolean boolean0 = partial0.isMatch((ReadablePartial) partial1);\n}",
    "testName" : "test08997"
  },
  "test05761" : {
    "methodSignature" : "public Partial withPeriodAdded(ReadablePeriod period, int scalar)",
    "methodName" : "withPeriodAdded",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05761() throws Throwable {\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance((DateTimeZone) null);\n    Months months0 = Months.NINE;\n    Partial partial0 = new Partial(buddhistChronology0);\n    Partial partial1 = partial0.withPeriodAdded(months0, 1);\n}",
    "testName" : "test05761"
  },
  "test07783" : {
    "methodSignature" : "public DateTimeFormatter getFormatter()",
    "methodName" : "getFormatter",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07783() throws Throwable {\n    DateTimePrinter dateTimePrinter0 = mock(DateTimePrinter.class, new ViolatedAssumptionAnswer());\n    DateTimeParser dateTimeParser0 = mock(DateTimeParser.class, new ViolatedAssumptionAnswer());\n    doReturn(52).when(dateTimeParser0).parseInto(any(org.joda.time.format.DateTimeParserBucket.class), anyString(), anyInt());\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimePrinter0, dateTimeParser0);\n    LocalDateTime localDateTime0 = LocalDateTime.parse(\"\", dateTimeFormatter0);\n    Partial partial0 = new Partial(localDateTime0);\n    partial0.getFormatter();\n    DateTimeFormatter dateTimeFormatter1 = partial0.getFormatter();\n}",
    "testName" : "test07783"
  },
  "test01314" : {
    "methodSignature" : "public boolean equals(Object partial)",
    "methodName" : "equals",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01314() throws Throwable {\n    Partial partial0 = new Partial();\n    Period period0 = Period.seconds(3198);\n    Seconds seconds0 = Seconds.standardSecondsIn(period0);\n    Partial partial1 = partial0.plus(seconds0);\n    partial1.equals((Object) partial0);\n}",
    "testName" : "test01314"
  },
  "test04549" : {
    "methodSignature" : "protected DateTimeField getField(int index, Chronology chrono)",
    "methodName" : "getField",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04549() throws Throwable {\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();\n    Partial partial0 = new Partial(buddhistChronology0);\n    partial0.getField(238, (Chronology) buddhistChronology0);\n}",
    "testName" : "test04549"
  },
  "test02125" : {
    "methodSignature" : "public Partial without(DateTimeFieldType fieldType)",
    "methodName" : "without",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02125() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[7];\n    int[] intArray0 = new int[21];\n    Partial partial0 = new Partial((Chronology) null, dateTimeFieldTypeArray0, intArray0);\n    partial0.without(dateTimeFieldTypeArray0[0]);\n}",
    "testName" : "test02125"
  },
  "test03337" : {
    "methodSignature" : "public String toStringList()",
    "methodName" : "toStringList",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03337() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[7];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyearOfCentury();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    dateTimeFieldTypeArray0[1] = dateTimeFieldTypeArray0[0];\n    dateTimeFieldTypeArray0[2] = dateTimeFieldTypeArray0[0];\n    int[] intArray0 = new int[2];\n    Partial partial0 = new Partial((Chronology) null, dateTimeFieldTypeArray0, intArray0);\n    partial0.toStringList();\n}",
    "testName" : "test03337"
  },
  "test01315" : {
    "methodSignature" : "public Partial plus(ReadablePeriod period)",
    "methodName" : "plus",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01315() throws Throwable {\n    Partial partial0 = new Partial();\n    Period period0 = Period.seconds(3198);\n    Seconds seconds0 = Seconds.standardSecondsIn(period0);\n    Partial partial1 = partial0.plus(seconds0);\n}",
    "testName" : "test01315"
  },
  "test116125" : {
    "methodSignature" : "public Property property(DateTimeFieldType type)",
    "methodName" : "property",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test116125() throws Throwable {\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();\n    Partial partial0 = new Partial(buddhistChronology0, (DateTimeFieldType[]) null, (int[]) null);\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.hourOfHalfday();\n    partial0.property(dateTimeFieldType0);\n}",
    "testName" : "test116125"
  },
  "test02529" : {
    "methodSignature" : "public Partial withFieldAddWrapped(DurationFieldType fieldType, int amount)",
    "methodName" : "withFieldAddWrapped",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02529() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.halfdayOfDay();\n    Partial partial0 = new Partial(dateTimeFieldType0, 0);\n    DurationFieldType durationFieldType0 = DurationFieldType.millis();\n    partial0.withFieldAddWrapped(durationFieldType0, 3600);\n}",
    "testName" : "test02529"
  },
  "test099108" : {
    "methodSignature" : "public Partial withChronologyRetainFields(Chronology newChronology)",
    "methodName" : "withChronologyRetainFields",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099108() throws Throwable {\n    Partial partial0 = new Partial();\n    GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();\n    LenientChronology lenientChronology0 = LenientChronology.getInstance(gregorianChronology0);\n    Partial partial1 = partial0.withChronologyRetainFields(lenientChronology0);\n}",
    "testName" : "test099108"
  },
  "test099107" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099107() throws Throwable {\n    Partial partial0 = new Partial();\n    partial0.size();\n}",
    "testName" : "test099107"
  },
  "test08187" : {
    "methodSignature" : "public Partial plus(ReadablePeriod period)",
    "methodName" : "plus",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08187() throws Throwable {\n    LocalTime localTime0 = new LocalTime(0L, (DateTimeZone) null);\n    GregorianChronology gregorianChronology0 = GregorianChronology.getInstance((DateTimeZone) null);\n    StrictChronology strictChronology0 = StrictChronology.getInstance(gregorianChronology0);\n    Period period0 = new Period(0L, 0L, strictChronology0);\n    Partial partial0 = new Partial(localTime0);\n    Partial partial1 = partial0.plus(period0);\n}",
    "testName" : "test08187"
  },
  "test08188" : {
    "methodSignature" : "public boolean equals(Object partial)",
    "methodName" : "equals",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08188() throws Throwable {\n    LocalTime localTime0 = new LocalTime(0L, (DateTimeZone) null);\n    GregorianChronology gregorianChronology0 = GregorianChronology.getInstance((DateTimeZone) null);\n    StrictChronology strictChronology0 = StrictChronology.getInstance(gregorianChronology0);\n    Period period0 = new Period(0L, 0L, strictChronology0);\n    Partial partial0 = new Partial(localTime0);\n    Partial partial1 = partial0.plus(period0);\n    partial1.equals((Object) partial0);\n}",
    "testName" : "test08188"
  },
  "test100109" : {
    "methodSignature" : "public Partial(ReadablePartial partial)",
    "methodName" : "Partial",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100109() throws Throwable {\n    Partial partial0 = null;\n    partial0 = new Partial((ReadablePartial) null);\n}",
    "testName" : "test100109"
  },
  "test0033" : {
    "methodSignature" : "public Partial without(DateTimeFieldType fieldType)",
    "methodName" : "without",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0033() throws Throwable {\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance((DateTimeZone) null);\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[8];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.hourOfHalfday();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    int[] intArray0 = new int[3];\n    Partial partial0 = new Partial(buddhistChronology0, dateTimeFieldTypeArray0, intArray0);\n    partial0.without(dateTimeFieldTypeArray0[6]);\n}",
    "testName" : "test0033"
  },
  "test04145" : {
    "methodSignature" : "public int getValue(int index)",
    "methodName" : "getValue",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04145() throws Throwable {\n    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis((-857));\n    GregorianChronology gregorianChronology0 = GregorianChronology.getInstance(dateTimeZone0);\n    Partial partial0 = new Partial(gregorianChronology0);\n    partial0.getValue(2335);\n}",
    "testName" : "test04145"
  },
  "test05357" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05357() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.secondOfMinute();\n    Partial partial0 = new Partial(dateTimeFieldType0, 0);\n    String string0 = partial0.toString();\n}",
    "testName" : "test05357"
  },
  "test105114" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105114() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[2];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.centuryOfEra();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.weekyearOfCentury();\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType1;\n    int[] intArray0 = new int[2];\n    Partial partial0 = new Partial(dateTimeFieldTypeArray0, intArray0);\n    partial0.size();\n}",
    "testName" : "test105114"
  },
  "test06166" : {
    "methodSignature" : "public Partial(DateTimeFieldType[] types, int[] values, Chronology chronology)",
    "methodName" : "Partial",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06166() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[1];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyearOfCentury();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    int[] intArray0 = new int[1];\n    GJChronology gJChronology0 = GJChronology.getInstanceUTC();\n    Partial partial0 = null;\n    partial0 = new Partial(dateTimeFieldTypeArray0, intArray0, gJChronology0);\n}",
    "testName" : "test06166"
  },
  "test07378" : {
    "methodSignature" : "public String toString(String pattern)",
    "methodName" : "toString",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07378() throws Throwable {\n    GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[4];\n    int[] intArray0 = new int[1];\n    Partial partial0 = new Partial(gregorianChronology0, dateTimeFieldTypeArray0, intArray0);\n    String string0 = partial0.toString(\"/\");\n}",
    "testName" : "test07378"
  },
  "test03842" : {
    "methodSignature" : "public boolean isMatch(ReadableInstant instant)",
    "methodName" : "isMatch",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03842() throws Throwable {\n    GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();\n    int[] intArray0 = new int[8];\n    Partial partial0 = new Partial(gregorianChronology0, (DateTimeFieldType[]) null, intArray0);\n    Instant instant0 = new Instant();\n    partial0.isMatch((ReadableInstant) instant0);\n}",
    "testName" : "test03842"
  },
  "test01822" : {
    "methodSignature" : "public DateTimeFieldType[] getFieldTypes()",
    "methodName" : "getFieldTypes",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01822() throws Throwable {\n    Partial partial0 = new Partial();\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = partial0.getFieldTypes();\n}",
    "testName" : "test01822"
  },
  "test113122" : {
    "methodSignature" : "public Partial minus(ReadablePeriod period)",
    "methodName" : "minus",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113122() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[5];\n    int[] intArray0 = new int[5];\n    Partial partial0 = new Partial((Chronology) null, dateTimeFieldTypeArray0, intArray0);\n    Hours hours0 = Hours.SIX;\n    Duration duration0 = hours0.toStandardDuration();\n    MutableDateTime mutableDateTime0 = new MutableDateTime(0L, (Chronology) null);\n    DateTime dateTime0 = mutableDateTime0.toDateTimeISO();\n    PeriodType periodType0 = PeriodType.days();\n    MutablePeriod mutablePeriod0 = new MutablePeriod(duration0, dateTime0, periodType0);\n    partial0.minus(mutablePeriod0);\n}",
    "testName" : "test113122"
  },
  "test096104" : {
    "methodSignature" : "public Partial with(DateTimeFieldType fieldType, int value)",
    "methodName" : "with",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096104() throws Throwable {\n    Partial partial0 = new Partial();\n    partial0.with((DateTimeFieldType) null, 2355);\n}",
    "testName" : "test096104"
  },
  "test08694" : {
    "methodSignature" : "public Partial withFieldAdded(DurationFieldType fieldType, int amount)",
    "methodName" : "withFieldAdded",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08694() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[5];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfDay();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    DurationFieldType durationFieldType0 = dateTimeFieldType0.getDurationType();\n    Partial partial0 = new Partial(dateTimeFieldTypeArray0[0], 1, (Chronology) null);\n    Partial partial1 = partial0.withFieldAdded(durationFieldType0, 0);\n}",
    "testName" : "test08694"
  },
  "test07480" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07480() throws Throwable {\n    DateTimePrinter dateTimePrinter0 = mock(DateTimePrinter.class, new ViolatedAssumptionAnswer());\n    DateTimeParser dateTimeParser0 = mock(DateTimeParser.class, new ViolatedAssumptionAnswer());\n    doReturn(52).when(dateTimeParser0).parseInto(any(org.joda.time.format.DateTimeParserBucket.class), anyString(), anyInt());\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimePrinter0, dateTimeParser0);\n    LocalDateTime localDateTime0 = LocalDateTime.parse(\"\", dateTimeFormatter0);\n    Partial partial0 = new Partial(localDateTime0);\n    DateTimeFormatter dateTimeFormatter1 = partial0.getFormatter();\n    String string0 = partial0.toString();\n}",
    "testName" : "test07480"
  },
  "test05863" : {
    "methodSignature" : "public Partial(DateTimeFieldType[] types, int[] values, Chronology chronology)",
    "methodName" : "Partial",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05863() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[6];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyear();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.yearOfCentury();\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType1;\n    dateTimeFieldTypeArray0[2] = dateTimeFieldType0;\n    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(543);\n    ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);\n    dateTimeFieldTypeArray0[3] = dateTimeFieldTypeArray0[2];\n    dateTimeFieldTypeArray0[4] = dateTimeFieldType0;\n    dateTimeFieldTypeArray0[5] = dateTimeFieldTypeArray0[1];\n    int[] intArray0 = new int[6];\n    Partial partial0 = null;\n    partial0 = new Partial(dateTimeFieldTypeArray0, intArray0, iSOChronology0);\n}",
    "testName" : "test05863"
  },
  "test02630" : {
    "methodSignature" : "public Partial withFieldAddWrapped(DurationFieldType fieldType, int amount)",
    "methodName" : "withFieldAddWrapped",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02630() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[9];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.yearOfEra();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType0;\n    dateTimeFieldTypeArray0[2] = dateTimeFieldTypeArray0[0];\n    dateTimeFieldTypeArray0[3] = dateTimeFieldTypeArray0[2];\n    DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.dayOfYear();\n    dateTimeFieldTypeArray0[4] = dateTimeFieldType1;\n    dateTimeFieldTypeArray0[5] = dateTimeFieldTypeArray0[4];\n    DurationFieldType durationFieldType0 = dateTimeFieldType1.getRangeDurationType();\n    int[] intArray0 = new int[5];\n    Partial partial0 = new Partial((Chronology) null, dateTimeFieldTypeArray0, intArray0);\n    partial0.withFieldAddWrapped(durationFieldType0, (-1));\n}",
    "testName" : "test02630"
  },
  "test06671" : {
    "methodSignature" : "public Partial(DateTimeFieldType type, int value, Chronology chronology)",
    "methodName" : "Partial",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06671() throws Throwable {\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();\n    Partial partial0 = null;\n    partial0 = new Partial((DateTimeFieldType) null, 0, buddhistChronology0);\n}",
    "testName" : "test06671"
  },
  "test07884" : {
    "methodSignature" : "public boolean isMatch(ReadablePartial partial)",
    "methodName" : "isMatch",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07884() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekOfWeekyear();\n    Partial partial0 = new Partial(dateTimeFieldType0, 44);\n    boolean boolean0 = partial0.isMatch((ReadablePartial) partial0);\n}",
    "testName" : "test07884"
  },
  "test04650" : {
    "methodSignature" : "public Partial(DateTimeFieldType[] types, int[] values)",
    "methodName" : "Partial",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04650() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[2];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.centuryOfEra();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.weekyearOfCentury();\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType1;\n    int[] intArray0 = new int[2];\n    intArray0[1] = 1095;\n    Partial partial0 = null;\n    partial0 = new Partial(dateTimeFieldTypeArray0, intArray0);\n}",
    "testName" : "test04650"
  },
  "test03438" : {
    "methodSignature" : "public String toString(String pattern, Locale locale)",
    "methodName" : "toString",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03438() throws Throwable {\n    DateTimeZone dateTimeZone0 = DateTimeZone.forID((String) null);\n    CopticChronology copticChronology0 = CopticChronology.getInstance(dateTimeZone0);\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[2];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.monthOfYear();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    int[] intArray0 = new int[0];\n    Partial partial0 = new Partial(copticChronology0, dateTimeFieldTypeArray0, intArray0);\n    Locale locale0 = Locale.ITALY;\n    partial0.toString((String) null, locale0);\n}",
    "testName" : "test03438"
  },
  "test02226" : {
    "methodSignature" : "public Partial withPeriodAdded(ReadablePeriod period, int scalar)",
    "methodName" : "withPeriodAdded",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02226() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[9];\n    int[] intArray0 = new int[5];\n    Partial partial0 = new Partial((Chronology) null, dateTimeFieldTypeArray0, intArray0);\n    Months months0 = Months.EIGHT;\n    partial0.withPeriodAdded(months0, 1000);\n}",
    "testName" : "test02226"
  },
  "test01417" : {
    "methodSignature" : "public boolean equals(Object partial)",
    "methodName" : "equals",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01417() throws Throwable {\n    Partial partial0 = new Partial();\n    PeriodType periodType0 = PeriodType.hours();\n    Period period0 = new Period(493L, periodType0);\n    Partial partial1 = partial0.minus(period0);\n    partial1.equals((Object) partial0);\n}",
    "testName" : "test01417"
  },
  "test01416" : {
    "methodSignature" : "public Partial minus(ReadablePeriod period)",
    "methodName" : "minus",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01416() throws Throwable {\n    Partial partial0 = new Partial();\n    PeriodType periodType0 = PeriodType.hours();\n    Period period0 = new Period(493L, periodType0);\n    Partial partial1 = partial0.minus(period0);\n}",
    "testName" : "test01416"
  },
  "test05458" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05458() throws Throwable {\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[8];\n    int[] intArray0 = new int[8];\n    Partial partial0 = new Partial(buddhistChronology0, dateTimeFieldTypeArray0, intArray0);\n    partial0.toString();\n}",
    "testName" : "test05458"
  },
  "test093101" : {
    "methodSignature" : "public Partial with(DateTimeFieldType fieldType, int value)",
    "methodName" : "with",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093101() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.yearOfEra();\n    DateTime dateTime0 = new DateTime();\n    LocalDate localDate0 = dateTime0.toLocalDate();\n    Partial partial0 = new Partial(localDate0);\n    partial0.with(dateTimeFieldType0, 1);\n}",
    "testName" : "test093101"
  },
  "test07075" : {
    "methodSignature" : "public int[] getValues()",
    "methodName" : "getValues",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07075() throws Throwable {\n    DateTimePrinter dateTimePrinter0 = mock(DateTimePrinter.class, new ViolatedAssumptionAnswer());\n    DateTimeParser dateTimeParser0 = mock(DateTimeParser.class, new ViolatedAssumptionAnswer());\n    doReturn(52).when(dateTimeParser0).parseInto(any(org.joda.time.format.DateTimeParserBucket.class), anyString(), anyInt());\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimePrinter0, dateTimeParser0);\n    LocalDateTime localDateTime0 = LocalDateTime.parse(\"\", dateTimeFormatter0);\n    Partial partial0 = new Partial(localDateTime0);\n    int[] intArray0 = partial0.getValues();\n}",
    "testName" : "test07075"
  },
  "test09098" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09098() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyear();\n    Partial partial0 = new Partial(dateTimeFieldType0, 2881);\n    Partial partial1 = partial0.without(dateTimeFieldType0);\n    partial1.size();\n}",
    "testName" : "test09098"
  },
  "test03034" : {
    "methodSignature" : "public Partial withChronologyRetainFields(Chronology newChronology)",
    "methodName" : "withChronologyRetainFields",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03034() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[4];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.hourOfHalfday();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.clockhourOfHalfday();\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType1;\n    int[] intArray0 = new int[8];\n    Partial partial0 = new Partial((Chronology) null, dateTimeFieldTypeArray0, intArray0);\n    partial0.withChronologyRetainFields((Chronology) null);\n}",
    "testName" : "test03034"
  },
  "test07479" : {
    "methodSignature" : "public DateTimeFormatter getFormatter()",
    "methodName" : "getFormatter",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07479() throws Throwable {\n    DateTimePrinter dateTimePrinter0 = mock(DateTimePrinter.class, new ViolatedAssumptionAnswer());\n    DateTimeParser dateTimeParser0 = mock(DateTimeParser.class, new ViolatedAssumptionAnswer());\n    doReturn(52).when(dateTimeParser0).parseInto(any(org.joda.time.format.DateTimeParserBucket.class), anyString(), anyInt());\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimePrinter0, dateTimeParser0);\n    LocalDateTime localDateTime0 = LocalDateTime.parse(\"\", dateTimeFormatter0);\n    Partial partial0 = new Partial(localDateTime0);\n    DateTimeFormatter dateTimeFormatter1 = partial0.getFormatter();\n}",
    "testName" : "test07479"
  },
  "test04246" : {
    "methodSignature" : "public DateTimeFieldType[] getFieldTypes()",
    "methodName" : "getFieldTypes",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04246() throws Throwable {\n    int[] intArray0 = new int[2];\n    GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();\n    Partial partial0 = new Partial(gregorianChronology0, (DateTimeFieldType[]) null, intArray0);\n    partial0.getFieldTypes();\n}",
    "testName" : "test04246"
  },
  "test103112" : {
    "methodSignature" : "public Partial(DateTimeFieldType[] types, int[] values)",
    "methodName" : "Partial",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103112() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[6];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyear();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.yearOfCentury();\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType1;\n    dateTimeFieldTypeArray0[2] = dateTimeFieldType0;\n    dateTimeFieldTypeArray0[3] = dateTimeFieldTypeArray0[2];\n    dateTimeFieldTypeArray0[4] = dateTimeFieldTypeArray0[2];\n    dateTimeFieldTypeArray0[5] = dateTimeFieldTypeArray0[0];\n    int[] intArray0 = new int[6];\n    Partial partial0 = null;\n    partial0 = new Partial(dateTimeFieldTypeArray0, intArray0);\n}",
    "testName" : "test103112"
  },
  "test05054" : {
    "methodSignature" : "public Partial(DateTimeFieldType type, int value)",
    "methodName" : "Partial",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05054() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.minuteOfHour();\n    Partial partial0 = null;\n    partial0 = new Partial(dateTimeFieldType0, (-965));\n}",
    "testName" : "test05054"
  },
  "test01011" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01011() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.halfdayOfDay();\n    CopticChronology copticChronology0 = CopticChronology.getInstanceUTC();\n    Partial partial0 = new Partial(dateTimeFieldType0, 0, copticChronology0);\n    Partial partial1 = partial0.with(dateTimeFieldType0, 1);\n    partial1.size();\n}",
    "testName" : "test01011"
  },
  "test06267" : {
    "methodSignature" : "public Partial(DateTimeFieldType[] types, int[] values, Chronology chronology)",
    "methodName" : "Partial",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06267() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[3];\n    int[] intArray0 = new int[3];\n    EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstanceUTC();\n    Partial partial0 = null;\n    partial0 = new Partial(dateTimeFieldTypeArray0, intArray0, ethiopicChronology0);\n}",
    "testName" : "test06267"
  },
  "test08289" : {
    "methodSignature" : "public Partial withPeriodAdded(ReadablePeriod period, int scalar)",
    "methodName" : "withPeriodAdded",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08289() throws Throwable {\n    Partial partial0 = new Partial();\n    Hours hours0 = Hours.TWO;\n    Partial partial1 = partial0.withPeriodAdded(hours0, 0);\n}",
    "testName" : "test08289"
  },
  "test02731" : {
    "methodSignature" : "public Partial withField(DateTimeFieldType fieldType, int value)",
    "methodName" : "withField",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02731() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.halfdayOfDay();\n    Partial partial0 = new Partial(dateTimeFieldType0, 0);\n    partial0.withField(dateTimeFieldType0, 7593750);\n}",
    "testName" : "test02731"
  },
  "test01923" : {
    "methodSignature" : "protected DateTimeField getField(int index, Chronology chrono)",
    "methodName" : "getField",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01923() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyear();\n    Partial partial0 = new Partial(dateTimeFieldType0, 271);\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();\n    DateTimeField dateTimeField0 = partial0.getField(0, (Chronology) buddhistChronology0);\n}",
    "testName" : "test01923"
  },
  "test05964" : {
    "methodSignature" : "public Partial(DateTimeFieldType[] types, int[] values, Chronology chronology)",
    "methodName" : "Partial",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05964() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[6];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyear();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType0;\n    dateTimeFieldTypeArray0[2] = dateTimeFieldType0;\n    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(543);\n    ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);\n    dateTimeFieldTypeArray0[3] = dateTimeFieldType0;\n    dateTimeFieldTypeArray0[4] = dateTimeFieldTypeArray0[1];\n    dateTimeFieldTypeArray0[5] = dateTimeFieldTypeArray0[2];\n    int[] intArray0 = new int[6];\n    Partial partial0 = null;\n    partial0 = new Partial(dateTimeFieldTypeArray0, intArray0, iSOChronology0);\n}",
    "testName" : "test05964"
  },
  "test03943" : {
    "methodSignature" : "public int[] getValues()",
    "methodName" : "getValues",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03943() throws Throwable {\n    Partial partial0 = new Partial();\n    Partial partial1 = new Partial(partial0, (int[]) null);\n    partial1.getValues();\n}",
    "testName" : "test03943"
  },
  "test111120" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111120() throws Throwable {\n    Partial partial0 = new Partial();\n    Partial.Property partial_Property0 = new Partial.Property(partial0, (-447));\n    Partial partial1 = partial_Property0.getPartial();\n    partial1.size();\n}",
    "testName" : "test111120"
  },
  "test098106" : {
    "methodSignature" : "public Partial withChronologyRetainFields(Chronology newChronology)",
    "methodName" : "withChronologyRetainFields",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098106() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfDay();\n    Partial partial0 = new Partial(dateTimeFieldType0, 93);\n    ISOChronology iSOChronology0 = ISOChronology.getInstance();\n    Partial partial1 = partial0.withChronologyRetainFields(iSOChronology0);\n}",
    "testName" : "test098106"
  },
  "test07581" : {
    "methodSignature" : "public String toString(String pattern)",
    "methodName" : "toString",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07581() throws Throwable {\n    LocalTime localTime0 = LocalTime.MIDNIGHT;\n    Partial partial0 = new Partial(localTime0);\n    String string0 = partial0.toString((String) null);\n}",
    "testName" : "test07581"
  },
  "test08390" : {
    "methodSignature" : "public Partial withPeriodAdded(ReadablePeriod period, int scalar)",
    "methodName" : "withPeriodAdded",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08390() throws Throwable {\n    GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[4];\n    int[] intArray0 = new int[1];\n    Partial partial0 = new Partial(gregorianChronology0, dateTimeFieldTypeArray0, intArray0);\n    Partial partial1 = partial0.withPeriodAdded((ReadablePeriod) null, (-1964));\n}",
    "testName" : "test08390"
  },
  "test04751" : {
    "methodSignature" : "public Partial(ReadablePartial partial)",
    "methodName" : "Partial",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04751() throws Throwable {\n    JulianChronology julianChronology0 = JulianChronology.getInstance();\n    MonthDay monthDay0 = new MonthDay((Chronology) julianChronology0);\n    int[] intArray0 = new int[1];\n    MonthDay monthDay1 = new MonthDay(monthDay0, intArray0);\n    Partial partial0 = null;\n    partial0 = new Partial(monthDay1);\n}",
    "testName" : "test04751"
  },
  "test07985" : {
    "methodSignature" : "public boolean isMatch(ReadableInstant instant)",
    "methodName" : "isMatch",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07985() throws Throwable {\n    MockDate mockDate0 = new MockDate(2066, 11, 2284, 91, 11);\n    LocalDate localDate0 = LocalDate.fromDateFields(mockDate0);\n    Partial partial0 = new Partial(localDate0);\n    GJChronology gJChronology0 = GJChronology.getInstanceUTC();\n    Instant instant0 = gJChronology0.getGregorianCutover();\n    boolean boolean0 = partial0.isMatch((ReadableInstant) instant0);\n}",
    "testName" : "test07985"
  },
  "test106115" : {
    "methodSignature" : "public boolean isMatch(ReadablePartial partial)",
    "methodName" : "isMatch",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106115() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[0];\n    int[] intArray0 = new int[0];\n    DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();\n    CopticChronology copticChronology0 = CopticChronology.getInstance(dateTimeZone0);\n    Partial partial0 = new Partial(dateTimeFieldTypeArray0, intArray0, copticChronology0);\n    partial0.isMatch((ReadablePartial) null);\n}",
    "testName" : "test106115"
  },
  "test06772" : {
    "methodSignature" : "public Chronology getChronology()",
    "methodName" : "getChronology",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06772() throws Throwable {\n    CopticChronology copticChronology0 = CopticChronology.getInstanceUTC();\n    Partial partial0 = new Partial(copticChronology0);\n    CopticChronology copticChronology1 = (CopticChronology) partial0.getChronology();\n}",
    "testName" : "test06772"
  },
  "test08795" : {
    "methodSignature" : "public Partial withFieldAdded(DurationFieldType fieldType, int amount)",
    "methodName" : "withFieldAdded",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08795() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfDay();\n    DurationFieldType durationFieldType0 = dateTimeFieldType0.getDurationType();\n    Partial partial0 = new Partial(dateTimeFieldType0, 1, (Chronology) null);\n    partial0.withFieldAdded(durationFieldType0, (-603));\n}",
    "testName" : "test08795"
  },
  "test03539" : {
    "methodSignature" : "public String toString(String pattern)",
    "methodName" : "toString",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03539() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfDay();\n    Partial partial0 = new Partial(dateTimeFieldType0, 0);\n    partial0.toString(\"The field type must not be null\");\n}",
    "testName" : "test03539"
  },
  "test04347" : {
    "methodSignature" : "public DateTimeFieldType getFieldType(int index)",
    "methodName" : "getFieldType",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04347() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.halfdayOfDay();\n    CopticChronology copticChronology0 = CopticChronology.getInstanceUTC();\n    Partial partial0 = new Partial(dateTimeFieldType0, 0, copticChronology0);\n    partial0.getFieldType(90);\n}",
    "testName" : "test04347"
  },
  "test02327" : {
    "methodSignature" : "public Partial withFieldAdded(DurationFieldType fieldType, int amount)",
    "methodName" : "withFieldAdded",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02327() throws Throwable {\n    GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[4];\n    int[] intArray0 = new int[1];\n    Partial partial0 = new Partial(gregorianChronology0, dateTimeFieldTypeArray0, intArray0);\n    Minutes minutes0 = Minutes.minutesIn((ReadableInterval) null);\n    DurationFieldType durationFieldType0 = minutes0.getFieldType();\n    partial0.withFieldAdded(durationFieldType0, 0);\n}",
    "testName" : "test02327"
  },
  "test05559" : {
    "methodSignature" : "public boolean isPrinter()",
    "methodName" : "isPrinter",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05559() throws Throwable {\n    YearMonth yearMonth0 = new YearMonth((Object) null);\n    Partial partial0 = new Partial(yearMonth0);\n    DateTimeFormatter dateTimeFormatter0 = partial0.getFormatter();\n    dateTimeFormatter0.isPrinter();\n}",
    "testName" : "test05559"
  },
  "test112121" : {
    "methodSignature" : "public DateTimeFieldType[] getFieldTypes()",
    "methodName" : "getFieldTypes",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112121() throws Throwable {\n    DateTimePrinter dateTimePrinter0 = mock(DateTimePrinter.class, new ViolatedAssumptionAnswer());\n    DateTimeParser dateTimeParser0 = mock(DateTimeParser.class, new ViolatedAssumptionAnswer());\n    doReturn(52).when(dateTimeParser0).parseInto(any(org.joda.time.format.DateTimeParserBucket.class), anyString(), anyInt());\n    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimePrinter0, dateTimeParser0);\n    LocalDateTime localDateTime0 = LocalDateTime.parse(\"\", dateTimeFormatter0);\n    Partial partial0 = new Partial(localDateTime0);\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = partial0.getFieldTypes();\n}",
    "testName" : "test112121"
  },
  "test01519" : {
    "methodSignature" : "public boolean equals(Object partial)",
    "methodName" : "equals",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01519() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.hourOfDay();\n    Partial partial0 = new Partial(dateTimeFieldType0, 0);\n    Days days0 = Days.ZERO;\n    Minutes minutes0 = days0.toStandardMinutes();\n    Weeks weeks0 = minutes0.toStandardWeeks();\n    Partial partial1 = partial0.minus(weeks0);\n    partial1.equals((Object) partial0);\n}",
    "testName" : "test01519"
  },
  "test01518" : {
    "methodSignature" : "public Partial minus(ReadablePeriod period)",
    "methodName" : "minus",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01518() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.hourOfDay();\n    Partial partial0 = new Partial(dateTimeFieldType0, 0);\n    Days days0 = Days.ZERO;\n    Minutes minutes0 = days0.toStandardMinutes();\n    Weeks weeks0 = minutes0.toStandardWeeks();\n    Partial partial1 = partial0.minus(weeks0);\n}",
    "testName" : "test01518"
  },
  "test095103" : {
    "methodSignature" : "public Partial with(DateTimeFieldType fieldType, int value)",
    "methodName" : "with",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095103() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.era();\n    Partial partial0 = new Partial();\n    partial0.with(dateTimeFieldType0, 8);\n}",
    "testName" : "test095103"
  },
  "test09199" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09199() throws Throwable {\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyear();\n    Partial partial0 = new Partial(dateTimeFieldType0, 2881);\n    DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.yearOfEra();\n    Partial partial1 = partial0.without(dateTimeFieldType1);\n    partial1.size();\n}",
    "testName" : "test09199"
  },
  "test07176" : {
    "methodSignature" : "public String toString(String pattern, Locale locale)",
    "methodName" : "toString",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07176() throws Throwable {\n    EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstanceUTC();\n    Partial partial0 = new Partial(ethiopicChronology0);\n    String string0 = partial0.toString((String) null, (Locale) null);\n}",
    "testName" : "test07176"
  },
  "test0077" : {
    "methodSignature" : "int size()",
    "methodName" : "size",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0077() throws Throwable {\n    GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();\n    Partial partial0 = new Partial(gregorianChronology0);\n    Partial.Property partial_Property0 = new Partial.Property(partial0, 1334);\n    ReadablePartial readablePartial0 = partial_Property0.getReadablePartial();\n    readablePartial0.size();\n}",
    "testName" : "test0077"
  },
  "test06368" : {
    "methodSignature" : "public Partial(DateTimeFieldType[] types, int[] values, Chronology chronology)",
    "methodName" : "Partial",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06368() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[0];\n    int[] intArray0 = new int[3];\n    EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstanceUTC();\n    Partial partial0 = null;\n    partial0 = new Partial(dateTimeFieldTypeArray0, intArray0, ethiopicChronology0);\n}",
    "testName" : "test06368"
  },
  "test101110" : {
    "methodSignature" : "public Partial(DateTimeFieldType[] types, int[] values, Chronology chronology)",
    "methodName" : "Partial",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101110() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[6];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyear();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.yearOfCentury();\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType1;\n    DateTimeFieldType dateTimeFieldType2 = DateTimeFieldType.dayOfYear();\n    dateTimeFieldTypeArray0[2] = dateTimeFieldType2;\n    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(543);\n    ISOChronology iSOChronology0 = ISOChronology.getInstance(dateTimeZone0);\n    DateTimeFieldType dateTimeFieldType3 = DateTimeFieldType.dayOfWeek();\n    dateTimeFieldTypeArray0[3] = dateTimeFieldType3;\n    dateTimeFieldTypeArray0[4] = dateTimeFieldType3;\n    dateTimeFieldTypeArray0[5] = dateTimeFieldTypeArray0[1];\n    int[] intArray0 = new int[6];\n    Partial partial0 = null;\n    partial0 = new Partial(dateTimeFieldTypeArray0, intArray0, iSOChronology0);\n}",
    "testName" : "test101110"
  },
  "test03135" : {
    "methodSignature" : "public Partial withChronologyRetainFields(Chronology newChronology)",
    "methodName" : "withChronologyRetainFields",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03135() throws Throwable {\n    ISOChronology iSOChronology0 = ISOChronology.getInstance();\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[5];\n    Partial partial0 = new Partial(iSOChronology0, dateTimeFieldTypeArray0, (int[]) null);\n    partial0.withChronologyRetainFields(iSOChronology0);\n}",
    "testName" : "test03135"
  },
  "test01112" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01112() throws Throwable {\n    Partial partial0 = new Partial();\n    int int0 = partial0.size();\n}",
    "testName" : "test01112"
  },
  "test05155" : {
    "methodSignature" : "public String toStringList()",
    "methodName" : "toStringList",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05155() throws Throwable {\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[7];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyearOfCentury();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    dateTimeFieldTypeArray0[1] = dateTimeFieldType0;\n    dateTimeFieldTypeArray0[2] = dateTimeFieldType0;\n    dateTimeFieldTypeArray0[3] = dateTimeFieldTypeArray0[1];\n    dateTimeFieldTypeArray0[4] = dateTimeFieldTypeArray0[0];\n    dateTimeFieldTypeArray0[5] = dateTimeFieldTypeArray0[0];\n    dateTimeFieldTypeArray0[6] = dateTimeFieldTypeArray0[1];\n    int[] intArray0 = new int[21];\n    Partial partial0 = new Partial((Chronology) null, dateTimeFieldTypeArray0, intArray0);\n    String string0 = partial0.toStringList();\n}",
    "testName" : "test05155"
  },
  "test02832" : {
    "methodSignature" : "public Partial withField(DateTimeFieldType fieldType, int value)",
    "methodName" : "withField",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02832() throws Throwable {\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();\n    StrictChronology strictChronology0 = StrictChronology.getInstance(buddhistChronology0);\n    LenientChronology lenientChronology0 = LenientChronology.getInstance(strictChronology0);\n    LocalDateTime localDateTime0 = new LocalDateTime(995, 482, 995, (-1346), 0, 1526, 2358, lenientChronology0);\n    Partial partial0 = new Partial(localDateTime0);\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.halfdayOfDay();\n    partial0.withField(dateTimeFieldType0, 3);\n}",
    "testName" : "test02832"
  },
  "test01620" : {
    "methodSignature" : "public int[] getValues()",
    "methodName" : "getValues",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01620() throws Throwable {\n    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();\n    Partial partial0 = new Partial(buddhistChronology0);\n    int[] intArray0 = partial0.getValues();\n}",
    "testName" : "test01620"
  },
  "test092100" : {
    "methodSignature" : "public Partial with(DateTimeFieldType fieldType, int value)",
    "methodName" : "with",
    "className" : "org.joda.time.Partial",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092100() throws Throwable {\n    GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();\n    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[4];\n    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.halfdayOfDay();\n    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;\n    int[] intArray0 = new int[1];\n    intArray0[0] = (-1964);\n    Partial partial0 = new Partial(gregorianChronology0, dateTimeFieldTypeArray0, intArray0);\n    Partial partial1 = partial0.with(dateTimeFieldType0, (-1964));\n}",
    "testName" : "test092100"
  }
}