org.joda.time.Partial,@Test(timeout = 4000)
public void test0044() throws Throwable {
    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekOfWeekyear();
    Partial partial0 = new Partial(dateTimeFieldType0, 44);
    Partial.Property partial_Property0 = partial0.property(dateTimeFieldType0);
    DateTimeField dateTimeField0 = partial_Property0.getField();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Time_4b/src/main/java/org/joda/time/Partial/Property.java
org.joda.time.Partial,@Test(timeout = 4000)
public void test0055() throws Throwable {
    DateTimePrinter dateTimePrinter0 = mock(DateTimePrinter.class, new ViolatedAssumptionAnswer());
    DateTimeParser dateTimeParser0 = mock(DateTimeParser.class, new ViolatedAssumptionAnswer());
    doReturn(52).when(dateTimeParser0).parseInto(any(org.joda.time.format.DateTimeParserBucket.class), anyString(), anyInt());
    DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimePrinter0, dateTimeParser0);
    LocalDateTime localDateTime0 = LocalDateTime.parse("""", dateTimeFormatter0);
    Partial partial0 = new Partial(localDateTime0);
    DateTimeFieldType dateTimeFieldType0 = partial0.getFieldType(0);
    Partial.Property partial_Property0 = partial0.property(dateTimeFieldType0);
    Locale locale0 = new Locale("""", ""[year=0, monthOfYear=1, dayOfMonth=1, millisOfDay=0]"", ""[year=0, monthOfYear=1, dayOfMonth=1, millisOfDay=0]"");
    partial_Property0.setCopy(""PH+jQO"", locale0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Time_4b/src/main/java/org/joda/time/Partial/Property.java
org.joda.time.Partial,@Test(timeout = 4000)
public void test0066() throws Throwable {
    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.hourOfDay();
    Partial partial0 = new Partial(dateTimeFieldType0, 0);
    Partial.Property partial_Property0 = partial0.property(dateTimeFieldType0);
    partial_Property0.setCopy(28265625);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Time_4b/src/main/java/org/joda/time/Partial/Property.java
org.joda.time.Partial,@Test(timeout = 4000)
public void test0077() throws Throwable {
    GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
    Partial partial0 = new Partial(gregorianChronology0);
    Partial.Property partial_Property0 = new Partial.Property(partial0, 1334);
    ReadablePartial readablePartial0 = partial_Property0.getReadablePartial();
    readablePartial0.size();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Partial,@Test(timeout = 4000)
public void test0088() throws Throwable {
    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetHoursMinutes(0, 0);
    IslamicChronology.LeapYearPatternType islamicChronology_LeapYearPatternType0 = IslamicChronology.LEAP_YEAR_INDIAN;
    IslamicChronology islamicChronology0 = IslamicChronology.getInstance(dateTimeZone0, islamicChronology_LeapYearPatternType0);
    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[3];
    int[] intArray0 = new int[5];
    Partial partial0 = new Partial(islamicChronology0, dateTimeFieldTypeArray0, intArray0);
    Partial.Property partial_Property0 = new Partial.Property(partial0, 776);
    partial_Property0.get();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Time_4b/src/main/java/org/joda/time/Partial/Property.java
org.joda.time.Partial,@Test(timeout = 4000)
public void test00910() throws Throwable {
    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[5];
    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfDay();
    dateTimeFieldTypeArray0[0] = dateTimeFieldType0;
    DurationFieldType durationFieldType0 = dateTimeFieldType0.getDurationType();
    Partial partial0 = new Partial(dateTimeFieldTypeArray0[0], 2390, (Chronology) null);
    Partial partial1 = partial0.withFieldAdded(durationFieldType0, 256);
    partial1.equals((Object) partial0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Partial,@Test(timeout = 4000)
public void test01213() throws Throwable {
    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyear();
    ISOChronology iSOChronology0 = ISOChronology.getInstance();
    DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis((-883));
    ZonedChronology zonedChronology0 = ZonedChronology.getInstance(iSOChronology0, dateTimeZone0);
    Partial partial0 = new Partial(dateTimeFieldType0, (-883), zonedChronology0);
    Partial.Property partial_Property0 = partial0.property(dateTimeFieldType0);
    Partial partial1 = partial_Property0.setCopy((-883));
    partial1.equals((Object) partial0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Partial,@Test(timeout = 4000)
public void test01314() throws Throwable {
    Partial partial0 = new Partial();
    Period period0 = Period.seconds(3198);
    Seconds seconds0 = Seconds.standardSecondsIn(period0);
    Partial partial1 = partial0.plus(seconds0);
    partial1.equals((Object) partial0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Partial,@Test(timeout = 4000)
public void test01417() throws Throwable {
    Partial partial0 = new Partial();
    PeriodType periodType0 = PeriodType.hours();
    Period period0 = new Period(493L, periodType0);
    Partial partial1 = partial0.minus(period0);
    partial1.equals((Object) partial0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Partial,@Test(timeout = 4000)
public void test01519() throws Throwable {
    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.hourOfDay();
    Partial partial0 = new Partial(dateTimeFieldType0, 0);
    Days days0 = Days.ZERO;
    Minutes minutes0 = days0.toStandardMinutes();
    Weeks weeks0 = minutes0.toStandardWeeks();
    Partial partial1 = partial0.minus(weeks0);
    partial1.equals((Object) partial0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Partial,@Test(timeout = 4000)
public void test05559() throws Throwable {
    YearMonth yearMonth0 = new YearMonth((Object) null);
    Partial partial0 = new Partial(yearMonth0);
    DateTimeFormatter dateTimeFormatter0 = partial0.getFormatter();
    dateTimeFormatter0.isPrinter();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Partial,@Test(timeout = 4000)
public void test05762() throws Throwable {
    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance((DateTimeZone) null);
    Months months0 = Months.NINE;
    Partial partial0 = new Partial(buddhistChronology0);
    Partial partial1 = partial0.withPeriodAdded(months0, 1);
    partial1.equals((Object) partial0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Partial,@Test(timeout = 4000)
public void test08188() throws Throwable {
    LocalTime localTime0 = new LocalTime(0L, (DateTimeZone) null);
    GregorianChronology gregorianChronology0 = GregorianChronology.getInstance((DateTimeZone) null);
    StrictChronology strictChronology0 = StrictChronology.getInstance(gregorianChronology0);
    Period period0 = new Period(0L, 0L, strictChronology0);
    Partial partial0 = new Partial(localTime0);
    Partial partial1 = partial0.plus(period0);
    partial1.equals((Object) partial0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Partial,@Test(timeout = 4000)
public void test08593() throws Throwable {
    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.yearOfEra();
    DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.dayOfYear();
    DurationFieldType durationFieldType0 = dateTimeFieldType1.getRangeDurationType();
    Partial partial0 = new Partial(dateTimeFieldType0, 3405, (Chronology) null);
    Partial partial1 = partial0.withFieldAddWrapped(durationFieldType0, (-1));
    partial1.equals((Object) partial0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.joda.time.Partial,@Test(timeout = 4000)
public void test108117() throws Throwable {
    Partial partial0 = new Partial();
    Partial.Property partial_Property0 = new Partial.Property(partial0, 0);
    partial_Property0.withMinimumValue();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Time_4b/src/main/java/org/joda/time/Partial/Property.java
org.joda.time.Partial,@Test(timeout = 4000)
public void test109118() throws Throwable {
    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfDay();
    Partial partial0 = new Partial(dateTimeFieldType0, 93);
    Partial.Property partial_Property0 = partial0.property(dateTimeFieldType0);
    Partial partial1 = partial_Property0.withMaximumValue();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Time_4b/src/main/java/org/joda/time/Partial/Property.java
org.joda.time.Partial,@Test(timeout = 4000)
public void test110119() throws Throwable {
    FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone) DateTimeZone.UTC;
    BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance((DateTimeZone) fixedDateTimeZone0);
    DateTimeFieldType[] dateTimeFieldTypeArray0 = new DateTimeFieldType[5];
    int[] intArray0 = new int[5];
    Partial partial0 = new Partial(buddhistChronology0, dateTimeFieldTypeArray0, intArray0);
    Partial.Property partial_Property0 = new Partial.Property(partial0, 1072);
    partial_Property0.setCopy("""");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Time_4b/src/main/java/org/joda/time/Partial/Property.java
org.joda.time.Partial,@Test(timeout = 4000)
public void test114123() throws Throwable {
    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfDay();
    Partial partial0 = new Partial(dateTimeFieldType0, 93);
    Partial.Property partial_Property0 = partial0.property(dateTimeFieldType0);
    Partial partial1 = partial_Property0.addWrapFieldToCopy(93);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Time_4b/src/main/java/org/joda/time/Partial/Property.java
org.joda.time.Partial,@Test(timeout = 4000)
public void test115124() throws Throwable {
    DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfDay();
    Partial partial0 = new Partial(dateTimeFieldType0, 106);
    Partial.Property partial_Property0 = partial0.property(dateTimeFieldType0);
    Partial partial1 = partial_Property0.addToCopy(106);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Time_4b/src/main/java/org/joda/time/Partial/Property.java
