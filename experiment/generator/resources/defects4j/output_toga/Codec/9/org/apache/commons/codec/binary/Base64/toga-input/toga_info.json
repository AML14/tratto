{
  "test2026" : {
    "methodSignature" : "public static byte[] decodeBase64(byte[] base64Data)",
    "methodName" : "decodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2026() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    byteArray0[3] = (byte) 43;\n    byteArray0[5] = (byte) 56;\n    byte[] byteArray1 = Base64.decodeBase64(byteArray0);\n}",
    "testName" : "test2026"
  },
  "test3239" : {
    "methodSignature" : "public static BigInteger decodeInteger(byte[] pArray)",
    "methodName" : "decodeInteger",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3239() throws Throwable {\n    Base64.decodeInteger((byte[]) null);\n}",
    "testName" : "test3239"
  },
  "test4963" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4963() throws Throwable {\n    Base64 base64_0 = new Base64((-2737), (byte[]) null);\n    base64_0.decode((byte[]) null, 76, (-1));\n    base64_0.isUrlSafe();\n}",
    "testName" : "test4963"
  },
  "test1216" : {
    "methodSignature" : "public static byte[] encodeBase64Chunked(byte[] binaryData)",
    "methodName" : "encodeBase64Chunked",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1216() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);\n}",
    "testName" : "test1216"
  },
  "test068" : {
    "methodSignature" : "public static String encodeBase64URLSafeString(byte[] binaryData)",
    "methodName" : "encodeBase64URLSafeString",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068() throws Throwable {\n    String string0 = Base64.encodeBase64URLSafeString((byte[]) null);\n}",
    "testName" : "test068"
  },
  "test5772" : {
    "methodSignature" : "public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize)",
    "methodName" : "encodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5772() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    byte[] byteArray1 = Base64.encodeBase64(byteArray0, false);\n    byte[] byteArray2 = Base64.encodeBase64(byteArray1, false, false, 567);\n}",
    "testName" : "test5772"
  },
  "test87121" : {
    "methodSignature" : "public static String encodeBase64URLSafeString(byte[] binaryData)",
    "methodName" : "encodeBase64URLSafeString",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test87121() throws Throwable {\n    byte[] byteArray0 = Base64.decodeBase64(\"lineSeperator must not contain base64 characters: [\");\n    String string0 = Base64.encodeBase64URLSafeString(byteArray0);\n}",
    "testName" : "test87121"
  },
  "test6584" : {
    "methodSignature" : "static byte[] discardWhitespace(byte[] data)",
    "methodName" : "discardWhitespace",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6584() throws Throwable {\n    byte[] byteArray0 = new byte[4];\n    byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);\n    byte[] byteArray2 = Base64.discardWhitespace(byteArray1);\n    //  // Unstable assertion: assertEquals(10, byteArray2.length);\n    //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)61, (byte)61, (byte)0, (byte)0}, byteArray2);\n}",
    "testName" : "test6584"
  },
  "test7398" : {
    "methodSignature" : "void decode(byte[] in, int inPos, int inAvail)",
    "methodName" : "decode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7398() throws Throwable {\n    Base64 base64_0 = new Base64();\n    byte[] byteArray0 = new byte[5];\n    byte[] byteArray1 = base64_0.encode(byteArray0);\n    base64_0.decode(byteArray0, 1, 296);\n}",
    "testName" : "test7398"
  },
  "test90124" : {
    "methodSignature" : "public String encodeToString(byte[] pArray)",
    "methodName" : "encodeToString",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test90124() throws Throwable {\n    byte[] byteArray0 = new byte[1];\n    Base64 base64_0 = new Base64((-3966), (byte[]) null);\n    String string0 = base64_0.encodeToString(byteArray0);\n}",
    "testName" : "test90124"
  },
  "test7396" : {
    "methodSignature" : "public byte[] encode(byte[] pArray)",
    "methodName" : "encode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7396() throws Throwable {\n    Base64 base64_0 = new Base64();\n    byte[] byteArray0 = new byte[5];\n    byte[] byteArray1 = base64_0.encode(byteArray0);\n}",
    "testName" : "test7396"
  },
  "test3644" : {
    "methodSignature" : "public byte[] decode(byte[] pArray)",
    "methodName" : "decode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3644() throws Throwable {\n    Base64 base64_0 = new Base64(0, (byte[]) null);\n    byte[] byteArray0 = base64_0.decode((byte[]) null);\n}",
    "testName" : "test3644"
  },
  "test1621" : {
    "methodSignature" : "public static byte[] encodeBase64(byte[] binaryData, boolean isChunked)",
    "methodName" : "encodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1621() throws Throwable {\n    byte[] byteArray0 = new byte[3];\n    byte[] byteArray1 = Base64.encodeBase64(byteArray0, true);\n    //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)65, (byte) (-8), (byte)0}, byteArray1);\n}",
    "testName" : "test1621"
  },
  "test4457" : {
    "methodSignature" : "void decode(byte[] in, int inPos, int inAvail)",
    "methodName" : "decode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4457() throws Throwable {\n    Base64 base64_0 = new Base64(false);\n    byte[] byteArray0 = new byte[0];\n    byte[] byteArray1 = base64_0.decode(\"+&OxR7{L] |au,X\");\n    byte[] byteArray2 = base64_0.encode(byteArray0);\n    base64_0.decode(byteArray1, 0, 0);\n}",
    "testName" : "test4457"
  },
  "test3645" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3645() throws Throwable {\n    Base64 base64_0 = new Base64(0, (byte[]) null);\n    byte[] byteArray0 = base64_0.decode((byte[]) null);\n    base64_0.isUrlSafe();\n}",
    "testName" : "test3645"
  },
  "test2430" : {
    "methodSignature" : "public byte[] decode(String pArray)",
    "methodName" : "decode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2430() throws Throwable {\n    Base64 base64_0 = new Base64(false);\n    byte[] byteArray0 = base64_0.decode((String) null);\n}",
    "testName" : "test2430"
  },
  "test4456" : {
    "methodSignature" : "public byte[] encode(byte[] pArray)",
    "methodName" : "encode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4456() throws Throwable {\n    Base64 base64_0 = new Base64(false);\n    byte[] byteArray0 = new byte[0];\n    byte[] byteArray1 = base64_0.decode(\"+&OxR7{L] |au,X\");\n    byte[] byteArray2 = base64_0.encode(byteArray0);\n}",
    "testName" : "test4456"
  },
  "test2431" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2431() throws Throwable {\n    Base64 base64_0 = new Base64(false);\n    byte[] byteArray0 = base64_0.decode((String) null);\n    base64_0.isUrlSafe();\n}",
    "testName" : "test2431"
  },
  "test84117" : {
    "methodSignature" : "public Base64(int lineLength, byte[] lineSeparator)",
    "methodName" : "Base64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test84117() throws Throwable {\n    byte[] byteArray0 = new byte[32];\n    byte[] byteArray1 = Base64.encodeBase64(byteArray0, true, true);\n    Base64 base64_0 = null;\n    base64_0 = new Base64(98, byteArray1);\n}",
    "testName" : "test84117"
  },
  "test0812" : {
    "methodSignature" : "public static byte[] encodeBase64URLSafe(byte[] binaryData)",
    "methodName" : "encodeBase64URLSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0812() throws Throwable {\n    byte[] byteArray0 = Base64.encodeBase64URLSafe((byte[]) null);\n}",
    "testName" : "test0812"
  },
  "test2835" : {
    "methodSignature" : "public static boolean isBase64(String base64)",
    "methodName" : "isBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2835() throws Throwable {\n    Base64.isBase64((String) null);\n}",
    "testName" : "test2835"
  },
  "test5266" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5266() throws Throwable {\n    byte[] byteArray0 = new byte[1];\n    Base64 base64_0 = new Base64();\n    base64_0.encode(byteArray0, (-728), (int) (byte) 0);\n    base64_0.isUrlSafe();\n}",
    "testName" : "test5266"
  },
  "test76102" : {
    "methodSignature" : "public static byte[] encodeBase64(byte[] binaryData)",
    "methodName" : "encodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test76102() throws Throwable {\n    BigInteger bigInteger0 = BigInteger.ONE;\n    byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);\n    byte[] byteArray1 = Base64.encodeBase64URLSafe(byteArray0);\n    byte[] byteArray2 = Base64.encodeBase64(byteArray1);\n}",
    "testName" : "test76102"
  },
  "test6990" : {
    "methodSignature" : "public Object decode(Object pObject) throws DecoderException",
    "methodName" : "decode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6990() throws Throwable {\n    byte[] byteArray0 = new byte[8];\n    BigInteger bigInteger0 = Base64.decodeInteger(byteArray0);\n    Base64 base64_0 = new Base64(false);\n    base64_0.decode((Object) bigInteger0);\n}",
    "testName" : "test6990"
  },
  "test4052" : {
    "methodSignature" : "public static boolean isBase64(byte octet)",
    "methodName" : "isBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4052() throws Throwable {\n    boolean boolean0 = Base64.isBase64((byte) 0);\n}",
    "testName" : "test4052"
  },
  "test6076" : {
    "methodSignature" : "public Object encode(Object pObject) throws EncoderException",
    "methodName" : "encode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6076() throws Throwable {\n    byte[] byteArray0 = new byte[3];\n    Base64 base64_0 = new Base64((byte) 36, byteArray0);\n    BigInteger bigInteger0 = BigInteger.TEN;\n    base64_0.encode((Object) bigInteger0);\n}",
    "testName" : "test6076"
  },
  "test3138" : {
    "methodSignature" : "static byte[] discardWhitespace(byte[] data)",
    "methodName" : "discardWhitespace",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3138() throws Throwable {\n    Base64.discardWhitespace((byte[]) null);\n}",
    "testName" : "test3138"
  },
  "test1115" : {
    "methodSignature" : "public static byte[] encodeBase64Chunked(byte[] binaryData)",
    "methodName" : "encodeBase64Chunked",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1115() throws Throwable {\n    byte[] byteArray0 = Base64.encodeBase64Chunked((byte[]) null);\n}",
    "testName" : "test1115"
  },
  "test6889" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6889() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    Base64 base64_0 = new Base64((byte) 1, byteArray0, false);\n    base64_0.decode(\"\");\n    base64_0.isUrlSafe();\n}",
    "testName" : "test6889"
  },
  "test4862" : {
    "methodSignature" : "void decode(byte[] in, int inPos, int inAvail)",
    "methodName" : "decode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4862() throws Throwable {\n    Base64 base64_0 = new Base64();\n    base64_0.decode((byte[]) null, (int) (byte) (-43), 1);\n}",
    "testName" : "test4862"
  },
  "test011" : {
    "methodSignature" : "public byte[] encode(byte[] pArray)",
    "methodName" : "encode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Base64 base64_0 = new Base64(0);\n    byte[] byteArray0 = new byte[7];\n    byteArray0[3] = (byte) (-106);\n    byte[] byteArray1 = base64_0.encode(byteArray0);\n}",
    "testName" : "test011"
  },
  "test81114" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test81114() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    Base64 base64_0 = new Base64((byte) 1, byteArray0, false);\n    base64_0.encode(byteArray0, (int) (byte) (-1), (int) (byte) (-1));\n    boolean boolean0 = base64_0.hasData();\n    base64_0.isUrlSafe();\n}",
    "testName" : "test81114"
  },
  "test81113" : {
    "methodSignature" : "boolean hasData()",
    "methodName" : "hasData",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test81113() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    Base64 base64_0 = new Base64((byte) 1, byteArray0, false);\n    base64_0.encode(byteArray0, (int) (byte) (-1), (int) (byte) (-1));\n    boolean boolean0 = base64_0.hasData();\n}",
    "testName" : "test81113"
  },
  "test2329" : {
    "methodSignature" : "public static byte[] decodeBase64(String base64String)",
    "methodName" : "decodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2329() throws Throwable {\n    byte[] byteArray0 = Base64.decodeBase64(\"))%\");\n}",
    "testName" : "test2329"
  },
  "test75101" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test75101() throws Throwable {\n    Base64 base64_0 = new Base64(true);\n    byte[] byteArray0 = new byte[4];\n    base64_0.encode(byteArray0, (int) (byte) (-19), (-148));\n    base64_0.isUrlSafe();\n}",
    "testName" : "test75101"
  },
  "test89123" : {
    "methodSignature" : "public static String encodeBase64String(byte[] binaryData)",
    "methodName" : "encodeBase64String",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test89123() throws Throwable {\n    String string0 = Base64.encodeBase64String((byte[]) null);\n}",
    "testName" : "test89123"
  },
  "test92126" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test92126() throws Throwable {\n    Base64 base64_0 = new Base64();\n    boolean boolean0 = base64_0.hasData();\n    base64_0.isUrlSafe();\n}",
    "testName" : "test92126"
  },
  "test92127" : {
    "methodSignature" : "boolean hasData()",
    "methodName" : "hasData",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test92127() throws Throwable {\n    Base64 base64_0 = new Base64();\n    boolean boolean0 = base64_0.hasData();\n}",
    "testName" : "test92127"
  },
  "test5670" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5670() throws Throwable {\n    Base64 base64_0 = new Base64((-2149), (byte[]) null, false);\n    String string0 = base64_0.encodeToString((byte[]) null);\n    base64_0.isUrlSafe();\n}",
    "testName" : "test5670"
  },
  "test5671" : {
    "methodSignature" : "public String encodeToString(byte[] pArray)",
    "methodName" : "encodeToString",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5671() throws Throwable {\n    Base64 base64_0 = new Base64((-2149), (byte[]) null, false);\n    String string0 = base64_0.encodeToString((byte[]) null);\n}",
    "testName" : "test5671"
  },
  "test6481" : {
    "methodSignature" : "static byte[] discardWhitespace(byte[] data)",
    "methodName" : "discardWhitespace",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6481() throws Throwable {\n    byte[] byteArray0 = new byte[8];\n    byteArray0[0] = (byte) 32;\n    byte[] byteArray1 = Base64.discardWhitespace(byteArray0);\n}",
    "testName" : "test6481"
  },
  "test7294" : {
    "methodSignature" : "public byte[] decode(byte[] pArray)",
    "methodName" : "decode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7294() throws Throwable {\n    byte[] byteArray0 = new byte[1];\n    Base64 base64_0 = new Base64((-3966), (byte[]) null);\n    byte[] byteArray1 = Base64.encodeBase64(byteArray0, false, false);\n    byte[] byteArray2 = base64_0.decode(byteArray1);\n}",
    "testName" : "test7294"
  },
  "test1520" : {
    "methodSignature" : "public static byte[] encodeBase64(byte[] binaryData, boolean isChunked)",
    "methodName" : "encodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1520() throws Throwable {\n    byte[] byteArray0 = Base64.encodeBase64((byte[]) null, false);\n}",
    "testName" : "test1520"
  },
  "test5569" : {
    "methodSignature" : "public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe)",
    "methodName" : "Base64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5569() throws Throwable {\n    byte[] byteArray0 = new byte[2];\n    byteArray0[0] = (byte) 79;\n    Base64 base64_0 = null;\n    base64_0 = new Base64((-1551), byteArray0, false);\n}",
    "testName" : "test5569"
  },
  "test3543" : {
    "methodSignature" : "public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize)",
    "methodName" : "encodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3543() throws Throwable {\n    byte[] byteArray0 = Base64.encodeBase64((byte[]) null, false, false, 76);\n}",
    "testName" : "test3543"
  },
  "test4355" : {
    "methodSignature" : "public static boolean isBase64(byte octet)",
    "methodName" : "isBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4355() throws Throwable {\n    boolean boolean0 = Base64.isBase64((byte) 61);\n}",
    "testName" : "test4355"
  },
  "test000" : {
    "methodSignature" : "public static boolean isBase64(byte[] arrayOctet)",
    "methodName" : "isBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    byteArray0[0] = (byte) 123;\n    boolean boolean0 = Base64.isBase64(byteArray0);\n}",
    "testName" : "test000"
  },
  "test0710" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0710() throws Throwable {\n    Base64 base64_0 = new Base64();\n    byte[] byteArray0 = new byte[0];\n    byte[] byteArray1 = base64_0.encode(byteArray0);\n    String string0 = Base64.encodeBase64URLSafeString(byteArray1);\n    base64_0.isUrlSafe();\n}",
    "testName" : "test0710"
  },
  "test2734" : {
    "methodSignature" : "public static boolean isBase64(byte[] arrayOctet)",
    "methodName" : "isBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2734() throws Throwable {\n    Base64.isBase64((byte[]) null);\n}",
    "testName" : "test2734"
  },
  "test86119" : {
    "methodSignature" : "public static byte[] encodeInteger(BigInteger bigInt)",
    "methodName" : "encodeInteger",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test86119() throws Throwable {\n    byte[] byteArray0 = Base64.decodeBase64(\"x$PW bOeg1/`gL<X|\");\n    BigInteger bigInteger0 = Base64.decodeInteger(byteArray0);\n    byte[] byteArray1 = Base64.encodeInteger(bigInteger0);\n}",
    "testName" : "test86119"
  },
  "test079" : {
    "methodSignature" : "public static String encodeBase64URLSafeString(byte[] binaryData)",
    "methodName" : "encodeBase64URLSafeString",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079() throws Throwable {\n    Base64 base64_0 = new Base64();\n    byte[] byteArray0 = new byte[0];\n    byte[] byteArray1 = base64_0.encode(byteArray0);\n    String string0 = Base64.encodeBase64URLSafeString(byteArray1);\n}",
    "testName" : "test079"
  },
  "test78105" : {
    "methodSignature" : "public byte[] decode(String pArray)",
    "methodName" : "decode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test78105() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    Base64 base64_0 = new Base64(1, byteArray0);\n    byte[] byteArray1 = base64_0.decode(\"4%*Y'ZxA\");\n}",
    "testName" : "test78105"
  },
  "test5165" : {
    "methodSignature" : "void encode(byte[] in, int inPos, int inAvail)",
    "methodName" : "encode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5165() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    byteArray0[4] = (byte) (-26);\n    Base64 base64_0 = new Base64(true);\n    base64_0.encode(byteArray0, (int) (byte) 3, 77);\n}",
    "testName" : "test5165"
  },
  "test78107" : {
    "methodSignature" : "int readResults(byte[] b, int bPos, int bAvail)",
    "methodName" : "readResults",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test78107() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    Base64 base64_0 = new Base64(1, byteArray0);\n    byte[] byteArray1 = base64_0.decode(\"4%*Y'ZxA\");\n    int int0 = base64_0.readResults(byteArray0, (byte) 120, (byte) 0);\n}",
    "testName" : "test78107"
  },
  "test1014" : {
    "methodSignature" : "public static String encodeBase64String(byte[] binaryData)",
    "methodName" : "encodeBase64String",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1014() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    String string0 = Base64.encodeBase64String(byteArray0);\n}",
    "testName" : "test1014"
  },
  "test3951" : {
    "methodSignature" : "public static boolean isBase64(byte octet)",
    "methodName" : "isBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3951() throws Throwable {\n    boolean boolean0 = Base64.isBase64((byte) 81);\n}",
    "testName" : "test3951"
  },
  "test5975" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5975() throws Throwable {\n    Base64 base64_0 = new Base64(0, (byte[]) null);\n    byte[] byteArray0 = base64_0.encode((byte[]) null);\n    base64_0.isUrlSafe();\n}",
    "testName" : "test5975"
  },
  "test5974" : {
    "methodSignature" : "public byte[] encode(byte[] pArray)",
    "methodName" : "encode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5974() throws Throwable {\n    Base64 base64_0 = new Base64(0, (byte[]) null);\n    byte[] byteArray0 = base64_0.encode((byte[]) null);\n}",
    "testName" : "test5974"
  },
  "test3037" : {
    "methodSignature" : "public byte[] encode(byte[] pArray)",
    "methodName" : "encode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3037() throws Throwable {\n    BigInteger bigInteger0 = BigInteger.ZERO;\n    byte[] byteArray0 = Base64.encodeInteger(bigInteger0);\n    Base64 base64_0 = new Base64((-485), byteArray0);\n    byte[] byteArray1 = new byte[9];\n    base64_0.encode(byteArray1);\n}",
    "testName" : "test3037"
  },
  "test4761" : {
    "methodSignature" : "void decode(byte[] in, int inPos, int inAvail)",
    "methodName" : "decode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4761() throws Throwable {\n    Base64 base64_0 = new Base64(14);\n    byte[] byteArray0 = new byte[5];\n    byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);\n    base64_0.decode(byteArray1, 7, (int) (byte) 6);\n    //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)61, (byte)0, (byte)0}, byteArray1);\n}",
    "testName" : "test4761"
  },
  "test6786" : {
    "methodSignature" : "static byte[] discardWhitespace(byte[] data)",
    "methodName" : "discardWhitespace",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6786() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    byteArray0[3] = (byte) 9;\n    byte[] byteArray1 = Base64.discardWhitespace(byteArray0);\n}",
    "testName" : "test6786"
  },
  "test033" : {
    "methodSignature" : "public static boolean isBase64(String base64)",
    "methodName" : "isBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    boolean boolean0 = Base64.isBase64(\"\");\n}",
    "testName" : "test033"
  },
  "test1418" : {
    "methodSignature" : "public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe)",
    "methodName" : "encodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1418() throws Throwable {\n    Base64 base64_0 = new Base64();\n    byte[] byteArray0 = new byte[0];\n    byte[] byteArray1 = base64_0.encode(byteArray0);\n    byte[] byteArray2 = Base64.encodeBase64(byteArray1, true, true);\n}",
    "testName" : "test1418"
  },
  "test1419" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1419() throws Throwable {\n    Base64 base64_0 = new Base64();\n    byte[] byteArray0 = new byte[0];\n    byte[] byteArray1 = base64_0.encode(byteArray0);\n    byte[] byteArray2 = Base64.encodeBase64(byteArray1, true, true);\n    base64_0.isUrlSafe();\n}",
    "testName" : "test1419"
  },
  "test2228" : {
    "methodSignature" : "public static byte[] decodeBase64(String base64String)",
    "methodName" : "decodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2228() throws Throwable {\n    byte[] byteArray0 = Base64.decodeBase64((String) null);\n}",
    "testName" : "test2228"
  },
  "test83116" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test83116() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    Base64 base64_0 = new Base64(1, byteArray0);\n    boolean boolean0 = base64_0.isUrlSafe();\n}",
    "testName" : "test83116"
  },
  "test6380" : {
    "methodSignature" : "public static boolean isBase64(byte[] arrayOctet)",
    "methodName" : "isBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6380() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    byteArray0[0] = (byte) 9;\n    boolean boolean0 = Base64.isBase64(byteArray0);\n}",
    "testName" : "test6380"
  },
  "test7193" : {
    "methodSignature" : "public static boolean isArrayByteBase64(byte[] arrayOctet)",
    "methodName" : "isArrayByteBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7193() throws Throwable {\n    byte[] byteArray0 = new byte[5];\n    byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);\n    Base64.isArrayByteBase64(byteArray1);\n}",
    "testName" : "test7193"
  },
  "test77103" : {
    "methodSignature" : "public byte[] decode(byte[] pArray)",
    "methodName" : "decode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test77103() throws Throwable {\n    byte[] byteArray0 = new byte[1];\n    Base64 base64_0 = new Base64((-3966), (byte[]) null);\n    byte[] byteArray1 = base64_0.decode(byteArray0);\n}",
    "testName" : "test77103"
  },
  "test77104" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test77104() throws Throwable {\n    byte[] byteArray0 = new byte[1];\n    Base64 base64_0 = new Base64((-3966), (byte[]) null);\n    byte[] byteArray1 = base64_0.decode(byteArray0);\n    base64_0.encode(byteArray0, (-3966), (int) (byte) 0);\n    base64_0.isUrlSafe();\n}",
    "testName" : "test77104"
  },
  "test2633" : {
    "methodSignature" : "int readResults(byte[] b, int bPos, int bAvail)",
    "methodName" : "readResults",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2633() throws Throwable {\n    Base64 base64_0 = new Base64((-1783));\n    byte[] byteArray0 = new byte[6];\n    base64_0.encode(byteArray0, (int) (byte) (-118), (int) (byte) (-45));\n    base64_0.readResults(byteArray0, (-767), (-391));\n}",
    "testName" : "test2633"
  },
  "test3441" : {
    "methodSignature" : "public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize)",
    "methodName" : "encodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3441() throws Throwable {\n    byte[] byteArray0 = new byte[1];\n    byte[] byteArray1 = Base64.encodeBase64(byteArray0, false, false, 64);\n}",
    "testName" : "test3441"
  },
  "test5468" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5468() throws Throwable {\n    byte[] byteArray0 = new byte[2];\n    Base64 base64_0 = new Base64((-289), byteArray0, true);\n    base64_0.isUrlSafe();\n}",
    "testName" : "test5468"
  },
  "test80110" : {
    "methodSignature" : "int avail()",
    "methodName" : "avail",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test80110() throws Throwable {\n    BigInteger bigInteger0 = BigInteger.ONE;\n    byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);\n    Base64 base64_0 = new Base64((-2998), byteArray0, false);\n    int int0 = base64_0.avail();\n}",
    "testName" : "test80110"
  },
  "test6279" : {
    "methodSignature" : "public static boolean isBase64(String base64)",
    "methodName" : "isBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6279() throws Throwable {\n    boolean boolean0 = Base64.isBase64(\"Parameter supplied to Base64 encode is not a byte[]\");\n}",
    "testName" : "test6279"
  },
  "test022" : {
    "methodSignature" : "static byte[] toIntegerBytes(BigInteger bigInt)",
    "methodName" : "toIntegerBytes",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    BigInteger bigInteger0 = Base64.decodeInteger(byteArray0);\n    byte[] byteArray1 = Base64.toIntegerBytes(bigInteger0);\n}",
    "testName" : "test022"
  },
  "test80112" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test80112() throws Throwable {\n    BigInteger bigInteger0 = BigInteger.ONE;\n    byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);\n    Base64 base64_0 = new Base64((-2998), byteArray0, false);\n    int int0 = base64_0.avail();\n    base64_0.isUrlSafe();\n}",
    "testName" : "test80112"
  },
  "test1824" : {
    "methodSignature" : "public static BigInteger decodeInteger(byte[] pArray)",
    "methodName" : "decodeInteger",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1824() throws Throwable {\n    byte[] byteArray0 = new byte[1];\n    Base64 base64_0 = new Base64((-1438), byteArray0);\n    byte[] byteArray1 = new byte[5];\n    byteArray1[3] = (byte) (-57);\n    byte[] byteArray2 = base64_0.encode(byteArray1);\n    BigInteger bigInteger0 = Base64.decodeInteger(byteArray2);\n}",
    "testName" : "test1824"
  },
  "test88122" : {
    "methodSignature" : "public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize)",
    "methodName" : "encodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test88122() throws Throwable {\n    byte[] byteArray0 = Base64.decodeBase64(\"org.apache.commons.codec.DecoderException\");\n    Base64.encodeBase64(byteArray0, true, false, 12);\n}",
    "testName" : "test88122"
  },
  "test91125" : {
    "methodSignature" : "public static byte[] decodeBase64(byte[] base64Data)",
    "methodName" : "decodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test91125() throws Throwable {\n    byte[] byteArray0 = Base64.decodeBase64((byte[]) null);\n}",
    "testName" : "test91125"
  },
  "test4254" : {
    "methodSignature" : "public static boolean isBase64(byte octet)",
    "methodName" : "isBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4254() throws Throwable {\n    boolean boolean0 = Base64.isBase64((byte) (-126));\n}",
    "testName" : "test4254"
  },
  "test5064" : {
    "methodSignature" : "void encode(byte[] in, int inPos, int inAvail)",
    "methodName" : "encode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5064() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    Base64 base64_0 = new Base64();\n    base64_0.encode(byteArray0, (int) (byte) 0, (int) (byte) 49);\n}",
    "testName" : "test5064"
  },
  "test2127" : {
    "methodSignature" : "public static byte[] decodeBase64(byte[] base64Data)",
    "methodName" : "decodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2127() throws Throwable {\n    byte[] byteArray0 = new byte[1];\n    byte[] byteArray1 = Base64.decodeBase64(byteArray0);\n}",
    "testName" : "test2127"
  },
  "test3850" : {
    "methodSignature" : "public static boolean isBase64(byte[] arrayOctet)",
    "methodName" : "isBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3850() throws Throwable {\n    byte[] byteArray0 = new byte[3];\n    byte[] byteArray1 = Base64.encodeBase64(byteArray0, true, false);\n    boolean boolean0 = Base64.isBase64(byteArray1);\n    //  // Unstable assertion: assertFalse(boolean0);\n    //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)65, (byte) (-8), (byte)0}, byteArray1);\n    //  // Unstable assertion: assertEquals(6, byteArray1.length);\n}",
    "testName" : "test3850"
  },
  "test5873" : {
    "methodSignature" : "public static byte[] encodeInteger(BigInteger bigInt)",
    "methodName" : "encodeInteger",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5873() throws Throwable {\n    Base64.encodeInteger((BigInteger) null);\n}",
    "testName" : "test5873"
  },
  "test056" : {
    "methodSignature" : "public static byte[] encodeInteger(BigInteger bigInt)",
    "methodName" : "encodeInteger",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056() throws Throwable {\n    BigInteger bigInteger0 = BigInteger.ONE;\n    byte[] byteArray0 = Base64.encodeInteger(bigInteger0);\n}",
    "testName" : "test056"
  },
  "test85118" : {
    "methodSignature" : "public static boolean isArrayByteBase64(byte[] arrayOctet)",
    "methodName" : "isArrayByteBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test85118() throws Throwable {\n    byte[] byteArray0 = new byte[1];\n    boolean boolean0 = Base64.isArrayByteBase64(byteArray0);\n}",
    "testName" : "test85118"
  },
  "test1317" : {
    "methodSignature" : "public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe)",
    "methodName" : "encodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1317() throws Throwable {\n    byte[] byteArray0 = Base64.encodeBase64((byte[]) null, true, false);\n}",
    "testName" : "test1317"
  },
  "test7092" : {
    "methodSignature" : "public Object decode(Object pObject) throws DecoderException",
    "methodName" : "decode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7092() throws Throwable {\n    BigInteger bigInteger0 = BigInteger.ONE;\n    byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);\n    Base64 base64_0 = new Base64((-2998), byteArray0, false);\n    Object object0 = base64_0.decode((Object) \"encodeInteger called with null parameter\");\n    Object object1 = base64_0.decode(object0);\n}",
    "testName" : "test7092"
  },
  "test7091" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7091() throws Throwable {\n    BigInteger bigInteger0 = BigInteger.ONE;\n    byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);\n    Base64 base64_0 = new Base64((-2998), byteArray0, false);\n    Object object0 = base64_0.decode((Object) \"encodeInteger called with null parameter\");\n    Object object1 = base64_0.decode(object0);\n    base64_0.isUrlSafe();\n}",
    "testName" : "test7091"
  },
  "test4660" : {
    "methodSignature" : "void decode(byte[] in, int inPos, int inAvail)",
    "methodName" : "decode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4660() throws Throwable {\n    byte[] byteArray0 = new byte[8];\n    byteArray0[1] = (byte) (-35);\n    Base64 base64_0 = new Base64();\n    base64_0.decode(byteArray0, (int) (byte) 1, 87);\n}",
    "testName" : "test4660"
  },
  "test6685" : {
    "methodSignature" : "public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize)",
    "methodName" : "encodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6685() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    byteArray0[0] = (byte) 10;\n    byte[] byteArray1 = Base64.discardWhitespace(byteArray0);\n    byte[] byteArray2 = Base64.encodeBase64(byteArray1, true, true, (int) (byte) 10);\n    //  // Unstable assertion: assertEquals(6, byteArray1.length);\n    //  // Unstable assertion: assertEquals(10, byteArray2.length);\n    //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)10, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);\n    //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)0, (byte)0}, byteArray2);\n}",
    "testName" : "test6685"
  },
  "test7499" : {
    "methodSignature" : "public byte[] encode(byte[] pArray)",
    "methodName" : "encode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7499() throws Throwable {\n    byte[] byteArray0 = new byte[9];\n    Base64 base64_0 = new Base64(4, byteArray0);\n    byte[] byteArray1 = base64_0.encode(byteArray0);\n}",
    "testName" : "test7499"
  },
  "test79108" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test79108() throws Throwable {\n    Base64 base64_0 = new Base64(true);\n    int int0 = base64_0.readResults((byte[]) null, 2563, 2563);\n    base64_0.isUrlSafe();\n}",
    "testName" : "test79108"
  },
  "test79109" : {
    "methodSignature" : "int readResults(byte[] b, int bPos, int bAvail)",
    "methodName" : "readResults",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test79109() throws Throwable {\n    Base64 base64_0 = new Base64(true);\n    int int0 = base64_0.readResults((byte[]) null, 2563, 2563);\n}",
    "testName" : "test79109"
  },
  "test2532" : {
    "methodSignature" : "static byte[] toIntegerBytes(BigInteger bigInt)",
    "methodName" : "toIntegerBytes",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2532() throws Throwable {\n    Base64.toIntegerBytes((BigInteger) null);\n}",
    "testName" : "test2532"
  },
  "test4559" : {
    "methodSignature" : "void decode(byte[] in, int inPos, int inAvail)",
    "methodName" : "decode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4559() throws Throwable {\n    byte[] byteArray0 = new byte[8];\n    byteArray0[4] = (byte) 118;\n    Base64 base64_0 = new Base64();\n    base64_0.decode(byteArray0, (int) (byte) 1, 87);\n}",
    "testName" : "test4559"
  },
  "test5367" : {
    "methodSignature" : "void encode(byte[] in, int inPos, int inAvail)",
    "methodName" : "encode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5367() throws Throwable {\n    Base64 base64_0 = new Base64(0);\n    base64_0.encode((byte[]) null, 0, 40);\n}",
    "testName" : "test5367"
  },
  "test044" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Base64 base64_0 = new Base64();\n    byte[] byteArray0 = new byte[0];\n    String string0 = base64_0.encodeToString(byteArray0);\n    base64_0.isUrlSafe();\n}",
    "testName" : "test044"
  },
  "test045" : {
    "methodSignature" : "public String encodeToString(byte[] pArray)",
    "methodName" : "encodeToString",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test045() throws Throwable {\n    Base64 base64_0 = new Base64();\n    byte[] byteArray0 = new byte[0];\n    String string0 = base64_0.encodeToString(byteArray0);\n}",
    "testName" : "test045"
  },
  "test0913" : {
    "methodSignature" : "public static String encodeBase64String(byte[] binaryData)",
    "methodName" : "encodeBase64String",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0913() throws Throwable {\n    byte[] byteArray0 = new byte[1];\n    String string0 = Base64.encodeBase64String(byteArray0);\n}",
    "testName" : "test0913"
  },
  "test2936" : {
    "methodSignature" : "public static boolean isArrayByteBase64(byte[] arrayOctet)",
    "methodName" : "isArrayByteBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2936() throws Throwable {\n    Base64.isArrayByteBase64((byte[]) null);\n}",
    "testName" : "test2936"
  },
  "test1722" : {
    "methodSignature" : "public static byte[] encodeBase64(byte[] binaryData)",
    "methodName" : "encodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1722() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    byte[] byteArray1 = Base64.encodeBase64(byteArray0);\n}",
    "testName" : "test1722"
  },
  "test3747" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3747() throws Throwable {\n    Base64 base64_0 = new Base64(103);\n    byte[] byteArray0 = new byte[0];\n    byte[] byteArray1 = base64_0.decode(byteArray0);\n    byte[] byteArray2 = Base64.encodeBase64URLSafe(byteArray1);\n    byte[] byteArray3 = Base64.discardWhitespace(byteArray2);\n    base64_0.isUrlSafe();\n}",
    "testName" : "test3747"
  },
  "test3746" : {
    "methodSignature" : "static byte[] discardWhitespace(byte[] data)",
    "methodName" : "discardWhitespace",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3746() throws Throwable {\n    Base64 base64_0 = new Base64(103);\n    byte[] byteArray0 = new byte[0];\n    byte[] byteArray1 = base64_0.decode(byteArray0);\n    byte[] byteArray2 = Base64.encodeBase64URLSafe(byteArray1);\n    byte[] byteArray3 = Base64.discardWhitespace(byteArray2);\n}",
    "testName" : "test3746"
  },
  "test82115" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test82115() throws Throwable {\n    Base64 base64_0 = new Base64(true);\n    boolean boolean0 = base64_0.isUrlSafe();\n}",
    "testName" : "test82115"
  },
  "test74100" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test74100() throws Throwable {\n    byte[] byteArray0 = new byte[9];\n    Base64 base64_0 = new Base64(4, byteArray0);\n    byte[] byteArray1 = base64_0.encode(byteArray0);\n    base64_0.isUrlSafe();\n}",
    "testName" : "test74100"
  },
  "test6178" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6178() throws Throwable {\n    Base64 base64_0 = new Base64(0, (byte[]) null);\n    Object object0 = base64_0.decode((Object) \"]%3(Mbn@0l6/vRxq+=x\");\n    Object object1 = base64_0.encode(object0);\n    base64_0.isUrlSafe();\n}",
    "testName" : "test6178"
  },
  "test93128" : {
    "methodSignature" : "public static byte[] encodeBase64(byte[] binaryData)",
    "methodName" : "encodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test93128() throws Throwable {\n    byte[] byteArray0 = Base64.encodeBase64((byte[]) null);\n}",
    "testName" : "test93128"
  },
  "test3340" : {
    "methodSignature" : "public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize)",
    "methodName" : "encodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3340() throws Throwable {\n    byte[] byteArray0 = new byte[5];\n    byte[] byteArray1 = Base64.encodeBase64(byteArray0, true, true, (int) (byte) 102);\n    //  // Unstable assertion: assertArrayEquals(new byte[] {(byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte)65, (byte) (-8), (byte)0}, byteArray1);\n}",
    "testName" : "test3340"
  },
  "test4153" : {
    "methodSignature" : "public static boolean isBase64(byte octet)",
    "methodName" : "isBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4153() throws Throwable {\n    boolean boolean0 = Base64.isBase64((byte) 126);\n}",
    "testName" : "test4153"
  },
  "test6177" : {
    "methodSignature" : "public Object encode(Object pObject) throws EncoderException",
    "methodName" : "encode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6177() throws Throwable {\n    Base64 base64_0 = new Base64(0, (byte[]) null);\n    Object object0 = base64_0.decode((Object) \"]%3(Mbn@0l6/vRxq+=x\");\n    Object object1 = base64_0.encode(object0);\n}",
    "testName" : "test6177"
  }
}