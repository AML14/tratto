{
  "test1114" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1114() throws Throwable {\n    Base64 base64_0 = new Base64(true);\n    boolean boolean0 = base64_0.isUrlSafe();\n}",
    "testName" : "test1114"
  },
  "test2026" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2026() throws Throwable {\n    byte[] byteArray0 = Base64.decodeBase64(\"org.apache.commons.codec.EncoderException\");\n    Base64 base64_0 = new Base64();\n    base64_0.decode(\"org.apache.commons.codec.EncoderException\");\n    base64_0.encode(byteArray0, (-2840), (-2840));\n    base64_0.isUrlSafe();\n}",
    "testName" : "test2026"
  },
  "test3137" : {
    "methodSignature" : "public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize)",
    "methodName" : "encodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3137() throws Throwable {\n    byte[] byteArray0 = new byte[2];\n    Base64.encodeBase64(byteArray0, true, true, (int) (byte) (-92));\n}",
    "testName" : "test3137"
  },
  "test1215" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1215() throws Throwable {\n    Base64 base64_0 = new Base64();\n    boolean boolean0 = base64_0.hasData();\n    base64_0.isUrlSafe();\n}",
    "testName" : "test1215"
  },
  "test2127" : {
    "methodSignature" : "public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe)",
    "methodName" : "encodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2127() throws Throwable {\n    byte[] byteArray0 = new byte[1];\n    byte[] byteArray1 = Base64.encodeBase64(byteArray0, true, true);\n}",
    "testName" : "test2127"
  },
  "test3238" : {
    "methodSignature" : "static byte[] discardWhitespace(byte[] data)",
    "methodName" : "discardWhitespace",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3238() throws Throwable {\n    byte[] byteArray0 = Base64.decodeBase64(\"Input array too big, the output array would be bigger (\");\n    Base64.discardWhitespace(byteArray0);\n}",
    "testName" : "test3238"
  },
  "test2025" : {
    "methodSignature" : "void encode(byte[] in, int inPos, int inAvail)",
    "methodName" : "encode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2025() throws Throwable {\n    byte[] byteArray0 = Base64.decodeBase64(\"org.apache.commons.codec.EncoderException\");\n    Base64 base64_0 = new Base64();\n    base64_0.decode(\"org.apache.commons.codec.EncoderException\");\n    base64_0.encode(byteArray0, (-2840), (-2840));\n}",
    "testName" : "test2025"
  },
  "test1013" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1013() throws Throwable {\n    Base64 base64_0 = new Base64(false);\n    boolean boolean0 = base64_0.isUrlSafe();\n}",
    "testName" : "test1013"
  },
  "test3036" : {
    "methodSignature" : "public static byte[] encodeBase64Chunked(byte[] binaryData)",
    "methodName" : "encodeBase64Chunked",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3036() throws Throwable {\n    byte[] byteArray0 = Base64.decodeBase64(\"]\");\n    Base64.encodeBase64Chunked(byteArray0);\n}",
    "testName" : "test3036"
  },
  "test012" : {
    "methodSignature" : "static byte[] toIntegerBytes(BigInteger bigInt)",
    "methodName" : "toIntegerBytes",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test012() throws Throwable {\n    byte[] byteArray0 = Base64.decodeBase64(\"]\");\n    BigInteger bigInteger0 = Base64.decodeInteger(byteArray0);\n    byte[] byteArray1 = Base64.toIntegerBytes(bigInteger0);\n}",
    "testName" : "test012"
  },
  "test1419" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1419() throws Throwable {\n    Base64 base64_0 = new Base64();\n    int int0 = base64_0.avail();\n    base64_0.isUrlSafe();\n}",
    "testName" : "test1419"
  },
  "test1216" : {
    "methodSignature" : "boolean hasData()",
    "methodName" : "hasData",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1216() throws Throwable {\n    Base64 base64_0 = new Base64();\n    boolean boolean0 = base64_0.hasData();\n}",
    "testName" : "test1216"
  },
  "test2228" : {
    "methodSignature" : "void encode(byte[] in, int inPos, int inAvail)",
    "methodName" : "encode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2228() throws Throwable {\n    byte[] byteArray0 = new byte[2];\n    Base64 base64_0 = new Base64(true);\n    base64_0.encode(byteArray0, (int) (byte) (-1), (int) (byte) (-1));\n}",
    "testName" : "test2228"
  },
  "test3339" : {
    "methodSignature" : "static byte[] discardWhitespace(byte[] data)",
    "methodName" : "discardWhitespace",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3339() throws Throwable {\n    byte[] byteArray0 = new byte[5];\n    byteArray0[1] = (byte) 9;\n    byte[] byteArray1 = Base64.discardWhitespace(byteArray0);\n}",
    "testName" : "test3339"
  },
  "test1317" : {
    "methodSignature" : "void encode(byte[] in, int inPos, int inAvail)",
    "methodName" : "encode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1317() throws Throwable {\n    byte[] byteArray0 = Base64.decodeBase64(\"]\");\n    Base64 base64_0 = new Base64(0);\n    base64_0.encode(byteArray0, 0, (-1892));\n}",
    "testName" : "test1317"
  },
  "test1318" : {
    "methodSignature" : "boolean hasData()",
    "methodName" : "hasData",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1318() throws Throwable {\n    byte[] byteArray0 = Base64.decodeBase64(\"]\");\n    Base64 base64_0 = new Base64(0);\n    base64_0.encode(byteArray0, 0, (-1892));\n    boolean boolean0 = base64_0.hasData();\n}",
    "testName" : "test1318"
  },
  "test2329" : {
    "methodSignature" : "void decode(byte[] in, int inPos, int inAvail)",
    "methodName" : "decode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2329() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    Base64 base64_0 = new Base64((byte) 4);\n    base64_0.encode(byteArray0);\n    base64_0.decode(byteArray0, (-1), 13);\n}",
    "testName" : "test2329"
  },
  "test024" : {
    "methodSignature" : "public String encodeToString(byte[] pArray)",
    "methodName" : "encodeToString",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test024() throws Throwable {\n    Base64 base64_0 = new Base64(true);\n    byte[] byteArray0 = new byte[0];\n    String string0 = base64_0.encodeToString(byteArray0);\n}",
    "testName" : "test024"
  },
  "test046" : {
    "methodSignature" : "public static String encodeBase64URLSafeString(byte[] binaryData)",
    "methodName" : "encodeBase64URLSafeString",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test046() throws Throwable {\n    byte[] byteArray0 = Base64.CHUNK_SEPARATOR;\n    String string0 = Base64.encodeBase64URLSafeString(byteArray0);\n}",
    "testName" : "test046"
  },
  "test068" : {
    "methodSignature" : "public static byte[] encodeBase64(byte[] binaryData)",
    "methodName" : "encodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068() throws Throwable {\n    byte[] byteArray0 = Base64.decodeBase64(\"org.apache.commons.codec.EncoderException\");\n    byte[] byteArray1 = Base64.encodeBase64(byteArray0);\n}",
    "testName" : "test068"
  },
  "test2632" : {
    "methodSignature" : "public static byte[] decodeBase64(String base64String)",
    "methodName" : "decodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2632() throws Throwable {\n    Base64.decodeBase64(\"Parameter supplied to Base64 decode is not a byte[] or a String\");\n}",
    "testName" : "test2632"
  },
  "test1521" : {
    "methodSignature" : "int readResults(byte[] b, int bPos, int bAvail)",
    "methodName" : "readResults",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1521() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    Base64 base64_0 = new Base64((byte) 4);\n    int int0 = base64_0.readResults(byteArray0, 13, (byte) 1);\n}",
    "testName" : "test1521"
  },
  "test3544" : {
    "methodSignature" : "static byte[] discardWhitespace(byte[] data)",
    "methodName" : "discardWhitespace",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3544() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    byteArray0[5] = (byte) 32;\n    byte[] byteArray1 = Base64.discardWhitespace(byteArray0);\n}",
    "testName" : "test3544"
  },
  "test1522" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1522() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    Base64 base64_0 = new Base64((byte) 4);\n    int int0 = base64_0.readResults(byteArray0, 13, (byte) 1);\n    base64_0.isUrlSafe();\n}",
    "testName" : "test1522"
  },
  "test2733" : {
    "methodSignature" : "public static boolean isBase64(byte octet)",
    "methodName" : "isBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2733() throws Throwable {\n    boolean boolean0 = Base64.isBase64((byte) 126);\n}",
    "testName" : "test2733"
  },
  "test3645" : {
    "methodSignature" : "public static boolean isArrayByteBase64(byte[] arrayOctet)",
    "methodName" : "isArrayByteBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3645() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    byteArray0[0] = (byte) 9;\n    boolean boolean0 = Base64.isArrayByteBase64(byteArray0);\n}",
    "testName" : "test3645"
  },
  "test2430" : {
    "methodSignature" : "public Object decode(Object pObject) throws DecoderException",
    "methodName" : "decode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2430() throws Throwable {\n    Base64 base64_0 = new Base64();\n    Object object0 = base64_0.decode((Object) \"org.apache.commons.codec.DecoderException\");\n    base64_0.decode(object0);\n}",
    "testName" : "test2430"
  },
  "test3442" : {
    "methodSignature" : "static byte[] discardWhitespace(byte[] data)",
    "methodName" : "discardWhitespace",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3442() throws Throwable {\n    byte[] byteArray0 = Base64.CHUNK_SEPARATOR;\n    byte[] byteArray1 = Base64.discardWhitespace(byteArray0);\n}",
    "testName" : "test3442"
  },
  "test2531" : {
    "methodSignature" : "public Object encode(Object pObject) throws EncoderException",
    "methodName" : "encode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2531() throws Throwable {\n    Base64 base64_0 = new Base64(true);\n    Object object0 = base64_0.decode((Object) \"5~p*VAfA~xR\");\n    base64_0.encode(object0);\n}",
    "testName" : "test2531"
  },
  "test1420" : {
    "methodSignature" : "int avail()",
    "methodName" : "avail",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1420() throws Throwable {\n    Base64 base64_0 = new Base64();\n    int int0 = base64_0.avail();\n}",
    "testName" : "test1420"
  },
  "test000" : {
    "methodSignature" : "int readResults(byte[] b, int bPos, int bAvail)",
    "methodName" : "readResults",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    MockRandom mockRandom0 = new MockRandom();\n    BigInteger bigInteger0 = new BigInteger(1135, 818, mockRandom0);\n    byte[] byteArray0 = Base64.encodeInteger(bigInteger0);\n    Base64 base64_0 = new Base64(835);\n    base64_0.decode(byteArray0, 2, 773);\n    int int0 = base64_0.readResults(byteArray0, 0, 94);\n}",
    "testName" : "test000"
  },
  "test0912" : {
    "methodSignature" : "public Base64(int lineLength, byte[] lineSeparator)",
    "methodName" : "Base64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0912() throws Throwable {\n    byte[] byteArray0 = Base64.decodeBase64(\"@mitSsw0vd\");\n    Base64 base64_0 = null;\n    base64_0 = new Base64(0, byteArray0);\n}",
    "testName" : "test0912"
  },
  "test3949" : {
    "methodSignature" : "public static byte[] encodeBase64Chunked(byte[] binaryData)",
    "methodName" : "encodeBase64Chunked",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3949() throws Throwable {\n    MockRandom mockRandom0 = new MockRandom();\n    BigInteger bigInteger0 = BigInteger.probablePrime(334, mockRandom0);\n    byte[] byteArray0 = Base64.encodeInteger(bigInteger0);\n    byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);\n}",
    "testName" : "test3949"
  },
  "test1623" : {
    "methodSignature" : "public byte[] encode(byte[] pArray)",
    "methodName" : "encode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1623() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    Base64 base64_0 = new Base64((byte) 4);\n    byte[] byteArray1 = base64_0.encode(byteArray0);\n}",
    "testName" : "test1623"
  },
  "test2834" : {
    "methodSignature" : "public Object decode(Object pObject) throws DecoderException",
    "methodName" : "decode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2834() throws Throwable {\n    BigInteger bigInteger0 = BigInteger.ONE;\n    Base64 base64_0 = new Base64(8168);\n    base64_0.decode((Object) bigInteger0);\n}",
    "testName" : "test2834"
  },
  "test1624" : {
    "methodSignature" : "int readResults(byte[] b, int bPos, int bAvail)",
    "methodName" : "readResults",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1624() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    Base64 base64_0 = new Base64((byte) 4);\n    byte[] byteArray1 = base64_0.encode(byteArray0);\n    int int0 = base64_0.readResults(byteArray0, 13, (byte) 1);\n}",
    "testName" : "test1624"
  },
  "test3746" : {
    "methodSignature" : "public Object encode(Object pObject) throws EncoderException",
    "methodName" : "encode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3746() throws Throwable {\n    Base64 base64_0 = new Base64();\n    Object object0 = new Object();\n    base64_0.encode(object0);\n}",
    "testName" : "test3746"
  },
  "test0811" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0811() throws Throwable {\n    Base64 base64_0 = new Base64(1939, (byte[]) null, true);\n    base64_0.isUrlSafe();\n}",
    "testName" : "test0811"
  },
  "test2935" : {
    "methodSignature" : "public static byte[] decodeBase64(String base64String)",
    "methodName" : "decodeBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2935() throws Throwable {\n    Base64.decodeBase64((String) null);\n}",
    "testName" : "test2935"
  },
  "test3848" : {
    "methodSignature" : "public byte[] encode(byte[] pArray)",
    "methodName" : "encode",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3848() throws Throwable {\n    Base64 base64_0 = new Base64(2);\n    byte[] byteArray0 = base64_0.encode((byte[]) null);\n}",
    "testName" : "test3848"
  },
  "test3847" : {
    "methodSignature" : "public boolean isUrlSafe()",
    "methodName" : "isUrlSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3847() throws Throwable {\n    Base64 base64_0 = new Base64(2);\n    byte[] byteArray0 = base64_0.encode((byte[]) null);\n    base64_0.isUrlSafe();\n}",
    "testName" : "test3847"
  },
  "test035" : {
    "methodSignature" : "public static String encodeBase64String(byte[] binaryData)",
    "methodName" : "encodeBase64String",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test035() throws Throwable {\n    byte[] byteArray0 = Base64.decodeBase64(\"org.apache.commons.codec.EncoderException\");\n    String string0 = Base64.encodeBase64String(byteArray0);\n}",
    "testName" : "test035"
  },
  "test057" : {
    "methodSignature" : "public static byte[] encodeBase64URLSafe(byte[] binaryData)",
    "methodName" : "encodeBase64URLSafe",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test057() throws Throwable {\n    byte[] byteArray0 = Base64.encodeBase64URLSafe((byte[]) null);\n}",
    "testName" : "test057"
  },
  "test079" : {
    "methodSignature" : "public static boolean isArrayByteBase64(byte[] arrayOctet)",
    "methodName" : "isArrayByteBase64",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079() throws Throwable {\n    byte[] byteArray0 = new byte[2];\n    byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);\n    boolean boolean0 = Base64.isArrayByteBase64(byteArray1);\n}",
    "testName" : "test079"
  },
  "test4050" : {
    "methodSignature" : "public static byte[] encodeInteger(BigInteger bigInt)",
    "methodName" : "encodeInteger",
    "className" : "org.apache.commons.codec.binary.Base64",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4050() throws Throwable {\n    Base64.encodeInteger((BigInteger) null);\n}",
    "testName" : "test4050"
  }
}