project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    byte[] byteArray0 = new byte[2];
    byteArray0[0] = (byte) 91;
    Base32 base32_0 = new Base32(7, byteArray0, false);
    assertEquals(64, BaseNCodec.PEM_CHUNK_SIZE);
}",0,
project,0,test011,"public void test011() throws Throwable {
    Base32 base32_0 = new Base32(1633);
    Object object0 = base32_0.decode((Object) ""JZ"");
    Object object1 = base32_0.encode(object0);
    assertNotSame(object1, object0);
}",1,
project,0,test022,"public void test022() throws Throwable {
    Base32 base32_0 = new Base32(true, (byte) 0);
    BaseNCodec.Context baseNCodec_Context0 = new BaseNCodec.Context();
    baseNCodec_Context0.modulus = (int) (byte) 0;
    baseNCodec_Context0.modulus = (-1098);
    // Undeclared exception!
    try {
        base32_0.encode((byte[]) null, (-1098), (-1803), baseNCodec_Context0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Impossible modulus -1098
        //
        verifyException(""org.apache.commons.codec.binary.Base32"", e);
    }
}",0,
project,0,test033,"public void test033() throws Throwable {
    Base32 base32_0 = new Base32((byte) 0);
    byte[] byteArray0 = new byte[2];
    BaseNCodec.Context baseNCodec_Context0 = new BaseNCodec.Context();
    base32_0.encode(byteArray0, (-457), (int) (byte) 0, baseNCodec_Context0);
    assertEquals(76, BaseNCodec.MIME_CHUNK_SIZE);
}",0,
project,0,test044,"public void test044() throws Throwable {
    Base32 base32_0 = new Base32(true, (byte) 0);
    byte[] byteArray0 = new byte[6];
    byte[] byteArray1 = base32_0.encode(byteArray0);
    BaseNCodec.Context baseNCodec_Context0 = new BaseNCodec.Context();
    baseNCodec_Context0.lbitWorkArea = (long) (-2);
    base32_0.decode(byteArray1, 0, 564, baseNCodec_Context0);
    assertEquals(16, byteArray1.length);
}",0,
project,0,test055,"public void test055() throws Throwable {
    Base32 base32_0 = new Base32((byte) 0);
    Object object0 = base32_0.decode((Object) ""Context[buffer=null, currentLinePos=0, eof=false, ibitWorkArea=0, lbitWorkArea=0, modulus=0, pos=0, readPos=0]"");
    assertNotNull(object0);
}",1,
project,0,test066,"public void test066() throws Throwable {
    Base32 base32_0 = new Base32(true, (byte) 0);
    byte[] byteArray0 = new byte[6];
    byte[] byteArray1 = base32_0.encode(byteArray0);
    BaseNCodec.Context baseNCodec_Context0 = new BaseNCodec.Context();
    baseNCodec_Context0.modulus = (-47);
    base32_0.decode(byteArray1, 0, 564, baseNCodec_Context0);
    assertEquals(16, byteArray1.length);
}",0,
project,0,test077,"public void test077() throws Throwable {
    Base32 base32_0 = new Base32();
    byte[] byteArray0 = new byte[3];
    // Undeclared exception!
    try {
        base32_0.encode(byteArray0, 84, (-23), (BaseNCodec.Context) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.codec.binary.Base32"", e);
    }
}",0,
project,0,test088,"public void test088() throws Throwable {
    Base32 base32_0 = new Base32(true);
    BaseNCodec.Context baseNCodec_Context0 = new BaseNCodec.Context();
    // Undeclared exception!
    try {
        base32_0.decode((byte[]) null, 32, 32, baseNCodec_Context0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.codec.binary.Base32"", e);
    }
}",0,
project,0,test099,"public void test099() throws Throwable {
    Base32 base32_0 = new Base32();
    byte[] byteArray0 = new byte[5];
    BaseNCodec.Context baseNCodec_Context0 = new BaseNCodec.Context();
    // Undeclared exception!
    try {
        base32_0.decode(byteArray0, (-98), 2685, baseNCodec_Context0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -98
        //
        verifyException(""org.apache.commons.codec.binary.Base32"", e);
    }
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    Base32 base32_0 = null;
    try {
        base32_0 = new Base32(true, (byte) 67);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // pad must not be in alphabet or whitespace
        //
        verifyException(""org.apache.commons.codec.binary.Base32"", e);
    }
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    byte[] byteArray0 = new byte[3];
    byteArray0[2] = (byte) 70;
    Base32 base32_0 = null;
    try {
        base32_0 = new Base32(7, byteArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // lineSeparator must not contain Base32 characters: [\u0000\u0000F]
        //
        verifyException(""org.apache.commons.codec.binary.Base32"", e);
    }
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    Base32 base32_0 = new Base32();
    boolean boolean0 = base32_0.isInAlphabet((byte) 98);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1313,"public void test1313() throws Throwable {
    byte[] byteArray0 = new byte[0];
    Base32 base32_0 = new Base32(30, byteArray0, true, (byte) 37);
    boolean boolean0 = base32_0.isInAlphabet((byte) 37);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1414,"public void test1414() throws Throwable {
    Base32 base32_0 = new Base32((byte) (-102));
    boolean boolean0 = base32_0.isInAlphabet((byte) (-102));
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1515,"public void test1515() throws Throwable {
    Base32 base32_0 = new Base32((byte) 0);
    boolean boolean0 = base32_0.isInAlphabet((byte) 86);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test1616,"public void test1616() throws Throwable {
    byte[] byteArray0 = new byte[1];
    Base32 base32_0 = null;
    try {
        base32_0 = new Base32((-154), byteArray0, true, (byte) 10);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // pad must not be in alphabet or whitespace
        //
        verifyException(""org.apache.commons.codec.binary.Base32"", e);
    }
}",0,
project,0,test1717,"public void test1717() throws Throwable {
    byte[] byteArray0 = new byte[4];
    Base32 base32_0 = null;
    try {
        base32_0 = new Base32(69, byteArray0, true, (byte) 0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // lineSeparator must not contain Base32 characters: [\u0000\u0000\u0000\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base32"", e);
    }
}",0,
project,0,test1818,"public void test1818() throws Throwable {
    Base32 base32_0 = null;
    try {
        base32_0 = new Base32(393, (byte[]) null, false, (byte) 0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // lineLength 393 > 0, but lineSeparator is null
        //
        verifyException(""org.apache.commons.codec.binary.Base32"", e);
    }
}",1,
project,0,test1919,"public void test1919() throws Throwable {
    Base32 base32_0 = new Base32(0, (byte[]) null, false, (byte) 2);
    BaseNCodec.Context baseNCodec_Context0 = new BaseNCodec.Context();
    base32_0.decode((byte[]) null, 0, 0, baseNCodec_Context0);
    assertEquals(76, BaseNCodec.MIME_CHUNK_SIZE);
}",0,
project,0,test2020,"public void test2020() throws Throwable {
    byte[] byteArray0 = new byte[1];
    Base32 base32_0 = new Base32(1603, byteArray0);
    boolean boolean0 = base32_0.isInAlphabet(""R7^Y"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2121,"public void test2121() throws Throwable {
    Base32 base32_0 = new Base32(61);
    byte[] byteArray0 = new byte[7];
    BaseNCodec.Context baseNCodec_Context0 = new BaseNCodec.Context();
    baseNCodec_Context0.currentLinePos = 61;
    // Undeclared exception!
    try {
        base32_0.encode(byteArray0, 0, (int) (byte) 16, baseNCodec_Context0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 7
        //
        verifyException(""org.apache.commons.codec.binary.Base32"", e);
    }
}",0,
project,0,test2222,"public void test2222() throws Throwable {
    Base32 base32_0 = new Base32(99);
    byte[] byteArray0 = new byte[4];
    byteArray0[1] = (byte) (-1);
    String string0 = base32_0.encodeAsString(byteArray0);
    assertEquals(""AD7QAAA=\r\n"", string0);
}",0,assertNotNull(string0)
project,0,test2323,"public void test2323() throws Throwable {
    Base32 base32_0 = new Base32(99);
    byte[] byteArray0 = new byte[8];
    String string0 = base32_0.encodeAsString(byteArray0);
    assertEquals(""AAAAAAAAAAAAA===\r\n"", string0);
}",0,assertNotNull(string0)
project,0,test2424,"public void test2424() throws Throwable {
    Base32 base32_0 = new Base32();
    byte[] byteArray0 = new byte[7];
    byte[] byteArray1 = base32_0.encode(byteArray0);
    assertEquals(16, byteArray1.length);
}",0,
project,0,test2525,"public void test2525() throws Throwable {
    Base32 base32_0 = new Base32(true, (byte) 0);
    Object object0 = base32_0.decode((Object) ""&Bwo=2rauUB?"");
    assertNotNull(object0);
}",1,
project,0,test2626,"public void test2626() throws Throwable {
    Base32 base32_0 = new Base32(true, (byte) (-117));
    byte[] byteArray0 = base32_0.decode(""%=F)H`0"");
    BaseNCodec.Context baseNCodec_Context0 = new BaseNCodec.Context();
    base32_0.encode(byteArray0, (int) (byte) (-117), (-11), baseNCodec_Context0);
    assertArrayEquals(new byte[] { (byte) 124 }, byteArray0);
}",0,
project,0,test2728,"public void test2728() throws Throwable {
    Base32 base32_0 = new Base32(99);
    byte[] byteArray0 = new byte[4];
    byteArray0[1] = (byte) (-1);
    byte[] byteArray1 = base32_0.decode(byteArray0);
    assertEquals(0, byteArray1.length);
}",0,
project,0,test2829,"public void test2829() throws Throwable {
    Base32 base32_0 = new Base32(true, (byte) 0);
    byte[] byteArray0 = new byte[6];
    BaseNCodec.Context baseNCodec_Context0 = new BaseNCodec.Context();
    base32_0.decode(byteArray0, 0, 76, baseNCodec_Context0);
    base32_0.encode(byteArray0, 0, (int) (byte) 0, baseNCodec_Context0);
    assertEquals(6, byteArray0.length);
}",0,
project,0,test2930,"public void test2930() throws Throwable {
    Base32 base32_0 = new Base32(340);
    BaseNCodec.Context baseNCodec_Context0 = new BaseNCodec.Context();
    byte[] byteArray0 = new byte[23];
    base32_0.encode(byteArray0, 340, (-876), baseNCodec_Context0);
    base32_0.decode(byteArray0, 340, (int) (byte) 53, baseNCodec_Context0);
    assertEquals(23, byteArray0.length);
}",0,
project,0,test3031,"public void test3031() throws Throwable {
    Base32 base32_0 = null;
    try {
        base32_0 = new Base32((byte) 13);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // pad must not be in alphabet or whitespace
        //
        verifyException(""org.apache.commons.codec.binary.Base32"", e);
    }
}",0,
project,0,test3132,"public void test3132() throws Throwable {
    byte[] byteArray0 = new byte[1];
    Base32 base32_0 = null;
    try {
        base32_0 = new Base32(1106, byteArray0, true, (byte) 48);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // pad must not be in alphabet or whitespace
        //
        verifyException(""org.apache.commons.codec.binary.Base32"", e);
    }
}",0,
project,0,test3233,"public void test3233() throws Throwable {
    byte[] byteArray0 = new byte[2];
    byteArray0[0] = (byte) 73;
    Base32 base32_0 = null;
    try {
        base32_0 = new Base32(1659, byteArray0, true);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // lineSeparator must not contain Base32 characters: [I\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base32"", e);
    }
}",0,
project,0,test3334,"public void test3334() throws Throwable {
    Base32 base32_0 = new Base32(true);
    byte[] byteArray0 = base32_0.decode(""UTF-16LE"");
    assertArrayEquals(new byte[] { (byte) (-9), (byte) 94, (byte) 19, (byte) 85 }, byteArray0);
}",0,
project,0,test3436,"public void test3436() throws Throwable {
    Base32 base32_0 = new Base32();
    byte[] byteArray0 = new byte[5];
    BaseNCodec.Context baseNCodec_Context0 = new BaseNCodec.Context();
    baseNCodec_Context0.modulus = 76;
    // Undeclared exception!
    try {
        base32_0.decode(byteArray0, (-20), (-20), baseNCodec_Context0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Impossible modulus 76
        //
        verifyException(""org.apache.commons.codec.binary.Base32"", e);
    }
}",0,
project,0,test3537,"public void test3537() throws Throwable {
    Base32 base32_0 = new Base32(340);
    byte[] byteArray0 = base32_0.decode(""8eTUas[3] BT"");
    assertArrayEquals(new byte[] { (byte) (-99), (byte) 54, (byte) 25 }, byteArray0);
}",0,
project,0,test3639,"public void test3639() throws Throwable {
    Base32 base32_0 = new Base32((byte) (-7));
    byte[] byteArray0 = base32_0.decode(""H$_VMWBde]]oUy"");
    assertArrayEquals(new byte[] { (byte) 61, (byte) 89, (byte) 96 }, byteArray0);
}",0,
