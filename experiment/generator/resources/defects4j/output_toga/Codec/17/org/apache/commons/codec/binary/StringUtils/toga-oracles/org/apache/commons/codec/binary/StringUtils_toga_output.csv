project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    StringUtils.getBytesUtf16Be((String) null);
    StringUtils.newStringUtf16Le((byte[]) null);
    StringUtils stringUtils0 = new StringUtils();
    StringUtils.newString((byte[]) null, (String) null);
    StringUtils.getBytesUnchecked((String) null, (String) null);
    StringUtils.getBytesUtf16((String) null);
    StringUtils.equals((CharSequence) ""UTF-16BE"", (CharSequence) ""%"");
    StringUtils.getBytesIso8859_1((String) null);
    StringUtils.newStringUtf16Be((byte[]) null);
    StringUtils.getBytesUsAscii((String) null);
    StringUtils.newStringUtf16((byte[]) null);
    StringUtils.equals((CharSequence) ""UTF-16BE"", (CharSequence) null);
    StringUtils.newStringIso8859_1((byte[]) null);
}",0,
project,0,test011,"public void test011() throws Throwable {
    byte[] byteArray0 = new byte[16];
    StringUtils.newStringUsAscii(byteArray0);
    CharBuffer charBuffer0 = CharBuffer.allocate((byte) 16);
    StringUtils.equals((CharSequence) ""\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"", (CharSequence) charBuffer0);
    StringUtils.getByteBufferUtf8(""\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"");
}",0,
project,0,test022,"public void test022() throws Throwable {
    byte[] byteArray0 = new byte[1];
    StringUtils.newStringUtf8(byteArray0);
    StringUtils.equals((CharSequence) ""\u0000"", (CharSequence) ""\u0000"");
    byte[] byteArray1 = StringUtils.getBytesUtf8(""\u0000"");
    StringUtils.getBytesUtf16Le(""\u0000"");
    // Undeclared exception!
    try {
        StringUtils.newString(byteArray1, ""\u0000"");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // \u0000: java.io.UnsupportedEncodingException: \u0000
        //
        verifyException(""org.apache.commons.codec.binary.StringUtils"", e);
    }
}",0,
project,0,test033,"public void test033() throws Throwable {
    StringUtils.equals((CharSequence) null, (CharSequence) ""&"");
    StringUtils.getByteBufferUtf8((String) null);
}",0,
project,0,test044,"public void test044() throws Throwable {
    CharBuffer charBuffer0 = CharBuffer.allocate(1308);
    CharBuffer charBuffer1 = CharBuffer.allocate(1308);
    StringUtils.equals((CharSequence) charBuffer0, (CharSequence) charBuffer1);
}",0,
project,0,test055,"public void test055() throws Throwable {
    byte[] byteArray0 = StringUtils.getBytesUnchecked(""+!:l/zq;tD2R"", ""+!:l/zq;tD2R"");
    // Undeclared exception!
    try {
        StringUtils.newStringUtf8(byteArray0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // +!:l/zq;tD2R: java.io.UnsupportedEncodingException: +!:l/zq;tD2R
        //
        verifyException(""org.apache.commons.codec.binary.StringUtils"", e);
    }
}",0,
project,0,test066,"public void test066() throws Throwable {
    StringUtils stringUtils0 = new StringUtils();
    StringUtils.getBytesIso8859_1((String) null);
    StringUtils.getByteBufferUtf8(""TLK .xCO$m"");
    StringUtils.newStringUtf16Le((byte[]) null);
    StringUtils.getByteBufferUtf8("""");
}",0,
project,0,test077,"public void test077() throws Throwable {
    StringUtils.newStringUsAscii((byte[]) null);
    StringUtils.equals((CharSequence) null, (CharSequence) null);
}",0,
project,0,test088,"public void test088() throws Throwable {
    StringUtils.getBytesUtf16Le(""Bvu"");
}",0,
project,0,test099,"public void test099() throws Throwable {
    StringUtils.getBytesUsAscii("""");
    StringUtils.getBytesUsAscii(""> FNW0uFPtx!%"");
    StringUtils.getBytesUnchecked(""w}?TDcHSVa_C\u0000]"", ""w}?TDcHSVa_C\u0000]"");
}",1,
project,0,test1010,"public void test1010() throws Throwable {
    StringUtils.getBytesUtf8(""qQn<6$94fs6)"");
    StringUtils.getBytesUsAscii(""qQn<6$94fs6)"");
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    StringUtils.newStringUtf8((byte[]) null);
    StringUtils.getBytesUsAscii((String) null);
    StringUtils.newStringUtf8((byte[]) null);
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    StringUtils.getByteBufferUtf8((String) null);
    StringUtils.getByteBufferUtf8("""");
    StringUtils.equals((CharSequence) """", (CharSequence) null);
    byte[] byteArray0 = StringUtils.getBytesUtf16Be("""");
    StringUtils.equals((CharSequence) null, (CharSequence) null);
    StringUtils.getBytesUtf16Le((String) null);
    StringUtils.newStringUsAscii(byteArray0);
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    byte[] byteArray0 = new byte[0];
    StringUtils.newStringUsAscii(byteArray0);
    StringUtils.newStringUtf8(byteArray0);
    StringUtils.newStringUtf16Be(byteArray0);
    StringUtils.getBytesUtf8(""yI_I6oCIR&s"");
    StringUtils.getByteBufferUtf8(""zG"");
    StringUtils.newStringUtf16Le(byteArray0);
    byte[] byteArray1 = StringUtils.getBytesUtf16("": "");
    StringUtils.newStringUtf16(byteArray1);
    StringUtils.equals((CharSequence) "": "", (CharSequence) ""yI_I6oCIR&s"");
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    byte[] byteArray0 = StringUtils.getBytesUtf16Be(""US-ASCII"");
    StringUtils.newStringUtf8(byteArray0);
    StringUtils.newStringIso8859_1(byteArray0);
    StringUtils.getBytesUtf8(""3f;Tmok6+f"");
}",0,
project,0,test1515,"public void test1515() throws Throwable {
    byte[] byteArray0 = new byte[0];
    StringUtils.newString(byteArray0, """");
}",0,
project,0,test1616,"public void test1616() throws Throwable {
    StringUtils stringUtils0 = new StringUtils();
    byte[] byteArray0 = new byte[7];
    byteArray0[0] = (byte) 0;
    byteArray0[1] = (byte) 1;
    byteArray0[2] = (byte) 0;
    byteArray0[3] = (byte) (-100);
    byteArray0[4] = (byte) 55;
    byteArray0[5] = (byte) (-1);
    byteArray0[6] = (byte) (-92);
    StringUtils.newStringUtf8(byteArray0);
    StringUtils.getBytesUtf16Le(""29JMm8,&AoRu]*'L#oc"");
    StringUtils.getByteBufferUtf8("""");
    StringUtils.getBytesUtf8(""0%Jd}BE$.w"");
    StringUtils.getBytesUnchecked(""fmYW"", ""0%Jd}BE$.w"");
    byte[] byteArray1 = new byte[4];
    byte byte0 = (byte) 0;
    byteArray1[0] = byte0;
    byte byte1 = (byte) 0;
    byteArray1[1] = byte1;
    byte byte2 = (byte) 92;
    byteArray1[2] = byte2;
    byte byte3 = (byte) 0;
    byteArray1[3] = byte3;
    StringUtils.newStringIso8859_1(byteArray1);
}",0,
project,0,test1919,"public void test1919() throws Throwable {
    byte[] byteArray0 = StringUtils.getBytesUtf16Be("""");
    String string0 = ""y22Pi3($^nL:"";
    StringUtils.getBytesIso8859_1(""y22Pi3($^nL:"");
    StringUtils.getBytesUtf16Be("""");
    byte[] byteArray1 = StringUtils.getBytesUtf16Le("""");
    byte[] byteArray2 = StringUtils.getBytesUtf16Be("""");
    StringUtils.newStringUsAscii(byteArray2);
    StringUtils.newStringIso8859_1(byteArray0);
    StringUtils.newStringUtf16(byteArray1);
    StringUtils.getBytesUnchecked(""mvQ'c_y4`a}$l^J"", (String) null);
    String string1 = ""C)IX*%\\&sV4pZ1IE"";
    StringUtils.getBytesUtf8(string1);
    StringUtils.equals((CharSequence) string1, (CharSequence) string0);
}",0,
project,0,test2020,"public void test2020() throws Throwable {
    byte[] byteArray0 = StringUtils.getBytesUtf16Le(""-?n}t3oZ#S'V4mL]"");
    StringUtils.newStringUtf16(byteArray0);
    StringUtils.newStringUtf8(byteArray0);
    StringUtils stringUtils0 = new StringUtils();
    byte[] byteArray1 = StringUtils.getBytesUsAscii("""");
    byte[] byteArray2 = StringUtils.getBytesUtf16Be(""\u0000-\u0000?\u0000n\u0000}\u0000t\u00003\u0000o\u0000Z\u0000#\u0000S\u0000'\u0000V\u00004\u0000m\u0000L\u0000]\u0000"");
    StringUtils.newStringUtf16Be(byteArray2);
    StringUtils.newStringUtf16Be(byteArray1);
    byte[] byteArray3 = new byte[2];
    byteArray3[0] = (byte) 73;
    byteArray3[1] = (byte) (-58);
    StringUtils.newString(byteArray3, ""\u0000-\u0000?\u0000n\u0000}\u0000t\u00003\u0000o\u0000Z\u0000#\u0000S\u0000'\u0000V\u00004\u0000m\u0000L\u0000]\u0000"");
}",0,
project,0,test2121,"public void test2121() throws Throwable {
    StringUtils.getByteBufferUtf8(""L0<w9n' K%<a ||!-O"");
    StringUtils.newStringUtf16Le((byte[]) null);
    StringUtils.newStringUtf16((byte[]) null);
    StringUtils.getBytesUtf8((String) null);
    StringUtils.newStringUtf8((byte[]) null);
    StringUtils.newStringUtf16((byte[]) null);
    StringUtils.newStringUtf16Le((byte[]) null);
    StringUtils.newStringUtf16Be((byte[]) null);
    StringUtils.getBytesUnchecked(""\""mrWYsn"", ""\""mrWYsn"");
}",1,
project,0,test2222,"public void test2222() throws Throwable {
    byte[] byteArray0 = StringUtils.getBytesIso8859_1("""");
    StringUtils.equals((CharSequence) """", (CharSequence) """");
    String string0 = ""8!,H/6RhUL8L}x"";
    StringUtils.newString(byteArray0, ""8!,H/6RhUL8L}x"");
    // Undeclared exception!
    try {
        StringUtils.getBytesUtf8(string0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 8!,H/6RhUL8L}x: java.io.UnsupportedEncodingException: 8!,H/6RhUL8L}x
        //
        verifyException(""org.apache.commons.codec.binary.StringUtils"", e);
    }
}",0,
project,0,test2323,"public void test2323() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byteArray0[0] = (byte) (-1);
    StringUtils.newStringUtf16Le(byteArray0);
}",0,
project,0,test2424,"public void test2424() throws Throwable {
    StringUtils.getBytesUnchecked("": "", ""UTF-8"");
    StringUtils.getBytesUtf16("": "");
    StringUtils.getBytesUtf16("": "");
    StringUtils.getBytesUtf8("""");
}",0,
project,0,test2525,"public void test2525() throws Throwable {
    StringUtils.getByteBufferUtf8((String) null);
    byte[] byteArray0 = new byte[0];
    StringUtils.newStringUtf16Be(byteArray0);
    byte[] byteArray1 = StringUtils.getBytesUnchecked("""", ""US-ASCII"");
    StringUtils.newStringUtf8(byteArray1);
    StringUtils.newStringUtf16Le(byteArray1);
    StringUtils.getBytesIso8859_1("""");
    StringUtils.getBytesUtf8(""N"");
}",0,
project,0,test2626,"public void test2626() throws Throwable {
    StringUtils.getBytesUtf8("""");
    byte[] byteArray0 = StringUtils.getBytesUtf16("""");
    byte[] byteArray1 = StringUtils.getBytesUsAscii((String) null);
    StringUtils stringUtils0 = new StringUtils();
    StringUtils.getBytesUtf16Be("""");
    StringUtils.newStringUtf8(byteArray0);
    StringUtils.getBytesUnchecked("""", (String) null);
    String string0 = ""org.apache.commons.codec.binary.StringUtils"";
    StringUtils.newString(byteArray1, string0);
    String string1 = ""org.apache.commons.codec.Charsets"";
    // Undeclared exception!
    try {
        StringUtils.getBytesUtf16Le(string1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
    }
}",0,
project,0,test2727,"public void test2727() throws Throwable {
    StringUtils.getBytesUsAscii((String) null);
    StringUtils.getBytesUnchecked((String) null, "": "");
    StringUtils.getBytesUtf16("": "");
    StringUtils.getBytesUtf16Be("""");
    StringUtils.newStringUsAscii((byte[]) null);
    StringUtils.newStringUtf16Be((byte[]) null);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) 1;
    byteArray0[1] = (byte) 0;
    byteArray0[2] = (byte) 1;
    StringUtils.newStringUtf16Le(byteArray0);
}",0,
project,0,test2828,"public void test2828() throws Throwable {
    byte[] byteArray0 = new byte[2];
    byteArray0[0] = (byte) 0;
    byteArray0[1] = (byte) 89;
    StringUtils.newStringUtf8(byteArray0);
    StringUtils.getBytesIso8859_1((String) null);
    byte[] byteArray1 = StringUtils.getBytesUtf8(""\u0000Y"");
    StringUtils.getBytesUtf8((String) null);
    StringUtils.getBytesUtf16((String) null);
    StringUtils.getBytesUtf16((String) null);
    StringUtils.newStringIso8859_1(byteArray0);
    StringUtils.newStringUtf16Be(byteArray1);
    StringUtils.getBytesUtf16Le(""Y"");
    StringUtils.newStringUtf16Be(byteArray0);
    StringUtils.equals((CharSequence) ""Y"", (CharSequence) ""Y"");
    StringUtils.getBytesUsAscii(""3hQ\""~ejLg;=`mCF'-$5"");
    StringUtils.getByteBufferUtf8((String) null);
    StringUtils.getBytesUtf8((String) null);
    StringUtils.getBytesUtf16(""l\u0002&}j>4?g+\""<,"");
    StringUtils.newStringUsAscii(byteArray0);
    StringUtils.equals((CharSequence) ""\u0000Y"", (CharSequence) null);
    StringUtils.getByteBufferUtf8(""\u0000Y"");
}",0,
project,0,test2929,"public void test2929() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byteArray0[0] = (byte) (-93);
    StringUtils.newString(byteArray0, ""UTF-16"");
    StringUtils.getByteBufferUtf8("""");
}",0,
project,0,test3030,"public void test3030() throws Throwable {
    StringUtils.newString((byte[]) null, ""dzT1_@'Zx4^+oj7)*@n"");
    byte[] byteArray0 = StringUtils.getBytesUtf8(""dzT1_@'Zx4^+oj7)*@n"");
    StringUtils.getBytesUsAscii("""");
    StringUtils stringUtils0 = new StringUtils();
    StringUtils.newString(byteArray0, (String) null);
    String string0 = ""US-ASCII"";
    StringUtils.getBytesUtf16Le(string0);
}",0,
project,0,test3131,"public void test3131() throws Throwable {
    byte[] byteArray0 = StringUtils.getBytesUtf16Be((String) null);
    StringUtils.newStringIso8859_1((byte[]) null);
    // Undeclared exception!
    try {
        StringUtils.newStringUtf16Be(byteArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
    }
}",0,
project,0,test3232,"public void test3232() throws Throwable {
    byte[] byteArray0 = new byte[9];
    byteArray0[0] = (byte) 1;
    byteArray0[1] = (byte) 79;
    byteArray0[2] = (byte) 45;
    byteArray0[3] = (byte) 0;
    byteArray0[4] = (byte) 88;
    byteArray0[5] = (byte) 70;
    byteArray0[6] = (byte) 0;
    byteArray0[7] = (byte) 18;
    byteArray0[8] = (byte) (-1);
    StringUtils.newStringIso8859_1(byteArray0);
    StringUtils.newStringUsAscii(byteArray0);
    StringUtils.equals((CharSequence) ""\u0001O-\u0000XF\u0000\u0012\uFFFD"", (CharSequence) ""\u0001O-\u0000XF\u0000\u0012\u00FF"");
    CharBuffer charBuffer0 = CharBuffer.allocate(512);
    StringUtils.equals((CharSequence) ""\u0001O-\u0000XF\u0000\u0012\uFFFD"", (CharSequence) charBuffer0);
    StringUtils.getByteBufferUtf8(""\u0001O-\u0000XF\u0000\u0012\uFFFD"");
    StringUtils.getByteBufferUtf8(""\u0001O-\u0000XF\u0000\u0012\uFFFD"");
}",0,
project,0,test3434,"public void test3434() throws Throwable {
    CharBuffer charBuffer0 = CharBuffer.allocate(1241);
    charBuffer0.limit(1241);
    CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
    charBuffer1.codePoints();
    charBuffer0.clear();
    StringUtils.equals((CharSequence) charBuffer1, (CharSequence) charBuffer0);
    StringUtils.equals((CharSequence) charBuffer0, (CharSequence) charBuffer1);
    StringUtils.equals((CharSequence) charBuffer1, (CharSequence) charBuffer0);
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) (-123);
    byteArray0[1] = (byte) 0;
    byteArray0[2] = (byte) 1;
    StringUtils.newStringIso8859_1(byteArray0);
}",0,
project,0,test3535,"public void test3535() throws Throwable {
    byte[] byteArray0 = new byte[9];
    byteArray0[0] = (byte) 1;
    byteArray0[1] = (byte) 79;
    byteArray0[2] = (byte) 45;
    byteArray0[3] = (byte) 0;
    byteArray0[4] = (byte) 88;
    byteArray0[5] = (byte) 70;
    byteArray0[6] = (byte) 0;
    byteArray0[7] = (byte) 18;
    byteArray0[8] = (byte) (-1);
    StringUtils.newStringIso8859_1(byteArray0);
    String string0 = StringUtils.newStringUsAscii(byteArray0);
    StringUtils.equals((CharSequence) ""\u0001O-\u0000XF\u0000\u0012\uFFFD"", (CharSequence) ""\u0001O-\u0000XF\u0000\u0012\u00FF"");
    CharBuffer charBuffer0 = CharBuffer.allocate(512);
    charBuffer0.compact();
    StringUtils.equals((CharSequence) ""\u0001O-\u0000XF\u0000\u0012\uFFFD"", (CharSequence) charBuffer0);
    StringUtils.getByteBufferUtf8(string0);
    StringUtils.getByteBufferUtf8(string0);
    String string1 = """";
    StringUtils.getByteBufferUtf8(string1);
}",0,
project,0,test3636,"public void test3636() throws Throwable {
    byte[] byteArray0 = new byte[9];
    StringUtils.newStringUsAscii(byteArray0);
    CharBuffer charBuffer0 = CharBuffer.allocate((byte) 94);
    StringUtils.equals((CharSequence) ""\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"", (CharSequence) charBuffer0);
}",0,
