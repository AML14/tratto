focal_method,test_prefix,docstring
"public boolean isDoubleMetaphoneEqual(final String value1, final String value2, final boolean alternate) {
    return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));
}","public void test0000() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(""YG"", ""WRGLIRQ9BHA4\""9'0C8-Q"", true);
    assertFalse(boolean0);
}","/**
 * Check if the Double Metaphone values of two <code>String</code> values
 * are equal, optionally using the alternate value.
 *
 * @param value1 The left-hand side of the encoded {@link String#equals(Object)}.
 * @param value2 The right-hand side of the encoded {@link String#equals(Object)}.
 * @param alternate use the alternate value if {@code true}.
 * @return {@code true} if the encoded <code>String</code>s are equal;
 *          {@code false} otherwise.
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test0001() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(""YG"", ""WRGLIRQ9BHA4\""9'0C8-Q"", true);
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test0012() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""GNGNEY"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test0013() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""GNGNEY"");
    assertEquals(""NKN"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test0025() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""SCHc:%\""-IGe"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test0026() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""SCHc:%\""-IGe"");
    assertEquals(""XKK"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test0037() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""GlIrQ9BhA4\""9'0C8-Q"");
    assertNotNull(string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test0049() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    doubleMetaphone0.setMaxCodeLen(9);
    assertEquals(9, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test00510() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    doubleMetaphone0.encode((String) null);
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test00611() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""EnugHHA*c\""y9!$="");
    assertEquals(""ANKK"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test00712() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""DSGNIgER"");
    assertEquals(""TSNJ"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test00814() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""ShJYghsFM3"");
    assertEquals(""XJSF"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test00915() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""PSHOLM"");
    assertEquals(""SLM"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test00916() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""PSHOLM"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test01017() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""SCHWpXz"");
    assertEquals(""XPKS"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test01118() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""GEti./E U}ws'L"");
    assertNotNull(string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test01220() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""WRBV&EGH"");
    assertEquals(""RPF"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test01221() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""WRBV&EGH"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test01322() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""`/[#l dFf1EL#K>"");
    assertEquals(""LTFL"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test01424() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""K~6`NZIkk.v>=#Q"");
    assertEquals(""KNSK"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test01525() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""34{+,~f#mmybk9P"");
    assertEquals(""FMPK"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test01626() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""(O/*;[ueh>nnzid~(]"");
    assertEquals(""NST"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test01727() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""X^t.aQQ4nx"");
    assertEquals(""STKN"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test01828() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""1xyNUoVvN1%Sh||NY"");
    assertEquals(""KSNF"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"@Override
public Object encode(final Object obj) throws EncoderException {
    if (!(obj instanceof String)) {
        throw new EncoderException(""DoubleMetaphone encode parameter is not of type String"");
    }
    return doubleMetaphone((String) obj);
}","public void test01929() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    Object object0 = doubleMetaphone0.encode((Object) ""gX>dl_"");
    assertEquals(""KKST"", object0);
}","/**
 * Encode the value using DoubleMetaphone.  It will only work if
 * <code>obj</code> is a <code>String</code> (like <code>Metaphone</code>).
 *
 * @param obj Object to encode (should be of type String)
 * @return An encoded Object (will be of type String)
 * @throws EncoderException encode parameter is not of type String
 */"
"@Override
public Object encode(final Object obj) throws EncoderException {
    if (!(obj instanceof String)) {
        throw new EncoderException(""DoubleMetaphone encode parameter is not of type String"");
    }
    return doubleMetaphone((String) obj);
}","public void test02031() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    Object object0 = new Object();
    try {
        doubleMetaphone0.encode(object0);
        fail(""Expecting exception: Exception"");
    } catch (Exception e) {
        //
        // DoubleMetaphone encode parameter is not of type String
        //
        verifyException(""org.apache.commons.codec.language.DoubleMetaphone"", e);
    }
}","/**
 * Encode the value using DoubleMetaphone.  It will only work if
 * <code>obj</code> is a <code>String</code> (like <code>Metaphone</code>).
 *
 * @param obj Object to encode (should be of type String)
 * @return An encoded Object (will be of type String)
 * @throws EncoderException encode parameter is not of type String
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test02132() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""cwOapachm}comPo.codec.ucodeEepon"");
    assertEquals(""KPKM"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test02233() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""CAESAR"");
    assertEquals(""SSR"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test02234() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""CAESAR"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test02335() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""SCHLcH"");
    assertEquals(""XLK"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test02436() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""H9^:\""|cZ{sj`d]p'^"");
    assertEquals(""SSTP"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test02537() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""WICZ"");
    assertEquals(""AKS"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test02638() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""MCC"");
    assertEquals(""MK"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test02739() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""JoUCCES"");
    assertEquals(""JKSS"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test02840() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""UCCHU{D"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test02841() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""UCCHU{D"");
    assertNotNull(string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test02943() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""CQ"");
    assertEquals(""K"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test02944() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""CQ"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test03046() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""MCCE"");
    assertEquals(""MKS"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test03147() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""CIE"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test03148() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""CIE"");
    assertEquals(""S"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test03249() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""kC cw"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test03250() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""kC cw"");
    assertEquals(""KK"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test03351() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""1?EcC5>[EC(U5:"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test03352() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""1?EcC5>[EC(U5:"");
    assertEquals(""KK"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test03453() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    doubleMetaphone0.isDoubleMetaphoneEqual(""UCCE"", ""UCCE"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test03554() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""CHORE"");
    assertEquals(""XR"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test03555() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""CHORE"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test03656() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""7CHAE"");
    assertEquals(""K"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test03658() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""7CHAE"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test03759() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""CHOR"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test03760() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""CHOR"");
    assertNotNull(string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test03862() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""~zziOx|5>WCHk"");
    assertEquals(""SKSX"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test03963() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""MCH"");
    assertEquals(""MK"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test03964() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""MCH"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test04065() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""#h1Lp@c7UDGiAzS+0PM"");
    assertEquals(""LPKJ"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test04166() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""&dg`[T y7FHPK^`7I"");
    assertEquals(""TKTF"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test04267() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    doubleMetaphone0.isDoubleMetaphoneEqual(""+dt-Uj$24/Rz6w"", ""+dt-Uj$24/Rz6w"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test04368() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""EGnugHHA*c\""y9!$="");
    assertEquals(""AKNF"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test04469() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    doubleMetaphone0.isDoubleMetaphoneEqual(""NGNRK"", ""NGNRK"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test04570() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""aGnogH;*w\""y*e!"");
    assertEquals(""AKNK"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test04671() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""GYJB!A>9JC"");
    assertEquals(""KPJK"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test04773() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""GiE'bL]Yv|I<*y(|K"");
    assertEquals(""KPLF"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public boolean isDoubleMetaphoneEqual(final String value1, final String value2) {
    return isDoubleMetaphoneEqual(value1, value2, false);
}","public void test04874() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(""KNRGY"", ""KNRGY"");
    assertTrue(boolean0);
}","/**
 * Check if the Double Metaphone values of two <code>String</code> values
 * are equal.
 *
 * @param value1 The left-hand side of the encoded {@link String#equals(Object)}.
 * @param value2 The right-hand side of the encoded {@link String#equals(Object)}.
 * @return {@code true} if the encoded <code>String</code>s are equal;
 *          {@code false} otherwise.
 * @see #isDoubleMetaphoneEqual(String,String,boolean)
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test04875() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(""KNRGY"", ""KNRGY"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public boolean isDoubleMetaphoneEqual(final String value1, final String value2) {
    return isDoubleMetaphoneEqual(value1, value2, false);
}","public void test04976() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    boolean boolean0 = doubleMetaphone0.isDoubleMetaphoneEqual(""MANGER"", ""MANGER"");
    assertTrue(boolean0);
}","/**
 * Check if the Double Metaphone values of two <code>String</code> values
 * are equal.
 *
 * @param value1 The left-hand side of the encoded {@link String#equals(Object)}.
 * @param value2 The right-hand side of the encoded {@link String#equals(Object)}.
 * @return {@code true} if the encoded <code>String</code>s are equal;
 *          {@code false} otherwise.
 * @see #isDoubleMetaphoneEqual(String,String,boolean)
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test05077() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""K_ GY"");
    assertNotNull(string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test05078() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""K_ GY"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test05180() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""OGGI"");
    assertNotNull(string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test05182() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""OGGI"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test05283() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""Ne[1];Ugg?_|Z{iH3"");
    assertEquals(""NKS"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test05284() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""Ne[1];Ugg?_|Z{iH3"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test05385() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""Ghi}9;s"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test05386() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""Ghi}9;s"");
    assertEquals(""JS"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test05487() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""TGH"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test05488() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""TGH"");
    assertEquals(""TK"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test05589() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""gHY27x"");
    assertEquals(""KKS"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test05590() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""gHY27x"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test05691() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""YGH"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test05692() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""YGH"");
    assertEquals(""AK"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test05793() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""DYGH"");
    assertEquals(""T"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test05894() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""SCHLc:IGH"");
    assertEquals(""XLK"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test05995() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""HAIS"");
    assertEquals(""H"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test05996() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""HAIS"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test06097() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""KNWRJOSE"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test06098() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""KNWRJOSE"");
    assertEquals(""NRJS"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test06199() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    doubleMetaphone0.isDoubleMetaphoneEqual(""JOSE"", ""JOSE"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test062100() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""8&aZrYJa"");
    assertEquals(""SRJ"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test063101() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""YJopE.E98J\u0001"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test063102() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""YJopE.E98J\u0001"");
    assertEquals(""AJPJ"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test064103() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""sh!*u52)8Jj/NZ"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test064104() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""sh!*u52)8Jj/NZ"");
    assertEquals(""XJNS"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test065105() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""ILLO"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test065106() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""ILLO"");
    assertEquals(""AL"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test066107() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode("")N./ZvY'WPH&xn4Y#C"");
    assertEquals(""NSFF"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test067108() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""PBNQOX"");
    assertEquals(""PNKK"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test068109() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""WR"");
    assertEquals(""R"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test068110() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""WR"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test069111() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""IER"");
    assertEquals(""A"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test069112() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""IER"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test070113() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""(u?0Rrh"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test070114() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""(u?0Rrh"");
    assertEquals(""R"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test071115() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""YSL"");
    assertEquals(""AL"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test071116() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""YSL"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test072117() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""SUGAR"");
    assertEquals(""XKR"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test072118() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""SUGAR"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test073119() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""KNSIA"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test073120() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""KNSIA"");
    assertEquals(""NS"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test074121() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""SIA"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test074122() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""SIA"");
    assertEquals(""S"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test075123() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""SLDBfhlW-l3W{"");
    assertEquals(""SLTP"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test076124() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""9^szoOM`v6tU5=io8O&"");
    assertEquals(""SMFT"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test077125() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    doubleMetaphone0.isDoubleMetaphoneEqual(""wc5;.?}[0[wk.OjASS"", ""wc5;.?}[0[wk.OjASS"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test078126() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""ScIO"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test078127() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""ScIO"");
    assertEquals(""S"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test079128() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""o&SCH"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test079129() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""o&SCH"");
    assertEquals(""AX"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test080130() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""SCHYcFyH"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test080131() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""SCHYcFyH"");
    assertEquals(""XKF"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test081132() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""SC"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test081133() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""SC"");
    assertEquals(""SK"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test082134() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""TION"");
    assertEquals(""XN"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test082135() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""TION"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test083136() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""TCH"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test083137() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""TCH"");
    assertEquals(""X"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test084138() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""cj}]ThUj=9VX61%p"");
    assertEquals(""KJ0J"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test085139() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""TTH"");
    assertEquals(""0"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test085140() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""TTH"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test086141() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""v&{%xttD?"");
    assertEquals(""FKST"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test087142() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""WHBB"");
    assertEquals(""AP"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test087143() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""WHBB"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test088144() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""6Uw"");
    assertEquals("""", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test088145() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""6Uw"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test089146() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""EWSKI"");
    assertEquals(""ASK"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test090147() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""KNWITZ"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test090148() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""KNWITZ"");
    assertEquals(""NTS"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test091149() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""qS@EH_oUX"");
    assertEquals(""KS"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test092150() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""ne=ZxX\"")_rTK>"");
    assertEquals(""NSKS"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test093151() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""C<Ea\""M:Zha(sJAu"");
    assertEquals(""KMJS"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test094152() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""Zac}B[~wuH7op6d6"");
    assertEquals(""SKPP"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test095153() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""WITZ"");
    assertEquals(""ATS"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test095154() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""WITZ"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test096155() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""CHIA"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test096156() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""CHIA"");
    assertEquals(""K"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test097157() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""og.apache.commos.codec.E]coderException"");
    assertEquals(""AKPX"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test098158() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""BACHER"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test098159() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""BACHER"");
    assertEquals(""PKR"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test099160() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""CHS@NO"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test099161() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""CHS@NO"");
    assertEquals(""KSN"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test100162() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""ORCHES"");
    assertEquals(""ARKS"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test101163() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""CHL}A{"");
    assertEquals(""KL"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test101164() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""CHL}A{"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test102165() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""ACH"");
    assertEquals(""AK"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test102166() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""ACH"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test103167() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""LLO"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test103168() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""LLO"");
    assertEquals(""L"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test104169() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""s$llu!MpoPx-t"");
    assertEquals(""SLMP"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test105170() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""|Q@SUmBN2v.LLJlqVH"");
    assertEquals(""KSMP"", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test106171() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""UMB"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"public String doubleMetaphone(final String value) {
    return doubleMetaphone(value, false);
}","public void test106172() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.doubleMetaphone(""UMB"");
    assertEquals(""AM"", string0);
}","/**
 * Encode a value with Double Metaphone.
 *
 * @param value String to encode
 * @return an encoded string
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test107173() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode("""");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test107174() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode("""");
    assertNull(string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
"public int getMaxCodeLen() {
    return this.maxCodeLen;
}","public void test108175() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""W"");
    assertEquals(4, doubleMetaphone0.getMaxCodeLen());
}","/**
 * Returns the maxCodeLen.
 * @return int
 */"
"@Override
public String encode(final String value) {
    return doubleMetaphone(value);
}","public void test108176() throws Throwable {
    DoubleMetaphone doubleMetaphone0 = new DoubleMetaphone();
    String string0 = doubleMetaphone0.encode(""W"");
    assertEquals("""", string0);
}","/**
 * Encode the value using DoubleMetaphone.
 *
 * @param value String to encode
 * @return An encoded String
 */"
