{
  "test1214" : {
    "methodSignature" : "public int read() throws IOException",
    "methodName" : "read",
    "className" : "org.apache.commons.codec.binary.BaseNCodecInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1214() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    Base32 base32_0 = new Base32((byte) (-1), byteArray0, false);\n    BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(byteArrayInputStream0, base32_0, true);\n    int int0 = baseNCodecInputStream0.read();\n}",
    "testName" : "test1214"
  },
  "test1011" : {
    "methodSignature" : "public int read(byte[] b, int offset, int len) throws IOException",
    "methodName" : "read",
    "className" : "org.apache.commons.codec.binary.BaseNCodecInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1011() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    Base32 base32_0 = new Base32((byte) (-1), byteArray0, false);\n    BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(byteArrayInputStream0, base32_0, true);\n    baseNCodecInputStream0.read(byteArray0, (-823), (int) (byte) (-1));\n}",
    "testName" : "test1011"
  },
  "test1112" : {
    "methodSignature" : "public int read(byte[] b, int offset, int len) throws IOException",
    "methodName" : "read",
    "className" : "org.apache.commons.codec.binary.BaseNCodecInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1112() throws Throwable {\n    Base64 base64_0 = new Base64();\n    BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream((InputStream) null, base64_0, true);\n    baseNCodecInputStream0.read((byte[]) null, (-319), 76);\n}",
    "testName" : "test1112"
  },
  "test000" : {
    "methodSignature" : "public int read(byte[] b, int offset, int len) throws IOException",
    "methodName" : "read",
    "className" : "org.apache.commons.codec.binary.BaseNCodecInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);\n    byte[] byteArray0 = new byte[2];\n    byte[] byteArray1 = new byte[0];\n    Base64 base64_0 = new Base64((-734), byteArray0, false);\n    BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(pipedInputStream0, base64_0, false);\n    baseNCodecInputStream0.read(byteArray1, 0, 3440);\n}",
    "testName" : "test000"
  },
  "test011" : {
    "methodSignature" : "public int read(byte[] b, int offset, int len) throws IOException",
    "methodName" : "read",
    "className" : "org.apache.commons.codec.binary.BaseNCodecInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte) 0);\n    Base32 base32_0 = new Base32(false);\n    BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(byteArrayInputStream0, base32_0, false);\n    int int0 = baseNCodecInputStream0.read(byteArray0, 0, (int) (byte) 1);\n}",
    "testName" : "test011"
  },
  "test022" : {
    "methodSignature" : "public int read() throws IOException",
    "methodName" : "read",
    "className" : "org.apache.commons.codec.binary.BaseNCodecInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Base64 base64_0 = new Base64((-3173));\n    BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream((InputStream) null, base64_0, true);\n    baseNCodecInputStream0.read();\n}",
    "testName" : "test022"
  },
  "test033" : {
    "methodSignature" : "public int read() throws IOException",
    "methodName" : "read",
    "className" : "org.apache.commons.codec.binary.BaseNCodecInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    Base64 base64_0 = new Base64(false);\n    BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(mockFileInputStream0, base64_0, false);\n    baseNCodecInputStream0.read();\n}",
    "testName" : "test033"
  },
  "test056" : {
    "methodSignature" : "public int read() throws IOException",
    "methodName" : "read",
    "className" : "org.apache.commons.codec.binary.BaseNCodecInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056() throws Throwable {\n    byte[] byteArray0 = new byte[5];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    Base32 base32_0 = new Base32(0);\n    BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(byteArrayInputStream0, base32_0, false);\n    int int0 = baseNCodecInputStream0.read();\n}",
    "testName" : "test056"
  },
  "test067" : {
    "methodSignature" : "public int read() throws IOException",
    "methodName" : "read",
    "className" : "org.apache.commons.codec.binary.BaseNCodecInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067() throws Throwable {\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    Base32 base32_0 = new Base32(false);\n    base32_0.ensureBufferSize(68);\n    BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(sequenceInputStream0, base32_0, true);\n    int int0 = baseNCodecInputStream0.read();\n}",
    "testName" : "test067"
  },
  "test078" : {
    "methodSignature" : "public int read(byte[] b, int offset, int len) throws IOException",
    "methodName" : "read",
    "className" : "org.apache.commons.codec.binary.BaseNCodecInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078() throws Throwable {\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, 551);\n    Base64 base64_0 = new Base64(551);\n    BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(bufferedInputStream0, base64_0, true);\n    byte[] byteArray0 = new byte[7];\n    int int0 = baseNCodecInputStream0.read(byteArray0, (int) (byte) 0, (int) (byte) 0);\n}",
    "testName" : "test078"
  },
  "test089" : {
    "methodSignature" : "public int read(byte[] b, int offset, int len) throws IOException",
    "methodName" : "read",
    "className" : "org.apache.commons.codec.binary.BaseNCodecInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089() throws Throwable {\n    byte[] byteArray0 = new byte[4];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 0, (byte) 0);\n    Base64 base64_0 = new Base64(2543);\n    BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(byteArrayInputStream0, base64_0, false);\n    baseNCodecInputStream0.read(byteArray0, 2543, 757);\n}",
    "testName" : "test089"
  },
  "test1315" : {
    "methodSignature" : "public boolean markSupported()",
    "methodName" : "markSupported",
    "className" : "org.apache.commons.codec.binary.BaseNCodecInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1315() throws Throwable {\n    Base64 base64_0 = new Base64((-195));\n    BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream((InputStream) null, base64_0, true);\n    boolean boolean0 = baseNCodecInputStream0.markSupported();\n}",
    "testName" : "test1315"
  },
  "test0910" : {
    "methodSignature" : "public int read(byte[] b, int offset, int len) throws IOException",
    "methodName" : "read",
    "className" : "org.apache.commons.codec.binary.BaseNCodecInputStream",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0910() throws Throwable {\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    Base32 base32_0 = new Base32(false);\n    BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(sequenceInputStream0, base32_0, true);\n    byte[] byteArray0 = new byte[0];\n    baseNCodecInputStream0.read(byteArray0, 76, (-353));\n}",
    "testName" : "test0910"
  }
}