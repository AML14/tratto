project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byteArray0[2] = (byte) (-30);
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    // Undeclared exception!
    try {
        Base64.encodeInteger(bigInteger0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test011,"public void test011() throws Throwable {
    byte[] byteArray0 = new byte[4];
    byteArray0[2] = (byte) 54;
    byte[] byteArray1 = Base64.discardNonBase64(byteArray0);
    assertEquals(1, byteArray1.length);
}",0,
project,0,test023,"public void test023() throws Throwable {
    byte[] byteArray0 = new byte[2];
    byteArray0[1] = (byte) 123;
    // Undeclared exception!
    try {
        Base64.decodeBase64(byteArray0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test034,"public void test034() throws Throwable {
    byte[] byteArray0 = new byte[3];
    // Undeclared exception!
    try {
        Base64.encodeBase64Chunked(byteArray0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test045,"public void test045() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(1);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test056,"public void test056() throws Throwable {
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) (-67);
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    // Undeclared exception!
    try {
        Base64.encodeInteger(bigInteger0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test067,"public void test067() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64();
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test078,"public void test078() throws Throwable {
    BigInteger bigInteger0 = BigInteger.TEN;
    byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);
    assertEquals(1, byteArray0.length);
}",0,
project,0,test089,"public void test089() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ZERO;
    byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);
    assertEquals(0, byteArray0.length);
}",0,
project,0,test0910,"public void test0910() throws Throwable {
    byte[] byteArray0 = Base64.encodeBase64URLSafe((byte[]) null);
    assertNull(byteArray0);
}",0,assertNotNull(byteArray0)
project,0,test1011,"public void test1011() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ZERO;
    byte[] byteArray0 = Base64.encodeInteger(bigInteger0);
    byte[] byteArray1 = Base64.encodeBase64(byteArray0);
    byte[] byteArray2 = Base64.encodeBase64URLSafe(byteArray1);
    assertEquals(0, byteArray2.length);
}",0,
project,0,test1112,"public void test1112() throws Throwable {
    byte[] byteArray0 = Base64.encodeBase64((byte[]) null, true);
    assertNull(byteArray0);
}",0,
project,0,test1213,"public void test1213() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = Base64.encodeBase64(byteArray0, false);
    assertEquals(0, byteArray1.length);
}",0,
project,0,test1314,"public void test1314() throws Throwable {
    byte[] byteArray0 = Base64.encodeBase64((byte[]) null);
    assertNull(byteArray0);
}",0,
project,0,test1415,"public void test1415() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(87);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test1516,"public void test1516() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ZERO;
    byte[] byteArray0 = Base64.encodeInteger(bigInteger0);
    byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
    assertEquals(0, byteArray1.length);
}",0,
project,0,test1617,"public void test1617() throws Throwable {
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) 95;
    byteArray0[1] = (byte) 95;
    byteArray0[2] = (byte) 95;
    // Undeclared exception!
    try {
        Base64.decodeInteger(byteArray0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test1718,"public void test1718() throws Throwable {
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 80;
    byteArray0[1] = (byte) 72;
    // Undeclared exception!
    try {
        Base64.decodeInteger(byteArray0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test1819,"public void test1819() throws Throwable {
    byte[] byteArray0 = new byte[4];
    // Undeclared exception!
    try {
        Base64.encodeBase64(byteArray0, true);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test1920,"public void test1920() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(false);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test2021,"public void test2021() throws Throwable {
    // Undeclared exception!
    try {
        Base64.toIntegerBytes((BigInteger) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test2122,"public void test2122() throws Throwable {
    byte[] byteArray0 = new byte[4];
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test2223,"public void test2223() throws Throwable {
    // Undeclared exception!
    try {
        Base64.isArrayByteBase64((byte[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test2324,"public void test2324() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(true);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test2425,"public void test2425() throws Throwable {
    // Undeclared exception!
    try {
        Base64.discardWhitespace((byte[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test2526,"public void test2526() throws Throwable {
    // Undeclared exception!
    try {
        Base64.discardNonBase64((byte[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test2627,"public void test2627() throws Throwable {
    // Undeclared exception!
    try {
        Base64.decodeInteger((byte[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test2728,"public void test2728() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(0, (byte[]) null, false);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test2829,"public void test2829() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(0, (byte[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test2930,"public void test2930() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ZERO;
    byte[] byteArray0 = Base64.encodeInteger(bigInteger0);
    byte[] byteArray1 = Base64.decodeBase64(byteArray0);
    assertSame(byteArray1, byteArray0);
}",0,
project,0,test3031,"public void test3031() throws Throwable {
    byte[] byteArray0 = Base64.decodeBase64((byte[]) null);
    assertNull(byteArray0);
}",0,
project,0,test3132,"public void test3132() throws Throwable {
    byte[] byteArray0 = new byte[3];
    // Undeclared exception!
    try {
        Base64.encodeBase64(byteArray0, true, true);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test3233,"public void test3233() throws Throwable {
    byte[] byteArray0 = Base64.encodeBase64((byte[]) null, false, false);
    assertNull(byteArray0);
}",0,
project,0,test3334,"public void test3334() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ZERO;
    byte[] byteArray0 = Base64.encodeInteger(bigInteger0);
    byte[] byteArray1 = Base64.encodeBase64(byteArray0, false, false);
    assertEquals(0, byteArray1.length);
}",0,
project,0,test3435,"public void test3435() throws Throwable {
    boolean boolean0 = Base64.isBase64((byte) 117);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3536,"public void test3536() throws Throwable {
    boolean boolean0 = Base64.isBase64((byte) (-63));
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3637,"public void test3637() throws Throwable {
    boolean boolean0 = Base64.isBase64((byte) 123);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3738,"public void test3738() throws Throwable {
    boolean boolean0 = Base64.isBase64((byte) 4);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3839,"public void test3839() throws Throwable {
    byte[] byteArray0 = new byte[7];
    Base64 base64_0 = new Base64((-160), byteArray0, true);
    base64_0.encode(byteArray0, (int) (byte) 0, (int) (byte) 1);
    base64_0.decode(byteArray0, (int) (byte) 102, (-160));
    assertTrue(base64_0.isUrlSafe());
}",0,assertTrue(base64_0.isUrlSafe())
project,0,test3940,"public void test3940() throws Throwable {
    byte[] byteArray0 = new byte[7];
    // Undeclared exception!
    try {
        Base64.encodeBase64(byteArray0, true);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test4041,"public void test4041() throws Throwable {
    byte[] byteArray0 = new byte[26];
    byteArray0[4] = (byte) (-10);
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(true);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test4142,"public void test4142() throws Throwable {
    byte[] byteArray0 = new byte[7];
    byteArray0[0] = (byte) 124;
    Base64 base64_0 = new Base64((-160), byteArray0, true);
    // Undeclared exception!
    try {
        base64_0.decode(byteArray0, 0, (int) (byte) 124);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 7
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",1,
project,0,test4243,"public void test4243() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(234);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test4344,"public void test4344() throws Throwable {
    byte[] byteArray0 = new byte[1];
    Base64 base64_0 = new Base64((-2), byteArray0, true);
    // Undeclared exception!
    try {
        Base64.encodeBase64(byteArray0, true, true);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test4445,"public void test4445() throws Throwable {
    byte[] byteArray0 = new byte[2];
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64((byte) 0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test4546,"public void test4546() throws Throwable {
    byte[] byteArray0 = new byte[1];
    // Undeclared exception!
    try {
        Base64.encodeBase64(byteArray0, true, false);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test4647,"public void test4647() throws Throwable {
    byte[] byteArray0 = new byte[3];
    Base64 base64_0 = new Base64(2445, byteArray0, true);
    boolean boolean0 = base64_0.isUrlSafe();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4748,"public void test4748() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(1471);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test4849,"public void test4849() throws Throwable {
    byte[] byteArray0 = new byte[0];
    Base64 base64_0 = new Base64((-1), byteArray0, false);
    assertFalse(base64_0.isUrlSafe());
}",0,assertTrue(base64_0.isUrlSafe())
project,0,test4950,"public void test4950() throws Throwable {
    byte[] byteArray0 = new byte[3];
    // Undeclared exception!
    try {
        Base64.encodeBase64(byteArray0, false, false);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test5051,"public void test5051() throws Throwable {
    byte[] byteArray0 = new byte[3];
    Base64 base64_0 = new Base64((byte) 0, byteArray0);
    assertFalse(base64_0.isUrlSafe());
}",0,assertFalse(base64_0.isUrlSafe())
project,0,test5152,"public void test5152() throws Throwable {
    // Undeclared exception!
    try {
        Base64.encodeInteger((BigInteger) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // encodeInteger called with null parameter
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test5253,"public void test5253() throws Throwable {
    byte[] byteArray0 = new byte[2];
    byteArray0[0] = (byte) 32;
    boolean boolean0 = Base64.isArrayByteBase64(byteArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test5354,"public void test5354() throws Throwable {
    byte[] byteArray0 = new byte[7];
    byteArray0[0] = (byte) 9;
    boolean boolean0 = Base64.isArrayByteBase64(byteArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test5455,"public void test5455() throws Throwable {
    byte[] byteArray0 = new byte[3];
    byteArray0[1] = (byte) 32;
    byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
    assertEquals(2, byteArray1.length);
}",0,
project,0,test5558,"public void test5558() throws Throwable {
    byte[] byteArray0 = new byte[2];
    // Undeclared exception!
    try {
        Base64.encodeBase64Chunked(byteArray0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test5659,"public void test5659() throws Throwable {
    byte[] byteArray0 = new byte[7];
    byteArray0[3] = (byte) 9;
    byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 9, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test5762,"public void test5762() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64((-46));
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test5863,"public void test5863() throws Throwable {
    byte[] byteArray0 = new byte[7];
    Base64 base64_0 = new Base64((-160), byteArray0, true);
    // Undeclared exception!
    try {
        Base64.encodeBase64(byteArray0, true, true);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test5964,"public void test5964() throws Throwable {
    byte[] byteArray0 = Base64.encodeBase64Chunked((byte[]) null);
    assertNull(byteArray0);
}",0,assertNotNull(byteArray0)
project,0,test6065,"public void test6065() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(97);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test6166,"public void test6166() throws Throwable {
    byte[] byteArray0 = new byte[26];
    // Undeclared exception!
    try {
        Base64.encodeBase64Chunked(byteArray0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test6267,"public void test6267() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[3] = (byte) 127;
    byte[] byteArray1 = Base64.discardNonBase64(byteArray0);
    assertEquals(0, byteArray1.length);
}",0,
project,0,test6368,"public void test6368() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byteArray0[4] = (byte) 105;
    // Undeclared exception!
    try {
        Base64.decodeInteger(byteArray0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test6469,"public void test6469() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ZERO;
    Base64.encodeInteger(bigInteger0);
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(2247);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test6570,"public void test6570() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test6671,"public void test6671() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64((-3580));
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test6772,"public void test6772() throws Throwable {
    byte[] byteArray0 = new byte[9];
    byteArray0[6] = (byte) 101;
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(716, byteArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [\u0000\u0000\u0000\u0000\u0000\u0000e\u0000\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test6873,"public void test6873() throws Throwable {
    byte[] byteArray0 = new byte[4];
    // Undeclared exception!
    try {
        Base64.encodeBase64(byteArray0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test6974,"public void test6974() throws Throwable {
    byte[] byteArray0 = new byte[1];
    // Undeclared exception!
    try {
        Base64.encodeBase64URLSafe(byteArray0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [6\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
