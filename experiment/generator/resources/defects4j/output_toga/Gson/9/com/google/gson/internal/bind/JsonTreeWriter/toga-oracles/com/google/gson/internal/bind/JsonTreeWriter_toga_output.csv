project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.beginArray();
    JsonWriter jsonWriter0 = jsonTreeWriter0.beginArray();
    JsonWriter jsonWriter1 = jsonTreeWriter0.endArray();
    assertSame(jsonWriter1, jsonWriter0);
}",0,
project,0,test011,"public void test011() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    JsonWriter jsonWriter0 = jsonTreeWriter0.beginArray();
    jsonWriter0.beginObject();
    JsonWriter jsonWriter1 = jsonWriter0.endObject();
    assertSame(jsonWriter0, jsonWriter1);
}",1,
project,0,test022,"public void test022() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setLenient(true);
    JsonWriter jsonWriter0 = jsonTreeWriter0.value(true);
    assertSame(jsonTreeWriter0, jsonWriter0);
}",0,
project,0,test033,"public void test033() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setHtmlSafe(true);
    JsonWriter jsonWriter0 = jsonTreeWriter0.value(true);
    assertFalse(jsonWriter0.isLenient());
}",0,assertFalse(jsonWriter0.isLenient())
project,0,test044,"public void test044() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setSerializeNulls(false);
    JsonWriter jsonWriter0 = jsonTreeWriter0.value(false);
    assertFalse(jsonWriter0.isLenient());
}",0,assertFalse(jsonWriter0.isLenient())
project,0,test055,"public void test055() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setLenient(true);
    JsonWriter jsonWriter0 = jsonTreeWriter0.value("""");
    assertTrue(jsonWriter0.isLenient());
}",0,assertFalse(jsonWriter0.isLenient())
project,0,test066,"public void test066() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setHtmlSafe(true);
    JsonWriter jsonWriter0 = jsonTreeWriter0.value((String) null);
    assertTrue(jsonWriter0.getSerializeNulls());
}",0,assertFalse(jsonWriter0.getSerializeNulls())
project,0,test077,"public void test077() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setSerializeNulls(false);
    JsonWriter jsonWriter0 = jsonTreeWriter0.value(""Expected one JSON element but was "");
    assertFalse(jsonWriter0.isHtmlSafe());
}",0,assertFalse(jsonWriter0.isHtmlSafe())
project,0,test088,"public void test088() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    Short short0 = new Short((short) 0);
    jsonTreeWriter0.setHtmlSafe(true);
    JsonWriter jsonWriter0 = jsonTreeWriter0.value((Number) short0);
    assertTrue(jsonWriter0.getSerializeNulls());
}",0,assertTrue(jsonWriter0.getSerializeNulls())
project,0,test099,"public void test099() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setSerializeNulls(false);
    Short short0 = new Short((short) 0);
    JsonWriter jsonWriter0 = jsonTreeWriter0.value((Number) short0);
    assertFalse(jsonWriter0.isHtmlSafe());
}",0,assertFalse(jsonWriter0.isHtmlSafe())
project,0,test1010,"public void test1010() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setLenient(true);
    JsonWriter jsonWriter0 = jsonTreeWriter0.value(0L);
    assertTrue(jsonWriter0.getSerializeNulls());
}",0,assertFalse(jsonWriter0.getSerializeNulls())
project,0,test1111,"public void test1111() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setHtmlSafe(true);
    JsonWriter jsonWriter0 = jsonTreeWriter0.value((-1267L));
    assertTrue(jsonWriter0.isHtmlSafe());
}",0,assertTrue(jsonWriter0.isHtmlSafe())
project,0,test1212,"public void test1212() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setSerializeNulls(false);
    JsonWriter jsonWriter0 = jsonTreeWriter0.value(0L);
    assertSame(jsonTreeWriter0, jsonWriter0);
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setHtmlSafe(true);
    JsonWriter jsonWriter0 = jsonTreeWriter0.value(0.0);
    assertTrue(jsonWriter0.getSerializeNulls());
}",0,assertTrue(jsonWriter0.getSerializeNulls())
project,0,test1414,"public void test1414() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setSerializeNulls(false);
    JsonWriter jsonWriter0 = jsonTreeWriter0.value(0.0);
    assertSame(jsonTreeWriter0, jsonWriter0);
}",0,
project,0,test1515,"public void test1515() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setLenient(true);
    JsonWriter jsonWriter0 = jsonTreeWriter0.nullValue();
    assertTrue(jsonWriter0.isLenient());
}",0,assertTrue(jsonWriter0.isLenient())
project,0,test1616,"public void test1616() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setHtmlSafe(true);
    JsonWriter jsonWriter0 = jsonTreeWriter0.nullValue();
    assertTrue(jsonWriter0.isHtmlSafe());
}",0,assertTrue(jsonWriter0.isHtmlSafe())
project,0,test1717,"public void test1717() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    JsonWriter jsonWriter0 = jsonTreeWriter0.beginObject();
    jsonWriter0.setLenient(true);
    JsonWriter jsonWriter1 = jsonTreeWriter0.name(""$]"");
    assertSame(jsonWriter1, jsonTreeWriter0);
}",1,
project,0,test1818,"public void test1818() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    Short short0 = new Short((short) (-1390));
    jsonTreeWriter0.value((Number) short0);
    JsonPrimitive jsonPrimitive0 = (JsonPrimitive) jsonTreeWriter0.get();
    assertFalse(jsonPrimitive0.isBoolean());
}",0,assertTrue(jsonPrimitive0.isBoolean())
project,0,test1919,"public void test1919() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.beginObject();
    JsonTreeWriter jsonTreeWriter1 = (JsonTreeWriter) jsonTreeWriter0.endObject();
    JsonObject jsonObject0 = (JsonObject) jsonTreeWriter1.get();
    assertFalse(jsonObject0.isJsonNull());
}",0,
project,0,test2020,"public void test2020() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.beginArray();
    jsonTreeWriter0.endArray();
    JsonElement jsonElement0 = jsonTreeWriter0.get();
    assertFalse(jsonElement0.isJsonPrimitive());
}",0,assertTrue(jsonElement0.isJsonPrimitive())
project,0,test2121,"public void test2121() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    JsonWriter jsonWriter0 = jsonTreeWriter0.beginObject();
    jsonWriter0.setHtmlSafe(true);
    JsonWriter jsonWriter1 = jsonTreeWriter0.endObject();
    assertTrue(jsonWriter1.getSerializeNulls());
}",0,assertTrue(jsonWriter1.getSerializeNulls())
project,0,test2222,"public void test2222() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    JsonWriter jsonWriter0 = jsonTreeWriter0.beginObject();
    jsonWriter0.setSerializeNulls(false);
    JsonWriter jsonWriter1 = jsonTreeWriter0.endObject();
    assertSame(jsonTreeWriter0, jsonWriter1);
}",1,
project,0,test2323,"public void test2323() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.beginArray();
    jsonTreeWriter0.setLenient(true);
    JsonWriter jsonWriter0 = jsonTreeWriter0.endArray();
    assertTrue(jsonWriter0.getSerializeNulls());
}",0,assertTrue(jsonWriter0.getSerializeNulls())
project,0,test2424,"public void test2424() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    JsonWriter jsonWriter0 = jsonTreeWriter0.beginArray();
    jsonWriter0.setSerializeNulls(false);
    JsonWriter jsonWriter1 = jsonTreeWriter0.endArray();
    assertFalse(jsonWriter1.getSerializeNulls());
}",0,assertTrue(jsonWriter1.getSerializeNulls())
project,0,test2525,"public void test2525() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setLenient(true);
    jsonTreeWriter0.beginObject();
    JsonWriter jsonWriter0 = jsonTreeWriter0.endObject();
    assertTrue(jsonWriter0.getSerializeNulls());
}",0,assertTrue(jsonWriter0.getSerializeNulls())
project,0,test2626,"public void test2626() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setHtmlSafe(true);
    jsonTreeWriter0.beginObject();
    JsonWriter jsonWriter0 = jsonTreeWriter0.name(""$]"");
    assertFalse(jsonWriter0.isLenient());
}",0,assertTrue(jsonWriter0.isLenient())
project,0,test2727,"public void test2727() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setLenient(true);
    JsonWriter jsonWriter0 = jsonTreeWriter0.beginArray();
    assertFalse(jsonWriter0.isHtmlSafe());
}",0,assertTrue(jsonWriter0.isHtmlSafe())
project,0,test2828,"public void test2828() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setHtmlSafe(true);
    JsonWriter jsonWriter0 = jsonTreeWriter0.beginArray();
    JsonWriter jsonWriter1 = jsonTreeWriter0.endArray();
    assertSame(jsonWriter1, jsonWriter0);
}",0,
project,0,test2929,"public void test2929() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setSerializeNulls(false);
    JsonWriter jsonWriter0 = jsonTreeWriter0.beginArray();
    assertFalse(jsonWriter0.isHtmlSafe());
}",0,
project,0,test3030,"public void test3030() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.beginObject();
    // Undeclared exception!
    try {
        jsonTreeWriter0.value("""");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.internal.bind.JsonTreeWriter"", e);
    }
}",0,
project,0,test3131,"public void test3131() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.beginObject();
    Integer integer0 = Integer.valueOf(92);
    // Undeclared exception!
    try {
        jsonTreeWriter0.value((Number) integer0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.internal.bind.JsonTreeWriter"", e);
    }
}",0,
project,0,test3232,"public void test3232() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.close();
    // Undeclared exception!
    try {
        jsonTreeWriter0.value((-1L));
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.internal.bind.JsonTreeWriter"", e);
    }
}",0,
project,0,test3333,"public void test3333() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.close();
    // Undeclared exception!
    try {
        jsonTreeWriter0.value(3169.0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.internal.bind.JsonTreeWriter"", e);
    }
}",0,
project,0,test3434,"public void test3434() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.close();
    // Undeclared exception!
    try {
        jsonTreeWriter0.nullValue();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.internal.bind.JsonTreeWriter"", e);
    }
}",0,
project,0,test3535,"public void test3535() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.beginObject();
    // Undeclared exception!
    try {
        jsonTreeWriter0.beginObject();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.internal.bind.JsonTreeWriter"", e);
    }
}",0,
project,0,test3636,"public void test3636() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.beginObject();
    // Undeclared exception!
    try {
        jsonTreeWriter0.beginArray();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.internal.bind.JsonTreeWriter"", e);
    }
}",0,
project,0,test3737,"public void test3737() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.beginArray();
    try {
        jsonTreeWriter0.close();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Incomplete document
        //
        verifyException(""com.google.gson.internal.bind.JsonTreeWriter"", e);
    }
}",1,
project,0,test3838,"public void test3838() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setLenient(true);
    Float float0 = new Float(0.0);
    JsonWriter jsonWriter0 = jsonTreeWriter0.value((Number) float0);
    assertTrue(jsonWriter0.getSerializeNulls());
}",0,assertTrue(jsonWriter0.getSerializeNulls())
project,0,test3939,"public void test3939() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    JsonWriter jsonWriter0 = jsonTreeWriter0.value((Number) null);
    assertSame(jsonTreeWriter0, jsonWriter0);
}",0,
project,0,test4040,"public void test4040() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setLenient(true);
    JsonWriter jsonWriter0 = jsonTreeWriter0.value((-82.0));
    assertTrue(jsonWriter0.isLenient());
}",0,assertTrue(jsonWriter0.isLenient())
project,0,test4141,"public void test4141() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.beginArray();
    jsonTreeWriter0.endArray();
    jsonTreeWriter0.close();
    // Undeclared exception!
    try {
        jsonTreeWriter0.name((String) null);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.internal.bind.JsonTreeWriter"", e);
    }
}",1,
project,0,test4242,"public void test4242() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    JsonWriter jsonWriter0 = jsonTreeWriter0.beginObject();
    jsonTreeWriter0.name("""");
    // Undeclared exception!
    try {
        jsonWriter0.name("""");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.internal.bind.JsonTreeWriter"", e);
    }
}",0,
project,0,test4343,"public void test4343() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.close();
    // Undeclared exception!
    try {
        jsonTreeWriter0.endObject();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.internal.bind.JsonTreeWriter"", e);
    }
}",1,
project,0,test4444,"public void test4444() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.beginObject();
    JsonWriter jsonWriter0 = jsonTreeWriter0.name(""$]"");
    // Undeclared exception!
    try {
        jsonWriter0.endArray();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.internal.bind.JsonTreeWriter"", e);
    }
}",0,
project,0,test4545,"public void test4545() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    // Undeclared exception!
    try {
        jsonTreeWriter0.endArray();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.internal.bind.JsonTreeWriter"", e);
    }
}",1,
project,0,test4646,"public void test4646() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    JsonWriter jsonWriter0 = jsonTreeWriter0.beginArray();
    jsonTreeWriter0.endArray();
    // Undeclared exception!
    try {
        jsonWriter0.endObject();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.internal.bind.JsonTreeWriter"", e);
    }
}",1,
project,0,test4747,"public void test4747() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.beginObject();
    // Undeclared exception!
    try {
        jsonTreeWriter0.value(true);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.internal.bind.JsonTreeWriter"", e);
    }
}",0,
project,0,test4848,"public void test4848() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.setSerializeNulls(false);
    jsonTreeWriter0.beginObject();
    jsonTreeWriter0.name("""");
    JsonWriter jsonWriter0 = jsonTreeWriter0.nullValue();
    assertFalse(jsonWriter0.isHtmlSafe());
}",0,assertTrue(jsonWriter0.isHtmlSafe())
project,0,test4949,"public void test4949() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.beginObject();
    jsonTreeWriter0.name(""Oi/PS+"");
    JsonWriter jsonWriter0 = jsonTreeWriter0.nullValue();
    // Undeclared exception!
    try {
        jsonWriter0.endArray();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.internal.bind.JsonTreeWriter"", e);
    }
}",1,
project,0,test5050,"public void test5050() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    JsonWriter jsonWriter0 = jsonTreeWriter0.beginObject();
    JsonWriter jsonWriter1 = jsonTreeWriter0.name(""!,B~C~P&;["");
    jsonTreeWriter0.value(false);
    jsonWriter1.name(""!,B~C~P&;["");
    // Undeclared exception!
    try {
        jsonWriter0.endObject();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.internal.bind.JsonTreeWriter"", e);
    }
}",0,
project,0,test5151,"public void test5151() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    JsonElement jsonElement0 = jsonTreeWriter0.get();
    assertFalse(jsonElement0.isJsonPrimitive());
}",0,assertTrue(jsonElement0.isJsonPrimitive())
project,0,test5252,"public void test5252() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.beginArray();
    // Undeclared exception!
    try {
        jsonTreeWriter0.get();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected one JSON element but was [[]]
        //
        verifyException(""com.google.gson.internal.bind.JsonTreeWriter"", e);
    }
}",1,
project,0,test5353,"public void test5353() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    jsonTreeWriter0.flush();
    assertTrue(jsonTreeWriter0.getSerializeNulls());
}",0,assertFalse(jsonTreeWriter0.getSerializeNulls())
project,0,test5454,"public void test5454() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    JsonWriter jsonWriter0 = jsonTreeWriter0.beginObject();
    jsonTreeWriter0.endObject();
    // Undeclared exception!
    try {
        jsonWriter0.name("""");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.internal.bind.JsonTreeWriter"", e);
    }
}",0,
project,0,test5555,"public void test5555() throws Throwable {
    JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
    // Undeclared exception!
    try {
        jsonTreeWriter0.jsonValue(""ALbW&nftz5i"");
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
