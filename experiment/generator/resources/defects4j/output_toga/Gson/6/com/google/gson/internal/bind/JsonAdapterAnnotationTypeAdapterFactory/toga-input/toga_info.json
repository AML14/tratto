{
  "test00" : {
    "methodSignature" : "public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> targetType)",
    "methodName" : "create",
    "className" : "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00() throws Throwable {\n    JsonAdapterAnnotationTypeAdapterFactory jsonAdapterAnnotationTypeAdapterFactory0 = new JsonAdapterAnnotationTypeAdapterFactory((ConstructorConstructor) null);\n    Gson gson0 = new Gson();\n    jsonAdapterAnnotationTypeAdapterFactory0.create(gson0, (TypeToken<Object>) null);\n}",
    "testName" : "test00"
  },
  "test11" : {
    "methodSignature" : "static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson, TypeToken<?> fieldType, JsonAdapter annotation)",
    "methodName" : "getTypeAdapter",
    "className" : "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11() throws Throwable {\n    Class<Excluder> class0 = Excluder.class;\n    JsonAdapter jsonAdapter0 = mock(JsonAdapter.class, new ViolatedAssumptionAnswer());\n    doReturn(class0).when(jsonAdapter0).value();\n    Gson gson0 = new Gson();\n    JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter((ConstructorConstructor) null, gson0, (TypeToken<?>) null, jsonAdapter0);\n}",
    "testName" : "test11"
  },
  "test22" : {
    "methodSignature" : "static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson, TypeToken<?> fieldType, JsonAdapter annotation)",
    "methodName" : "getTypeAdapter",
    "className" : "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22() throws Throwable {\n    Gson gson0 = new Gson();\n    Class<DateTypeAdapter> class0 = DateTypeAdapter.class;\n    TypeToken<DateTypeAdapter> typeToken0 = TypeToken.get(class0);\n    JsonAdapter jsonAdapter0 = mock(JsonAdapter.class, new ViolatedAssumptionAnswer());\n    doReturn(class0).when(jsonAdapter0).value();\n    JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter((ConstructorConstructor) null, gson0, typeToken0, jsonAdapter0);\n}",
    "testName" : "test22"
  },
  "test33" : {
    "methodSignature" : "public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> targetType)",
    "methodName" : "create",
    "className" : "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33() throws Throwable {\n    JsonAdapterAnnotationTypeAdapterFactory jsonAdapterAnnotationTypeAdapterFactory0 = new JsonAdapterAnnotationTypeAdapterFactory((ConstructorConstructor) null);\n    Gson gson0 = new Gson();\n    Class<Integer> class0 = Integer.TYPE;\n    TypeToken<Integer> typeToken0 = TypeToken.get(class0);\n    TypeAdapter<Integer> typeAdapter0 = jsonAdapterAnnotationTypeAdapterFactory0.create(gson0, typeToken0);\n}",
    "testName" : "test33"
  },
  "test44" : {
    "methodSignature" : "static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson, TypeToken<?> fieldType, JsonAdapter annotation)",
    "methodName" : "getTypeAdapter",
    "className" : "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44() throws Throwable {\n    Gson gson0 = new Gson();\n    Class<Integer> class0 = Integer.TYPE;\n    TypeToken<Integer> typeToken0 = TypeToken.get(class0);\n    JsonAdapter jsonAdapter0 = mock(JsonAdapter.class, new ViolatedAssumptionAnswer());\n    doReturn(class0).when(jsonAdapter0).value();\n    JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter((ConstructorConstructor) null, gson0, typeToken0, jsonAdapter0);\n}",
    "testName" : "test44"
  }
}