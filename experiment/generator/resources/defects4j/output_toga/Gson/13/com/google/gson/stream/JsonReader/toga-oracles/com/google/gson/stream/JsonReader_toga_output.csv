project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    StringReader stringReader0 = new StringReader(""_fZ+9+%"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    char[] charArray0 = new char[2];
    jsonReader0.setLenient(true);
    stringReader0.read(charArray0);
    jsonReader0.nextString();
}",1,
project,0,test011,"public void test011() throws Throwable {
    StringReader stringReader0 = new StringReader(""null"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.skipValue();
}",1,
project,0,test022,"public void test022() throws Throwable {
    StringReader stringReader0 = new StringReader(""{Z^"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    // Undeclared exception!
    try {
        jsonReader0.nextNull();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected null but was BEGIN_OBJECT at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test033,"public void test033() throws Throwable {
    StringReader stringReader0 = new StringReader(""7"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    // Undeclared exception!
    try {
        jsonReader0.nextName();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected a name but was NUMBER at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test044,"public void test044() throws Throwable {
    StringReader stringReader0 = new StringReader(""em]g?`Y9?9l`N"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    assertFalse(jsonReader0.isLenient());
}",0,assertFalse(jsonReader0.isLenient())
project,0,test045,"public void test045() throws Throwable {
    StringReader stringReader0 = new StringReader(""em]g?`Y9?9l`N"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    boolean boolean0 = jsonReader0.isLenient();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test056,"public void test056() throws Throwable {
    StringReader stringReader0 = new StringReader(""1>g`M*dk?MI8i"");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.skipValue();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test067,"public void test067() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.skipValue();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test078,"public void test078() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.peek();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test089,"public void test089() throws Throwable {
    StringReader stringReader0 = new StringReader(""u"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = (-1035);
    // Undeclared exception!
    try {
        jsonReader0.nextString();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test0910,"public void test0910() throws Throwable {
    StringReader stringReader0 = new StringReader(""u"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    stringReader0.close();
    try {
        jsonReader0.nextString();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test1011,"public void test1011() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextString();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test1112,"public void test1112() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 1896;
    // Undeclared exception!
    try {
        jsonReader0.nextNull();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test1213,"public void test1213() throws Throwable {
    StringReader stringReader0 = new StringReader(""'V"");
    char[] charArray0 = new char[3];
    stringReader0.read(charArray0);
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextNull();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test1314,"public void test1314() throws Throwable {
    StringReader stringReader0 = new StringReader(""L/ FL>gcC1q\""}"");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextName();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test1415,"public void test1415() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextName();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test1516,"public void test1516() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextLong();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test1617,"public void test1617() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextLong();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test1718,"public void test1718() throws Throwable {
    StringReader stringReader0 = new StringReader(""true"");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextInt();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test1819,"public void test1819() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextInt();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test1920,"public void test1920() throws Throwable {
    StringReader stringReader0 = new StringReader(""Expected a double but was "");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test2021,"public void test2021() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test2122,"public void test2122() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    stringReader0.close();
    try {
        jsonReader0.nextBoolean();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test2223,"public void test2223() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextBoolean();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test2324,"public void test2324() throws Throwable {
    StringReader stringReader0 = new StringReader(""@[z{Cr8jIr6;V*jG$w"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.close();
    // Undeclared exception!
    try {
        jsonReader0.hasNext();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JsonReader is closed
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test2425,"public void test2425() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.hasNext();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test2526,"public void test2526() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.hasNext();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test2627,"public void test2627() throws Throwable {
    StringReader stringReader0 = new StringReader(""td{lj"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.endObject();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test2728,"public void test2728() throws Throwable {
    StringReader stringReader0 = new StringReader(""()+@sNqw6Jl"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    stringReader0.close();
    try {
        jsonReader0.endObject();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test2829,"public void test2829() throws Throwable {
    StringReader stringReader0 = new StringReader(""com.google.gson.stream.MalformedJsonException"");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.endArray();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test2930,"public void test2930() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.endArray();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test3031,"public void test3031() throws Throwable {
    StringReader stringReader0 = new StringReader(""z &oj}, MU:J-!7%}R"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.close();
    // Undeclared exception!
    try {
        jsonReader0.doPeek();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JsonReader is closed
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test3132,"public void test3132() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.doPeek();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test3233,"public void test3233() throws Throwable {
    StringReader stringReader0 = new StringReader(""]+9v=*Y#rtSs76MPq+"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.beginObject();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected value at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test3334,"public void test3334() throws Throwable {
    StringReader stringReader0 = new StringReader("":M|nQ^XMJ;~^m"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    stringReader0.close();
    try {
        jsonReader0.beginObject();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test3435,"public void test3435() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.beginObject();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test3536,"public void test3536() throws Throwable {
    StringReader stringReader0 = new StringReader(""o2;$}Pr6#<"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 574;
    // Undeclared exception!
    try {
        jsonReader0.beginArray();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test3637,"public void test3637() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.beginArray();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test3738,"public void test3738() throws Throwable {
    StringReader stringReader0 = new StringReader(""u"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    String string0 = jsonReader0.nextString();
    assertEquals(""u"", string0);
}",1,
project,0,test3739,"public void test3739() throws Throwable {
    StringReader stringReader0 = new StringReader(""u"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    String string0 = jsonReader0.nextString();
    String string1 = jsonReader0.getPath();
    assertEquals(""$"", string1);
}",0,
project,0,test3840,"public void test3840() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    String string0 = jsonReader0.getPath();
    assertEquals(""$"", string0);
}",0,
project,0,test3841,"public void test3841() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    String string0 = jsonReader0.getPath();
    assertFalse(jsonReader0.isLenient());
}",0,assertTrue(jsonReader0.isLenient())
project,0,test3942,"public void test3942() throws Throwable {
    StringReader stringReader0 = new StringReader(""kG(0#*t9p~$"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextString();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test4043,"public void test4043() throws Throwable {
    StringReader stringReader0 = new StringReader(""/mx%0rHm4DIDC."");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextName();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test4144,"public void test4144() throws Throwable {
    StringReader stringReader0 = new StringReader(""kG(>#*t9p~$"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    jsonReader0.nextString();
    stringReader0.reset();
    jsonReader0.skipValue();
    assertTrue(jsonReader0.isLenient());
}",0,
project,0,test4245,"public void test4245() throws Throwable {
    StringReader stringReader0 = new StringReader(""{US9bLmP+"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peek();
    try {
        jsonReader0.skipValue();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 3 path $.
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test4346,"public void test4346() throws Throwable {
    StringReader stringReader0 = new StringReader(""\""`/koumn~)Gr1DC\"""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    // Undeclared exception!
    try {
        jsonReader0.nextInt();
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
    }
}",1,
project,0,test4447,"public void test4447() throws Throwable {
    StringReader stringReader0 = new StringReader(""kG(0#*t9p~$"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    jsonReader0.skipValue();
    assertTrue(jsonReader0.isLenient());
}",0,assertTrue(jsonReader0.isLenient())
project,0,test4548,"public void test4548() throws Throwable {
    StringReader stringReader0 = new StringReader(""\""`/koumn~)Gr1DC\"""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.skipValue();
    assertFalse(jsonReader0.isLenient());
}",0,assertTrue(jsonReader0.isLenient())
project,0,test4649,"public void test4649() throws Throwable {
    StringReader stringReader0 = new StringReader(""em]g?`Y9?9l`N"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    // Undeclared exception!
    try {
        jsonReader0.nextInt();
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
    }
}",1,
project,0,test4750,"public void test4750() throws Throwable {
    StringReader stringReader0 = new StringReader(""End of input"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    // Undeclared exception!
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
    }
}",1,
project,0,test4851,"public void test4851() throws Throwable {
    StringReader stringReader0 = new StringReader(""u"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    // Undeclared exception!
    try {
        jsonReader0.nextLong();
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
    }
}",1,
project,0,test4952,"public void test4952() throws Throwable {
    StringReader stringReader0 = new StringReader(""\""A@-'4bX>&;eBL"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextLong();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unterminated string at line 1 column 15 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test5053,"public void test5053() throws Throwable {
    StringReader stringReader0 = new StringReader(""u"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    jsonReader0.nextString();
    // Undeclared exception!
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected a double but was END_DOCUMENT at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test5154,"public void test5154() throws Throwable {
    StringReader stringReader0 = new StringReader(""u"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    jsonReader0.hasNext();
    // Undeclared exception!
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
    }
}",1,
project,0,test5255,"public void test5255() throws Throwable {
    StringReader stringReader0 = new StringReader(""Expected BEGIN_ARRAY but was "");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextNull();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test5356,"public void test5356() throws Throwable {
    StringReader stringReader0 = new StringReader(""em]g?`Y9?9l`N"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    jsonReader0.doPeek();
    // Undeclared exception!
    try {
        jsonReader0.nextBoolean();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected a boolean but was STRING at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test5457,"public void test5457() throws Throwable {
    StringReader stringReader0 = new StringReader(""\""`/koumn~)Gr1DC\"""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    String string0 = jsonReader0.nextString();
    assertEquals(""`/koumn~)Gr1DC"", string0);
}",1,
project,0,test5558,"public void test5558() throws Throwable {
    StringReader stringReader0 = new StringReader(""kG(0-*t9p~$"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    jsonReader0.nextString();
    // Undeclared exception!
    try {
        jsonReader0.nextString();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected a string but was END_DOCUMENT at line 1 column 12 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test5659,"public void test5659() throws Throwable {
    StringReader stringReader0 = new StringReader(""kG(0-*t9p~$"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    boolean boolean0 = jsonReader0.hasNext();
    assertTrue(boolean0);
}",1,
project,0,test5660,"public void test5660() throws Throwable {
    StringReader stringReader0 = new StringReader(""kG(0-*t9p~$"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    boolean boolean0 = jsonReader0.hasNext();
    String string0 = jsonReader0.nextString();
    assertNotNull(string0);
}",1,
project,0,test5762,"public void test5762() throws Throwable {
    StringReader stringReader0 = new StringReader(""em]g?`Y9?9l`N"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    jsonReader0.doPeek();
    // Undeclared exception!
    try {
        jsonReader0.nextName();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected a name but was STRING at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test5863,"public void test5863() throws Throwable {
    StringReader stringReader0 = new StringReader(""=uUL[*a%+vs;|b8[W"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.doPeek();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test5964,"public void test5964() throws Throwable {
    StringReader stringReader0 = new StringReader(""kG(0*t9t/p~$"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    jsonReader0.nextString();
    try {
        jsonReader0.hasNext();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Expected value at line 1 column 9 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6065,"public void test6065() throws Throwable {
    StringReader stringReader0 = new StringReader(""418K{Eu?>*GR?7iA"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextBoolean();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6166,"public void test6166() throws Throwable {
    StringReader stringReader0 = new StringReader("".&JI%p+:G'].9sHP|U"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.skipValue();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6267,"public void test6267() throws Throwable {
    StringReader stringReader0 = new StringReader(""+q[sjs81~o"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextBoolean();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6368,"public void test6368() throws Throwable {
    StringReader stringReader0 = new StringReader(""8"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    int int0 = jsonReader0.nextInt();
    assertEquals(8, int0);
}",1,
project,0,test6469,"public void test6469() throws Throwable {
    StringReader stringReader0 = new StringReader(""NUMBER"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6570,"public void test6570() throws Throwable {
    StringReader stringReader0 = new StringReader(""f"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextName();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6671,"public void test6671() throws Throwable {
    StringReader stringReader0 = new StringReader(""em]g?`Y9?9l`N"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    jsonReader0.skipValue();
    try {
        jsonReader0.doPeek();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected value at line 1 column 4 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",0,
project,0,test6772,"public void test6772() throws Throwable {
    StringReader stringReader0 = new StringReader("";h>F7|[qk1MTKR"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.hasNext();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected value at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6873,"public void test6873() throws Throwable {
    StringReader stringReader0 = new StringReader("",A"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextName();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected value at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6974,"public void test6974() throws Throwable {
    StringReader stringReader0 = new StringReader(""r'vF56YZ0]v"");
    stringReader0.read();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextInt();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7075,"public void test7075() throws Throwable {
    StringReader stringReader0 = new StringReader(""kG(0-*t9p~$"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    jsonReader0.nextString();
    stringReader0.reset();
    jsonReader0.skipValue();
    assertTrue(jsonReader0.isLenient());
}",0,assertTrue(jsonReader0.isLenient())
project,0,test7176,"public void test7176() throws Throwable {
    StringReader stringReader0 = new StringReader(""NAME"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.close();
    // Undeclared exception!
    try {
        jsonReader0.peek();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JsonReader is closed
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7277,"public void test7277() throws Throwable {
    StringReader stringReader0 = new StringReader(""{US9bLmP+"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.skipValue();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 3 path $.
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7378,"public void test7378() throws Throwable {
    StringReader stringReader0 = new StringReader(""\""`/koumn~)Gr1DC\"""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 282;
    // Undeclared exception!
    try {
        jsonReader0.nextInt();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test7479,"public void test7479() throws Throwable {
    StringReader stringReader0 = new StringReader(""kG(0#*t9p~$"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    jsonReader0.nextString();
    // Undeclared exception!
    try {
        jsonReader0.endArray();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected END_ARRAY but was END_DOCUMENT at line 1 column 12 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7580,"public void test7580() throws Throwable {
    StringReader stringReader0 = new StringReader(""\""]`52)3|-_7y"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peek();
    // Undeclared exception!
    try {
        jsonReader0.nextNull();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected null but was STRING at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7681,"public void test7681() throws Throwable {
    StringReader stringReader0 = new StringReader(""null"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    // Undeclared exception!
    try {
        jsonReader0.beginObject();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected BEGIN_OBJECT but was NULL at line 1 column 5 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7782,"public void test7782() throws Throwable {
    StringReader stringReader0 = new StringReader(""true"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    // Undeclared exception!
    try {
        jsonReader0.nextInt();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected an int but was BOOLEAN at line 1 column 5 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7883,"public void test7883() throws Throwable {
    StringReader stringReader0 = new StringReader(""VEL=[?5WP%2P 2wF/"");
    char[] charArray0 = new char[4];
    stringReader0.read(charArray0);
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    // Undeclared exception!
    try {
        jsonReader0.nextBoolean();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected a boolean but was BEGIN_ARRAY at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7984,"public void test7984() throws Throwable {
    StringReader stringReader0 = new StringReader(""{US9bLmP+"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peek();
    // Undeclared exception!
    try {
        jsonReader0.nextLong();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected a long but was BEGIN_OBJECT at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8085,"public void test8085() throws Throwable {
    StringReader stringReader0 = new StringReader("" $PL)RQB3Gt"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.peek();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8186,"public void test8186() throws Throwable {
    StringReader stringReader0 = new StringReader(""8vhJc,4\"" "");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 2063;
    boolean boolean0 = jsonReader0.hasNext();
    assertFalse(jsonReader0.isLenient());
}",0,
project,0,test8187,"public void test8187() throws Throwable {
    StringReader stringReader0 = new StringReader(""8vhJc,4\"" "");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 2063;
    boolean boolean0 = jsonReader0.hasNext();
    assertTrue(boolean0);
}",1,
project,0,test8288,"public void test8288() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.endObject();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8389,"public void test8389() throws Throwable {
    StringReader stringReader0 = new StringReader(""_fZ+9+%"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    jsonReader0.doPeek();
    // Undeclared exception!
    try {
        jsonReader0.endObject();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected END_OBJECT but was STRING at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8490,"public void test8490() throws Throwable {
    StringReader stringReader0 = new StringReader(""em]g?`Y9?9l`N"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    jsonReader0.doPeek();
    // Undeclared exception!
    try {
        jsonReader0.beginObject();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8591,"public void test8591() throws Throwable {
    StringReader stringReader0 = new StringReader("":nGU 5s[N{k8"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.endArray();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Expected value at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8692,"public void test8692() throws Throwable {
    StringReader stringReader0 = new StringReader(""kG(0#*t9p~$"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    jsonReader0.hasNext();
    // Undeclared exception!
    try {
        jsonReader0.endArray();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected END_ARRAY but was STRING at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8793,"public void test8793() throws Throwable {
    StringReader stringReader0 = new StringReader(""Expected BEGIN_OBJECT but was "");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.beginArray();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8894,"public void test8894() throws Throwable {
    StringReader stringReader0 = new StringReader(""Expected null but was "");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    jsonReader0.doPeek();
    // Undeclared exception!
    try {
        jsonReader0.beginArray();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected BEGIN_ARRAY but was STRING at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8995,"public void test8995() throws Throwable {
    JsonReader jsonReader0 = null;
    try {
        jsonReader0 = new JsonReader((Reader) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // in == null
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test9096,"public void test9096() throws Throwable {
    StringReader stringReader0 = new StringReader(""TK;]"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextName();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test9197,"public void test9197() throws Throwable {
    StringReader stringReader0 = new StringReader(""\""`/koumn~)Gr1DC\"""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    String string0 = jsonReader0.toString();
    assertEquals(""JsonReader at line 1 column 1 path $"", string0);
}",0,assertNotNull(string0)
project,0,test9198,"public void test9198() throws Throwable {
    StringReader stringReader0 = new StringReader(""\""`/koumn~)Gr1DC\"""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    String string0 = jsonReader0.toString();
    assertFalse(jsonReader0.isLenient());
}",0,assertFalse(jsonReader0.isLenient())
project,0,test9299,"public void test9299() throws Throwable {
    StringReader stringReader0 = new StringReader(""@LNr`+O6Q$"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    boolean boolean0 = jsonReader0.isLenient();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test93100,"public void test93100() throws Throwable {
    StringReader stringReader0 = new StringReader(""-1{6%A)/R-%F6T~Q"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    // Undeclared exception!
    try {
        jsonReader0.beginObject();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected BEGIN_OBJECT but was NUMBER at line 1 column 3 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
