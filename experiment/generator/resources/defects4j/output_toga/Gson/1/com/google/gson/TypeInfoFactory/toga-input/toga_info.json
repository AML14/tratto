{
  "test00" : {
    "methodSignature" : "public static TypeInfoArray getTypeInfoForArray(Type type)",
    "methodName" : "getTypeInfoForArray",
    "className" : "com.google.gson.TypeInfoFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00() throws Throwable {\n    GenericArrayTypeImpl genericArrayTypeImpl0 = new GenericArrayTypeImpl((Type) null);\n    TypeInfoFactory.getTypeInfoForArray(genericArrayTypeImpl0);\n}",
    "testName" : "test00"
  },
  "test11" : {
    "methodSignature" : "public static TypeInfo getTypeInfoForField(Field f, Type typeDefiningF)",
    "methodName" : "getTypeInfoForField",
    "className" : "com.google.gson.TypeInfoFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11() throws Throwable {\n    Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());\n    doReturn((String) null).when(type0).toString();\n    Type[] typeArray0 = new Type[4];\n    ParameterizedTypeImpl parameterizedTypeImpl0 = new ParameterizedTypeImpl(type0, typeArray0, (Type) null);\n    GenericArrayTypeImpl genericArrayTypeImpl0 = new GenericArrayTypeImpl(parameterizedTypeImpl0);\n    TypeInfoFactory.getTypeInfoForField((Field) null, genericArrayTypeImpl0);\n}",
    "testName" : "test11"
  }
}