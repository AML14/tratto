{
  "test00" : {
    "methodSignature" : "public final boolean isHtmlSafe()",
    "methodName" : "isHtmlSafe",
    "className" : "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00() throws Throwable {\n    HashMap<String, ReflectiveTypeAdapterFactory.BoundField> hashMap0 = new HashMap<String, ReflectiveTypeAdapterFactory.BoundField>();\n    ReflectiveTypeAdapterFactory.Adapter<Integer> reflectiveTypeAdapterFactory_Adapter0 = new ReflectiveTypeAdapterFactory.Adapter<Integer>((ObjectConstructor<Integer>) null, hashMap0);\n    Gson gson0 = new Gson();\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);\n    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0, false);\n    JsonWriter jsonWriter0 = gson0.newJsonWriter(mockPrintWriter0);\n    Integer integer0 = new Integer(1985);\n    reflectiveTypeAdapterFactory_Adapter0.write(jsonWriter0, integer0);\n    jsonWriter0.isHtmlSafe();\n}",
    "testName" : "test00"
  },
  "test22" : {
    "methodSignature" : "static boolean excludeField(Field f, boolean serialize, Excluder excluder)",
    "methodName" : "excludeField",
    "className" : "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22() throws Throwable {\n    Excluder excluder0 = new Excluder();\n    ReflectiveTypeAdapterFactory.excludeField((Field) null, true, excluder0);\n}",
    "testName" : "test22"
  },
  "test33" : {
    "methodSignature" : "public <T> TypeAdapter<T> create(Gson gson, final TypeToken<T> type)",
    "methodName" : "create",
    "className" : "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33() throws Throwable {\n    FieldNamingPolicy fieldNamingPolicy0 = FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES;\n    Gson gson0 = new Gson();\n    Excluder excluder0 = gson0.excluder();\n    ReflectiveTypeAdapterFactory reflectiveTypeAdapterFactory0 = new ReflectiveTypeAdapterFactory((ConstructorConstructor) null, fieldNamingPolicy0, excluder0);\n    Class<Object> class0 = Object.class;\n    TypeToken<Object> typeToken0 = TypeToken.get(class0);\n    reflectiveTypeAdapterFactory0.create(gson0, typeToken0);\n}",
    "testName" : "test33"
  },
  "test44" : {
    "methodSignature" : "public boolean excludeField(Field f, boolean serialize)",
    "methodName" : "excludeField",
    "className" : "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44() throws Throwable {\n    FieldNamingPolicy fieldNamingPolicy0 = FieldNamingPolicy.UPPER_CAMEL_CASE_WITH_SPACES;\n    Gson gson0 = new Gson();\n    Excluder excluder0 = gson0.excluder();\n    ReflectiveTypeAdapterFactory reflectiveTypeAdapterFactory0 = new ReflectiveTypeAdapterFactory((ConstructorConstructor) null, fieldNamingPolicy0, excluder0);\n    reflectiveTypeAdapterFactory0.excludeField((Field) null, true);\n}",
    "testName" : "test44"
  },
  "test55" : {
    "methodSignature" : "public <T> T fromJson(JsonElement json, Class<T> classOfT) throws JsonSyntaxException",
    "methodName" : "fromJson",
    "className" : "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test55() throws Throwable {\n    Gson gson0 = new Gson();\n    Boolean boolean0 = new Boolean(false);\n    JsonPrimitive jsonPrimitive0 = new JsonPrimitive(boolean0);\n    Class<Type> class0 = Type.class;\n    gson0.fromJson((JsonElement) jsonPrimitive0, class0);\n}",
    "testName" : "test55"
  },
  "test66" : {
    "methodSignature" : "public boolean serializeNulls()",
    "methodName" : "serializeNulls",
    "className" : "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test66() throws Throwable {\n    HashMap<String, ReflectiveTypeAdapterFactory.BoundField> hashMap0 = new HashMap<String, ReflectiveTypeAdapterFactory.BoundField>();\n    ReflectiveTypeAdapterFactory.Adapter<InstanceCreator<Integer>> reflectiveTypeAdapterFactory_Adapter0 = new ReflectiveTypeAdapterFactory.Adapter<InstanceCreator<Integer>>((ObjectConstructor<InstanceCreator<Integer>>) null, hashMap0);\n    Gson gson0 = new Gson();\n    PipedReader pipedReader0 = new PipedReader();\n    PipedWriter pipedWriter0 = new PipedWriter(pipedReader0);\n    gson0.toJson((Object) reflectiveTypeAdapterFactory_Adapter0, (Appendable) pipedWriter0);\n    gson0.serializeNulls();\n}",
    "testName" : "test66"
  }
}