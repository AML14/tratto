{
  "test1212" : {
    "methodSignature" : "public <T> T fromJson(String json, Class<T> classOfT) throws JsonSyntaxException",
    "methodName" : "fromJson",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Gson gson0 = new Gson();\n    Class<JsonArray> class0 = JsonArray.class;\n    gson0.fromJson(\"3% G9;6\\\"!3KA$j\", class0);\n}",
    "testName" : "test1212"
  },
  "test2323" : {
    "methodSignature" : "public <T> T fromJson(String json, Type typeOfT) throws JsonSyntaxException",
    "methodName" : "fromJson",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    Class<Byte> class0 = Byte.class;\n    Gson gson0 = new Gson();\n    gson0.fromJson(\"b\", (Type) class0);\n}",
    "testName" : "test2323"
  },
  "test1010" : {
    "methodSignature" : "public String toJson(JsonElement jsonElement)",
    "methodName" : "toJson",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Gson gson0 = new Gson();\n    JsonObject jsonObject0 = new JsonObject();\n    Byte byte0 = new Byte((byte) 84);\n    jsonObject0.addProperty(\"T26e\", (Number) byte0);\n    String string0 = gson0.toJson((JsonElement) jsonObject0);\n}",
    "testName" : "test1010"
  },
  "test2121" : {
    "methodSignature" : "public boolean isNumber()",
    "methodName" : "isNumber",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    Gson gson0 = new Gson();\n    Character character0 = Character.valueOf('z');\n    JsonPrimitive jsonPrimitive0 = (JsonPrimitive) gson0.toJsonTree((Object) character0);\n    jsonPrimitive0.isNumber();\n}",
    "testName" : "test2121"
  },
  "test3232" : {
    "methodSignature" : "public static <TT> TypeAdapterFactory newFactory(final TypeToken<TT> type, final TypeAdapter<TT> typeAdapter)",
    "methodName" : "newFactory",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    Class<URL> class0 = URL.class;\n    TypeToken<URL> typeToken0 = TypeToken.get(class0);\n    TypeAdapterFactory typeAdapterFactory0 = TypeAdapters.newFactory(typeToken0, (TypeAdapter<URL>) null);\n}",
    "testName" : "test3232"
  },
  "test1111" : {
    "methodSignature" : "public boolean isJsonArray()",
    "methodName" : "isJsonArray",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Class<Double> class0 = Double.class;\n    Gson gson0 = new Gson();\n    TypeToken<Double> typeToken0 = TypeToken.get(class0);\n    TypeAdapter<Double> typeAdapter0 = gson0.getDelegateAdapter((TypeAdapterFactory) null, typeToken0);\n    TypeAdapterFactory typeAdapterFactory0 = TypeAdapters.newTypeHierarchyFactory(class0, typeAdapter0);\n    Class<Character> class1 = Character.class;\n    JsonSerializer<Character> jsonSerializer0 = (JsonSerializer<Character>) mock(JsonSerializer.class, new ViolatedAssumptionAnswer());\n    doReturn((JsonElement) null).when(jsonSerializer0).serialize(anyChar(), any(java.lang.reflect.Type.class), any(com.google.gson.JsonSerializationContext.class));\n    JsonDeserializer<Character> jsonDeserializer0 = (JsonDeserializer<Character>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());\n    TypeToken<Character> typeToken1 = TypeToken.get(class1);\n    TreeTypeAdapter<Character> treeTypeAdapter0 = new TreeTypeAdapter<Character>(jsonSerializer0, jsonDeserializer0, gson0, typeToken1, typeAdapterFactory0);\n    Character character0 = Character.valueOf(']');\n    JsonElement jsonElement0 = treeTypeAdapter0.toJsonTree(character0);\n    jsonElement0.isJsonArray();\n}",
    "testName" : "test1111"
  },
  "test2222" : {
    "methodSignature" : "public <T> T fromJson(JsonReader reader, Type typeOfT) throws JsonIOException, JsonSyntaxException",
    "methodName" : "fromJson",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    Class<Integer> class0 = Integer.class;\n    Gson gson0 = new Gson();\n    StringReader stringReader0 = new StringReader(\"com.google.gson.internal.bind.TypeAdapters$25\");\n    JsonReader jsonReader0 = gson0.newJsonReader(stringReader0);\n    gson0.fromJson(jsonReader0, (Type) class0);\n}",
    "testName" : "test2222"
  },
  "test3333" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    Gson gson0 = new Gson();\n    String string0 = gson0.toString();\n}",
    "testName" : "test3333"
  },
  "test011" : {
    "methodSignature" : "public <T> T fromJson(String json, Class<T> classOfT) throws JsonSyntaxException",
    "methodName" : "fromJson",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Gson gson0 = new Gson();\n    Class<AtomicIntegerArray> class0 = AtomicIntegerArray.class;\n    gson0.fromJson(\"U:cd7t{f`~HSIl-iUJ\", class0);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public T read(JsonReader in) throws IOException",
    "methodName" : "read",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Class<Double> class0 = Double.class;\n    Gson gson0 = new Gson();\n    TypeAdapter<URL> typeAdapter0 = TypeAdapters.URL;\n    TypeAdapterRuntimeTypeWrapper<URL> typeAdapterRuntimeTypeWrapper0 = new TypeAdapterRuntimeTypeWrapper<URL>(gson0, typeAdapter0, class0);\n    StringReader stringReader0 = new StringReader(\"\");\n    JsonReader jsonReader0 = new JsonReader(stringReader0);\n    typeAdapterRuntimeTypeWrapper0.read(jsonReader0);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public static <TT> TypeAdapterFactory newFactory(final Class<TT> type, final TypeAdapter<TT> typeAdapter)",
    "methodName" : "newFactory",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Class<Character> class0 = Character.class;\n    Gson gson0 = new Gson();\n    TypeToken<Character> typeToken0 = TypeToken.get(class0);\n    TypeAdapter<Character> typeAdapter0 = gson0.getAdapter(typeToken0);\n    TypeAdapterFactory typeAdapterFactory0 = TypeAdapters.newFactory(class0, typeAdapter0);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public JsonObject getAsJsonObject()",
    "methodName" : "getAsJsonObject",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    JsonArray jsonArray0 = new JsonArray();\n    jsonArray0.getAsJsonObject();\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public String toJson(JsonElement jsonElement)",
    "methodName" : "toJson",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Gson gson0 = new Gson();\n    Character character0 = Character.valueOf('s');\n    JsonPrimitive jsonPrimitive0 = new JsonPrimitive(character0);\n    String string0 = gson0.toJson((JsonElement) jsonPrimitive0);\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "public boolean isJsonArray()",
    "methodName" : "isJsonArray",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    Gson gson0 = new Gson();\n    UUID uUID0 = MockUUID.fromString(\"END_OBJECT\");\n    JsonElement jsonElement0 = gson0.toJsonTree((Object) uUID0);\n    jsonElement0.isJsonArray();\n}",
    "testName" : "test1616"
  },
  "test2727" : {
    "methodSignature" : "public <T> T fromJson(Reader json, Type typeOfT) throws JsonIOException, JsonSyntaxException",
    "methodName" : "fromJson",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    Class<Currency> class0 = Currency.class;\n    Gson gson0 = new Gson();\n    StringReader stringReader0 = new StringReader(\"%JiV9Sg10(.tl1p4JX\");\n    gson0.fromJson((Reader) stringReader0, (Type) class0);\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "public void toJson(Object src, Appendable writer) throws JsonIOException",
    "methodName" : "toJson",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    Gson gson0 = new Gson();\n    URL uRL0 = MockURL.getFtpExample();\n    char[] charArray0 = new char[8];\n    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n    gson0.toJson((Object) uRL0, (Appendable) charBuffer0);\n}",
    "testName" : "test1717"
  },
  "test2828" : {
    "methodSignature" : "public JsonElement toJsonTree(Object src, Type typeOfSrc)",
    "methodName" : "toJsonTree",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    Class<JsonArray> class0 = JsonArray.class;\n    Gson gson0 = new Gson();\n    Object object0 = new Object();\n    gson0.toJsonTree(object0, (Type) class0);\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public <T> T fromJson(String json, Type typeOfT) throws JsonSyntaxException",
    "methodName" : "fromJson",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    Class<Locale> class0 = Locale.class;\n    Gson gson0 = new Gson();\n    gson0.fromJson(\"f1?dV6#bN?N5!d4\", (Type) class0);\n}",
    "testName" : "test1414"
  },
  "test2525" : {
    "methodSignature" : "public <T> T fromJson(Reader json, Class<T> classOfT) throws JsonSyntaxException, JsonIOException",
    "methodName" : "fromJson",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    Gson gson0 = new Gson();\n    StringReader stringReader0 = new StringReader(\"aQ\");\n    Class<BitSet> class0 = BitSet.class;\n    gson0.fromJson((Reader) stringReader0, class0);\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public <T> T fromJson(String json, Class<T> classOfT) throws JsonSyntaxException",
    "methodName" : "fromJson",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    Gson gson0 = new Gson();\n    Class<Calendar> class0 = Calendar.class;\n    gson0.fromJson(\"bJ&g%s:dSe\", class0);\n}",
    "testName" : "test1515"
  },
  "test2626" : {
    "methodSignature" : "public JsonElement toJsonTree(Object src)",
    "methodName" : "toJsonTree",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    Class<Short> class0 = Short.class;\n    Gson gson0 = new Gson();\n    gson0.toJsonTree((Object) class0);\n}",
    "testName" : "test2626"
  },
  "test3030" : {
    "methodSignature" : "public <T> T fromJson(JsonReader reader, Type typeOfT) throws JsonIOException, JsonSyntaxException",
    "methodName" : "fromJson",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    Gson gson0 = new Gson();\n    Class<AtomicBoolean> class0 = AtomicBoolean.class;\n    StringReader stringReader0 = new StringReader(\"{3(Y4u\");\n    JsonReader jsonReader0 = new JsonReader(stringReader0);\n    gson0.fromJson(jsonReader0, (Type) class0);\n}",
    "testName" : "test3030"
  },
  "test2020" : {
    "methodSignature" : "public <T> T fromJson(String json, Type typeOfT) throws JsonSyntaxException",
    "methodName" : "fromJson",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    Class<StringBuffer> class0 = StringBuffer.class;\n    Gson gson0 = new Gson();\n    gson0.fromJson(\"o-EE1x4}U%:l>LEazq\", (Type) class0);\n}",
    "testName" : "test2020"
  },
  "test3131" : {
    "methodSignature" : "public boolean isNumber()",
    "methodName" : "isNumber",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    Class<Short> class0 = Short.class;\n    Gson gson0 = new Gson();\n    Double double0 = new Double((-860.8));\n    JsonPrimitive jsonPrimitive0 = (JsonPrimitive) gson0.toJsonTree((Object) double0, (Type) class0);\n    jsonPrimitive0.isNumber();\n}",
    "testName" : "test3131"
  },
  "test000" : {
    "methodSignature" : "public static <TT> TypeAdapterFactory newFactoryForMultipleTypes(final Class<TT> base, final Class<? extends TT> sub, final TypeAdapter<? super TT> typeAdapter)",
    "methodName" : "newFactoryForMultipleTypes",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Gson gson0 = new Gson();\n    Class<Object> class0 = Object.class;\n    TypeToken<Object> typeToken0 = TypeToken.get(class0);\n    TypeAdapter<Object> typeAdapter0 = gson0.getAdapter(typeToken0);\n    TypeAdapterRuntimeTypeWrapper<Object> typeAdapterRuntimeTypeWrapper0 = new TypeAdapterRuntimeTypeWrapper<Object>(gson0, typeAdapter0, class0);\n    Class<Calendar> class1 = Calendar.class;\n    Class<MockCalendar> class2 = MockCalendar.class;\n    TypeAdapterFactory typeAdapterFactory0 = TypeAdapters.newFactoryForMultipleTypes(class1, (Class<? extends Calendar>) class2, (TypeAdapter<? super Calendar>) typeAdapterRuntimeTypeWrapper0);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public <T> T fromJson(String json, Class<T> classOfT) throws JsonSyntaxException",
    "methodName" : "fromJson",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Gson gson0 = new Gson();\n    Class<URI> class0 = URI.class;\n    gson0.fromJson(\"FT4\", class0);\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public T read(JsonReader in) throws IOException",
    "methodName" : "read",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Class<Character> class0 = Character.class;\n    Gson gson0 = new Gson();\n    TypeAdapter<Character> typeAdapter0 = TypeAdapters.CHARACTER;\n    TypeAdapterRuntimeTypeWrapper<Character> typeAdapterRuntimeTypeWrapper0 = new TypeAdapterRuntimeTypeWrapper<Character>(gson0, typeAdapter0, class0);\n    StringReader stringReader0 = new StringReader(\"A6gNLx$Uc^fz}?z!]\");\n    JsonReader jsonReader0 = gson0.newJsonReader(stringReader0);\n    typeAdapterRuntimeTypeWrapper0.read(jsonReader0);\n}",
    "testName" : "test044"
  },
  "test088" : {
    "methodSignature" : "public String toJson(JsonElement jsonElement)",
    "methodName" : "toJson",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Gson gson0 = new Gson();\n    Boolean boolean0 = Boolean.TRUE;\n    JsonPrimitive jsonPrimitive0 = new JsonPrimitive(boolean0);\n    String string0 = gson0.toJson((JsonElement) jsonPrimitive0);\n}",
    "testName" : "test088"
  },
  "test1818" : {
    "methodSignature" : "public boolean isJsonNull()",
    "methodName" : "isJsonNull",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    Class<StringBuffer> class0 = StringBuffer.class;\n    Gson gson0 = new Gson();\n    JsonElement jsonElement0 = gson0.toJsonTree((Object) null, (Type) class0);\n    jsonElement0.isJsonNull();\n}",
    "testName" : "test1818"
  },
  "test2929" : {
    "methodSignature" : "public void toJson(Object src, Type typeOfSrc, Appendable writer) throws JsonIOException",
    "methodName" : "toJson",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    Gson gson0 = new Gson();\n    Class<Object> class0 = Object.class;\n    AtomicBoolean atomicBoolean0 = new AtomicBoolean();\n    StringBuilder stringBuilder0 = new StringBuilder(\"4HUYM=i^\");\n    CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuilder0);\n    gson0.toJson((Object) atomicBoolean0, (Type) class0, (Appendable) charBuffer0);\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public final String toJson(T value)",
    "methodName" : "toJson",
    "className" : "com.google.gson.internal.bind.TypeAdapters",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    Class<StringBuffer> class0 = StringBuffer.class;\n    Gson gson0 = new Gson();\n    TypeAdapter<StringBuffer> typeAdapter0 = TypeAdapters.STRING_BUFFER;\n    TypeAdapterRuntimeTypeWrapper<StringBuffer> typeAdapterRuntimeTypeWrapper0 = new TypeAdapterRuntimeTypeWrapper<StringBuffer>(gson0, typeAdapter0, class0);\n    StringWriter stringWriter0 = new StringWriter();\n    StringBuffer stringBuffer0 = stringWriter0.getBuffer();\n    String string0 = typeAdapterRuntimeTypeWrapper0.toJson(stringBuffer0);\n}",
    "testName" : "test1919"
  }
}