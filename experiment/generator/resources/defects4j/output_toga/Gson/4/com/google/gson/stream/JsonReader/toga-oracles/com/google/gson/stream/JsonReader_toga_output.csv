project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    StringReader stringReader0 = new StringReader(""[kUiS"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = (-852);
    // Undeclared exception!
    try {
        jsonReader0.nextLong();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test011,"public void test011() throws Throwable {
    StringReader stringReader0 = new StringReader(""o2;$}Pr6#<"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = (-3232);
    // Undeclared exception!
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test022,"public void test022() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = (-710);
    // Undeclared exception!
    try {
        jsonReader0.nextBoolean();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test033,"public void test033() throws Throwable {
    StringReader stringReader0 = new StringReader(""Expected value"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 819;
    // Undeclared exception!
    try {
        jsonReader0.nextString();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test044,"public void test044() throws Throwable {
    StringReader stringReader0 = new StringReader(""o2;$}Pr6#<"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = (-3232);
    // Undeclared exception!
    try {
        jsonReader0.nextName();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test055,"public void test055() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 325;
    boolean boolean0 = jsonReader0.hasNext();
    assertFalse(jsonReader0.isLenient());
}",0,assertFalse(jsonReader0.isLenient())
project,0,test056,"public void test056() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 325;
    boolean boolean0 = jsonReader0.hasNext();
    assertTrue(boolean0);
}",1,
project,0,test067,"public void test067() throws Throwable {
    StringReader stringReader0 = new StringReader(""Vw"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = (-1);
    // Undeclared exception!
    try {
        jsonReader0.endObject();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test078,"public void test078() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    int int0 = jsonReader0.getLineNumber();
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test079,"public void test079() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    int int0 = jsonReader0.getLineNumber();
    assertFalse(jsonReader0.isLenient());
}",0,assertFalse(jsonReader0.isLenient())
project,0,test0810,"public void test0810() throws Throwable {
    StringReader stringReader0 = new StringReader(""{=NHuXD"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    int int0 = jsonReader0.getColumnNumber();
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test0811,"public void test0811() throws Throwable {
    StringReader stringReader0 = new StringReader(""{=NHuXD"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    int int0 = jsonReader0.getColumnNumber();
    assertFalse(jsonReader0.isLenient());
}",0,assertTrue(jsonReader0.isLenient())
project,0,test0912,"public void test0912() throws Throwable {
    StringReader stringReader0 = new StringReader(""{xZ(:Tf'2xODyGOcB"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.doPeek();
    assertFalse(jsonReader0.isLenient());
}",0,assertTrue(jsonReader0.isLenient())
project,0,test1013,"public void test1013() throws Throwable {
    StringReader stringReader0 = new StringReader(""BEGIN_ARRAY"");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.skipValue();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test1114,"public void test1114() throws Throwable {
    StringReader stringReader0 = new StringReader(""Y~g'!2ABYI}q6)Q="");
    CharBuffer charBuffer0 = CharBuffer.allocate(2765);
    stringReader0.read(charBuffer0);
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.skipValue();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test1215,"public void test1215() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.peek();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test1316,"public void test1316() throws Throwable {
    StringReader stringReader0 = new StringReader(""com.google.gson.stream.JsonReader$1"");
    stringReader0.skip(71L);
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.peek();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test1417,"public void test1417() throws Throwable {
    StringReader stringReader0 = new StringReader(""NULL"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.close();
    // Undeclared exception!
    try {
        jsonReader0.nextString();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JsonReader is closed
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test1518,"public void test1518() throws Throwable {
    StringReader stringReader0 = new StringReader(""E.t<O"");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextString();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test1619,"public void test1619() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextString();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test1720,"public void test1720() throws Throwable {
    StringReader stringReader0 = new StringReader(""~)iy"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.close();
    // Undeclared exception!
    try {
        jsonReader0.nextNull();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JsonReader is closed
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test1821,"public void test1821() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextNull();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test1922,"public void test1922() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextNull();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test2023,"public void test2023() throws Throwable {
    StringReader stringReader0 = new StringReader(""2^|9>G;}Hn[0;1"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextName();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test2124,"public void test2124() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextName();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test2225,"public void test2225() throws Throwable {
    StringReader stringReader0 = new StringReader(""null"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    stringReader0.close();
    try {
        jsonReader0.nextLong();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test2326,"public void test2326() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextLong();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test2427,"public void test2427() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.close();
    // Undeclared exception!
    try {
        jsonReader0.nextInt();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JsonReader is closed
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test2528,"public void test2528() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    stringReader0.close();
    try {
        jsonReader0.nextInt();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test2629,"public void test2629() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextInt();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test2730,"public void test2730() throws Throwable {
    StringReader stringReader0 = new StringReader(""vutvuVq7c!"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test2831,"public void test2831() throws Throwable {
    StringReader stringReader0 = new StringReader(""U<`f"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 3462;
    // Undeclared exception!
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test2932,"public void test2932() throws Throwable {
    StringReader stringReader0 = new StringReader(""E.t<O"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    stringReader0.close();
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test3033,"public void test3033() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test3134,"public void test3134() throws Throwable {
    StringReader stringReader0 = new StringReader(""5z4*+u(T@G:Y|U"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.close();
    // Undeclared exception!
    try {
        jsonReader0.nextBoolean();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JsonReader is closed
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test3235,"public void test3235() throws Throwable {
    StringReader stringReader0 = new StringReader(""End of input at line "");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextBoolean();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test3336,"public void test3336() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextBoolean();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test3437,"public void test3437() throws Throwable {
    StringReader stringReader0 = new StringReader(""w>kn;I~^0>49%4"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    stringReader0.close();
    try {
        jsonReader0.hasNext();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test3538,"public void test3538() throws Throwable {
    StringReader stringReader0 = new StringReader("" "");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.hasNext();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 2
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test3639,"public void test3639() throws Throwable {
    StringReader stringReader0 = new StringReader(""KZN~No|f/"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.close();
    // Undeclared exception!
    try {
        jsonReader0.endObject();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JsonReader is closed
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test3740,"public void test3740() throws Throwable {
    StringReader stringReader0 = new StringReader(""GcL]e(y^RI+KJ3*7S"");
    stringReader0.skip(71);
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.endObject();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test3841,"public void test3841() throws Throwable {
    StringReader stringReader0 = new StringReader(""null"");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.endArray();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test3942,"public void test3942() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.endArray();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test4043,"public void test4043() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.close();
    // Undeclared exception!
    try {
        jsonReader0.doPeek();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JsonReader is closed
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test4144,"public void test4144() throws Throwable {
    StringReader stringReader0 = new StringReader(""o`sn^h~6't"");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.doPeek();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test4245,"public void test4245() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.doPeek();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test4346,"public void test4346() throws Throwable {
    StringReader stringReader0 = new StringReader(""A>72fe3ax;<v^"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.beginObject();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test4447,"public void test4447() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.close();
    // Undeclared exception!
    try {
        jsonReader0.beginObject();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JsonReader is closed
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test4548,"public void test4548() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.beginObject();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test4649,"public void test4649() throws Throwable {
    StringReader stringReader0 = new StringReader(""o2;$}Pr6#<"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = (-3232);
    // Undeclared exception!
    try {
        jsonReader0.beginArray();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test4750,"public void test4750() throws Throwable {
    StringReader stringReader0 = new StringReader(""*d\"""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    stringReader0.close();
    try {
        jsonReader0.beginArray();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test4851,"public void test4851() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.beginArray();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test4952,"public void test4952() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    String string0 = jsonReader0.getPath();
    assertFalse(jsonReader0.isLenient());
}",0,assertTrue(jsonReader0.isLenient())
project,0,test4953,"public void test4953() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    String string0 = jsonReader0.getPath();
    assertEquals(""$"", string0);
}",0,
project,0,test5054,"public void test5054() throws Throwable {
    StringReader stringReader0 = new StringReader(""#U5!q"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.skipValue();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test5155,"public void test5155() throws Throwable {
    StringReader stringReader0 = new StringReader(""/{O"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.skipValue();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test5256,"public void test5256() throws Throwable {
    StringReader stringReader0 = new StringReader(""Expected value"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 819;
    // Undeclared exception!
    try {
        jsonReader0.nextInt();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test5357,"public void test5357() throws Throwable {
    StringReader stringReader0 = new StringReader(""`711./t<5S"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    // Undeclared exception!
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
    }
}",1,
project,0,test5458,"public void test5458() throws Throwable {
    StringReader stringReader0 = new StringReader(""JSON forbids NaN and infinities: "");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    // Undeclared exception!
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
    }
}",1,
project,0,test5559,"public void test5559() throws Throwable {
    StringReader stringReader0 = new StringReader(""<.23g}'754qX%"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextLong();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test5660,"public void test5660() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 325;
    // Undeclared exception!
    try {
        jsonReader0.nextLong();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test5761,"public void test5761() throws Throwable {
    StringReader stringReader0 = new StringReader(""9If^oD|XB12`zHog0"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextNull();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test5862,"public void test5862() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = (-710);
    // Undeclared exception!
    try {
        jsonReader0.nextNull();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test5963,"public void test5963() throws Throwable {
    StringReader stringReader0 = new StringReader(""AUsg9fN-2a"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextBoolean();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6064,"public void test6064() throws Throwable {
    StringReader stringReader0 = new StringReader(""Expected value"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 819;
    // Undeclared exception!
    try {
        jsonReader0.nextBoolean();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test6165,"public void test6165() throws Throwable {
    StringReader stringReader0 = new StringReader(""o2;$}Pr6#<"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = (-3232);
    // Undeclared exception!
    try {
        jsonReader0.nextString();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test6266,"public void test6266() throws Throwable {
    StringReader stringReader0 = new StringReader(""Expected value"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 819;
    // Undeclared exception!
    try {
        jsonReader0.nextName();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test6367,"public void test6367() throws Throwable {
    StringReader stringReader0 = new StringReader(""EGIN_BECT"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    // Undeclared exception!
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
    }
}",1,
project,0,test6468,"public void test6468() throws Throwable {
    StringReader stringReader0 = new StringReader("";c<H4"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextString();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected value at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6569,"public void test6569() throws Throwable {
    StringReader stringReader0 = new StringReader(""'q8p&$"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.doPeek();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6670,"public void test6670() throws Throwable {
    StringReader stringReader0 = new StringReader(""1\""a!"");
    stringReader0.read();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.doPeek();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6771,"public void test6771() throws Throwable {
    StringReader stringReader0 = new StringReader(""BEGIN_OBJECT"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    jsonReader0.nextString();
    // Undeclared exception!
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected a double but was END_DOCUMENT at line 1 column 13 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6872,"public void test6872() throws Throwable {
    StringReader stringReader0 = new StringReader(""@0C@S3y"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.close();
    // Undeclared exception!
    try {
        jsonReader0.hasNext();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JsonReader is closed
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6973,"public void test6973() throws Throwable {
    StringReader stringReader0 = new StringReader(""U<`f"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 13;
    // Undeclared exception!
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected a double but was NAME at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7074,"public void test7074() throws Throwable {
    StringReader stringReader0 = new StringReader(""JSON forbids NaN and infinities: "");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    // Undeclared exception!
    try {
        jsonReader0.nextName();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected a name but was STRING at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7175,"public void test7175() throws Throwable {
    StringReader stringReader0 = new StringReader(""BEGIN_OBJECT"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 7;
    // Undeclared exception!
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected a double but was NULL at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7276,"public void test7276() throws Throwable {
    StringReader stringReader0 = new StringReader(""[SqKW5ra{K'pBQP|w7_"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    JsonToken jsonToken0 = jsonReader0.peek();
    assertEquals(JsonToken.BEGIN_ARRAY, jsonToken0);
}",1,
project,0,test7377,"public void test7377() throws Throwable {
    StringReader stringReader0 = new StringReader(""t{~wEAbQS]>VfH"");
    stringReader0.read();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    // Undeclared exception!
    try {
        jsonReader0.beginArray();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected BEGIN_ARRAY but was BEGIN_OBJECT at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7478,"public void test7478() throws Throwable {
    StringReader stringReader0 = new StringReader(""com.google.gson.stream.JsonReader$1"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.peek();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7579,"public void test7579() throws Throwable {
    StringReader stringReader0 = new StringReader(""$VALUES"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.hasNext();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7680,"public void test7680() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = (-710);
    boolean boolean0 = jsonReader0.hasNext();
    assertFalse(jsonReader0.isLenient());
}",0,assertTrue(jsonReader0.isLenient())
project,0,test7681,"public void test7681() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = (-710);
    boolean boolean0 = jsonReader0.hasNext();
    assertTrue(boolean0);
}",1,
project,0,test7782,"public void test7782() throws Throwable {
    StringReader stringReader0 = new StringReader(""E.t<O"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.endObject();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7883,"public void test7883() throws Throwable {
    StringReader stringReader0 = new StringReader(""Cv2W#S#jiAa"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 4281;
    // Undeclared exception!
    try {
        jsonReader0.endObject();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test7984,"public void test7984() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.beginObject();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8085,"public void test8085() throws Throwable {
    StringReader stringReader0 = new StringReader(""$[5E-<"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 74;
    // Undeclared exception!
    try {
        jsonReader0.beginObject();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test8186,"public void test8186() throws Throwable {
    StringReader stringReader0 = new StringReader(""-xt:13';.P"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.endArray();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8287,"public void test8287() throws Throwable {
    StringReader stringReader0 = new StringReader("":ZF&&3Z>c+v^.68s0<&"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = (-710);
    // Undeclared exception!
    try {
        jsonReader0.endArray();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test8388,"public void test8388() throws Throwable {
    StringReader stringReader0 = new StringReader("")&5AMT~.rI"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.beginArray();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8489,"public void test8489() throws Throwable {
    StringReader stringReader0 = new StringReader(""z"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 4;
    // Undeclared exception!
    try {
        jsonReader0.beginArray();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected BEGIN_ARRAY but was END_ARRAY at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8590,"public void test8590() throws Throwable {
    JsonReader jsonReader0 = null;
    try {
        jsonReader0 = new JsonReader((Reader) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // in == null
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8691,"public void test8691() throws Throwable {
    StringReader stringReader0 = new StringReader("" at line "");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextInt();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8792,"public void test8792() throws Throwable {
    StringReader stringReader0 = new StringReader(""BEGIN_OBJECT"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.close();
    String string0 = jsonReader0.getPath();
    assertFalse(jsonReader0.isLenient());
}",0,
project,0,test8793,"public void test8793() throws Throwable {
    StringReader stringReader0 = new StringReader(""BEGIN_OBJECT"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.close();
    String string0 = jsonReader0.getPath();
    assertEquals(""$"", string0);
}",0,
project,0,test8894,"public void test8894() throws Throwable {
    StringReader stringReader0 = new StringReader(""-sTt<sLSsC(H+;"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    String string0 = jsonReader0.toString();
    assertFalse(jsonReader0.isLenient());
}",0,assertTrue(jsonReader0.isLenient())
project,0,test8895,"public void test8895() throws Throwable {
    StringReader stringReader0 = new StringReader(""-sTt<sLSsC(H+;"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    String string0 = jsonReader0.toString();
    assertEquals(""JsonReader at line 1 column 1"", string0);
}",0,
project,0,test8996,"public void test8996() throws Throwable {
    StringReader stringReader0 = new StringReader(""-sTt<sLSsC(H+;"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    // Undeclared exception!
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
    }
}",1,
project,0,test9097,"public void test9097() throws Throwable {
    StringReader stringReader0 = new StringReader(""Expected a boolean but was "");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    boolean boolean0 = jsonReader0.isLenient();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
