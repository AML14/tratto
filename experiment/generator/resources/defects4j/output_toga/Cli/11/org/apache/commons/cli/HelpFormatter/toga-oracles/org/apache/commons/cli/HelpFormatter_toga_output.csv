project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(74, int0);
}",0,
project,0,test002,"public void test002() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test004,"public void test004() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test005,"public void test005() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test006,"public void test006() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test017,"public void test017() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setLongOptPrefix(""\n"");
    assertEquals(""\n"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test028,"public void test028() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test029,"public void test029() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test0211,"public void test0211() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test0212,"public void test0212() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test0214,"public void test0214() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test0315,"public void test0315() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setNewLine(""usage: "");
    assertEquals(""usage: "", helpFormatter0.getNewLine());
}",0,
project,0,test0416,"public void test0416() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setArgName(""arg"");
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test0418,"public void test0418() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setArgName(""arg"");
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test0419,"public void test0419() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setArgName(""arg"");
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test0421,"public void test0421() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setArgName(""arg"");
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test0422,"public void test0422() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setArgName(""arg"");
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test0523,"public void test0523() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setSyntaxPrefix(""--"");
    assertEquals(""--"", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test0625,"public void test0625() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setWidth(1);
    assertEquals(1, helpFormatter0.defaultWidth);
}",0,
project,0,test0726,"public void test0726() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptPrefix(""usage: "");
    assertEquals(""usage: "", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test0827,"public void test0827() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test0828,"public void test0828() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test0830,"public void test0830() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test0832,"public void test0832() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test0833,"public void test0833() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test0934,"public void test0934() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getArgName();
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test0935,"public void test0935() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getArgName();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test0937,"public void test0937() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getArgName();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test0940,"public void test0940() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getArgName();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test1041,"public void test1041() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(""arg"");
    Options options0 = new Options();
    // Undeclared exception!
    helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1, ""-"", ""-"", options0, 1, 1, ""usage: "");
}",0,
project,0,test1143,"public void test1143() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setDescPadding(1);
    assertEquals(1, helpFormatter0.defaultDescPad);
}",0,
project,0,test1244,"public void test1244() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test1246,"public void test1246() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test1247,"public void test1247() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test1248,"public void test1248() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test1250,"public void test1250() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test1353,"public void test1353() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    helpFormatter0.printHelp(""--"", options0, true);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test1355,"public void test1355() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    helpFormatter0.printHelp(""--"", options0, true);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test1456,"public void test1456() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test1457,"public void test1457() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(""--"", string0);
}",0,
project,0,test1458,"public void test1458() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test1461,"public void test1461() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test1563,"public void test1563() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test1564,"public void test1564() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test1565,"public void test1565() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test1566,"public void test1566() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test1670,"public void test1670() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(""-"", string0);
}",0,
project,0,test1672,"public void test1672() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test1675,"public void test1675() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test1676,"public void test1676() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test1777,"public void test1777() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option("""", true, ""arg"");
    Option option1 = new Option(""mvZl"", true, """");
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
    MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0);
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, true);
    OptionGroup optionGroup0 = new OptionGroup();
    optionGroup0.addOption(option1);
    optionGroup0.addOption(option0);
    options0.addOptionGroup(optionGroup0);
    // Undeclared exception!
    helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 3, ""usage: "", options0);
}",0,
project,0,test1878,"public void test1878() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test1879,"public void test1879() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test1882,"public void test1882() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test1883,"public void test1883() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test1884,"public void test1884() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test1985,"public void test1985() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test1986,"public void test1986() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test1988,"public void test1988() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test1989,"public void test1989() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test1990,"public void test1990() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test2092,"public void test2092() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    // Undeclared exception!
    try {
        helpFormatter0.printHelp(3, (String) null, ""-"", (Options) null, ""-"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cmdLineSyntax not provided
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test2193,"public void test2193() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    // Undeclared exception!
    try {
        helpFormatter0.printHelp("""", options0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cmdLineSyntax not provided
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",1,
project,0,test2294,"public void test2294() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option(""arg"", ""--"");
    OptionGroup optionGroup0 = new OptionGroup();
    OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    optionGroup1.setRequired(true);
    options0.addOptionGroup(optionGroup1);
    helpFormatter0.printHelp(""arg"", ""-"", options0, ""\n"", true);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test2395,"public void test2395() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option((String) null, true, ""-"");
    Options options1 = options0.addOption(option0);
    helpFormatter0.printHelp(""usage: "", ""usage: "", options1, ""usage: "", true);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test2497,"public void test2497() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option(""mvZl"", true, ""-"");
    options0.addOption(option0);
    option0.setArgName((String) null);
    helpFormatter0.printHelp(""\n"", ""\n"", options0, ""usage: "", true);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test2598,"public void test2598() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Options options1 = options0.addOption("""", ""--"", true, ""arg"");
    Options options2 = options1.addOption(""arg"", true, ""--"");
    helpFormatter0.printHelp(""--"", options2);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test25100,"public void test25100() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Options options1 = options0.addOption("""", ""--"", true, ""arg"");
    Options options2 = options1.addOption(""arg"", true, ""--"");
    helpFormatter0.printHelp(""--"", options2);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test26102,"public void test26102() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    helpFormatter0.setLeftPadding(32);
    Option option0 = new Option(""arg"", ""-"", true, ""usage: "");
    Options options1 = options0.addOption(option0);
    helpFormatter0.printHelp(""usage: "", ""-"", options1, ""usage: "", true);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test27103,"public void test27103() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option(""arg"", ""usage: "", false, (String) null);
    Options options1 = options0.addOption(option0);
    helpFormatter0.printHelp(""\n"", ""\n"", options1, ""\n"");
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test27104,"public void test27104() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option(""arg"", ""usage: "", false, (String) null);
    Options options1 = options0.addOption(option0);
    helpFormatter0.printHelp(""\n"", ""\n"", options1, ""\n"");
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test28105,"public void test28105() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    // Undeclared exception!
    try {
        helpFormatter0.findWrapPos(""\n"", (-2307), (-2307));
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test29106,"public void test29106() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.findWrapPos(""\n"", (-1), 1);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test29107,"public void test29107() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.findWrapPos(""\n"", (-1), 1);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test29109,"public void test29109() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.findWrapPos(""\n"", (-1), 1);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test30111,"public void test30111() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test30112,"public void test30112() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertNull(string0);
}",0,
project,0,test30113,"public void test30113() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test30114,"public void test30114() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test30117,"public void test30117() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test31119,"public void test31119() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim("""");
    assertEquals("""", string0);
}",0,
project,0,test31122,"public void test31122() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim("""");
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test31124,"public void test31124() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim("""");
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test31125,"public void test31125() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim("""");
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test31126,"public void test31126() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim("""");
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
