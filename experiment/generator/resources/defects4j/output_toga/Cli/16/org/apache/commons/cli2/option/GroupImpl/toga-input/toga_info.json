{
  "test1433" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1433() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"Passes properties and values to the application\", (-2343), (-2343));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    LinkedList<String> linkedList1 = new LinkedList<String>();\n    linkedList1.add(\"-D\");\n    ListIterator<String> listIterator0 = linkedList1.listIterator();\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test1433"
  },
  "test2246" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2246() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"org.apache.commons.cli2.option.SourceDestArgument\", \"org.apache.commons.cli2.option.SourceDestArgument\", 0, 0);\n    LinkedHashSet<GroupImpl> linkedHashSet0 = new LinkedHashSet<GroupImpl>();\n    List list0 = groupImpl0.helpLines(0, linkedHashSet0, (Comparator) null);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test2246"
  },
  "test2348" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2348() throws Throwable {\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    DisplaySetting displaySetting0 = mock(DisplaySetting.class, new ViolatedAssumptionAnswer());\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"DIS9LAY_ARxUMENT_BRACKETED\", \"DIS9LAY_ARxUMENT_BRACKETED\", 2865, 2865);\n    List list0 = groupImpl0.helpLines(2865, displaySetting0.ALL, (Comparator) null);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2348"
  },
  "test1534" : {
    "methodSignature" : "public void validate(final WriteableCommandLine commandLine) throws OptionException",
    "methodName" : "validate",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1534() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, (String) null, (String) null, 45, 45);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    groupImpl0.validate(writeableCommandLineImpl0);\n}",
    "testName" : "test1534"
  },
  "test1330" : {
    "methodSignature" : "public void process(final WriteableCommandLine commandLine, final ListIterator arguments) throws OptionException",
    "methodName" : "process",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1330() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    linkedList0.add(propertyOption0);\n    PropertyOption propertyOption1 = new PropertyOption(\"\", \"\", 2676);\n    linkedList0.add(propertyOption1);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"-D\", 2676, 2676);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    ListIterator<String> listIterator0 = (ListIterator<String>) mock(ListIterator.class, new ViolatedAssumptionAnswer());\n    doReturn(true, false).when(listIterator0).hasNext();\n    doReturn(\"Passes properties and values to the application\", (Object) null, (Object) null).when(listIterator0).next();\n    doReturn(\"-D\", (Object) null).when(listIterator0).previous();\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n}",
    "testName" : "test1330"
  },
  "test2143" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2143() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    linkedList0.offerLast(propertyOption0);\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Ix\", \"Ix\", 0, 0);\n    String string0 = groupImpl0.toString();\n}",
    "testName" : "test2143"
  },
  "test1431" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1431() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"Passes properties and values to the application\", (-2343), (-2343));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    LinkedList<String> linkedList1 = new LinkedList<String>();\n    linkedList1.add(\"-D\");\n    ListIterator<String> listIterator0 = linkedList1.listIterator();\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test1431"
  },
  "test2244" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2244() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"org.apache.commons.cli2.option.SourceDestArgument\", \"org.apache.commons.cli2.option.SourceDestArgument\", 0, 0);\n    LinkedHashSet<GroupImpl> linkedHashSet0 = new LinkedHashSet<GroupImpl>();\n    List list0 = groupImpl0.helpLines(0, linkedHashSet0, (Comparator) null);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2244"
  },
  "test1737" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1737() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption();\n    linkedList0.offerLast(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"eAP^/,L}F1laI:\", \"eAP^/,L}F1laI:\", 0, 0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    groupImpl0.validate(writeableCommandLineImpl0);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test1737"
  },
  "test012" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test012() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"6fH~_%MC\", \"6fH~_%MC\", 3, 3);\n    int int0 = groupImpl0.getMaximum();\n}",
    "testName" : "test012"
  },
  "test1838" : {
    "methodSignature" : "public void validate(final WriteableCommandLine commandLine) throws OptionException",
    "methodName" : "validate",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1838() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"3S-TqUp'\", \"3S-TqUp'\", (-386), (-386));\n    linkedList0.add(groupImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    writeableCommandLineImpl0.addOption(groupImpl0);\n    GroupImpl groupImpl1 = new GroupImpl(linkedList0, \"3S-TqUp'\", \"3S-TqUp'\", 3, 3);\n    groupImpl1.validate(writeableCommandLineImpl0);\n}",
    "testName" : "test1838"
  },
  "test1635" : {
    "methodSignature" : "public void validate(final WriteableCommandLine commandLine) throws OptionException",
    "methodName" : "validate",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1635() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"\", 60, 60);\n    linkedList0.add(groupImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    groupImpl0.validate(writeableCommandLineImpl0);\n}",
    "testName" : "test1635"
  },
  "test2349" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2349() throws Throwable {\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    DisplaySetting displaySetting0 = mock(DisplaySetting.class, new ViolatedAssumptionAnswer());\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"DIS9LAY_ARxUMENT_BRACKETED\", \"DIS9LAY_ARxUMENT_BRACKETED\", 2865, 2865);\n    List list0 = groupImpl0.helpLines(2865, displaySetting0.ALL, (Comparator) null);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test2349"
  },
  "test0921" : {
    "methodSignature" : "public boolean canProcess(final WriteableCommandLine commandLine, final String arg)",
    "methodName" : "canProcess",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0921() throws Throwable {\n    LinkedList<SourceDestArgument> linkedList0 = new LinkedList<SourceDestArgument>();\n    FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"x:zZJ-\", \"x:zZJ-\", 61, 61, '7', '7', fileValidator0, \"x:zZJ-\", linkedList0, 61);\n    LinkedList<DefaultOption> linkedList1 = new LinkedList<DefaultOption>();\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, 'j', 'j', \"--\", linkedList1);\n    linkedList0.add(sourceDestArgument0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\\\"1ez(U #n_t\", \"\\\"1ez(U #n_t\", '7', '7');\n    LinkedList<GroupImpl> linkedList2 = new LinkedList<GroupImpl>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, linkedList2);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"--\");\n}",
    "testName" : "test0921"
  },
  "test1736" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1736() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption();\n    linkedList0.offerLast(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"eAP^/,L}F1laI:\", \"eAP^/,L}F1laI:\", 0, 0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    groupImpl0.validate(writeableCommandLineImpl0);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test1736"
  },
  "test048" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test048() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"org.apache.commons.cli2.option.SourceDestArgument\", \"org.apache.commons.cli2.option.SourceDestArgument\", 0, 0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, (String) null);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test048"
  },
  "test0817" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0817() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", (String) null, (-283), (-283));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"-D\");\n    groupImpl0.getMinimum();\n}",
    "testName" : "test0817"
  },
  "test049" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test049() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"org.apache.commons.cli2.option.SourceDestArgument\", \"org.apache.commons.cli2.option.SourceDestArgument\", 0, 0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, (String) null);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test049"
  },
  "test0818" : {
    "methodSignature" : "public boolean canProcess(final WriteableCommandLine commandLine, final String arg)",
    "methodName" : "canProcess",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0818() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", (String) null, (-283), (-283));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"-D\");\n}",
    "testName" : "test0818"
  },
  "test0819" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0819() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", (String) null, (-283), (-283));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"-D\");\n    groupImpl0.getMaximum();\n}",
    "testName" : "test0819"
  },
  "test025" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test025() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"Passes properties and values to the application\", 0, 0);\n    groupImpl0.findOption(\"Passes properties and values to the application\");\n    groupImpl0.getMinimum();\n}",
    "testName" : "test025"
  },
  "test2041" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2041() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, (String) null, (String) null, 0, 0);\n    LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();\n    Comparator<Command> comparator0 = (Comparator<Command>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    groupImpl0.appendUsage((StringBuffer) null, (Set) linkedHashSet0, (Comparator) comparator0, (String) null);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test2041"
  },
  "test2040" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2040() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, (String) null, (String) null, 0, 0);\n    LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();\n    Comparator<Command> comparator0 = (Comparator<Command>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    groupImpl0.appendUsage((StringBuffer) null, (Set) linkedHashSet0, (Comparator) comparator0, (String) null);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2040"
  },
  "test2142" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2142() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    linkedList0.offerLast(propertyOption0);\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Ix\", \"Ix\", 0, 0);\n    String string0 = groupImpl0.toString();\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2142"
  },
  "test1124" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1124() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"-D\", (-2163), (-2163));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    LinkedList<String> linkedList1 = new LinkedList<String>(set0);\n    ListIterator<String> listIterator0 = linkedList1.listIterator();\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n    groupImpl0.getPreferredName();\n}",
    "testName" : "test1124"
  },
  "test2654" : {
    "methodSignature" : "public Option findOption(final String trigger)",
    "methodName" : "findOption",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2654() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption(\"\", \"\", 2676);\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"-D\", \"-D\", 2676, 2676);\n    Option option0 = groupImpl0.findOption(\"\");\n}",
    "testName" : "test2654"
  },
  "test0410" : {
    "methodSignature" : "public boolean canProcess(final WriteableCommandLine commandLine, final String arg)",
    "methodName" : "canProcess",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0410() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"org.apache.commons.cli2.option.SourceDestArgument\", \"org.apache.commons.cli2.option.SourceDestArgument\", 0, 0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, (String) null);\n}",
    "testName" : "test0410"
  },
  "test1125" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1125() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"-D\", (-2163), (-2163));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    LinkedList<String> linkedList1 = new LinkedList<String>(set0);\n    ListIterator<String> listIterator0 = linkedList1.listIterator();\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test1125"
  },
  "test1126" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1126() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"-D\", (-2163), (-2163));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    LinkedList<String> linkedList1 = new LinkedList<String>(set0);\n    ListIterator<String> listIterator0 = linkedList1.listIterator();\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test1126"
  },
  "test2656" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2656() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption(\"\", \"\", 2676);\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"-D\", \"-D\", 2676, 2676);\n    Option option0 = groupImpl0.findOption(\"\");\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2656"
  },
  "test1127" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1127() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"-D\", (-2163), (-2163));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    LinkedList<String> linkedList1 = new LinkedList<String>(set0);\n    ListIterator<String> listIterator0 = linkedList1.listIterator();\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n    groupImpl0.getDescription();\n}",
    "testName" : "test1127"
  },
  "test2655" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2655() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption(\"\", \"\", 2676);\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"-D\", \"-D\", 2676, 2676);\n    Option option0 = groupImpl0.findOption(\"\");\n    groupImpl0.getMinimum();\n}",
    "testName" : "test2655"
  },
  "test1022" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1022() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"DISPLAY_GRUP_OUT/ER\", \"DISPLAY_GRUP_OUT/ER\", 0, 0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    ListIterator<GroupImpl> listIterator0 = linkedList0.listIterator();\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test1022"
  },
  "test2451" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2451() throws Throwable {\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    DisplaySetting displaySetting0 = mock(DisplaySetting.class, new ViolatedAssumptionAnswer());\n    Comparator<Command> comparator0 = (Comparator<Command>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"\", 1325, 1325);\n    List list0 = groupImpl0.helpLines(1325, displaySetting0.ALL, comparator0);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test2451"
  },
  "test1023" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1023() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"DISPLAY_GRUP_OUT/ER\", \"DISPLAY_GRUP_OUT/ER\", 0, 0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    ListIterator<GroupImpl> listIterator0 = linkedList0.listIterator();\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test1023"
  },
  "test2553" : {
    "methodSignature" : "public List helpLines(final int depth, final Set helpSettings, final Comparator comp)",
    "methodName" : "helpLines",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2553() throws Throwable {\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    DisplaySetting displaySetting0 = mock(DisplaySetting.class, new ViolatedAssumptionAnswer());\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\\\"p\", \"\\\"p\", (-1929), (-1929));\n    Integer integer0 = new Integer((-1929));\n    linkedList0.add(integer0);\n    Comparator<GroupImpl> comparator0 = (Comparator<GroupImpl>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    groupImpl0.helpLines((-1929), displaySetting0.ALL, comparator0);\n}",
    "testName" : "test2553"
  },
  "test000" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"\", 60, 60);\n    groupImpl0.getAnonymous();\n    groupImpl0.getMaximum();\n}",
    "testName" : "test000"
  },
  "test001" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test001() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"\", 60, 60);\n    groupImpl0.getAnonymous();\n    groupImpl0.getMinimum();\n}",
    "testName" : "test001"
  },
  "test2859" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2859() throws Throwable {\n    LinkedList<SourceDestArgument> linkedList0 = new LinkedList<SourceDestArgument>();\n    FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"x:zZJ-\", \"x:zZJ-\", 61, 61, '7', 'G', fileValidator0, \"joE%RX$7\", linkedList0, 61);\n    LinkedList<DefaultOption> linkedList1 = new LinkedList<DefaultOption>();\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, 'j', 'j', \"--\", linkedList1);\n    linkedList0.add(sourceDestArgument0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\\\"1ez(U #n_t\", \"\\\"1ez(U #n_t\", '\\u0000', '\\u0000');\n    LinkedList<GroupImpl> linkedList2 = new LinkedList<GroupImpl>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, linkedList2);\n    groupImpl0.defaults(writeableCommandLineImpl0);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2859"
  },
  "test0716" : {
    "methodSignature" : "public boolean canProcess(final WriteableCommandLine commandLine, final String arg)",
    "methodName" : "canProcess",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0716() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption(\"\", \"\", 2676);\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"\", (-1968), (-1968));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"-D\");\n}",
    "testName" : "test0716"
  },
  "test0512" : {
    "methodSignature" : "public boolean canProcess(final WriteableCommandLine commandLine, final String arg)",
    "methodName" : "canProcess",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0512() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"-D\", (-784), (-784));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"-D\");\n}",
    "testName" : "test0512"
  },
  "test2757" : {
    "methodSignature" : "public void defaults(final WriteableCommandLine commandLine)",
    "methodName" : "defaults",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2757() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"6fH~_%MC\", \"6fH~_%MC\", 3, 3);\n    linkedList0.offer(groupImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    groupImpl0.defaults(writeableCommandLineImpl0);\n}",
    "testName" : "test2757"
  },
  "test1229" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1229() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption(\"\", \"\", 2676);\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"-D\", 2676, 2676);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    ListIterator<String> listIterator0 = (ListIterator<String>) mock(ListIterator.class, new ViolatedAssumptionAnswer());\n    doReturn(true, false).when(listIterator0).hasNext();\n    doReturn(\"Passes properties and values to the application\", (Object) null, (Object) null).when(listIterator0).next();\n    doReturn((Object) null, (Object) null).when(listIterator0).previous();\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test1229"
  },
  "test0614" : {
    "methodSignature" : "public boolean canProcess(final WriteableCommandLine commandLine, final String arg)",
    "methodName" : "canProcess",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0614() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"w71WR\", \"w71WR\", 0, 0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"w71WR\");\n}",
    "testName" : "test0614"
  },
  "test037" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test037() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    UrlValidator urlValidator0 = new UrlValidator(\"\");\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"\", 217, 217, '~', '~', urlValidator0, (String) null, linkedList0, '~');\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    linkedList0.add((Object) sourceDestArgument0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"EZfj7W|\", \"--\", 217, '\\u0000');\n    groupImpl0.toString();\n    groupImpl0.getMaximum();\n}",
    "testName" : "test037"
  },
  "test1939" : {
    "methodSignature" : "public void validate(final WriteableCommandLine commandLine) throws OptionException",
    "methodName" : "validate",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1939() throws Throwable {\n    LinkedList<SourceDestArgument> linkedList0 = new LinkedList<SourceDestArgument>();\n    NumberValidator numberValidator0 = NumberValidator.getNumberInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"so\", \"so\", (-1), (-1), 'f', 'f', numberValidator0, \"cdl/0m\\\"T4T}e|y)x0\", linkedList0, (-1));\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    linkedList0.add(sourceDestArgument0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"@U\", \"|\", (-1), (-1));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    groupImpl0.validate(writeableCommandLineImpl0);\n}",
    "testName" : "test1939"
  },
  "test013" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test013() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"6fH~_%MC\", \"6fH~_%MC\", 3, 3);\n    int int0 = groupImpl0.getMaximum();\n    groupImpl0.getMinimum();\n}",
    "testName" : "test013"
  },
  "test2450" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2450() throws Throwable {\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    DisplaySetting displaySetting0 = mock(DisplaySetting.class, new ViolatedAssumptionAnswer());\n    Comparator<Command> comparator0 = (Comparator<Command>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"\", 1325, 1325);\n    List list0 = groupImpl0.helpLines(1325, displaySetting0.ALL, comparator0);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2450"
  }
}