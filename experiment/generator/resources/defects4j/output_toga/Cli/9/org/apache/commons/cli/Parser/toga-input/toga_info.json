{
  "test1212" : {
    "methodSignature" : "public String getArgName()",
    "methodName" : "getArgName",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Option option0 = new Option(\"\", \"}uOe;`_98Lf\");\n    option0.setOptionalArg(true);\n    ListIterator<String> listIterator0 = (ListIterator<String>) mock(ListIterator.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(listIterator0).hasNext();\n    posixParser0.processArgs(option0, listIterator0);\n    option0.getArgName();\n}",
    "testName" : "test1212"
  },
  "test1313" : {
    "methodSignature" : "protected void processOption(String arg, ListIterator iter) throws ParseException",
    "methodName" : "processOption",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Options options0 = new Options();\n    OptionGroup optionGroup0 = new OptionGroup();\n    Option option0 = new Option(\"LwnQ\", true, \"LwnQ\");\n    OptionGroup optionGroup1 = optionGroup0.addOption(option0);\n    Options options1 = options0.addOptionGroup(optionGroup1);\n    Properties properties0 = new Properties();\n    GnuParser gnuParser0 = new GnuParser();\n    String[] stringArray0 = new String[5];\n    stringArray0[0] = \"-7a}[2cV\";\n    option0.setRequired(true);\n    gnuParser0.parse(options1, stringArray0, properties0, true);\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    ListIterator<Object> listIterator0 = linkedList0.listIterator();\n    gnuParser0.processOption(\"LwnQ\", listIterator0);\n}",
    "testName" : "test1313"
  },
  "test1010" : {
    "methodSignature" : "public void processArgs(Option opt, ListIterator iter) throws ParseException",
    "methodName" : "processArgs",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    String[] stringArray0 = new String[0];\n    Properties properties0 = new Properties();\n    posixParser0.parse(options0, stringArray0, properties0);\n    Option option0 = new Option((String) null, (String) null);\n    ListIterator<String> listIterator0 = (ListIterator<String>) mock(ListIterator.class, new ViolatedAssumptionAnswer());\n    doReturn(true).when(listIterator0).hasNext();\n    doReturn((String) null).when(listIterator0).next();\n    doReturn((Object) null).when(listIterator0).previous();\n    posixParser0.processArgs(option0, listIterator0);\n}",
    "testName" : "test1010"
  },
  "test1111" : {
    "methodSignature" : "public void processArgs(Option opt, ListIterator iter) throws ParseException",
    "methodName" : "processArgs",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    String[] stringArray0 = new String[7];\n    stringArray0[0] = \"YTc*cX :#5_XKki4CXA\";\n    stringArray0[1] = \"yes\";\n    stringArray0[2] = \"7\";\n    stringArray0[3] = \"7\";\n    stringArray0[4] = \"YTc*cX :#5_XKki4CXA\";\n    stringArray0[5] = \"YTc*cX :#5_XKki4CXA\";\n    stringArray0[6] = \"YTc*cX :#5_XKki4CXA\";\n    posixParser0.parse(options0, stringArray0, (Properties) null);\n    options0.addOption(\"7\", \"7\", true, \"7\");\n    Option option0 = new Option(\"yes\", \"yes\");\n    ListIterator<String> listIterator0 = (ListIterator<String>) mock(ListIterator.class, new ViolatedAssumptionAnswer());\n    doReturn(true).when(listIterator0).hasNext();\n    doReturn(\"7\").when(listIterator0).next();\n    doReturn(\"YTc*cX :#5_XKki4CXA\").when(listIterator0).previous();\n    posixParser0.processArgs(option0, listIterator0);\n}",
    "testName" : "test1111"
  },
  "test011" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Options options0 = new Options();\n    GnuParser gnuParser0 = new GnuParser();\n    Properties properties0 = new Properties();\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"-\";\n    CommandLine commandLine0 = gnuParser0.parse(options0, stringArray0, properties0, true);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Options options0 = new Options();\n    GnuParser gnuParser0 = new GnuParser();\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"-\";\n    Properties properties0 = new Properties();\n    CommandLine commandLine0 = gnuParser0.parse(options0, stringArray0, properties0);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Options options0 = new Options();\n    GnuParser gnuParser0 = new GnuParser();\n    Properties properties0 = new Properties();\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"u7a}[2=V\";\n    CommandLine commandLine0 = gnuParser0.parse(options0, stringArray0, properties0, true);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Options options0 = new Options();\n    OptionGroup optionGroup0 = new OptionGroup();\n    optionGroup0.setRequired(true);\n    BasicParser basicParser0 = new BasicParser();\n    options0.addOptionGroup(optionGroup0);\n    basicParser0.parse(options0, (String[]) null, true);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "protected void processOption(String arg, ListIterator iter) throws ParseException",
    "methodName" : "processOption",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Options options0 = new Options();\n    Options options1 = options0.addOption((String) null, true, \"true\");\n    String[] stringArray0 = new String[0];\n    GnuParser gnuParser0 = new GnuParser();\n    Properties properties0 = new Properties();\n    gnuParser0.parse(options1, stringArray0, properties0, true);\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    ListIterator<Object> listIterator0 = linkedList0.listIterator();\n    gnuParser0.processOption((String) null, listIterator0);\n}",
    "testName" : "test099"
  },
  "test1414" : {
    "methodSignature" : "protected void processOption(String arg, ListIterator iter) throws ParseException",
    "methodName" : "processOption",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    Options options0 = new Options();\n    OptionGroup optionGroup0 = new OptionGroup();\n    Option option0 = new Option(\"LwnQ\", true, \"LwnQ\");\n    OptionGroup optionGroup1 = optionGroup0.addOption(option0);\n    Options options1 = options0.addOptionGroup(optionGroup1);\n    Properties properties0 = new Properties();\n    optionGroup0.setRequired(true);\n    GnuParser gnuParser0 = new GnuParser();\n    String[] stringArray0 = new String[5];\n    stringArray0[0] = \"-7a}[2cV\";\n    gnuParser0.parse(options1, stringArray0, properties0, true);\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    ListIterator<Object> listIterator0 = linkedList0.listIterator();\n    gnuParser0.processOption(\"LwnQ\", listIterator0);\n}",
    "testName" : "test1414"
  },
  "test000" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    CommandLine commandLine0 = posixParser0.parse(options0, (String[]) null);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public String getLongOpt()",
    "methodName" : "getLongOpt",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    String[] stringArray0 = new String[7];\n    stringArray0[0] = \"YTc*cX :#5_XKki4L-A\";\n    stringArray0[1] = \"yes\";\n    stringArray0[2] = \"7\";\n    stringArray0[3] = \"7\";\n    stringArray0[4] = \"--\";\n    stringArray0[5] = \"YTc*cX :#5_XKki4L-A\";\n    stringArray0[6] = \"--\";\n    posixParser0.parse(options0, stringArray0, (Properties) null);\n    options0.addOption(\"7\", \"7\", true, \"7\");\n    Option option0 = new Option(\"7\", true, \"yes\");\n    ListIterator<String> listIterator0 = (ListIterator<String>) mock(ListIterator.class, new ViolatedAssumptionAnswer());\n    doReturn(true, true).when(listIterator0).hasNext();\n    doReturn(\"7\", \"-7\").when(listIterator0).next();\n    doReturn(\"--\").when(listIterator0).previous();\n    posixParser0.processArgs(option0, listIterator0);\n    option0.getLongOpt();\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Options options0 = new Options();\n    GnuParser gnuParser0 = new GnuParser();\n    Properties properties0 = new Properties();\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"-}cc\";\n    gnuParser0.parse(options0, stringArray0, properties0);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    String[] stringArray0 = new String[0];\n    Properties properties0 = new Properties();\n    properties0.put(\"\", posixParser0);\n    posixParser0.parse(options0, stringArray0, properties0);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Options options0 = new Options();\n    OptionGroup optionGroup0 = new OptionGroup();\n    optionGroup0.setRequired(true);\n    Options options1 = options0.addOptionGroup(optionGroup0);\n    BasicParser basicParser0 = new BasicParser();\n    options1.addOptionGroup(optionGroup0);\n    basicParser0.parse(options1, (String[]) null, false);\n}",
    "testName" : "test088"
  }
}