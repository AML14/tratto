{
  "test1213" : {
    "methodSignature" : "public void processArgs(Option opt, ListIterator iter) throws ParseException",
    "methodName" : "processArgs",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1213() throws Throwable {\n    Options options0 = new Options();\n    GnuParser gnuParser0 = new GnuParser();\n    Properties properties0 = new Properties();\n    LinkedList<String> linkedList0 = new LinkedList<String>();\n    linkedList0.add(\" to desired type: \");\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \" to desired type: \";\n    gnuParser0.parse(options0, stringArray0, properties0, true);\n    ListIterator<String> listIterator0 = linkedList0.listIterator();\n    gnuParser0.processArgs((Option) null, listIterator0);\n}",
    "testName" : "test1213"
  },
  "test1314" : {
    "methodSignature" : "protected void processOption(String arg, ListIterator iter) throws ParseException",
    "methodName" : "processOption",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1314() throws Throwable {\n    Option option0 = new Option(\"5\", \"5\", true, \"5\");\n    Options options0 = new Options();\n    Options options1 = options0.addOption(option0);\n    Properties properties0 = new Properties();\n    BasicParser basicParser0 = new BasicParser();\n    String[] stringArray0 = new String[2];\n    stringArray0[0] = \"5\";\n    stringArray0[1] = \"5\";\n    basicParser0.parse(options1, stringArray0, properties0, false);\n    LinkedList<String> linkedList0 = new LinkedList<String>();\n    linkedList0.add(\"-5\");\n    ListIterator<String> listIterator0 = linkedList0.listIterator();\n    basicParser0.processOption(\"-5\", listIterator0);\n}",
    "testName" : "test1314"
  },
  "test1010" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    GnuParser gnuParser0 = new GnuParser();\n    Options options0 = new Options();\n    Properties properties0 = new Properties();\n    OptionGroup optionGroup0 = new OptionGroup();\n    optionGroup0.setRequired(true);\n    Options options1 = options0.addOptionGroup(optionGroup0);\n    gnuParser0.parse(options1, (String[]) null, properties0, true);\n}",
    "testName" : "test1010"
  },
  "test011" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Options options0 = new Options();\n    GnuParser gnuParser0 = new GnuParser();\n    String[] stringArray0 = new String[1];\n    gnuParser0.parse(options0, stringArray0, true);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    GnuParser gnuParser0 = new GnuParser();\n    Options options0 = new Options();\n    String[] stringArray0 = new String[2];\n    stringArray0[0] = \"-~;t\";\n    PosixParser posixParser0 = new PosixParser();\n    String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);\n    CommandLine commandLine0 = gnuParser0.parse(options0, stringArray1);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Options options0 = new Options();\n    GnuParser gnuParser0 = new GnuParser();\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"-\";\n    CommandLine commandLine0 = gnuParser0.parse(options0, stringArray0);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Options options0 = new Options();\n    GnuParser gnuParser0 = new GnuParser();\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"-~;t\";\n    gnuParser0.parse(options0, stringArray0);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    GnuParser gnuParser0 = new GnuParser();\n    Options options0 = new Options();\n    Properties properties0 = new Properties();\n    properties0.put(\"-tn'm{W$6H0r5{;w\", \"-tn'm{W$6H0r5{;w\");\n    gnuParser0.parse(options0, (String[]) null, properties0, true);\n}",
    "testName" : "test099"
  },
  "test1617" : {
    "methodSignature" : "protected void processOption(String arg, ListIterator iter) throws ParseException",
    "methodName" : "processOption",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1617() throws Throwable {\n    Option option0 = new Option(\"5\", \"5\", true, (String) null);\n    Options options0 = new Options();\n    String[] stringArray0 = new String[3];\n    stringArray0[0] = \"5\";\n    OptionGroup optionGroup0 = new OptionGroup();\n    OptionGroup optionGroup1 = optionGroup0.addOption(option0);\n    Options options1 = options0.addOptionGroup(optionGroup1);\n    Properties properties0 = new Properties();\n    optionGroup0.setRequired(true);\n    BasicParser basicParser0 = new BasicParser();\n    basicParser0.parse(options1, stringArray0, properties0, true);\n    LinkedList<String> linkedList0 = new LinkedList<String>();\n    ListIterator<String> listIterator0 = linkedList0.listIterator();\n    basicParser0.processOption(\"5\", listIterator0);\n}",
    "testName" : "test1617"
  },
  "test1415" : {
    "methodSignature" : "protected void processOption(String arg, ListIterator iter) throws ParseException",
    "methodName" : "processOption",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1415() throws Throwable {\n    BasicParser basicParser0 = new BasicParser();\n    Options options0 = new Options();\n    Option option0 = new Option(\"yes\", \"yes\", false, \"yes\");\n    Options options1 = options0.addOption(option0);\n    String[] stringArray0 = new String[0];\n    Properties properties0 = new Properties();\n    basicParser0.parse(options1, stringArray0, properties0, false);\n    basicParser0.processOption(\"yes\", (ListIterator) null);\n}",
    "testName" : "test1415"
  },
  "test1516" : {
    "methodSignature" : "protected void processOption(String arg, ListIterator iter) throws ParseException",
    "methodName" : "processOption",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1516() throws Throwable {\n    BasicParser basicParser0 = new BasicParser();\n    Options options0 = new Options();\n    Option option0 = new Option(\"es\", \"es\", true, \"es\");\n    Properties properties0 = new Properties();\n    Options options1 = options0.addOption(option0);\n    option0.setRequired(true);\n    String[] stringArray0 = new String[0];\n    basicParser0.parse(options1, stringArray0, properties0, true);\n    basicParser0.processOption(\"es\", (ListIterator) null);\n}",
    "testName" : "test1516"
  },
  "test000" : {
    "methodSignature" : "public void processArgs(Option opt, ListIterator iter) throws ParseException",
    "methodName" : "processArgs",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    BasicParser basicParser0 = new BasicParser();\n    Option option0 = new Option((String) null, true, (String) null);\n    LinkedList<String> linkedList0 = new LinkedList<String>();\n    ListIterator<String> listIterator0 = linkedList0.listIterator();\n    option0.setOptionalArg(true);\n    basicParser0.processArgs(option0, listIterator0);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Options options0 = new Options();\n    Properties properties0 = new Properties();\n    GnuParser gnuParser0 = new GnuParser();\n    CommandLine commandLine0 = gnuParser0.parse(options0, (String[]) null, properties0);\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Options options0 = new Options();\n    Properties properties0 = new Properties();\n    GnuParser gnuParser0 = new GnuParser();\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"-\";\n    CommandLine commandLine0 = gnuParser0.parse(options0, stringArray0, properties0, true);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    GnuParser gnuParser0 = new GnuParser();\n    Options options0 = new Options();\n    Properties properties0 = new Properties();\n    String[] stringArray0 = new String[20];\n    stringArray0[0] = \"-tn'm{W$6H0r5{;w\";\n    CommandLine commandLine0 = gnuParser0.parse(options0, stringArray0, properties0, true);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Options options0 = new Options();\n    BasicParser basicParser0 = new BasicParser();\n    String[] stringArray0 = new String[2];\n    stringArray0[0] = \"org.apache.commons.cli.AmbiguousOptionException\";\n    stringArray0[1] = \"--\";\n    Properties properties0 = new Properties();\n    CommandLine commandLine0 = basicParser0.parse(options0, stringArray0, properties0, true);\n}",
    "testName" : "test088"
  }
}