{
  "test1212" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Option option0 = new Option(\"\", \"\", true, \"\");\n    GnuParser gnuParser0 = new GnuParser();\n    Options options0 = new Options();\n    Options options1 = options0.addOption(option0);\n    options0.addOption(\"1\", true, \"1\");\n    Properties properties0 = new Properties();\n    String[] stringArray0 = new String[7];\n    stringArray0[0] = \"1\";\n    stringArray0[1] = \"*\";\n    stringArray0[2] = \"\";\n    stringArray0[3] = \"--1\";\n    stringArray0[4] = \"\";\n    stringArray0[5] = \"\";\n    stringArray0[6] = \"\";\n    CommandLine commandLine0 = gnuParser0.parse(options1, stringArray0, properties0, false);\n}",
    "testName" : "test1212"
  },
  "test1313" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    GnuParser gnuParser0 = new GnuParser();\n    Options options0 = new Options();\n    options0.addOption(\"1\", true, \"1\");\n    Properties properties0 = new Properties();\n    String[] stringArray0 = new String[5];\n    stringArray0[0] = \"*\";\n    stringArray0[1] = \"1\";\n    stringArray0[2] = \"--1\";\n    stringArray0[3] = \"--1\";\n    stringArray0[4] = \"--1\";\n    gnuParser0.parse(options0, stringArray0, properties0, false);\n}",
    "testName" : "test1313"
  },
  "test1010" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Option option0 = new Option(\"4\", true, \"4\");\n    GnuParser gnuParser0 = new GnuParser();\n    Options options0 = new Options();\n    option0.setRequired(true);\n    options0.addOption(option0);\n    gnuParser0.parse(options0, (String[]) null, true);\n}",
    "testName" : "test1010"
  },
  "test1111" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    GnuParser gnuParser0 = new GnuParser();\n    Options options0 = new Options();\n    options0.addOption(\"1\", true, \"1\");\n    Properties properties0 = new Properties();\n    String[] stringArray0 = new String[7];\n    stringArray0[0] = \"1\";\n    stringArray0[1] = \"*\";\n    stringArray0[2] = \"\";\n    stringArray0[3] = \"--1\";\n    stringArray0[4] = \"\";\n    stringArray0[5] = \"\";\n    stringArray0[6] = \"\";\n    CommandLine commandLine0 = gnuParser0.parse(options0, stringArray0, properties0, false);\n}",
    "testName" : "test1111"
  },
  "test011" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    GnuParser gnuParser0 = new GnuParser();\n    Options options0 = new Options();\n    Properties properties0 = new Properties();\n    CommandLine commandLine0 = gnuParser0.parse(options0, (String[]) null, properties0);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Options options0 = new Options();\n    Properties properties0 = new Properties();\n    GnuParser gnuParser0 = new GnuParser();\n    String[] stringArray0 = new String[2];\n    stringArray0[0] = \"-\";\n    stringArray0[1] = \"-\";\n    CommandLine commandLine0 = gnuParser0.parse(options0, stringArray0, properties0, true);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Options options0 = new Options();\n    Properties properties0 = new Properties();\n    GnuParser gnuParser0 = new GnuParser();\n    String[] stringArray0 = new String[2];\n    stringArray0[0] = \"-\";\n    stringArray0[1] = \"-\";\n    CommandLine commandLine0 = gnuParser0.parse(options0, stringArray0, properties0, false);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    GnuParser gnuParser0 = new GnuParser();\n    Options options0 = new Options();\n    Properties properties0 = new Properties();\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"--1\";\n    CommandLine commandLine0 = gnuParser0.parse(options0, stringArray0, properties0, true);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Options options0 = new Options();\n    Properties properties0 = new Properties();\n    properties0.put(\"0:Ki)V)*E`Gj;P %iG\", options0);\n    GnuParser gnuParser0 = new GnuParser();\n    String[] stringArray0 = new String[2];\n    stringArray0[0] = \"0:Ki)V)*E`Gj;P %iG\";\n    stringArray0[1] = \"--\";\n    gnuParser0.parse(options0, stringArray0, properties0, true);\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "protected void processOption(String arg, ListIterator iter) throws ParseException",
    "methodName" : "processOption",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    Option option0 = new Option(\"4\", \"4\", true, \"4\");\n    GnuParser gnuParser0 = new GnuParser();\n    Options options0 = new Options();\n    OptionGroup optionGroup0 = new OptionGroup();\n    OptionGroup optionGroup1 = optionGroup0.addOption(option0);\n    options0.addOptionGroup(optionGroup1);\n    optionGroup1.setRequired(true);\n    gnuParser0.parse(options0, (String[]) null, true);\n    ListIterator<OptionGroup> listIterator0 = (ListIterator<OptionGroup>) mock(ListIterator.class, new ViolatedAssumptionAnswer());\n    doReturn(true).when(listIterator0).hasNext();\n    doReturn(optionGroup1).when(listIterator0).next();\n    gnuParser0.processOption(\"4\", listIterator0);\n}",
    "testName" : "test1616"
  },
  "test1515" : {
    "methodSignature" : "protected void processOption(String arg, ListIterator iter) throws ParseException",
    "methodName" : "processOption",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    Option option0 = new Option(\"\", \"\", false, \"\");\n    ListIterator<OptionGroup> listIterator0 = (ListIterator<OptionGroup>) mock(ListIterator.class, new ViolatedAssumptionAnswer());\n    GnuParser gnuParser0 = new GnuParser();\n    Options options0 = new Options();\n    Options options1 = options0.addOption(option0);\n    option0.setRequired(true);\n    String[] stringArray0 = new String[0];\n    gnuParser0.parse(options1, stringArray0, false);\n    gnuParser0.processOption(\"\", listIterator0);\n}",
    "testName" : "test1515"
  },
  "test000" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Options options0 = new Options();\n    GnuParser gnuParser0 = new GnuParser();\n    CommandLine commandLine0 = gnuParser0.parse(options0, (String[]) null);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "protected void processOption(String arg, ListIterator iter) throws ParseException",
    "methodName" : "processOption",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Option option0 = new Option(\"4\", \"4\", true, \"4\");\n    GnuParser gnuParser0 = new GnuParser();\n    Options options0 = new Options();\n    OptionGroup optionGroup0 = new OptionGroup();\n    OptionGroup optionGroup1 = optionGroup0.addOption(option0);\n    options0.addOptionGroup(optionGroup1);\n    gnuParser0.parse(options0, (String[]) null, true);\n    ListIterator<OptionGroup> listIterator0 = (ListIterator<OptionGroup>) mock(ListIterator.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(listIterator0).hasNext();\n    gnuParser0.processOption(\"4\", listIterator0);\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Options options0 = new Options();\n    GnuParser gnuParser0 = new GnuParser();\n    String[] stringArray0 = new String[2];\n    stringArray0[0] = \"--\";\n    CommandLine commandLine0 = gnuParser0.parse(options0, stringArray0, false);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    GnuParser gnuParser0 = new GnuParser();\n    Options options0 = new Options();\n    Properties properties0 = new Properties();\n    String[] stringArray0 = new String[7];\n    stringArray0[0] = \"1\";\n    stringArray0[1] = \"*\";\n    stringArray0[2] = \"\";\n    stringArray0[3] = \"--1\";\n    stringArray0[4] = \"\";\n    stringArray0[5] = \"\";\n    stringArray0[6] = \"\";\n    gnuParser0.parse(options0, stringArray0, properties0, false);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.Parser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    GnuParser gnuParser0 = new GnuParser();\n    Options options0 = new Options();\n    options0.addOption(\"1\", true, \"1\");\n    Properties properties0 = new Properties();\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"--1\";\n    gnuParser0.parse(options0, stringArray0, properties0, true);\n}",
    "testName" : "test088"
  }
}