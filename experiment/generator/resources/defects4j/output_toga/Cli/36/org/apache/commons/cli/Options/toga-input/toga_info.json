{
  "test1113" : {
    "methodSignature" : "public Option getOption(String opt)",
    "methodName" : "getOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1113() throws Throwable {\n    Options options0 = new Options();\n    Option option0 = options0.getOption((String) null);\n}",
    "testName" : "test1113"
  },
  "test1720" : {
    "methodSignature" : "public boolean hasLongOption(String opt)",
    "methodName" : "hasLongOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1720() throws Throwable {\n    Options options0 = new Options();\n    boolean boolean0 = options0.hasLongOption(\"[/\");\n}",
    "testName" : "test1720"
  },
  "test2023" : {
    "methodSignature" : "public boolean hasShortOption(String opt)",
    "methodName" : "hasShortOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2023() throws Throwable {\n    Options options0 = new Options();\n    Option option0 = new Option(\"4\", \"oi8UJ'BQWHc3s*q;-W\");\n    options0.addOption(option0);\n    boolean boolean0 = options0.hasShortOption(\"4\");\n}",
    "testName" : "test2023"
  },
  "test1012" : {
    "methodSignature" : "public Options addOption(Option opt)",
    "methodName" : "addOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1012() throws Throwable {\n    Options options0 = new Options();\n    Option option0 = new Option(\"4\", \"oi8UJ'BQWHc3s*q;-W\");\n    option0.setRequired(true);\n    options0.addOption(option0);\n    Options options1 = options0.addOption(option0);\n}",
    "testName" : "test1012"
  },
  "test000" : {
    "methodSignature" : "public Options addOption(String opt, boolean hasArg, String description)",
    "methodName" : "addOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Options options0 = new Options();\n    Options options1 = options0.addOption(\"\", true, \"\");\n}",
    "testName" : "test000"
  },
  "test011" : {
    "methodSignature" : "public Option getOption(String opt)",
    "methodName" : "getOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Options options0 = new Options();\n    options0.addOption(\"\", \"\");\n    Option option0 = options0.getOption(\"\");\n}",
    "testName" : "test011"
  },
  "test012" : {
    "methodSignature" : "public int getArgs()",
    "methodName" : "getArgs",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test012() throws Throwable {\n    Options options0 = new Options();\n    options0.addOption(\"\", \"\");\n    Option option0 = options0.getOption(\"\");\n    option0.getArgs();\n}",
    "testName" : "test012"
  },
  "test1518" : {
    "methodSignature" : "public boolean hasOption(String opt)",
    "methodName" : "hasOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1518() throws Throwable {\n    Options options0 = new Options();\n    boolean boolean0 = options0.hasOption(\"KARG...]\");\n}",
    "testName" : "test1518"
  },
  "test1619" : {
    "methodSignature" : "public boolean hasOption(String opt)",
    "methodName" : "hasOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1619() throws Throwable {\n    Options options0 = new Options();\n    options0.addOption(\"\", \"\");\n    boolean boolean0 = options0.hasOption(\"\");\n}",
    "testName" : "test1619"
  },
  "test1821" : {
    "methodSignature" : "public boolean hasLongOption(String opt)",
    "methodName" : "hasLongOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1821() throws Throwable {\n    Options options0 = new Options();\n    Options options1 = options0.addOption(\"\", \"\", true, \"\");\n    boolean boolean0 = options1.hasLongOption(\"\");\n}",
    "testName" : "test1821"
  },
  "test0810" : {
    "methodSignature" : "public Options addOptionGroup(OptionGroup group)",
    "methodName" : "addOptionGroup",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0810() throws Throwable {\n    Options options0 = new Options();\n    OptionGroup optionGroup0 = new OptionGroup();\n    Option option0 = new Option(\"4\", \"oi8UJ'BQWHc3s*q;-W\");\n    optionGroup0.addOption(option0);\n    Options options1 = options0.addOptionGroup(optionGroup0);\n}",
    "testName" : "test0810"
  },
  "test1922" : {
    "methodSignature" : "public boolean hasShortOption(String opt)",
    "methodName" : "hasShortOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1922() throws Throwable {\n    Options options0 = new Options();\n    boolean boolean0 = options0.hasShortOption(\" ]\");\n}",
    "testName" : "test1922"
  },
  "test0911" : {
    "methodSignature" : "public boolean hasOption(String opt)",
    "methodName" : "hasOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0911() throws Throwable {\n    Options options0 = new Options();\n    options0.addOption(\"3\", \"'\", true, \"org.apache.commons.cli.AlreadySelectedException\");\n    boolean boolean0 = options0.hasOption(\"'\");\n}",
    "testName" : "test0911"
  },
  "test013" : {
    "methodSignature" : "public boolean hasLongOpt()",
    "methodName" : "hasLongOpt",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test013() throws Throwable {\n    Options options0 = new Options();\n    options0.addOption(\"\", \"\");\n    Option option0 = options0.getOption(\"\");\n    option0.hasLongOpt();\n}",
    "testName" : "test013"
  },
  "test024" : {
    "methodSignature" : "public Collection<Option> getOptions()",
    "methodName" : "getOptions",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test024() throws Throwable {\n    Options options0 = new Options();\n    Collection<Option> collection0 = options0.getOptions();\n}",
    "testName" : "test024"
  },
  "test046" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test046() throws Throwable {\n    Options options0 = new Options();\n    String string0 = options0.toString();\n}",
    "testName" : "test046"
  },
  "test057" : {
    "methodSignature" : "public OptionGroup getOptionGroup(Option opt)",
    "methodName" : "getOptionGroup",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test057() throws Throwable {\n    Options options0 = new Options();\n    Option option0 = new Option(\"\", false, \"\");\n    OptionGroup optionGroup0 = options0.getOptionGroup(option0);\n}",
    "testName" : "test057"
  },
  "test068" : {
    "methodSignature" : "Collection<OptionGroup> getOptionGroups()",
    "methodName" : "getOptionGroups",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068() throws Throwable {\n    Options options0 = new Options();\n    Collection<OptionGroup> collection0 = options0.getOptionGroups();\n}",
    "testName" : "test068"
  },
  "test079" : {
    "methodSignature" : "public Options addOptionGroup(OptionGroup group)",
    "methodName" : "addOptionGroup",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079() throws Throwable {\n    Options options0 = new Options();\n    OptionGroup optionGroup0 = new OptionGroup();\n    optionGroup0.setRequired(true);\n    Options options1 = options0.addOptionGroup(optionGroup0);\n}",
    "testName" : "test079"
  }
}