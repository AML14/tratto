{
  "test1212" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"-j\";\n    CommandLine commandLine0 = posixParser0.parse(options0, stringArray0, true);\n}",
    "testName" : "test1212"
  },
  "test1313" : {
    "methodSignature" : "protected void burstToken(String token, boolean stopAtNonOption)",
    "methodName" : "burstToken",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    options0.addOption(\"\", true, \"\");\n    String[] stringArray0 = new String[0];\n    posixParser0.flatten(options0, stringArray0, true);\n    posixParser0.burstToken(\"--[ Options: [ short java.util.HashMap@0000000004 ] [ long {} ]\", true);\n}",
    "testName" : "test1313"
  },
  "test1010" : {
    "methodSignature" : "protected void burstToken(String token, boolean stopAtNonOption)",
    "methodName" : "burstToken",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    Options options1 = options0.addOption(\"\", false, \"\");\n    String[] stringArray0 = new String[0];\n    posixParser0.flatten(options1, stringArray0, false);\n    posixParser0.burstToken(\"--/b#GsvB.\", true);\n}",
    "testName" : "test1010"
  },
  "test1111" : {
    "methodSignature" : "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)",
    "methodName" : "flatten",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    options0.addOption(\"j\", \"j\", false, \"j\");\n    String[] stringArray0 = new String[9];\n    stringArray0[0] = \"-j\";\n    posixParser0.flatten(options0, stringArray0, false);\n}",
    "testName" : "test1111"
  },
  "test011" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    String[] stringArray0 = new String[29];\n    stringArray0[0] = \"-\";\n    posixParser0.parse(options0, stringArray0, false);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"--\";\n    CommandLine commandLine0 = posixParser0.parse(options0, stringArray0, false);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)",
    "methodName" : "flatten",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    String[] stringArray0 = Locale.getISOLanguages();\n    String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)",
    "methodName" : "flatten",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    options0.addOption(\"WF\", true, \"WF\");\n    String[] stringArray0 = new String[8];\n    stringArray0[0] = \"-WF\";\n    posixParser0.flatten(options0, stringArray0, true);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "protected void burstToken(String token, boolean stopAtNonOption)",
    "methodName" : "burstToken",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    options0.addOption(\"\", true, \"\");\n    String[] stringArray0 = new String[0];\n    posixParser0.flatten(options0, stringArray0, true);\n    posixParser0.burstToken(\"--\", true);\n    posixParser0.burstToken(\"vo:`]-lTv\", true);\n}",
    "testName" : "test099"
  },
  "test000" : {
    "methodSignature" : "protected void burstToken(String token, boolean stopAtNonOption)",
    "methodName" : "burstToken",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    String[] stringArray0 = new String[0];\n    posixParser0.flatten(options0, stringArray0, false);\n    posixParser0.burstToken(\"--[ Options: [ short java.util.HashMap@0000000004 ] [ long {} ]\", false);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    String[] stringArray0 = new String[2];\n    stringArray0[0] = \"--/f=u<LJfp\";\n    posixParser0.parse(options0, stringArray0, true);\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"-{eZ\\\" 3#&`\";\n    CommandLine commandLine0 = posixParser0.parse(options0, stringArray0, true);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)",
    "methodName" : "flatten",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    String[] stringArray0 = new String[9];\n    stringArray0[0] = \"-j\";\n    posixParser0.flatten(options0, stringArray0, false);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)",
    "methodName" : "flatten",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    String[] stringArray0 = Locale.getISOLanguages();\n    String[] stringArray1 = posixParser0.flatten(options0, stringArray0, false);\n}",
    "testName" : "test088"
  }
}