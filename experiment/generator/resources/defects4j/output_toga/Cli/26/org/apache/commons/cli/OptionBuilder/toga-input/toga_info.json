{
  "test1213" : {
    "methodSignature" : "public static OptionBuilder hasOptionalArgs(int numArgs)",
    "methodName" : "hasOptionalArgs",
    "className" : "org.apache.commons.cli.OptionBuilder",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1213() throws Throwable {\n    OptionBuilder optionBuilder0 = OptionBuilder.hasOptionalArgs((-2));\n}",
    "testName" : "test1213"
  },
  "test1314" : {
    "methodSignature" : "public static OptionBuilder hasOptionalArgs()",
    "methodName" : "hasOptionalArgs",
    "className" : "org.apache.commons.cli.OptionBuilder",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1314() throws Throwable {\n    OptionBuilder optionBuilder0 = OptionBuilder.hasOptionalArgs();\n}",
    "testName" : "test1314"
  },
  "test1010" : {
    "methodSignature" : "public int getArgs()",
    "methodName" : "getArgs",
    "className" : "org.apache.commons.cli.OptionBuilder",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Option option0 = OptionBuilder.create('q');\n    option0.getArgs();\n}",
    "testName" : "test1010"
  },
  "test1011" : {
    "methodSignature" : "public int getId()",
    "methodName" : "getId",
    "className" : "org.apache.commons.cli.OptionBuilder",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1011() throws Throwable {\n    Option option0 = OptionBuilder.create('q');\n    option0.getId();\n}",
    "testName" : "test1011"
  },
  "test1112" : {
    "methodSignature" : "public static OptionBuilder hasArgs()",
    "methodName" : "hasArgs",
    "className" : "org.apache.commons.cli.OptionBuilder",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1112() throws Throwable {\n    OptionBuilder optionBuilder0 = OptionBuilder.hasArgs();\n}",
    "testName" : "test1112"
  },
  "test011" : {
    "methodSignature" : "public static OptionBuilder withType(Object newType)",
    "methodName" : "withType",
    "className" : "org.apache.commons.cli.OptionBuilder",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Object object0 = new Object();\n    OptionBuilder optionBuilder0 = OptionBuilder.withType(object0);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public static OptionBuilder withValueSeparator(char sep)",
    "methodName" : "withValueSeparator",
    "className" : "org.apache.commons.cli.OptionBuilder",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    OptionBuilder optionBuilder0 = OptionBuilder.withValueSeparator('4');\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public int getArgs()",
    "methodName" : "getArgs",
    "className" : "org.apache.commons.cli.OptionBuilder",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    OptionBuilder.withLongOpt(\"org.apache.commons.cli.OptionBuilder\");\n    Option option0 = OptionBuilder.create();\n    option0.getArgs();\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public static OptionBuilder withArgName(String name)",
    "methodName" : "withArgName",
    "className" : "org.apache.commons.cli.OptionBuilder",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    OptionBuilder optionBuilder0 = OptionBuilder.withArgName(\"org.apache.commons.cli.OptionBuilder\");\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public static OptionBuilder hasOptionalArg()",
    "methodName" : "hasOptionalArg",
    "className" : "org.apache.commons.cli.OptionBuilder",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    OptionBuilder optionBuilder0 = OptionBuilder.hasOptionalArg();\n}",
    "testName" : "test099"
  },
  "test1617" : {
    "methodSignature" : "public static OptionBuilder hasArg(boolean hasArg)",
    "methodName" : "hasArg",
    "className" : "org.apache.commons.cli.OptionBuilder",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1617() throws Throwable {\n    OptionBuilder optionBuilder0 = OptionBuilder.hasArg(true);\n}",
    "testName" : "test1617"
  },
  "test1718" : {
    "methodSignature" : "public static Option create() throws IllegalArgumentException",
    "methodName" : "create",
    "className" : "org.apache.commons.cli.OptionBuilder",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1718() throws Throwable {\n    OptionBuilder.create();\n}",
    "testName" : "test1718"
  },
  "test1415" : {
    "methodSignature" : "public static OptionBuilder withDescription(String newDescription)",
    "methodName" : "withDescription",
    "className" : "org.apache.commons.cli.OptionBuilder",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1415() throws Throwable {\n    OptionBuilder optionBuilder0 = OptionBuilder.withDescription(\"org.apache.commons.cli.OptionBuilder\");\n}",
    "testName" : "test1415"
  },
  "test1516" : {
    "methodSignature" : "public static OptionBuilder hasArg(boolean hasArg)",
    "methodName" : "hasArg",
    "className" : "org.apache.commons.cli.OptionBuilder",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1516() throws Throwable {\n    OptionBuilder optionBuilder0 = OptionBuilder.hasArg(false);\n}",
    "testName" : "test1516"
  },
  "test000" : {
    "methodSignature" : "public static OptionBuilder hasArgs(int num)",
    "methodName" : "hasArgs",
    "className" : "org.apache.commons.cli.OptionBuilder",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    OptionBuilder optionBuilder0 = OptionBuilder.hasArgs(293);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public static OptionBuilder isRequired()",
    "methodName" : "isRequired",
    "className" : "org.apache.commons.cli.OptionBuilder",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    OptionBuilder optionBuilder0 = OptionBuilder.isRequired();\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public static OptionBuilder hasArg()",
    "methodName" : "hasArg",
    "className" : "org.apache.commons.cli.OptionBuilder",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    OptionBuilder optionBuilder0 = OptionBuilder.hasArg();\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public static OptionBuilder isRequired(boolean newRequired)",
    "methodName" : "isRequired",
    "className" : "org.apache.commons.cli.OptionBuilder",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    OptionBuilder optionBuilder0 = OptionBuilder.isRequired(false);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public static OptionBuilder withValueSeparator()",
    "methodName" : "withValueSeparator",
    "className" : "org.apache.commons.cli.OptionBuilder",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    OptionBuilder optionBuilder0 = OptionBuilder.withValueSeparator();\n}",
    "testName" : "test088"
  }
}