{
  "test1012" : {
    "methodSignature" : "protected void burstToken(String token, boolean stopAtNonOption)",
    "methodName" : "burstToken",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1012() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    String[] stringArray0 = new String[0];\n    posixParser0.parse(options0, stringArray0);\n    options0.addOption(\"\", true, \"\");\n    posixParser0.burstToken(\"hrjA5Rr9s-\", true);\n}",
    "testName" : "test1012"
  },
  "test000" : {
    "methodSignature" : "protected void burstToken(String token, boolean stopAtNonOption)",
    "methodName" : "burstToken",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    String[] stringArray0 = new String[0];\n    posixParser0.parse(options0, stringArray0);\n    options0.addOption(\"\", true, \"\");\n    posixParser0.burstToken(\"I~@nlmjL-vJZ\", true);\n    posixParser0.burstToken(\"I~@nlmjL-vJZ\", true);\n}",
    "testName" : "test000"
  },
  "test011" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Options options0 = new Options();\n    PosixParser posixParser0 = new PosixParser();\n    String[] stringArray0 = new String[8];\n    stringArray0[0] = \"-\";\n    posixParser0.parse(options0, stringArray0);\n}",
    "testName" : "test011"
  },
  "test022" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"--9ztaVFbB=\";\n    posixParser0.parse(options0, stringArray0, (Properties) null);\n}",
    "testName" : "test022"
  },
  "test033" : {
    "methodSignature" : "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)",
    "methodName" : "flatten",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    String[] stringArray0 = Locale.getISOCountries();\n    String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);\n    String[] stringArray2 = posixParser0.flatten(options0, stringArray1, true);\n}",
    "testName" : "test033"
  },
  "test044" : {
    "methodSignature" : "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)",
    "methodName" : "flatten",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Options options0 = new Options();\n    PosixParser posixParser0 = new PosixParser();\n    String[] stringArray0 = new String[3];\n    stringArray0[0] = \"-)gOJR9\";\n    String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);\n}",
    "testName" : "test044"
  },
  "test055" : {
    "methodSignature" : "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)",
    "methodName" : "flatten",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    String[] stringArray0 = new String[4];\n    stringArray0[0] = \"*','dA\";\n    stringArray0[1] = \"-W@L-Nr\";\n    stringArray0[2] = \"-W@L-Nr\";\n    stringArray0[3] = \"*','dA\";\n    String[] stringArray1 = posixParser0.flatten(options0, stringArray0, false);\n    String[] stringArray2 = posixParser0.flatten(options0, stringArray1, false);\n}",
    "testName" : "test055"
  },
  "test067" : {
    "methodSignature" : "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)",
    "methodName" : "flatten",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    String[] stringArray0 = new String[7];\n    stringArray0[0] = \"yes\";\n    stringArray0[1] = \"CMWM0Ovi+\";\n    stringArray0[2] = \"yB+[.?~{?;B-PW_\";\n    stringArray0[3] = \"CMWM0Ovi+\";\n    stringArray0[4] = \"-AD\";\n    Options options1 = options0.addOption(\"AD\", \"\", true, \"yes\");\n    posixParser0.flatten(options1, stringArray0, false);\n}",
    "testName" : "test067"
  },
  "test078" : {
    "methodSignature" : "protected void burstToken(String token, boolean stopAtNonOption)",
    "methodName" : "burstToken",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    posixParser0.parse(options0, (String[]) null);\n    options0.addOption(\"\", \"\", false, \"\");\n    posixParser0.burstToken(\"E~@&ls2F-vJL\", true);\n}",
    "testName" : "test078"
  },
  "test089" : {
    "methodSignature" : "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)",
    "methodName" : "flatten",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    Options options1 = options0.addOption(\"W\", \"W\", true, \"W\");\n    String[] stringArray0 = new String[4];\n    stringArray0[0] = \"*','dA\";\n    stringArray0[1] = \"-W@L-Nr\";\n    stringArray0[2] = \"-W@L-Nr\";\n    stringArray0[3] = \"*','dA\";\n    String[] stringArray1 = posixParser0.flatten(options1, stringArray0, false);\n    String[] stringArray2 = posixParser0.flatten(options0, stringArray1, false);\n}",
    "testName" : "test089"
  },
  "test0911" : {
    "methodSignature" : "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)",
    "methodName" : "flatten",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0911() throws Throwable {\n    Options options0 = new Options();\n    PosixParser posixParser0 = new PosixParser();\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"-J\";\n    String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);\n}",
    "testName" : "test0911"
  }
}