{
  "test2324" : {
    "methodSignature" : "public int getId()",
    "methodName" : "getId",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2324() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Switch> linkedList0 = new LinkedList<Switch>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.setDefaultSwitch(propertyOption0, (Boolean) null);\n    propertyOption0.getId();\n}",
    "testName" : "test2324"
  },
  "test1010" : {
    "methodSignature" : "public void addSwitch(final Option option, final boolean value)",
    "methodName" : "addSwitch",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    LinkedList<Switch> linkedList0 = new LinkedList<Switch>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addSwitch(propertyOption0, false);\n    writeableCommandLineImpl0.addSwitch(propertyOption0, false);\n}",
    "testName" : "test1010"
  },
  "test2122" : {
    "methodSignature" : "public int getId()",
    "methodName" : "getId",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2122() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, (List) null);\n    writeableCommandLineImpl0.setDefaultValues(propertyOption0, (List) null);\n    propertyOption0.getId();\n}",
    "testName" : "test2122"
  },
  "test1111" : {
    "methodSignature" : "public final boolean hasOption(final String trigger)",
    "methodName" : "hasOption",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Switch> linkedList0 = new LinkedList<Switch>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    boolean boolean0 = writeableCommandLineImpl0.hasOption(\"-D\");\n}",
    "testName" : "test1111"
  },
  "test2223" : {
    "methodSignature" : "public int getId()",
    "methodName" : "getId",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2223() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Switch> linkedList0 = new LinkedList<Switch>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    Boolean boolean0 = Boolean.TRUE;\n    writeableCommandLineImpl0.setDefaultSwitch(propertyOption0, boolean0);\n    propertyOption0.getId();\n}",
    "testName" : "test2223"
  },
  "test000" : {
    "methodSignature" : "public String getProperty(final String property, final String defaultValue)",
    "methodName" : "getProperty",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Switch> linkedList0 = new LinkedList<Switch>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    String string0 = writeableCommandLineImpl0.getProperty(\"-D\", \"Passes properties and values to the application\");\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public void addProperty(final String property, final String value)",
    "methodName" : "addProperty",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    LinkedList<Switch> linkedList0 = new LinkedList<Switch>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addProperty(\"-D\", \"-D\");\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public final int getOptionCount(final Option option)",
    "methodName" : "getOptionCount",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    LinkedList<Switch> linkedList0 = new LinkedList<Switch>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    int int0 = writeableCommandLineImpl0.getOptionCount((Option) propertyOption0);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public final Object getValue(final String trigger)",
    "methodName" : "getValue",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    LinkedList<Switch> linkedList0 = new LinkedList<Switch>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    Object object0 = writeableCommandLineImpl0.getValue(\"Passes properties and values to the application\");\n}",
    "testName" : "test066"
  },
  "test077" : {
    "methodSignature" : "public final boolean hasOption(final String trigger)",
    "methodName" : "hasOption",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Switch> linkedList0 = new LinkedList<Switch>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addOption(propertyOption0);\n    boolean boolean0 = writeableCommandLineImpl0.hasOption(\"-D\");\n}",
    "testName" : "test077"
  },
  "test088" : {
    "methodSignature" : "public boolean isRequired()",
    "methodName" : "isRequired",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    LinkedList<Switch> linkedList0 = new LinkedList<Switch>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addValue(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addValue(propertyOption0, linkedList0);\n    propertyOption0.isRequired();\n}",
    "testName" : "test088"
  },
  "test099" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    LinkedList<Switch> linkedList0 = new LinkedList<Switch>();\n    DateValidator dateValidator0 = DateValidator.getDateInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"Passes properties and values to the application\", \"Passes properties and values to the application\", 1, 1, '#', '#', dateValidator0, \"-D\", linkedList0, 1);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);\n    writeableCommandLineImpl0.addValue(argumentImpl0, argumentImpl0);\n    argumentImpl0.getMaximum();\n}",
    "testName" : "test099"
  },
  "test1617" : {
    "methodSignature" : "public boolean looksLikeOption(final String trigger)",
    "methodName" : "looksLikeOption",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1617() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Switch> linkedList0 = new LinkedList<Switch>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    boolean boolean0 = writeableCommandLineImpl0.looksLikeOption(\"Passes properties and values to the application\");\n}",
    "testName" : "test1617"
  },
  "test1718" : {
    "methodSignature" : "public boolean looksLikeOption(final String trigger)",
    "methodName" : "looksLikeOption",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1718() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Switch> linkedList0 = new LinkedList<Switch>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    boolean boolean0 = writeableCommandLineImpl0.looksLikeOption(\"-D\");\n}",
    "testName" : "test1718"
  },
  "test1414" : {
    "methodSignature" : "public Boolean getSwitch(final Option option, final Boolean defaultValue)",
    "methodName" : "getSwitch",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption(\"?\", \"?\", (-30));\n    LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addSwitch(propertyOption0, true);\n    Boolean boolean0 = writeableCommandLineImpl0.getSwitch((Option) propertyOption0, (Boolean) null);\n}",
    "testName" : "test1414"
  },
  "test1920" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1920() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    linkedList0.add((Object) \"Passes properties and values to the application\");\n    linkedList0.addLast(\"Passes properties and values to the application\");\n    String string0 = writeableCommandLineImpl0.toString();\n}",
    "testName" : "test1920"
  },
  "test1516" : {
    "methodSignature" : "public final Boolean getSwitch(final String trigger)",
    "methodName" : "getSwitch",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1516() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Switch> linkedList0 = new LinkedList<Switch>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    Boolean boolean0 = writeableCommandLineImpl0.getSwitch(\"Passes properties and values to the application\");\n}",
    "testName" : "test1516"
  },
  "test1819" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1819() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    linkedList0.add((Object) \"-D\");\n    String string0 = writeableCommandLineImpl0.toString();\n}",
    "testName" : "test1819"
  },
  "test2021" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2021() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    LinkedList<Switch> linkedList0 = new LinkedList<Switch>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.setDefaultValues(propertyOption0, linkedList0);\n    propertyOption0.getDescription();\n}",
    "testName" : "test2021"
  }
}