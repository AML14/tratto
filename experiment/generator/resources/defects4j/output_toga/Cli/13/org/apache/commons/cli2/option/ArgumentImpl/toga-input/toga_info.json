{
  "test0641" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0641() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"Command.preferredName.too.short\", 247, 247, 'Y', '6', dateValidator0, \"\", (List) null, 91);\n    String string0 = argumentImpl0.getConsumeRemaining();\n}",
    "testName" : "test0641"
  },
  "test0642" : {
    "methodSignature" : "public char getInitialSeparator()",
    "methodName" : "getInitialSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0642() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"Command.preferredName.too.short\", 247, 247, 'Y', '6', dateValidator0, \"\", (List) null, 91);\n    String string0 = argumentImpl0.getConsumeRemaining();\n    argumentImpl0.getInitialSeparator();\n}",
    "testName" : "test0642"
  },
  "test0643" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0643() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"Command.preferredName.too.short\", 247, 247, 'Y', '6', dateValidator0, \"\", (List) null, 91);\n    String string0 = argumentImpl0.getConsumeRemaining();\n    argumentImpl0.getDescription();\n}",
    "testName" : "test0643"
  },
  "test26120" : {
    "methodSignature" : "public char getSubsequentSeparator()",
    "methodName" : "getSubsequentSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test26120() throws Throwable {\n    NumberValidator numberValidator0 = NumberValidator.getPercentInstance();\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"a!U<\\\"#|o*(7LY\", \"a!U<\\\"#|o*(7LY\", 0, 0, '5', '5', numberValidator0, \"\", linkedList0, 0);\n    boolean boolean0 = argumentImpl0.isRequired();\n    argumentImpl0.getSubsequentSeparator();\n}",
    "testName" : "test26120"
  },
  "test26122" : {
    "methodSignature" : "public boolean isRequired()",
    "methodName" : "isRequired",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test26122() throws Throwable {\n    NumberValidator numberValidator0 = NumberValidator.getPercentInstance();\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"a!U<\\\"#|o*(7LY\", \"a!U<\\\"#|o*(7LY\", 0, 0, '5', '5', numberValidator0, \"\", linkedList0, 0);\n    boolean boolean0 = argumentImpl0.isRequired();\n}",
    "testName" : "test26122"
  },
  "test26121" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test26121() throws Throwable {\n    NumberValidator numberValidator0 = NumberValidator.getPercentInstance();\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"a!U<\\\"#|o*(7LY\", \"a!U<\\\"#|o*(7LY\", 0, 0, '5', '5', numberValidator0, \"\", linkedList0, 0);\n    boolean boolean0 = argumentImpl0.isRequired();\n    argumentImpl0.getPreferredName();\n}",
    "testName" : "test26121"
  },
  "test0644" : {
    "methodSignature" : "public char getSubsequentSeparator()",
    "methodName" : "getSubsequentSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0644() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"Command.preferredName.too.short\", 247, 247, 'Y', '6', dateValidator0, \"\", (List) null, 91);\n    String string0 = argumentImpl0.getConsumeRemaining();\n    argumentImpl0.getSubsequentSeparator();\n}",
    "testName" : "test0644"
  },
  "test0645" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0645() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"Command.preferredName.too.short\", 247, 247, 'Y', '6', dateValidator0, \"\", (List) null, 91);\n    String string0 = argumentImpl0.getConsumeRemaining();\n    argumentImpl0.getPreferredName();\n}",
    "testName" : "test0645"
  },
  "test26117" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test26117() throws Throwable {\n    NumberValidator numberValidator0 = NumberValidator.getPercentInstance();\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"a!U<\\\"#|o*(7LY\", \"a!U<\\\"#|o*(7LY\", 0, 0, '5', '5', numberValidator0, \"\", linkedList0, 0);\n    boolean boolean0 = argumentImpl0.isRequired();\n    argumentImpl0.getConsumeRemaining();\n}",
    "testName" : "test26117"
  },
  "test26119" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test26119() throws Throwable {\n    NumberValidator numberValidator0 = NumberValidator.getPercentInstance();\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"a!U<\\\"#|o*(7LY\", \"a!U<\\\"#|o*(7LY\", 0, 0, '5', '5', numberValidator0, \"\", linkedList0, 0);\n    boolean boolean0 = argumentImpl0.isRequired();\n    argumentImpl0.getDescription();\n}",
    "testName" : "test26119"
  },
  "test26118" : {
    "methodSignature" : "public char getInitialSeparator()",
    "methodName" : "getInitialSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test26118() throws Throwable {\n    NumberValidator numberValidator0 = NumberValidator.getPercentInstance();\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"a!U<\\\"#|o*(7LY\", \"a!U<\\\"#|o*(7LY\", 0, 0, '5', '5', numberValidator0, \"\", linkedList0, 0);\n    boolean boolean0 = argumentImpl0.isRequired();\n    argumentImpl0.getInitialSeparator();\n}",
    "testName" : "test26118"
  },
  "test1053" : {
    "methodSignature" : "public ArgumentImpl(final String name, final String description, final int minimum, final int maximum, final char initialSeparator, final char subsequentSeparator, final Validator validator, final String consumeRemaining, final List valueDefaults, final int id)",
    "methodName" : "ArgumentImpl",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1053() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    linkedList0.add((Object) \"f{LO[+G`'|\");\n    ArgumentImpl argumentImpl0 = null;\n    argumentImpl0 = new ArgumentImpl((String) null, (String) null, 1405, 1405, '%', '>', fileValidator0, (String) null, linkedList0, 1405);\n}",
    "testName" : "test1053"
  },
  "test1465" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1465() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"org.apache.commons.cli2.validation.FileValidator\", \"Argument.too.few.defaults\", 5974, 5974, '3', '-', (Validator) null, \"Argument.too.few.defaults\", linkedList0, 0);\n    List list0 = argumentImpl0.getDefaultValues();\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, '_', '9', \"org.apache.commons.cli2.resource.ResourceHelper\", list0);\n    GroupImpl groupImpl0 = new GroupImpl(list0, \"w'(5:(qN@dI+t#\", \"--\", (-1303), 3);\n    Boolean boolean0 = Boolean.FALSE;\n    Switch switch0 = new Switch(\"org.apache.commons.cli2.validation.FileValidator\", \"Argument.too.few.defaults\", \"org.apache.commons.cli2.resource.ResourceHelper\", set0, \"\\b\", true, sourceDestArgument0, groupImpl0, 0, boolean0);\n    LinkedList<Object> linkedList1 = new LinkedList<Object>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(switch0, linkedList1);\n    LinkedList<String> linkedList2 = new LinkedList<String>();\n    linkedList2.add(\"org.apache.commons.cli2.validation.FileValidator\");\n    ListIterator<String> listIterator0 = linkedList2.listIterator();\n    sourceDestArgument0.process(writeableCommandLineImpl0, listIterator0);\n    argumentImpl0.getPreferredName();\n}",
    "testName" : "test1465"
  },
  "test1982" : {
    "methodSignature" : "public char getInitialSeparator()",
    "methodName" : "getInitialSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1982() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"F+UGzQGr]f3\", \"F+UGzQGr]f3\", 0, 0, 'j', 'i', fileValidator0, \"F+UGzQGr]f3\", linkedList0, 0);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, linkedList0);\n    sourceDestArgument0.validate((WriteableCommandLine) writeableCommandLineImpl0);\n    argumentImpl0.getInitialSeparator();\n}",
    "testName" : "test1982"
  },
  "test1466" : {
    "methodSignature" : "public char getSubsequentSeparator()",
    "methodName" : "getSubsequentSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1466() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"org.apache.commons.cli2.validation.FileValidator\", \"Argument.too.few.defaults\", 5974, 5974, '3', '-', (Validator) null, \"Argument.too.few.defaults\", linkedList0, 0);\n    List list0 = argumentImpl0.getDefaultValues();\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, '_', '9', \"org.apache.commons.cli2.resource.ResourceHelper\", list0);\n    GroupImpl groupImpl0 = new GroupImpl(list0, \"w'(5:(qN@dI+t#\", \"--\", (-1303), 3);\n    Boolean boolean0 = Boolean.FALSE;\n    Switch switch0 = new Switch(\"org.apache.commons.cli2.validation.FileValidator\", \"Argument.too.few.defaults\", \"org.apache.commons.cli2.resource.ResourceHelper\", set0, \"\\b\", true, sourceDestArgument0, groupImpl0, 0, boolean0);\n    LinkedList<Object> linkedList1 = new LinkedList<Object>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(switch0, linkedList1);\n    LinkedList<String> linkedList2 = new LinkedList<String>();\n    linkedList2.add(\"org.apache.commons.cli2.validation.FileValidator\");\n    ListIterator<String> listIterator0 = linkedList2.listIterator();\n    sourceDestArgument0.process(writeableCommandLineImpl0, listIterator0);\n    sourceDestArgument0.getSubsequentSeparator();\n}",
    "testName" : "test1466"
  },
  "test1983" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1983() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"F+UGzQGr]f3\", \"F+UGzQGr]f3\", 0, 0, 'j', 'i', fileValidator0, \"F+UGzQGr]f3\", linkedList0, 0);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, linkedList0);\n    sourceDestArgument0.validate((WriteableCommandLine) writeableCommandLineImpl0);\n    sourceDestArgument0.getConsumeRemaining();\n}",
    "testName" : "test1983"
  },
  "test1984" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1984() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"F+UGzQGr]f3\", \"F+UGzQGr]f3\", 0, 0, 'j', 'i', fileValidator0, \"F+UGzQGr]f3\", linkedList0, 0);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, linkedList0);\n    sourceDestArgument0.validate((WriteableCommandLine) writeableCommandLineImpl0);\n    sourceDestArgument0.getPreferredName();\n}",
    "testName" : "test1984"
  },
  "test1468" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1468() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"org.apache.commons.cli2.validation.FileValidator\", \"Argument.too.few.defaults\", 5974, 5974, '3', '-', (Validator) null, \"Argument.too.few.defaults\", linkedList0, 0);\n    List list0 = argumentImpl0.getDefaultValues();\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, '_', '9', \"org.apache.commons.cli2.resource.ResourceHelper\", list0);\n    GroupImpl groupImpl0 = new GroupImpl(list0, \"w'(5:(qN@dI+t#\", \"--\", (-1303), 3);\n    Boolean boolean0 = Boolean.FALSE;\n    Switch switch0 = new Switch(\"org.apache.commons.cli2.validation.FileValidator\", \"Argument.too.few.defaults\", \"org.apache.commons.cli2.resource.ResourceHelper\", set0, \"\\b\", true, sourceDestArgument0, groupImpl0, 0, boolean0);\n    LinkedList<Object> linkedList1 = new LinkedList<Object>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(switch0, linkedList1);\n    LinkedList<String> linkedList2 = new LinkedList<String>();\n    linkedList2.add(\"org.apache.commons.cli2.validation.FileValidator\");\n    ListIterator<String> listIterator0 = linkedList2.listIterator();\n    sourceDestArgument0.process(writeableCommandLineImpl0, listIterator0);\n    argumentImpl0.getDescription();\n}",
    "testName" : "test1468"
  },
  "test1985" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1985() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"F+UGzQGr]f3\", \"F+UGzQGr]f3\", 0, 0, 'j', 'i', fileValidator0, \"F+UGzQGr]f3\", linkedList0, 0);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, linkedList0);\n    sourceDestArgument0.validate((WriteableCommandLine) writeableCommandLineImpl0);\n    argumentImpl0.getConsumeRemaining();\n}",
    "testName" : "test1985"
  },
  "test1981" : {
    "methodSignature" : "public char getSubsequentSeparator()",
    "methodName" : "getSubsequentSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1981() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"F+UGzQGr]f3\", \"F+UGzQGr]f3\", 0, 0, 'j', 'i', fileValidator0, \"F+UGzQGr]f3\", linkedList0, 0);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, linkedList0);\n    sourceDestArgument0.validate((WriteableCommandLine) writeableCommandLineImpl0);\n    argumentImpl0.getSubsequentSeparator();\n}",
    "testName" : "test1981"
  },
  "test1469" : {
    "methodSignature" : "public char getInitialSeparator()",
    "methodName" : "getInitialSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1469() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"org.apache.commons.cli2.validation.FileValidator\", \"Argument.too.few.defaults\", 5974, 5974, '3', '-', (Validator) null, \"Argument.too.few.defaults\", linkedList0, 0);\n    List list0 = argumentImpl0.getDefaultValues();\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, '_', '9', \"org.apache.commons.cli2.resource.ResourceHelper\", list0);\n    GroupImpl groupImpl0 = new GroupImpl(list0, \"w'(5:(qN@dI+t#\", \"--\", (-1303), 3);\n    Boolean boolean0 = Boolean.FALSE;\n    Switch switch0 = new Switch(\"org.apache.commons.cli2.validation.FileValidator\", \"Argument.too.few.defaults\", \"org.apache.commons.cli2.resource.ResourceHelper\", set0, \"\\b\", true, sourceDestArgument0, groupImpl0, 0, boolean0);\n    LinkedList<Object> linkedList1 = new LinkedList<Object>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(switch0, linkedList1);\n    LinkedList<String> linkedList2 = new LinkedList<String>();\n    linkedList2.add(\"org.apache.commons.cli2.validation.FileValidator\");\n    ListIterator<String> listIterator0 = linkedList2.listIterator();\n    sourceDestArgument0.process(writeableCommandLineImpl0, listIterator0);\n    sourceDestArgument0.getInitialSeparator();\n}",
    "testName" : "test1469"
  },
  "test1986" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1986() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"F+UGzQGr]f3\", \"F+UGzQGr]f3\", 0, 0, 'j', 'i', fileValidator0, \"F+UGzQGr]f3\", linkedList0, 0);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, linkedList0);\n    sourceDestArgument0.validate((WriteableCommandLine) writeableCommandLineImpl0);\n    argumentImpl0.getDescription();\n}",
    "testName" : "test1986"
  },
  "test24104" : {
    "methodSignature" : "public char getInitialSeparator()",
    "methodName" : "getInitialSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test24104() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"org.apache.commons.cli2.validation.FileValidator\", \"org.apache.commons.cli2.validation.FileValidator\", 5941, 5941, '9', '#', (Validator) null, \"$GMuQluqoa[9\", linkedList0, 5941);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    String string0 = sourceDestArgument0.stripBoundaryQuotes(\"\\\"a\\\"\");\n    argumentImpl0.getInitialSeparator();\n}",
    "testName" : "test24104"
  },
  "test24105" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test24105() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"org.apache.commons.cli2.validation.FileValidator\", \"org.apache.commons.cli2.validation.FileValidator\", 5941, 5941, '9', '#', (Validator) null, \"$GMuQluqoa[9\", linkedList0, 5941);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    String string0 = sourceDestArgument0.stripBoundaryQuotes(\"\\\"a\\\"\");\n    argumentImpl0.getConsumeRemaining();\n}",
    "testName" : "test24105"
  },
  "test24106" : {
    "methodSignature" : "public String stripBoundaryQuotes(String token)",
    "methodName" : "stripBoundaryQuotes",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test24106() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"org.apache.commons.cli2.validation.FileValidator\", \"org.apache.commons.cli2.validation.FileValidator\", 5941, 5941, '9', '#', (Validator) null, \"$GMuQluqoa[9\", linkedList0, 5941);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    String string0 = sourceDestArgument0.stripBoundaryQuotes(\"\\\"a\\\"\");\n}",
    "testName" : "test24106"
  },
  "test24107" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test24107() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"org.apache.commons.cli2.validation.FileValidator\", \"org.apache.commons.cli2.validation.FileValidator\", 5941, 5941, '9', '#', (Validator) null, \"$GMuQluqoa[9\", linkedList0, 5941);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    String string0 = sourceDestArgument0.stripBoundaryQuotes(\"\\\"a\\\"\");\n    sourceDestArgument0.getPreferredName();\n}",
    "testName" : "test24107"
  },
  "test24108" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test24108() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"org.apache.commons.cli2.validation.FileValidator\", \"org.apache.commons.cli2.validation.FileValidator\", 5941, 5941, '9', '#', (Validator) null, \"$GMuQluqoa[9\", linkedList0, 5941);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    String string0 = sourceDestArgument0.stripBoundaryQuotes(\"\\\"a\\\"\");\n    argumentImpl0.getDescription();\n}",
    "testName" : "test24108"
  },
  "test24109" : {
    "methodSignature" : "public char getSubsequentSeparator()",
    "methodName" : "getSubsequentSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test24109() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"org.apache.commons.cli2.validation.FileValidator\", \"org.apache.commons.cli2.validation.FileValidator\", 5941, 5941, '9', '#', (Validator) null, \"$GMuQluqoa[9\", linkedList0, 5941);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    String string0 = sourceDestArgument0.stripBoundaryQuotes(\"\\\"a\\\"\");\n    argumentImpl0.getSubsequentSeparator();\n}",
    "testName" : "test24109"
  },
  "test0540" : {
    "methodSignature" : "public void validate(final WriteableCommandLine commandLine) throws OptionException",
    "methodName" : "validate",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0540() throws Throwable {\n    LinkedList<String> linkedList0 = new LinkedList<String>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"VO;h9!Ubi*B\", \"DISPLAY_GROUP_EXPANDED\", (-1442), (-1442), 'N', '(', (Validator) null, \"UB\", linkedList0, (-1442));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);\n    argumentImpl0.validate((WriteableCommandLine) writeableCommandLineImpl0);\n}",
    "testName" : "test0540"
  },
  "test1876" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1876() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"%&C<hpXS-e/ExQLDe0=\", \"%&C<hpXS-e/ExQLDe0=\", 0, 0, 'E', 'E', (Validator) null, \"%&C<hpXS-e/ExQLDe0=\", list0, 93);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, list0);\n    argumentImpl0.validate((WriteableCommandLine) writeableCommandLineImpl0);\n    argumentImpl0.getPreferredName();\n}",
    "testName" : "test1876"
  },
  "test1877" : {
    "methodSignature" : "public char getInitialSeparator()",
    "methodName" : "getInitialSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1877() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"%&C<hpXS-e/ExQLDe0=\", \"%&C<hpXS-e/ExQLDe0=\", 0, 0, 'E', 'E', (Validator) null, \"%&C<hpXS-e/ExQLDe0=\", list0, 93);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, list0);\n    argumentImpl0.validate((WriteableCommandLine) writeableCommandLineImpl0);\n    argumentImpl0.getInitialSeparator();\n}",
    "testName" : "test1877"
  },
  "test1878" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1878() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"%&C<hpXS-e/ExQLDe0=\", \"%&C<hpXS-e/ExQLDe0=\", 0, 0, 'E', 'E', (Validator) null, \"%&C<hpXS-e/ExQLDe0=\", list0, 93);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, list0);\n    argumentImpl0.validate((WriteableCommandLine) writeableCommandLineImpl0);\n    argumentImpl0.getConsumeRemaining();\n}",
    "testName" : "test1878"
  },
  "test1879" : {
    "methodSignature" : "public char getSubsequentSeparator()",
    "methodName" : "getSubsequentSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1879() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"%&C<hpXS-e/ExQLDe0=\", \"%&C<hpXS-e/ExQLDe0=\", 0, 0, 'E', 'E', (Validator) null, \"%&C<hpXS-e/ExQLDe0=\", list0, 93);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, list0);\n    argumentImpl0.validate((WriteableCommandLine) writeableCommandLineImpl0);\n    argumentImpl0.getSubsequentSeparator();\n}",
    "testName" : "test1879"
  },
  "test22100" : {
    "methodSignature" : "public char getInitialSeparator()",
    "methodName" : "getInitialSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22100() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"org.apache.commons.cli2.validation.FileValidator\", \"org.apache.commons.cli2.validation.FileValidator\", '3', 5974, '3', '9', (Validator) null, \"org.apache.commons.cli2.validation.FileValidator\", linkedList0, '3');\n    argumentImpl0.toString();\n    argumentImpl0.getInitialSeparator();\n}",
    "testName" : "test22100"
  },
  "test006" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test006() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"orj.apache.commons.cli2.va,idation.FileValidator\", \"orj.apache.commons.cli2.va,idation.FileValidator\", 2, 2, '3', '3', (Validator) null, \"orj.apache.commons.cli2.va,idation.FileValidator\", linkedList0, 2);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);\n    argumentImpl0.defaults(writeableCommandLineImpl0);\n    argumentImpl0.getMaximum();\n}",
    "testName" : "test006"
  },
  "test004" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test004() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"orj.apache.commons.cli2.va,idation.FileValidator\", \"orj.apache.commons.cli2.va,idation.FileValidator\", 2, 2, '3', '3', (Validator) null, \"orj.apache.commons.cli2.va,idation.FileValidator\", linkedList0, 2);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);\n    argumentImpl0.defaults(writeableCommandLineImpl0);\n    argumentImpl0.getPreferredName();\n}",
    "testName" : "test004"
  },
  "test005" : {
    "methodSignature" : "public char getInitialSeparator()",
    "methodName" : "getInitialSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test005() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"orj.apache.commons.cli2.va,idation.FileValidator\", \"orj.apache.commons.cli2.va,idation.FileValidator\", 2, 2, '3', '3', (Validator) null, \"orj.apache.commons.cli2.va,idation.FileValidator\", linkedList0, 2);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);\n    argumentImpl0.defaults(writeableCommandLineImpl0);\n    argumentImpl0.getInitialSeparator();\n}",
    "testName" : "test005"
  },
  "test002" : {
    "methodSignature" : "public char getSubsequentSeparator()",
    "methodName" : "getSubsequentSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test002() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"orj.apache.commons.cli2.va,idation.FileValidator\", \"orj.apache.commons.cli2.va,idation.FileValidator\", 2, 2, '3', '3', (Validator) null, \"orj.apache.commons.cli2.va,idation.FileValidator\", linkedList0, 2);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);\n    argumentImpl0.defaults(writeableCommandLineImpl0);\n    argumentImpl0.getSubsequentSeparator();\n}",
    "testName" : "test002"
  },
  "test003" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test003() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"orj.apache.commons.cli2.va,idation.FileValidator\", \"orj.apache.commons.cli2.va,idation.FileValidator\", 2, 2, '3', '3', (Validator) null, \"orj.apache.commons.cli2.va,idation.FileValidator\", linkedList0, 2);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);\n    argumentImpl0.defaults(writeableCommandLineImpl0);\n    argumentImpl0.getMinimum();\n}",
    "testName" : "test003"
  },
  "test1470" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1470() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"org.apache.commons.cli2.validation.FileValidator\", \"Argument.too.few.defaults\", 5974, 5974, '3', '-', (Validator) null, \"Argument.too.few.defaults\", linkedList0, 0);\n    List list0 = argumentImpl0.getDefaultValues();\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, '_', '9', \"org.apache.commons.cli2.resource.ResourceHelper\", list0);\n    GroupImpl groupImpl0 = new GroupImpl(list0, \"w'(5:(qN@dI+t#\", \"--\", (-1303), 3);\n    Boolean boolean0 = Boolean.FALSE;\n    Switch switch0 = new Switch(\"org.apache.commons.cli2.validation.FileValidator\", \"Argument.too.few.defaults\", \"org.apache.commons.cli2.resource.ResourceHelper\", set0, \"\\b\", true, sourceDestArgument0, groupImpl0, 0, boolean0);\n    LinkedList<Object> linkedList1 = new LinkedList<Object>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(switch0, linkedList1);\n    LinkedList<String> linkedList2 = new LinkedList<String>();\n    linkedList2.add(\"org.apache.commons.cli2.validation.FileValidator\");\n    ListIterator<String> listIterator0 = linkedList2.listIterator();\n    sourceDestArgument0.process(writeableCommandLineImpl0, listIterator0);\n    sourceDestArgument0.getPreferredName();\n}",
    "testName" : "test1470"
  },
  "test1471" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1471() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"org.apache.commons.cli2.validation.FileValidator\", \"Argument.too.few.defaults\", 5974, 5974, '3', '-', (Validator) null, \"Argument.too.few.defaults\", linkedList0, 0);\n    List list0 = argumentImpl0.getDefaultValues();\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, '_', '9', \"org.apache.commons.cli2.resource.ResourceHelper\", list0);\n    GroupImpl groupImpl0 = new GroupImpl(list0, \"w'(5:(qN@dI+t#\", \"--\", (-1303), 3);\n    Boolean boolean0 = Boolean.FALSE;\n    Switch switch0 = new Switch(\"org.apache.commons.cli2.validation.FileValidator\", \"Argument.too.few.defaults\", \"org.apache.commons.cli2.resource.ResourceHelper\", set0, \"\\b\", true, sourceDestArgument0, groupImpl0, 0, boolean0);\n    LinkedList<Object> linkedList1 = new LinkedList<Object>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(switch0, linkedList1);\n    LinkedList<String> linkedList2 = new LinkedList<String>();\n    linkedList2.add(\"org.apache.commons.cli2.validation.FileValidator\");\n    ListIterator<String> listIterator0 = linkedList2.listIterator();\n    sourceDestArgument0.process(writeableCommandLineImpl0, listIterator0);\n    sourceDestArgument0.getConsumeRemaining();\n}",
    "testName" : "test1471"
  },
  "test0434" : {
    "methodSignature" : "public char getSubsequentSeparator()",
    "methodName" : "getSubsequentSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0434() throws Throwable {\n    NumberValidator numberValidator0 = NumberValidator.getPercentInstance();\n    LinkedList<DisplaySetting> linkedList0 = new LinkedList<DisplaySetting>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"-\", \"-\", (-1145), (-1145), 'Z', 'Q', numberValidator0, \"-\", linkedList0, 'Z');\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    sourceDestArgument0.helpLines((-1145), linkedHashSet0, (Comparator) null);\n    argumentImpl0.getSubsequentSeparator();\n}",
    "testName" : "test0434"
  },
  "test2298" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2298() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"org.apache.commons.cli2.validation.FileValidator\", \"org.apache.commons.cli2.validation.FileValidator\", '3', 5974, '3', '9', (Validator) null, \"org.apache.commons.cli2.validation.FileValidator\", linkedList0, '3');\n    argumentImpl0.toString();\n    argumentImpl0.getConsumeRemaining();\n}",
    "testName" : "test2298"
  },
  "test1880" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1880() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"%&C<hpXS-e/ExQLDe0=\", \"%&C<hpXS-e/ExQLDe0=\", 0, 0, 'E', 'E', (Validator) null, \"%&C<hpXS-e/ExQLDe0=\", list0, 93);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, list0);\n    argumentImpl0.validate((WriteableCommandLine) writeableCommandLineImpl0);\n    argumentImpl0.getDescription();\n}",
    "testName" : "test1880"
  },
  "test2299" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2299() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"org.apache.commons.cli2.validation.FileValidator\", \"org.apache.commons.cli2.validation.FileValidator\", '3', 5974, '3', '9', (Validator) null, \"org.apache.commons.cli2.validation.FileValidator\", linkedList0, '3');\n    argumentImpl0.toString();\n    argumentImpl0.getPreferredName();\n}",
    "testName" : "test2299"
  },
  "test000" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"orj.apache.commons.cli2.va,idation.FileValidator\", \"orj.apache.commons.cli2.va,idation.FileValidator\", 2, 2, '3', '3', (Validator) null, \"orj.apache.commons.cli2.va,idation.FileValidator\", linkedList0, 2);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);\n    argumentImpl0.defaults(writeableCommandLineImpl0);\n    argumentImpl0.getDescription();\n}",
    "testName" : "test000"
  },
  "test0439" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0439() throws Throwable {\n    NumberValidator numberValidator0 = NumberValidator.getPercentInstance();\n    LinkedList<DisplaySetting> linkedList0 = new LinkedList<DisplaySetting>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"-\", \"-\", (-1145), (-1145), 'Z', 'Q', numberValidator0, \"-\", linkedList0, 'Z');\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    sourceDestArgument0.helpLines((-1145), linkedHashSet0, (Comparator) null);\n    argumentImpl0.getDescription();\n}",
    "testName" : "test0439"
  },
  "test001" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test001() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"orj.apache.commons.cli2.va,idation.FileValidator\", \"orj.apache.commons.cli2.va,idation.FileValidator\", 2, 2, '3', '3', (Validator) null, \"orj.apache.commons.cli2.va,idation.FileValidator\", linkedList0, 2);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);\n    argumentImpl0.defaults(writeableCommandLineImpl0);\n    argumentImpl0.getConsumeRemaining();\n}",
    "testName" : "test001"
  },
  "test27123" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27123() throws Throwable {\n    NumberValidator numberValidator0 = NumberValidator.getPercentInstance();\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\\\"}O\", \"\", 19, 19, 'P', 'b', numberValidator0, \"\", linkedList0, 19);\n    boolean boolean0 = argumentImpl0.isRequired();\n    argumentImpl0.getConsumeRemaining();\n}",
    "testName" : "test27123"
  },
  "test0435" : {
    "methodSignature" : "public char getInitialSeparator()",
    "methodName" : "getInitialSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0435() throws Throwable {\n    NumberValidator numberValidator0 = NumberValidator.getPercentInstance();\n    LinkedList<DisplaySetting> linkedList0 = new LinkedList<DisplaySetting>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"-\", \"-\", (-1145), (-1145), 'Z', 'Q', numberValidator0, \"-\", linkedList0, 'Z');\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    sourceDestArgument0.helpLines((-1145), linkedHashSet0, (Comparator) null);\n    argumentImpl0.getInitialSeparator();\n}",
    "testName" : "test0435"
  },
  "test0952" : {
    "methodSignature" : "public SourceDestArgument(final Argument source, final Argument dest, final char initialSeparator, final char subsequentSeparator, final String consumeRemaining, final List defaultValues)",
    "methodName" : "SourceDestArgument",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0952() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"arg\", \"arg\", (-2449), (-1), 's', 'e', dateValidator0, \"DateValidator.date.OutOfRange\", linkedList0, (-2449));\n    Object object0 = new Object();\n    linkedList0.addFirst(object0);\n    SourceDestArgument sourceDestArgument0 = null;\n    sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, 'e', 's', \"--\", linkedList0);\n}",
    "testName" : "test0952"
  },
  "test27126" : {
    "methodSignature" : "public char getInitialSeparator()",
    "methodName" : "getInitialSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27126() throws Throwable {\n    NumberValidator numberValidator0 = NumberValidator.getPercentInstance();\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\\\"}O\", \"\", 19, 19, 'P', 'b', numberValidator0, \"\", linkedList0, 19);\n    boolean boolean0 = argumentImpl0.isRequired();\n    argumentImpl0.getInitialSeparator();\n}",
    "testName" : "test27126"
  },
  "test0436" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0436() throws Throwable {\n    NumberValidator numberValidator0 = NumberValidator.getPercentInstance();\n    LinkedList<DisplaySetting> linkedList0 = new LinkedList<DisplaySetting>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"-\", \"-\", (-1145), (-1145), 'Z', 'Q', numberValidator0, \"-\", linkedList0, 'Z');\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    sourceDestArgument0.helpLines((-1145), linkedHashSet0, (Comparator) null);\n    sourceDestArgument0.getConsumeRemaining();\n}",
    "testName" : "test0436"
  },
  "test27127" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27127() throws Throwable {\n    NumberValidator numberValidator0 = NumberValidator.getPercentInstance();\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\\\"}O\", \"\", 19, 19, 'P', 'b', numberValidator0, \"\", linkedList0, 19);\n    boolean boolean0 = argumentImpl0.isRequired();\n    argumentImpl0.getPreferredName();\n}",
    "testName" : "test27127"
  },
  "test0437" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0437() throws Throwable {\n    NumberValidator numberValidator0 = NumberValidator.getPercentInstance();\n    LinkedList<DisplaySetting> linkedList0 = new LinkedList<DisplaySetting>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"-\", \"-\", (-1145), (-1145), 'Z', 'Q', numberValidator0, \"-\", linkedList0, 'Z');\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    sourceDestArgument0.helpLines((-1145), linkedHashSet0, (Comparator) null);\n    argumentImpl0.getConsumeRemaining();\n}",
    "testName" : "test0437"
  },
  "test27124" : {
    "methodSignature" : "public char getSubsequentSeparator()",
    "methodName" : "getSubsequentSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27124() throws Throwable {\n    NumberValidator numberValidator0 = NumberValidator.getPercentInstance();\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\\\"}O\", \"\", 19, 19, 'P', 'b', numberValidator0, \"\", linkedList0, 19);\n    boolean boolean0 = argumentImpl0.isRequired();\n    argumentImpl0.getSubsequentSeparator();\n}",
    "testName" : "test27124"
  },
  "test0438" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0438() throws Throwable {\n    NumberValidator numberValidator0 = NumberValidator.getPercentInstance();\n    LinkedList<DisplaySetting> linkedList0 = new LinkedList<DisplaySetting>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"-\", \"-\", (-1145), (-1145), 'Z', 'Q', numberValidator0, \"-\", linkedList0, 'Z');\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    sourceDestArgument0.helpLines((-1145), linkedHashSet0, (Comparator) null);\n    sourceDestArgument0.getPreferredName();\n}",
    "testName" : "test0438"
  },
  "test22101" : {
    "methodSignature" : "public char getSubsequentSeparator()",
    "methodName" : "getSubsequentSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22101() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"org.apache.commons.cli2.validation.FileValidator\", \"org.apache.commons.cli2.validation.FileValidator\", '3', 5974, '3', '9', (Validator) null, \"org.apache.commons.cli2.validation.FileValidator\", linkedList0, '3');\n    argumentImpl0.toString();\n    argumentImpl0.getSubsequentSeparator();\n}",
    "testName" : "test22101"
  },
  "test27125" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27125() throws Throwable {\n    NumberValidator numberValidator0 = NumberValidator.getPercentInstance();\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\\\"}O\", \"\", 19, 19, 'P', 'b', numberValidator0, \"\", linkedList0, 19);\n    boolean boolean0 = argumentImpl0.isRequired();\n    argumentImpl0.getDescription();\n}",
    "testName" : "test27125"
  },
  "test1775" : {
    "methodSignature" : "public void validate(final WriteableCommandLine commandLine, final Option option) throws OptionException",
    "methodName" : "validate",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1775() throws Throwable {\n    LinkedList<String> linkedList0 = new LinkedList<String>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"]J}30hW3fB5Mo2>}jzY\", 1038, 1038, 'w', 'w', (Validator) null, \"]J}30hW3fB5Mo2>}jzY\", linkedList0, 1038);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, '8', '\\u0000', \"\", linkedList0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, linkedList0);\n    argumentImpl0.validate((WriteableCommandLine) writeableCommandLineImpl0, (Option) sourceDestArgument0);\n}",
    "testName" : "test1775"
  },
  "test0329" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0329() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"Command.preferredName.too.short\", 247, 247, 'Y', '6', dateValidator0, \"\", (List) null, 91);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, 'Y', '\\u0000', \"-\", (List) null);\n    char char0 = sourceDestArgument0.getSubsequentSeparator();\n    sourceDestArgument0.getConsumeRemaining();\n}",
    "testName" : "test0329"
  },
  "test25110" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test25110() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"F+UGzGr]f3\", \"F+UGzGr]f3\", 0, 0, 'j', 'i', fileValidator0, \"F+UGzGr]f3\", linkedList0, 0);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    String string0 = sourceDestArgument0.stripBoundaryQuotes(\"\\\"}O\");\n    argumentImpl0.getConsumeRemaining();\n}",
    "testName" : "test25110"
  },
  "test0325" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0325() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"Command.preferredName.too.short\", 247, 247, 'Y', '6', dateValidator0, \"\", (List) null, 91);\n    argumentImpl0.getMinimum();\n}",
    "testName" : "test0325"
  },
  "test25112" : {
    "methodSignature" : "public String stripBoundaryQuotes(String token)",
    "methodName" : "stripBoundaryQuotes",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test25112() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"F+UGzGr]f3\", \"F+UGzGr]f3\", 0, 0, 'j', 'i', fileValidator0, \"F+UGzGr]f3\", linkedList0, 0);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    String string0 = sourceDestArgument0.stripBoundaryQuotes(\"\\\"}O\");\n}",
    "testName" : "test25112"
  },
  "test0326" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0326() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"Command.preferredName.too.short\", 247, 247, 'Y', '6', dateValidator0, \"\", (List) null, 91);\n    argumentImpl0.getMaximum();\n}",
    "testName" : "test0326"
  },
  "test25111" : {
    "methodSignature" : "public char getSubsequentSeparator()",
    "methodName" : "getSubsequentSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test25111() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"F+UGzGr]f3\", \"F+UGzGr]f3\", 0, 0, 'j', 'i', fileValidator0, \"F+UGzGr]f3\", linkedList0, 0);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    String string0 = sourceDestArgument0.stripBoundaryQuotes(\"\\\"}O\");\n    argumentImpl0.getSubsequentSeparator();\n}",
    "testName" : "test25111"
  },
  "test0327" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0327() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"Command.preferredName.too.short\", 247, 247, 'Y', '6', dateValidator0, \"\", (List) null, 91);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, 'Y', '\\u0000', \"-\", (List) null);\n    char char0 = sourceDestArgument0.getSubsequentSeparator();\n    argumentImpl0.getDescription();\n}",
    "testName" : "test0327"
  },
  "test25114" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test25114() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"F+UGzGr]f3\", \"F+UGzGr]f3\", 0, 0, 'j', 'i', fileValidator0, \"F+UGzGr]f3\", linkedList0, 0);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    String string0 = sourceDestArgument0.stripBoundaryQuotes(\"\\\"}O\");\n    sourceDestArgument0.getConsumeRemaining();\n}",
    "testName" : "test25114"
  },
  "test0328" : {
    "methodSignature" : "public char getInitialSeparator()",
    "methodName" : "getInitialSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0328() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"Command.preferredName.too.short\", 247, 247, 'Y', '6', dateValidator0, \"\", (List) null, 91);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, 'Y', '\\u0000', \"-\", (List) null);\n    char char0 = sourceDestArgument0.getSubsequentSeparator();\n    sourceDestArgument0.getInitialSeparator();\n}",
    "testName" : "test0328"
  },
  "test25113" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test25113() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"F+UGzGr]f3\", \"F+UGzGr]f3\", 0, 0, 'j', 'i', fileValidator0, \"F+UGzGr]f3\", linkedList0, 0);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    String string0 = sourceDestArgument0.stripBoundaryQuotes(\"\\\"}O\");\n    argumentImpl0.getDescription();\n}",
    "testName" : "test25113"
  },
  "test27128" : {
    "methodSignature" : "public boolean isRequired()",
    "methodName" : "isRequired",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27128() throws Throwable {\n    NumberValidator numberValidator0 = NumberValidator.getPercentInstance();\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\\\"}O\", \"\", 19, 19, 'P', 'b', numberValidator0, \"\", linkedList0, 19);\n    boolean boolean0 = argumentImpl0.isRequired();\n}",
    "testName" : "test27128"
  },
  "test0332" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0332() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"Command.preferredName.too.short\", 247, 247, 'Y', '6', dateValidator0, \"\", (List) null, 91);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, 'Y', '\\u0000', \"-\", (List) null);\n    char char0 = sourceDestArgument0.getSubsequentSeparator();\n    argumentImpl0.getPreferredName();\n}",
    "testName" : "test0332"
  },
  "test0333" : {
    "methodSignature" : "public char getSubsequentSeparator()",
    "methodName" : "getSubsequentSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0333() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"Command.preferredName.too.short\", 247, 247, 'Y', '6', dateValidator0, \"\", (List) null, 91);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, 'Y', '\\u0000', \"-\", (List) null);\n    char char0 = sourceDestArgument0.getSubsequentSeparator();\n}",
    "testName" : "test0333"
  },
  "test0851" : {
    "methodSignature" : "public ArgumentImpl(final String name, final String description, final int minimum, final int maximum, final char initialSeparator, final char subsequentSeparator, final Validator validator, final String consumeRemaining, final List valueDefaults, final int id)",
    "methodName" : "ArgumentImpl",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0851() throws Throwable {\n    NumberFormat numberFormat0 = NumberFormat.getNumberInstance();\n    NumberValidator numberValidator0 = new NumberValidator(numberFormat0);\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    ArgumentImpl argumentImpl0 = null;\n    argumentImpl0 = new ArgumentImpl(\"\\\"d^(k#\", \"\\\"d^(k#\", 0, (-2219), 'Z', 'Z', numberValidator0, \"Vh=\", linkedList0, 0);\n}",
    "testName" : "test0851"
  },
  "test0214" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0214() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"+\", \"org.apache.commons.cli2.validation.UrlValidator\", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, \"org.apache.commons.cli2.validation.UrlValidator\", (List) null, Integer.MAX_VALUE);\n    argumentImpl0.getMinimum();\n}",
    "testName" : "test0214"
  },
  "test0330" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0330() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"Command.preferredName.too.short\", 247, 247, 'Y', '6', dateValidator0, \"\", (List) null, 91);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, 'Y', '\\u0000', \"-\", (List) null);\n    char char0 = sourceDestArgument0.getSubsequentSeparator();\n    argumentImpl0.getConsumeRemaining();\n}",
    "testName" : "test0330"
  },
  "test0331" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0331() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"Command.preferredName.too.short\", 247, 247, 'Y', '6', dateValidator0, \"\", (List) null, 91);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, 'Y', '\\u0000', \"-\", (List) null);\n    char char0 = sourceDestArgument0.getSubsequentSeparator();\n    sourceDestArgument0.getPreferredName();\n}",
    "testName" : "test0331"
  },
  "test0219" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0219() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"+\", \"org.apache.commons.cli2.validation.UrlValidator\", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, \"org.apache.commons.cli2.validation.UrlValidator\", (List) null, Integer.MAX_VALUE);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, (List) null);\n    boolean boolean0 = sourceDestArgument0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"@'r--d,B;\");\n    argumentImpl0.getConsumeRemaining();\n}",
    "testName" : "test0219"
  },
  "test0215" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0215() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"+\", \"org.apache.commons.cli2.validation.UrlValidator\", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, \"org.apache.commons.cli2.validation.UrlValidator\", (List) null, Integer.MAX_VALUE);\n    argumentImpl0.getMaximum();\n}",
    "testName" : "test0215"
  },
  "test0216" : {
    "methodSignature" : "public char getSubsequentSeparator()",
    "methodName" : "getSubsequentSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0216() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"+\", \"org.apache.commons.cli2.validation.UrlValidator\", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, \"org.apache.commons.cli2.validation.UrlValidator\", (List) null, Integer.MAX_VALUE);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, (List) null);\n    boolean boolean0 = sourceDestArgument0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"@'r--d,B;\");\n    argumentImpl0.getSubsequentSeparator();\n}",
    "testName" : "test0216"
  },
  "test0217" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0217() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"+\", \"org.apache.commons.cli2.validation.UrlValidator\", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, \"org.apache.commons.cli2.validation.UrlValidator\", (List) null, Integer.MAX_VALUE);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, (List) null);\n    boolean boolean0 = sourceDestArgument0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"@'r--d,B;\");\n    argumentImpl0.getPreferredName();\n}",
    "testName" : "test0217"
  },
  "test0218" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0218() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"+\", \"org.apache.commons.cli2.validation.UrlValidator\", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, \"org.apache.commons.cli2.validation.UrlValidator\", (List) null, Integer.MAX_VALUE);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, (List) null);\n    boolean boolean0 = sourceDestArgument0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"@'r--d,B;\");\n    argumentImpl0.getDescription();\n}",
    "testName" : "test0218"
  },
  "test019" : {
    "methodSignature" : "public char getInitialSeparator()",
    "methodName" : "getInitialSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test019() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"\", 0, 0, 'A', ';', dateValidator0, \"\", (List) null, (-3157));\n    char char0 = argumentImpl0.getInitialSeparator();\n}",
    "testName" : "test019"
  },
  "test25116" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test25116() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"F+UGzGr]f3\", \"F+UGzGr]f3\", 0, 0, 'j', 'i', fileValidator0, \"F+UGzGr]f3\", linkedList0, 0);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    String string0 = sourceDestArgument0.stripBoundaryQuotes(\"\\\"}O\");\n    sourceDestArgument0.getPreferredName();\n}",
    "testName" : "test25116"
  },
  "test25115" : {
    "methodSignature" : "public char getInitialSeparator()",
    "methodName" : "getInitialSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test25115() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"F+UGzGr]f3\", \"F+UGzGr]f3\", 0, 0, 'j', 'i', fileValidator0, \"F+UGzGr]f3\", linkedList0, 0);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    String string0 = sourceDestArgument0.stripBoundaryQuotes(\"\\\"}O\");\n    argumentImpl0.getInitialSeparator();\n}",
    "testName" : "test25115"
  },
  "test017" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test017() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"\", 0, 0, 'A', ';', dateValidator0, \"\", (List) null, (-3157));\n    char char0 = argumentImpl0.getInitialSeparator();\n    argumentImpl0.getMaximum();\n}",
    "testName" : "test017"
  },
  "test018" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test018() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"\", 0, 0, 'A', ';', dateValidator0, \"\", (List) null, (-3157));\n    char char0 = argumentImpl0.getInitialSeparator();\n    argumentImpl0.getPreferredName();\n}",
    "testName" : "test018"
  },
  "test2195" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2195() throws Throwable {\n    LinkedList<String> linkedList0 = new LinkedList<String>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"VO;h9!Ubi*B\", \"DISPLAY_GROUP_EXPANDED\", (-1442), (-1442), 'N', '(', (Validator) null, \"UB\", linkedList0, (-1442));\n    String string0 = argumentImpl0.toString();\n    argumentImpl0.getPreferredName();\n}",
    "testName" : "test2195"
  },
  "test2194" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2194() throws Throwable {\n    LinkedList<String> linkedList0 = new LinkedList<String>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"VO;h9!Ubi*B\", \"DISPLAY_GROUP_EXPANDED\", (-1442), (-1442), 'N', '(', (Validator) null, \"UB\", linkedList0, (-1442));\n    String string0 = argumentImpl0.toString();\n}",
    "testName" : "test2194"
  },
  "test2197" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2197() throws Throwable {\n    LinkedList<String> linkedList0 = new LinkedList<String>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"VO;h9!Ubi*B\", \"DISPLAY_GROUP_EXPANDED\", (-1442), (-1442), 'N', '(', (Validator) null, \"UB\", linkedList0, (-1442));\n    String string0 = argumentImpl0.toString();\n    argumentImpl0.getConsumeRemaining();\n}",
    "testName" : "test2197"
  },
  "test1262" : {
    "methodSignature" : "public char getSubsequentSeparator()",
    "methodName" : "getSubsequentSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1262() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"G\", 2, 2, 'Y', '^', (Validator) null, \"orj.apache.commons.cli2.va,idation.FileValidator\", linkedList0, 2);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);\n    LinkedList<String> linkedList1 = new LinkedList<String>();\n    linkedList1.add(\"orj.apache.commons.cli2.va,idation.FileValidator\");\n    linkedList1.add(\"DL+5~ M!IKE`?o\");\n    ListIterator<String> listIterator0 = linkedList1.listIterator();\n    argumentImpl0.process(writeableCommandLineImpl0, listIterator0);\n    argumentImpl0.getSubsequentSeparator();\n}",
    "testName" : "test1262"
  },
  "test2196" : {
    "methodSignature" : "public char getSubsequentSeparator()",
    "methodName" : "getSubsequentSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2196() throws Throwable {\n    LinkedList<String> linkedList0 = new LinkedList<String>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"VO;h9!Ubi*B\", \"DISPLAY_GROUP_EXPANDED\", (-1442), (-1442), 'N', '(', (Validator) null, \"UB\", linkedList0, (-1442));\n    String string0 = argumentImpl0.toString();\n    argumentImpl0.getSubsequentSeparator();\n}",
    "testName" : "test2196"
  },
  "test2193" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2193() throws Throwable {\n    LinkedList<String> linkedList0 = new LinkedList<String>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"VO;h9!Ubi*B\", \"DISPLAY_GROUP_EXPANDED\", (-1442), (-1442), 'N', '(', (Validator) null, \"UB\", linkedList0, (-1442));\n    String string0 = argumentImpl0.toString();\n    argumentImpl0.getDescription();\n}",
    "testName" : "test2193"
  },
  "test2192" : {
    "methodSignature" : "public char getInitialSeparator()",
    "methodName" : "getInitialSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2192() throws Throwable {\n    LinkedList<String> linkedList0 = new LinkedList<String>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"VO;h9!Ubi*B\", \"DISPLAY_GROUP_EXPANDED\", (-1442), (-1442), 'N', '(', (Validator) null, \"UB\", linkedList0, (-1442));\n    String string0 = argumentImpl0.toString();\n    argumentImpl0.getInitialSeparator();\n}",
    "testName" : "test2192"
  },
  "test0222" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0222() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"+\", \"org.apache.commons.cli2.validation.UrlValidator\", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, \"org.apache.commons.cli2.validation.UrlValidator\", (List) null, Integer.MAX_VALUE);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, (List) null);\n    boolean boolean0 = sourceDestArgument0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"@'r--d,B;\");\n    sourceDestArgument0.getMaximum();\n}",
    "testName" : "test0222"
  },
  "test1157" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1157() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingFileInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    Object object0 = new Object();\n    linkedList0.add(object0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"--\", \"}O\", (-2148), 761, '_', '\\u0000', fileValidator0, \"Switch.no.disabledPrefix\", linkedList0, 0);\n    argumentImpl0.getDescription();\n}",
    "testName" : "test1157"
  },
  "test1674" : {
    "methodSignature" : "public void process(WriteableCommandLine commandLine, ListIterator args) throws OptionException",
    "methodName" : "process",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1674() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"orj.apache.commons.cli2.va,idation.FileValidator\", 2, 2, '3', '3', (Validator) null, \"orj.apache.commons.cli2.va,idation.FileValidator\", linkedList0, 2);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);\n    LinkedList<String> linkedList1 = new LinkedList<String>();\n    linkedList1.add(\"--\");\n    linkedList1.add(\"1C4WEiu]J3zT\");\n    ListIterator<String> listIterator0 = linkedList1.listIterator();\n    argumentImpl0.process(writeableCommandLineImpl0, listIterator0);\n}",
    "testName" : "test1674"
  },
  "test0223" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0223() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"+\", \"org.apache.commons.cli2.validation.UrlValidator\", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, \"org.apache.commons.cli2.validation.UrlValidator\", (List) null, Integer.MAX_VALUE);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, (List) null);\n    boolean boolean0 = sourceDestArgument0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"@'r--d,B;\");\n    sourceDestArgument0.getPreferredName();\n}",
    "testName" : "test0223"
  },
  "test1158" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1158() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingFileInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    Object object0 = new Object();\n    linkedList0.add(object0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"--\", \"}O\", (-2148), 761, '_', '\\u0000', fileValidator0, \"Switch.no.disabledPrefix\", linkedList0, 0);\n    argumentImpl0.getMaximum();\n}",
    "testName" : "test1158"
  },
  "test0224" : {
    "methodSignature" : "public char getInitialSeparator()",
    "methodName" : "getInitialSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0224() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"+\", \"org.apache.commons.cli2.validation.UrlValidator\", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, \"org.apache.commons.cli2.validation.UrlValidator\", (List) null, Integer.MAX_VALUE);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, (List) null);\n    boolean boolean0 = sourceDestArgument0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"@'r--d,B;\");\n    argumentImpl0.getInitialSeparator();\n}",
    "testName" : "test0224"
  },
  "test1159" : {
    "methodSignature" : "public boolean isRequired()",
    "methodName" : "isRequired",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1159() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingFileInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    Object object0 = new Object();\n    linkedList0.add(object0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"--\", \"}O\", (-2148), 761, '_', '\\u0000', fileValidator0, \"Switch.no.disabledPrefix\", linkedList0, 0);\n    argumentImpl0.isRequired();\n}",
    "testName" : "test1159"
  },
  "test2089" : {
    "methodSignature" : "public char getSubsequentSeparator()",
    "methodName" : "getSubsequentSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2089() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\\\"a!U<\\\"#|o*(7LY\", \"\", Integer.MAX_VALUE, Integer.MAX_VALUE, '9', '-', (Validator) null, \"\", list0, 41);\n    String string0 = argumentImpl0.toString();\n    argumentImpl0.getSubsequentSeparator();\n}",
    "testName" : "test2089"
  },
  "test1154" : {
    "methodSignature" : "public char getInitialSeparator()",
    "methodName" : "getInitialSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1154() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingFileInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    Object object0 = new Object();\n    linkedList0.add(object0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"--\", \"}O\", (-2148), 761, '_', '\\u0000', fileValidator0, \"Switch.no.disabledPrefix\", linkedList0, 0);\n    argumentImpl0.getInitialSeparator();\n}",
    "testName" : "test1154"
  },
  "test2088" : {
    "methodSignature" : "public char getInitialSeparator()",
    "methodName" : "getInitialSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2088() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\\\"a!U<\\\"#|o*(7LY\", \"\", Integer.MAX_VALUE, Integer.MAX_VALUE, '9', '-', (Validator) null, \"\", list0, 41);\n    String string0 = argumentImpl0.toString();\n    argumentImpl0.getInitialSeparator();\n}",
    "testName" : "test2088"
  },
  "test0220" : {
    "methodSignature" : "public boolean canProcess(final WriteableCommandLine commandLine, final String arg)",
    "methodName" : "canProcess",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0220() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"+\", \"org.apache.commons.cli2.validation.UrlValidator\", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, \"org.apache.commons.cli2.validation.UrlValidator\", (List) null, Integer.MAX_VALUE);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, (List) null);\n    boolean boolean0 = sourceDestArgument0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"@'r--d,B;\");\n}",
    "testName" : "test0220"
  },
  "test1155" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1155() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingFileInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    Object object0 = new Object();\n    linkedList0.add(object0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"--\", \"}O\", (-2148), 761, '_', '\\u0000', fileValidator0, \"Switch.no.disabledPrefix\", linkedList0, 0);\n    argumentImpl0.getPreferredName();\n}",
    "testName" : "test1155"
  },
  "test0221" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0221() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingDirectoryInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"+\", \"org.apache.commons.cli2.validation.UrlValidator\", Integer.MAX_VALUE, Integer.MAX_VALUE, 'Q', 'Q', fileValidator0, \"org.apache.commons.cli2.validation.UrlValidator\", (List) null, Integer.MAX_VALUE);\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, (List) null);\n    boolean boolean0 = sourceDestArgument0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"@'r--d,B;\");\n    sourceDestArgument0.getMinimum();\n}",
    "testName" : "test0221"
  },
  "test1156" : {
    "methodSignature" : "public char getSubsequentSeparator()",
    "methodName" : "getSubsequentSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1156() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingFileInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    Object object0 = new Object();\n    linkedList0.add(object0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"--\", \"}O\", (-2148), 761, '_', '\\u0000', fileValidator0, \"Switch.no.disabledPrefix\", linkedList0, 0);\n    argumentImpl0.getSubsequentSeparator();\n}",
    "testName" : "test1156"
  },
  "test0747" : {
    "methodSignature" : "public char getInitialSeparator()",
    "methodName" : "getInitialSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0747() throws Throwable {\n    UrlValidator urlValidator0 = new UrlValidator();\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    Set<String> set0 = locale0.getUnicodeLocaleKeys();\n    Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;\n    List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"NumberValidator.number.OutOfRange\", \"qM3\", 679, 679, 'T', 'U', urlValidator0, \"`a`KsY!8?_uN:{94>\", list0, 679);\n    argumentImpl0.getValidator();\n    argumentImpl0.getInitialSeparator();\n}",
    "testName" : "test0747"
  },
  "test0748" : {
    "methodSignature" : "public char getSubsequentSeparator()",
    "methodName" : "getSubsequentSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0748() throws Throwable {\n    UrlValidator urlValidator0 = new UrlValidator();\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    Set<String> set0 = locale0.getUnicodeLocaleKeys();\n    Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;\n    List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"NumberValidator.number.OutOfRange\", \"qM3\", 679, 679, 'T', 'U', urlValidator0, \"`a`KsY!8?_uN:{94>\", list0, 679);\n    argumentImpl0.getValidator();\n    argumentImpl0.getSubsequentSeparator();\n}",
    "testName" : "test0748"
  },
  "test0749" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0749() throws Throwable {\n    UrlValidator urlValidator0 = new UrlValidator();\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    Set<String> set0 = locale0.getUnicodeLocaleKeys();\n    Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;\n    List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"NumberValidator.number.OutOfRange\", \"qM3\", 679, 679, 'T', 'U', urlValidator0, \"`a`KsY!8?_uN:{94>\", list0, 679);\n    argumentImpl0.getValidator();\n    argumentImpl0.getPreferredName();\n}",
    "testName" : "test0749"
  },
  "test0746" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0746() throws Throwable {\n    UrlValidator urlValidator0 = new UrlValidator();\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    Set<String> set0 = locale0.getUnicodeLocaleKeys();\n    Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;\n    List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"NumberValidator.number.OutOfRange\", \"qM3\", 679, 679, 'T', 'U', urlValidator0, \"`a`KsY!8?_uN:{94>\", list0, 679);\n    argumentImpl0.getValidator();\n    argumentImpl0.getDescription();\n}",
    "testName" : "test0746"
  },
  "test23103" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test23103() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingInstance();\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"F+UGzGr]f3\", \"F+UGzGr]f3\", 0, 85, 'i', 'i', fileValidator0, \"DISPLAY_PROPERTY_OPTION\", linkedList0, (-1543));\n    StringBuffer stringBuffer0 = new StringBuffer(0);\n    LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();\n    argumentImpl0.appendUsage(stringBuffer0, linkedHashSet0, (Comparator) null);\n    argumentImpl0.getPreferredName();\n}",
    "testName" : "test23103"
  },
  "test2087" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2087() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\\\"a!U<\\\"#|o*(7LY\", \"\", Integer.MAX_VALUE, Integer.MAX_VALUE, '9', '-', (Validator) null, \"\", list0, 41);\n    String string0 = argumentImpl0.toString();\n}",
    "testName" : "test2087"
  },
  "test0112" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0112() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"\", 0, 0, 'A', ';', dateValidator0, \"\", (List) null, (-3157));\n    char char0 = argumentImpl0.getInitialSeparator();\n    argumentImpl0.getConsumeRemaining();\n}",
    "testName" : "test0112"
  },
  "test0750" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0750() throws Throwable {\n    UrlValidator urlValidator0 = new UrlValidator();\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    Set<String> set0 = locale0.getUnicodeLocaleKeys();\n    Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;\n    List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"NumberValidator.number.OutOfRange\", \"qM3\", 679, 679, 'T', 'U', urlValidator0, \"`a`KsY!8?_uN:{94>\", list0, 679);\n    argumentImpl0.getValidator();\n    argumentImpl0.getConsumeRemaining();\n}",
    "testName" : "test0750"
  },
  "test0113" : {
    "methodSignature" : "public char getSubsequentSeparator()",
    "methodName" : "getSubsequentSeparator",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0113() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"\", 0, 0, 'A', ';', dateValidator0, \"\", (List) null, (-3157));\n    char char0 = argumentImpl0.getInitialSeparator();\n    argumentImpl0.getSubsequentSeparator();\n}",
    "testName" : "test0113"
  },
  "test0110" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0110() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"\", 0, 0, 'A', ';', dateValidator0, \"\", (List) null, (-3157));\n    char char0 = argumentImpl0.getInitialSeparator();\n    argumentImpl0.getMinimum();\n}",
    "testName" : "test0110"
  },
  "test0111" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0111() throws Throwable {\n    DateValidator dateValidator0 = DateValidator.getDateTimeInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"\", 0, 0, 'A', ';', dateValidator0, \"\", (List) null, (-3157));\n    char char0 = argumentImpl0.getInitialSeparator();\n    argumentImpl0.getDescription();\n}",
    "testName" : "test0111"
  },
  "test2090" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2090() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\\\"a!U<\\\"#|o*(7LY\", \"\", Integer.MAX_VALUE, Integer.MAX_VALUE, '9', '-', (Validator) null, \"\", list0, 41);\n    String string0 = argumentImpl0.toString();\n    argumentImpl0.getConsumeRemaining();\n}",
    "testName" : "test2090"
  },
  "test1160" : {
    "methodSignature" : "public String getConsumeRemaining()",
    "methodName" : "getConsumeRemaining",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1160() throws Throwable {\n    FileValidator fileValidator0 = FileValidator.getExistingFileInstance();\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    Object object0 = new Object();\n    linkedList0.add(object0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"--\", \"}O\", (-2148), 761, '_', '\\u0000', fileValidator0, \"Switch.no.disabledPrefix\", linkedList0, 0);\n    argumentImpl0.getConsumeRemaining();\n}",
    "testName" : "test1160"
  },
  "test2091" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.ArgumentImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2091() throws Throwable {\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    Set<String> set0 = ZoneId.getAvailableZoneIds();\n    List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\\\"a!U<\\\"#|o*(7LY\", \"\", Integer.MAX_VALUE, Integer.MAX_VALUE, '9', '-', (Validator) null, \"\", list0, 41);\n    String string0 = argumentImpl0.toString();\n    argumentImpl0.getDescription();\n}",
    "testName" : "test2091"
  }
}