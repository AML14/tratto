{
  "test2324" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2324() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption(\"RV7H\", \"RV7H\", 192);\n    LinkedList<Command> linkedList0 = new LinkedList<Command>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addValue((Option) null, \"Passes properties and values to the application\");\n    List list0 = writeableCommandLineImpl0.getValues(\"Passes properties and values to the application\");\n    WriteableCommandLineImpl writeableCommandLineImpl1 = new WriteableCommandLineImpl(propertyOption0, list0);\n    String string0 = writeableCommandLineImpl1.toString();\n}",
    "testName" : "test2324"
  },
  "test1213" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1213() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    PropertyOption propertyOption0 = new PropertyOption();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addSwitch(propertyOption0, true);\n    propertyOption0.getDescription();\n}",
    "testName" : "test1213"
  },
  "test2425" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2425() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    PropertyOption propertyOption0 = new PropertyOption();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.setDefaultValues(propertyOption0, linkedList0);\n    propertyOption0.getDescription();\n}",
    "testName" : "test2425"
  },
  "test1314" : {
    "methodSignature" : "public final boolean hasOption(final String trigger)",
    "methodName" : "hasOption",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1314() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Command> linkedList0 = new LinkedList<Command>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    boolean boolean0 = writeableCommandLineImpl0.hasOption(\"-D\");\n}",
    "testName" : "test1314"
  },
  "test1010" : {
    "methodSignature" : "public final Boolean getSwitch(final Option option)",
    "methodName" : "getSwitch",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    LinkedList<Command> linkedList0 = new LinkedList<Command>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addSwitch(propertyOption0, false);\n    Boolean boolean0 = writeableCommandLineImpl0.getSwitch((Option) propertyOption0);\n}",
    "testName" : "test1010"
  },
  "test2122" : {
    "methodSignature" : "public boolean looksLikeOption(final String trigger)",
    "methodName" : "looksLikeOption",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2122() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Command> linkedList0 = new LinkedList<Command>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    boolean boolean0 = writeableCommandLineImpl0.looksLikeOption(\"Passes properties and values to the application\");\n}",
    "testName" : "test2122"
  },
  "test2223" : {
    "methodSignature" : "public boolean looksLikeOption(final String trigger)",
    "methodName" : "looksLikeOption",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2223() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    boolean boolean0 = writeableCommandLineImpl0.looksLikeOption(\"-D\");\n}",
    "testName" : "test2223"
  },
  "test1112" : {
    "methodSignature" : "public void addSwitch(final Option option, final boolean value)",
    "methodName" : "addSwitch",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1112() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    PropertyOption propertyOption0 = new PropertyOption();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addSwitch(propertyOption0, false);\n    writeableCommandLineImpl0.addSwitch(propertyOption0, false);\n}",
    "testName" : "test1112"
  },
  "test000" : {
    "methodSignature" : "public String getProperty(final String property)",
    "methodName" : "getProperty",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Command> linkedList0 = new LinkedList<Command>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    String string0 = writeableCommandLineImpl0.getProperty(\"Passes properties and values to the application\");\n}",
    "testName" : "test000"
  },
  "test077" : {
    "methodSignature" : "public final boolean hasOption(final String trigger)",
    "methodName" : "hasOption",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Command> linkedList0 = new LinkedList<Command>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addOption(propertyOption0);\n    boolean boolean0 = writeableCommandLineImpl0.hasOption(\"-D\");\n}",
    "testName" : "test077"
  },
  "test088" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Command> linkedList0 = new LinkedList<Command>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addValue((Option) null, \"-D\");\n    Long long0 = new Long((-1L));\n    writeableCommandLineImpl0.addValue((Option) null, long0);\n    List list0 = writeableCommandLineImpl0.getValues(\"-D\");\n    WriteableCommandLineImpl writeableCommandLineImpl1 = new WriteableCommandLineImpl(propertyOption0, list0);\n    writeableCommandLineImpl1.toString();\n}",
    "testName" : "test088"
  },
  "test099" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Command> linkedList0 = new LinkedList<Command>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    ClassValidator classValidator0 = new ClassValidator();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"Passes properties and values to the application\", \"Passes properties and values to the application\", (-2143), (-2143), ':', ':', classValidator0, \"Passes properties and values to the application\", linkedList0, (-2143));\n    Boolean boolean0 = Boolean.FALSE;\n    writeableCommandLineImpl0.addValue(argumentImpl0, boolean0);\n    argumentImpl0.getMinimum();\n}",
    "testName" : "test099"
  },
  "test2728" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2728() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    LinkedList<Command> linkedList0 = new LinkedList<Command>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.setDefaultSwitch(propertyOption0, (Boolean) null);\n    propertyOption0.getPreferredName();\n}",
    "testName" : "test2728"
  },
  "test1920" : {
    "methodSignature" : "public int getId()",
    "methodName" : "getId",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1920() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    LinkedList<Command> linkedList0 = new LinkedList<Command>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addProperty((Option) propertyOption0, \"Passes properties and values to the application\", \"-D\");\n    writeableCommandLineImpl0.addProperty((Option) propertyOption0, \"-D\", \"-D\");\n    propertyOption0.getId();\n}",
    "testName" : "test1920"
  },
  "test2526" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2526() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, (List) null);\n    writeableCommandLineImpl0.setDefaultValues(propertyOption0, (List) null);\n    propertyOption0.getDescription();\n}",
    "testName" : "test2526"
  },
  "test1415" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1415() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Command> linkedList0 = new LinkedList<Command>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addValue((Option) null, \"-D\");\n    List list0 = writeableCommandLineImpl0.getValues(\"-D\");\n    WriteableCommandLineImpl writeableCommandLineImpl1 = new WriteableCommandLineImpl(propertyOption0, list0);\n    String string0 = writeableCommandLineImpl1.toString();\n}",
    "testName" : "test1415"
  },
  "test2627" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2627() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Command> linkedList0 = new LinkedList<Command>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    Boolean boolean0 = Boolean.TRUE;\n    writeableCommandLineImpl0.setDefaultSwitch(propertyOption0, boolean0);\n    propertyOption0.getDescription();\n}",
    "testName" : "test2627"
  },
  "test1819" : {
    "methodSignature" : "public final Boolean getSwitch(final String trigger)",
    "methodName" : "getSwitch",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1819() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Command> linkedList0 = new LinkedList<Command>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    Boolean boolean0 = writeableCommandLineImpl0.getSwitch(\"Passes properties and values to the application\");\n}",
    "testName" : "test1819"
  },
  "test2021" : {
    "methodSignature" : "public String getProperty(final Option option, final String property, final String defaultValue)",
    "methodName" : "getProperty",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2021() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    LinkedList<Command> linkedList0 = new LinkedList<Command>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addProperty((Option) propertyOption0, \"Passes properties and values to the application\", \"-D\");\n    String string0 = writeableCommandLineImpl0.getProperty((Option) propertyOption0, \"Passes properties and values to the application\", \"-D\");\n}",
    "testName" : "test2021"
  }
}