project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test00,"public void test00() throws Throwable {
    PosixParser posixParser0 = new PosixParser();
    Options options0 = new Options();
    String[] stringArray0 = new String[1];
    stringArray0[0] = ""--"";
    String[] stringArray1 = posixParser0.flatten(options0, stringArray0, false);
    assertEquals(2, stringArray1.length);
}",0,
project,0,test11,"public void test11() throws Throwable {
    Options options0 = new Options();
    options0.addOption("""", ""--=#-W}we{Z/xxe<#QZ"", false, ""--=#-W}we{Z/xxe<#QZ"");
    PosixParser posixParser0 = new PosixParser();
    String[] stringArray0 = new String[7];
    stringArray0[0] = ""--=#-W}we{Z/xxe<#QZ"";
    // Undeclared exception!
    try {
        posixParser0.flatten(options0, stringArray0, false);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test22,"public void test22() throws Throwable {
    PosixParser posixParser0 = new PosixParser();
    Options options0 = new Options();
    Options options1 = options0.addOption("""", """", false, """");
    String[] stringArray0 = new String[1];
    stringArray0[0] = ""--"";
    String[] stringArray1 = posixParser0.flatten(options1, stringArray0, false);
    assertEquals(1, stringArray1.length);
}",0,
project,0,test33,"public void test33() throws Throwable {
    Options options0 = new Options();
    PosixParser posixParser0 = new PosixParser();
    String[] stringArray0 = new String[1];
    stringArray0[0] = ""-"";
    CommandLine commandLine0 = posixParser0.parse(options0, stringArray0);
    assertNotNull(commandLine0);
}",0,assertNotNull(commandLine0)
project,0,test44,"public void test44() throws Throwable {
    Options options0 = new Options();
    String[] stringArray0 = new String[7];
    stringArray0[0] = ""-("";
    PosixParser posixParser0 = new PosixParser();
    // Undeclared exception!
    try {
        posixParser0.parse(options0, stringArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test55,"public void test55() throws Throwable {
    PosixParser posixParser0 = new PosixParser();
    Options options0 = new Options();
    Options options1 = options0.addOption(""za"", true, ""za"");
    String[] stringArray0 = new String[2];
    stringArray0[0] = ""-za"";
    // Undeclared exception!
    try {
        posixParser0.flatten(options1, stringArray0, true);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test66,"public void test66() throws Throwable {
    Options options0 = new Options();
    String[] stringArray0 = new String[6];
    stringArray0[0] = ""-h"";
    PosixParser posixParser0 = new PosixParser();
    String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);
    assertEquals(6, stringArray1.length);
}",0,
project,0,test77,"public void test77() throws Throwable {
    PosixParser posixParser0 = new PosixParser();
    Options options0 = new Options();
    Options options1 = options0.addOption("""", true, """");
    String[] stringArray0 = new String[2];
    stringArray0[0] = ""-+A"";
    posixParser0.flatten(options1, stringArray0, true);
    posixParser0.burstToken(""--"", true);
}",0,
project,0,test88,"public void test88() throws Throwable {
    PosixParser posixParser0 = new PosixParser();
    Options options0 = new Options();
    Options options1 = options0.addOption(""h"", false, ""rhAvr}Hm%r0rXZ8h"");
    String[] stringArray0 = new String[1];
    stringArray0[0] = ""h"";
    posixParser0.flatten(options1, stringArray0, false);
    posixParser0.burstToken(""rhAvr}Hm%r0rXZ8h"", false);
}",0,
project,0,test99,"public void test99() throws Throwable {
    PosixParser posixParser0 = new PosixParser();
    Options options0 = new Options();
    Options options1 = options0.addOption(""h"", true, ""rhAvr}Hm%r0rXZ8h"");
    String[] stringArray0 = new String[1];
    stringArray0[0] = ""h"";
    posixParser0.flatten(options1, stringArray0, true);
    posixParser0.burstToken(""rhAvr}Hm%r0rXZ8h"", true);
}",0,
