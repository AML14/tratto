{
  "test11" : {
    "methodSignature" : "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)",
    "methodName" : "flatten",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11() throws Throwable {\n    Options options0 = new Options();\n    options0.addOption(\"\", \"--=#-W}we{Z/xxe<#QZ\", false, \"--=#-W}we{Z/xxe<#QZ\");\n    PosixParser posixParser0 = new PosixParser();\n    String[] stringArray0 = new String[7];\n    stringArray0[0] = \"--=#-W}we{Z/xxe<#QZ\";\n    posixParser0.flatten(options0, stringArray0, false);\n}",
    "testName" : "test11"
  },
  "test33" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33() throws Throwable {\n    Options options0 = new Options();\n    PosixParser posixParser0 = new PosixParser();\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"-\";\n    CommandLine commandLine0 = posixParser0.parse(options0, stringArray0);\n}",
    "testName" : "test33"
  },
  "test55" : {
    "methodSignature" : "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)",
    "methodName" : "flatten",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test55() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    Options options1 = options0.addOption(\"za\", true, \"za\");\n    String[] stringArray0 = new String[2];\n    stringArray0[0] = \"-za\";\n    posixParser0.flatten(options1, stringArray0, true);\n}",
    "testName" : "test55"
  },
  "test77" : {
    "methodSignature" : "protected void burstToken(String token, boolean stopAtNonOption)",
    "methodName" : "burstToken",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test77() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    Options options1 = options0.addOption(\"\", true, \"\");\n    String[] stringArray0 = new String[2];\n    stringArray0[0] = \"-+A\";\n    posixParser0.flatten(options1, stringArray0, true);\n    posixParser0.burstToken(\"--\", true);\n}",
    "testName" : "test77"
  },
  "test99" : {
    "methodSignature" : "protected void burstToken(String token, boolean stopAtNonOption)",
    "methodName" : "burstToken",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test99() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    Options options1 = options0.addOption(\"h\", true, \"rhAvr}Hm%r0rXZ8h\");\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"h\";\n    posixParser0.flatten(options1, stringArray0, true);\n    posixParser0.burstToken(\"rhAvr}Hm%r0rXZ8h\", true);\n}",
    "testName" : "test99"
  },
  "test00" : {
    "methodSignature" : "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)",
    "methodName" : "flatten",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"--\";\n    String[] stringArray1 = posixParser0.flatten(options0, stringArray0, false);\n}",
    "testName" : "test00"
  },
  "test22" : {
    "methodSignature" : "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)",
    "methodName" : "flatten",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    Options options1 = options0.addOption(\"\", \"\", false, \"\");\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"--\";\n    String[] stringArray1 = posixParser0.flatten(options1, stringArray0, false);\n}",
    "testName" : "test22"
  },
  "test44" : {
    "methodSignature" : "public CommandLine parse(Options options, String[] arguments) throws ParseException",
    "methodName" : "parse",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44() throws Throwable {\n    Options options0 = new Options();\n    String[] stringArray0 = new String[7];\n    stringArray0[0] = \"-(\";\n    PosixParser posixParser0 = new PosixParser();\n    posixParser0.parse(options0, stringArray0);\n}",
    "testName" : "test44"
  },
  "test66" : {
    "methodSignature" : "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)",
    "methodName" : "flatten",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test66() throws Throwable {\n    Options options0 = new Options();\n    String[] stringArray0 = new String[6];\n    stringArray0[0] = \"-h\";\n    PosixParser posixParser0 = new PosixParser();\n    String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);\n}",
    "testName" : "test66"
  },
  "test88" : {
    "methodSignature" : "protected void burstToken(String token, boolean stopAtNonOption)",
    "methodName" : "burstToken",
    "className" : "org.apache.commons.cli.PosixParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test88() throws Throwable {\n    PosixParser posixParser0 = new PosixParser();\n    Options options0 = new Options();\n    Options options1 = options0.addOption(\"h\", false, \"rhAvr}Hm%r0rXZ8h\");\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"h\";\n    posixParser0.flatten(options1, stringArray0, false);\n    posixParser0.burstToken(\"rhAvr}Hm%r0rXZ8h\", false);\n}",
    "testName" : "test88"
  }
}