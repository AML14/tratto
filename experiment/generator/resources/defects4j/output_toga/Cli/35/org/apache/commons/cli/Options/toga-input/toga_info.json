{
  "test1720" : {
    "methodSignature" : "public boolean hasLongOption(String opt)",
    "methodName" : "hasLongOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1720() throws Throwable {\n    Options options0 = new Options();\n    options0.addOption(\"dI\", \"\", true, (String) null);\n    boolean boolean0 = options0.hasLongOption(\"\");\n}",
    "testName" : "test1720"
  },
  "test1011" : {
    "methodSignature" : "public Option getOption(String opt)",
    "methodName" : "getOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1011() throws Throwable {\n    Options options0 = new Options();\n    Option option0 = options0.getOption(\"The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. \");\n}",
    "testName" : "test1011"
  },
  "test1112" : {
    "methodSignature" : "public Option getOption(String opt)",
    "methodName" : "getOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1112() throws Throwable {\n    Options options0 = new Options();\n    Option option0 = new Option(\"\", \"\");\n    Options options1 = options0.addOption(option0);\n    Option option1 = options1.getOption(\"\");\n}",
    "testName" : "test1112"
  },
  "test000" : {
    "methodSignature" : "public Options addOption(String opt, boolean hasArg, String description)",
    "methodName" : "addOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Options options0 = new Options();\n    options0.addOption(\"j;\", true, \"=\\\"wF?Y\");\n}",
    "testName" : "test000"
  },
  "test011" : {
    "methodSignature" : "public Options addOption(String opt, String description)",
    "methodName" : "addOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Options options0 = new Options();\n    Options options1 = options0.addOption(\"\", \"\");\n}",
    "testName" : "test011"
  },
  "test022" : {
    "methodSignature" : "public Collection<Option> getOptions()",
    "methodName" : "getOptions",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Options options0 = new Options();\n    Collection<Option> collection0 = options0.getOptions();\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Options options0 = new Options();\n    String string0 = options0.toString();\n}",
    "testName" : "test044"
  },
  "test055" : {
    "methodSignature" : "public OptionGroup getOptionGroup(Option opt)",
    "methodName" : "getOptionGroup",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Options options0 = new Options();\n    options0.getOptionGroup((Option) null);\n}",
    "testName" : "test055"
  },
  "test066" : {
    "methodSignature" : "Collection<OptionGroup> getOptionGroups()",
    "methodName" : "getOptionGroups",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Options options0 = new Options();\n    Collection<OptionGroup> collection0 = options0.getOptionGroups();\n}",
    "testName" : "test066"
  },
  "test077" : {
    "methodSignature" : "public Options addOptionGroup(OptionGroup group)",
    "methodName" : "addOptionGroup",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Options options0 = new Options();\n    OptionGroup optionGroup0 = new OptionGroup();\n    optionGroup0.setRequired(true);\n    Options options1 = options0.addOptionGroup(optionGroup0);\n}",
    "testName" : "test077"
  },
  "test088" : {
    "methodSignature" : "public boolean isRequired()",
    "methodName" : "isRequired",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Options options0 = new Options();\n    OptionGroup optionGroup0 = new OptionGroup();\n    Option option0 = new Option(\"Vw\", \"org.apache.commons.cli.Options\", false, \"OJ,R!zRP\");\n    OptionGroup optionGroup1 = optionGroup0.addOption(option0);\n    options0.addOptionGroup(optionGroup1);\n    option0.isRequired();\n}",
    "testName" : "test088"
  },
  "test089" : {
    "methodSignature" : "public boolean hasOption(String opt)",
    "methodName" : "hasOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089() throws Throwable {\n    Options options0 = new Options();\n    OptionGroup optionGroup0 = new OptionGroup();\n    Option option0 = new Option(\"Vw\", \"org.apache.commons.cli.Options\", false, \"OJ,R!zRP\");\n    OptionGroup optionGroup1 = optionGroup0.addOption(option0);\n    options0.addOptionGroup(optionGroup1);\n    boolean boolean0 = options0.hasOption(\"Vw\");\n}",
    "testName" : "test089"
  },
  "test1518" : {
    "methodSignature" : "public boolean hasOption(String opt)",
    "methodName" : "hasOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1518() throws Throwable {\n    Options options0 = new Options();\n    OptionGroup optionGroup0 = new OptionGroup();\n    Option option0 = new Option(\"Vw\", \"org.apache.commons.cli.Options\", false, \"OJ,R!zRP\");\n    OptionGroup optionGroup1 = optionGroup0.addOption(option0);\n    options0.addOptionGroup(optionGroup1);\n    boolean boolean0 = options0.hasOption(\"org.apache.commons.cli.Options\");\n}",
    "testName" : "test1518"
  },
  "test1619" : {
    "methodSignature" : "public boolean hasLongOption(String opt)",
    "methodName" : "hasLongOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1619() throws Throwable {\n    Options options0 = new Options();\n    boolean boolean0 = options0.hasLongOption(\"7\");\n}",
    "testName" : "test1619"
  },
  "test1821" : {
    "methodSignature" : "public boolean hasShortOption(String opt)",
    "methodName" : "hasShortOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1821() throws Throwable {\n    Options options0 = new Options();\n    boolean boolean0 = options0.hasShortOption(\"OV{8Rx'de\");\n}",
    "testName" : "test1821"
  },
  "test0910" : {
    "methodSignature" : "public Options addOption(Option opt)",
    "methodName" : "addOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0910() throws Throwable {\n    Options options0 = new Options();\n    Option option0 = new Option(\"u\", \"?B&B~\");\n    option0.setRequired(true);\n    options0.addOption(option0);\n    Options options1 = options0.addOption(option0);\n}",
    "testName" : "test0910"
  },
  "test1416" : {
    "methodSignature" : "public boolean hasOption(String opt)",
    "methodName" : "hasOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1416() throws Throwable {\n    Options options0 = new Options();\n    boolean boolean0 = options0.hasOption(\"org.apache.commons.cli.Options\");\n}",
    "testName" : "test1416"
  },
  "test1922" : {
    "methodSignature" : "public boolean hasShortOption(String opt)",
    "methodName" : "hasShortOption",
    "className" : "org.apache.commons.cli.Options",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1922() throws Throwable {\n    Options options0 = new Options();\n    Option option0 = new Option(\"\", (String) null);\n    Options options1 = options0.addOption(option0);\n    boolean boolean0 = options1.hasShortOption(\"\");\n}",
    "testName" : "test1922"
  }
}