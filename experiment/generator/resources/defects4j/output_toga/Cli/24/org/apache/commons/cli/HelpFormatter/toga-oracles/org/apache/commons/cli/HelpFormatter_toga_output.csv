project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(74, int0);
}",0,
project,0,test002,"public void test002() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test003,"public void test003() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test004,"public void test004() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test005,"public void test005() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test017,"public void test017() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setLongOptPrefix(""-"");
    assertEquals(""-"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test028,"public void test028() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test029,"public void test029() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test0210,"public void test0210() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test0212,"public void test0212() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test0213,"public void test0213() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test0315,"public void test0315() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setNewLine(""-"");
    assertEquals(""-"", helpFormatter0.getNewLine());
}",0,assertNotNull(helpFormatter0.getNewLine())
project,0,test0416,"public void test0416() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setArgName(""usage: "");
    assertEquals(""usage: "", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test0517,"public void test0517() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setSyntaxPrefix(""usage: "");
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test0518,"public void test0518() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setSyntaxPrefix(""usage: "");
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test0519,"public void test0519() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setSyntaxPrefix(""usage: "");
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test0520,"public void test0520() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setSyntaxPrefix(""usage: "");
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test0521,"public void test0521() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setSyntaxPrefix(""usage: "");
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test0624,"public void test0624() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    // Undeclared exception!
    try {
        helpFormatter0.printHelp(3, ""--"", ""--"", options0, ""--"");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Total width is less than the width of the argument and indent - no room for the description
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test0725,"public void test0725() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    helpFormatter0.printHelp(""arg"", options0);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test0727,"public void test0727() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    helpFormatter0.printHelp(""arg"", options0);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test0828,"public void test0828() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setWidth(3);
    assertEquals(3, helpFormatter0.defaultWidth);
}",0,
project,0,test0929,"public void test0929() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptPrefix(""\n"");
    assertEquals(""\n"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test1030,"public void test1030() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test1031,"public void test1031() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test1032,"public void test1032() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test1035,"public void test1035() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test1036,"public void test1036() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test1137,"public void test1137() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getArgName();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test1138,"public void test1138() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getArgName();
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test1141,"public void test1141() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getArgName();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test1143,"public void test1143() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getArgName();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test1244,"public void test1244() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    // Undeclared exception!
    try {
        helpFormatter0.printHelp((PrintWriter) null, 74, ""usage: "", ""usage: "", (Options) null, 74, 74, ""usage: "");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test1345,"public void test1345() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setDescPadding(74);
    assertEquals(74, helpFormatter0.defaultDescPad);
}",0,
project,0,test1447,"public void test1447() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    helpFormatter0.printHelp(""-"", ""-"", options0, ""-"");
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test1548,"public void test1548() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test1549,"public void test1549() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test1551,"public void test1551() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test1552,"public void test1552() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test1553,"public void test1553() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test1656,"public void test1656() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    // Undeclared exception!
    try {
        helpFormatter0.printHelp(""usage: "", (Options) null, true);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test1757,"public void test1757() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test1758,"public void test1758() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test1761,"public void test1761() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test1763,"public void test1763() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test1864,"public void test1864() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test1865,"public void test1865() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test1867,"public void test1867() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test1868,"public void test1868() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test1971,"public void test1971() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test1972,"public void test1972() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test1973,"public void test1973() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test1976,"public void test1976() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test2078,"public void test2078() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option(""arg"", true, ""-"");
    Options options1 = options0.addOption(option0);
    options1.addOption((String) null, ""-"", true, ""arg"");
    helpFormatter0.printHelp(""\n"", ""\n"", options1, ""--"", true);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test2179,"public void test2179() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<OptionGroup> comparator0 = (Comparator<OptionGroup>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test2180,"public void test2180() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<OptionGroup> comparator0 = (Comparator<OptionGroup>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test2181,"public void test2181() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<OptionGroup> comparator0 = (Comparator<OptionGroup>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test2182,"public void test2182() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<OptionGroup> comparator0 = (Comparator<OptionGroup>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test2183,"public void test2183() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<OptionGroup> comparator0 = (Comparator<OptionGroup>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test2286,"public void test2286() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test2287,"public void test2287() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test2288,"public void test2288() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test2290,"public void test2290() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test2291,"public void test2291() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test2393,"public void test2393() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    // Undeclared exception!
    try {
        helpFormatter0.printHelp((String) null, (String) null, options0, (String) null, true);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cmdLineSyntax not provided
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test2494,"public void test2494() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    // Undeclared exception!
    try {
        helpFormatter0.printHelp("""", options0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cmdLineSyntax not provided
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test2595,"public void test2595() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    helpFormatter0.printHelp(""--"", ""--"", options0, ""\n"", true);
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test2698,"public void test2698() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(""--"");
    Option option0 = new Option(""arg"", ""arg"");
    Options options0 = new Options();
    OptionGroup optionGroup0 = new OptionGroup();
    Option option1 = new Option("""", true, ""arg"");
    optionGroup0.addOption(option1);
    optionGroup0.addOption(option0);
    options0.addOptionGroup(optionGroup0);
    // Undeclared exception!
    try {
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-2), """", options0);
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test2799,"public void test2799() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(""--"");
    Option option0 = new Option(""arg"", ""arg"");
    Options options0 = new Options();
    OptionGroup optionGroup0 = new OptionGroup();
    optionGroup0.addOption(option0);
    optionGroup0.setRequired(true);
    Options options1 = options0.addOptionGroup(optionGroup0);
    // Undeclared exception!
    try {
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-2), ""usage: "", options1);
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test28100,"public void test28100() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option("""", true, ""arg"");
    option0.setArgName("""");
    options0.addOption(option0);
    helpFormatter0.printHelp(""--"", ""arg"", options0, ""xC"", true);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test28101,"public void test28101() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option("""", true, ""arg"");
    option0.setArgName("""");
    options0.addOption(option0);
    helpFormatter0.printHelp(""--"", ""arg"", options0, ""xC"", true);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test28102,"public void test28102() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option("""", true, ""arg"");
    option0.setArgName("""");
    options0.addOption(option0);
    helpFormatter0.printHelp(""--"", ""arg"", options0, ""xC"", true);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test29104,"public void test29104() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option(""arg"", ""--"");
    Options options1 = options0.addOption(option0);
    helpFormatter0.printHelp(""\n"", ""\n"", options1, ""--"", true);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test30105,"public void test30105() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    helpFormatter0.setLeftPadding(61);
    Options options1 = options0.addOption(""arg"", ""--"", true, ""arg"");
    // Undeclared exception!
    try {
        helpFormatter0.printHelp(""\n"", ""\n"", options1, ""--"", true);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Total width is less than the width of the argument and indent - no room for the description
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test31106,"public void test31106() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Options options1 = options0.addOption((String) null, true, (String) null);
    helpFormatter0.printHelp(""--"", (String) null, options1, ""--"", true);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test32107,"public void test32107() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    // Undeclared exception!
    try {
        helpFormatter0.printUsage((PrintWriter) null, 13, ""[ Options: [ short "");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test33108,"public void test33108() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    // Undeclared exception!
    try {
        helpFormatter0.printUsage((PrintWriter) null, 1, ""\n"");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Total width is less than the width of the argument and indent - no room for the description
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test34109,"public void test34109() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.findWrapPos(""\n"", (-1), 1);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test34111,"public void test34111() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.findWrapPos(""\n"", (-1), 1);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test35113,"public void test35113() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test35114,"public void test35114() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test35115,"public void test35115() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test35118,"public void test35118() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test35120,"public void test35120() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test36121,"public void test36121() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    // Undeclared exception!
    try {
        helpFormatter0.renderWrappedText((StringBuffer) null, 1, 1, """");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test37122,"public void test37122() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    // Undeclared exception!
    try {
        helpFormatter0.renderWrappedText((StringBuffer) null, 1, 1, ""\n"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
