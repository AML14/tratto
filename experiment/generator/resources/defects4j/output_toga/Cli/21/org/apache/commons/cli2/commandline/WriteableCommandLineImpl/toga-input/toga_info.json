{
  "test1212" : {
    "methodSignature" : "public final boolean hasOption(final String trigger)",
    "methodName" : "hasOption",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    boolean boolean0 = writeableCommandLineImpl0.hasOption(\"-D\");\n}",
    "testName" : "test1212"
  },
  "test2324" : {
    "methodSignature" : "public boolean looksLikeOption(final String trigger)",
    "methodName" : "looksLikeOption",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2324() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    boolean boolean0 = writeableCommandLineImpl0.looksLikeOption(\"Passes properties and values to the application\");\n}",
    "testName" : "test2324"
  },
  "test1313" : {
    "methodSignature" : "public final boolean hasOption(final String trigger)",
    "methodName" : "hasOption",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addOption(propertyOption0);\n    boolean boolean0 = writeableCommandLineImpl0.hasOption(\"-D\");\n}",
    "testName" : "test1313"
  },
  "test2425" : {
    "methodSignature" : "public boolean looksLikeOption(final String trigger)",
    "methodName" : "looksLikeOption",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2425() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    boolean boolean0 = writeableCommandLineImpl0.looksLikeOption(\"-D\");\n}",
    "testName" : "test2425"
  },
  "test1010" : {
    "methodSignature" : "public void addSwitch(final Option option, final boolean value)",
    "methodName" : "addSwitch",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addSwitch(propertyOption0, true);\n    writeableCommandLineImpl0.addSwitch(propertyOption0, true);\n}",
    "testName" : "test1010"
  },
  "test2122" : {
    "methodSignature" : "public String getProperty(final String property)",
    "methodName" : "getProperty",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2122() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addProperty((Option) propertyOption0, \"Passes properties and values to the application\", \"Passes properties and values to the application\");\n    String string0 = writeableCommandLineImpl0.getProperty(\"Passes properties and values to the application\");\n}",
    "testName" : "test2122"
  },
  "test1111" : {
    "methodSignature" : "public boolean isRequired()",
    "methodName" : "isRequired",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    LinkedList<Command> linkedList0 = new LinkedList<Command>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addSwitch(propertyOption0, false);\n    propertyOption0.isRequired();\n}",
    "testName" : "test1111"
  },
  "test000" : {
    "methodSignature" : "public String getProperty(final String property)",
    "methodName" : "getProperty",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    String string0 = writeableCommandLineImpl0.getProperty(\"-D\");\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public int getId()",
    "methodName" : "getId",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addProperty(\"Passes properties and values to the application\", \"-D\");\n    writeableCommandLineImpl0.addProperty((Option) propertyOption0, \"Passes properties and values to the application\", \"Passes properties and values to the application\");\n    propertyOption0.getId();\n}",
    "testName" : "test022"
  },
  "test077" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    propertyOption0.setParent(propertyOption0);\n    writeableCommandLineImpl0.addSwitch(propertyOption0, true);\n    propertyOption0.getDescription();\n}",
    "testName" : "test077"
  },
  "test088" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    FileValidator fileValidator0 = new FileValidator();\n    LinkedList<String> linkedList1 = new LinkedList<String>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"Passes properties and values to the application\", \"Passes properties and values to the application\", (-2915), (-2915), 'q', 'q', fileValidator0, \"Passes properties and values to the application\", linkedList1, (-2915));\n    writeableCommandLineImpl0.addValue(argumentImpl0, argumentImpl0);\n    argumentImpl0.getDescription();\n}",
    "testName" : "test088"
  },
  "test099" : {
    "methodSignature" : "public int getId()",
    "methodName" : "getId",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addValue(propertyOption0, linkedList0);\n    writeableCommandLineImpl0.addValue(propertyOption0, linkedList0);\n    propertyOption0.getId();\n}",
    "testName" : "test099"
  },
  "test2728" : {
    "methodSignature" : "public int getId()",
    "methodName" : "getId",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2728() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, (List) null);\n    Boolean boolean0 = new Boolean(\"-D\");\n    writeableCommandLineImpl0.setDefaultSwitch(propertyOption0, boolean0);\n    propertyOption0.getId();\n}",
    "testName" : "test2728"
  },
  "test2829" : {
    "methodSignature" : "public int getId()",
    "methodName" : "getId",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2829() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, (List) null);\n    writeableCommandLineImpl0.setDefaultSwitch(propertyOption0, (Boolean) null);\n    propertyOption0.getId();\n}",
    "testName" : "test2829"
  },
  "test2526" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2526() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    LinkedList<String> linkedList0 = new LinkedList<String>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    linkedList0.add(\"Passes properties and values to the application\");\n    linkedList0.add(\"-D\");\n    String string0 = writeableCommandLineImpl0.toString();\n}",
    "testName" : "test2526"
  },
  "test2627" : {
    "methodSignature" : "public boolean isRequired()",
    "methodName" : "isRequired",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2627() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, (List) null);\n    writeableCommandLineImpl0.setDefaultValues(propertyOption0, (List) null);\n    propertyOption0.isRequired();\n}",
    "testName" : "test2627"
  },
  "test1919" : {
    "methodSignature" : "public Boolean getSwitch(final Option option, final Boolean defaultValue)",
    "methodName" : "getSwitch",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, (List) null);\n    writeableCommandLineImpl0.addSwitch(propertyOption0, true);\n    Boolean boolean0 = new Boolean(true);\n    Boolean boolean1 = writeableCommandLineImpl0.getSwitch((Option) propertyOption0, boolean0);\n}",
    "testName" : "test1919"
  },
  "test2021" : {
    "methodSignature" : "public final Boolean getSwitch(final String trigger)",
    "methodName" : "getSwitch",
    "className" : "org.apache.commons.cli2.commandline.WriteableCommandLineImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2021() throws Throwable {\n    PropertyOption propertyOption0 = new PropertyOption();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, (List) null);\n    Boolean boolean0 = writeableCommandLineImpl0.getSwitch(\"Passes properties and values to the application\");\n}",
    "testName" : "test2021"
  }
}