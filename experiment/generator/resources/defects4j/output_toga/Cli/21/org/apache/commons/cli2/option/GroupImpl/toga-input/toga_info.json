{
  "test1432" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1432() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"2dK7j!21Y9#@- `g S\", \"2dK7j!21Y9#@- `g S\", (-848), (-848), true);\n    linkedList0.add(groupImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    groupImpl0.validate(writeableCommandLineImpl0);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test1432"
  },
  "test1433" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1433() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"2dK7j!21Y9#@- `g S\", \"2dK7j!21Y9#@- `g S\", (-848), (-848), true);\n    linkedList0.add(groupImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    groupImpl0.validate(writeableCommandLineImpl0);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test1433"
  },
  "test2862" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2862() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    NumberValidator numberValidator0 = NumberValidator.getIntegerInstance();\n    LinkedList<Object> linkedList1 = new LinkedList<Object>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"Argument.to.any.va>ues\", \"Argument.to.any.va>ues\", (-843), (-843), 'A', 'A', numberValidator0, \"z<q3VEG^`2IJecgC>l\", linkedList1, (-843));\n    linkedList0.add(argumentImpl0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Argument.to.any.va>ues\", \"Argument.to.any.va>ues\", (-843), (-843), true);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    groupImpl0.defaults(writeableCommandLineImpl0);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test2862"
  },
  "test2249" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2249() throws Throwable {\n    LinkedList<DisplaySetting> linkedList0 = new LinkedList<DisplaySetting>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"org.apache.comm<ns.clO2.option.ArgumentItpl\", \"org.apache.comm<ns.clO2.option.ArgumentItpl\", 233, (-3481), true);\n    DisplaySetting displaySetting0 = mock(DisplaySetting.class, new ViolatedAssumptionAnswer());\n    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    List list0 = groupImpl0.helpLines((-4140), displaySetting0.ALL, comparator0);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test2249"
  },
  "test1534" : {
    "methodSignature" : "public void validate(final WriteableCommandLine commandLine) throws OptionException",
    "methodName" : "validate",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1534() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"2dK7j!21Y9#@- `g S\", \"2dK7j!21Y9#@- `g S\", (-848), (-848), true);\n    linkedList0.add(groupImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    writeableCommandLineImpl0.addOption(groupImpl0);\n    groupImpl0.validate(writeableCommandLineImpl0);\n}",
    "testName" : "test1534"
  },
  "test2248" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2248() throws Throwable {\n    LinkedList<DisplaySetting> linkedList0 = new LinkedList<DisplaySetting>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"org.apache.comm<ns.clO2.option.ArgumentItpl\", \"org.apache.comm<ns.clO2.option.ArgumentItpl\", 233, (-3481), true);\n    DisplaySetting displaySetting0 = mock(DisplaySetting.class, new ViolatedAssumptionAnswer());\n    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    List list0 = groupImpl0.helpLines((-4140), displaySetting0.ALL, comparator0);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2248"
  },
  "test2144" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2144() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Argument.too.many.values\", \"Argument.too.many.values\", 842, 842, true);\n    LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();\n    Comparator<Command> comparator0 = (Comparator<Command>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    List list0 = groupImpl0.helpLines(842, linkedHashSet0, comparator0);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test2144"
  },
  "test2760" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2760() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Misming.option\", \"Misming.option\", 2399, 2399, true);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    groupImpl0.defaults(writeableCommandLineImpl0);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2760"
  },
  "test1330" : {
    "methodSignature" : "public void validate(final WriteableCommandLine commandLine) throws OptionException",
    "methodName" : "validate",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1330() throws Throwable {\n    LinkedList<Switch> linkedList0 = new LinkedList<Switch>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Unexpected.token\", \"Unexpected.token\", 41, 41, true);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    groupImpl0.validate(writeableCommandLineImpl0);\n}",
    "testName" : "test1330"
  },
  "test1431" : {
    "methodSignature" : "public boolean isRequired()",
    "methodName" : "isRequired",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1431() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"2dK7j!21Y9#@- `g S\", \"2dK7j!21Y9#@- `g S\", (-848), (-848), true);\n    linkedList0.add(groupImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    groupImpl0.isRequired();\n}",
    "testName" : "test1431"
  },
  "test2145" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2145() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Argument.too.many.values\", \"Argument.too.many.values\", 842, 842, true);\n    LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();\n    Comparator<Command> comparator0 = (Comparator<Command>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    List list0 = groupImpl0.helpLines(842, linkedHashSet0, comparator0);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2145"
  },
  "test0923" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0923() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"\", (-725), (-725), true);\n    PropertyOption propertyOption0 = new PropertyOption(\"\", \"\", (-725));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"-D\");\n    groupImpl0.getMinimum();\n}",
    "testName" : "test0923"
  },
  "test012" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test012() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Argument.missing.values\", \"\", 6837, 1910, true);\n    groupImpl0.getAnonymous();\n    groupImpl0.getMinimum();\n}",
    "testName" : "test012"
  },
  "test1837" : {
    "methodSignature" : "public boolean isRequired()",
    "methodName" : "isRequired",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1837() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, (String) null, (String) null, 94, 94, true);\n    LinkedHashSet<Locale.LanguageRange> linkedHashSet0 = new LinkedHashSet<Locale.LanguageRange>();\n    Comparator<Command> comparator0 = (Comparator<Command>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    groupImpl0.appendUsage((StringBuffer) null, (Set) linkedHashSet0, (Comparator) comparator0, (String) null);\n    groupImpl0.isRequired();\n}",
    "testName" : "test1837"
  },
  "test1838" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1838() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, (String) null, (String) null, 94, 94, true);\n    LinkedHashSet<Locale.LanguageRange> linkedHashSet0 = new LinkedHashSet<Locale.LanguageRange>();\n    Comparator<Command> comparator0 = (Comparator<Command>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    groupImpl0.appendUsage((StringBuffer) null, (Set) linkedHashSet0, (Comparator) comparator0, (String) null);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test1838"
  },
  "test1839" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1839() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, (String) null, (String) null, 94, 94, true);\n    LinkedHashSet<Locale.LanguageRange> linkedHashSet0 = new LinkedHashSet<Locale.LanguageRange>();\n    Comparator<Command> comparator0 = (Comparator<Command>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    groupImpl0.appendUsage((StringBuffer) null, (Set) linkedHashSet0, (Comparator) comparator0, (String) null);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test1839"
  },
  "test0820" : {
    "methodSignature" : "public boolean canProcess(final WriteableCommandLine commandLine, final String arg)",
    "methodName" : "canProcess",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0820() throws Throwable {\n    LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();\n    LinkedList<PropertyOption> linkedList1 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption(\"\", \"-D\", (-4288));\n    linkedList1.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList1, \"\", \"-D\", (-4288), (-1121), true);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"Lo\");\n}",
    "testName" : "test0820"
  },
  "test1635" : {
    "methodSignature" : "public void validate(final WriteableCommandLine commandLine) throws OptionException",
    "methodName" : "validate",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1635() throws Throwable {\n    LinkedList<GroupImpl> linkedList0 = new LinkedList<GroupImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"kYk\", \"9<iME\\nW^T\", (-2596), 1882, false);\n    linkedList0.add(groupImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    writeableCommandLineImpl0.addOption(groupImpl0);\n    // Undeclared exception!\n    groupImpl0.validate(writeableCommandLineImpl0);\n}",
    "testName" : "test1635"
  },
  "test0921" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0921() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"\", (-725), (-725), true);\n    PropertyOption propertyOption0 = new PropertyOption(\"\", \"\", (-725));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"-D\");\n    groupImpl0.getMaximum();\n}",
    "testName" : "test0921"
  },
  "test0922" : {
    "methodSignature" : "public boolean canProcess(final WriteableCommandLine commandLine, final String arg)",
    "methodName" : "canProcess",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0922() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"\", (-725), (-725), true);\n    PropertyOption propertyOption0 = new PropertyOption(\"\", \"\", (-725));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"-D\");\n}",
    "testName" : "test0922"
  },
  "test1736" : {
    "methodSignature" : "public void validate(final WriteableCommandLine commandLine) throws OptionException",
    "methodName" : "validate",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1736() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    UrlValidator urlValidator0 = new UrlValidator();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"\", (-1), (-1), 'g', 'g', urlValidator0, \" \", linkedList0, 181);\n    linkedList0.offerLast(argumentImpl0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \" \", \" \", 0, (-1), true);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(argumentImpl0, linkedList0);\n    groupImpl0.validate(writeableCommandLineImpl0);\n}",
    "testName" : "test1736"
  },
  "test026" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test026() throws Throwable {\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \" (\", \" (\", 91, 91, true);\n    int int0 = groupImpl0.getMaximum();\n}",
    "testName" : "test026"
  },
  "test0718" : {
    "methodSignature" : "public boolean canProcess(final WriteableCommandLine commandLine, final String arg)",
    "methodName" : "canProcess",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0718() throws Throwable {\n    LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<PropertyOption> linkedList1 = new LinkedList<PropertyOption>();\n    linkedList1.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList1, \"\", \"-D\", (-4288), (-1121), true);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"Lo\");\n}",
    "testName" : "test0718"
  },
  "test027" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test027() throws Throwable {\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \" (\", \" (\", 91, 91, true);\n    int int0 = groupImpl0.getMaximum();\n    groupImpl0.getMinimum();\n}",
    "testName" : "test027"
  },
  "test2043" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2043() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    NumberValidator numberValidator0 = NumberValidator.getIntegerInstance();\n    LinkedList<Object> linkedList1 = new LinkedList<Object>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"Argument.to.any.va>ues\", \"Argument.to.any.va>ues\", (-843), (-843), 'A', 'A', numberValidator0, \"z<q3VEG^`2IJecgC>l\", linkedList1, (-843));\n    linkedList0.add(argumentImpl0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Argument.to.any.va>ues\", \"Argument.to.any.va>ues\", (-843), (-843), true);\n    String string0 = groupImpl0.toString();\n}",
    "testName" : "test2043"
  },
  "test1025" : {
    "methodSignature" : "public boolean canProcess(final WriteableCommandLine commandLine, final String arg)",
    "methodName" : "canProcess",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1025() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    NumberValidator numberValidator0 = NumberValidator.getPercentInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"9F?66Q|Y\\\"#*\", \"9F?66Q|Y\\\"#*\", 97, 97, 'd', 'd', numberValidator0, \"Unexpected.token\", linkedList0, 97);\n    linkedList0.add(argumentImpl0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"9F?66Q|Y\\\"#*\", \"9F?66Q|Y\\\"#*\", 97, 97, true);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"9F?66Q|Y\\\"#*\");\n}",
    "testName" : "test1025"
  },
  "test2555" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2555() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"N4hr$9|djnLV!\", \"N4hr$9|djnLV!\", 50, 50, false);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"N4hr$9|djnLV!\", \"N4hr$9|djnLV!\", 50, 50, 'Y', 'Y', (Validator) null, \"N4hr$9|djnLV!\", linkedList0, 50);\n    linkedList0.add(argumentImpl0);\n    groupImpl0.findOption(\"N4hr$9|djnLV!\");\n    groupImpl0.getMinimum();\n}",
    "testName" : "test2555"
  },
  "test2554" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2554() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"N4hr$9|djnLV!\", \"N4hr$9|djnLV!\", 50, 50, false);\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"N4hr$9|djnLV!\", \"N4hr$9|djnLV!\", 50, 50, 'Y', 'Y', (Validator) null, \"N4hr$9|djnLV!\", linkedList0, 50);\n    linkedList0.add(argumentImpl0);\n    groupImpl0.findOption(\"N4hr$9|djnLV!\");\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2554"
  },
  "test0411" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0411() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    LinkedList<SourceDestArgument> linkedList1 = new LinkedList<SourceDestArgument>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList1, \"\", \"2K1gjZtPWHU89!H-+)\", 2149, (-2255), false);\n    linkedList0.add((Object) groupImpl0);\n    GroupImpl groupImpl1 = new GroupImpl(linkedList0, \"\", \"\", (-2255), (-2255), false);\n    String string0 = groupImpl1.toString();\n}",
    "testName" : "test0411"
  },
  "test2656" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2656() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"?'OC%f`oP%tU2-'.S\", \"?'OC%f`oP%tU2-'.S\", 1, 1, true);\n    PropertyOption propertyOption0 = new PropertyOption();\n    groupImpl0.setParent(propertyOption0);\n    String string0 = groupImpl0.toString();\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2656"
  },
  "test1941" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1941() throws Throwable {\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    linkedList0.add(propertyOption0);\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"-D\", (-4288), (-1121), true);\n    String string0 = groupImpl0.toString();\n}",
    "testName" : "test1941"
  },
  "test2452" : {
    "methodSignature" : "public Option findOption(final String trigger)",
    "methodName" : "findOption",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2452() throws Throwable {\n    LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();\n    LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \" (\", \" (\", 1859, 1859, true);\n    DefaultOption defaultOption0 = new DefaultOption(\" (\", \" (\", true, \" (\", \" (\", linkedHashSet0, (Set) null, true, (Argument) null, groupImpl0, 1859);\n    linkedList0.add(defaultOption0);\n    Option option0 = groupImpl0.findOption(\" (\");\n}",
    "testName" : "test2452"
  },
  "test2451" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2451() throws Throwable {\n    LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();\n    LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \" (\", \" (\", 1859, 1859, true);\n    DefaultOption defaultOption0 = new DefaultOption(\" (\", \" (\", true, \" (\", \" (\", linkedHashSet0, (Set) null, true, (Argument) null, groupImpl0, 1859);\n    linkedList0.add(defaultOption0);\n    Option option0 = groupImpl0.findOption(\" (\");\n    groupImpl0.getMinimum();\n}",
    "testName" : "test2451"
  },
  "test2453" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2453() throws Throwable {\n    LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();\n    LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \" (\", \" (\", 1859, 1859, true);\n    DefaultOption defaultOption0 = new DefaultOption(\" (\", \" (\", true, \" (\", \" (\", linkedHashSet0, (Set) null, true, (Argument) null, groupImpl0, 1859);\n    linkedList0.add(defaultOption0);\n    Option option0 = groupImpl0.findOption(\" (\");\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2453"
  },
  "test000" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    ListIterator<String> listIterator0 = (ListIterator<String>) mock(ListIterator.class, new ViolatedAssumptionAnswer());\n    doReturn(true).when(listIterator0).hasNext();\n    doReturn(\"Argument.too.many.values\").when(listIterator0).next();\n    doReturn(\"Argument.too.many.values\").when(listIterator0).previous();\n    NumberValidator numberValidator0 = NumberValidator.getNumberInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"Argument.too.many.values\", \"Argument.too.many.values\", 1, 1, 'i', 't', numberValidator0, \"Argument.too.many.values\", linkedList0, (-2908));\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, linkedList0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Argument.too.many.values\", \"Argument.too.many.values\", 842, 842, true);\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test000"
  },
  "test001" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test001() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    ListIterator<String> listIterator0 = (ListIterator<String>) mock(ListIterator.class, new ViolatedAssumptionAnswer());\n    doReturn(true).when(listIterator0).hasNext();\n    doReturn(\"Argument.too.many.values\").when(listIterator0).next();\n    doReturn(\"Argument.too.many.values\").when(listIterator0).previous();\n    NumberValidator numberValidator0 = NumberValidator.getNumberInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"Argument.too.many.values\", \"Argument.too.many.values\", 1, 1, 'i', 't', numberValidator0, \"Argument.too.many.values\", linkedList0, (-2908));\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(sourceDestArgument0, linkedList0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Argument.too.many.values\", \"Argument.too.many.values\", 842, 842, true);\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test001"
  },
  "test0616" : {
    "methodSignature" : "public boolean canProcess(final WriteableCommandLine commandLine, final String arg)",
    "methodName" : "canProcess",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0616() throws Throwable {\n    LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();\n    LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"(\", \"(\", 1825, 1825, false);\n    DefaultOption defaultOption0 = new DefaultOption(\"(\", \"(\", false, \"(\", \"(\", linkedHashSet0, (Set) null, false, (Argument) null, groupImpl0, 1825);\n    linkedList0.add(defaultOption0);\n    GroupImpl groupImpl1 = new GroupImpl(linkedList0, \"(\", \"(\", 1825, 1825, true);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl1, linkedList0);\n    boolean boolean0 = groupImpl1.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"(\");\n}",
    "testName" : "test0616"
  },
  "test0512" : {
    "methodSignature" : "public boolean canProcess(final WriteableCommandLine commandLine, final String arg)",
    "methodName" : "canProcess",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0512() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, (String) null, (String) null, 97, 97, false);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, (String) null);\n}",
    "testName" : "test0512"
  },
  "test2658" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2658() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"?'OC%f`oP%tU2-'.S\", \"?'OC%f`oP%tU2-'.S\", 1, 1, true);\n    PropertyOption propertyOption0 = new PropertyOption();\n    groupImpl0.setParent(propertyOption0);\n    String string0 = groupImpl0.toString();\n}",
    "testName" : "test2658"
  },
  "test0513" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0513() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, (String) null, (String) null, 97, 97, false);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, (String) null);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test0513"
  },
  "test1228" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1228() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    ListIterator<String> listIterator0 = (ListIterator<String>) mock(ListIterator.class, new ViolatedAssumptionAnswer());\n    doReturn(true).when(listIterator0).hasNext();\n    doReturn(\"Argument.too.many.values\").when(listIterator0).next();\n    doReturn(\"Argument.too.many.values\").when(listIterator0).previous();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Argument.too.many.values\", \"Argument.too.many.values\", 842, 842, true);\n    PropertyOption propertyOption0 = new PropertyOption(\"Argument.too.many.values\", \"Argument.too.many.values\", 0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test1228"
  },
  "test2657" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2657() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"?'OC%f`oP%tU2-'.S\", \"?'OC%f`oP%tU2-'.S\", 1, 1, true);\n    PropertyOption propertyOption0 = new PropertyOption();\n    groupImpl0.setParent(propertyOption0);\n    String string0 = groupImpl0.toString();\n    groupImpl0.getMinimum();\n}",
    "testName" : "test2657"
  },
  "test0514" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0514() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, (String) null, (String) null, 97, 97, false);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, (String) null);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test0514"
  },
  "test1229" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1229() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    ListIterator<String> listIterator0 = (ListIterator<String>) mock(ListIterator.class, new ViolatedAssumptionAnswer());\n    doReturn(true).when(listIterator0).hasNext();\n    doReturn(\"Argument.too.many.values\").when(listIterator0).next();\n    doReturn(\"Argument.too.many.values\").when(listIterator0).previous();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Argument.too.many.values\", \"Argument.too.many.values\", 842, 842, true);\n    PropertyOption propertyOption0 = new PropertyOption(\"Argument.too.many.values\", \"Argument.too.many.values\", 0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test1229"
  },
  "test015" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test015() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Argument.missing.values\", \"\", 6837, 1910, true);\n    groupImpl0.getAnonymous();\n    groupImpl0.getDescription();\n}",
    "testName" : "test015"
  },
  "test013" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test013() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Argument.missing.values\", \"\", 6837, 1910, true);\n    groupImpl0.getAnonymous();\n    groupImpl0.getMaximum();\n}",
    "testName" : "test013"
  },
  "test014" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test014() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Argument.missing.values\", \"\", 6837, 1910, true);\n    groupImpl0.getAnonymous();\n    groupImpl0.getPreferredName();\n}",
    "testName" : "test014"
  },
  "test2350" : {
    "methodSignature" : "public List helpLines(final int depth, final Set helpSettings, final Comparator comp)",
    "methodName" : "helpLines",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2350() throws Throwable {\n    LinkedList<DisplaySetting> linkedList0 = new LinkedList<DisplaySetting>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"\", 0, (-3481), false);\n    DisplaySetting displaySetting0 = mock(DisplaySetting.class, new ViolatedAssumptionAnswer());\n    DisplaySetting displaySetting1 = mock(DisplaySetting.class, new ViolatedAssumptionAnswer());\n    linkedList0.add(displaySetting1);\n    groupImpl0.helpLines(176, displaySetting0.ALL, (Comparator) null);\n}",
    "testName" : "test2350"
  }
}