{
  "test1334" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1334() throws Throwable {\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"\", 0, 0);\n    LinkedList<String> linkedList1 = new LinkedList<String>();\n    linkedList1.add(\"\");\n    ListIterator<String> listIterator0 = linkedList1.listIterator();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test1334"
  },
  "test2147" : {
    "methodSignature" : "public void appendUsage(final StringBuffer buffer, final Set helpSettings, final Comparator comp, final String separator)",
    "methodName" : "appendUsage",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2147() throws Throwable {\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Unexpected.token\", \"Unexpected.token\", 0, 0);\n    LinkedHashSet<GroupImpl> linkedHashSet0 = new LinkedHashSet<GroupImpl>();\n    groupImpl0.appendUsage((StringBuffer) null, (Set) linkedHashSet0, (Comparator) null, \"[Unexpected.token ()]\");\n}",
    "testName" : "test2147"
  },
  "test1335" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1335() throws Throwable {\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"\", 0, 0);\n    LinkedList<String> linkedList1 = new LinkedList<String>();\n    linkedList1.add(\"\");\n    ListIterator<String> listIterator0 = linkedList1.listIterator();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test1335"
  },
  "test2865" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2865() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"Passes properties and values to the application\", (-330), (-330));\n    groupImpl0.findOption(\"Passes properties and values to the application\");\n    groupImpl0.getMinimum();\n}",
    "testName" : "test2865"
  },
  "test0720" : {
    "methodSignature" : "public boolean canProcess(final WriteableCommandLine commandLine, final String arg)",
    "methodName" : "canProcess",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0720() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"-D\", \"-D\", (-1056), (-1056));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"Passes properties and values to the application\");\n}",
    "testName" : "test0720"
  },
  "test2864" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2864() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"Passes properties and values to the application\", (-330), (-330));\n    groupImpl0.findOption(\"Passes properties and values to the application\");\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2864"
  },
  "test2660" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2660() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    DisplaySetting displaySetting0 = mock(DisplaySetting.class, new ViolatedAssumptionAnswer());\n    PropertyOption propertyOption0 = new PropertyOption();\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"ksucA'\", \"ksucA'\", (-1759), (-1759));\n    Comparator<DisplaySetting> comparator0 = (Comparator<DisplaySetting>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    List list0 = groupImpl0.helpLines((-1759), displaySetting0.ALL, comparator0);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test2660"
  },
  "test1539" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1539() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption();\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"-D\", (-363), (-363));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    groupImpl0.validate(writeableCommandLineImpl0);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test1539"
  },
  "test1538" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1538() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption();\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"-D\", (-363), (-363));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    groupImpl0.validate(writeableCommandLineImpl0);\n    groupImpl0.getDescription();\n}",
    "testName" : "test1538"
  },
  "test028" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test028() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, (String) null, (String) null, 0, 0);\n    int int0 = groupImpl0.getMaximum();\n    groupImpl0.getMinimum();\n}",
    "testName" : "test028"
  },
  "test029" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test029() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, (String) null, (String) null, 0, 0);\n    int int0 = groupImpl0.getMaximum();\n}",
    "testName" : "test029"
  },
  "test1130" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1130() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption();\n    linkedList0.add(propertyOption0);\n    PropertyOption propertyOption1 = new PropertyOption(\"\", \"\", (-1205));\n    linkedList0.add(propertyOption1);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"Passes properties and values to the application\", (-1205), (-1205));\n    LinkedList<String> linkedList1 = new LinkedList<String>();\n    linkedList1.add(\"Passes properties and values to the application\");\n    ListIterator<String> listIterator0 = linkedList1.listIterator();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList1);\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test1130"
  },
  "test3070" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3070() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"Passes properties and values to the application\", (-330), (-330));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    groupImpl0.defaults(writeableCommandLineImpl0);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test3070"
  },
  "test2557" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2557() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    DisplaySetting displaySetting0 = mock(DisplaySetting.class, new ViolatedAssumptionAnswer());\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"ks9<Au\", \"ks9<Au\", 1116, 1116);\n    List list0 = groupImpl0.helpLines(1116, displaySetting0.ALL, (Comparator) null);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test2557"
  },
  "test0412" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0412() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, (String) null, \"yjdo_:x{\", 62, 569);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, (String) null);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test0412"
  },
  "test1028" : {
    "methodSignature" : "public void process(final WriteableCommandLine commandLine, final ListIterator arguments) throws OptionException",
    "methodName" : "process",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1028() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption();\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"-D\", \"-D\", 95, 95);\n    LinkedList<String> linkedList1 = new LinkedList<String>();\n    linkedList1.add(\"-D\");\n    ListIterator<String> listIterator0 = linkedList1.listIterator();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n}",
    "testName" : "test1028"
  },
  "test1743" : {
    "methodSignature" : "public void validate(final WriteableCommandLine commandLine) throws OptionException",
    "methodName" : "validate",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1743() throws Throwable {\n    LinkedList<Object> linkedList0 = new LinkedList<Object>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"=*>cz@9R#W8%Q&d\", \"=*>cz@9R#W8%Q&d\", (-45), (-45));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    linkedList0.offer(groupImpl0);\n    // Undeclared exception!\n    groupImpl0.validate(writeableCommandLineImpl0);\n}",
    "testName" : "test1743"
  },
  "test2556" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2556() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    DisplaySetting displaySetting0 = mock(DisplaySetting.class, new ViolatedAssumptionAnswer());\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"ks9<Au\", \"ks9<Au\", 1116, 1116);\n    List list0 = groupImpl0.helpLines(1116, displaySetting0.ALL, (Comparator) null);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2556"
  },
  "test1540" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1540() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption();\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"-D\", (-363), (-363));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    groupImpl0.validate(writeableCommandLineImpl0);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test1540"
  },
  "test1541" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1541() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption();\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"-D\", (-363), (-363));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    groupImpl0.validate(writeableCommandLineImpl0);\n    groupImpl0.getPreferredName();\n}",
    "testName" : "test1541"
  },
  "test0618" : {
    "methodSignature" : "public boolean canProcess(final WriteableCommandLine commandLine, final String arg)",
    "methodName" : "canProcess",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0618() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption(\"\", \"\", 14);\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"Passes properties and values to the application\", 14, 14);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"T|QhH<[\\\"t,Cj7|!\");\n}",
    "testName" : "test0618"
  },
  "test0413" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0413() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, (String) null, \"yjdo_:x{\", 62, 569);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, (String) null);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test0413"
  },
  "test0414" : {
    "methodSignature" : "public boolean canProcess(final WriteableCommandLine commandLine, final String arg)",
    "methodName" : "canProcess",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0414() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, (String) null, \"yjdo_:x{\", 62, 569);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, (String) null);\n}",
    "testName" : "test0414"
  },
  "test1945" : {
    "methodSignature" : "public void validate(final WriteableCommandLine commandLine) throws OptionException",
    "methodName" : "validate",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1945() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption();\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"NMZ~J)|5'/3$<OP'9t]\", \"NMZ~J)|5'/3$<OP'9t]\", 41, 41);\n    LinkedList<Object> linkedList1 = new LinkedList<Object>();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList1);\n    writeableCommandLineImpl0.addSwitch(propertyOption0, true);\n    groupImpl0.validate(writeableCommandLineImpl0);\n}",
    "testName" : "test1945"
  },
  "test017" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test017() throws Throwable {\n    LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Hcw|cN^aFv%#\", \"|qXI,R?/98tI60Nb\", 982, 982);\n    groupImpl0.getAnonymous();\n    groupImpl0.getMinimum();\n}",
    "testName" : "test017"
  },
  "test015" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test015() throws Throwable {\n    LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Hcw|cN^aFv%#\", \"|qXI,R?/98tI60Nb\", 982, 982);\n    groupImpl0.getAnonymous();\n    groupImpl0.getPreferredName();\n}",
    "testName" : "test015"
  },
  "test0927" : {
    "methodSignature" : "public boolean canProcess(final WriteableCommandLine commandLine, final String arg)",
    "methodName" : "canProcess",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0927() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"DateValidator.date.OutOfRange\", \"DateValidator.date.OutOfRange\", 1626, 1626, 'l', 'l', (Validator) null, \"DateValidator.date.OutOfRange\", linkedList0, 1626);\n    linkedList0.add(argumentImpl0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"DateValidator.date.OutOfRange\", \"^>Td)Y'jfHlw,D_\", (-134), (-134));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"ecELT)\");\n}",
    "testName" : "test0927"
  },
  "test016" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test016() throws Throwable {\n    LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Hcw|cN^aFv%#\", \"|qXI,R?/98tI60Nb\", 982, 982);\n    groupImpl0.getAnonymous();\n    groupImpl0.getDescription();\n}",
    "testName" : "test016"
  },
  "test014" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test014() throws Throwable {\n    LinkedList<DefaultOption> linkedList0 = new LinkedList<DefaultOption>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Hcw|cN^aFv%#\", \"|qXI,R?/98tI60Nb\", 982, 982);\n    groupImpl0.getAnonymous();\n    groupImpl0.getMaximum();\n}",
    "testName" : "test014"
  },
  "test2351" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2351() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    linkedList0.addFirst(propertyOption0);\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"-D\", \"-D\", 0, 0);\n    String string0 = groupImpl0.toString();\n}",
    "testName" : "test2351"
  },
  "test2350" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2350() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    linkedList0.addFirst(propertyOption0);\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"-D\", \"-D\", 0, 0);\n    String string0 = groupImpl0.toString();\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2350"
  },
  "test2763" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2763() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"Passes properties and values to the application\", (-330), (-330));\n    Option option0 = groupImpl0.findOption(\"-D\");\n    groupImpl0.getMinimum();\n}",
    "testName" : "test2763"
  },
  "test2249" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2249() throws Throwable {\n    LinkedList<SourceDestArgument> linkedList0 = new LinkedList<SourceDestArgument>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, (String) null, (String) null, 285, 285);\n    LinkedHashSet<Switch> linkedHashSet0 = new LinkedHashSet<Switch>();\n    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    groupImpl0.appendUsage((StringBuffer) null, (Set) linkedHashSet0, (Comparator) comparator0, (String) null);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test2249"
  },
  "test2248" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2248() throws Throwable {\n    LinkedList<SourceDestArgument> linkedList0 = new LinkedList<SourceDestArgument>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, (String) null, (String) null, 285, 285);\n    LinkedHashSet<Switch> linkedHashSet0 = new LinkedHashSet<Switch>();\n    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    groupImpl0.appendUsage((StringBuffer) null, (Set) linkedHashSet0, (Comparator) comparator0, (String) null);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2248"
  },
  "test1231" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1231() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"-D\", \"-D\", 95, 95);\n    LinkedList<String> linkedList1 = new LinkedList<String>();\n    linkedList1.add(\"-D\");\n    ListIterator<String> listIterator0 = linkedList1.listIterator();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test1231"
  },
  "test1232" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1232() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"-D\", \"-D\", 95, 95);\n    LinkedList<String> linkedList1 = new LinkedList<String>();\n    linkedList1.add(\"-D\");\n    ListIterator<String> listIterator0 = linkedList1.listIterator();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test1232"
  },
  "test2762" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2762() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"Passes properties and values to the application\", (-330), (-330));\n    Option option0 = groupImpl0.findOption(\"-D\");\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2762"
  },
  "test2046" : {
    "methodSignature" : "public void validate(final WriteableCommandLine commandLine) throws OptionException",
    "methodName" : "validate",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2046() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"org.apache.commons.cli2.DisplaySetting\", \"org.apache.commons.cli2.option.OptionImpl\", (-1409), (-1570));\n    FileValidator fileValidator0 = FileValidator.getExistingFileInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"org.apache.commons.cli2.option.OptionImpl\", \"org.apache.commons.cli2.option.OptionImpl\", (-1409), (-1409), '1', '1', fileValidator0, \"QIZ\", linkedList0, (-1570));\n    SourceDestArgument sourceDestArgument0 = new SourceDestArgument(argumentImpl0, argumentImpl0, '\\u0000', 's', \"j~\", linkedList0);\n    linkedList0.add((ArgumentImpl) sourceDestArgument0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    GroupImpl groupImpl1 = new GroupImpl(linkedList0, \"\", \"--\", (-1570), (-1409));\n    groupImpl1.validate(writeableCommandLineImpl0);\n}",
    "testName" : "test2046"
  },
  "test2761" : {
    "methodSignature" : "public Option findOption(final String trigger)",
    "methodName" : "findOption",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2761() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"Passes properties and values to the application\", (-330), (-330));\n    Option option0 = groupImpl0.findOption(\"-D\");\n}",
    "testName" : "test2761"
  },
  "test0824" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0824() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"-D\", \"Passes properties and values to the application\", 1999, 1999);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"-D\");\n    groupImpl0.getMaximum();\n}",
    "testName" : "test0824"
  },
  "test0825" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0825() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"-D\", \"Passes properties and values to the application\", 1999, 1999);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"-D\");\n    groupImpl0.getMinimum();\n}",
    "testName" : "test0825"
  },
  "test2966" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2966() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"\", 3440, 3440);\n    boolean boolean0 = groupImpl0.isRequired();\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2966"
  },
  "test0821" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0821() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"-D\", \"Passes properties and values to the application\", 1999, 1999);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"-D\");\n    groupImpl0.getDescription();\n}",
    "testName" : "test0821"
  },
  "test1437" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1437() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"DateValidator.date.OutOfRange\", 1626, 1626, 'l', 'l', (Validator) null, \"WD vn\", linkedList0, 1626);\n    linkedList0.add(argumentImpl0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"DateValidator.date.OutOfRange\", \"^>Td)Y'jfHlw,D_\", (-134), (-134));\n    argumentImpl0.toString();\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    ListIterator<String> listIterator0 = (ListIterator<String>) mock(ListIterator.class, new ViolatedAssumptionAnswer());\n    doReturn(true, false, false).when(listIterator0).hasNext();\n    doReturn(\"--\").when(listIterator0).next();\n    doReturn(\"DateValidator.date.OutOfRange\").when(listIterator0).previous();\n    groupImpl0.process(writeableCommandLineImpl0, listIterator0);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test1437"
  },
  "test0822" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0822() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"-D\", \"Passes properties and values to the application\", 1999, 1999);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"-D\");\n    groupImpl0.getPreferredName();\n}",
    "testName" : "test0822"
  },
  "test2968" : {
    "methodSignature" : "public boolean isRequired()",
    "methodName" : "isRequired",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2968() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"\", 3440, 3440);\n    boolean boolean0 = groupImpl0.isRequired();\n}",
    "testName" : "test2968"
  },
  "test0823" : {
    "methodSignature" : "public boolean canProcess(final WriteableCommandLine commandLine, final String arg)",
    "methodName" : "canProcess",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0823() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"-D\", \"Passes properties and values to the application\", 1999, 1999);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(propertyOption0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"-D\");\n}",
    "testName" : "test0823"
  },
  "test2967" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2967() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"\", 3440, 3440);\n    boolean boolean0 = groupImpl0.isRequired();\n    groupImpl0.getMinimum();\n}",
    "testName" : "test2967"
  },
  "test002" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test002() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"DateValidator.date.OutOfRange\", \"^>Td)Y'jfHlw,D_\", (-134), (-134));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    writeableCommandLineImpl0.addSwitch(groupImpl0, true);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test002"
  },
  "test003" : {
    "methodSignature" : "public String getPreferredName()",
    "methodName" : "getPreferredName",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test003() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"DateValidator.date.OutOfRange\", \"^>Td)Y'jfHlw,D_\", (-134), (-134));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    writeableCommandLineImpl0.addSwitch(groupImpl0, true);\n    groupImpl0.getPreferredName();\n}",
    "testName" : "test003"
  },
  "test3172" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3172() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    NumberValidator numberValidator0 = NumberValidator.getCurrencyInstance();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"'\", \"'\", 281, 281, 'o', 'o', numberValidator0, \"'\", linkedList0, 'o');\n    linkedList0.add(argumentImpl0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"'\", \"Unexpected.token\", '\\u0000', '\\u0000');\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    groupImpl0.defaults(writeableCommandLineImpl0);\n    groupImpl0.getDescription();\n}",
    "testName" : "test3172"
  },
  "test0311" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0311() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    ArgumentImpl argumentImpl0 = new ArgumentImpl(\"\", \"DateValidator.date.OutOfRange\", 1626, 1626, 'l', 'l', (Validator) null, \">>Td)'jfHlw,D_\", linkedList0, 1626);\n    linkedList0.add(argumentImpl0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"DateValidator.date.OutOfRange\", \">>Td)'jfHlw,D_\", (-134), (-134));\n    groupImpl0.toString();\n    groupImpl0.getMaximum();\n}",
    "testName" : "test0311"
  },
  "test1642" : {
    "methodSignature" : "public void validate(final WriteableCommandLine commandLine) throws OptionException",
    "methodName" : "validate",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1642() throws Throwable {\n    LinkedList<Command> linkedList0 = new LinkedList<Command>();\n    LinkedHashSet<Switch> linkedHashSet0 = new LinkedHashSet<Switch>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, (String) null, \"-^=mE?U6H#JG\\\"|.\\\\x\", 93, 93);\n    Command command0 = new Command(\"|\", \"-^=mE?U6H#JG\\\"|.\\\\x\", linkedHashSet0, true, (Argument) null, groupImpl0, 33);\n    linkedList0.add(command0);\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(command0, linkedList0);\n    groupImpl0.validate(writeableCommandLineImpl0);\n}",
    "testName" : "test1642"
  },
  "test2452" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2452() throws Throwable {\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"\", 0, 0);\n    LinkedHashSet<GroupImpl> linkedHashSet0 = new LinkedHashSet<GroupImpl>();\n    List list0 = groupImpl0.helpLines(0, linkedHashSet0, (Comparator) null);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2452"
  },
  "test2453" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2453() throws Throwable {\n    LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"\", \"\", 0, 0);\n    LinkedHashSet<GroupImpl> linkedHashSet0 = new LinkedHashSet<GroupImpl>();\n    List list0 = groupImpl0.helpLines(0, linkedHashSet0, (Comparator) null);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test2453"
  },
  "test3069" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3069() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"Passes properties and values to the application\", (-330), (-330));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    groupImpl0.defaults(writeableCommandLineImpl0);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test3069"
  },
  "test000" : {
    "methodSignature" : "public String getDescription()",
    "methodName" : "getDescription",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"DateValidator.date.OutOfRange\", \"^>Td)Y'jfHlw,D_\", (-134), (-134));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    writeableCommandLineImpl0.addSwitch(groupImpl0, true);\n    groupImpl0.getDescription();\n}",
    "testName" : "test000"
  },
  "test0516" : {
    "methodSignature" : "public boolean canProcess(final WriteableCommandLine commandLine, final String arg)",
    "methodName" : "canProcess",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0516() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = PropertyOption.INSTANCE;\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"-D\", \"-D\", (-1056), (-1056));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    boolean boolean0 = groupImpl0.canProcess((WriteableCommandLine) writeableCommandLineImpl0, \"-D\");\n}",
    "testName" : "test0516"
  },
  "test001" : {
    "methodSignature" : "public int getMinimum()",
    "methodName" : "getMinimum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test001() throws Throwable {\n    LinkedList<ArgumentImpl> linkedList0 = new LinkedList<ArgumentImpl>();\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"DateValidator.date.OutOfRange\", \"^>Td)Y'jfHlw,D_\", (-134), (-134));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    writeableCommandLineImpl0.addSwitch(groupImpl0, true);\n    groupImpl0.getMinimum();\n}",
    "testName" : "test001"
  },
  "test1844" : {
    "methodSignature" : "public void validate(final WriteableCommandLine commandLine) throws OptionException",
    "methodName" : "validate",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1844() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    PropertyOption propertyOption0 = new PropertyOption();\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"Passes properties and values to the application\", \"-D\", (-363), (-363));\n    WriteableCommandLineImpl writeableCommandLineImpl0 = new WriteableCommandLineImpl(groupImpl0, linkedList0);\n    writeableCommandLineImpl0.addSwitch(propertyOption0, true);\n    groupImpl0.validate(writeableCommandLineImpl0);\n}",
    "testName" : "test1844"
  },
  "test2659" : {
    "methodSignature" : "public int getMaximum()",
    "methodName" : "getMaximum",
    "className" : "org.apache.commons.cli2.option.GroupImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2659() throws Throwable {\n    LinkedList<PropertyOption> linkedList0 = new LinkedList<PropertyOption>();\n    DisplaySetting displaySetting0 = mock(DisplaySetting.class, new ViolatedAssumptionAnswer());\n    PropertyOption propertyOption0 = new PropertyOption();\n    linkedList0.add(propertyOption0);\n    GroupImpl groupImpl0 = new GroupImpl(linkedList0, \"ksucA'\", \"ksucA'\", (-1759), (-1759));\n    Comparator<DisplaySetting> comparator0 = (Comparator<DisplaySetting>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    List list0 = groupImpl0.helpLines((-1759), displaySetting0.ALL, comparator0);\n    groupImpl0.getMaximum();\n}",
    "testName" : "test2659"
  }
}