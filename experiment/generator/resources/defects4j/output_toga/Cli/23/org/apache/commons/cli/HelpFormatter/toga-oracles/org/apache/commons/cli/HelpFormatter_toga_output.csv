project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test002,"public void test002() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test003,"public void test003() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test004,"public void test004() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test006,"public void test006() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test017,"public void test017() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setLongOptPrefix(""\n"");
    assertEquals(""\n"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test028,"public void test028() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(3, int0);
}",0,"assertEquals(0, int0)"
project,0,test029,"public void test029() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test0210,"public void test0210() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test0212,"public void test0212() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test0213,"public void test0213() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test0315,"public void test0315() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setNewLine(""arg"");
    assertEquals(""arg"", helpFormatter0.getNewLine());
}",0,
project,0,test0416,"public void test0416() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setLeftPadding(74);
    assertEquals(74, helpFormatter0.defaultLeftPad);
}",0,
project,0,test0517,"public void test0517() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setArgName(""-"");
    assertEquals(""-"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test0618,"public void test0618() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    helpFormatter0.printHelp(74, ""--"", ""\n"", options0, ""\n"", false);
    assertEquals(""\n"", helpFormatter0.getNewLine());
}",0,
project,0,test0719,"public void test0719() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setSyntaxPrefix(""--"");
    assertEquals(""--"", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test0820,"public void test0820() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    // Undeclared exception!
    try {
        helpFormatter0.printHelp(3, ""\n"", ""\n"", options0, ""\n"");
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // Text too long for line - throwing exception to avoid infinite loop [CLI-162]:
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test0921,"public void test0921() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    helpFormatter0.printHelp(""arg"", options0);
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test0922,"public void test0922() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    helpFormatter0.printHelp(""arg"", options0);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test1023,"public void test1023() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setWidth(74);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test1024,"public void test1024() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setWidth(74);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test1025,"public void test1025() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setWidth(74);
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test1026,"public void test1026() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setWidth(74);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test1027,"public void test1027() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setWidth(74);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test1130,"public void test1130() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptPrefix(""usage: "");
    assertEquals(""usage: "", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test1231,"public void test1231() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test1232,"public void test1232() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test1233,"public void test1233() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test1235,"public void test1235() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test1237,"public void test1237() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test1338,"public void test1338() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getArgName();
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test1342,"public void test1342() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getArgName();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test1343,"public void test1343() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getArgName();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test1344,"public void test1344() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getArgName();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test1445,"public void test1445() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(""usage: "");
    // Undeclared exception!
    try {
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 74, ""-"", ""-"", (Options) null, 74, 74, ""-"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test1546,"public void test1546() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setDescPadding(3);
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test1549,"public void test1549() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setDescPadding(3);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test1550,"public void test1550() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setDescPadding(3);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test1551,"public void test1551() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setDescPadding(3);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test1552,"public void test1552() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setDescPadding(3);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test1653,"public void test1653() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    helpFormatter0.printHelp(""-"", ""-"", options0, ""-"");
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test1654,"public void test1654() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    helpFormatter0.printHelp(""-"", ""-"", options0, ""-"");
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test1755,"public void test1755() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test1756,"public void test1756() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test1757,"public void test1757() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test1759,"public void test1759() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test1761,"public void test1761() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test1863,"public void test1863() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    // Undeclared exception!
    try {
        helpFormatter0.printHelp(""--"", (Options) null, true);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test1964,"public void test1964() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test1965,"public void test1965() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(""--"", string0);
}",0,
project,0,test1968,"public void test1968() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test1969,"public void test1969() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test2071,"public void test2071() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test2075,"public void test2075() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test2076,"public void test2076() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test2077,"public void test2077() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test2178,"public void test2178() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test2179,"public void test2179() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test2181,"public void test2181() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test2184,"public void test2184() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test2285,"public void test2285() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Options options1 = options0.addOption(""arg"", ""arg"", true, ""\n"");
    options1.addOption(""r"", ""--"", true, ""--"");
    helpFormatter0.printHelp(74, ""--"", ""arg"", options1, ""\n"", true);
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test2286,"public void test2286() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Options options1 = options0.addOption(""arg"", ""arg"", true, ""\n"");
    options1.addOption(""r"", ""--"", true, ""--"");
    helpFormatter0.printHelp(74, ""--"", ""arg"", options1, ""\n"", true);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test2387,"public void test2387() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test2388,"public void test2388() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test2389,"public void test2389() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test2391,"public void test2391() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test2392,"public void test2392() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test2494,"public void test2494() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test2495,"public void test2495() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test2496,"public void test2496() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test2499,"public void test2499() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test24100,"public void test24100() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test25101,"public void test25101() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    // Undeclared exception!
    try {
        helpFormatter0.printHelp((String) null, options0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cmdLineSyntax not provided
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test26102,"public void test26102() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    // Undeclared exception!
    try {
        helpFormatter0.printHelp("""", (Options) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cmdLineSyntax not provided
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test27103,"public void test27103() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    OptionGroup optionGroup0 = new OptionGroup();
    Option option0 = new Option("""", true, ""\n"");
    optionGroup0.addOption(option0);
    Option option1 = new Option(""arg"", true, ""-"");
    OptionGroup optionGroup1 = optionGroup0.addOption(option1);
    options0.addOptionGroup(optionGroup1);
    helpFormatter0.printHelp(74, ""--"", ""arg"", options0, ""\n"", true);
    assertEquals(1, helpFormatter0.getLeftPadding());
}",0,"assertEquals(0, helpFormatter0.getLeftPadding())"
project,0,test28104,"public void test28104() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option(""arg"", true, ""\n"");
    OptionGroup optionGroup0 = new OptionGroup();
    OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    optionGroup1.setRequired(true);
    options0.addOptionGroup(optionGroup1);
    // Undeclared exception!
    try {
        helpFormatter0.printUsage((PrintWriter) null, 1, ""-"", options0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // Text too long for line - throwing exception to avoid infinite loop [CLI-162]:        - -arg <arg>
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test29105,"public void test29105() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Options options1 = options0.addOption((String) null, true, ""--"");
    // Undeclared exception!
    try {
        helpFormatter0.printHelp(14, ""-"", (String) null, options1, (String) null, true);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // Text too long for line - throwing exception to avoid infinite loop [CLI-162]:                    --
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test30106,"public void test30106() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Options options1 = options0.addOption(""arg"", false, ""--"");
    helpFormatter0.printHelp(74, ""--"", ""arg"", options1, ""\n"", true);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test31107,"public void test31107() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.defaultLeftPad = 74;
    Options options0 = new Options();
    Options options1 = options0.addOption(""arg"", ""arg"", true, ""\n"");
    // Undeclared exception!
    try {
        helpFormatter0.printHelp(74, ""--"", ""arg"", options1, ""\n"", true);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // Text too long for line - throwing exception to avoid infinite loop [CLI-162]:
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test32108,"public void test32108() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Options options1 = options0.addOption(""arg"", false, (String) null);
    helpFormatter0.printHelp(74, ""\n"", ""usage: "", options1, ""\n"", false);
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test33109,"public void test33109() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.findWrapPos(""\n"", (-1), 1);
    assertEquals(0, int0);
}",0,
project,0,test33110,"public void test33110() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.findWrapPos(""\n"", (-1), 1);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test34113,"public void test34113() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertNull(string0);
}",0,
project,0,test34114,"public void test34114() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test34116,"public void test34116() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test34117,"public void test34117() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test34119,"public void test34119() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test35121,"public void test35121() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim("""");
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test35122,"public void test35122() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim("""");
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test35123,"public void test35123() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim("""");
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test35127,"public void test35127() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim("""");
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test35128,"public void test35128() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim("""");
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
