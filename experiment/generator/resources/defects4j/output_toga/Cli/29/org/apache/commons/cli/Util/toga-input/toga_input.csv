focal_method,test_prefix,docstring
"static String stripLeadingHyphens(String str) {
    if (str == null) {
        return null;
    }
    if (str.startsWith(""--"")) {
        return str.substring(2, str.length());
    } else if (str.startsWith(""-"")) {
        return str.substring(1, str.length());
    }
    return str;
}","public void test11() throws Throwable {
    String string0 = Util.stripLeadingHyphens(""-"");
    assertNotNull(string0);
}","/**
 * Remove the hyphens from the begining of <code>str</code> and
 * return the new String.
 *
 * @param str The string from which the hyphens should be removed.
 *
 * @return the new String.
 */"
"static String stripLeadingHyphens(String str) {
    if (str == null) {
        return null;
    }
    if (str.startsWith(""--"")) {
        return str.substring(2, str.length());
    } else if (str.startsWith(""-"")) {
        return str.substring(1, str.length());
    }
    return str;
}","public void test23() throws Throwable {
    String string0 = Util.stripLeadingHyphens((String) null);
    assertNull(string0);
}","/**
 * Remove the hyphens from the begining of <code>str</code> and
 * return the new String.
 *
 * @param str The string from which the hyphens should be removed.
 *
 * @return the new String.
 */"
"static String stripLeadingHyphens(String str) {
    if (str == null) {
        return null;
    }
    if (str.startsWith(""--"")) {
        return str.substring(2, str.length());
    } else if (str.startsWith(""-"")) {
        return str.substring(1, str.length());
    }
    return str;
}","public void test34() throws Throwable {
    String string0 = Util.stripLeadingHyphens(""--"");
    assertEquals("""", string0);
}","/**
 * Remove the hyphens from the begining of <code>str</code> and
 * return the new String.
 *
 * @param str The string from which the hyphens should be removed.
 *
 * @return the new String.
 */"
"static String stripLeadingHyphens(String str) {
    if (str == null) {
        return null;
    }
    if (str.startsWith(""--"")) {
        return str.substring(2, str.length());
    } else if (str.startsWith(""-"")) {
        return str.substring(1, str.length());
    }
    return str;
}","public void test45() throws Throwable {
    String string0 = Util.stripLeadingHyphens(""b*h{p} jzFE"");
    assertEquals(""b*h{p} jzFE"", string0);
}","/**
 * Remove the hyphens from the begining of <code>str</code> and
 * return the new String.
 *
 * @param str The string from which the hyphens should be removed.
 *
 * @return the new String.
 */"
"static String stripLeadingAndTrailingQuotes(String str) {
    if (str.startsWith(""\"""")) {
        str = str.substring(1, str.length());
    }
    int length = str.length();
    if (str.endsWith(""\"""")) {
        str = str.substring(0, length - 1);
    }
    return str;
}","public void test56() throws Throwable {
    String string0 = Util.stripLeadingAndTrailingQuotes(""\""ED.Cahr"");
    assertEquals(""ED.Cahr"", string0);
}","/**
 * Remove the leading and trailing quotes from <code>str</code>.
 * E.g. if str is '""one two""', then 'one two' is returned.
 *
 * @param str The string from which the leading and trailing quotes
 * should be removed.
 *
 * @return The string without the leading and trailing quotes.
 */"
"static String stripLeadingAndTrailingQuotes(String str) {
    if (str.startsWith(""\"""")) {
        str = str.substring(1, str.length());
    }
    int length = str.length();
    if (str.endsWith(""\"""")) {
        str = str.substring(0, length - 1);
    }
    return str;
}","public void test67() throws Throwable {
    String string0 = Util.stripLeadingAndTrailingQuotes(""~ejLg;=`mCF'-$5=e\"""");
    assertEquals(""~ejLg;=`mCF'-$5=e"", string0);
}","/**
 * Remove the leading and trailing quotes from <code>str</code>.
 * E.g. if str is '""one two""', then 'one two' is returned.
 *
 * @param str The string from which the leading and trailing quotes
 * should be removed.
 *
 * @return The string without the leading and trailing quotes.
 */"
