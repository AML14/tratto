project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test001,"public void test001() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test003,"public void test003() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test004,"public void test004() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test005,"public void test005() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test007,"public void test007() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test018,"public void test018() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setLongOptPrefix(""The option '"");
    assertEquals(""The option '"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test029,"public void test029() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test0210,"public void test0210() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test0213,"public void test0213() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test0214,"public void test0214() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test0215,"public void test0215() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test0216,"public void test0216() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test0317,"public void test0317() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setLongOptSeparator(""}x6OyW~+K|5,$kZ"");
    assertEquals(""}x6OyW~+K|5,$kZ"", helpFormatter0.getLongOptSeparator());
}",0,
project,0,test0418,"public void test0418() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setNewLine(""--"");
    assertEquals(""--"", helpFormatter0.getNewLine());
}",0,
project,0,test0519,"public void test0519() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setLeftPadding(32);
    assertEquals(32, helpFormatter0.defaultLeftPad);
}",0,
project,0,test0620,"public void test0620() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setArgName(""usage: "");
    assertEquals(""usage: "", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test0721,"public void test0721() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    // Undeclared exception!
    helpFormatter0.printHelp(0, ""i[.c[|\""b 7HH6%_uZ"", ""i[.c[|\""b 7HH6%_uZ"", options0, ""i[.c[|\""b 7HH6%_uZ"");
}",0,
project,0,test0822,"public void test0822() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setSyntaxPrefix(""G/o"");
    assertEquals(""G/o"", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test0923,"public void test0923() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptSeparator();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test0924,"public void test0924() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptSeparator();
    assertEquals("" "", string0);
}",0,assertNotNull(string0)
project,0,test0926,"public void test0926() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptSeparator();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test0928,"public void test0928() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptSeparator();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test0930,"public void test0930() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptSeparator();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test1031,"public void test1031() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setWidth(2703);
    assertEquals(2703, helpFormatter0.defaultWidth);
}",0,
project,0,test1132,"public void test1132() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptPrefix(""-"");
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test1133,"public void test1133() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptPrefix(""-"");
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test1134,"public void test1134() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptPrefix(""-"");
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test1135,"public void test1135() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptPrefix(""-"");
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test1136,"public void test1136() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptPrefix(""-"");
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test1138,"public void test1138() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptPrefix(""-"");
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test1240,"public void test1240() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test1241,"public void test1241() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(1, int0);
}",0,
project,0,test1244,"public void test1244() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test1245,"public void test1245() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test1246,"public void test1246() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test1247,"public void test1247() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test1348,"public void test1348() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(""usage: "");
    Options options0 = new Options();
    // Undeclared exception!
    try {
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 3, "" "", ""arg"", options0, 3, (-454), "", "");
        fail(""Expecting exception: NegativeArraySizeException"");
    } catch (NegativeArraySizeException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test1449,"public void test1449() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setDescPadding(1202);
    assertEquals(1202, helpFormatter0.defaultDescPad);
}",0,
project,0,test1551,"public void test1551() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    helpFormatter0.printHelp("" "", "" "", options0, "" "");
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test1652,"public void test1652() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test1653,"public void test1653() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test1654,"public void test1654() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test1658,"public void test1658() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test1659,"public void test1659() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test1660,"public void test1660() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test1761,"public void test1761() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test1764,"public void test1764() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test1765,"public void test1765() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test1766,"public void test1766() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test1767,"public void test1767() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test1869,"public void test1869() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test1870,"public void test1870() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test1872,"public void test1872() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test1873,"public void test1873() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test1876,"public void test1876() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test1977,"public void test1977() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test1978,"public void test1978() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test1979,"public void test1979() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test1981,"public void test1981() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test1983,"public void test1983() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test2186,"public void test2186() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test2187,"public void test2187() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test2189,"public void test2189() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test2190,"public void test2190() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test2192,"public void test2192() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test2193,"public void test2193() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test2294,"public void test2294() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test2295,"public void test2295() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test2297,"public void test2297() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test2299,"public void test2299() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test22100,"public void test22100() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test22101,"public void test22101() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test23102,"public void test23102() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    // Undeclared exception!
    try {
        helpFormatter0.printHelp((String) null, options0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cmdLineSyntax not provided
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test24103,"public void test24103() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    // Undeclared exception!
    try {
        helpFormatter0.printHelp("""", options0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cmdLineSyntax not provided
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test25104,"public void test25104() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Option option0 = new Option(""arg"", ""\n"", true, ""-"");
    Options options0 = new Options();
    OptionGroup optionGroup0 = new OptionGroup();
    OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    Option option1 = new Option("""", ""NO_ARGS_ALLOWED"");
    optionGroup1.addOption(option1);
    Options options1 = options0.addOptionGroup(optionGroup1);
    helpFormatter0.printHelp(""--"", ""--"", options1, ""arg"", true);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test26106,"public void test26106() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Option option0 = new Option(""arg"", ""\n"", true, ""-"");
    Options options0 = new Options();
    OptionGroup optionGroup0 = new OptionGroup();
    OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    optionGroup1.setRequired(true);
    Options options1 = options0.addOptionGroup(optionGroup1);
    helpFormatter0.printHelp(""--"", ""--"", options1, ""arg"", true);
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test26107,"public void test26107() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Option option0 = new Option(""arg"", ""\n"", true, ""-"");
    Options options0 = new Options();
    OptionGroup optionGroup0 = new OptionGroup();
    OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    optionGroup1.setRequired(true);
    Options options1 = options0.addOptionGroup(optionGroup1);
    helpFormatter0.printHelp(""--"", ""--"", options1, ""arg"", true);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test26108,"public void test26108() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Option option0 = new Option(""arg"", ""\n"", true, ""-"");
    Options options0 = new Options();
    OptionGroup optionGroup0 = new OptionGroup();
    OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    optionGroup1.setRequired(true);
    Options options1 = options0.addOptionGroup(optionGroup1);
    helpFormatter0.printHelp(""--"", ""--"", options1, ""arg"", true);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test27109,"public void test27109() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option((String) null, ""-"");
    Options options1 = options0.addOption(option0);
    helpFormatter0.printHelp(helpFormatter0.defaultOptPrefix, helpFormatter0.defaultOptPrefix, options1, helpFormatter0.defaultOptPrefix, true);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test28110,"public void test28110() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Option option0 = new Option("""", true, """");
    Options options0 = new Options();
    Options options1 = options0.addOption(option0);
    option0.setArgName(""-"");
    helpFormatter0.printHelp(""arg"", """", options1, """", true);
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test29112,"public void test29112() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Option option0 = new Option("""", true, """");
    Options options0 = new Options();
    options0.addOption(option0);
    option0.setArgName("""");
    helpFormatter0.printHelp(""H-A.{cE0ms:r5`O,"", """", options0, """", true);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test30113,"public void test30113() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(""usage: "");
    Options options0 = new Options();
    Options options1 = options0.addOption((String) null, ""usage: "", true, "":mi2k**mQ\""bJc}Y"");
    helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, ""[ARG...]"", options1);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test30115,"public void test30115() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(""usage: "");
    Options options0 = new Options();
    Options options1 = options0.addOption((String) null, ""usage: "", true, "":mi2k**mQ\""bJc}Y"");
    helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, ""[ARG...]"", options1);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test31116,"public void test31116() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option("""", (String) null);
    Options options1 = options0.addOption(option0);
    helpFormatter0.printHelp("" "", options1, false);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test31117,"public void test31117() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option("""", (String) null);
    Options options1 = options0.addOption(option0);
    helpFormatter0.printHelp("" "", options1, false);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test31118,"public void test31118() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option("""", (String) null);
    Options options1 = options0.addOption(option0);
    helpFormatter0.printHelp("" "", options1, false);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test32120,"public void test32120() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Options options1 = options0.addOption("""", true, ""\n"");
    helpFormatter0.printHelp(""s'zn"", ""usage: "", options1, ""s'zn"", true);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test33121,"public void test33121() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    StringBuffer stringBuffer0 = new StringBuffer();
    // Undeclared exception!
    try {
        helpFormatter0.renderWrappedText(stringBuffer0, 3, 3, ""cmdLineSyntax not provided"");
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test34122,"public void test34122() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    StringBuffer stringBuffer0 = new StringBuffer(74);
    // Undeclared exception!
    try {
        helpFormatter0.renderWrappedText(stringBuffer0, (-2302), (-2302), ""\n"");
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test35123,"public void test35123() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.findWrapPos(""\n"", (-1), 1);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test35124,"public void test35124() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.findWrapPos(""\n"", (-1), 1);
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test35127,"public void test35127() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.findWrapPos(""\n"", (-1), 1);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test35128,"public void test35128() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.findWrapPos(""\n"", (-1), 1);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test36129,"public void test36129() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test36131,"public void test36131() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test36133,"public void test36133() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,
project,0,test36135,"public void test36135() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test36136,"public void test36136() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test36137,"public void test36137() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test37138,"public void test37138() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    StringBuffer stringBuffer0 = new StringBuffer(74);
    // Undeclared exception!
    helpFormatter0.renderWrappedText(stringBuffer0, 0, 0, ""\n"");
}",0,
