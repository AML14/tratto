org.apache.commons.math3.optimization.linear.SimplexSolver,@Test(timeout = 4000)
public void test066() throws Throwable {
    SimplexSolver simplexSolver0 = new SimplexSolver();
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = (double) 100;
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 100.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    Double[] doubleArray1 = new Double[2];
    doubleArray1[0] = (Double) 100.0;
    doubleArray1[1] = (Double) 100.0;
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);
    Relationship relationship0 = Relationship.LEQ;
    LinearConstraint linearConstraint0 = mock(LinearConstraint.class, new ViolatedAssumptionAnswer());
    doReturn(openMapRealVector0, openMapRealVector0).when(linearConstraint0).getCoefficients();
    doReturn(relationship0, relationship0).when(linearConstraint0).getRelationship();
    doReturn(100.0, 100.0, 100.0, (double) 100).when(linearConstraint0).getValue();
    linkedList0.add(linearConstraint0);
    GoalType goalType0 = GoalType.MAXIMIZE;
    simplexSolver0.optimize(linearObjectiveFunction0, linkedList0, goalType0, true);
    simplexSolver0.doOptimize();
    simplexSolver0.getIterations();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.optimization.linear.SimplexSolver,@Test(timeout = 4000)
public void test099() throws Throwable {
    SimplexSolver simplexSolver0 = new SimplexSolver();
    double[] doubleArray0 = new double[1];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 100.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    Double[] doubleArray1 = new Double[2];
    doubleArray1[0] = (Double) 100.0;
    doubleArray1[1] = (Double) 100.0;
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);
    Relationship relationship0 = Relationship.LEQ;
    Relationship relationship1 = Relationship.EQ;
    LinearConstraint linearConstraint0 = mock(LinearConstraint.class, new ViolatedAssumptionAnswer());
    doReturn(openMapRealVector0, openMapRealVector0, openMapRealVector0).when(linearConstraint0).getCoefficients();
    doReturn(relationship0, relationship0, relationship1).when(linearConstraint0).getRelationship();
    doReturn(100.0, 100.0, 100.0, (double) 100, doubleArray1[0]).when(linearConstraint0).getValue();
    linkedList0.add(linearConstraint0);
    GoalType goalType0 = GoalType.MAXIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 100.0, 100);
    LinearConstraint linearConstraint1 = mock(LinearConstraint.class, new ViolatedAssumptionAnswer());
    doReturn(openMapRealVector0, openMapRealVector0).when(linearConstraint1).getCoefficients();
    doReturn(relationship1, relationship1).when(linearConstraint1).getRelationship();
    doReturn(100.0, doubleArray1[1], 1.0E-12, (double) 100).when(linearConstraint1).getValue();
    linkedList0.offerLast(linearConstraint1);
    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 100.0, 100);
    SimplexTableau simplexTableau2 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (double) doubleArray1[0], 100);
    simplexSolver0.solvePhase1(simplexTableau2);
    simplexSolver0.getIterations();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.optimization.linear.SimplexSolver,@Test(timeout = 4000)
public void test1111() throws Throwable {
    SimplexSolver simplexSolver0 = new SimplexSolver();
    double[] doubleArray0 = new double[3];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 100.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    Double[] doubleArray1 = new Double[2];
    doubleArray1[0] = (Double) 100.0;
    doubleArray1[1] = (Double) 100.0;
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);
    Relationship relationship0 = Relationship.GEQ;
    LinearConstraint linearConstraint0 = mock(LinearConstraint.class, new ViolatedAssumptionAnswer());
    doReturn(openMapRealVector0).when(linearConstraint0).getCoefficients();
    doReturn(relationship0).when(linearConstraint0).getRelationship();
    doReturn(100.0, 100.0).when(linearConstraint0).getValue();
    linkedList0.add(linearConstraint0);
    GoalType goalType0 = GoalType.MAXIMIZE;
    LinearConstraint linearConstraint1 = mock(LinearConstraint.class, new ViolatedAssumptionAnswer());
    doReturn(openMapRealVector0).when(linearConstraint1).getCoefficients();
    doReturn(relationship0).when(linearConstraint1).getRelationship();
    doReturn(100.0, doubleArray1[1]).when(linearConstraint1).getValue();
    linkedList0.offerLast(linearConstraint1);
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0, 100);
    simplexSolver0.solvePhase1(simplexTableau0);
    simplexSolver0.getIterations();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
