org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test000() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(1785.980494615, 227.421396);
    Ceil ceil0 = new Ceil();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(1024, (UnivariateRealFunction) ceil0, (-4088.1339917), (double) 1024, allowedSolution0);
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test012() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver(0.0);
    Rint rint0 = new Rint();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = illinoisSolver0.solve(31, (UnivariateRealFunction) rint0, (double) 31, 1.176342548272881E-8, (-1.5707963267948966), allowedSolution0);
    illinoisSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test024() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
    UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(3333, univariateRealFunction0, (-2993.2715265), 549.77032, allowedSolution0);
    pegasusSolver0.getMax();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test036() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
    Identity identity0 = new Identity();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = illinoisSolver0.solve(2432, (UnivariateRealFunction) identity0, (-1.5707963267948966), 0.0, allowedSolution0);
    illinoisSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test048() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-864.2), (-2125.2));
    Log1p log1p0 = new Log1p();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = illinoisSolver0.solve(2, (UnivariateRealFunction) log1p0, 0.0, (double) 2, 2012.456450328, allowedSolution0);
    illinoisSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test0510() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver();
    Gaussian gaussian0 = new Gaussian(23, 0.14982303977012634, 4009.763325487);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    double double0 = pegasusSolver0.solve(23, univariateRealFunction0, (-3044.2), 4009.763325487, (-0.1666666567325592));
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test0613() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
    double double0 = regulaFalsiSolver0.doSolve();
    regulaFalsiSolver0.getMax();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test0614() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
    double double0 = regulaFalsiSolver0.doSolve();
    regulaFalsiSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test0715() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    pegasusSolver0.solve(3333, (UnivariateRealFunction) sigmoid0, (-2993.2715265), 549.77032, allowedSolution0);
    double double0 = pegasusSolver0.doSolve();
    pegasusSolver0.getMax();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test2029() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(3128.7, (-360.0));
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(38, (UnivariateRealFunction) sinc0, 46.042916482279, 951.9258407496, 951.9258407496, allowedSolution0);
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test2131() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(5.549536715928331E21, 372.48719237534914);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(503, (UnivariateRealFunction) sinc0, 46.73805687525366, 951.9258407496, 951.9258407496, allowedSolution0);
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test2233() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462), 2725.29567932);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-2760.7), (double) 5, (-873.93), allowedSolution0);
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test2335() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(3128.7, (-360.0));
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
    double double0 = pegasusSolver0.solve(62, (UnivariateRealFunction) sinc0, 46.042916482279, (double) 62, (double) 62, allowedSolution0);
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test2437() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(106, (UnivariateRealFunction) sinc0, (-360.07737924462), 3128.7, 3128.7, allowedSolution0);
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test2539() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(1.304E19, 1.304E19, 1.304E19);
    Cbrt cbrt0 = new Cbrt();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(156, (UnivariateRealFunction) cbrt0, (double) (-1720), (double) 156, allowedSolution0);
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test2641() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462), 2725.29567932);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.3550045623978706), 951.9258407496, 951.9258407496, allowedSolution0);
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test2743() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.0), (-360.0));
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    pegasusSolver0.solve(38, (UnivariateRealFunction) sinc0, 46.04291648228, 951.9258407496, 951.9258407496, allowedSolution0);
    double double0 = pegasusSolver0.doSolve();
    pegasusSolver0.getMin();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test2845() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(1.592266061490975E-31);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(45, (UnivariateRealFunction) sinc0, 1.0E-6, 2435.9021, 2435.9021, allowedSolution0);
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test2947() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(1.792510290788597);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-808.9), 2719.82, (double) 8);
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test3049() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2159.7025852, 2211.438, (-1222.0));
    Sigmoid sigmoid0 = new Sigmoid(2211.438, (-1.0));
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = regulaFalsiSolver0.solve(654, (UnivariateRealFunction) sigmoid0, (-1.0), 2417.36304, (-1521.557701816037), allowedSolution0);
    regulaFalsiSolver0.getMin();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test3151() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(1.3217759706711633E-11, 1.3217759706711633E-11, 1.3217759706711633E-11);
    Cbrt cbrt0 = new Cbrt();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(517, (UnivariateRealFunction) cbrt0, (-1206.289937), (double) 156, allowedSolution0);
    pegasusSolver0.getMax();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test3253() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
    Sinh sinh0 = new Sinh();
    illinoisSolver0.solve(2432, (UnivariateRealFunction) sinh0, (-1.5707963267948966), (double) 2432);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
