{
  "test124124" : {
    "methodSignature" : "public static double sign(final double x)",
    "methodName" : "sign",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test124124() throws Throwable {\n    MathUtils.indicator((short) 3394);\n    MathUtils.binomialCoefficientDouble(0, 0);\n    MathUtils.sign((short) 1);\n    MathUtils.sign(0.0);\n}",
    "testName" : "test124124"
  },
  "test0000" : {
    "methodSignature" : "public static int distanceInf(int[] p1, int[] p2)",
    "methodName" : "distanceInf",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    int[] intArray0 = new int[3];\n    int int0 = 2618;\n    intArray0[0] = 2618;\n    int int1 = 2178;\n    intArray0[1] = 2178;\n    intArray0[2] = 14;\n    MathUtils.distance(intArray0, intArray0);\n    MathUtils.distanceInf(intArray0, (int[]) null);\n}",
    "testName" : "test0000"
  },
  "test0088" : {
    "methodSignature" : "public static int mulAndCheck(int x, int y)",
    "methodName" : "mulAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0088() throws Throwable {\n    int[] intArray0 = new int[0];\n    MathUtils.distance1(intArray0, intArray0);\n    MathUtils.distanceInf(intArray0, intArray0);\n    MathUtils.round(3892.7F, 0, 0);\n    MathUtils.pow((long) 0, 0);\n    MathUtils.sinh((-6077.737308));\n    MathUtils.binomialCoefficientLog(0, 0);\n    MathUtils.distanceInf(intArray0, intArray0);\n    MathUtils.factorial(0);\n    MathUtils.gcd(1726, 1726);\n    MathUtils.sign(0);\n    MathUtils.indicator((byte) 14);\n    MathUtils.lcm(393, (byte) 1);\n    double[] doubleArray0 = new double[8];\n    doubleArray0[0] = (double) 0;\n    doubleArray0[1] = (double) (byte) 14;\n    doubleArray0[2] = (-6077.737308);\n    doubleArray0[3] = (double) 0;\n    doubleArray0[4] = 0.0;\n    doubleArray0[5] = 0.0;\n    doubleArray0[6] = (double) 1L;\n    doubleArray0[7] = (-1276.21716603516);\n    MathUtils.distance1(doubleArray0, doubleArray0);\n    MathUtils.mulAndCheck(393, Integer.MIN_VALUE);\n}",
    "testName" : "test0088"
  },
  "test107107" : {
    "methodSignature" : "public static double distance(int[] p1, int[] p2)",
    "methodName" : "distance",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107107() throws Throwable {\n    MathUtils.sign(3579L);\n    short short0 = (short) 1;\n    MathUtils.indicator((short) 1);\n    MathUtils.sinh(0.0);\n    double double0 = 0.0;\n    MathUtils.equals(0.0, 0.0, 1.0);\n    MathUtils.subAndCheck(1L, (long) (short) 1);\n    MathUtils.sinh(1557.348148513444);\n    MathUtils.nextAfter(0.0, 0L);\n    MathUtils.pow((long) (short) 1, 3579L);\n    int[] intArray0 = null;\n    MathUtils.distance((int[]) null, (int[]) null);\n}",
    "testName" : "test107107"
  },
  "test03636" : {
    "methodSignature" : "public static boolean equals(double x, double y, double eps)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03636() throws Throwable {\n    MathUtils.round(2103.4850674, 12, 0);\n    MathUtils.indicator(Double.NEGATIVE_INFINITY);\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = (double) 12;\n    doubleArray0[1] = (double) 0;\n    doubleArray0[2] = Double.NEGATIVE_INFINITY;\n    doubleArray0[3] = Double.NEGATIVE_INFINITY;\n    doubleArray0[4] = 2152.347714268;\n    doubleArray0[5] = (double) 0;\n    double[] doubleArray1 = new double[5];\n    doubleArray1[0] = (double) 0;\n    doubleArray1[1] = 2103.4850674;\n    doubleArray1[2] = 2103.4850674;\n    doubleArray1[3] = 2103.4850674;\n    doubleArray1[4] = 2103.4850674;\n    MathUtils.equals(doubleArray0, doubleArray1);\n    MathUtils.equals(2152.347714268, (-747.315824), 3483.606487);\n}",
    "testName" : "test03636"
  },
  "test02424" : {
    "methodSignature" : "public static int hash(double value)",
    "methodName" : "hash",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02424() throws Throwable {\n    MathUtils.round(Double.NaN, (-2742));\n    MathUtils.mulAndCheck((long) (-2742), (-1718L));\n    MathUtils.indicator(Double.NaN);\n    MathUtils.log(4710756L, 1327.174);\n    MathUtils.hash(Double.NaN);\n}",
    "testName" : "test02424"
  },
  "test130130" : {
    "methodSignature" : "public static long binomialCoefficient(final int n, final int k)",
    "methodName" : "binomialCoefficient",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test130130() throws Throwable {\n    MathUtils.cosh(Double.NEGATIVE_INFINITY);\n    MathUtils.indicator(1783.7365F);\n    MathUtils.hash(Double.POSITIVE_INFINITY);\n    MathUtils.addAndCheck((long) 2146435072, 2343L);\n    MathUtils.binomialCoefficient((-1297), 2146435072);\n}",
    "testName" : "test130130"
  },
  "test04848" : {
    "methodSignature" : "public static boolean equals(double x, double y, double eps)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04848() throws Throwable {\n    MathUtils.log(1537.936217, 1537.936217);\n    MathUtils.indicator(1.0);\n    MathUtils.sign((-3476.95F));\n    double[] doubleArray0 = new double[1];\n    doubleArray0[0] = 1537.936217;\n    MathUtils.normalizeArray(doubleArray0, 0.0);\n    MathUtils.addAndCheck(18, 18);\n    MathUtils.factorial(18);\n    MathUtils.factorialDouble(36);\n    BigInteger bigInteger0 = BigInteger.TEN;\n    BigInteger bigInteger1 = BigInteger.TEN;\n    bigInteger0.andNot(bigInteger1);\n    BigInteger bigInteger2 = bigInteger0.andNot(bigInteger1);\n    BigInteger bigInteger3 = MathUtils.pow(bigInteger0, 61L);\n    MockRandom mockRandom0 = new MockRandom();\n    BigInteger bigInteger4 = new BigInteger(18, (-429), mockRandom0);\n    bigInteger3.or(bigInteger4);\n    bigInteger0.compareTo(bigInteger1);\n    bigInteger3.subtract(bigInteger0);\n    bigInteger3.xor(bigInteger2);\n    MathUtils.pow(bigInteger3, 1143);\n    int[] intArray0 = new int[0];\n    MathUtils.distance1(intArray0, intArray0);\n    MathUtils.pow(0, 1765);\n    MathUtils.binomialCoefficient(0, (-790));\n    MathUtils.equals(0.0, (double) 61L, 1.0);\n}",
    "testName" : "test04848"
  },
  "test01212" : {
    "methodSignature" : "public static double distanceInf(double[] p1, double[] p2)",
    "methodName" : "distanceInf",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01212() throws Throwable {\n    MathUtils.binomialCoefficient(983, (-6));\n    double[] doubleArray0 = new double[8];\n    doubleArray0[0] = (double) 1L;\n    doubleArray0[1] = (double) 983;\n    doubleArray0[2] = (double) 983;\n    doubleArray0[3] = (double) (-6);\n    doubleArray0[4] = (double) (-6);\n    doubleArray0[5] = (double) (-6);\n    doubleArray0[6] = (double) 983;\n    doubleArray0[7] = (double) 1L;\n    MathUtils.distanceInf(doubleArray0, doubleArray0);\n}",
    "testName" : "test01212"
  },
  "test05656" : {
    "methodSignature" : "public static byte indicator(final byte x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05656() throws Throwable {\n    MathUtils.equals(281.79584528882276, 281.79584528882276);\n    MathUtils.pow(2672, 367);\n    MathUtils.sign((short) (-1847));\n    int[] intArray0 = new int[1];\n    intArray0[0] = 1303;\n    int[] intArray1 = new int[4];\n    intArray1[0] = 1303;\n    intArray1[1] = 0;\n    intArray1[2] = 0;\n    intArray1[3] = 1303;\n    MathUtils.distance1(intArray0, intArray1);\n    MathUtils.indicator(Float.NaN);\n    MathUtils.equals((double) 1303, (-767.435), 1303);\n    MathUtils.sign(653);\n    MathUtils.sign((byte) (-95));\n    double[] doubleArray0 = new double[0];\n    MathUtils.distance(doubleArray0, doubleArray0);\n    MathUtils.distance(doubleArray0, doubleArray0);\n    MathUtils.distanceInf(doubleArray0, doubleArray0);\n    MathUtils.indicator((byte) (-7));\n}",
    "testName" : "test05656"
  },
  "test06868" : {
    "methodSignature" : "public static BigInteger pow(final BigInteger k, int e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06868() throws Throwable {\n    int int0 = 6;\n    MathUtils.binomialCoefficientDouble(6, 6);\n    MathUtils.pow((BigInteger) null, 157);\n}",
    "testName" : "test06868"
  },
  "test02828" : {
    "methodSignature" : "public static int pow(final int k, int e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02828() throws Throwable {\n    MathUtils.round((-1.0F), 20);\n    MathUtils.normalizeAngle((-1.0F), (-1001.174039789));\n    MathUtils.lcm(20, 1);\n    MathUtils.gcd(1, 1);\n    MathUtils.addAndCheck(0, 0);\n    MathUtils.gcd(1, 0);\n    MathUtils.indicator((short) 0);\n    MathUtils.indicator((byte) 0);\n    int[] intArray0 = new int[8];\n    intArray0[0] = 0;\n    intArray0[1] = 20;\n    intArray0[2] = 1;\n    intArray0[3] = (-488);\n    intArray0[4] = 1;\n    intArray0[5] = 1;\n    intArray0[6] = (int) (byte) 1;\n    intArray0[7] = (-452);\n    MathUtils.distance1(intArray0, intArray0);\n    MathUtils.pow((int) (byte) 1, (long) 20);\n    MathUtils.sign((float) 1);\n    MathUtils.pow(343, 0);\n}",
    "testName" : "test02828"
  },
  "test113113" : {
    "methodSignature" : "public static long pow(final long k, long e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113113() throws Throwable {\n    MathUtils.pow(0L, 1930L);\n}",
    "testName" : "test113113"
  },
  "test01616" : {
    "methodSignature" : "public static int addAndCheck(int x, int y)",
    "methodName" : "addAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01616() throws Throwable {\n    int int0 = (-2147483646);\n    MathUtils.addAndCheck((-2147483646), (-2147483646));\n}",
    "testName" : "test01616"
  },
  "test08484" : {
    "methodSignature" : "public static long binomialCoefficient(final int n, final int k)",
    "methodName" : "binomialCoefficient",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08484() throws Throwable {\n    MathUtils.binomialCoefficientLog(119, 0);\n    MathUtils.sign((byte) 0);\n    MathUtils.indicator((-1746L));\n    MathUtils.equals(0.5, 0.0, 0.0);\n    MathUtils.binomialCoefficient(0, 0);\n}",
    "testName" : "test08484"
  },
  "test07272" : {
    "methodSignature" : "public static double binomialCoefficientLog(final int n, final int k)",
    "methodName" : "binomialCoefficientLog",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07272() throws Throwable {\n    double[] doubleArray0 = new double[0];\n    MathUtils.distanceInf(doubleArray0, doubleArray0);\n    MathUtils.equals(0.0, 0.0);\n    MathUtils.cosh((-293.882628828));\n    MathUtils.compareTo((-293.882628828), 152.86311, 2.1407898231843912E127);\n    int int0 = 0;\n    MathUtils.factorialDouble(0);\n    MathUtils.binomialCoefficientLog(0, 0);\n    MathUtils.sinh(0.0);\n    MathUtils.sign(0);\n    MathUtils.subAndCheck((long) 0, (long) 0);\n    MathUtils.indicator((short) (-1383));\n    MathUtils.sign(0.0F);\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.binomialCoefficientLog((-1124), (-1854));\n}",
    "testName" : "test07272"
  },
  "test04040" : {
    "methodSignature" : "public static byte indicator(final byte x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04040() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = 815.7295178732;\n    doubleArray0[1] = 2073.3644789007762;\n    doubleArray0[2] = Double.NEGATIVE_INFINITY;\n    doubleArray0[3] = (-237.7317364645);\n    doubleArray0[4] = (-1111.5573821302069);\n    doubleArray0[5] = 4.9E-324;\n    MathUtils.distance(doubleArray0, doubleArray0);\n    MathUtils.indicator((byte) 0);\n    MathUtils.indicator((byte) (-109));\n}",
    "testName" : "test04040"
  },
  "test141151" : {
    "methodSignature" : "public static double round(double x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test141151() throws Throwable {\n    MathUtils.indicator((byte) (-114));\n    double[] doubleArray0 = new double[4];\n    doubleArray0[0] = (double) (byte) (-1);\n    doubleArray0[1] = (double) (byte) (-114);\n    doubleArray0[2] = (double) (byte) (-114);\n    doubleArray0[3] = (double) (byte) (-1);\n    double[] doubleArray1 = MathUtils.normalizeArray(doubleArray0, (-744.58655));\n    MathUtils.distanceInf(doubleArray1, doubleArray0);\n    MathUtils.sinh(2123.0);\n    MathUtils.gcd(0, 0);\n    MathUtils.indicator(2455.788F);\n    MathUtils.round((double) (byte) (-114), 0, (int) (byte) (-114));\n}",
    "testName" : "test141151"
  },
  "test121121" : {
    "methodSignature" : "public static float round(float x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121121() throws Throwable {\n    int int0 = 1;\n    MathUtils.pow(1, 646L);\n    MathUtils.factorialDouble(1);\n    MathUtils.compareTo((-1666.062), (-2577.90655932433), 646L);\n    MathUtils.indicator((-262.2159F));\n    MathUtils.round(0.0F, 1, (-1346));\n}",
    "testName" : "test121121"
  },
  "test0011" : {
    "methodSignature" : "public static double[] normalizeArray(double[] values, double normalizedSum) throws ArithmeticException, IllegalArgumentException",
    "methodName" : "normalizeArray",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    MathUtils.binomialCoefficient(4191, 4191);\n    MathUtils.factorialDouble(4191);\n    double[] doubleArray0 = new double[1];\n    doubleArray0[0] = Double.POSITIVE_INFINITY;\n    MathUtils.normalizeArray(doubleArray0, 1457.319362);\n}",
    "testName" : "test0011"
  },
  "test0099" : {
    "methodSignature" : "public static double factorialLog(final int n)",
    "methodName" : "factorialLog",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0099() throws Throwable {\n    MathUtils.mulAndCheck((-423), (-423));\n    MathUtils.lcm(4287, 4287);\n    MathUtils.subAndCheck((long) 4287, 121645100408832023L);\n    MathUtils.indicator((short) 6);\n    MathUtils.indicator(3833.72265635);\n    int int0 = 2;\n    MathUtils.factorialDouble(2);\n    double[] doubleArray0 = new double[2];\n    doubleArray0[0] = (double) 178929;\n    doubleArray0[1] = (double) 4287;\n    MathUtils.normalizeArray(doubleArray0, (-4.9E-324));\n    MathUtils.pow((long) (short) 6, 2);\n    MathUtils.mulAndCheck(4287, (int) (short) 6);\n    MathUtils.sign(178929);\n    MathUtils.compareTo(1.0, (-423), (-121645100408827736L));\n    MathUtils.pow((-649), 1);\n    MathUtils.indicator((double) 4287);\n    int int1 = 399;\n    MathUtils.gcd((-649), 399);\n    // Undeclared exception!\n    MathUtils.factorialLog(178929);\n}",
    "testName" : "test0099"
  },
  "test09292" : {
    "methodSignature" : "public static double factorialDouble(final int n)",
    "methodName" : "factorialDouble",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09292() throws Throwable {\n    BigInteger bigInteger0 = BigInteger.ZERO;\n    BigInteger bigInteger1 = BigInteger.ONE;\n    bigInteger0.xor(bigInteger1);\n    MathUtils.pow(bigInteger0, bigInteger0);\n    int int0 = (-1);\n    MathUtils.factorialDouble((-1));\n}",
    "testName" : "test09292"
  },
  "test06060" : {
    "methodSignature" : "public static int pow(final int k, long e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06060() throws Throwable {\n    double[] doubleArray0 = new double[1];\n    doubleArray0[0] = 10.0;\n    MathUtils.equals(doubleArray0, doubleArray0);\n    int int0 = 0;\n    MathUtils.round(1829.5243766, 0);\n    int int1 = 0;\n    MathUtils.pow(0, (-1145L));\n}",
    "testName" : "test06060"
  },
  "test03232" : {
    "methodSignature" : "public static double[] normalizeArray(double[] values, double normalizedSum) throws ArithmeticException, IllegalArgumentException",
    "methodName" : "normalizeArray",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03232() throws Throwable {\n    MathUtils.sign(Float.NaN);\n    MathUtils.equals((double) Float.NaN, 0.0);\n    double[] doubleArray0 = new double[2];\n    doubleArray0[0] = (double) Float.NaN;\n    doubleArray0[1] = 0.0;\n    MathUtils.distance(doubleArray0, doubleArray0);\n    MathUtils.scalb(Float.NaN, Integer.MIN_VALUE);\n    MathUtils.sign((byte) 1);\n    MathUtils.sign(0.0F);\n    int int0 = 0;\n    MathUtils.indicator(0);\n    MathUtils.normalizeArray(doubleArray0, Double.NaN);\n}",
    "testName" : "test03232"
  },
  "test08888" : {
    "methodSignature" : "public static long mulAndCheck(long a, long b)",
    "methodName" : "mulAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08888() throws Throwable {\n    MathUtils.sign(0.0);\n    double[] doubleArray0 = new double[4];\n    doubleArray0[0] = 2.0;\n    doubleArray0[1] = 0.0;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = 0.0;\n    MathUtils.distance(doubleArray0, doubleArray0);\n    MathUtils.binomialCoefficient(0, 0);\n    MathUtils.log(1.0, 3316.384);\n    MathUtils.mulAndCheck(715L, 1L);\n}",
    "testName" : "test08888"
  },
  "test102102" : {
    "methodSignature" : "public static long pow(final long k, int e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102102() throws Throwable {\n    int int0 = 0;\n    MathUtils.pow(0, 0);\n    MathUtils.pow((long) 0, (-1823));\n}",
    "testName" : "test102102"
  },
  "test02020" : {
    "methodSignature" : "public static double nextAfter(double d, double direction)",
    "methodName" : "nextAfter",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02020() throws Throwable {\n    MathUtils.indicator((byte) 63);\n    MathUtils.factorial((byte) 1);\n    MathUtils.subAndCheck(1L, 1943L);\n    MathUtils.nextAfter((byte) 1, (-1778.349425));\n    MathUtils.indicator((-1463L));\n    MathUtils.gcd((byte) 1, (byte) 63);\n    MathUtils.nextAfter((byte) 1, 1);\n}",
    "testName" : "test02020"
  },
  "test04444" : {
    "methodSignature" : "public static int distance1(int[] p1, int[] p2)",
    "methodName" : "distance1",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04444() throws Throwable {\n    MathUtils.factorialDouble(0);\n    MathUtils.sign((-1697.76));\n    MathUtils.factorialDouble(0);\n    MathUtils.sign((-3545L));\n    MathUtils.sign((-1017));\n    MathUtils.round((-22.0F), (-1017));\n    int[] intArray0 = new int[7];\n    intArray0[0] = 0;\n    intArray0[1] = 0;\n    intArray0[2] = (-1017);\n    intArray0[3] = 0;\n    intArray0[4] = 15;\n    intArray0[5] = (-1017);\n    intArray0[6] = 0;\n    MathUtils.distance1(intArray0, intArray0);\n}",
    "testName" : "test04444"
  },
  "test07676" : {
    "methodSignature" : "public static int distance1(int[] p1, int[] p2)",
    "methodName" : "distance1",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07676() throws Throwable {\n    int int0 = 0;\n    MathUtils.factorialDouble(0);\n    int[] intArray0 = null;\n    MathUtils.distance1((int[]) null, (int[]) null);\n}",
    "testName" : "test07676"
  },
  "test129129" : {
    "methodSignature" : "public static boolean equals(double[] x, double[] y)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test129129() throws Throwable {\n    MathUtils.equals((double[]) null, (double[]) null);\n}",
    "testName" : "test129129"
  },
  "test05252" : {
    "methodSignature" : "public static double distance(double[] p1, double[] p2)",
    "methodName" : "distance",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05252() throws Throwable {\n    int[] intArray0 = new int[7];\n    intArray0[0] = 0;\n    intArray0[1] = 4095;\n    intArray0[2] = (-94);\n    intArray0[3] = 0;\n    intArray0[4] = 0;\n    intArray0[5] = 1280;\n    intArray0[6] = (-1685);\n    MathUtils.distance(intArray0, intArray0);\n    MathUtils.round((double) 0, 0);\n    MathUtils.distance(intArray0, intArray0);\n    MathUtils.round((-528.18268876409), (-2957), 0);\n    double[] doubleArray0 = new double[2];\n    doubleArray0[0] = (double) (-1685);\n    doubleArray0[1] = (double) (-94);\n    MathUtils.normalizeArray(doubleArray0, 1280);\n    MathUtils.factorialDouble(1280);\n    MathUtils.distance(doubleArray0, doubleArray0);\n}",
    "testName" : "test05252"
  },
  "test09696" : {
    "methodSignature" : "public static double round(double x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09696() throws Throwable {\n    MathUtils.sinh(2012.178);\n    int int0 = (-2602);\n    MathUtils.round(2012.178, (-2602), (-2602));\n}",
    "testName" : "test09696"
  },
  "test06464" : {
    "methodSignature" : "public static long pow(final long k, long e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06464() throws Throwable {\n    int int0 = 1608;\n    MathUtils.pow(1608, (long) 1608);\n    MathUtils.pow((long) 1608, (-1L));\n}",
    "testName" : "test06464"
  },
  "test110110" : {
    "methodSignature" : "public static boolean equals(double x, double y, double eps)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110110() throws Throwable {\n    MathUtils.sign((short) 0);\n    BigInteger bigInteger0 = BigInteger.TEN;\n    MathUtils.pow(bigInteger0, (int) (short) 0);\n    MathUtils.mulAndCheck((long) (short) 0, 0L);\n    MathUtils.equals((double) (short) 0, (double) (short) 0, (-3193.0));\n}",
    "testName" : "test110110"
  },
  "test133133" : {
    "methodSignature" : "public static BigInteger pow(final BigInteger k, BigInteger e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test133133() throws Throwable {\n    MathUtils.sign(1L);\n    BigInteger bigInteger0 = BigInteger.TEN;\n    byte[] byteArray0 = new byte[8];\n    byteArray0[0] = (byte) 0;\n    byteArray0[1] = (byte) (-1);\n    byteArray0[2] = (byte) 0;\n    byteArray0[3] = (byte) 0;\n    byteArray0[4] = (byte) (-104);\n    byteArray0[5] = (byte) 1;\n    byteArray0[6] = (byte) 0;\n    byteArray0[7] = (byte) 3;\n    BigInteger bigInteger1 = new BigInteger(byteArray0);\n    bigInteger0.compareTo(bigInteger1);\n    MathUtils.pow(bigInteger0, bigInteger0);\n}",
    "testName" : "test133133"
  },
  "test08080" : {
    "methodSignature" : "public static double binomialCoefficientLog(final int n, final int k)",
    "methodName" : "binomialCoefficientLog",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08080() throws Throwable {\n    MathUtils.lcm(1503, 0);\n    MathUtils.indicator((byte) 95);\n    MathUtils.binomialCoefficientLog(1503, (-141));\n}",
    "testName" : "test08080"
  },
  "test118118" : {
    "methodSignature" : "public static BigInteger pow(final BigInteger k, int e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118118() throws Throwable {\n    BigInteger bigInteger0 = BigInteger.ZERO;\n    MathUtils.pow(bigInteger0, (-1189));\n}",
    "testName" : "test118118"
  },
  "test140150" : {
    "methodSignature" : "public static double binomialCoefficientLog(final int n, final int k)",
    "methodName" : "binomialCoefficientLog",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test140150() throws Throwable {\n    MathUtils.indicator((-2757.917F));\n    float float0 = MathUtils.round((-2757.917F), (-551), 0);\n    int int0 = MathUtils.sign((-551));\n    int[] intArray0 = new int[4];\n    intArray0[0] = 0;\n    intArray0[1] = 0;\n    intArray0[2] = (-1);\n    int int1 = MathUtils.distanceInf(intArray0, intArray0);\n    double double0 = MathUtils.log(2443.8207085413, (-608.6319869));\n    byte byte0 = MathUtils.indicator((byte) (-93));\n    BigInteger bigInteger0 = MathUtils.pow((BigInteger) null, (long) 0);\n    MathUtils.mulAndCheck(0L, 87178291200L);\n    byte byte1 = MathUtils.sign((byte) (-93));\n    int int2 = MathUtils.sign(2);\n    double double1 = MathUtils.indicator(0.0);\n    MathUtils.indicator((long) 0);\n    int int3 = MathUtils.gcd((-1), 1);\n    double double2 = MathUtils.scalb((-362.4093135705), 2147483646);\n    long long0 = MathUtils.pow((long) (-1), 2);\n    double double3 = MathUtils.binomialCoefficientLog(2, (-1));\n}",
    "testName" : "test140150"
  },
  "test122122" : {
    "methodSignature" : "public static double scalb(final double d, final int scaleFactor)",
    "methodName" : "scalb",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test122122() throws Throwable {\n    MathUtils.factorialDouble(0);\n    int[] intArray0 = new int[4];\n    intArray0[0] = 0;\n    intArray0[1] = 2115;\n    intArray0[2] = 0;\n    intArray0[3] = 0;\n    MathUtils.distance1(intArray0, intArray0);\n    MathUtils.compareTo(603.2648814542638, 1909.016823, (-3213.8));\n    MathUtils.scalb((-1533.94840061867), 1769);\n}",
    "testName" : "test122122"
  },
  "test0022" : {
    "methodSignature" : "public static int gcd(final int p, final int q)",
    "methodName" : "gcd",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0022() throws Throwable {\n    int[] intArray0 = new int[4];\n    intArray0[0] = 0;\n    intArray0[1] = (-3904);\n    intArray0[2] = (-2771);\n    intArray0[3] = 61;\n    MathUtils.distance(intArray0, intArray0);\n    MathUtils.lcm((-2771), (-2771));\n    Random.setNextRandom(1140);\n    MathUtils.mulAndCheck(1L, (long) 61);\n    MathUtils.equals(454.63004, (double) (-3904), 61);\n    MathUtils.indicator((long) (-2771));\n    MathUtils.binomialCoefficientDouble(1120, (-2771));\n    MathUtils.subAndCheck((long) 0, 4287L);\n    MathUtils.pow(61, 2771);\n    MathUtils.sign((byte) 52);\n    double[] doubleArray0 = new double[9];\n    doubleArray0[0] = (double) 473063909;\n    doubleArray0[1] = (double) 4287L;\n    doubleArray0[2] = 6.283185307179586;\n    doubleArray0[3] = (double) (byte) 1;\n    doubleArray0[4] = (double) 1140;\n    doubleArray0[5] = (double) (byte) 1;\n    doubleArray0[6] = 1420.9131513;\n    doubleArray0[7] = (double) (byte) 1;\n    doubleArray0[8] = (double) 1120;\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.binomialCoefficientLog(61, (-2771));\n    MathUtils.gcd((-422), 1);\n}",
    "testName" : "test0022"
  },
  "test105105" : {
    "methodSignature" : "public static int pow(final int k, int e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105105() throws Throwable {\n    MathUtils.sign(Float.NaN);\n    MathUtils.pow(17, 0);\n}",
    "testName" : "test105105"
  },
  "test01313" : {
    "methodSignature" : "public static int indicator(final int x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01313() throws Throwable {\n    MathUtils.sign((byte) (-86));\n    MathUtils.binomialCoefficientDouble(808, 804);\n    double[] doubleArray0 = new double[8];\n    doubleArray0[0] = (double) (byte) (-86);\n    doubleArray0[1] = (double) 808;\n    doubleArray0[2] = (double) 808;\n    doubleArray0[3] = (double) (byte) (-86);\n    doubleArray0[4] = (double) 804;\n    doubleArray0[5] = (double) (byte) (-1);\n    doubleArray0[6] = (double) 804;\n    doubleArray0[7] = (double) 804;\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.subAndCheck(808, 804);\n    MathUtils.indicator((short) 9);\n    MockRandom mockRandom0 = new MockRandom(804);\n    mockRandom0.nextDouble();\n    BigInteger bigInteger0 = BigInteger.probablePrime((short) 9, mockRandom0);\n    bigInteger0.shortValueExact();\n    MathUtils.pow(bigInteger0, 808);\n    MathUtils.normalizeArray(doubleArray0, 4);\n    MathUtils.indicator(790);\n}",
    "testName" : "test01313"
  },
  "test06969" : {
    "methodSignature" : "public static int distance1(int[] p1, int[] p2)",
    "methodName" : "distance1",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06969() throws Throwable {\n    MathUtils.round(0.0F, 0, 0);\n    MathUtils.hash((double) 0);\n    MathUtils.mulAndCheck((long) 0, 1375L);\n    MathUtils.indicator((double) 0);\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = (-497.4288227);\n    doubleArray0[1] = (double) 0;\n    doubleArray0[2] = (double) 1375L;\n    MathUtils.distanceInf(doubleArray0, doubleArray0);\n    int[] intArray0 = new int[9];\n    intArray0[0] = 0;\n    intArray0[1] = 0;\n    intArray0[2] = 0;\n    intArray0[3] = 0;\n    intArray0[4] = 0;\n    intArray0[5] = 0;\n    intArray0[6] = 0;\n    intArray0[7] = 0;\n    intArray0[8] = 0;\n    int[] intArray1 = new int[1];\n    intArray1[0] = 0;\n    MathUtils.distance1(intArray0, intArray1);\n}",
    "testName" : "test06969"
  },
  "test03737" : {
    "methodSignature" : "public static long factorial(final int n)",
    "methodName" : "factorial",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03737() throws Throwable {\n    MathUtils.nextAfter(2760.41998, 2760.41998);\n    MathUtils.indicator(200);\n    int int0 = 16;\n    int int1 = 1;\n    MathUtils.mulAndCheck(16, 1);\n    MathUtils.mulAndCheck(16, 0);\n    double[] doubleArray0 = new double[0];\n    MathUtils.hash(doubleArray0);\n    MathUtils.factorial(200);\n}",
    "testName" : "test03737"
  },
  "test04545" : {
    "methodSignature" : "public static double distance1(double[] p1, double[] p2)",
    "methodName" : "distance1",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04545() throws Throwable {\n    int[] intArray0 = new int[5];\n    intArray0[0] = 0;\n    int int0 = 0;\n    intArray0[1] = 0;\n    intArray0[2] = 4194304;\n    intArray0[3] = (-2008);\n    intArray0[4] = 196;\n    MathUtils.distanceInf(intArray0, intArray0);\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = (double) (-2008);\n    doubleArray0[1] = (double) (-2008);\n    doubleArray0[2] = (double) 196;\n    MathUtils.distance1(doubleArray0, (double[]) null);\n}",
    "testName" : "test04545"
  },
  "test08989" : {
    "methodSignature" : "public static double factorialDouble(final int n)",
    "methodName" : "factorialDouble",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08989() throws Throwable {\n    double[] doubleArray0 = new double[2];\n    doubleArray0[0] = (-4049.55459018);\n    doubleArray0[1] = (-1952.7);\n    double[] doubleArray1 = new double[6];\n    doubleArray1[0] = 0.0;\n    doubleArray1[1] = (-1952.7);\n    doubleArray1[2] = (-1952.7);\n    doubleArray1[3] = (-1952.7);\n    doubleArray1[4] = (-1952.7);\n    doubleArray1[5] = (-1952.7);\n    MathUtils.distanceInf(doubleArray0, doubleArray1);\n    MathUtils.round(0.0F, 0);\n    MathUtils.equals(doubleArray1, doubleArray1);\n    MathUtils.normalizeAngle((-763.86184399), 0.0);\n    MathUtils.indicator((long) 0);\n    MathUtils.cosh((-1952.7));\n    MathUtils.factorialDouble((-955));\n}",
    "testName" : "test08989"
  },
  "test132132" : {
    "methodSignature" : "public static BigInteger pow(final BigInteger k, int e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test132132() throws Throwable {\n    int[] intArray0 = new int[6];\n    intArray0[0] = (-770);\n    intArray0[1] = 66;\n    intArray0[2] = (-2571);\n    intArray0[3] = (-1452);\n    intArray0[4] = 1;\n    intArray0[5] = 2146932120;\n    MathUtils.distance(intArray0, intArray0);\n    byte[] byteArray0 = new byte[8];\n    byteArray0[0] = (byte) 16;\n    byteArray0[1] = (byte) 1;\n    byteArray0[2] = (byte) 33;\n    byteArray0[3] = (byte) 116;\n    byteArray0[4] = (byte) 0;\n    byteArray0[5] = (byte) 101;\n    byteArray0[6] = (byte) (-13);\n    byteArray0[7] = (byte) 1;\n    BigInteger bigInteger0 = new BigInteger(byteArray0);\n    MathUtils.pow(bigInteger0, (-770));\n}",
    "testName" : "test132132"
  },
  "test02525" : {
    "methodSignature" : "public static double log(double base, double x)",
    "methodName" : "log",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02525() throws Throwable {\n    MathUtils.log((-1.0), (-1.0));\n    MathUtils.subAndCheck((-1335L), 1L);\n    MathUtils.lcm((-1), (-1));\n    MathUtils.sign((short) (-677));\n    BigInteger bigInteger0 = BigInteger.TEN;\n    bigInteger0.abs();\n    Object object0 = new Object();\n    bigInteger0.equals(object0);\n    bigInteger0.toString(1623);\n    bigInteger0.clearBit(1623);\n    MathUtils.pow(bigInteger0, 1);\n    MathUtils.hash((-1.0));\n    MathUtils.indicator((short) (-2030));\n    MathUtils.log(3418.296159571848, (-3438.2159));\n}",
    "testName" : "test02525"
  },
  "test05757" : {
    "methodSignature" : "public static double binomialCoefficientLog(final int n, final int k)",
    "methodName" : "binomialCoefficientLog",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05757() throws Throwable {\n    int int0 = 132;\n    MathUtils.lcm(132, 132);\n    MathUtils.hash(3541.11136656);\n    MathUtils.nextAfter(0.0, 0.0);\n    MathUtils.pow(1168244762, (long) 1168244762);\n    MathUtils.binomialCoefficientLog(0, 132);\n}",
    "testName" : "test05757"
  },
  "test01717" : {
    "methodSignature" : "public static double log(double base, double x)",
    "methodName" : "log",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01717() throws Throwable {\n    MathUtils.indicator(1479);\n    MathUtils.indicator(0);\n    MathUtils.gcd(1, (-2293));\n    BigInteger bigInteger0 = BigInteger.TEN;\n    BigInteger bigInteger1 = BigInteger.ZERO;\n    bigInteger1.toString();\n    BigInteger bigInteger2 = bigInteger1.mod(bigInteger0);\n    bigInteger0.gcd(bigInteger1);\n    bigInteger0.multiply(bigInteger2);\n    bigInteger0.add(bigInteger1);\n    bigInteger0.negate();\n    bigInteger0.shiftRight(1);\n    bigInteger0.byteValueExact();\n    bigInteger0.shortValueExact();\n    MathUtils.pow(bigInteger0, bigInteger0);\n    bigInteger0.isProbablePrime(647);\n    MathUtils.binomialCoefficientLog(17, 0);\n    MathUtils.nextAfter(0, 0);\n    MathUtils.log((short) 10, 4.9E-324);\n}",
    "testName" : "test01717"
  },
  "test119119" : {
    "methodSignature" : "public static long indicator(final long x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119119() throws Throwable {\n    MathUtils.binomialCoefficientLog(162, 0);\n    MathUtils.equals((-2146.7753742034997), 1.0, 1.0);\n    MathUtils.indicator((long) 0);\n}",
    "testName" : "test119119"
  },
  "test111111" : {
    "methodSignature" : "public static double factorialLog(final int n)",
    "methodName" : "factorialLog",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111111() throws Throwable {\n    MathUtils.nextAfter(2655.65282576038, 72.0);\n    double[] doubleArray0 = new double[4];\n    doubleArray0[0] = 2655.65282576038;\n    doubleArray0[1] = 2655.65282576038;\n    doubleArray0[2] = 72.0;\n    doubleArray0[3] = 2655.65282576038;\n    MathUtils.equals(doubleArray0, (double[]) null);\n    MathUtils.factorialLog(0);\n    MathUtils.sign((byte) 89);\n    MathUtils.sinh(2655.65282576038);\n    MathUtils.sign(2335);\n    BigInteger bigInteger0 = BigInteger.ZERO;\n    bigInteger0.floatValue();\n    bigInteger0.toByteArray();\n    BigInteger bigInteger1 = BigInteger.TEN;\n    bigInteger0.subtract(bigInteger1);\n    bigInteger0.longValue();\n    bigInteger0.add(bigInteger1);\n    Object object0 = new Object();\n    bigInteger0.equals(object0);\n    Object object1 = new Object();\n    bigInteger0.equals(object1);\n    MathUtils.pow(bigInteger0, bigInteger0);\n    MathUtils.sign((short) 3);\n    MathUtils.cosh(2655.65282576038);\n    MathUtils.indicator((byte) 1);\n    MathUtils.factorialLog(2335);\n    MathUtils.lcm(2335, 1863);\n    MathUtils.factorialLog(0);\n}",
    "testName" : "test111111"
  },
  "test04949" : {
    "methodSignature" : "public static double distance1(double[] p1, double[] p2)",
    "methodName" : "distance1",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04949() throws Throwable {\n    MathUtils.binomialCoefficient(4191, 4191);\n    BigInteger bigInteger0 = BigInteger.ONE;\n    MathUtils.pow(bigInteger0, (long) 4191);\n    double[] doubleArray0 = new double[2];\n    doubleArray0[0] = (double) 4191;\n    doubleArray0[1] = (double) 1L;\n    MathUtils.distance1(doubleArray0, doubleArray0);\n}",
    "testName" : "test04949"
  },
  "test02929" : {
    "methodSignature" : "public static int pow(final int k, long e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02929() throws Throwable {\n    MathUtils.subAndCheck(2207, 2207);\n    MathUtils.indicator((-2455.0F));\n    BigInteger bigInteger0 = BigInteger.ONE;\n    byte[] byteArray0 = new byte[4];\n    byteArray0[0] = (byte) (-52);\n    byteArray0[1] = (byte) (-127);\n    byteArray0[2] = (byte) 72;\n    byteArray0[3] = (byte) 0;\n    BigInteger bigInteger1 = new BigInteger(byteArray0);\n    bigInteger1.flipBit((byte) 0);\n    bigInteger0.subtract(bigInteger1);\n    MathUtils.pow(bigInteger0, 0L);\n    MathUtils.pow(0, 1365L);\n}",
    "testName" : "test02929"
  },
  "test06161" : {
    "methodSignature" : "public static long pow(final long k, long e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06161() throws Throwable {\n    int int0 = 25;\n    MathUtils.pow(25, 9);\n    int int1 = 0;\n    MathUtils.subAndCheck(0, 766306777);\n    MathUtils.equals(776.957302461, (-2857.39), 689.267357643664);\n    MathUtils.log((-766306777), 0.0);\n    MathUtils.sign(0.0);\n    MathUtils.indicator((float) (-766306777));\n    MathUtils.pow((long) 9, (-1L));\n}",
    "testName" : "test06161"
  },
  "test07373" : {
    "methodSignature" : "public static double distance(int[] p1, int[] p2)",
    "methodName" : "distance",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07373() throws Throwable {\n    int[] intArray0 = new int[4];\n    intArray0[0] = (-1748);\n    intArray0[1] = (-1);\n    intArray0[2] = 0;\n    intArray0[3] = 91;\n    MathUtils.distance(intArray0, intArray0);\n}",
    "testName" : "test07373"
  },
  "test09393" : {
    "methodSignature" : "public static double factorialLog(final int n)",
    "methodName" : "factorialLog",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09393() throws Throwable {\n    MathUtils.factorialLog((-1193));\n}",
    "testName" : "test09393"
  },
  "test143159" : {
    "methodSignature" : "public static long binomialCoefficient(final int n, final int k)",
    "methodName" : "binomialCoefficient",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test143159() throws Throwable {\n    MathUtils.binomialCoefficient(4191, 3092);\n}",
    "testName" : "test143159"
  },
  "test0033" : {
    "methodSignature" : "public static int distanceInf(int[] p1, int[] p2)",
    "methodName" : "distanceInf",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0033() throws Throwable {\n    int[] intArray0 = new int[0];\n    MathUtils.distance1(intArray0, intArray0);\n    MathUtils.distanceInf(intArray0, intArray0);\n    int int0 = 0;\n    MathUtils.round(3892.7F, 0, 0);\n    MathUtils.pow((long) 0, 0);\n    MathUtils.sinh((-6077.737308));\n    MathUtils.binomialCoefficientLog(0, 0);\n    MathUtils.distance(intArray0, intArray0);\n    MathUtils.distanceInf(intArray0, intArray0);\n    MathUtils.factorial(0);\n    MathUtils.gcd(1726, 1726);\n    MathUtils.sign(0);\n    MathUtils.indicator((byte) 14);\n    int[] intArray1 = new int[7];\n    intArray1[0] = 0;\n    intArray1[1] = 1726;\n    intArray1[2] = (-3471);\n    intArray1[3] = 0;\n    intArray1[4] = 1726;\n    intArray1[5] = (int) (byte) 1;\n    intArray1[6] = 0;\n    MathUtils.distanceInf(intArray1, intArray0);\n}",
    "testName" : "test0033"
  },
  "test08181" : {
    "methodSignature" : "public static double[] normalizeArray(double[] values, double normalizedSum) throws ArithmeticException, IllegalArgumentException",
    "methodName" : "normalizeArray",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08181() throws Throwable {\n    MathUtils.round(599.0209968245006, (-1902), 0);\n    double[] doubleArray0 = new double[8];\n    doubleArray0[0] = 599.0209968245006;\n    doubleArray0[1] = 599.0209968245006;\n    doubleArray0[2] = (double) (-1902);\n    doubleArray0[3] = 599.0209968245006;\n    doubleArray0[4] = Double.POSITIVE_INFINITY;\n    doubleArray0[5] = (double) (-1902);\n    doubleArray0[6] = Double.POSITIVE_INFINITY;\n    doubleArray0[7] = (double) 0;\n    MathUtils.normalizeArray(doubleArray0, Double.POSITIVE_INFINITY);\n}",
    "testName" : "test08181"
  },
  "test07777" : {
    "methodSignature" : "public static long pow(final long k, int e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07777() throws Throwable {\n    MathUtils.indicator((-1406.7503837666843));\n    MathUtils.equals(0.0, 0.0, 3.141592653589793);\n    MathUtils.sign(1L);\n    MathUtils.sign((short) 14);\n    MathUtils.factorialDouble((short) 14);\n    MathUtils.gcd(1049, (short) 1);\n    MathUtils.sign((short) 47);\n    MathUtils.sign((double) (short) 1);\n    MathUtils.compareTo(0.0, (short) 1, (-1406.7503837666843));\n    double[] doubleArray0 = new double[2];\n    doubleArray0[0] = (double) (short) 1;\n    doubleArray0[1] = (double) (-1);\n    MathUtils.distanceInf(doubleArray0, doubleArray0);\n    MathUtils.mulAndCheck((long) (short) 14, (long) 1049);\n    MathUtils.equals((double) 14686L, (double) (short) 47);\n    MathUtils.distance1(doubleArray0, doubleArray0);\n    MathUtils.binomialCoefficientLog((short) 14, (short) 1);\n    MathUtils.pow((long) (short) 1, 2224);\n}",
    "testName" : "test07777"
  },
  "test06565" : {
    "methodSignature" : "public static int compareTo(double x, double y, double eps)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06565() throws Throwable {\n    MathUtils.sign(9);\n    double[] doubleArray0 = new double[1];\n    doubleArray0[0] = (double) 9;\n    MathUtils.distance(doubleArray0, doubleArray0);\n    MathUtils.pow(1, 1);\n    MathUtils.pow((-1530), (long) 1);\n    MathUtils.indicator(2241);\n    MathUtils.hash(0.0);\n    MathUtils.mulAndCheck((long) 1, (long) (-1530));\n    BigInteger bigInteger0 = BigInteger.ONE;\n    bigInteger0.negate();\n    BigInteger.valueOf((-1530L));\n    MathUtils.pow(bigInteger0, bigInteger0);\n    MathUtils.compareTo((-1530), 1.0, (-1530));\n}",
    "testName" : "test06565"
  },
  "test03333" : {
    "methodSignature" : "public static BigInteger pow(final BigInteger k, int e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03333() throws Throwable {\n    MathUtils.scalb(6.283185307179586, 2073432487);\n    MathUtils.lcm(2073432487, 2073432487);\n    int int0 = 3410;\n    int int1 = (-143);\n    MathUtils.lcm(3410, (-143));\n    MathUtils.pow((BigInteger) null, 44330);\n}",
    "testName" : "test03333"
  },
  "test127127" : {
    "methodSignature" : "public static int hash(double[] value)",
    "methodName" : "hash",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test127127() throws Throwable {\n    MathUtils.log((-1599.64321), 4.9E-324);\n    MathUtils.factorialDouble(1094);\n    int[] intArray0 = new int[2];\n    intArray0[0] = 1094;\n    intArray0[1] = (-893);\n    MathUtils.distance1(intArray0, intArray0);\n    MathUtils.sign((long) 0);\n    MathUtils.binomialCoefficientDouble(1094, 1094);\n    double[] doubleArray0 = new double[4];\n    doubleArray0[0] = (double) 0L;\n    doubleArray0[1] = (double) 1094;\n    doubleArray0[2] = 4.9E-324;\n    doubleArray0[3] = 1.0;\n    MathUtils.hash(doubleArray0);\n}",
    "testName" : "test127127"
  },
  "test100100" : {
    "methodSignature" : "public static double distanceInf(double[] p1, double[] p2)",
    "methodName" : "distanceInf",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100100() throws Throwable {\n    MathUtils.mulAndCheck(0, 0);\n    MathUtils.mulAndCheck(0, 0);\n    MathUtils.mulAndCheck((long) 0, (-923L));\n    double[] doubleArray0 = new double[1];\n    doubleArray0[0] = (double) 0L;\n    MathUtils.distanceInf(doubleArray0, doubleArray0);\n}",
    "testName" : "test100100"
  },
  "test04141" : {
    "methodSignature" : "public static long sign(final long x)",
    "methodName" : "sign",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04141() throws Throwable {\n    MathUtils.gcd(0, 2178);\n    int[] intArray0 = new int[2];\n    intArray0[0] = 2178;\n    intArray0[1] = 2178;\n    int[] intArray1 = new int[7];\n    intArray1[0] = (-2314);\n    intArray1[1] = 2178;\n    intArray1[2] = 2178;\n    intArray1[3] = 2178;\n    intArray1[4] = (-2717);\n    intArray1[5] = 0;\n    intArray1[6] = (-44);\n    MathUtils.distance1(intArray0, intArray1);\n    MathUtils.sign((byte) 0);\n    MathUtils.indicator((short) (byte) 0);\n    MathUtils.sign((long) 0);\n}",
    "testName" : "test04141"
  },
  "test09797" : {
    "methodSignature" : "public static short sign(final short x)",
    "methodName" : "sign",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09797() throws Throwable {\n    MathUtils.pow(805, 1114L);\n    MathUtils.equals(3855.0, (double) 855098873);\n    MathUtils.indicator((byte) 20);\n    MathUtils.sign((short) (-998));\n}",
    "testName" : "test09797"
  },
  "test08585" : {
    "methodSignature" : "public static long mulAndCheck(long a, long b)",
    "methodName" : "mulAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08585() throws Throwable {\n    MathUtils.cosh(0.0);\n    MathUtils.indicator((byte) (-119));\n    MathUtils.sign(0);\n    MathUtils.equals((-8.1941), (double) (byte) (-119));\n    MathUtils.sign((byte) (-119));\n    MathUtils.nextAfter(0.0, (byte) (-119));\n    MathUtils.indicator((double) (byte) (-1));\n    MathUtils.mulAndCheck((-1L), (long) (byte) (-1));\n    MathUtils.mulAndCheck(0L, 0L);\n}",
    "testName" : "test08585"
  },
  "test02121" : {
    "methodSignature" : "public static boolean equals(double x, double y)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02121() throws Throwable {\n    MathUtils.indicator((byte) 26);\n    MathUtils.mulAndCheck((long) (byte) 1, (long) (byte) 26);\n    MathUtils.equals(0.0, (double) (byte) 1, (int) (byte) 26);\n    MathUtils.indicator((byte) 0);\n    MathUtils.log((byte) 26, (byte) 26);\n    MathUtils.mulAndCheck((int) (byte) 1, (int) (byte) 0);\n    MathUtils.equals((double) 26L, 0.0);\n}",
    "testName" : "test02121"
  },
  "test05353" : {
    "methodSignature" : "public static boolean equals(double x, double y, int maxUlps)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05353() throws Throwable {\n    MathUtils.compareTo(2.0, 2.0, 2.0);\n    MathUtils.indicator((short) (-496));\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = (double) (short) (-1);\n    doubleArray0[1] = (double) 0;\n    doubleArray0[2] = 2.0;\n    MathUtils.distanceInf(doubleArray0, doubleArray0);\n    MathUtils.distance1(doubleArray0, doubleArray0);\n    MathUtils.nextAfter(0, 2.0);\n    MathUtils.equals(472.3074991661, 1077.513167, (-1.0));\n    MathUtils.equals(2393.71068944, 1.0, 0);\n}",
    "testName" : "test05353"
  },
  "test108108" : {
    "methodSignature" : "public static int lcm(int a, int b)",
    "methodName" : "lcm",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108108() throws Throwable {\n    MathUtils.factorialDouble(2021);\n    int int0 = (-189);\n    int int1 = Integer.MIN_VALUE;\n    MathUtils.lcm((-189), Integer.MIN_VALUE);\n}",
    "testName" : "test108108"
  },
  "test135135" : {
    "methodSignature" : "public static double binomialCoefficientDouble(final int n, final int k)",
    "methodName" : "binomialCoefficientDouble",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test135135() throws Throwable {\n    MathUtils.normalizeAngle(2.2250738585072014E-308, 2.2250738585072014E-308);\n    MathUtils.sign((-1972.041F));\n    int int0 = (-2220);\n    MathUtils.binomialCoefficientDouble((-2220), (-2220));\n}",
    "testName" : "test135135"
  },
  "test116116" : {
    "methodSignature" : "public static long pow(final long k, int e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test116116() throws Throwable {\n    MathUtils.normalizeAngle(Double.NEGATIVE_INFINITY, (-3133.1239464));\n    long long0 = 5040L;\n    int int0 = (-254);\n    MathUtils.pow(5040L, (-254));\n}",
    "testName" : "test116116"
  },
  "test142153" : {
    "methodSignature" : "public static float round(float x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test142153() throws Throwable {\n    int[] intArray0 = new int[0];\n    int int0 = MathUtils.distance1(intArray0, intArray0);\n    MathUtils.distanceInf(intArray0, intArray0);\n    float float0 = MathUtils.round(3892.7F, 0, 0);\n}",
    "testName" : "test142153"
  },
  "test142154" : {
    "methodSignature" : "public static long pow(final long k, int e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test142154() throws Throwable {\n    int[] intArray0 = new int[0];\n    int int0 = MathUtils.distance1(intArray0, intArray0);\n    MathUtils.distanceInf(intArray0, intArray0);\n    float float0 = MathUtils.round(3892.7F, 0, 0);\n    long long0 = MathUtils.pow((long) 0, 0);\n}",
    "testName" : "test142154"
  },
  "test142152" : {
    "methodSignature" : "public static int distance1(int[] p1, int[] p2)",
    "methodName" : "distance1",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test142152() throws Throwable {\n    int[] intArray0 = new int[0];\n    int int0 = MathUtils.distance1(intArray0, intArray0);\n}",
    "testName" : "test142152"
  },
  "test142157" : {
    "methodSignature" : "public static int gcd(final int p, final int q)",
    "methodName" : "gcd",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test142157() throws Throwable {\n    int[] intArray0 = new int[0];\n    int int0 = MathUtils.distance1(intArray0, intArray0);\n    MathUtils.distanceInf(intArray0, intArray0);\n    float float0 = MathUtils.round(3892.7F, 0, 0);\n    long long0 = MathUtils.pow((long) 0, 0);\n    double double0 = MathUtils.sinh((-6077.737308));\n    double double1 = MathUtils.binomialCoefficientLog(0, 0);\n    MathUtils.distance(intArray0, intArray0);\n    MathUtils.distanceInf(intArray0, intArray0);\n    MathUtils.factorial(0);\n    int int1 = MathUtils.gcd(1726, 1726);\n}",
    "testName" : "test142157"
  },
  "test142158" : {
    "methodSignature" : "public static byte indicator(final byte x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test142158() throws Throwable {\n    int[] intArray0 = new int[0];\n    int int0 = MathUtils.distance1(intArray0, intArray0);\n    MathUtils.distanceInf(intArray0, intArray0);\n    float float0 = MathUtils.round(3892.7F, 0, 0);\n    long long0 = MathUtils.pow((long) 0, 0);\n    double double0 = MathUtils.sinh((-6077.737308));\n    double double1 = MathUtils.binomialCoefficientLog(0, 0);\n    MathUtils.distance(intArray0, intArray0);\n    MathUtils.distanceInf(intArray0, intArray0);\n    MathUtils.factorial(0);\n    int int1 = MathUtils.gcd(1726, 1726);\n    MathUtils.sign(0);\n    byte byte0 = MathUtils.indicator((byte) 14);\n}",
    "testName" : "test142158"
  },
  "test0044" : {
    "methodSignature" : "public static boolean equals(double x, double y)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0044() throws Throwable {\n    byte[] byteArray0 = new byte[2];\n    byteArray0[0] = (byte) 92;\n    byteArray0[1] = (byte) 0;\n    BigInteger bigInteger0 = new BigInteger(byteArray0);\n    Object object0 = new Object();\n    bigInteger0.equals(object0);\n    bigInteger0.toByteArray();\n    bigInteger0.intValue();\n    bigInteger0.flipBit(6);\n    MathUtils.pow(bigInteger0, bigInteger0);\n    MathUtils.indicator(2139287145);\n    MathUtils.equals((double) (byte) 92, 2193.168606);\n}",
    "testName" : "test0044"
  },
  "test142155" : {
    "methodSignature" : "public static double sinh(double x)",
    "methodName" : "sinh",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test142155() throws Throwable {\n    int[] intArray0 = new int[0];\n    int int0 = MathUtils.distance1(intArray0, intArray0);\n    MathUtils.distanceInf(intArray0, intArray0);\n    float float0 = MathUtils.round(3892.7F, 0, 0);\n    long long0 = MathUtils.pow((long) 0, 0);\n    double double0 = MathUtils.sinh((-6077.737308));\n}",
    "testName" : "test142155"
  },
  "test120120" : {
    "methodSignature" : "public static boolean equals(double[] x, double[] y)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test120120() throws Throwable {\n    MathUtils.log((-456.9455000594), (-4014.5344788835));\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = (-4014.5344788835);\n    doubleArray0[1] = (-4014.5344788835);\n    doubleArray0[2] = (-456.9455000594);\n    MathUtils.equals(doubleArray0, doubleArray0);\n}",
    "testName" : "test120120"
  },
  "test142156" : {
    "methodSignature" : "public static double binomialCoefficientLog(final int n, final int k)",
    "methodName" : "binomialCoefficientLog",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test142156() throws Throwable {\n    int[] intArray0 = new int[0];\n    int int0 = MathUtils.distance1(intArray0, intArray0);\n    MathUtils.distanceInf(intArray0, intArray0);\n    float float0 = MathUtils.round(3892.7F, 0, 0);\n    long long0 = MathUtils.pow((long) 0, 0);\n    double double0 = MathUtils.sinh((-6077.737308));\n    double double1 = MathUtils.binomialCoefficientLog(0, 0);\n}",
    "testName" : "test142156"
  },
  "test103103" : {
    "methodSignature" : "public static double binomialCoefficientDouble(final int n, final int k)",
    "methodName" : "binomialCoefficientDouble",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103103() throws Throwable {\n    MathUtils.sign(0L);\n    MathUtils.nextAfter(2.2250738585072014E-308, 0L);\n    MathUtils.log(1866.718406, 1866.718406);\n    MathUtils.gcd((-1049), 0);\n    MathUtils.binomialCoefficientDouble(1049, 0);\n    MathUtils.binomialCoefficientDouble(0, 1654);\n}",
    "testName" : "test103103"
  },
  "test128128" : {
    "methodSignature" : "public static int indicator(final int x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test128128() throws Throwable {\n    MathUtils.factorialLog(0);\n    MathUtils.factorialDouble(0);\n    MathUtils.binomialCoefficientDouble(1324, 0);\n    MathUtils.indicator((-87.34692652));\n    MathUtils.indicator(0);\n}",
    "testName" : "test128128"
  },
  "test05858" : {
    "methodSignature" : "public static long pow(final long k, int e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05858() throws Throwable {\n    MathUtils.binomialCoefficientDouble(0, 0);\n    MathUtils.pow((long) 0, 4194304);\n}",
    "testName" : "test05858"
  },
  "test03434" : {
    "methodSignature" : "public static long factorial(final int n)",
    "methodName" : "factorial",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03434() throws Throwable {\n    int int0 = 934;\n    MathUtils.factorial(934);\n}",
    "testName" : "test03434"
  },
  "test02626" : {
    "methodSignature" : "public static double round(double x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02626() throws Throwable {\n    MathUtils.addAndCheck(2640, 2640);\n    MathUtils.pow((long) 5280, (long) 5280);\n    MathUtils.pow(0L, 2640);\n    MathUtils.equals(0.0, 487.37343307056665, (-2621.877438012606));\n    int int0 = 31;\n    MathUtils.binomialCoefficientLog(2640, 31);\n    MathUtils.log(31, 31);\n    MathUtils.indicator((short) 1522);\n    MathUtils.pow(1236, 5280);\n    MathUtils.round(1252.845186, 0);\n    MathUtils.indicator((float) 0L);\n    MathUtils.round(0.0, (-369), 1420);\n}",
    "testName" : "test02626"
  },
  "test04646" : {
    "methodSignature" : "public static int distance1(int[] p1, int[] p2)",
    "methodName" : "distance1",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04646() throws Throwable {\n    MathUtils.log(482.341617, 482.341617);\n    MathUtils.subAndCheck(2838L, (-3011L));\n    int[] intArray0 = new int[5];\n    intArray0[0] = (-430);\n    intArray0[1] = 0;\n    intArray0[2] = (-2170);\n    intArray0[3] = 0;\n    intArray0[4] = (-2456);\n    MathUtils.distance1(intArray0, intArray0);\n}",
    "testName" : "test04646"
  },
  "test07878" : {
    "methodSignature" : "public static long addAndCheck(long a, long b)",
    "methodName" : "addAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07878() throws Throwable {\n    MathUtils.pow((-1483L), 2723L);\n    MathUtils.indicator(1.0);\n    MathUtils.indicator(0.0F);\n    MathUtils.addAndCheck(0L, 2723L);\n}",
    "testName" : "test07878"
  },
  "test01414" : {
    "methodSignature" : "public static boolean equals(double[] x, double[] y)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01414() throws Throwable {\n    MathUtils.equals((-1451.0276), 2456.0, (-1451.0276));\n    MathUtils.subAndCheck(2L, 106L);\n    double[] doubleArray0 = new double[0];\n    double[] doubleArray1 = new double[1];\n    doubleArray1[0] = 2456.0;\n    MathUtils.equals(doubleArray0, doubleArray1);\n}",
    "testName" : "test01414"
  },
  "test134134" : {
    "methodSignature" : "public static double cosh(double x)",
    "methodName" : "cosh",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test134134() throws Throwable {\n    int[] intArray0 = new int[4];\n    intArray0[0] = 0;\n    intArray0[1] = (-3904);\n    intArray0[2] = (-2771);\n    intArray0[3] = 61;\n    MathUtils.distance(intArray0, intArray0);\n    MathUtils.lcm((-2771), (-2771));\n    Random.setNextRandom(1140);\n    MathUtils.mulAndCheck(1L, (long) 61);\n    MathUtils.equals(454.63004, (double) (-3904), 61);\n    MathUtils.indicator((long) (-2771));\n    MathUtils.binomialCoefficientDouble(1120, (-2771));\n    MathUtils.subAndCheck((long) 0, 4287L);\n    MathUtils.pow(61, 2771);\n    MathUtils.sign((byte) 52);\n    double[] doubleArray0 = new double[9];\n    doubleArray0[0] = (double) 473063909;\n    doubleArray0[1] = (double) 4287L;\n    doubleArray0[2] = 6.283185307179586;\n    doubleArray0[3] = (double) (byte) 1;\n    doubleArray0[4] = (double) 1140;\n    doubleArray0[5] = (double) (byte) 1;\n    doubleArray0[6] = 1420.9131513;\n    doubleArray0[7] = (double) (byte) 1;\n    doubleArray0[8] = (double) 1120;\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.sign((double) (-4287L));\n    MathUtils.cosh((-1.0));\n}",
    "testName" : "test134134"
  },
  "test117117" : {
    "methodSignature" : "public static BigInteger pow(final BigInteger k, int e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test117117() throws Throwable {\n    MathUtils.sign(Double.POSITIVE_INFINITY);\n    MathUtils.factorialLog(471);\n    MathUtils.indicator(684L);\n    MathUtils.indicator((short) (-2005));\n    MathUtils.equals(1.0, 0.0, (double) 1L);\n    double[] doubleArray0 = new double[7];\n    doubleArray0[0] = (double) 1L;\n    doubleArray0[1] = (double) (short) (-1);\n    doubleArray0[2] = (double) 1L;\n    doubleArray0[3] = 1.0;\n    doubleArray0[4] = (double) (short) (-1);\n    doubleArray0[5] = 1757.5571;\n    doubleArray0[6] = 1.0;\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.sign((long) 471);\n    BigInteger bigInteger0 = BigInteger.ZERO;\n    BigInteger bigInteger1 = MathUtils.pow(bigInteger0, 1L);\n    MathUtils.distance1(doubleArray0, doubleArray0);\n    MathUtils.pow(bigInteger1, (-1));\n}",
    "testName" : "test117117"
  },
  "test03838" : {
    "methodSignature" : "public static double[] normalizeArray(double[] values, double normalizedSum) throws ArithmeticException, IllegalArgumentException",
    "methodName" : "normalizeArray",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03838() throws Throwable {\n    MathUtils.gcd(0, 0);\n    MathUtils.sign(0.0F);\n    int[] intArray0 = new int[0];\n    MathUtils.distanceInf(intArray0, intArray0);\n    MathUtils.distance(intArray0, intArray0);\n    MathUtils.pow(0, 0);\n    MathUtils.sign(0.0);\n    MathUtils.scalb((-57.57499059), 1);\n    MathUtils.addAndCheck((long) 0, 0L);\n    double[] doubleArray0 = new double[7];\n    doubleArray0[0] = (double) 0L;\n    doubleArray0[1] = 0.0;\n    doubleArray0[2] = (double) 0L;\n    doubleArray0[3] = 0.0;\n    doubleArray0[4] = (-115.14998118);\n    doubleArray0[5] = (double) 0;\n    doubleArray0[6] = 0.0;\n    MathUtils.normalizeArray(doubleArray0, 0);\n}",
    "testName" : "test03838"
  },
  "test05050" : {
    "methodSignature" : "public static BigInteger pow(final BigInteger k, BigInteger e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05050() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    byteArray0[0] = (byte) (-75);\n    byteArray0[1] = (byte) 17;\n    byteArray0[2] = (byte) 12;\n    byteArray0[3] = (byte) (-83);\n    byteArray0[4] = (byte) (-1);\n    byteArray0[5] = (byte) (-1);\n    BigInteger bigInteger0 = new BigInteger(byteArray0);\n    MathUtils.pow(bigInteger0, bigInteger0);\n}",
    "testName" : "test05050"
  },
  "test09494" : {
    "methodSignature" : "public static BigInteger pow(final BigInteger k, long e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09494() throws Throwable {\n    MathUtils.pow((BigInteger) null, 771L);\n}",
    "testName" : "test09494"
  },
  "test140141" : {
    "methodSignature" : "public static int sign(final int x)",
    "methodName" : "sign",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test140141() throws Throwable {\n    MathUtils.indicator((-2757.917F));\n    float float0 = MathUtils.round((-2757.917F), (-551), 0);\n    int int0 = MathUtils.sign((-551));\n}",
    "testName" : "test140141"
  },
  "test06262" : {
    "methodSignature" : "public static double distanceInf(double[] p1, double[] p2)",
    "methodName" : "distanceInf",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06262() throws Throwable {\n    MathUtils.distanceInf((double[]) null, (double[]) null);\n}",
    "testName" : "test06262"
  },
  "test140140" : {
    "methodSignature" : "public static float round(float x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test140140() throws Throwable {\n    MathUtils.indicator((-2757.917F));\n    float float0 = MathUtils.round((-2757.917F), (-551), 0);\n}",
    "testName" : "test140140"
  },
  "test08282" : {
    "methodSignature" : "public static double[] normalizeArray(double[] values, double normalizedSum) throws ArithmeticException, IllegalArgumentException",
    "methodName" : "normalizeArray",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08282() throws Throwable {\n    MathUtils.factorialDouble(0);\n    MathUtils.sign((float) 0);\n    MathUtils.compareTo(1.0, 296.6060610270463, (-313.58685));\n    MathUtils.sign((-1));\n    MathUtils.factorialLog(0);\n    MathUtils.pow(1214, (long) 0);\n    double[] doubleArray0 = new double[8];\n    doubleArray0[0] = (-313.58685);\n    doubleArray0[1] = 296.6060610270463;\n    doubleArray0[2] = (double) (-1);\n    doubleArray0[3] = (double) 0;\n    doubleArray0[4] = (double) (-1);\n    doubleArray0[5] = 0.0;\n    doubleArray0[6] = 1.0;\n    doubleArray0[7] = (-2840.252126363);\n    MathUtils.normalizeArray(doubleArray0, (-1.0));\n}",
    "testName" : "test08282"
  },
  "test140143" : {
    "methodSignature" : "public static double log(double base, double x)",
    "methodName" : "log",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test140143() throws Throwable {\n    MathUtils.indicator((-2757.917F));\n    float float0 = MathUtils.round((-2757.917F), (-551), 0);\n    int int0 = MathUtils.sign((-551));\n    int[] intArray0 = new int[4];\n    intArray0[0] = 0;\n    intArray0[1] = 0;\n    intArray0[2] = (-1);\n    int int1 = MathUtils.distanceInf(intArray0, intArray0);\n    double double0 = MathUtils.log(2443.8207085413, (-608.6319869));\n}",
    "testName" : "test140143"
  },
  "test07070" : {
    "methodSignature" : "public static BigInteger pow(final BigInteger k, int e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07070() throws Throwable {\n    MathUtils.binomialCoefficientDouble(929, 20);\n    MathUtils.sign(929);\n    MathUtils.pow(1, 1L);\n    MathUtils.equals((double) 1L, (double) 1);\n    int[] intArray0 = new int[0];\n    MathUtils.distance(intArray0, intArray0);\n    MathUtils.indicator((float) 929);\n    MathUtils.gcd((-998), 61);\n    MathUtils.round((-2369.37201), 4194304);\n    MathUtils.round(118.566F, 0);\n    MathUtils.mulAndCheck(4194304, 1);\n    MathUtils.compareTo(1, 4194304, 0.0);\n    MathUtils.sign((long) (-998));\n    MathUtils.indicator((float) 1);\n    MathUtils.distance(intArray0, intArray0);\n    MathUtils.factorial(0);\n    BigInteger bigInteger0 = BigInteger.ONE;\n    MathUtils.pow(bigInteger0, 0);\n}",
    "testName" : "test07070"
  },
  "test125125" : {
    "methodSignature" : "public static double round(double x, int scale)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test125125() throws Throwable {\n    MathUtils.lcm(796, 796);\n    MathUtils.lcm(796, 14);\n    MathUtils.pow((-2569), (long) 796);\n    MathUtils.addAndCheck(0, 796);\n    MathUtils.equals((-512.7529803), (-4316.366337), 796);\n    MathUtils.round((-409.2051665), 0);\n}",
    "testName" : "test125125"
  },
  "test140142" : {
    "methodSignature" : "public static int distanceInf(int[] p1, int[] p2)",
    "methodName" : "distanceInf",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test140142() throws Throwable {\n    MathUtils.indicator((-2757.917F));\n    float float0 = MathUtils.round((-2757.917F), (-551), 0);\n    int int0 = MathUtils.sign((-551));\n    int[] intArray0 = new int[4];\n    intArray0[0] = 0;\n    intArray0[1] = 0;\n    intArray0[2] = (-1);\n    int int1 = MathUtils.distanceInf(intArray0, intArray0);\n}",
    "testName" : "test140142"
  },
  "test0055" : {
    "methodSignature" : "public static boolean equals(double x, double y, int maxUlps)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0055() throws Throwable {\n    MathUtils.indicator(2.2250738585072014E-308);\n    MathUtils.indicator(1.1102230246251565E-16);\n    MathUtils.sign(1770.7891F);\n    MathUtils.sign(1030L);\n    MathUtils.pow(3, 993L);\n    MathUtils.equals(1.1102230246251565E-16, (-2450.7073), 2146779092);\n}",
    "testName" : "test0055"
  },
  "test140145" : {
    "methodSignature" : "public static byte sign(final byte x)",
    "methodName" : "sign",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test140145() throws Throwable {\n    MathUtils.indicator((-2757.917F));\n    float float0 = MathUtils.round((-2757.917F), (-551), 0);\n    int int0 = MathUtils.sign((-551));\n    int[] intArray0 = new int[4];\n    intArray0[0] = 0;\n    intArray0[1] = 0;\n    intArray0[2] = (-1);\n    int int1 = MathUtils.distanceInf(intArray0, intArray0);\n    double double0 = MathUtils.log(2443.8207085413, (-608.6319869));\n    byte byte0 = MathUtils.indicator((byte) (-93));\n    BigInteger bigInteger0 = MathUtils.pow((BigInteger) null, (long) 0);\n    MathUtils.mulAndCheck(0L, 87178291200L);\n    byte byte1 = MathUtils.sign((byte) (-93));\n}",
    "testName" : "test140145"
  },
  "test140144" : {
    "methodSignature" : "public static BigInteger pow(final BigInteger k, long e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test140144() throws Throwable {\n    MathUtils.indicator((-2757.917F));\n    float float0 = MathUtils.round((-2757.917F), (-551), 0);\n    int int0 = MathUtils.sign((-551));\n    int[] intArray0 = new int[4];\n    intArray0[0] = 0;\n    intArray0[1] = 0;\n    intArray0[2] = (-1);\n    int int1 = MathUtils.distanceInf(intArray0, intArray0);\n    double double0 = MathUtils.log(2443.8207085413, (-608.6319869));\n    byte byte0 = MathUtils.indicator((byte) (-93));\n    BigInteger bigInteger0 = MathUtils.pow((BigInteger) null, (long) 0);\n}",
    "testName" : "test140144"
  },
  "test140147" : {
    "methodSignature" : "public static int gcd(final int p, final int q)",
    "methodName" : "gcd",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test140147() throws Throwable {\n    MathUtils.indicator((-2757.917F));\n    float float0 = MathUtils.round((-2757.917F), (-551), 0);\n    int int0 = MathUtils.sign((-551));\n    int[] intArray0 = new int[4];\n    intArray0[0] = 0;\n    intArray0[1] = 0;\n    intArray0[2] = (-1);\n    int int1 = MathUtils.distanceInf(intArray0, intArray0);\n    double double0 = MathUtils.log(2443.8207085413, (-608.6319869));\n    byte byte0 = MathUtils.indicator((byte) (-93));\n    BigInteger bigInteger0 = MathUtils.pow((BigInteger) null, (long) 0);\n    MathUtils.mulAndCheck(0L, 87178291200L);\n    byte byte1 = MathUtils.sign((byte) (-93));\n    int int2 = MathUtils.sign(2);\n    double double1 = MathUtils.indicator(0.0);\n    MathUtils.indicator((long) 0);\n    int int3 = MathUtils.gcd((-1), 1);\n}",
    "testName" : "test140147"
  },
  "test05454" : {
    "methodSignature" : "public static int pow(final int k, int e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05454() throws Throwable {\n    MathUtils.compareTo(0.0, 0.0, 0.0);\n    byte byte0 = (byte) (-90);\n    MathUtils.indicator((byte) (-90));\n    MathUtils.factorialDouble(1433);\n    MathUtils.mulAndCheck((int) (byte) (-90), 15);\n    MathUtils.pow((-1), (-1350));\n}",
    "testName" : "test05454"
  },
  "test140146" : {
    "methodSignature" : "public static double indicator(final double x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test140146() throws Throwable {\n    MathUtils.indicator((-2757.917F));\n    float float0 = MathUtils.round((-2757.917F), (-551), 0);\n    int int0 = MathUtils.sign((-551));\n    int[] intArray0 = new int[4];\n    intArray0[0] = 0;\n    intArray0[1] = 0;\n    intArray0[2] = (-1);\n    int int1 = MathUtils.distanceInf(intArray0, intArray0);\n    double double0 = MathUtils.log(2443.8207085413, (-608.6319869));\n    byte byte0 = MathUtils.indicator((byte) (-93));\n    BigInteger bigInteger0 = MathUtils.pow((BigInteger) null, (long) 0);\n    MathUtils.mulAndCheck(0L, 87178291200L);\n    byte byte1 = MathUtils.sign((byte) (-93));\n    int int2 = MathUtils.sign(2);\n    double double1 = MathUtils.indicator(0.0);\n}",
    "testName" : "test140146"
  },
  "test09898" : {
    "methodSignature" : "public static double distanceInf(double[] p1, double[] p2)",
    "methodName" : "distanceInf",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09898() throws Throwable {\n    MathUtils.subAndCheck(0, 0);\n    MathUtils.mulAndCheck((-1L), (long) 0);\n    int[] intArray0 = new int[1];\n    intArray0[0] = 0;\n    MathUtils.distanceInf(intArray0, intArray0);\n    double[] doubleArray0 = new double[7];\n    doubleArray0[0] = (double) 0;\n    doubleArray0[1] = (double) 0;\n    doubleArray0[2] = (double) 0;\n    doubleArray0[3] = (double) 0;\n    doubleArray0[4] = (double) (-1L);\n    doubleArray0[5] = (double) 0;\n    doubleArray0[6] = (double) 0;\n    double[] doubleArray1 = new double[2];\n    doubleArray1[0] = (double) 0L;\n    doubleArray1[1] = (double) 0;\n    MathUtils.distanceInf(doubleArray0, doubleArray1);\n}",
    "testName" : "test09898"
  },
  "test140149" : {
    "methodSignature" : "public static long pow(final long k, int e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test140149() throws Throwable {\n    MathUtils.indicator((-2757.917F));\n    float float0 = MathUtils.round((-2757.917F), (-551), 0);\n    int int0 = MathUtils.sign((-551));\n    int[] intArray0 = new int[4];\n    intArray0[0] = 0;\n    intArray0[1] = 0;\n    intArray0[2] = (-1);\n    int int1 = MathUtils.distanceInf(intArray0, intArray0);\n    double double0 = MathUtils.log(2443.8207085413, (-608.6319869));\n    byte byte0 = MathUtils.indicator((byte) (-93));\n    BigInteger bigInteger0 = MathUtils.pow((BigInteger) null, (long) 0);\n    MathUtils.mulAndCheck(0L, 87178291200L);\n    byte byte1 = MathUtils.sign((byte) (-93));\n    int int2 = MathUtils.sign(2);\n    double double1 = MathUtils.indicator(0.0);\n    MathUtils.indicator((long) 0);\n    int int3 = MathUtils.gcd((-1), 1);\n    double double2 = MathUtils.scalb((-362.4093135705), 2147483646);\n    long long0 = MathUtils.pow((long) (-1), 2);\n}",
    "testName" : "test140149"
  },
  "test06666" : {
    "methodSignature" : "public static boolean equals(double x, double y, double eps)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06666() throws Throwable {\n    MathUtils.normalizeAngle((-4782.42893), (-4782.42893));\n    MathUtils.indicator((byte) (-1));\n    MathUtils.log((byte) (-1), 1.0);\n    MathUtils.addAndCheck((int) (byte) (-1), (int) (byte) (-1));\n    MathUtils.equals((-4782.42893), 0.0, 0.0);\n}",
    "testName" : "test06666"
  },
  "test140148" : {
    "methodSignature" : "public static double scalb(final double d, final int scaleFactor)",
    "methodName" : "scalb",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test140148() throws Throwable {\n    MathUtils.indicator((-2757.917F));\n    float float0 = MathUtils.round((-2757.917F), (-551), 0);\n    int int0 = MathUtils.sign((-551));\n    int[] intArray0 = new int[4];\n    intArray0[0] = 0;\n    intArray0[1] = 0;\n    intArray0[2] = (-1);\n    int int1 = MathUtils.distanceInf(intArray0, intArray0);\n    double double0 = MathUtils.log(2443.8207085413, (-608.6319869));\n    byte byte0 = MathUtils.indicator((byte) (-93));\n    BigInteger bigInteger0 = MathUtils.pow((BigInteger) null, (long) 0);\n    MathUtils.mulAndCheck(0L, 87178291200L);\n    byte byte1 = MathUtils.sign((byte) (-93));\n    int int2 = MathUtils.sign(2);\n    double double1 = MathUtils.indicator(0.0);\n    MathUtils.indicator((long) 0);\n    int int3 = MathUtils.gcd((-1), 1);\n    double double2 = MathUtils.scalb((-362.4093135705), 2147483646);\n}",
    "testName" : "test140148"
  },
  "test03030" : {
    "methodSignature" : "public static long mulAndCheck(long a, long b)",
    "methodName" : "mulAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03030() throws Throwable {\n    MathUtils.hash((-2018.9627));\n    MathUtils.mulAndCheck((-9223372036854775808L), (long) 244896937);\n}",
    "testName" : "test03030"
  },
  "test08686" : {
    "methodSignature" : "public static int hash(double[] value)",
    "methodName" : "hash",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08686() throws Throwable {\n    MathUtils.subAndCheck(1, 1695);\n    MathUtils.scalb((-3638.3242832139), (-1694));\n    double[] doubleArray0 = new double[4];\n    doubleArray0[1] = (-3638.3242832139);\n    doubleArray0[2] = (double) (-1694);\n    doubleArray0[3] = (double) (-1694);\n    MathUtils.hash(doubleArray0);\n}",
    "testName" : "test08686"
  },
  "test07474" : {
    "methodSignature" : "public static double binomialCoefficientDouble(final int n, final int k)",
    "methodName" : "binomialCoefficientDouble",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07474() throws Throwable {\n    MathUtils.subAndCheck(0L, 0L);\n    MathUtils.binomialCoefficientDouble(5072, (-2041));\n}",
    "testName" : "test07474"
  },
  "test04242" : {
    "methodSignature" : "public static double distance1(double[] p1, double[] p2)",
    "methodName" : "distance1",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04242() throws Throwable {\n    double[] doubleArray0 = new double[4];\n    doubleArray0[0] = 1.0;\n    doubleArray0[1] = 2412.7751;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = (-4.9E-324);\n    double[] doubleArray1 = new double[3];\n    doubleArray1[0] = (-4.9E-324);\n    doubleArray1[1] = 0.0;\n    doubleArray1[2] = 1.0;\n    MathUtils.distance1(doubleArray0, doubleArray1);\n}",
    "testName" : "test04242"
  },
  "test106106" : {
    "methodSignature" : "public static double[] normalizeArray(double[] values, double normalizedSum) throws ArithmeticException, IllegalArgumentException",
    "methodName" : "normalizeArray",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106106() throws Throwable {\n    long long0 = (-1L);\n    MathUtils.sign((-1L));\n    double[] doubleArray0 = new double[0];\n    MathUtils.normalizeArray(doubleArray0, (-1L));\n}",
    "testName" : "test106106"
  },
  "test01010" : {
    "methodSignature" : "public static double factorialDouble(final int n)",
    "methodName" : "factorialDouble",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01010() throws Throwable {\n    double[] doubleArray0 = new double[2];\n    doubleArray0[0] = (-643.544327393);\n    doubleArray0[1] = 828.9892002;\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.equals(828.9892002, Double.NEGATIVE_INFINITY);\n    MathUtils.gcd(3, 3);\n    double[] doubleArray1 = new double[9];\n    doubleArray1[0] = Double.NEGATIVE_INFINITY;\n    doubleArray1[1] = Double.NEGATIVE_INFINITY;\n    doubleArray1[2] = 828.9892002;\n    doubleArray1[3] = 828.9892002;\n    doubleArray1[4] = Double.NEGATIVE_INFINITY;\n    doubleArray1[5] = (-643.544327393);\n    doubleArray1[6] = (double) 3;\n    doubleArray1[7] = (double) 3;\n    doubleArray1[8] = (double) 3;\n    MathUtils.distance1(doubleArray0, doubleArray1);\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.indicator(0);\n    byte byte0 = (byte) 0;\n    MathUtils.indicator((byte) 0);\n    MathUtils.log(1, 828.9892002);\n    int int0 = (-1819);\n    MathUtils.factorialDouble((-1819));\n}",
    "testName" : "test01010"
  },
  "test137137" : {
    "methodSignature" : "public static long factorial(final int n)",
    "methodName" : "factorial",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test137137() throws Throwable {\n    float float0 = 0.0F;\n    MathUtils.indicator(0.0F);\n    MathUtils.sign((double) 1.0F);\n    double double0 = 0.0;\n    MathUtils.equals(1.0, 0.0);\n    byte byte0 = (byte) 1;\n    MathUtils.sign((byte) 1);\n    long long0 = (-2296L);\n    MathUtils.mulAndCheck((-2296L), (-2296L));\n    int[] intArray0 = new int[5];\n    intArray0[0] = (int) (byte) 1;\n    intArray0[1] = (int) (byte) 1;\n    intArray0[2] = (int) (byte) 1;\n    intArray0[3] = (int) (byte) 1;\n    intArray0[4] = (int) (byte) 1;\n    MathUtils.distance(intArray0, intArray0);\n    int int0 = 0;\n    MathUtils.pow(0, (long) 1);\n    MathUtils.sign((-1.0F));\n    MathUtils.nextAfter(1059.34032908715, 4.9E-324);\n    MathUtils.factorial((-447));\n}",
    "testName" : "test137137"
  },
  "test09090" : {
    "methodSignature" : "public static double distance(double[] p1, double[] p2)",
    "methodName" : "distance",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09090() throws Throwable {\n    MathUtils.mulAndCheck(0, 0);\n    float float0 = 1270.0746F;\n    MathUtils.indicator(1270.0746F);\n    MathUtils.indicator((double) 0);\n    short short0 = (short) (-1);\n    MathUtils.sign((short) (-1));\n    MathUtils.sinh(0);\n    double[] doubleArray0 = null;\n    MathUtils.distance((double[]) null, (double[]) null);\n}",
    "testName" : "test09090"
  },
  "test114114" : {
    "methodSignature" : "public static long binomialCoefficient(final int n, final int k)",
    "methodName" : "binomialCoefficient",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test114114() throws Throwable {\n    MathUtils.nextAfter(0.0, 0.0);\n    int int0 = 0;\n    int int1 = 2;\n    MathUtils.binomialCoefficient(0, 2);\n}",
    "testName" : "test114114"
  },
  "test0066" : {
    "methodSignature" : "public static double[] normalizeArray(double[] values, double normalizedSum) throws ArithmeticException, IllegalArgumentException",
    "methodName" : "normalizeArray",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0066() throws Throwable {\n    double[] doubleArray0 = null;\n    MathUtils.normalizeArray((double[]) null, (-2308.0));\n}",
    "testName" : "test0066"
  },
  "test126126" : {
    "methodSignature" : "public static int lcm(int a, int b)",
    "methodName" : "lcm",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test126126() throws Throwable {\n    MathUtils.lcm(0, 640);\n}",
    "testName" : "test126126"
  },
  "test101101" : {
    "methodSignature" : "public static long mulAndCheck(long a, long b)",
    "methodName" : "mulAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101101() throws Throwable {\n    MathUtils.mulAndCheck((-1094L), 228L);\n}",
    "testName" : "test101101"
  },
  "test109109" : {
    "methodSignature" : "public static long pow(final long k, int e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109109() throws Throwable {\n    MathUtils.indicator((short) 2125);\n    MathUtils.equals((double) (short) 2125, (double) (short) 2125, 0.0);\n    short short0 = (short) 0;\n    MathUtils.sign((short) 0);\n    int int0 = Integer.MIN_VALUE;\n    MathUtils.pow((long) (short) 1, Integer.MIN_VALUE);\n}",
    "testName" : "test109109"
  },
  "test04747" : {
    "methodSignature" : "public static long subAndCheck(long a, long b)",
    "methodName" : "subAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04747() throws Throwable {\n    MathUtils.compareTo(6.283185307179586, 6.283185307179586, 6.283185307179586);\n    BigInteger bigInteger0 = BigInteger.ZERO;\n    BigInteger bigInteger1 = BigInteger.ONE;\n    bigInteger1.setBit(0);\n    bigInteger0.andNot(bigInteger1);\n    BigInteger bigInteger2 = BigInteger.ZERO;\n    bigInteger0.toByteArray();\n    bigInteger2.intValueExact();\n    bigInteger0.or(bigInteger2);\n    MathUtils.pow(bigInteger0, bigInteger0);\n    MathUtils.addAndCheck((-4615L), (long) 0);\n    MathUtils.subAndCheck(0L, 0L);\n}",
    "testName" : "test04747"
  },
  "test02323" : {
    "methodSignature" : "public static long binomialCoefficient(final int n, final int k)",
    "methodName" : "binomialCoefficient",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02323() throws Throwable {\n    MathUtils.round(1.0, 1159);\n    MathUtils.cosh(0.0);\n    int int0 = 1;\n    MathUtils.binomialCoefficient(1159, 1);\n    MathUtils.round((-1.0F), (-311));\n    MathUtils.binomialCoefficient((-311), 5);\n}",
    "testName" : "test02323"
  },
  "test05959" : {
    "methodSignature" : "public static long binomialCoefficient(final int n, final int k)",
    "methodName" : "binomialCoefficient",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05959() throws Throwable {\n    int int0 = (-823);\n    int int1 = 349;\n    MathUtils.binomialCoefficient((-823), 349);\n}",
    "testName" : "test05959"
  },
  "test07979" : {
    "methodSignature" : "public static float round(float x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07979() throws Throwable {\n    MathUtils.lcm((-1), (-1));\n    MathUtils.binomialCoefficient(3005, 0);\n    MathUtils.indicator(0L);\n    double[] doubleArray0 = new double[8];\n    doubleArray0[0] = (double) 1;\n    doubleArray0[1] = (double) 1L;\n    doubleArray0[2] = (double) 0;\n    doubleArray0[3] = (double) 3005;\n    doubleArray0[4] = (double) 1L;\n    doubleArray0[5] = (double) 1;\n    doubleArray0[6] = (double) 0;\n    doubleArray0[7] = (double) 1L;\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.pow(3005, 1L);\n    MathUtils.binomialCoefficientLog(1, (-1));\n    MathUtils.round((float) 3005, (-1), (-1));\n}",
    "testName" : "test07979"
  },
  "test01515" : {
    "methodSignature" : "public static long binomialCoefficient(final int n, final int k)",
    "methodName" : "binomialCoefficient",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01515() throws Throwable {\n    int int0 = 2147483624;\n    MathUtils.binomialCoefficient(2147483624, 3225);\n}",
    "testName" : "test01515"
  },
  "test06767" : {
    "methodSignature" : "public static double[] normalizeArray(double[] values, double normalizedSum) throws ArithmeticException, IllegalArgumentException",
    "methodName" : "normalizeArray",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06767() throws Throwable {\n    double[] doubleArray0 = new double[4];\n    doubleArray0[0] = 1.0;\n    doubleArray0[1] = 0.0;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = 2410.01633741;\n    MathUtils.normalizeArray(doubleArray0, 2410.01633741);\n}",
    "testName" : "test06767"
  },
  "test03535" : {
    "methodSignature" : "public static BigInteger pow(final BigInteger k, long e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03535() throws Throwable {\n    int int0 = (-2503);\n    MathUtils.indicator((-2503));\n    BigInteger bigInteger0 = BigInteger.TEN;\n    BigInteger bigInteger1 = BigInteger.ONE;\n    bigInteger1.divide(bigInteger0);\n    bigInteger1.floatValue();\n    bigInteger0.modInverse(bigInteger1);\n    MathUtils.pow(bigInteger0, (long) (-2503));\n}",
    "testName" : "test03535"
  },
  "test02727" : {
    "methodSignature" : "public static double round(double x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02727() throws Throwable {\n    MathUtils.indicator((-1802.0896F));\n    MathUtils.compareTo(1250.241414073, 1250.241414073, 1250.241414073);\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = (double) 0;\n    doubleArray0[1] = 1250.241414073;\n    doubleArray0[2] = (double) (-1.0F);\n    doubleArray0[3] = (double) 0;\n    doubleArray0[4] = (double) 0;\n    doubleArray0[5] = 1250.241414073;\n    MathUtils.normalizeArray(doubleArray0, 1250.241414073);\n    MathUtils.sign(Double.NaN);\n    BigInteger bigInteger0 = BigInteger.ZERO;\n    BigInteger bigInteger1 = BigInteger.TEN;\n    bigInteger0.add(bigInteger1);\n    bigInteger0.remainder(bigInteger1);\n    bigInteger0.add(bigInteger1);\n    bigInteger0.shortValueExact();\n    MathUtils.pow(bigInteger0, 0L);\n    MathUtils.sign((byte) 0);\n    MathUtils.factorialDouble(61);\n    MathUtils.addAndCheck((long) (byte) 0, 0L);\n    MathUtils.cosh(5.075802138772222E83);\n    MathUtils.indicator((float) (byte) 0);\n    MathUtils.round(Double.NEGATIVE_INFINITY, 0, 0);\n}",
    "testName" : "test02727"
  },
  "test115115" : {
    "methodSignature" : "public static int mulAndCheck(int x, int y)",
    "methodName" : "mulAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115115() throws Throwable {\n    MathUtils.hash((-1180.46));\n    int int0 = 0;\n    MathUtils.scalb(0.0, 0);\n    int int1 = 0;\n    MathUtils.pow(0, 1027L);\n    MathUtils.sinh(0);\n    MathUtils.pow((-2479L), 0);\n    MathUtils.mulAndCheck(Integer.MIN_VALUE, (-894500493));\n}",
    "testName" : "test115115"
  },
  "test01919" : {
    "methodSignature" : "public static int pow(final int k, long e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01919() throws Throwable {\n    MathUtils.subAndCheck((-826L), 2728L);\n    MathUtils.equals((-2153.953025617625), (-2153.953025617625), 139);\n    int[] intArray0 = new int[9];\n    intArray0[0] = 139;\n    intArray0[1] = 139;\n    intArray0[2] = 139;\n    intArray0[3] = 139;\n    intArray0[4] = 139;\n    intArray0[5] = 139;\n    intArray0[6] = 139;\n    intArray0[7] = 139;\n    intArray0[8] = 139;\n    MathUtils.distance1(intArray0, intArray0);\n    MathUtils.pow(3025L, (long) 139);\n    MathUtils.hash((double) (-3554L));\n    MathUtils.pow(139, (-1639L));\n}",
    "testName" : "test01919"
  },
  "test03939" : {
    "methodSignature" : "public static boolean equals(double x, double y, int maxUlps)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03939() throws Throwable {\n    double[] doubleArray0 = null;\n    MathUtils.hash((double[]) null);\n    MathUtils.log(0, 0);\n    int int0 = (-2076);\n    MathUtils.equals(0.0, 0.0, (-2076));\n}",
    "testName" : "test03939"
  },
  "test09595" : {
    "methodSignature" : "public static long factorial(final int n)",
    "methodName" : "factorial",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09595() throws Throwable {\n    MathUtils.scalb(0.0, 662);\n    MathUtils.sign((short) (-1));\n    byte[] byteArray0 = new byte[4];\n    byteArray0[0] = (byte) 0;\n    byteArray0[1] = (byte) 0;\n    byteArray0[2] = (byte) 0;\n    byteArray0[3] = (byte) (-119);\n    BigInteger bigInteger0 = new BigInteger(byteArray0);\n    BigInteger bigInteger1 = new BigInteger(byteArray0);\n    bigInteger0.and(bigInteger1);\n    bigInteger0.toString((int) (byte) 0);\n    MathUtils.pow(bigInteger0, (int) (byte) 0);\n    MathUtils.factorial((-1391));\n}",
    "testName" : "test09595"
  },
  "test08383" : {
    "methodSignature" : "public static boolean equals(double x, double y, int maxUlps)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08383() throws Throwable {\n    MathUtils.subAndCheck((-908), (-908));\n    byte byte0 = (byte) 0;\n    MathUtils.sign((byte) 0);\n    MathUtils.normalizeAngle((-1.0), (-2013.0));\n    MathUtils.sign((int) (byte) 0);\n    int int0 = 0;\n    MathUtils.round(0.0, 7, 0);\n    MathUtils.subAndCheck(0, (-13));\n    MathUtils.addAndCheck(0, 5159);\n    MathUtils.nextAfter((byte) 0, (-1.0));\n    MathUtils.equals((-1.0), (-4.9E-324), (-2531));\n}",
    "testName" : "test08383"
  },
  "test05151" : {
    "methodSignature" : "public static long subAndCheck(long a, long b)",
    "methodName" : "subAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05151() throws Throwable {\n    MathUtils.indicator(0.0F);\n    MathUtils.normalizeAngle(1.0F, 0.0);\n    MathUtils.round(1.0, 1640);\n    MathUtils.log(3369.446044, 1.0);\n    MathUtils.factorialDouble(0);\n    MathUtils.subAndCheck((long) 1640, (long) 1640);\n}",
    "testName" : "test05151"
  },
  "test123123" : {
    "methodSignature" : "public static int compareTo(double x, double y, double eps)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test123123() throws Throwable {\n    MathUtils.factorial(0);\n    MathUtils.compareTo(0.0, 0.0, 1138.50341);\n}",
    "testName" : "test123123"
  },
  "test0077" : {
    "methodSignature" : "public static int pow(final int k, int e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0077() throws Throwable {\n    MathUtils.round(1.0, 1159);\n    MathUtils.cosh(0.0);\n    MathUtils.binomialCoefficient(1159, 1);\n    MathUtils.round((-1.0F), 1159);\n    MathUtils.binomialCoefficient(1159, 5);\n    MathUtils.binomialCoefficient(1, 0);\n    MathUtils.pow((-517L), (long) 5);\n    MathUtils.pow(5, 851);\n}",
    "testName" : "test0077"
  },
  "test07171" : {
    "methodSignature" : "public static long addAndCheck(long a, long b)",
    "methodName" : "addAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07171() throws Throwable {\n    MathUtils.mulAndCheck((-1), 3209);\n    MathUtils.sign(2736.48F);\n    MathUtils.sign(2026L);\n    MathUtils.sign((short) 3565);\n    MathUtils.indicator((-1650L));\n    MathUtils.subAndCheck(0L, 79L);\n    int[] intArray0 = new int[8];\n    intArray0[0] = (int) (short) 3565;\n    intArray0[1] = 3209;\n    intArray0[2] = (int) (short) 1;\n    intArray0[3] = 3209;\n    intArray0[4] = (int) (short) 3565;\n    intArray0[5] = (int) (short) 1;\n    intArray0[6] = 3209;\n    intArray0[7] = (int) (short) 1;\n    MathUtils.distance(intArray0, intArray0);\n    MathUtils.addAndCheck(361L, (long) 3209);\n}",
    "testName" : "test07171"
  },
  "test04343" : {
    "methodSignature" : "public static BigInteger pow(final BigInteger k, BigInteger e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04343() throws Throwable {\n    MathUtils.sign(1234.98F);\n    MathUtils.lcm(1260, 1260);\n    MathUtils.pow(1260, 0);\n    MathUtils.indicator(3015);\n    MathUtils.binomialCoefficientDouble(0, 0);\n    MathUtils.sign(0.0F);\n    MathUtils.indicator(1390);\n    BigInteger bigInteger0 = BigInteger.ONE;\n    bigInteger0.longValueExact();\n    MathUtils.pow((BigInteger) null, bigInteger0);\n}",
    "testName" : "test04343"
  },
  "test09999" : {
    "methodSignature" : "public static int subAndCheck(int x, int y)",
    "methodName" : "subAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09999() throws Throwable {\n    MathUtils.subAndCheck(1, 1);\n}",
    "testName" : "test09999"
  },
  "test104104" : {
    "methodSignature" : "public static int gcd(final int p, final int q)",
    "methodName" : "gcd",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104104() throws Throwable {\n    MathUtils.gcd((-94), 0);\n}",
    "testName" : "test104104"
  },
  "test08787" : {
    "methodSignature" : "public static boolean equals(double x, double y, int maxUlps)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08787() throws Throwable {\n    MathUtils.sign(0.0);\n    MathUtils.normalizeAngle(0.0, 0.0);\n    double[] doubleArray0 = new double[9];\n    doubleArray0[0] = 0.0;\n    doubleArray0[1] = 0.0;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = 0.0;\n    doubleArray0[4] = 0.0;\n    doubleArray0[5] = 0.0;\n    doubleArray0[6] = 0.0;\n    doubleArray0[7] = 0.0;\n    doubleArray0[8] = 0.0;\n    MathUtils.distance1(doubleArray0, doubleArray0);\n    MathUtils.normalizeAngle(2883.06, 3276.25503479);\n    MathUtils.equals(886.93842, 0.0, 20);\n    MathUtils.pow(603L, 0);\n    MathUtils.equals((-90.127840696958), 0.0, (-1370));\n}",
    "testName" : "test08787"
  },
  "test05555" : {
    "methodSignature" : "public static int pow(final int k, int e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05555() throws Throwable {\n    MathUtils.indicator(3535.7);\n    MathUtils.pow(1659, (-2434));\n}",
    "testName" : "test05555"
  },
  "test01111" : {
    "methodSignature" : "public static double round(double x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01111() throws Throwable {\n    int int0 = Integer.MIN_VALUE;\n    MathUtils.binomialCoefficient(3237, Integer.MIN_VALUE);\n    byte byte0 = (byte) 0;\n    MathUtils.indicator((byte) 0);\n    MathUtils.sign((byte) 1);\n    MathUtils.cosh((-1926.605913337));\n    MathUtils.round((-1739.42584287), Integer.MIN_VALUE, Integer.MIN_VALUE);\n}",
    "testName" : "test01111"
  },
  "test06363" : {
    "methodSignature" : "public static int pow(final int k, long e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06363() throws Throwable {\n    short short0 = (short) 0;\n    MathUtils.indicator((short) 0);\n    MathUtils.pow((int) (short) 0, (-1102L));\n}",
    "testName" : "test06363"
  },
  "test03131" : {
    "methodSignature" : "public static BigInteger pow(final BigInteger k, int e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03131() throws Throwable {\n    MathUtils.normalizeAngle((-1794.233680471964), (-1794.233680471964));\n    MathUtils.log(0.0, (-1794.233680471964));\n    MathUtils.lcm((-1), 1);\n    MathUtils.round(18.724F, (-1), 1);\n    double[] doubleArray0 = new double[8];\n    doubleArray0[0] = (-1794.233680471964);\n    doubleArray0[1] = 0.0;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = 0.0;\n    doubleArray0[4] = (double) (-1);\n    doubleArray0[5] = (double) 18.724F;\n    doubleArray0[6] = (double) 1;\n    doubleArray0[7] = (-1794.233680471964);\n    MathUtils.distance1(doubleArray0, doubleArray0);\n    int[] intArray0 = new int[7];\n    intArray0[0] = 1;\n    intArray0[1] = 1;\n    intArray0[2] = (-1);\n    intArray0[3] = 1;\n    intArray0[4] = (-1);\n    intArray0[5] = 1;\n    intArray0[6] = 1;\n    MathUtils.distance(intArray0, intArray0);\n    BigInteger bigInteger0 = BigInteger.ZERO;\n    MathUtils.pow(bigInteger0, (-1));\n}",
    "testName" : "test03131"
  },
  "test07575" : {
    "methodSignature" : "public static double round(double x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07575() throws Throwable {\n    double[] doubleArray0 = new double[0];\n    MathUtils.hash(doubleArray0);\n    MathUtils.cosh(2864.62672122);\n    int[] intArray0 = new int[2];\n    intArray0[0] = 1;\n    intArray0[1] = 1;\n    MathUtils.distanceInf(intArray0, intArray0);\n    double double0 = (-2236.52487723688);\n    int int0 = (-67);\n    MathUtils.round((-2236.52487723688), (-67), (-2790));\n}",
    "testName" : "test07575"
  },
  "test131131" : {
    "methodSignature" : "public static BigInteger pow(final BigInteger k, long e) throws IllegalArgumentException",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test131131() throws Throwable {\n    MathUtils.nextAfter((-1.0), (-1.0));\n    byte byte0 = (byte) 39;\n    MathUtils.indicator((byte) 39);\n    MathUtils.pow((BigInteger) null, 1L);\n}",
    "testName" : "test131131"
  },
  "test09191" : {
    "methodSignature" : "public static boolean equals(double x, double y, int maxUlps)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09191() throws Throwable {\n    int int0 = (-202);\n    MathUtils.round(0.0F, (-202));\n    MathUtils.round((double) Float.NaN, 480);\n    MathUtils.equals((double) 480, (double) (-202), (-202));\n}",
    "testName" : "test09191"
  },
  "test112112" : {
    "methodSignature" : "public static double[] normalizeArray(double[] values, double normalizedSum) throws ArithmeticException, IllegalArgumentException",
    "methodName" : "normalizeArray",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112112() throws Throwable {\n    MathUtils.factorialLog(5);\n    MathUtils.round((float) 5, 0, 5);\n    MathUtils.equals((double) 0, 49.05);\n    MathUtils.gcd(0, 1);\n    double[] doubleArray0 = new double[0];\n    MathUtils.normalizeArray(doubleArray0, 1);\n}",
    "testName" : "test112112"
  },
  "test144160" : {
    "methodSignature" : "public static double binomialCoefficientDouble(final int n, final int k)",
    "methodName" : "binomialCoefficientDouble",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test144160() throws Throwable {\n    int int0 = 0;\n    int int1 = (-603);\n    MathUtils.binomialCoefficientDouble(0, (-603));\n    MathUtils.sinh(1.0);\n    MathUtils.log(3670.43953, 0);\n    MathUtils.indicator((byte) 52);\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = (double) (-603);\n    doubleArray0[1] = 1.1752011936438016;\n    doubleArray0[2] = (double) (-603);\n    doubleArray0[3] = 3670.43953;\n    doubleArray0[4] = (double) (-603);\n    MathUtils.distance1(doubleArray0, doubleArray0);\n    MathUtils.distance(doubleArray0, doubleArray0);\n    MathUtils.distanceInf(doubleArray0, doubleArray0);\n    MathUtils.equals((-1566.3), 1.0);\n    MathUtils.indicator(0);\n    int int2 = 1633;\n    MathUtils.addAndCheck(20, 1633);\n    MathUtils.binomialCoefficientDouble((-603), 1);\n}",
    "testName" : "test144160"
  }
}