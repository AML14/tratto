{
  "test2323" : {
    "methodSignature" : "public Vector<S> getBarycenter()",
    "methodName" : "getBarycenter",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    double double0 = (-1591.66662191364);\n    PolygonsSet polygonsSet0 = new PolygonsSet((-1591.66662191364), 0.0, (-1591.66662191364), 3.4028234663852886E38);\n    polygonsSet0.computeGeometricalProperties();\n    polygonsSet0.getVertices();\n    polygonsSet0.getBarycenter();\n}",
    "testName" : "test2323"
  },
  "test3434" : {
    "methodSignature" : "public Vector2D[][] getVertices()",
    "methodName" : "getVertices",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();\n    Vector2D vector2D0 = new Vector2D(1582.4253903932238, 1.5038605126792697E7);\n    Vector2D vector2D1 = new Vector2D(1589.18882882929, vector2D0, 2570.66, vector2D0, 1.5038605126792697E7, vector2D0, 85.706, vector2D0);\n    Line line0 = new Line(vector2D0, vector2D1);\n    Segment segment0 = new Segment(vector2D0, vector2D0, line0);\n    SubLine subLine0 = new SubLine(segment0);\n    Line line1 = new Line(vector2D0, (-5283.7447));\n    IntervalsSet intervalsSet0 = new IntervalsSet((-425.2445), (-5283.7447));\n    BSPTree<Euclidean1D> bSPTree0 = new BSPTree<Euclidean1D>(linkedList0);\n    IntervalsSet intervalsSet1 = intervalsSet0.buildNew(bSPTree0);\n    AbstractSubHyperplane<Euclidean2D, Euclidean1D> abstractSubHyperplane0 = subLine0.buildNew(line1, intervalsSet1);\n    linkedList0.add((SubHyperplane<Euclidean2D>) abstractSubHyperplane0);\n    PolygonsSet polygonsSet0 = new PolygonsSet(linkedList0);\n    polygonsSet0.getVertices();\n}",
    "testName" : "test3434"
  },
  "test1313" : {
    "methodSignature" : "public Vector2D[][] getVertices()",
    "methodName" : "getVertices",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    PolygonsSet polygonsSet0 = new PolygonsSet();\n    BSPTree<Euclidean2D> bSPTree0 = polygonsSet0.getTree(true);\n    PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree0);\n    polygonsSet1.getVertices();\n}",
    "testName" : "test1313"
  },
  "test2424" : {
    "methodSignature" : "public double getNorm()",
    "methodName" : "getNorm",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();\n    Vector2D vector2D0 = Vector2D.ZERO;\n    Line line0 = new Line(vector2D0, (-119.352107946));\n    line0.reset(vector2D0, 2461.7259619);\n    Vector2D vector2D1 = Vector2D.NEGATIVE_INFINITY;\n    vector2D0.distance1(vector2D1);\n    SubLine subLine0 = line0.wholeHyperplane();\n    linkedList0.add((SubHyperplane<Euclidean2D>) subLine0);\n    SubLine subLine1 = line0.wholeHyperplane();\n    PolygonsSet polygonsSet0 = new PolygonsSet(linkedList0);\n    polygonsSet0.getVertices();\n    polygonsSet0.computeGeometricalProperties();\n    BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>(linkedList0);\n    BSPTree<Euclidean2D> bSPTree1 = new BSPTree<Euclidean2D>(subLine0, bSPTree0, bSPTree0, polygonsSet0);\n    subLine0.intersection(subLine1, true);\n    polygonsSet0.getBarycenter();\n    vector2D1.getNorm();\n}",
    "testName" : "test2424"
  },
  "test3535" : {
    "methodSignature" : "public Vector2D[][] getVertices()",
    "methodName" : "getVertices",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    PolygonsSet polygonsSet0 = new PolygonsSet(1.5038586206539933E7, (-20.0), 3866.154084346884, (-20.0));\n    BSPTree<Euclidean2D> bSPTree0 = polygonsSet0.getTree(true);\n    bSPTree0.getPlus();\n    polygonsSet0.getBarycenter();\n    polygonsSet0.computeGeometricalProperties();\n    PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree0);\n    polygonsSet1.getVertices();\n}",
    "testName" : "test3535"
  },
  "test1010" : {
    "methodSignature" : "public PolygonsSet(final BSPTree<Euclidean2D> tree)",
    "methodName" : "PolygonsSet",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    PolygonsSet polygonsSet0 = new PolygonsSet(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, (-2342.849338), 1419.1162628977);\n    polygonsSet0.computeGeometricalProperties();\n    BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>();\n    polygonsSet0.buildNew(bSPTree0);\n    PolygonsSet polygonsSet1 = null;\n    polygonsSet1 = new PolygonsSet(bSPTree0);\n}",
    "testName" : "test1010"
  },
  "test2121" : {
    "methodSignature" : "protected void computeGeometricalProperties()",
    "methodName" : "computeGeometricalProperties",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();\n    Vector2D vector2D0 = new Vector2D(0.0, 0.0);\n    Vector2D vector2D1 = new Vector2D(Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY);\n    vector2D1.getNormInf();\n    vector2D0.subtract((Vector<Euclidean2D>) vector2D1);\n    SubLine subLine0 = new SubLine(vector2D0, vector2D0);\n    subLine0.getSegments();\n    linkedList0.push(subLine0);\n    PolygonsSet polygonsSet0 = new PolygonsSet(linkedList0);\n    PolygonsSet polygonsSet1 = new PolygonsSet();\n    polygonsSet0.contains(polygonsSet1);\n    polygonsSet0.computeGeometricalProperties();\n    polygonsSet0.computeGeometricalProperties();\n}",
    "testName" : "test2121"
  },
  "test3232" : {
    "methodSignature" : "public BSPTree<S> split(final SubHyperplane<S> sub)",
    "methodName" : "split",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    PolygonsSet polygonsSet0 = new PolygonsSet(1.5038586206539933E7, (-20.0), 3866.154084346884, (-20.0));\n    BSPTree<Euclidean2D> bSPTree0 = polygonsSet0.getTree(true);\n    BSPTree<Euclidean2D> bSPTree1 = bSPTree0.getMinus();\n    BSPTree<Euclidean2D> bSPTree2 = bSPTree1.getPlus();\n    polygonsSet0.getBarycenter();\n    BSPTree<Euclidean2D> bSPTree3 = polygonsSet0.getTree(true);\n    PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree3);\n    polygonsSet1.computeGeometricalProperties();\n    polygonsSet0.computeGeometricalProperties();\n    Vector2D vector2D0 = Vector2D.ZERO;\n    SubLine subLine0 = new SubLine(vector2D0, vector2D0);\n    // Undeclared exception!\n    bSPTree2.split(subLine0);\n}",
    "testName" : "test3232"
  },
  "test1111" : {
    "methodSignature" : "public PolygonsSet buildNew(final BSPTree<Euclidean2D> tree)",
    "methodName" : "buildNew",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    PolygonsSet polygonsSet0 = new PolygonsSet();\n    BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>();\n    polygonsSet0.buildNew(bSPTree0);\n}",
    "testName" : "test1111"
  },
  "test2222" : {
    "methodSignature" : "public BSPTree<S> getParent()",
    "methodName" : "getParent",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    Vector1D vector1D0 = Vector1D.POSITIVE_INFINITY;\n    Vector1D vector1D1 = new Vector1D(4.0, vector1D0, 4.0, vector1D0);\n    boolean boolean0 = true;\n    OrientedPoint orientedPoint0 = new OrientedPoint(vector1D1, true);\n    Vector1D vector1D2 = new Vector1D((-1170.0), vector1D1, (-1170.0), vector1D0);\n    vector1D2.getNorm1();\n    Vector1D.distanceInf(vector1D1, vector1D2);\n    orientedPoint0.wholeHyperplane();\n    Region<Euclidean1D> region0 = null;\n    vector1D0.getNormInf();\n    SubOrientedPoint subOrientedPoint0 = new SubOrientedPoint(orientedPoint0, (Region<Euclidean1D>) null);\n    vector1D1.distance((Vector<Euclidean1D>) vector1D0);\n    BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>(subOrientedPoint0);\n    orientedPoint0.wholeHyperplane();\n    PolygonsSet polygonsSet0 = new PolygonsSet(bSPTree0);\n    polygonsSet0.getVertices();\n    polygonsSet0.computeGeometricalProperties();\n    polygonsSet0.computeGeometricalProperties();\n    bSPTree0.getParent();\n}",
    "testName" : "test2222"
  },
  "test3333" : {
    "methodSignature" : "public PolygonsSet buildNew(final BSPTree<Euclidean2D> tree)",
    "methodName" : "buildNew",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>();\n    PolygonsSet polygonsSet0 = new PolygonsSet(3.4028234663852886E38, 0.0, 0.0, (-1669.7));\n    Vector2D vector2D0 = new Vector2D(0.0, (-1184.552711359));\n    SubLine subLine0 = new SubLine(vector2D0, vector2D0);\n    polygonsSet0.intersection(subLine0);\n    polygonsSet0.getVertices();\n    polygonsSet0.buildNew(bSPTree0);\n}",
    "testName" : "test3333"
  },
  "test011" : {
    "methodSignature" : "public PolygonsSet buildNew(final BSPTree<Euclidean2D> tree)",
    "methodName" : "buildNew",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    PolygonsSet polygonsSet0 = new PolygonsSet();\n    polygonsSet0.computeGeometricalProperties();\n    polygonsSet0.getVertices();\n    polygonsSet0.buildNew((BSPTree<Euclidean2D>) null);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public Vector2D[][] getVertices()",
    "methodName" : "getVertices",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    PolygonsSet polygonsSet0 = new PolygonsSet(3.4028234663852886E38, (-1.0E-10), 836.8253214027037, (-1.0E-10));\n    polygonsSet0.getVertices();\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public double getSize()",
    "methodName" : "getSize",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    PolygonsSet polygonsSet0 = new PolygonsSet((-1.0E-10), 1.0E-10, (-1.0E-10), 1.0E-10);\n    polygonsSet0.getSize();\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "protected void computeGeometricalProperties()",
    "methodName" : "computeGeometricalProperties",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    PolygonsSet polygonsSet0 = new PolygonsSet(3.4028234663852886E38, 0.0, 0.0, (-1669.7));\n    polygonsSet0.computeGeometricalProperties();\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "protected void computeGeometricalProperties()",
    "methodName" : "computeGeometricalProperties",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    PolygonsSet polygonsSet0 = new PolygonsSet(2652.69214209, 0.0, 0.0, (-2833.8567));\n    polygonsSet0.computeGeometricalProperties();\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "public Vector2D[][] getVertices()",
    "methodName" : "getVertices",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();\n    linkedList0.iterator();\n    PolygonsSet polygonsSet0 = new PolygonsSet(linkedList0);\n    BSPTree<Euclidean2D> bSPTree0 = null;\n    Vector3D vector3D0 = Vector3D.PLUS_J;\n    Plane plane0 = new Plane(vector3D0, vector3D0);\n    Vector2D vector2D0 = plane0.toSubSpace(vector3D0);\n    LinkedList<Euclidean1D> linkedList1 = new LinkedList<Euclidean1D>();\n    linkedList0.containsAll(linkedList1);\n    Vector2D vector2D1 = new Vector2D((-1634.333308), vector2D0, 0.0, vector2D0, (-1634.333308), vector2D0);\n    vector2D1.add((Vector<Euclidean2D>) vector2D0);\n    vector2D0.distance1(vector2D1);\n    SubLine subLine0 = new SubLine(vector2D0, vector2D0);\n    linkedList0.add((SubHyperplane<Euclidean2D>) subLine0);\n    PolygonsSet polygonsSet1 = polygonsSet0.buildNew((BSPTree<Euclidean2D>) null);\n    polygonsSet1.getVertices();\n    polygonsSet1.getSize();\n    polygonsSet0.getVertices();\n}",
    "testName" : "test1616"
  },
  "test2727" : {
    "methodSignature" : "public Vector2D[][] getVertices()",
    "methodName" : "getVertices",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    double double0 = (-1591.66662191364);\n    PolygonsSet polygonsSet0 = new PolygonsSet((-1591.66662191364), 0.0, (-1591.66662191364), 3.4028234663852886E38);\n    Vector2D vector2D0 = Vector2D.ZERO;\n    polygonsSet0.getVertices();\n    Line line0 = new Line(vector2D0, 3.4028234663852886E38);\n    SubLine subLine0 = line0.wholeHyperplane();\n    BSPTree<Euclidean2D> bSPTree0 = polygonsSet0.getTree(true);\n    bSPTree0.getParent();\n    SubOrientedPoint subOrientedPoint0 = new SubOrientedPoint((Hyperplane<Euclidean1D>) null, (Region<Euclidean1D>) null);\n    BSPTree<Euclidean2D> bSPTree1 = new BSPTree<Euclidean2D>(subLine0, (BSPTree<Euclidean2D>) null, bSPTree0, subOrientedPoint0);\n    polygonsSet0.buildNew(bSPTree1);\n    polygonsSet0.getSize();\n    polygonsSet0.getVertices();\n    polygonsSet0.getBarycenter();\n    polygonsSet0.getVertices();\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "public PolygonsSet(final BSPTree<Euclidean2D> tree)",
    "methodName" : "PolygonsSet",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    Euclidean2D euclidean2D0 = Euclidean2D.getInstance();\n    Euclidean1D euclidean1D0 = euclidean2D0.getSubSpace();\n    BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>(euclidean1D0);\n    PolygonsSet polygonsSet0 = new PolygonsSet(bSPTree0);\n}",
    "testName" : "test1717"
  },
  "test2828" : {
    "methodSignature" : "public Vector2D[][] getVertices()",
    "methodName" : "getVertices",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    double double0 = (-1591.66662191364);\n    PolygonsSet polygonsSet0 = new PolygonsSet((-1591.66662191364), 0.0, (-1591.66662191364), 2609.623610342003);\n    polygonsSet0.computeGeometricalProperties();\n    Vector2D vector2D0 = Vector2D.ZERO;\n    Line line0 = new Line(vector2D0, 2609.623610342003);\n    SubLine subLine0 = line0.wholeHyperplane();\n    BSPTree<Euclidean2D> bSPTree0 = polygonsSet0.getTree(true);\n    bSPTree0.getParent();\n    SubOrientedPoint subOrientedPoint0 = new SubOrientedPoint((Hyperplane<Euclidean1D>) null, (Region<Euclidean1D>) null);\n    BSPTree<Euclidean2D> bSPTree1 = new BSPTree<Euclidean2D>(subLine0, (BSPTree<Euclidean2D>) null, bSPTree0, subOrientedPoint0);\n    polygonsSet0.buildNew(bSPTree1);\n    polygonsSet0.getSize();\n    polygonsSet0.getVertices();\n    polygonsSet0.getBarycenter();\n    polygonsSet0.getVertices();\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public PolygonsSet(final Collection<SubHyperplane<Euclidean2D>> boundary)",
    "methodName" : "PolygonsSet",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();\n    PolygonsSet polygonsSet0 = new PolygonsSet(linkedList0);\n}",
    "testName" : "test1414"
  },
  "test2525" : {
    "methodSignature" : "protected void computeGeometricalProperties()",
    "methodName" : "computeGeometricalProperties",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    PolygonsSet polygonsSet0 = new PolygonsSet(2652.69214209, 0.0, 0.0, (-2833.8567));\n    polygonsSet0.getVertices();\n    polygonsSet0.computeGeometricalProperties();\n    polygonsSet0.getVertices();\n    polygonsSet0.computeGeometricalProperties();\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public Vector2D[][] getVertices()",
    "methodName" : "getVertices",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    PolygonsSet polygonsSet0 = new PolygonsSet();\n    polygonsSet0.computeGeometricalProperties();\n    polygonsSet0.computeGeometricalProperties();\n    polygonsSet0.getVertices();\n    Vector2D vector2D0 = Vector2D.NaN;\n    Line line0 = new Line(vector2D0, (-399.4336413617017));\n    Segment segment0 = new Segment(vector2D0, vector2D0, line0);\n    SubLine subLine0 = new SubLine(segment0);\n    BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>();\n    SubLine subLine1 = new SubLine(segment0);\n    AffineTransform affineTransform0 = AffineTransform.getRotateInstance((-3356.39928), 0.0, 0.0, (-3356.39928));\n    AffineTransform affineTransform1 = new AffineTransform(affineTransform0);\n    Transform<Euclidean2D, Euclidean1D> transform0 = Line.getTransform(affineTransform1);\n    subLine1.applyTransform(transform0);\n    bSPTree0.getCell(vector2D0);\n    Vector<Euclidean2D> vector0 = polygonsSet0.getBarycenter();\n    subLine1.reunite(subLine0);\n    vector2D0.distanceInf(vector0);\n    subLine0.reunite(subLine1);\n    BSPTree<Euclidean2D> bSPTree1 = new BSPTree<Euclidean2D>(subLine0, bSPTree0, bSPTree0, vector2D0);\n    BSPTree<Euclidean2D> bSPTree2 = bSPTree1.getPlus();\n    BSPTree<Euclidean2D> bSPTree3 = bSPTree2.getCell(vector2D0);\n    PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree3);\n    polygonsSet0.computeGeometricalProperties();\n    polygonsSet1.getVertices();\n    PolygonsSet polygonsSet2 = polygonsSet0.buildNew(bSPTree2);\n    polygonsSet2.computeGeometricalProperties();\n    polygonsSet2.computeGeometricalProperties();\n    polygonsSet0.buildNew(bSPTree0);\n    polygonsSet1.buildNew(bSPTree0);\n    polygonsSet1.getVertices();\n}",
    "testName" : "test1515"
  },
  "test3030" : {
    "methodSignature" : "public Vector2D[][] getVertices()",
    "methodName" : "getVertices",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    PolygonsSet polygonsSet0 = new PolygonsSet(1.5038586206539933E7, (-20.0), 3866.154084346884, (-20.0));\n    BSPTree<Euclidean2D> bSPTree0 = polygonsSet0.getTree(true);\n    BSPTree<Euclidean2D> bSPTree1 = bSPTree0.getMinus();\n    BSPTree<Euclidean2D> bSPTree2 = bSPTree1.getPlus();\n    Vector<Euclidean2D> vector0 = polygonsSet0.getBarycenter();\n    BSPTree<Euclidean2D> bSPTree3 = bSPTree2.getCell(vector0);\n    PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree3);\n    polygonsSet1.computeGeometricalProperties();\n    polygonsSet0.computeGeometricalProperties();\n    Vector2D vector2D0 = Vector2D.ZERO;\n    SubLine subLine0 = new SubLine(vector2D0, vector2D0);\n    bSPTree2.split(subLine0);\n    polygonsSet0.getVertices();\n    BSPTreeVisitor<Euclidean2D> bSPTreeVisitor0 = (BSPTreeVisitor<Euclidean2D>) mock(BSPTreeVisitor.class, new ViolatedAssumptionAnswer());\n    doReturn((BSPTreeVisitor.Order) null).when(bSPTreeVisitor0).visitOrder(nullable(org.apache.commons.math3.geometry.partitioning.BSPTree.class));\n    bSPTree0.visit(bSPTreeVisitor0);\n    polygonsSet1.getVertices();\n    polygonsSet1.getVertices();\n    polygonsSet1.getVertices();\n}",
    "testName" : "test3030"
  },
  "test3131" : {
    "methodSignature" : "public Vector2D[][] getVertices()",
    "methodName" : "getVertices",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    PolygonsSet polygonsSet0 = new PolygonsSet((-1.0E-10), 4.503599627370496E15, (-1.0E-10), 4.503599627370496E15);\n    AffineTransform affineTransform0 = AffineTransform.getRotateInstance(0.5000000000042687, 4.503599627370496E15, (-1.0E-10), 911.0);\n    Transform<Euclidean2D, Euclidean1D> transform0 = Line.getTransform(affineTransform0);\n    polygonsSet0.applyTransform(transform0);\n    polygonsSet0.getVertices();\n}",
    "testName" : "test3131"
  },
  "test000" : {
    "methodSignature" : "protected void computeGeometricalProperties()",
    "methodName" : "computeGeometricalProperties",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    PolygonsSet polygonsSet0 = new PolygonsSet((-1592.0913632712961), (-2.243523898209535), (-1592.0913632712961), 3.4028234663852886E38);\n    polygonsSet0.computeGeometricalProperties();\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "protected void computeGeometricalProperties()",
    "methodName" : "computeGeometricalProperties",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();\n    Vector3D vector3D0 = Vector3D.NaN;\n    Plane plane0 = new Plane(vector3D0, vector3D0, vector3D0);\n    Vector2D vector2D0 = plane0.toSubSpace(vector3D0);\n    SubLine subLine0 = new SubLine(vector2D0, vector2D0);\n    linkedList0.add((SubHyperplane<Euclidean2D>) subLine0);\n    plane0.toSpace(vector2D0);\n    PolygonsSet polygonsSet0 = new PolygonsSet(linkedList0);\n    polygonsSet0.computeGeometricalProperties();\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "protected void computeGeometricalProperties()",
    "methodName" : "computeGeometricalProperties",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    PolygonsSet polygonsSet0 = new PolygonsSet(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY);\n    polygonsSet0.computeGeometricalProperties();\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public Vector2D[][] getVertices()",
    "methodName" : "getVertices",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    PolygonsSet polygonsSet0 = new PolygonsSet(1.5038586206539933E7, (-20.0), 3866.154084346884, (-20.0));\n    BSPTree<Euclidean2D> bSPTree0 = polygonsSet0.getTree(true);\n    BSPTree<Euclidean2D> bSPTree1 = bSPTree0.getPlus();\n    polygonsSet0.getBarycenter();\n    PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree1);\n    polygonsSet1.computeGeometricalProperties();\n    polygonsSet0.getVertices();\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public Vector2D[][] getVertices()",
    "methodName" : "getVertices",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    PolygonsSet polygonsSet0 = new PolygonsSet(3.4028234663852886E38, 0.0, 0.0, (-1669.7));\n    polygonsSet0.getVertices();\n}",
    "testName" : "test088"
  },
  "test1818" : {
    "methodSignature" : "public Vector2D[][] getVertices()",
    "methodName" : "getVertices",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    Vector2D vector2D0 = Vector2D.NEGATIVE_INFINITY;\n    Vector2D vector2D1 = new Vector2D((-0.999999999999998), vector2D0);\n    Line line0 = new Line(vector2D1, 3166.5879);\n    PolygonsSet polygonsSet0 = line0.wholeSpace();\n    polygonsSet0.getVertices();\n    line0.toSubSpace(vector2D1);\n    BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>(polygonsSet0);\n    bSPTree0.insertCut(line0);\n    BSPTree<Euclidean2D> bSPTree1 = bSPTree0.copySelf();\n    BSPTree.LeafMerger<Euclidean2D> bSPTree_LeafMerger0 = (BSPTree.LeafMerger<Euclidean2D>) mock(BSPTree.LeafMerger.class, new ViolatedAssumptionAnswer());\n    doReturn((BSPTree) null, (BSPTree) null).when(bSPTree_LeafMerger0).merge(nullable(org.apache.commons.math3.geometry.partitioning.BSPTree.class), nullable(org.apache.commons.math3.geometry.partitioning.BSPTree.class), nullable(org.apache.commons.math3.geometry.partitioning.BSPTree.class), anyBoolean(), anyBoolean());\n    bSPTree0.merge(bSPTree1, bSPTree_LeafMerger0);\n    Euclidean2D euclidean2D0 = Euclidean2D.getInstance();\n    euclidean2D0.getSubSpace();\n    bSPTree0.insertInTree(bSPTree1, true);\n    bSPTree1.setAttribute(euclidean2D0);\n    PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree1);\n    polygonsSet0.computeGeometricalProperties();\n    polygonsSet1.getVertices();\n    polygonsSet1.computeGeometricalProperties();\n    polygonsSet0.getVertices();\n}",
    "testName" : "test1818"
  },
  "test2929" : {
    "methodSignature" : "public Vector2D[][] getVertices()",
    "methodName" : "getVertices",
    "className" : "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    double[] doubleArray0 = new double[1];\n    BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>();\n    PolygonsSet polygonsSet0 = new PolygonsSet(3.4028234663852886E38, (-1.0E-10), 834.34864486553, (-1669.7));\n    polygonsSet0.getVertices();\n}",
    "testName" : "test2929"
  }
}