project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    PolygonsSet polygonsSet0 = new PolygonsSet((-1592.0913632712961), (-2.243523898209535), (-1592.0913632712961), 3.4028234663852886E38);
    polygonsSet0.computeGeometricalProperties();
}",0,
project,0,test011,"public void test011() throws Throwable {
    PolygonsSet polygonsSet0 = new PolygonsSet();
    polygonsSet0.computeGeometricalProperties();
    polygonsSet0.getVertices();
    polygonsSet0.buildNew((BSPTree<Euclidean2D>) null);
}",0,
project,0,test022,"public void test022() throws Throwable {
    LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();
    Vector3D vector3D0 = Vector3D.NaN;
    Plane plane0 = new Plane(vector3D0, vector3D0, vector3D0);
    Vector2D vector2D0 = plane0.toSubSpace(vector3D0);
    SubLine subLine0 = new SubLine(vector2D0, vector2D0);
    linkedList0.add((SubHyperplane<Euclidean2D>) subLine0);
    plane0.toSpace(vector2D0);
    PolygonsSet polygonsSet0 = new PolygonsSet(linkedList0);
    polygonsSet0.computeGeometricalProperties();
}",0,
project,0,test033,"public void test033() throws Throwable {
    PolygonsSet polygonsSet0 = new PolygonsSet(3.4028234663852886E38, (-1.0E-10), 836.8253214027037, (-1.0E-10));
    polygonsSet0.getVertices();
}",0,
project,0,test044,"public void test044() throws Throwable {
    PolygonsSet polygonsSet0 = new PolygonsSet(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY);
    polygonsSet0.computeGeometricalProperties();
}",0,
project,0,test055,"public void test055() throws Throwable {
    PolygonsSet polygonsSet0 = new PolygonsSet((-1.0E-10), 1.0E-10, (-1.0E-10), 1.0E-10);
    polygonsSet0.getSize();
}",0,
project,0,test066,"public void test066() throws Throwable {
    PolygonsSet polygonsSet0 = new PolygonsSet(1.5038586206539933E7, (-20.0), 3866.154084346884, (-20.0));
    BSPTree<Euclidean2D> bSPTree0 = polygonsSet0.getTree(true);
    BSPTree<Euclidean2D> bSPTree1 = bSPTree0.getPlus();
    polygonsSet0.getBarycenter();
    PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree1);
    polygonsSet1.computeGeometricalProperties();
    polygonsSet0.getVertices();
}",0,
project,0,test077,"public void test077() throws Throwable {
    PolygonsSet polygonsSet0 = new PolygonsSet(3.4028234663852886E38, 0.0, 0.0, (-1669.7));
    polygonsSet0.computeGeometricalProperties();
}",0,
project,0,test088,"public void test088() throws Throwable {
    PolygonsSet polygonsSet0 = new PolygonsSet(3.4028234663852886E38, 0.0, 0.0, (-1669.7));
    polygonsSet0.getVertices();
}",0,
project,0,test099,"public void test099() throws Throwable {
    PolygonsSet polygonsSet0 = new PolygonsSet(2652.69214209, 0.0, 0.0, (-2833.8567));
    polygonsSet0.computeGeometricalProperties();
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    PolygonsSet polygonsSet0 = new PolygonsSet(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, (-2342.849338), 1419.1162628977);
    polygonsSet0.computeGeometricalProperties();
    BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>();
    polygonsSet0.buildNew(bSPTree0);
    PolygonsSet polygonsSet1 = null;
    try {
        polygonsSet1 = new PolygonsSet(bSPTree0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // illegal state: internal error, please fill a bug report at https://issues.apache.org/jira/browse/MATH
        //
        verifyException(""org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet"", e);
    }
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    PolygonsSet polygonsSet0 = new PolygonsSet();
    BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>();
    polygonsSet0.buildNew(bSPTree0);
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    PolygonsSet polygonsSet0 = new PolygonsSet();
    BSPTree<Euclidean2D> bSPTree0 = polygonsSet0.getTree(true);
    PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree0);
    polygonsSet1.getVertices();
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();
    PolygonsSet polygonsSet0 = new PolygonsSet(linkedList0);
}",0,
project,0,test1515,"public void test1515() throws Throwable {
    PolygonsSet polygonsSet0 = new PolygonsSet();
    polygonsSet0.computeGeometricalProperties();
    polygonsSet0.computeGeometricalProperties();
    polygonsSet0.getVertices();
    Vector2D vector2D0 = Vector2D.NaN;
    Line line0 = new Line(vector2D0, (-399.4336413617017));
    Segment segment0 = new Segment(vector2D0, vector2D0, line0);
    SubLine subLine0 = new SubLine(segment0);
    BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>();
    SubLine subLine1 = new SubLine(segment0);
    AffineTransform affineTransform0 = AffineTransform.getRotateInstance((-3356.39928), 0.0, 0.0, (-3356.39928));
    AffineTransform affineTransform1 = new AffineTransform(affineTransform0);
    Transform<Euclidean2D, Euclidean1D> transform0 = Line.getTransform(affineTransform1);
    subLine1.applyTransform(transform0);
    bSPTree0.getCell(vector2D0);
    Vector<Euclidean2D> vector0 = polygonsSet0.getBarycenter();
    subLine1.reunite(subLine0);
    vector2D0.distanceInf(vector0);
    subLine0.reunite(subLine1);
    BSPTree<Euclidean2D> bSPTree1 = new BSPTree<Euclidean2D>(subLine0, bSPTree0, bSPTree0, vector2D0);
    BSPTree<Euclidean2D> bSPTree2 = bSPTree1.getPlus();
    BSPTree<Euclidean2D> bSPTree3 = bSPTree2.getCell(vector2D0);
    PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree3);
    polygonsSet0.computeGeometricalProperties();
    polygonsSet1.getVertices();
    PolygonsSet polygonsSet2 = polygonsSet0.buildNew(bSPTree2);
    polygonsSet2.computeGeometricalProperties();
    polygonsSet2.computeGeometricalProperties();
    polygonsSet0.buildNew(bSPTree0);
    polygonsSet1.buildNew(bSPTree0);
    // Undeclared exception!
    try {
        polygonsSet1.getVertices();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet"", e);
    }
}",0,
project,0,test1616,"public void test1616() throws Throwable {
    LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();
    linkedList0.iterator();
    PolygonsSet polygonsSet0 = new PolygonsSet(linkedList0);
    BSPTree<Euclidean2D> bSPTree0 = null;
    Vector3D vector3D0 = Vector3D.PLUS_J;
    Plane plane0 = new Plane(vector3D0, vector3D0);
    Vector2D vector2D0 = plane0.toSubSpace(vector3D0);
    LinkedList<Euclidean1D> linkedList1 = new LinkedList<Euclidean1D>();
    linkedList0.containsAll(linkedList1);
    Vector2D vector2D1 = new Vector2D((-1634.333308), vector2D0, 0.0, vector2D0, (-1634.333308), vector2D0);
    vector2D1.add((Vector<Euclidean2D>) vector2D0);
    vector2D0.distance1(vector2D1);
    SubLine subLine0 = new SubLine(vector2D0, vector2D0);
    linkedList0.add((SubHyperplane<Euclidean2D>) subLine0);
    PolygonsSet polygonsSet1 = polygonsSet0.buildNew((BSPTree<Euclidean2D>) null);
    polygonsSet1.getVertices();
    polygonsSet1.getSize();
    // Undeclared exception!
    try {
        polygonsSet0.getVertices();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet"", e);
    }
}",0,
project,0,test1717,"public void test1717() throws Throwable {
    Euclidean2D euclidean2D0 = Euclidean2D.getInstance();
    Euclidean1D euclidean1D0 = euclidean2D0.getSubSpace();
    BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>(euclidean1D0);
    PolygonsSet polygonsSet0 = new PolygonsSet(bSPTree0);
}",0,
project,0,test1818,"public void test1818() throws Throwable {
    Vector2D vector2D0 = Vector2D.NEGATIVE_INFINITY;
    Vector2D vector2D1 = new Vector2D((-0.999999999999998), vector2D0);
    Line line0 = new Line(vector2D1, 3166.5879);
    PolygonsSet polygonsSet0 = line0.wholeSpace();
    polygonsSet0.getVertices();
    line0.toSubSpace(vector2D1);
    BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>(polygonsSet0);
    bSPTree0.insertCut(line0);
    BSPTree<Euclidean2D> bSPTree1 = bSPTree0.copySelf();
    BSPTree.LeafMerger<Euclidean2D> bSPTree_LeafMerger0 = (BSPTree.LeafMerger<Euclidean2D>) mock(BSPTree.LeafMerger.class, new ViolatedAssumptionAnswer());
    doReturn((BSPTree) null, (BSPTree) null).when(bSPTree_LeafMerger0).merge(nullable(org.apache.commons.math3.geometry.partitioning.BSPTree.class), nullable(org.apache.commons.math3.geometry.partitioning.BSPTree.class), nullable(org.apache.commons.math3.geometry.partitioning.BSPTree.class), anyBoolean(), anyBoolean());
    bSPTree0.merge(bSPTree1, bSPTree_LeafMerger0);
    Euclidean2D euclidean2D0 = Euclidean2D.getInstance();
    euclidean2D0.getSubSpace();
    bSPTree0.insertInTree(bSPTree1, true);
    bSPTree1.setAttribute(euclidean2D0);
    PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree1);
    polygonsSet0.computeGeometricalProperties();
    polygonsSet1.getVertices();
    polygonsSet1.computeGeometricalProperties();
    // Undeclared exception!
    try {
        polygonsSet0.getVertices();
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D cannot be cast to org.apache.commons.math3.geometry.partitioning.BoundaryAttribute
        //
        verifyException(""org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder"", e);
    }
}",0,
project,0,test2121,"public void test2121() throws Throwable {
    LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();
    Vector2D vector2D0 = new Vector2D(0.0, 0.0);
    Vector2D vector2D1 = new Vector2D(Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY);
    vector2D1.getNormInf();
    vector2D0.subtract((Vector<Euclidean2D>) vector2D1);
    SubLine subLine0 = new SubLine(vector2D0, vector2D0);
    subLine0.getSegments();
    linkedList0.push(subLine0);
    PolygonsSet polygonsSet0 = new PolygonsSet(linkedList0);
    PolygonsSet polygonsSet1 = new PolygonsSet();
    polygonsSet0.contains(polygonsSet1);
    polygonsSet0.computeGeometricalProperties();
    polygonsSet0.computeGeometricalProperties();
}",0,
project,0,test2222,"public void test2222() throws Throwable {
    Vector1D vector1D0 = Vector1D.POSITIVE_INFINITY;
    Vector1D vector1D1 = new Vector1D(4.0, vector1D0, 4.0, vector1D0);
    boolean boolean0 = true;
    OrientedPoint orientedPoint0 = new OrientedPoint(vector1D1, true);
    Vector1D vector1D2 = new Vector1D((-1170.0), vector1D1, (-1170.0), vector1D0);
    vector1D2.getNorm1();
    Vector1D.distanceInf(vector1D1, vector1D2);
    orientedPoint0.wholeHyperplane();
    Region<Euclidean1D> region0 = null;
    vector1D0.getNormInf();
    SubOrientedPoint subOrientedPoint0 = new SubOrientedPoint(orientedPoint0, (Region<Euclidean1D>) null);
    vector1D1.distance((Vector<Euclidean1D>) vector1D0);
    BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>(subOrientedPoint0);
    orientedPoint0.wholeHyperplane();
    PolygonsSet polygonsSet0 = new PolygonsSet(bSPTree0);
    polygonsSet0.getVertices();
    polygonsSet0.computeGeometricalProperties();
    polygonsSet0.computeGeometricalProperties();
    // Undeclared exception!
    try {
        bSPTree0.getParent();
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint cannot be cast to java.lang.Boolean
        //
        verifyException(""org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet"", e);
    }
}",0,
project,0,test2323,"public void test2323() throws Throwable {
    double double0 = (-1591.66662191364);
    PolygonsSet polygonsSet0 = new PolygonsSet((-1591.66662191364), 0.0, (-1591.66662191364), 3.4028234663852886E38);
    polygonsSet0.computeGeometricalProperties();
    polygonsSet0.getVertices();
    // Undeclared exception!
    try {
        polygonsSet0.getBarycenter();
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.apache.commons.math3.geometry.partitioning.BoundaryAttribute cannot be cast to java.lang.Boolean
        //
        verifyException(""org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet"", e);
    }
}",0,
project,0,test2424,"public void test2424() throws Throwable {
    LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();
    Vector2D vector2D0 = Vector2D.ZERO;
    Line line0 = new Line(vector2D0, (-119.352107946));
    line0.reset(vector2D0, 2461.7259619);
    Vector2D vector2D1 = Vector2D.NEGATIVE_INFINITY;
    vector2D0.distance1(vector2D1);
    SubLine subLine0 = line0.wholeHyperplane();
    linkedList0.add((SubHyperplane<Euclidean2D>) subLine0);
    SubLine subLine1 = line0.wholeHyperplane();
    PolygonsSet polygonsSet0 = new PolygonsSet(linkedList0);
    polygonsSet0.getVertices();
    polygonsSet0.computeGeometricalProperties();
    BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>(linkedList0);
    BSPTree<Euclidean2D> bSPTree1 = new BSPTree<Euclidean2D>(subLine0, bSPTree0, bSPTree0, polygonsSet0);
    subLine0.intersection(subLine1, true);
    polygonsSet0.getBarycenter();
    // Undeclared exception!
    try {
        vector2D1.getNorm();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math3.geometry.euclidean.twod.Line"", e);
    }
}",0,
project,0,test2525,"public void test2525() throws Throwable {
    PolygonsSet polygonsSet0 = new PolygonsSet(2652.69214209, 0.0, 0.0, (-2833.8567));
    polygonsSet0.getVertices();
    polygonsSet0.computeGeometricalProperties();
    polygonsSet0.getVertices();
    polygonsSet0.computeGeometricalProperties();
}",0,
project,0,test2727,"public void test2727() throws Throwable {
    double double0 = (-1591.66662191364);
    PolygonsSet polygonsSet0 = new PolygonsSet((-1591.66662191364), 0.0, (-1591.66662191364), 3.4028234663852886E38);
    Vector2D vector2D0 = Vector2D.ZERO;
    polygonsSet0.getVertices();
    Line line0 = new Line(vector2D0, 3.4028234663852886E38);
    SubLine subLine0 = line0.wholeHyperplane();
    BSPTree<Euclidean2D> bSPTree0 = polygonsSet0.getTree(true);
    bSPTree0.getParent();
    SubOrientedPoint subOrientedPoint0 = new SubOrientedPoint((Hyperplane<Euclidean1D>) null, (Region<Euclidean1D>) null);
    BSPTree<Euclidean2D> bSPTree1 = new BSPTree<Euclidean2D>(subLine0, (BSPTree<Euclidean2D>) null, bSPTree0, subOrientedPoint0);
    polygonsSet0.buildNew(bSPTree1);
    polygonsSet0.getSize();
    polygonsSet0.getVertices();
    polygonsSet0.getBarycenter();
    // Undeclared exception!
    try {
        polygonsSet0.getVertices();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math3.geometry.partitioning.BSPTree"", e);
    }
}",0,
project,0,test2828,"public void test2828() throws Throwable {
    double double0 = (-1591.66662191364);
    PolygonsSet polygonsSet0 = new PolygonsSet((-1591.66662191364), 0.0, (-1591.66662191364), 2609.623610342003);
    polygonsSet0.computeGeometricalProperties();
    Vector2D vector2D0 = Vector2D.ZERO;
    Line line0 = new Line(vector2D0, 2609.623610342003);
    SubLine subLine0 = line0.wholeHyperplane();
    BSPTree<Euclidean2D> bSPTree0 = polygonsSet0.getTree(true);
    bSPTree0.getParent();
    SubOrientedPoint subOrientedPoint0 = new SubOrientedPoint((Hyperplane<Euclidean1D>) null, (Region<Euclidean1D>) null);
    BSPTree<Euclidean2D> bSPTree1 = new BSPTree<Euclidean2D>(subLine0, (BSPTree<Euclidean2D>) null, bSPTree0, subOrientedPoint0);
    polygonsSet0.buildNew(bSPTree1);
    polygonsSet0.getSize();
    polygonsSet0.getVertices();
    polygonsSet0.getBarycenter();
    // Undeclared exception!
    try {
        polygonsSet0.getVertices();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test2929,"public void test2929() throws Throwable {
    double[] doubleArray0 = new double[1];
    BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>();
    PolygonsSet polygonsSet0 = new PolygonsSet(3.4028234663852886E38, (-1.0E-10), 834.34864486553, (-1669.7));
    polygonsSet0.getVertices();
}",0,
project,0,test3030,"public void test3030() throws Throwable {
    PolygonsSet polygonsSet0 = new PolygonsSet(1.5038586206539933E7, (-20.0), 3866.154084346884, (-20.0));
    BSPTree<Euclidean2D> bSPTree0 = polygonsSet0.getTree(true);
    BSPTree<Euclidean2D> bSPTree1 = bSPTree0.getMinus();
    BSPTree<Euclidean2D> bSPTree2 = bSPTree1.getPlus();
    Vector<Euclidean2D> vector0 = polygonsSet0.getBarycenter();
    BSPTree<Euclidean2D> bSPTree3 = bSPTree2.getCell(vector0);
    PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree3);
    polygonsSet1.computeGeometricalProperties();
    polygonsSet0.computeGeometricalProperties();
    Vector2D vector2D0 = Vector2D.ZERO;
    SubLine subLine0 = new SubLine(vector2D0, vector2D0);
    bSPTree2.split(subLine0);
    polygonsSet0.getVertices();
    BSPTreeVisitor<Euclidean2D> bSPTreeVisitor0 = (BSPTreeVisitor<Euclidean2D>) mock(BSPTreeVisitor.class, new ViolatedAssumptionAnswer());
    doReturn((BSPTreeVisitor.Order) null).when(bSPTreeVisitor0).visitOrder(nullable(org.apache.commons.math3.geometry.partitioning.BSPTree.class));
    bSPTree0.visit(bSPTreeVisitor0);
    polygonsSet1.getVertices();
    polygonsSet1.getVertices();
    polygonsSet1.getVertices();
}",0,
project,0,test3131,"public void test3131() throws Throwable {
    PolygonsSet polygonsSet0 = new PolygonsSet((-1.0E-10), 4.503599627370496E15, (-1.0E-10), 4.503599627370496E15);
    AffineTransform affineTransform0 = AffineTransform.getRotateInstance(0.5000000000042687, 4.503599627370496E15, (-1.0E-10), 911.0);
    Transform<Euclidean2D, Euclidean1D> transform0 = Line.getTransform(affineTransform0);
    polygonsSet0.applyTransform(transform0);
    polygonsSet0.getVertices();
}",0,
project,0,test3232,"public void test3232() throws Throwable {
    PolygonsSet polygonsSet0 = new PolygonsSet(1.5038586206539933E7, (-20.0), 3866.154084346884, (-20.0));
    BSPTree<Euclidean2D> bSPTree0 = polygonsSet0.getTree(true);
    BSPTree<Euclidean2D> bSPTree1 = bSPTree0.getMinus();
    BSPTree<Euclidean2D> bSPTree2 = bSPTree1.getPlus();
    polygonsSet0.getBarycenter();
    BSPTree<Euclidean2D> bSPTree3 = polygonsSet0.getTree(true);
    PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree3);
    polygonsSet1.computeGeometricalProperties();
    polygonsSet0.computeGeometricalProperties();
    Vector2D vector2D0 = Vector2D.ZERO;
    SubLine subLine0 = new SubLine(vector2D0, vector2D0);
    // Undeclared exception!
    bSPTree2.split(subLine0);
}",0,
project,0,test3333,"public void test3333() throws Throwable {
    BSPTree<Euclidean2D> bSPTree0 = new BSPTree<Euclidean2D>();
    PolygonsSet polygonsSet0 = new PolygonsSet(3.4028234663852886E38, 0.0, 0.0, (-1669.7));
    Vector2D vector2D0 = new Vector2D(0.0, (-1184.552711359));
    SubLine subLine0 = new SubLine(vector2D0, vector2D0);
    polygonsSet0.intersection(subLine0);
    polygonsSet0.getVertices();
    polygonsSet0.buildNew(bSPTree0);
}",0,
project,0,test3434,"public void test3434() throws Throwable {
    LinkedList<SubHyperplane<Euclidean2D>> linkedList0 = new LinkedList<SubHyperplane<Euclidean2D>>();
    Vector2D vector2D0 = new Vector2D(1582.4253903932238, 1.5038605126792697E7);
    Vector2D vector2D1 = new Vector2D(1589.18882882929, vector2D0, 2570.66, vector2D0, 1.5038605126792697E7, vector2D0, 85.706, vector2D0);
    Line line0 = new Line(vector2D0, vector2D1);
    Segment segment0 = new Segment(vector2D0, vector2D0, line0);
    SubLine subLine0 = new SubLine(segment0);
    Line line1 = new Line(vector2D0, (-5283.7447));
    IntervalsSet intervalsSet0 = new IntervalsSet((-425.2445), (-5283.7447));
    BSPTree<Euclidean1D> bSPTree0 = new BSPTree<Euclidean1D>(linkedList0);
    IntervalsSet intervalsSet1 = intervalsSet0.buildNew(bSPTree0);
    AbstractSubHyperplane<Euclidean2D, Euclidean1D> abstractSubHyperplane0 = subLine0.buildNew(line1, intervalsSet1);
    linkedList0.add((SubHyperplane<Euclidean2D>) abstractSubHyperplane0);
    PolygonsSet polygonsSet0 = new PolygonsSet(linkedList0);
    polygonsSet0.getVertices();
}",0,
project,0,test3535,"public void test3535() throws Throwable {
    PolygonsSet polygonsSet0 = new PolygonsSet(1.5038586206539933E7, (-20.0), 3866.154084346884, (-20.0));
    BSPTree<Euclidean2D> bSPTree0 = polygonsSet0.getTree(true);
    bSPTree0.getPlus();
    polygonsSet0.getBarycenter();
    polygonsSet0.computeGeometricalProperties();
    PolygonsSet polygonsSet1 = polygonsSet0.buildNew(bSPTree0);
    polygonsSet1.getVertices();
}",0,
