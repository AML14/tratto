{
  "test1730" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1730() throws Throwable {\n    Fraction fraction0 = new Fraction(9, (-922));\n    double double0 = fraction0.doubleValue();\n}",
    "testName" : "test1730"
  },
  "test3755" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3755() throws Throwable {\n    Fraction fraction0 = new Fraction(0.0);\n    double double0 = fraction0.doubleValue();\n}",
    "testName" : "test3755"
  },
  "test4565" : {
    "methodSignature" : "public Fraction divide(Fraction fraction)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4565() throws Throwable {\n    Fraction fraction0 = new Fraction(473.4698288);\n    fraction0.ONE.divide((Fraction) null);\n}",
    "testName" : "test4565"
  },
  "test2541" : {
    "methodSignature" : "public Fraction multiply(Fraction fraction)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2541() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(613654404, (-3857));\n    fraction0.multiply(fraction0);\n}",
    "testName" : "test2541"
  },
  "test67105" : {
    "methodSignature" : "public Fraction(double value, int maxDenominator) throws FractionConversionException",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test67105() throws Throwable {\n    Fraction fraction0 = null;\n    fraction0 = new Fraction(0.0, 37);\n}",
    "testName" : "test67105"
  },
  "test2945" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2945() throws Throwable {\n    Fraction fraction0 = new Fraction(569.819967);\n    fraction0.add((Fraction) null);\n}",
    "testName" : "test2945"
  },
  "test0919" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0919() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    int int0 = fraction0.intValue();\n}",
    "testName" : "test0919"
  },
  "test5890" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5890() throws Throwable {\n    Fraction fraction0 = new Fraction((-1.0));\n    boolean boolean0 = fraction0.equals((Object) null);\n}",
    "testName" : "test5890"
  },
  "test5891" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5891() throws Throwable {\n    Fraction fraction0 = new Fraction((-1.0));\n    boolean boolean0 = fraction0.equals((Object) null);\n    fraction0.intValue();\n}",
    "testName" : "test5891"
  },
  "test4161" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4161() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-3468), Integer.MIN_VALUE);\n    fraction0.getDenominator();\n}",
    "testName" : "test4161"
  },
  "test4160" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4160() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-3468), Integer.MIN_VALUE);\n    fraction0.doubleValue();\n}",
    "testName" : "test4160"
  },
  "test1223" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1223() throws Throwable {\n    Fraction fraction0 = Fraction.TWO;\n    Fraction fraction1 = fraction0.negate();\n    int int0 = fraction1.getNumerator();\n    fraction1.floatValue();\n}",
    "testName" : "test1223"
  },
  "test3248" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3248() throws Throwable {\n    Fraction fraction0 = Fraction.MINUS_ONE;\n    Fraction fraction1 = fraction0.ZERO.multiply(fraction0);\n    fraction1.longValue();\n}",
    "testName" : "test3248"
  },
  "test0410" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0410() throws Throwable {\n    Fraction fraction0 = new Fraction(Double.NaN);\n    Fraction fraction1 = Fraction.ZERO;\n    Fraction fraction2 = fraction0.subtract(fraction1);\n    fraction2.getNumerator();\n}",
    "testName" : "test0410"
  },
  "test5788" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5788() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(1252, (-2444));\n    Fraction fraction1 = Fraction.ONE;\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction0.getNumerator();\n}",
    "testName" : "test5788"
  },
  "test5789" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5789() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(1252, (-2444));\n    Fraction fraction1 = Fraction.ONE;\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction0.doubleValue();\n}",
    "testName" : "test5789"
  },
  "test2034" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2034() throws Throwable {\n    Fraction fraction0 = new Fraction(Double.NaN);\n    Fraction fraction1 = fraction0.abs();\n    fraction1.intValue();\n}",
    "testName" : "test2034"
  },
  "test4059" : {
    "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4059() throws Throwable {\n    Fraction.getReducedFraction((-221), Integer.MIN_VALUE);\n}",
    "testName" : "test4059"
  },
  "test4972" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4972() throws Throwable {\n    Fraction fraction0 = new Fraction((-2089.562449831285), 1);\n    Fraction fraction1 = fraction0.ONE.multiply(fraction0);\n    fraction1.doubleValue();\n}",
    "testName" : "test4972"
  },
  "test5787" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5787() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(1252, (-2444));\n    Fraction fraction1 = Fraction.ONE;\n    boolean boolean0 = fraction0.equals(fraction1);\n}",
    "testName" : "test5787"
  },
  "test1222" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1222() throws Throwable {\n    Fraction fraction0 = Fraction.TWO;\n    Fraction fraction1 = fraction0.negate();\n    int int0 = fraction1.getNumerator();\n}",
    "testName" : "test1222"
  },
  "test2035" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2035() throws Throwable {\n    Fraction fraction0 = new Fraction(Double.NaN);\n    Fraction fraction1 = fraction0.abs();\n    fraction1.getNumerator();\n}",
    "testName" : "test2035"
  },
  "test1628" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1628() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    double double0 = fraction0.doubleValue();\n}",
    "testName" : "test1628"
  },
  "test73114" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test73114() throws Throwable {\n    Fraction fraction0 = new Fraction((-2089.562449831285), 1);\n    fraction0.hashCode();\n    fraction0.getNumerator();\n}",
    "testName" : "test73114"
  },
  "test73115" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test73115() throws Throwable {\n    Fraction fraction0 = new Fraction((-2089.562449831285), 1);\n    fraction0.hashCode();\n    fraction0.getDenominator();\n}",
    "testName" : "test73115"
  },
  "test6196" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6196() throws Throwable {\n    Fraction fraction0 = Fraction.TWO;\n    Fraction fraction1 = Fraction.ZERO;\n    int int0 = fraction0.compareTo(fraction1);\n    fraction0.floatValue();\n}",
    "testName" : "test6196"
  },
  "test5380" : {
    "methodSignature" : "public Fraction subtract(Fraction fraction)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5380() throws Throwable {\n    Fraction fraction0 = new Fraction((-391.221), (-1076));\n    fraction0.subtract((Fraction) null);\n}",
    "testName" : "test5380"
  },
  "test6195" : {
    "methodSignature" : "public int compareTo(Fraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6195() throws Throwable {\n    Fraction fraction0 = Fraction.TWO;\n    Fraction fraction1 = Fraction.ZERO;\n    int int0 = fraction0.compareTo(fraction1);\n}",
    "testName" : "test6195"
  },
  "test3654" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3654() throws Throwable {\n    Fraction fraction0 = new Fraction(Double.NaN, 37, 37);\n    int int0 = fraction0.getDenominator();\n}",
    "testName" : "test3654"
  },
  "test2440" : {
    "methodSignature" : "public Fraction reciprocal()",
    "methodName" : "reciprocal",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2440() throws Throwable {\n    Fraction fraction0 = Fraction.TWO;\n    Fraction fraction1 = fraction0.subtract(fraction0);\n    fraction1.reciprocal();\n}",
    "testName" : "test2440"
  },
  "test3653" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3653() throws Throwable {\n    Fraction fraction0 = new Fraction(Double.NaN, 37, 37);\n    int int0 = fraction0.getDenominator();\n    fraction0.floatValue();\n}",
    "testName" : "test3653"
  },
  "test4464" : {
    "methodSignature" : "public Fraction divide(Fraction fraction)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4464() throws Throwable {\n    Fraction fraction0 = Fraction.MINUS_ONE;\n    Fraction fraction1 = fraction0.ZERO.abs();\n    fraction0.MINUS_ONE.divide(fraction1);\n}",
    "testName" : "test4464"
  },
  "test5278" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5278() throws Throwable {\n    Fraction fraction0 = new Fraction((-2089.562449831285), 1);\n    Fraction fraction1 = fraction0.ZERO.negate();\n    Fraction fraction2 = fraction1.add(fraction0);\n}",
    "testName" : "test5278"
  },
  "test5279" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5279() throws Throwable {\n    Fraction fraction0 = new Fraction((-2089.562449831285), 1);\n    Fraction fraction1 = fraction0.ZERO.negate();\n    Fraction fraction2 = fraction1.add(fraction0);\n    fraction1.getDenominator();\n}",
    "testName" : "test5279"
  },
  "test011" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Fraction fraction0 = new Fraction(1797.67598);\n    Fraction fraction1 = fraction0.divide(fraction0);\n    fraction1.getDenominator();\n}",
    "testName" : "test011"
  },
  "test69107" : {
    "methodSignature" : "public Fraction(double value) throws FractionConversionException",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test69107() throws Throwable {\n    Fraction fraction0 = null;\n    fraction0 = new Fraction(Double.POSITIVE_INFINITY);\n}",
    "testName" : "test69107"
  },
  "test012" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test012() throws Throwable {\n    Fraction fraction0 = new Fraction(1797.67598);\n    Fraction fraction1 = fraction0.divide(fraction0);\n    fraction1.floatValue();\n}",
    "testName" : "test012"
  },
  "test2844" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2844() throws Throwable {\n    Fraction fraction0 = new Fraction(Double.NaN);\n    Fraction fraction1 = Fraction.ONE;\n    fraction0.add(fraction1);\n}",
    "testName" : "test2844"
  },
  "test72113" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test72113() throws Throwable {\n    Fraction fraction0 = new Fraction((-2089.562449831285), 1);\n    Fraction fraction1 = fraction0.MINUS_ONE.subtract(fraction0);\n    fraction1.floatValue();\n}",
    "testName" : "test72113"
  },
  "test72111" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test72111() throws Throwable {\n    Fraction fraction0 = new Fraction((-2089.562449831285), 1);\n    Fraction fraction1 = fraction0.MINUS_ONE.subtract(fraction0);\n    fraction1.getDenominator();\n}",
    "testName" : "test72111"
  },
  "test72112" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test72112() throws Throwable {\n    Fraction fraction0 = new Fraction((-2089.562449831285), 1);\n    Fraction fraction1 = fraction0.MINUS_ONE.subtract(fraction0);\n    fraction0.getDenominator();\n}",
    "testName" : "test72112"
  },
  "test0818" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0818() throws Throwable {\n    Fraction fraction0 = Fraction.MINUS_ONE;\n    long long0 = fraction0.longValue();\n}",
    "testName" : "test0818"
  },
  "test5277" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5277() throws Throwable {\n    Fraction fraction0 = new Fraction((-2089.562449831285), 1);\n    Fraction fraction1 = fraction0.ZERO.negate();\n    Fraction fraction2 = fraction1.add(fraction0);\n    fraction2.getNumerator();\n}",
    "testName" : "test5277"
  },
  "test1121" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1121() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    int int0 = fraction0.getNumerator();\n}",
    "testName" : "test1121"
  },
  "test3147" : {
    "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3147() throws Throwable {\n    Fraction.getReducedFraction(1, 0);\n}",
    "testName" : "test3147"
  },
  "test4871" : {
    "methodSignature" : "public Fraction multiply(Fraction fraction)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4871() throws Throwable {\n    Fraction fraction0 = new Fraction(1.0);\n    fraction0.MINUS_ONE.multiply((Fraction) null);\n}",
    "testName" : "test4871"
  },
  "test5686" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5686() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    Fraction fraction1 = fraction0.negate();\n    boolean boolean0 = fraction1.equals(fraction0);\n}",
    "testName" : "test5686"
  },
  "test000" : {
    "methodSignature" : "public Fraction divide(Fraction fraction)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Fraction fraction0 = new Fraction(0.0);\n    fraction0.divide(fraction0);\n}",
    "testName" : "test000"
  },
  "test0715" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0715() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.TWO.reciprocal();\n    long long0 = fraction1.longValue();\n    fraction1.doubleValue();\n}",
    "testName" : "test0715"
  },
  "test0716" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0716() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.TWO.reciprocal();\n    long long0 = fraction1.longValue();\n    fraction1.getDenominator();\n}",
    "testName" : "test0716"
  },
  "test64102" : {
    "methodSignature" : "public Fraction(int num, int den)",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test64102() throws Throwable {\n    Fraction fraction0 = null;\n    fraction0 = new Fraction((-3468), Integer.MIN_VALUE);\n}",
    "testName" : "test64102"
  },
  "test0717" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0717() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.TWO.reciprocal();\n    long long0 = fraction1.longValue();\n}",
    "testName" : "test0717"
  },
  "test2339" : {
    "methodSignature" : "public Fraction subtract(Fraction fraction)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2339() throws Throwable {\n    Fraction fraction0 = new Fraction((-2147483647), 97);\n    fraction0.ONE.subtract(fraction0);\n}",
    "testName" : "test2339"
  },
  "test1526" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1526() throws Throwable {\n    Fraction fraction0 = Fraction.MINUS_ONE;\n    Fraction fraction1 = fraction0.abs();\n    float float0 = fraction1.floatValue();\n}",
    "testName" : "test1526"
  },
  "test1527" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1527() throws Throwable {\n    Fraction fraction0 = Fraction.MINUS_ONE;\n    Fraction fraction1 = fraction0.abs();\n    float float0 = fraction1.floatValue();\n    fraction1.getDenominator();\n}",
    "testName" : "test1527"
  },
  "test6093" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6093() throws Throwable {\n    Fraction fraction0 = new Fraction((-2089.562449831285), 1);\n    boolean boolean0 = fraction0.equals(\"\");\n    fraction0.doubleValue();\n}",
    "testName" : "test6093"
  },
  "test6094" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6094() throws Throwable {\n    Fraction fraction0 = new Fraction((-2089.562449831285), 1);\n    boolean boolean0 = fraction0.equals(\"\");\n}",
    "testName" : "test6094"
  },
  "test70109" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test70109() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    int int0 = fraction0.intValue();\n}",
    "testName" : "test70109"
  },
  "test70108" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test70108() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    int int0 = fraction0.intValue();\n    fraction0.floatValue();\n}",
    "testName" : "test70108"
  },
  "test75118" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test75118() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    long long0 = fraction0.longValue();\n}",
    "testName" : "test75118"
  },
  "test2743" : {
    "methodSignature" : "public int compareTo(Fraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2743() throws Throwable {\n    Fraction fraction0 = new Fraction((-557.952506913556), (-1473));\n    fraction0.compareTo((Fraction) null);\n}",
    "testName" : "test2743"
  },
  "test3552" : {
    "methodSignature" : "public Fraction(int num, int den)",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3552() throws Throwable {\n    Fraction fraction0 = null;\n    fraction0 = new Fraction(185, 0);\n}",
    "testName" : "test3552"
  },
  "test63100" : {
    "methodSignature" : "public int compareTo(Fraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test63100() throws Throwable {\n    Fraction fraction0 = new Fraction((-2089.562449831285), 1);\n    Fraction fraction1 = fraction0.ONE.abs();\n    int int0 = fraction0.compareTo(fraction1);\n}",
    "testName" : "test63100"
  },
  "test63101" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test63101() throws Throwable {\n    Fraction fraction0 = new Fraction((-2089.562449831285), 1);\n    Fraction fraction1 = fraction0.ONE.abs();\n    int int0 = fraction0.compareTo(fraction1);\n    fraction0.floatValue();\n}",
    "testName" : "test63101"
  },
  "test1932" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1932() throws Throwable {\n    Fraction fraction0 = new Fraction(Double.NaN);\n    Fraction fraction1 = fraction0.ZERO.add(fraction0);\n    fraction0.getNumerator();\n}",
    "testName" : "test1932"
  },
  "test1933" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1933() throws Throwable {\n    Fraction fraction0 = new Fraction(Double.NaN);\n    Fraction fraction1 = fraction0.ZERO.add(fraction0);\n    fraction1.intValue();\n}",
    "testName" : "test1933"
  },
  "test3958" : {
    "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3958() throws Throwable {\n    Fraction.getReducedFraction(Integer.MIN_VALUE, (-2114));\n}",
    "testName" : "test3958"
  },
  "test4769" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4769() throws Throwable {\n    Fraction fraction0 = new Fraction((-2089.562449831285), 1);\n    Fraction fraction1 = fraction0.ZERO.divide(fraction0);\n    fraction1.floatValue();\n}",
    "testName" : "test4769"
  },
  "test74116" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test74116() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.TWO.add(fraction0);\n    fraction1.floatValue();\n}",
    "testName" : "test74116"
  },
  "test026" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test026() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.TWO.reciprocal();\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction1.getNumerator();\n}",
    "testName" : "test026"
  },
  "test024" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test024() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.TWO.reciprocal();\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction1.equals((Object) fraction0);\n}",
    "testName" : "test024"
  },
  "test025" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test025() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.TWO.reciprocal();\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction1.doubleValue();\n}",
    "testName" : "test025"
  },
  "test4363" : {
    "methodSignature" : "public Fraction multiply(Fraction fraction)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4363() throws Throwable {\n    Fraction fraction0 = new Fraction(Double.NaN);\n    fraction0.ONE.multiply(fraction0);\n}",
    "testName" : "test4363"
  },
  "test5175" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5175() throws Throwable {\n    Fraction fraction0 = new Fraction((-2089.562449831285), 1);\n    Fraction fraction1 = new Fraction((-2089.562449831285));\n    Fraction fraction2 = fraction0.MINUS_ONE.add(fraction1);\n    Fraction fraction3 = fraction2.add(fraction1);\n    fraction3.getNumerator();\n}",
    "testName" : "test5175"
  },
  "test5176" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5176() throws Throwable {\n    Fraction fraction0 = new Fraction((-2089.562449831285), 1);\n    Fraction fraction1 = new Fraction((-2089.562449831285));\n    Fraction fraction2 = fraction0.MINUS_ONE.add(fraction1);\n    Fraction fraction3 = fraction2.add(fraction1);\n    fraction2.intValue();\n}",
    "testName" : "test5176"
  },
  "test5174" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5174() throws Throwable {\n    Fraction fraction0 = new Fraction((-2089.562449831285), 1);\n    fraction0.doubleValue();\n}",
    "testName" : "test5174"
  },
  "test74117" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test74117() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.TWO.add(fraction0);\n    fraction1.getDenominator();\n}",
    "testName" : "test74117"
  },
  "test2238" : {
    "methodSignature" : "public Fraction subtract(Fraction fraction)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2238() throws Throwable {\n    Fraction fraction0 = new Fraction(Double.NaN);\n    fraction0.subtract(fraction0);\n}",
    "testName" : "test2238"
  },
  "test3046" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3046() throws Throwable {\n    Fraction fraction0 = new Fraction(2088600, 1);\n    Fraction fraction1 = fraction0.reciprocal();\n    fraction1.add(fraction0);\n}",
    "testName" : "test3046"
  },
  "test023" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test023() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.TWO.reciprocal();\n    boolean boolean0 = fraction0.equals(fraction1);\n}",
    "testName" : "test023"
  },
  "test66104" : {
    "methodSignature" : "public Fraction(double value, double epsilon, int maxIterations) throws FractionConversionException",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test66104() throws Throwable {\n    Fraction fraction0 = null;\n    fraction0 = new Fraction((-24.016514532197593), (-2147483645), (-2147483645));\n}",
    "testName" : "test66104"
  },
  "test1425" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1425() throws Throwable {\n    Fraction fraction0 = new Fraction(0.0, 2079.4, 0);\n    float float0 = fraction0.floatValue();\n}",
    "testName" : "test1425"
  },
  "test0614" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0614() throws Throwable {\n    Fraction fraction0 = Fraction.MINUS_ONE;\n    Fraction fraction1 = fraction0.reciprocal();\n    fraction1.equals((Object) fraction0);\n}",
    "testName" : "test0614"
  },
  "test5584" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5584() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.TWO.reciprocal();\n    boolean boolean0 = fraction1.equals(fraction0);\n    fraction1.getNumerator();\n}",
    "testName" : "test5584"
  },
  "test5585" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5585() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.TWO.reciprocal();\n    boolean boolean0 = fraction1.equals(fraction0);\n}",
    "testName" : "test5585"
  },
  "test6399" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6399() throws Throwable {\n    Fraction fraction0 = new Fraction((-2089.562449831285), 1);\n    Fraction fraction1 = fraction0.ONE.abs();\n    int int0 = fraction0.compareTo(fraction1);\n    fraction1.getNumerator();\n}",
    "testName" : "test6399"
  },
  "test5582" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5582() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.TWO.reciprocal();\n    boolean boolean0 = fraction1.equals(fraction0);\n    fraction0.equals((Object) fraction1);\n}",
    "testName" : "test5582"
  },
  "test1020" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1020() throws Throwable {\n    Fraction fraction0 = Fraction.MINUS_ONE;\n    int int0 = fraction0.intValue();\n}",
    "testName" : "test1020"
  },
  "test5583" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5583() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.TWO.reciprocal();\n    boolean boolean0 = fraction1.equals(fraction0);\n    fraction1.floatValue();\n}",
    "testName" : "test5583"
  },
  "test4668" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4668() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(613654404, (-3857));\n    Fraction fraction1 = fraction0.negate();\n    Fraction fraction2 = fraction0.add(fraction1);\n    Fraction fraction3 = fraction0.multiply(fraction2);\n    fraction3.doubleValue();\n}",
    "testName" : "test4668"
  },
  "test2642" : {
    "methodSignature" : "public Fraction divide(Fraction fraction)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2642() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    Fraction fraction1 = new Fraction((-2032.329579254536));\n    Fraction fraction2 = fraction0.subtract(fraction1);\n    Fraction fraction3 = fraction0.ONE.divide(fraction1);\n    fraction3.divide(fraction2);\n}",
    "testName" : "test2642"
  },
  "test4666" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4666() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(613654404, (-3857));\n    Fraction fraction1 = fraction0.negate();\n    Fraction fraction2 = fraction0.add(fraction1);\n    Fraction fraction3 = fraction0.multiply(fraction2);\n    fraction2.doubleValue();\n}",
    "testName" : "test4666"
  },
  "test1831" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1831() throws Throwable {\n    Fraction fraction0 = Fraction.MINUS_ONE;\n    Fraction fraction1 = fraction0.TWO.divide(fraction0);\n    fraction1.getNumerator();\n}",
    "testName" : "test1831"
  },
  "test4667" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4667() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(613654404, (-3857));\n    Fraction fraction1 = fraction0.negate();\n    Fraction fraction2 = fraction0.add(fraction1);\n    Fraction fraction3 = fraction0.multiply(fraction2);\n    fraction0.getNumerator();\n}",
    "testName" : "test4667"
  },
  "test65103" : {
    "methodSignature" : "public Fraction(int num, int den)",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test65103() throws Throwable {\n    Fraction fraction0 = null;\n    fraction0 = new Fraction(Integer.MIN_VALUE, Integer.MIN_VALUE);\n}",
    "testName" : "test65103"
  },
  "test3857" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3857() throws Throwable {\n    Fraction fraction0 = new Fraction(Double.NaN, 37, 37);\n    int int0 = fraction0.getNumerator();\n}",
    "testName" : "test3857"
  },
  "test3856" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3856() throws Throwable {\n    Fraction fraction0 = new Fraction(Double.NaN, 37, 37);\n    int int0 = fraction0.getNumerator();\n    fraction0.getDenominator();\n}",
    "testName" : "test3856"
  },
  "test5992" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5992() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    boolean boolean0 = fraction0.equals(fraction0);\n}",
    "testName" : "test5992"
  },
  "test3451" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3451() throws Throwable {\n    Fraction fraction0 = new Fraction((-261), (-261));\n    fraction0.getNumerator();\n}",
    "testName" : "test3451"
  },
  "test4262" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4262() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(0, 2);\n    fraction0.floatValue();\n}",
    "testName" : "test4262"
  },
  "test3450" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3450() throws Throwable {\n    Fraction fraction0 = new Fraction((-261), (-261));\n    fraction0.doubleValue();\n}",
    "testName" : "test3450"
  },
  "test5073" : {
    "methodSignature" : "public Fraction subtract(Fraction fraction)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5073() throws Throwable {\n    Fraction fraction0 = new Fraction((-1994091957), 100);\n    Fraction fraction1 = new Fraction((-379.15983));\n    fraction0.subtract(fraction1);\n}",
    "testName" : "test5073"
  },
  "test2137" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2137() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-1073741824), 5);\n    Fraction fraction1 = fraction0.abs();\n    fraction0.getNumerator();\n}",
    "testName" : "test2137"
  },
  "test2136" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2136() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-1073741824), 5);\n    Fraction fraction1 = fraction0.abs();\n    fraction1.doubleValue();\n}",
    "testName" : "test2136"
  },
  "test1324" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1324() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    int int0 = fraction0.getDenominator();\n}",
    "testName" : "test1324"
  },
  "test3349" : {
    "methodSignature" : "public Fraction negate()",
    "methodName" : "negate",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3349() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(Integer.MIN_VALUE, 55);\n    fraction0.negate();\n}",
    "testName" : "test3349"
  },
  "test68106" : {
    "methodSignature" : "public Fraction(double value, double epsilon, int maxIterations) throws FractionConversionException",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test68106() throws Throwable {\n    Fraction fraction0 = null;\n    fraction0 = new Fraction(37, 0, 0);\n}",
    "testName" : "test68106"
  },
  "test1729" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1729() throws Throwable {\n    Fraction fraction0 = new Fraction(9, (-922));\n    double double0 = fraction0.doubleValue();\n    fraction0.getDenominator();\n}",
    "testName" : "test1729"
  },
  "test0512" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0512() throws Throwable {\n    Fraction fraction0 = new Fraction(Double.NaN, 37, 37);\n    Fraction fraction1 = fraction0.reciprocal();\n    fraction0.getNumerator();\n}",
    "testName" : "test0512"
  },
  "test0513" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0513() throws Throwable {\n    Fraction fraction0 = new Fraction(Double.NaN, 37, 37);\n    Fraction fraction1 = fraction0.reciprocal();\n    fraction1.doubleValue();\n}",
    "testName" : "test0513"
  },
  "test71110" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test71110() throws Throwable {\n    Fraction fraction0 = new Fraction((-2089.562449831285), 1);\n    float float0 = fraction0.floatValue();\n}",
    "testName" : "test71110"
  },
  "test039" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test039() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(1, 1);\n    Fraction fraction1 = fraction0.negate();\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction0.intValue();\n}",
    "testName" : "test039"
  },
  "test037" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test037() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(1, 1);\n    Fraction fraction1 = fraction0.negate();\n    boolean boolean0 = fraction0.equals(fraction1);\n}",
    "testName" : "test037"
  },
  "test038" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test038() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(1, 1);\n    Fraction fraction1 = fraction0.negate();\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction1.getNumerator();\n}",
    "testName" : "test038"
  },
  "test6297" : {
    "methodSignature" : "public int compareTo(Fraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6297() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    int int0 = fraction0.compareTo(fraction0);\n}",
    "testName" : "test6297"
  },
  "test6298" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6298() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    int int0 = fraction0.compareTo(fraction0);\n    fraction0.doubleValue();\n}",
    "testName" : "test6298"
  },
  "test5481" : {
    "methodSignature" : "public Fraction abs()",
    "methodName" : "abs",
    "className" : "org.apache.commons.math.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5481() throws Throwable {\n    Fraction fraction0 = new Fraction(Integer.MIN_VALUE);\n    fraction0.abs();\n}",
    "testName" : "test5481"
  }
}