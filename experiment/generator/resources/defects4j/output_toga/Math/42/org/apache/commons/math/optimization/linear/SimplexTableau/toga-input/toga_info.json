{
  "test1212" : {
    "methodSignature" : "protected final double getEntry(final int row, final int column)",
    "methodName" : "getEntry",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    double[] doubleArray0 = new double[0];\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Relationship relationship0 = Relationship.GEQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, 0.0);\n    linkedList0.add(linearConstraint0);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);\n    linearObjectiveFunction0.getValue(doubleArray0);\n    simplexTableau0.getHeight();\n    simplexTableau0.getNumDecisionVariables();\n    LinkedList<LinearConstraint> linkedList1 = new LinkedList<LinearConstraint>();\n    linkedList1.spliterator();\n    linkedList0.addAll(0, (Collection<? extends LinearConstraint>) linkedList1);\n    linearObjectiveFunction0.getValue(doubleArray0);\n    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);\n    linkedList0.add(linearConstraint0);\n    simplexTableau0.getOriginalNumDecisionVariables();\n    simplexTableau0.getSolution();\n    simplexTableau0.getNumSlackVariables();\n    simplexTableau0.divideRow(0, 0.0);\n    simplexTableau0.dropPhase1Objective();\n    simplexTableau0.isOptimal();\n    simplexTableau0.isOptimal();\n    linkedList1.add(linearConstraint0);\n    simplexTableau0.subtractRow(0, 0, 0);\n    simplexTableau0.getNumDecisionVariables();\n    linkedList1.addAll((Collection<? extends LinearConstraint>) list0);\n    linearObjectiveFunction0.getValue(doubleArray0);\n    simplexTableau0.normalizeConstraints(linkedList1);\n    linkedList0.offer(linearConstraint0);\n    simplexTableau0.hashCode();\n    simplexTableau0.dropPhase1Objective();\n    simplexTableau0.isOptimal();\n    simplexTableau0.isOptimal();\n    simplexTableau0.getEntry(0, 0);\n}",
    "testName" : "test1212"
  },
  "test4646" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4646() throws Throwable {\n    double[] doubleArray0 = new double[2];\n    doubleArray0[0] = 1299.0;\n    doubleArray0[1] = 1736.1559394737176;\n    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(arrayRealVector0, 1736.1559394737176);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-1.0));\n    simplexTableau0.getOriginalNumDecisionVariables();\n    simplexTableau0.getHeight();\n    simplexTableau0.equals(linkedList0);\n}",
    "testName" : "test4646"
  },
  "test3434" : {
    "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon)",
    "methodName" : "SimplexTableau",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    int int0 = 4059;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(4059, 4059);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 4059);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    openMapRealVector0.getNorm();\n    boolean boolean0 = true;\n    double double0 = (-1.0);\n    int int1 = 0;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-1.0));\n}",
    "testName" : "test3434"
  },
  "test6868" : {
    "methodSignature" : "protected Integer getBasicRow(final int col)",
    "methodName" : "getBasicRow",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6868() throws Throwable {\n    double[] doubleArray0 = new double[1];\n    doubleArray0[0] = (-2148.0);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-2148.0));\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-2148.0));\n    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);\n    GoalType goalType1 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, list0, goalType1, true, 0.0, 2711);\n    simplexTableau1.getBasicRow(10);\n}",
    "testName" : "test6868"
  },
  "test5656" : {
    "methodSignature" : "protected final double getEntry(final int row, final int column)",
    "methodName" : "getEntry",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5656() throws Throwable {\n    double[] doubleArray0 = new double[9];\n    doubleArray0[0] = (-1.0);\n    doubleArray0[1] = 0.0;\n    doubleArray0[2] = 1929.108575191126;\n    doubleArray0[3] = (-2204.70153582);\n    doubleArray0[4] = 0.0;\n    doubleArray0[5] = (-2550.090378917);\n    doubleArray0[6] = 1.0;\n    doubleArray0[7] = (-563.5264595619399);\n    doubleArray0[8] = (-1574.643);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1929.108575191126);\n    linearObjectiveFunction0.getValue(doubleArray0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();\n    Relationship relationship0 = Relationship.LEQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, (-2204.70153582), relationship0, openMapRealVector0, 1.0);\n    linkedList0.add(linearConstraint0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-2550.090378917));\n    simplexTableau0.getOriginalNumDecisionVariables();\n    simplexTableau0.getEntry(0, 0);\n}",
    "testName" : "test5656"
  },
  "test2424" : {
    "methodSignature" : "protected final int getNumSlackVariables()",
    "methodName" : "getNumSlackVariables",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = (-1476.86);\n    doubleArray0[1] = Double.POSITIVE_INFINITY;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = Double.NaN;\n    doubleArray0[4] = 1151.079702577819;\n    doubleArray0[5] = 632.68;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1490.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) (-1476.86);\n    doubleArray1[1] = (Double) Double.NaN;\n    doubleArray1[2] = (Double) Double.POSITIVE_INFINITY;\n    doubleArray1[3] = (Double) 1151.079702577819;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, Double.NaN, relationship0, openMapRealVector0, 0.0);\n    linkedList0.offerLast(linearConstraint0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 3719.7487517476907);\n    SimplexTableau.getInvertedCoefficientSum(openMapRealVector0);\n    linkedList0.add(linearConstraint0);\n    simplexTableau0.getNumObjectiveFunctions();\n    simplexTableau0.equals(doubleArray1[2]);\n    simplexTableau0.getArtificialVariableOffset();\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType1, false, 0.0);\n    simplexTableau0.equals(simplexTableau1);\n    simplexTableau0.getNumSlackVariables();\n}",
    "testName" : "test2424"
  },
  "test1010" : {
    "methodSignature" : "protected RealMatrix createTableau(final boolean maximize)",
    "methodName" : "createTableau",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(363, 363, 363);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    linearObjectiveFunction0.getValue((RealVector) openMapRealVector0);\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);\n    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, list0, goalType1, true, 363, 1334);\n    simplexTableau1.getData();\n    simplexTableau0.createTableau(true);\n    simplexTableau1.getWidth();\n    simplexTableau0.getHeight();\n    simplexTableau1.dropPhase1Objective();\n    simplexTableau0.getSolution();\n    simplexTableau1.normalizeConstraints(linkedList0);\n    simplexTableau0.getWidth();\n    simplexTableau0.getNumDecisionVariables();\n    // Undeclared exception!\n    simplexTableau1.createTableau(true);\n}",
    "testName" : "test1010"
  },
  "test4444" : {
    "methodSignature" : "protected RealPointValuePair getSolution()",
    "methodName" : "getSolution",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4444() throws Throwable {\n    double[] doubleArray0 = new double[8];\n    doubleArray0[0] = 2563.0;\n    doubleArray0[1] = 0.0;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = 1.0E-9;\n    doubleArray0[4] = 2.0;\n    doubleArray0[5] = 0.0;\n    doubleArray0[6] = 6.283185307179586;\n    doubleArray0[7] = (-1541.7074207017);\n    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray0);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(arrayRealVector0, (-1541.7074207017));\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0, 1);\n    simplexTableau0.getSolution();\n}",
    "testName" : "test4444"
  },
  "test3232" : {
    "methodSignature" : "boolean isOptimal()",
    "methodName" : "isOptimal",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    double[] doubleArray0 = new double[0];\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Relationship relationship0 = Relationship.GEQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, 0.0);\n    linkedList0.add(linearConstraint0);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);\n    linearObjectiveFunction0.getValue(doubleArray0);\n    simplexTableau0.getHeight();\n    simplexTableau0.getNumDecisionVariables();\n    LinkedList<LinearConstraint> linkedList1 = new LinkedList<LinearConstraint>();\n    linkedList1.spliterator();\n    linkedList0.addAll(0, (Collection<? extends LinearConstraint>) linkedList1);\n    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);\n    linkedList0.add(linearConstraint0);\n    simplexTableau0.getOriginalNumDecisionVariables();\n    simplexTableau0.getSolution();\n    simplexTableau0.getNumSlackVariables();\n    simplexTableau0.divideRow(0, 2631.35832);\n    simplexTableau0.createTableau(false);\n    simplexTableau0.dropPhase1Objective();\n    simplexTableau0.isOptimal();\n    simplexTableau0.isOptimal();\n    linkedList1.add(linearConstraint0);\n    simplexTableau0.subtractRow(0, 0, 0);\n    simplexTableau0.getNumDecisionVariables();\n    linkedList1.addAll((Collection<? extends LinearConstraint>) list0);\n    linearObjectiveFunction0.getValue(doubleArray0);\n    simplexTableau0.normalizeConstraints(linkedList1);\n    simplexTableau0.hashCode();\n    simplexTableau0.dropPhase1Objective();\n    simplexTableau0.isOptimal();\n    simplexTableau0.isOptimal();\n}",
    "testName" : "test3232"
  },
  "test6666" : {
    "methodSignature" : "protected RealPointValuePair getSolution()",
    "methodName" : "getSolution",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6666() throws Throwable {\n    double[] doubleArray0 = new double[7];\n    doubleArray0[0] = 1.0;\n    doubleArray0[1] = (-975.73314);\n    doubleArray0[2] = 942.97;\n    doubleArray0[3] = (-1.0);\n    doubleArray0[4] = 0.0;\n    doubleArray0[5] = (-1.0);\n    doubleArray0[6] = 58.0547673;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0, 0);\n    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);\n    GoalType goalType1 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, list0, goalType1, false, (-2780.06341805081));\n    simplexTableau1.getSolution();\n}",
    "testName" : "test6666"
  },
  "test5454" : {
    "methodSignature" : "protected final void setEntry(final int row, final int column, final double value)",
    "methodName" : "setEntry",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5454() throws Throwable {\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = (-3224.3891);\n    doubleArray0[1] = 0.5;\n    doubleArray0[2] = 860.1068512751797;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 860.1068512751797);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.5);\n    simplexTableau0.setEntry(4, 4, 0.0);\n}",
    "testName" : "test5454"
  },
  "test2222" : {
    "methodSignature" : "protected final double[][] getData()",
    "methodName" : "getData",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = 0.0;\n    doubleArray0[1] = 583.983576;\n    doubleArray0[2] = 583.983576;\n    doubleArray0[3] = 0.0;\n    doubleArray0[4] = (-3277.2674305406554);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, 583.983576, relationship0, openMapRealVector0, 0.0);\n    linkedList0.add(linearConstraint0);\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-5138.939914));\n    simplexTableau0.getSolution();\n    simplexTableau0.getData();\n    simplexTableau0.getNumArtificialVariables();\n    simplexTableau0.getData();\n}",
    "testName" : "test2222"
  },
  "test7676" : {
    "methodSignature" : "public double getValue()",
    "methodName" : "getValue",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7676() throws Throwable {\n    double[] doubleArray0 = new double[7];\n    doubleArray0[0] = 1.0;\n    doubleArray0[1] = (-975.73314);\n    doubleArray0[2] = 942.97;\n    doubleArray0[3] = (-1.0);\n    doubleArray0[5] = (-1.0);\n    doubleArray0[6] = 58.0547673;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0, 0);\n    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);\n    GoalType goalType1 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, list0, goalType1, false, (-2780.06341805081));\n    RealPointValuePair realPointValuePair0 = simplexTableau1.getSolution();\n    realPointValuePair0.getValue();\n}",
    "testName" : "test7676"
  },
  "test033" : {
    "methodSignature" : "protected RealPointValuePair getSolution()",
    "methodName" : "getSolution",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    int int0 = 5752;\n    ArrayRealVector arrayRealVector0 = new ArrayRealVector(5752, 1512.1984698665597);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(arrayRealVector0, 5752);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    double double0 = 845.7854011495;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 845.7854011495, 5752);\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(arrayRealVector0, relationship0, 5752);\n    linkedList0.add(linearConstraint0);\n    // Undeclared exception!\n    simplexTableau0.getSolution();\n}",
    "testName" : "test033"
  },
  "test077" : {
    "methodSignature" : "protected void divideRow(final int dividendRow, final double divisor)",
    "methodName" : "divideRow",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    double[] doubleArray0 = new double[13];\n    doubleArray0[0] = (-1476.86);\n    doubleArray0[1] = Double.POSITIVE_INFINITY;\n    doubleArray0[3] = 0.0;\n    doubleArray0[4] = 1151.079702577819;\n    doubleArray0[1] = 639.098447199516;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1490.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) (-1476.86);\n    doubleArray1[1] = (Double) 0.0;\n    doubleArray0[1] = 639.098447199516;\n    doubleArray1[3] = (Double) 1151.079702577819;\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (double) doubleArray1[1]);\n    simplexTableau0.getNumObjectiveFunctions();\n    simplexTableau0.equals(doubleArray1[2]);\n    simplexTableau0.getArtificialVariableOffset();\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType1, false, (double) doubleArray1[1]);\n    simplexTableau0.equals(simplexTableau1);\n    simplexTableau1.getNumArtificialVariables();\n    simplexTableau0.divideRow(1203, 2175.42114);\n}",
    "testName" : "test077"
  },
  "test1616" : {
    "methodSignature" : "protected void dropPhase1Objective()",
    "methodName" : "dropPhase1Objective",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = (-1509.4966);\n    doubleArray0[1] = (-1578.8);\n    doubleArray0[2] = (-4663.639503);\n    doubleArray0[3] = (-1270.0);\n    doubleArray0[5] = (-1291.416448259596);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    linearObjectiveFunction0.getValue(doubleArray0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, (-4222.331916304862));\n    linkedList0.add(linearConstraint0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(0);\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);\n    simplexTableau0.isOptimal();\n    simplexTableau0.getRhsOffset();\n    Integer integer0 = new Integer(0);\n    simplexTableau0.hashCode();\n    simplexTableau0.dropPhase1Objective();\n}",
    "testName" : "test1616"
  },
  "test3838" : {
    "methodSignature" : "protected final int getNumDecisionVariables()",
    "methodName" : "getNumDecisionVariables",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3838() throws Throwable {\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = 1137.7657;\n    doubleArray0[1] = 1.0E-9;\n    doubleArray0[2] = (-1.0);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-261.9925719), 2352);\n    simplexTableau0.getNumDecisionVariables();\n}",
    "testName" : "test3838"
  },
  "test2828" : {
    "methodSignature" : "protected static double getInvertedCoefficientSum(final RealVector coefficients)",
    "methodName" : "getInvertedCoefficientSum",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    double[] doubleArray0 = new double[1];\n    doubleArray0[0] = 1.0E-9;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1.0E-9);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Relationship relationship0 = Relationship.GEQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, 1.3260791301727295, relationship0, doubleArray0, 2.5257552661512635E-165);\n    linkedList0.add(linearConstraint0);\n    LinkedList<LinearConstraint> linkedList1 = new LinkedList<LinearConstraint>(linkedList0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    Relationship relationship1 = Relationship.LEQ;\n    LinearConstraint linearConstraint1 = new LinearConstraint(doubleArray0, relationship1, 1.0E-9);\n    linkedList1.add(linearConstraint1);\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList1, goalType0, false, (-2072.9697838825));\n    simplexTableau0.normalizeConstraints(linkedList1);\n    simplexTableau0.getHeight();\n    simplexTableau0.getRhsOffset();\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-1341), (-1341), (-1446.9));\n    SimplexTableau.getInvertedCoefficientSum(openMapRealVector0);\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "protected final int getWidth()",
    "methodName" : "getWidth",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[3] = (-1476.86);\n    doubleArray0[1] = (-1476.86);\n    doubleArray0[1] = 0.0;\n    doubleArray0[3] = Double.NaN;\n    doubleArray0[5] = 632.68;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1490.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) 0.0;\n    doubleArray1[1] = (Double) Double.NaN;\n    doubleArray1[2] = (Double) 0.0;\n    doubleArray1[3] = (Double) 0.0;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);\n    Relationship relationship0 = Relationship.GEQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, Double.NaN, relationship0, openMapRealVector0, 0.0);\n    linkedList0.offerLast(linearConstraint0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 3719.7487517476907);\n    SimplexTableau.getInvertedCoefficientSum(openMapRealVector0);\n    simplexTableau0.getNumObjectiveFunctions();\n    simplexTableau0.getArtificialVariableOffset();\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    linkedList0.add(linearConstraint0);\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType1, false, 0.0);\n    simplexTableau1.createTableau(false);\n    simplexTableau0.equals(simplexTableau1);\n    simplexTableau0.dropPhase1Objective();\n    simplexTableau0.getSolution();\n    simplexTableau0.getWidth();\n}",
    "testName" : "test1414"
  },
  "test4848" : {
    "methodSignature" : "protected void divideRow(final int dividendRow, final double divisor)",
    "methodName" : "divideRow",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4848() throws Throwable {\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = 0.0;\n    doubleArray0[1] = 0.0;\n    doubleArray0[2] = 1.0;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-6117.869348855));\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-1.0), 10);\n    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);\n    List<LinearConstraint> list1 = simplexTableau0.normalizeConstraints(list0);\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, list1, goalType0, false, 0.0);\n    simplexTableau1.divideRow(10, 0.0);\n}",
    "testName" : "test4848"
  },
  "test3636" : {
    "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon, final int maxUlps)",
    "methodName" : "SimplexTableau",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3636() throws Throwable {\n    int int0 = (-4030);\n    double double0 = 2.0;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-4030), 2.0);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    double double1 = 353.1209249552243;\n    int int1 = (-1770);\n    SimplexTableau simplexTableau0 = null;\n    simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 353.1209249552243, (-1770));\n}",
    "testName" : "test3636"
  },
  "test5858" : {
    "methodSignature" : "protected void dropPhase1Objective()",
    "methodName" : "dropPhase1Objective",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5858() throws Throwable {\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(184, 0);\n    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector((RealVector) openMapRealVector0);\n    openMapRealVector1.mapAddToSelf(0.0);\n    SimplexTableau.getInvertedCoefficientSum(openMapRealVector1);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-4501.082));\n    simplexTableau0.dropPhase1Objective();\n}",
    "testName" : "test5858"
  },
  "test2626" : {
    "methodSignature" : "protected void dropPhase1Objective()",
    "methodName" : "dropPhase1Objective",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = (-1509.4966);\n    doubleArray0[1] = (-1578.8);\n    doubleArray0[2] = (-4663.639503);\n    doubleArray0[3] = (-1270.0);\n    doubleArray0[4] = (-1.0);\n    doubleArray0[5] = (-1291.416448259596);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    linearObjectiveFunction0.getValue(doubleArray0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(0);\n    Relationship relationship0 = Relationship.GEQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, (-1509.4966), relationship0, openMapRealVector0, 2.0);\n    linkedList0.add(linearConstraint0);\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);\n    simplexTableau0.createTableau(true);\n    simplexTableau0.isOptimal();\n    simplexTableau0.getRhsOffset();\n    simplexTableau0.getBasicRow(0);\n    simplexTableau0.hashCode();\n    simplexTableau0.equals(openMapRealVector0);\n    simplexTableau0.dropPhase1Objective();\n}",
    "testName" : "test2626"
  },
  "test6060" : {
    "methodSignature" : "protected static double getInvertedCoefficientSum(final RealVector coefficients)",
    "methodName" : "getInvertedCoefficientSum",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6060() throws Throwable {\n    SimplexTableau.getInvertedCoefficientSum((RealVector) null);\n}",
    "testName" : "test6060"
  },
  "test7070" : {
    "methodSignature" : "protected final int getRhsOffset()",
    "methodName" : "getRhsOffset",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7070() throws Throwable {\n    double[] doubleArray0 = new double[0];\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    Relationship relationship0 = Relationship.LEQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, (-1.0));\n    linkedList0.add(linearConstraint0);\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0, 1);\n    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    linkedList0.poll();\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, list0, goalType1, false, 0.0);\n    simplexTableau1.getRhsOffset();\n    simplexTableau1.getRhsOffset();\n}",
    "testName" : "test7070"
  },
  "test4242" : {
    "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon)",
    "methodName" : "SimplexTableau",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4242() throws Throwable {\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-1933), (-1933), 0.0);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 2064.3949636);\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = (double) (-1933);\n    doubleArray0[1] = 1.0E-12;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = (double) (-1933);\n    doubleArray0[4] = 1.0E-12;\n    LinearObjectiveFunction linearObjectiveFunction1 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    int int0 = 0;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction1, linkedList0, goalType0, false, 0.0, 0);\n    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);\n    SimplexTableau simplexTableau1 = null;\n    simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, list0, goalType0, false, 2064.3949636);\n}",
    "testName" : "test4242"
  },
  "test3030" : {
    "methodSignature" : "boolean isOptimal()",
    "methodName" : "isOptimal",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    double[] doubleArray0 = new double[0];\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, 0.0);\n    linkedList0.add(linearConstraint0);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    linkedList0.add(linearConstraint0);\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);\n    linearObjectiveFunction0.getValue(doubleArray0);\n    simplexTableau0.getHeight();\n    simplexTableau0.getNumDecisionVariables();\n    LinkedList<LinearConstraint> linkedList1 = new LinkedList<LinearConstraint>();\n    linkedList1.spliterator();\n    linkedList0.addAll(0, (Collection<? extends LinearConstraint>) linkedList1);\n    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);\n    linkedList0.add(linearConstraint0);\n    simplexTableau0.getOriginalNumDecisionVariables();\n    simplexTableau0.getSolution();\n    simplexTableau0.getNumSlackVariables();\n    simplexTableau0.divideRow(0, 0.0);\n    simplexTableau0.createTableau(false);\n    simplexTableau0.dropPhase1Objective();\n    simplexTableau0.isOptimal();\n    simplexTableau0.isOptimal();\n    linkedList1.add(linearConstraint0);\n    simplexTableau0.subtractRow(0, 0, 0);\n    simplexTableau0.getNumDecisionVariables();\n    linkedList1.addAll((Collection<? extends LinearConstraint>) list0);\n    linearObjectiveFunction0.getValue(doubleArray0);\n    simplexTableau0.normalizeConstraints(linkedList1);\n    simplexTableau0.hashCode();\n    simplexTableau0.dropPhase1Objective();\n    simplexTableau0.isOptimal();\n    simplexTableau0.isOptimal();\n}",
    "testName" : "test3030"
  },
  "test6464" : {
    "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon)",
    "methodName" : "SimplexTableau",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6464() throws Throwable {\n    Double[] doubleArray0 = new Double[5];\n    Double double0 = new Double(0.0);\n    doubleArray0[0] = double0;\n    Double double1 = new Double(0.0);\n    doubleArray0[1] = double1;\n    Double double2 = Double.valueOf((double) doubleArray0[0]);\n    doubleArray0[2] = double2;\n    Double double3 = new Double(0.0);\n    doubleArray0[3] = double3;\n    Double double4 = new Double((-1721.36667));\n    doubleArray0[4] = double4;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-3471.442816367518));\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 3426.53120054);\n    Collection<LinearConstraint> collection0 = null;\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = null;\n    simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, (Collection<LinearConstraint>) null, goalType0, false, (-685.11517));\n}",
    "testName" : "test6464"
  },
  "test5252" : {
    "methodSignature" : "boolean isOptimal()",
    "methodName" : "isOptimal",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5252() throws Throwable {\n    double[] doubleArray0 = new double[0];\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, 0.0);\n    linkedList0.add(linearConstraint0);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);\n    linearObjectiveFunction0.getValue(doubleArray0);\n    simplexTableau0.getHeight();\n    simplexTableau0.getNumDecisionVariables();\n    LinkedList<LinearConstraint> linkedList1 = new LinkedList<LinearConstraint>();\n    linkedList1.spliterator();\n    linkedList0.addAll(0, (Collection<? extends LinearConstraint>) linkedList1);\n    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);\n    linkedList0.add(linearConstraint0);\n    simplexTableau0.getOriginalNumDecisionVariables();\n    simplexTableau0.getSolution();\n    simplexTableau0.getNumSlackVariables();\n    simplexTableau0.divideRow(0, 2631.35832);\n    simplexTableau0.createTableau(false);\n    simplexTableau0.dropPhase1Objective();\n    simplexTableau0.isOptimal();\n    simplexTableau0.isOptimal();\n    linkedList1.add(linearConstraint0);\n    simplexTableau0.subtractRow(0, 0, 0);\n    simplexTableau0.getNumDecisionVariables();\n    linkedList1.addAll((Collection<? extends LinearConstraint>) list0);\n    linearObjectiveFunction0.getValue(doubleArray0);\n    simplexTableau0.normalizeConstraints(linkedList1);\n    simplexTableau0.hashCode();\n    simplexTableau0.dropPhase1Objective();\n    simplexTableau0.isOptimal();\n    simplexTableau0.isOptimal();\n}",
    "testName" : "test5252"
  },
  "test8289" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8289() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[2] = Double.POSITIVE_INFINITY;\n    doubleArray0[3] = Double.POSITIVE_INFINITY;\n    doubleArray0[4] = 0.0;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, Double.POSITIVE_INFINITY);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);\n    simplexTableau0.equals(Double.POSITIVE_INFINITY);\n    int int0 = simplexTableau0.getArtificialVariableOffset();\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);\n    boolean boolean0 = simplexTableau0.equals(simplexTableau1);\n}",
    "testName" : "test8289"
  },
  "test2020" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = (-1476.86);\n    doubleArray0[1] = Double.POSITIVE_INFINITY;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = Double.NaN;\n    doubleArray0[4] = 1151.079702577819;\n    doubleArray0[5] = 632.68;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) (-1476.86);\n    doubleArray1[1] = (Double) Double.NaN;\n    doubleArray1[2] = (Double) Double.POSITIVE_INFINITY;\n    doubleArray1[3] = (Double) 1151.079702577819;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 3719.7487517476907);\n    SimplexTableau.getInvertedCoefficientSum(openMapRealVector0);\n    simplexTableau0.getNumObjectiveFunctions();\n    simplexTableau0.equals(doubleArray1[2]);\n    simplexTableau0.getArtificialVariableOffset();\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType1, false, 0.0);\n    simplexTableau1.equals(simplexTableau1);\n}",
    "testName" : "test2020"
  },
  "test7474" : {
    "methodSignature" : "protected final int getRhsOffset()",
    "methodName" : "getRhsOffset",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7474() throws Throwable {\n    double[] doubleArray0 = new double[1];\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0);\n    ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);\n    LinearObjectiveFunction linearObjectiveFunction1 = new LinearObjectiveFunction(arrayRealVector0, 1.976524624939355E-8);\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction1, linkedList0, goalType0, false, 0.0, 1360);\n    LinkedList<LinearConstraint> linkedList1 = new LinkedList<LinearConstraint>();\n    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList1);\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, list0, goalType1, false, (-2276.464819));\n    GoalType goalType2 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau2 = new SimplexTableau(linearObjectiveFunction1, linkedList0, goalType2, false, 1123.543217, 0);\n    simplexTableau1.equals(simplexTableau2);\n    simplexTableau2.getRhsOffset();\n}",
    "testName" : "test7474"
  },
  "test8288" : {
    "methodSignature" : "protected final int getArtificialVariableOffset()",
    "methodName" : "getArtificialVariableOffset",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8288() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[2] = Double.POSITIVE_INFINITY;\n    doubleArray0[3] = Double.POSITIVE_INFINITY;\n    doubleArray0[4] = 0.0;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, Double.POSITIVE_INFINITY);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);\n    simplexTableau0.equals(Double.POSITIVE_INFINITY);\n    int int0 = simplexTableau0.getArtificialVariableOffset();\n}",
    "testName" : "test8288"
  },
  "test4040" : {
    "methodSignature" : "protected final int getWidth()",
    "methodName" : "getWidth",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4040() throws Throwable {\n    double[] doubleArray0 = new double[2];\n    doubleArray0[0] = (-2252.1513765);\n    doubleArray0[1] = 0.0;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 1428.47797487);\n    simplexTableau0.getWidth();\n}",
    "testName" : "test4040"
  },
  "test6262" : {
    "methodSignature" : "public ArrayRealVector(double[] v1, ArrayRealVector v2)",
    "methodName" : "ArrayRealVector",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6262() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = 0.0;\n    doubleArray0[1] = 2644.888130468538;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = 2807.984;\n    doubleArray0[4] = 1123.543217;\n    doubleArray0[5] = 2500.45592312;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 2644.888130468538);\n    linearObjectiveFunction0.getValue(doubleArray0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    Relationship relationship0 = Relationship.LEQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, 1123.543217);\n    linkedList0.parallelStream();\n    linkedList0.add(linearConstraint0);\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-46.1295), 0);\n    simplexTableau0.getBasicRow(0);\n    simplexTableau0.getOriginalNumDecisionVariables();\n    linkedList0.add(linearConstraint0);\n    simplexTableau0.getHeight();\n    simplexTableau0.getArtificialVariableOffset();\n    simplexTableau0.hashCode();\n    double[] doubleArray1 = new double[9];\n    doubleArray1[0] = (double) 2;\n    doubleArray1[1] = (-46.1295);\n    doubleArray1[2] = 2644.888130468538;\n    doubleArray1[3] = 1846.96;\n    doubleArray1[4] = 1123.543217;\n    doubleArray1[5] = (double) 2;\n    doubleArray1[6] = (double) 8;\n    doubleArray1[7] = 2807.984;\n    doubleArray1[8] = 2807.984;\n    ArrayRealVector arrayRealVector0 = null;\n    arrayRealVector0 = new ArrayRealVector(doubleArray1, (ArrayRealVector) null);\n}",
    "testName" : "test6262"
  },
  "test5050" : {
    "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon, final int maxUlps)",
    "methodName" : "SimplexTableau",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5050() throws Throwable {\n    int int0 = 4059;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(4059, 4059);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 4059);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    boolean boolean0 = true;\n    double double0 = (-1.0);\n    int int1 = 0;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-1.0), 0);\n}",
    "testName" : "test5050"
  },
  "test7272" : {
    "methodSignature" : "protected final int getSlackVariableOffset()",
    "methodName" : "getSlackVariableOffset",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7272() throws Throwable {\n    ArrayRealVector arrayRealVector0 = new ArrayRealVector(0, 0);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(arrayRealVector0, 0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-1574.390823), 0);\n    simplexTableau0.getSlackVariableOffset();\n}",
    "testName" : "test7272"
  },
  "test8086" : {
    "methodSignature" : "protected void divideRow(final int dividendRow, final double divisor)",
    "methodName" : "divideRow",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8086() throws Throwable {\n    double[] doubleArray0 = new double[13];\n    doubleArray0[0] = (-1476.86);\n    doubleArray0[3] = 0.0;\n    doubleArray0[4] = 1151.079702577819;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1490.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    doubleArray0[1] = 0.0;\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);\n    simplexTableau0.getNumObjectiveFunctions();\n    simplexTableau0.equals(1151.079702577819);\n    simplexTableau0.getArtificialVariableOffset();\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType1, false, 0.0);\n    simplexTableau0.equals(simplexTableau1);\n    simplexTableau1.getNumArtificialVariables();\n    simplexTableau0.divideRow(1203, 2175.42114);\n}",
    "testName" : "test8086"
  },
  "test022" : {
    "methodSignature" : "protected void divideRow(final int dividendRow, final double divisor)",
    "methodName" : "divideRow",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    double[] doubleArray0 = new double[13];\n    doubleArray0[0] = (-1476.86);\n    doubleArray0[1] = Double.POSITIVE_INFINITY;\n    doubleArray0[3] = 0.0;\n    doubleArray0[4] = 1151.079702577819;\n    doubleArray0[1] = 639.098447199516;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1490.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) (-1476.86);\n    doubleArray1[1] = (Double) 0.0;\n    doubleArray0[1] = 639.098447199516;\n    doubleArray1[3] = (Double) 1151.079702577819;\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, Double.NaN);\n    linkedList0.add(linearConstraint0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (double) doubleArray1[1]);\n    simplexTableau0.getNumObjectiveFunctions();\n    simplexTableau0.equals(doubleArray1[2]);\n    simplexTableau0.getArtificialVariableOffset();\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType1, false, (double) doubleArray1[1]);\n    simplexTableau0.equals(simplexTableau1);\n    simplexTableau1.getNumArtificialVariables();\n    simplexTableau0.divideRow(1203, 2175.42114);\n}",
    "testName" : "test022"
  },
  "test066" : {
    "methodSignature" : "protected void divideRow(final int dividendRow, final double divisor)",
    "methodName" : "divideRow",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    double[] doubleArray0 = new double[13];\n    doubleArray0[0] = (-1476.86);\n    doubleArray0[1] = Double.POSITIVE_INFINITY;\n    doubleArray0[3] = 0.0;\n    doubleArray0[4] = 1151.079702577819;\n    doubleArray0[1] = 639.098447199516;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1490.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) (-1476.86);\n    doubleArray1[1] = (Double) 0.0;\n    doubleArray0[1] = 639.098447199516;\n    doubleArray1[3] = (Double) 1151.079702577819;\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (double) doubleArray1[1]);\n    simplexTableau0.getNumObjectiveFunctions();\n    simplexTableau0.equals(doubleArray1[2]);\n    simplexTableau0.getArtificialVariableOffset();\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (double) doubleArray1[1]);\n    simplexTableau1.isOptimal();\n    simplexTableau0.equals(simplexTableau1);\n    simplexTableau1.getNumArtificialVariables();\n    simplexTableau0.getNumSlackVariables();\n    simplexTableau0.divideRow(1203, 2175.42114);\n}",
    "testName" : "test066"
  },
  "test8491" : {
    "methodSignature" : "protected final int getRhsOffset()",
    "methodName" : "getRhsOffset",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8491() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = (-1509.4966);\n    doubleArray0[5] = (-1578.8);\n    doubleArray0[2] = (-4663.639503);\n    doubleArray0[5] = (-4663.639503);\n    doubleArray0[5] = (-1291.416448259596);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    linearObjectiveFunction0.getValue(doubleArray0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(0);\n    Relationship relationship0 = Relationship.LEQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, (-1509.4966), relationship0, openMapRealVector0, 2.0);\n    linkedList0.add(linearConstraint0);\n    Integer integer0 = new Integer(0);\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 2.0, 2820);\n    int int0 = simplexTableau0.getRhsOffset();\n}",
    "testName" : "test8491"
  },
  "test1818" : {
    "methodSignature" : "protected final double getEntry(final int row, final int column)",
    "methodName" : "getEntry",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = (-1476.86);\n    doubleArray0[1] = Double.POSITIVE_INFINITY;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = Double.NaN;\n    doubleArray0[4] = 1151.079702577819;\n    doubleArray0[5] = 632.68;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1490.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) (-1476.86);\n    doubleArray1[1] = (Double) Double.NaN;\n    doubleArray1[2] = (Double) Double.POSITIVE_INFINITY;\n    doubleArray1[3] = (Double) 1151.079702577819;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, Double.NaN, relationship0, openMapRealVector0, 0.0);\n    linkedList0.offerLast(linearConstraint0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 3719.7487517476907);\n    SimplexTableau.getInvertedCoefficientSum(openMapRealVector0);\n    simplexTableau0.getNumObjectiveFunctions();\n    simplexTableau0.equals(doubleArray1[2]);\n    simplexTableau0.getArtificialVariableOffset();\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    simplexTableau0.normalizeConstraints(linkedList0);\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType1, false, 0.0);\n    simplexTableau0.equals(simplexTableau1);\n    simplexTableau0.getEntry(2, 2);\n}",
    "testName" : "test1818"
  },
  "test7884" : {
    "methodSignature" : "protected final int getSlackVariableOffset()",
    "methodName" : "getSlackVariableOffset",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7884() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[2] = 0.0;\n    doubleArray0[4] = 1151.079702577819;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1151.079702577819);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[1] = (Double) 0.0;\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 3719.7487517476907);\n    simplexTableau0.getNumObjectiveFunctions();\n    int int0 = simplexTableau0.getArtificialVariableOffset();\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (double) doubleArray1[1]);\n    boolean boolean0 = simplexTableau0.equals(simplexTableau1);\n    int int1 = simplexTableau1.getSlackVariableOffset();\n}",
    "testName" : "test7884"
  },
  "test7883" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7883() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[2] = 0.0;\n    doubleArray0[4] = 1151.079702577819;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1151.079702577819);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[1] = (Double) 0.0;\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 3719.7487517476907);\n    simplexTableau0.getNumObjectiveFunctions();\n    int int0 = simplexTableau0.getArtificialVariableOffset();\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (double) doubleArray1[1]);\n    boolean boolean0 = simplexTableau0.equals(simplexTableau1);\n}",
    "testName" : "test7883"
  },
  "test7882" : {
    "methodSignature" : "protected final int getArtificialVariableOffset()",
    "methodName" : "getArtificialVariableOffset",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7882() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[2] = 0.0;\n    doubleArray0[4] = 1151.079702577819;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1151.079702577819);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[1] = (Double) 0.0;\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 3719.7487517476907);\n    simplexTableau0.getNumObjectiveFunctions();\n    int int0 = simplexTableau0.getArtificialVariableOffset();\n}",
    "testName" : "test7882"
  },
  "test8695" : {
    "methodSignature" : "boolean isOptimal()",
    "methodName" : "isOptimal",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8695() throws Throwable {\n    double[] doubleArray0 = new double[0];\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Relationship relationship0 = Relationship.GEQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, 0.0);\n    boolean boolean0 = linkedList0.add(linearConstraint0);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);\n    linearObjectiveFunction0.getValue(doubleArray0);\n    simplexTableau0.getHeight();\n    simplexTableau0.getNumDecisionVariables();\n    LinkedList<LinearConstraint> linkedList1 = new LinkedList<LinearConstraint>();\n    linkedList0.addAll(0, (Collection<? extends LinearConstraint>) linkedList1);\n    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);\n    Integer integer0 = new Integer(0);\n    simplexTableau0.getSolution();\n    simplexTableau0.divideRow(0, 0.0);\n    simplexTableau0.isOptimal();\n    simplexTableau0.isOptimal();\n    linkedList1.add(linearConstraint0);\n    simplexTableau0.subtractRow(0, 0, 0);\n    simplexTableau0.getNumDecisionVariables();\n    linkedList1.addAll((Collection<? extends LinearConstraint>) list0);\n    linearObjectiveFunction0.getValue(doubleArray0);\n    simplexTableau0.normalizeConstraints(linkedList1);\n    linkedList0.offer(linearConstraint0);\n    simplexTableau0.hashCode();\n    simplexTableau0.dropPhase1Objective();\n    simplexTableau0.isOptimal();\n    boolean boolean1 = simplexTableau0.isOptimal();\n}",
    "testName" : "test8695"
  },
  "test5757" : {
    "methodSignature" : "protected RealMatrix createTableau(final boolean maximize)",
    "methodName" : "createTableau",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5757() throws Throwable {\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 37.32);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 1.0E-12, 728);\n    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, list0, goalType1, false, 728);\n    simplexTableau1.getData();\n    simplexTableau0.createTableau(true);\n}",
    "testName" : "test5757"
  },
  "test2323" : {
    "methodSignature" : "protected void dropPhase1Objective()",
    "methodName" : "dropPhase1Objective",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[3] = (-1476.86);\n    doubleArray0[1] = (-1476.86);\n    doubleArray0[1] = 0.0;\n    doubleArray0[3] = Double.NaN;\n    doubleArray0[5] = 632.68;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1490.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) 0.0;\n    doubleArray1[1] = (Double) Double.NaN;\n    doubleArray1[2] = (Double) 0.0;\n    doubleArray1[3] = (Double) 0.0;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, Double.NaN, relationship0, openMapRealVector0, 0.0);\n    linkedList0.offerLast(linearConstraint0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 3719.7487517476907);\n    SimplexTableau.getInvertedCoefficientSum(openMapRealVector0);\n    simplexTableau0.getNumObjectiveFunctions();\n    simplexTableau0.equals(doubleArray1[2]);\n    simplexTableau0.getArtificialVariableOffset();\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType1, false, 0.0);\n    simplexTableau1.dropPhase1Objective();\n    simplexTableau0.equals(simplexTableau1);\n    simplexTableau0.dropPhase1Objective();\n}",
    "testName" : "test2323"
  },
  "test1313" : {
    "methodSignature" : "protected static double getInvertedCoefficientSum(final RealVector coefficients)",
    "methodName" : "getInvertedCoefficientSum",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = 0.0;\n    doubleArray0[1] = 583.983576;\n    doubleArray0[2] = 583.983576;\n    doubleArray0[3] = 0.0;\n    doubleArray0[4] = (-3277.2674305406554);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, 583.983576, relationship0, openMapRealVector0, 0.0);\n    linkedList0.add(linearConstraint0);\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-5138.939914));\n    simplexTableau0.getSolution();\n    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(2146906483);\n    // Undeclared exception!\n    SimplexTableau.getInvertedCoefficientSum(openMapRealVector1);\n}",
    "testName" : "test1313"
  },
  "test4545" : {
    "methodSignature" : "protected final double getEntry(final int row, final int column)",
    "methodName" : "getEntry",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4545() throws Throwable {\n    double[] doubleArray0 = new double[2];\n    doubleArray0[0] = 2855.6223866043;\n    doubleArray0[1] = 1251.638551;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1251.638551);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);\n    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);\n    GoalType goalType1 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, list0, goalType1, true, 1109.421305, 1119);\n    simplexTableau1.getBasicRow(0);\n    simplexTableau0.getEntry(0, 1119);\n}",
    "testName" : "test4545"
  },
  "test3535" : {
    "methodSignature" : "public OpenMapRealVector getSubVector(int index, int n)",
    "methodName" : "getSubVector",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    int int0 = 0;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(0);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, (-1.0));\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Comparator<LinearConstraint> comparator0 = (Comparator<LinearConstraint>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    linkedList0.sort(comparator0);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-1117.55383), 0);\n    simplexTableau0.setEntry(0, 0, 1.0E-12);\n    openMapRealVector0.mapAdd(0.0);\n    openMapRealVector0.getNorm();\n    simplexTableau0.createTableau(true);\n    simplexTableau0.getNumArtificialVariables();\n    openMapRealVector0.getSubVector(0, 0);\n}",
    "testName" : "test3535"
  },
  "test6767" : {
    "methodSignature" : "protected void divideRow(final int dividendRow, final double divisor)",
    "methodName" : "divideRow",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6767() throws Throwable {\n    ArrayRealVector arrayRealVector0 = new ArrayRealVector(46);\n    ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, true);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(arrayRealVector1, 1735.570171827);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 46);\n    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, list0, goalType1, false, 1735.570171827, 46);\n    simplexTableau1.getSolution();\n    simplexTableau1.divideRow(0, 46);\n}",
    "testName" : "test6767"
  },
  "test7779" : {
    "methodSignature" : "int getColumnDimension()",
    "methodName" : "getColumnDimension",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7779() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[1] = 0.0;\n    doubleArray0[0] = Double.NaN;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) Double.NaN;\n    doubleArray1[1] = (Double) 0.0;\n    doubleArray1[2] = (Double) 0.0;\n    doubleArray1[3] = (Double) 0.0;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, 0.0, relationship0, openMapRealVector0, 0.0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 3719.7487517476907);\n    double double0 = SimplexTableau.getInvertedCoefficientSum(openMapRealVector0);\n    simplexTableau0.getNumObjectiveFunctions();\n    int int0 = simplexTableau0.getArtificialVariableOffset();\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    linkedList0.add(linearConstraint0);\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType1, false, 0.0);\n    RealMatrix realMatrix0 = simplexTableau1.createTableau(false);\n    realMatrix0.getColumnDimension();\n}",
    "testName" : "test7779"
  },
  "test5555" : {
    "methodSignature" : "protected final void setEntry(final int row, final int column, final double value)",
    "methodName" : "setEntry",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5555() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = (-3524.5);\n    doubleArray0[1] = 0.0;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = 0.0;\n    doubleArray0[4] = Double.NaN;\n    doubleArray0[5] = 840.187671115898;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 332.0, 0);\n    simplexTableau0.setEntry(0, 250, 332.0);\n}",
    "testName" : "test5555"
  },
  "test7778" : {
    "methodSignature" : "protected final int getArtificialVariableOffset()",
    "methodName" : "getArtificialVariableOffset",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7778() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[1] = 0.0;\n    doubleArray0[0] = Double.NaN;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) Double.NaN;\n    doubleArray1[1] = (Double) 0.0;\n    doubleArray1[2] = (Double) 0.0;\n    doubleArray1[3] = (Double) 0.0;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, 0.0, relationship0, openMapRealVector0, 0.0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 3719.7487517476907);\n    double double0 = SimplexTableau.getInvertedCoefficientSum(openMapRealVector0);\n    simplexTableau0.getNumObjectiveFunctions();\n    int int0 = simplexTableau0.getArtificialVariableOffset();\n}",
    "testName" : "test7778"
  },
  "test2121" : {
    "methodSignature" : "protected RealPointValuePair getSolution()",
    "methodName" : "getSolution",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[3] = (-1476.86);\n    doubleArray0[1] = (-1476.86);\n    doubleArray0[1] = 0.0;\n    doubleArray0[3] = Double.NaN;\n    doubleArray0[5] = 632.68;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1490.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) 0.0;\n    doubleArray1[1] = (Double) Double.NaN;\n    doubleArray1[2] = (Double) 0.0;\n    doubleArray1[3] = (Double) 0.0;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, Double.NaN, relationship0, openMapRealVector0, 0.0);\n    linkedList0.offerLast(linearConstraint0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 3719.7487517476907);\n    SimplexTableau.getInvertedCoefficientSum(openMapRealVector0);\n    simplexTableau0.getNumObjectiveFunctions();\n    simplexTableau0.equals(doubleArray1[2]);\n    simplexTableau0.getArtificialVariableOffset();\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType1, false, 0.0);\n    simplexTableau1.createTableau(false);\n    simplexTableau0.equals(simplexTableau1);\n    simplexTableau0.dropPhase1Objective();\n    simplexTableau0.getSolution();\n}",
    "testName" : "test2121"
  },
  "test7777" : {
    "methodSignature" : "protected static double getInvertedCoefficientSum(final RealVector coefficients)",
    "methodName" : "getInvertedCoefficientSum",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7777() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[1] = 0.0;\n    doubleArray0[0] = Double.NaN;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) Double.NaN;\n    doubleArray1[1] = (Double) 0.0;\n    doubleArray1[2] = (Double) 0.0;\n    doubleArray1[3] = (Double) 0.0;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, 0.0, relationship0, openMapRealVector0, 0.0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 3719.7487517476907);\n    double double0 = SimplexTableau.getInvertedCoefficientSum(openMapRealVector0);\n}",
    "testName" : "test7777"
  },
  "test1111" : {
    "methodSignature" : "protected Integer getBasicRow(final int col)",
    "methodName" : "getBasicRow",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = (-1476.86);\n    doubleArray0[2] = Double.POSITIVE_INFINITY;\n    doubleArray0[3] = Double.NaN;\n    doubleArray0[4] = 1151.079702577819;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1490.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) (-1476.86);\n    doubleArray1[1] = (Double) Double.NaN;\n    doubleArray1[2] = (Double) 0.0;\n    doubleArray1[3] = (Double) 1151.079702577819;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, Double.NaN, relationship0, openMapRealVector0, 0.0);\n    linkedList0.offerLast(linearConstraint0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-214.0633986872392));\n    SimplexTableau.getInvertedCoefficientSum(openMapRealVector0);\n    simplexTableau0.getNumObjectiveFunctions();\n    simplexTableau0.equals(doubleArray1[2]);\n    simplexTableau0.initializeColumnLabels();\n    simplexTableau0.getArtificialVariableOffset();\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);\n    simplexTableau0.equals(simplexTableau1);\n    simplexTableau0.getBasicRow(9);\n}",
    "testName" : "test1111"
  },
  "test4343" : {
    "methodSignature" : "public ArrayRealVector(double[] d, int pos, int size)",
    "methodName" : "ArrayRealVector",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4343() throws Throwable {\n    double[] doubleArray0 = new double[7];\n    doubleArray0[0] = (-2638.99);\n    doubleArray0[1] = (-2139.206689553469);\n    doubleArray0[2] = 1464.19;\n    doubleArray0[3] = 0.0;\n    doubleArray0[4] = (-364.37117018);\n    doubleArray0[5] = (-1172.189888672);\n    doubleArray0[6] = 0.0;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-364.37117018));\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 726.94629620667, (-3035));\n    simplexTableau0.isOptimal();\n    simplexTableau0.getHeight();\n    ArrayRealVector arrayRealVector0 = null;\n    arrayRealVector0 = new ArrayRealVector(doubleArray0, 1, (-3035));\n}",
    "testName" : "test4343"
  },
  "test3333" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = (-1476.86);\n    doubleArray0[1] = Double.POSITIVE_INFINITY;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = Double.NaN;\n    doubleArray0[4] = 1151.079702577819;\n    doubleArray0[5] = 632.68;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1490.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) (-1476.86);\n    doubleArray1[1] = (Double) Double.NaN;\n    doubleArray1[2] = (Double) Double.POSITIVE_INFINITY;\n    doubleArray1[3] = (Double) 1151.079702577819;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, Double.NaN, relationship0, openMapRealVector0, 0.0);\n    linkedList0.offerLast(linearConstraint0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 3719.7487517476907);\n    SimplexTableau.getInvertedCoefficientSum(openMapRealVector0);\n    simplexTableau0.getNumObjectiveFunctions();\n    simplexTableau0.equals(doubleArray1[2]);\n    simplexTableau0.getArtificialVariableOffset();\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType1, false, 0.0);\n    simplexTableau0.equals(simplexTableau1);\n}",
    "testName" : "test3333"
  },
  "test6565" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6565() throws Throwable {\n    double[] doubleArray0 = new double[4];\n    doubleArray0[0] = 0.0;\n    doubleArray0[1] = 1.0E-12;\n    doubleArray0[2] = 1401.553580024;\n    doubleArray0[3] = (-2991.6359261);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0, (-1021));\n    simplexTableau0.hashCode();\n}",
    "testName" : "test6565"
  },
  "test011" : {
    "methodSignature" : "boolean isOptimal()",
    "methodName" : "isOptimal",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    int int0 = 2635;\n    ArrayRealVector arrayRealVector0 = new ArrayRealVector(2635);\n    double double0 = 2719.27667650948;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(arrayRealVector0, 2719.27667650948);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 2635);\n    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);\n    simplexTableau0.initializeColumnLabels();\n    linearObjectiveFunction0.getValue((RealVector) arrayRealVector0);\n    arrayRealVector0.append(2719.27667650948);\n    int int1 = 1197;\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, list0, goalType0, true, 67.1, 1197);\n    // Undeclared exception!\n    simplexTableau1.isOptimal();\n}",
    "testName" : "test011"
  },
  "test055" : {
    "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon, final int maxUlps)",
    "methodName" : "SimplexTableau",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-1), (-1), (-2.260957518848075E-281));\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, (-1.0));\n    openMapRealVector0.set((-1945.205331824));\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    LinkedList<Object> linkedList1 = new LinkedList<Object>();\n    linkedList1.add((Object) goalType0);\n    linkedList0.removeAll(linkedList1);\n    SimplexTableau simplexTableau0 = null;\n    simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 1.990680456161499, (-1));\n}",
    "testName" : "test055"
  },
  "test099" : {
    "methodSignature" : "public List<LinearConstraint> normalizeConstraints(Collection<LinearConstraint> originalConstraints)",
    "methodName" : "normalizeConstraints",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    boolean boolean0 = false;\n    double double0 = 1.0;\n    int int0 = 11;\n    double[] doubleArray0 = new double[4];\n    doubleArray0[0] = 0.0;\n    doubleArray0[1] = (double) 11;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = (double) 11;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 11);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 1424.11);\n    Collection<LinearConstraint> collection0 = null;\n    simplexTableau0.normalizeConstraints((Collection<LinearConstraint>) null);\n}",
    "testName" : "test099"
  },
  "test2727" : {
    "methodSignature" : "protected void dropPhase1Objective()",
    "methodName" : "dropPhase1Objective",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    double[] doubleArray0 = new double[23];\n    doubleArray0[0] = 0.0;\n    doubleArray0[1] = 0.0;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = 0.0;\n    doubleArray0[4] = (-3277.2674305406554);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, 1.075991153717041, relationship0, doubleArray0, 257.3306807085107);\n    linkedList0.add(linearConstraint0);\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-5138.939914));\n    simplexTableau0.getSolution();\n    simplexTableau0.getData();\n    simplexTableau0.dropPhase1Objective();\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon)",
    "methodName" : "SimplexTableau",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    double[] doubleArray0 = new double[4];\n    doubleArray0[0] = 6101.397;\n    doubleArray0[1] = (-2151.3);\n    doubleArray0[2] = (-3632.5);\n    doubleArray0[3] = (-3.5813506001861646E-8);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-2151.3));\n    int int0 = (-1);\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-1));\n    LinearObjectiveFunction linearObjectiveFunction1 = new LinearObjectiveFunction(openMapRealVector0, (-3632.5));\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = null;\n    simplexTableau0 = new SimplexTableau(linearObjectiveFunction1, linkedList0, goalType0, true, 379.92880937120833);\n}",
    "testName" : "test1717"
  },
  "test4949" : {
    "methodSignature" : "protected void initializeColumnLabels()",
    "methodName" : "initializeColumnLabels",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4949() throws Throwable {\n    double[] doubleArray0 = new double[1];\n    doubleArray0[0] = (-1.0);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-584.1142103697689));\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0, (-1));\n    simplexTableau0.initializeColumnLabels();\n}",
    "testName" : "test4949"
  },
  "test3939" : {
    "methodSignature" : "protected static double getInvertedCoefficientSum(final RealVector coefficients)",
    "methodName" : "getInvertedCoefficientSum",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3939() throws Throwable {\n    double[] doubleArray0 = new double[8];\n    doubleArray0[0] = (-3263.4302419043483);\n    doubleArray0[1] = 2378.711533;\n    doubleArray0[2] = 3437.94071;\n    doubleArray0[3] = 1559.49072;\n    doubleArray0[4] = 0.0;\n    doubleArray0[5] = 1685.55;\n    doubleArray0[6] = 1.0;\n    doubleArray0[7] = 2176.25;\n    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);\n    SimplexTableau.getInvertedCoefficientSum(arrayRealVector0);\n}",
    "testName" : "test3939"
  },
  "test5959" : {
    "methodSignature" : "protected final double getEntry(final int row, final int column)",
    "methodName" : "getEntry",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5959() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = 4277.09325596068;\n    doubleArray0[1] = (-2742.6564151);\n    doubleArray0[2] = (-1118.61378102298);\n    doubleArray0[3] = 471.587095;\n    doubleArray0[4] = 0.0;\n    doubleArray0[5] = Double.POSITIVE_INFINITY;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 3.141592653589793);\n    simplexTableau0.getEntry(0, (-406));\n}",
    "testName" : "test5959"
  },
  "test2525" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = (-1476.86);\n    doubleArray0[1] = Double.POSITIVE_INFINITY;\n    doubleArray0[2] = (-1476.86);\n    doubleArray0[3] = Double.NaN;\n    doubleArray0[4] = 1151.079702577819;\n    doubleArray0[5] = 633.090522524107;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1490.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) (-1476.86);\n    doubleArray1[1] = (Double) Double.NaN;\n    doubleArray1[2] = (Double) Double.POSITIVE_INFINITY;\n    doubleArray1[3] = (Double) 1151.079702577819;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, Double.NaN, relationship0, openMapRealVector0, 0.0);\n    linkedList0.offerLast(linearConstraint0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 3719.7487517476907);\n    SimplexTableau.getInvertedCoefficientSum(openMapRealVector0);\n    simplexTableau0.getNumObjectiveFunctions();\n    simplexTableau0.equals(doubleArray1[2]);\n    simplexTableau0.getArtificialVariableOffset();\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType1, false, 0.0);\n    simplexTableau0.equals(simplexTableau1);\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = (-1476.86);\n    doubleArray0[1] = Double.POSITIVE_INFINITY;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = Double.NaN;\n    doubleArray0[4] = 1151.079702577819;\n    doubleArray0[5] = 639.098447199516;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1490.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) (-1476.86);\n    doubleArray1[1] = (Double) Double.NaN;\n    doubleArray1[2] = (Double) Double.POSITIVE_INFINITY;\n    doubleArray1[3] = (Double) 1151.079702577819;\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 3719.7487517476907);\n    simplexTableau0.getNumObjectiveFunctions();\n    simplexTableau0.equals(doubleArray1[2]);\n    simplexTableau0.getArtificialVariableOffset();\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType1, false, (double) doubleArray1[1]);\n    simplexTableau0.equals(simplexTableau1);\n}",
    "testName" : "test1515"
  },
  "test4747" : {
    "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon)",
    "methodName" : "SimplexTableau",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4747() throws Throwable {\n    double[] doubleArray0 = new double[1];\n    doubleArray0[0] = (-1318.4864768652458);\n    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, false);\n    SimplexTableau.getInvertedCoefficientSum(arrayRealVector0);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(arrayRealVector0, 242.4038064295051);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = null;\n    simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, (Collection<LinearConstraint>) null, goalType0, true, 1715.691804926);\n}",
    "testName" : "test4747"
  },
  "test3737" : {
    "methodSignature" : "protected final int getWidth()",
    "methodName" : "getWidth",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3737() throws Throwable {\n    double[] doubleArray0 = new double[8];\n    doubleArray0[0] = 913.303534561356;\n    doubleArray0[1] = 416.985275;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = 0.0;\n    doubleArray0[4] = (-1.0);\n    doubleArray0[5] = 0.0;\n    doubleArray0[6] = (-2612.614736);\n    doubleArray0[7] = (-1438.0);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-1438.0));\n    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, list0, goalType0, true, 476.00848, 0);\n    simplexTableau1.getNumArtificialVariables();\n    simplexTableau1.getNumObjectiveFunctions();\n    simplexTableau0.getWidth();\n}",
    "testName" : "test3737"
  },
  "test6969" : {
    "methodSignature" : "protected void subtractRow(final int minuendRow, final int subtrahendRow, final double multiple)",
    "methodName" : "subtractRow",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6969() throws Throwable {\n    double[] doubleArray0 = new double[7];\n    doubleArray0[0] = (-1476.464687214);\n    doubleArray0[1] = 1647.7668589247;\n    doubleArray0[2] = 1.0E-9;\n    doubleArray0[3] = 1780.4812892102034;\n    doubleArray0[4] = 2699.41821805;\n    doubleArray0[5] = (-5636.940604490026);\n    doubleArray0[6] = 0.0;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1687.829146036806);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    Relationship relationship0 = Relationship.LEQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, 0.0, relationship0, doubleArray0, 1.0E-9);\n    linkedList0.addLast(linearConstraint0);\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0, 17);\n    simplexTableau0.subtractRow(17, 546, 0.0);\n}",
    "testName" : "test6969"
  },
  "test7171" : {
    "methodSignature" : "protected final int getSlackVariableOffset()",
    "methodName" : "getSlackVariableOffset",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7171() throws Throwable {\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(10, (-1), 0.0);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 3.141592653589793);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 3.141592653589793);\n    simplexTableau0.getSlackVariableOffset();\n}",
    "testName" : "test7171"
  },
  "test5353" : {
    "methodSignature" : "protected final int getNumArtificialVariables()",
    "methodName" : "getNumArtificialVariables",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5353() throws Throwable {\n    double[] doubleArray0 = new double[7];\n    doubleArray0[0] = 579.96420888413;\n    doubleArray0[1] = 1033.973057;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = 0.0;\n    doubleArray0[4] = (-1241.9298288244);\n    doubleArray0[5] = Double.NaN;\n    doubleArray0[6] = 0.5;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1033.973057);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);\n    simplexTableau0.getNumArtificialVariables();\n}",
    "testName" : "test5353"
  },
  "test7575" : {
    "methodSignature" : "protected RealPointValuePair getSolution()",
    "methodName" : "getSolution",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7575() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[3] = (-1476.86);\n    doubleArray0[1] = (-1476.86);\n    doubleArray0[3] = Double.NaN;\n    doubleArray0[5] = 0.0;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1490.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) 0.0;\n    doubleArray1[1] = (Double) Double.NaN;\n    doubleArray1[2] = (Double) (-1476.86);\n    doubleArray1[3] = (Double) 0.0;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);\n    Relationship relationship0 = Relationship.GEQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, Double.NaN, relationship0, openMapRealVector0, 0.0);\n    linkedList0.offerLast(linearConstraint0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 3719.7487517476907);\n    SimplexTableau.getInvertedCoefficientSum(openMapRealVector0);\n    simplexTableau0.getArtificialVariableOffset();\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    linkedList0.add(linearConstraint0);\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType1, false, 0.0);\n    simplexTableau0.equals(simplexTableau1);\n    simplexTableau0.dropPhase1Objective();\n    simplexTableau0.getSolution();\n}",
    "testName" : "test7575"
  },
  "test4141" : {
    "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon, final int maxUlps)",
    "methodName" : "SimplexTableau",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4141() throws Throwable {\n    double[] doubleArray0 = new double[2];\n    doubleArray0[0] = 0.0;\n    doubleArray0[1] = (-4091.30585795025);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-4091.30585795025));\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, (-4091.30585795025), relationship0, doubleArray0, 1.0E-12);\n    linkedList0.add(linearConstraint0);\n    ArrayRealVector arrayRealVector0 = new ArrayRealVector(31);\n    Relationship relationship1 = Relationship.LEQ;\n    LinearConstraint linearConstraint1 = new LinearConstraint(arrayRealVector0, 0.0, relationship1, arrayRealVector0, 1285.039736);\n    linkedList0.add(linearConstraint1);\n    Relationship relationship2 = Relationship.EQ;\n    LinearConstraint linearConstraint2 = new LinearConstraint(arrayRealVector0, 2048.68712176, relationship2, arrayRealVector0, (-1446.6029898018262));\n    linkedList0.add(linearConstraint2);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = null;\n    simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0, 3594);\n}",
    "testName" : "test4141"
  },
  "test6363" : {
    "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon, final int maxUlps)",
    "methodName" : "SimplexTableau",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6363() throws Throwable {\n    double[] doubleArray0 = new double[0];\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-2041.233835653));\n    GoalType goalType0 = GoalType.MINIMIZE;\n    int int0 = 0;\n    SimplexTableau simplexTableau0 = null;\n    simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, (Collection<LinearConstraint>) null, goalType0, false, Double.POSITIVE_INFINITY, 0);\n}",
    "testName" : "test6363"
  },
  "test3131" : {
    "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon)",
    "methodName" : "SimplexTableau",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    double[] doubleArray0 = new double[2];\n    doubleArray0[0] = 41.03164;\n    doubleArray0[1] = (-128.8756131);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-128.8756131));\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    boolean boolean0 = false;\n    Double[] doubleArray1 = new Double[8];\n    doubleArray1[0] = (Double) (-128.8756131);\n    doubleArray1[1] = (Double) (-128.8756131);\n    doubleArray1[2] = (Double) 41.03164;\n    doubleArray1[3] = (Double) (-128.8756131);\n    doubleArray1[4] = (Double) 41.03164;\n    doubleArray1[5] = (Double) 41.03164;\n    doubleArray1[6] = (Double) (-128.8756131);\n    doubleArray1[7] = (Double) (-128.8756131);\n    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray1);\n    ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, arrayRealVector0);\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector1);\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, (double) doubleArray1[4], relationship0, arrayRealVector1, (-1.0));\n    linkedList0.add(linearConstraint0);\n    SimplexTableau simplexTableau0 = null;\n    simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-128.8756131));\n}",
    "testName" : "test3131"
  },
  "test5151" : {
    "methodSignature" : "protected void subtractRow(final int minuendRow, final int subtrahendRow, final double multiple)",
    "methodName" : "subtractRow",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5151() throws Throwable {\n    double[] doubleArray0 = new double[7];\n    doubleArray0[0] = 119.363;\n    doubleArray0[1] = 1.0E-12;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = Double.NEGATIVE_INFINITY;\n    doubleArray0[4] = 249.23235454789;\n    doubleArray0[5] = 178.1313857385658;\n    doubleArray0[6] = 0.0;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 249.23235454789);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 178.1313857385658);\n    simplexTableau0.subtractRow(1110, 0, 1.0);\n}",
    "testName" : "test5151"
  },
  "test7373" : {
    "methodSignature" : "SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon)",
    "methodName" : "SimplexTableau",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7373() throws Throwable {\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = null;\n    simplexTableau0 = new SimplexTableau((LinearObjectiveFunction) null, linkedList0, goalType0, false, (-2142.80194));\n}",
    "testName" : "test7373"
  },
  "test8187" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8187() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[1] = Double.POSITIVE_INFINITY;\n    doubleArray0[2] = (-15.047511983814928);\n    doubleArray0[3] = Double.NaN;\n    doubleArray0[5] = 639.098447199516;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1490.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 3719.7487517476907);\n    simplexTableau0.getNumObjectiveFunctions();\n    boolean boolean0 = simplexTableau0.equals(639.098447199516);\n    simplexTableau0.getArtificialVariableOffset();\n    boolean boolean1 = simplexTableau0.equals(simplexTableau0);\n}",
    "testName" : "test8187"
  },
  "test6161" : {
    "methodSignature" : "protected Integer getBasicRow(final int col)",
    "methodName" : "getBasicRow",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6161() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = 0.0;\n    double double0 = 0.0;\n    doubleArray0[1] = 0.0;\n    doubleArray0[2] = 1934.74176663;\n    doubleArray0[3] = 0.0;\n    doubleArray0[4] = 2112.1677119392566;\n    doubleArray0[5] = 0.0;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 1.0, (-1500));\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, 0.0, relationship0, doubleArray0, 0.0);\n    linkedList0.add(linearConstraint0);\n    simplexTableau0.normalizeConstraints(linkedList0);\n    int int0 = 3859;\n    simplexTableau0.getBasicRow(3859);\n}",
    "testName" : "test6161"
  },
  "test7985" : {
    "methodSignature" : "protected void divideRow(final int dividendRow, final double divisor)",
    "methodName" : "divideRow",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7985() throws Throwable {\n    double[] doubleArray0 = new double[13];\n    doubleArray0[0] = (-1476.86);\n    doubleArray0[1] = (-1476.86);\n    doubleArray0[4] = 1151.079702577819;\n    doubleArray0[1] = (-1476.86);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1490.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) (-1476.86);\n    doubleArray1[1] = (Double) 0.0;\n    doubleArray0[1] = (-1476.86);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (double) doubleArray1[1]);\n    simplexTableau0.getNumObjectiveFunctions();\n    simplexTableau0.equals(doubleArray1[2]);\n    simplexTableau0.getArtificialVariableOffset();\n    GoalType goalType1 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType1, false, (double) doubleArray1[1]);\n    simplexTableau1.isOptimal();\n    simplexTableau0.equals(simplexTableau1);\n    simplexTableau1.getNumArtificialVariables();\n    simplexTableau0.divideRow(1203, (-1476.86));\n}",
    "testName" : "test7985"
  },
  "test000" : {
    "methodSignature" : "protected RealPointValuePair getSolution()",
    "methodName" : "getSolution",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[3] = (-1476.86);\n    doubleArray0[1] = (-1476.86);\n    doubleArray0[3] = Double.NaN;\n    doubleArray0[5] = (-1476.86);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1490.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) 0.0;\n    doubleArray1[1] = (Double) Double.NaN;\n    doubleArray1[2] = (Double) (-1476.86);\n    doubleArray1[3] = doubleArray1[1];\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);\n    Relationship relationship0 = Relationship.GEQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, Double.NaN, relationship0, openMapRealVector0, 0.0);\n    linkedList0.offerLast(linearConstraint0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 1151.079702577819);\n    SimplexTableau.getInvertedCoefficientSum(openMapRealVector0);\n    simplexTableau0.getArtificialVariableOffset();\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    linkedList0.add(linearConstraint0);\n    simplexTableau0.initializeColumnLabels();\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType1, false, 0.0);\n    simplexTableau0.equals(simplexTableau1);\n    simplexTableau0.dropPhase1Objective();\n    simplexTableau0.getSolution();\n}",
    "testName" : "test000"
  },
  "test044" : {
    "methodSignature" : "protected RealPointValuePair getSolution()",
    "methodName" : "getSolution",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    double[] doubleArray0 = new double[7];\n    doubleArray0[0] = 1.0;\n    doubleArray0[1] = (-975.73314);\n    doubleArray0[2] = 942.97;\n    doubleArray0[3] = (-1.0);\n    doubleArray0[4] = 0.0;\n    doubleArray0[5] = (-1.0);\n    doubleArray0[6] = 58.0547673;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, true);\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(arrayRealVector0, relationship0, (-975.73314));\n    linkedList0.add(linearConstraint0);\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0, 0);\n    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);\n    GoalType goalType1 = GoalType.MINIMIZE;\n    simplexTableau0.getOriginalNumDecisionVariables();\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, list0, goalType1, false, (-2780.06341805081));\n    simplexTableau1.getSolution();\n}",
    "testName" : "test044"
  },
  "test088" : {
    "methodSignature" : "protected void dropPhase1Objective()",
    "methodName" : "dropPhase1Objective",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    ArrayRealVector arrayRealVector0 = new ArrayRealVector(2518);\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, (-1489.35189910372));\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    Relationship relationship0 = Relationship.LEQ;\n    linkedList0.pollLast();\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, relationship0, (-1489.35189910372));\n    linkedList0.addFirst(linearConstraint0);\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 2518);\n    simplexTableau0.divideRow(1, 193.3297565);\n    simplexTableau0.getHeight();\n    // Undeclared exception!\n    simplexTableau0.dropPhase1Objective();\n}",
    "testName" : "test088"
  },
  "test8390" : {
    "methodSignature" : "protected final void setEntry(final int row, final int column, final double value)",
    "methodName" : "setEntry",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8390() throws Throwable {\n    double[] doubleArray0 = new double[3];\n    doubleArray0[1] = (-790.66);\n    double double0 = 1424.11;\n    doubleArray0[2] = 1424.11;\n    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);\n    ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, false);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(arrayRealVector1, 1.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    int int0 = 11;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-790.66), 11);\n    simplexTableau0.setEntry(20, 20, (-790.66));\n}",
    "testName" : "test8390"
  },
  "test2929" : {
    "methodSignature" : "protected RealMatrix createTableau(final boolean maximize)",
    "methodName" : "createTableau",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    double[] doubleArray0 = new double[0];\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, 0.0);\n    linkedList0.add(linearConstraint0);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    linkedList0.add(linearConstraint0);\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0.0);\n    linearObjectiveFunction0.getValue(doubleArray0);\n    simplexTableau0.getHeight();\n    simplexTableau0.getNumDecisionVariables();\n    LinkedList<LinearConstraint> linkedList1 = new LinkedList<LinearConstraint>();\n    linkedList1.spliterator();\n    linkedList0.addAll(0, (Collection<? extends LinearConstraint>) linkedList1);\n    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);\n    linkedList0.add(linearConstraint0);\n    simplexTableau0.getOriginalNumDecisionVariables();\n    simplexTableau0.getSolution();\n    simplexTableau0.getNumSlackVariables();\n    simplexTableau0.divideRow(0, 2631.35832);\n    simplexTableau0.createTableau(false);\n    simplexTableau0.dropPhase1Objective();\n    simplexTableau0.isOptimal();\n    simplexTableau0.isOptimal();\n    linkedList1.add(linearConstraint0);\n    simplexTableau0.subtractRow(0, 0, 0);\n    simplexTableau0.getNumDecisionVariables();\n    linkedList1.addAll((Collection<? extends LinearConstraint>) list0);\n    simplexTableau0.normalizeConstraints(linkedList1);\n    simplexTableau0.hashCode();\n    simplexTableau0.dropPhase1Objective();\n    simplexTableau0.isOptimal();\n    simplexTableau0.isOptimal();\n    simplexTableau0.createTableau(true);\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "protected void subtractRow(final int minuendRow, final int subtrahendRow, final double multiple)",
    "methodName" : "subtractRow",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray0 = new Double[5];\n    Double double0 = new Double(0.0);\n    doubleArray0[0] = double0;\n    Double double1 = new Double(1.0);\n    doubleArray0[1] = double1;\n    Double double2 = new Double(0);\n    doubleArray0[2] = double2;\n    Double.isFinite(1.0);\n    Double double3 = new Double(0.0);\n    doubleArray0[3] = double3;\n    Double double4 = new Double(1695.062136499728);\n    doubleArray0[4] = double4;\n    Double.isFinite((double) doubleArray0[4]);\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);\n    SimplexTableau.getInvertedCoefficientSum(openMapRealVector0);\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, (double) doubleArray0[0]);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 1695.062136499728, 1976);\n    simplexTableau0.subtractRow(0, 1976, 2707.873502311258);\n}",
    "testName" : "test1919"
  },
  "test7781" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7781() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[1] = 0.0;\n    doubleArray0[0] = Double.NaN;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) Double.NaN;\n    doubleArray1[1] = (Double) 0.0;\n    doubleArray1[2] = (Double) 0.0;\n    doubleArray1[3] = (Double) 0.0;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, 0.0, relationship0, openMapRealVector0, 0.0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 3719.7487517476907);\n    double double0 = SimplexTableau.getInvertedCoefficientSum(openMapRealVector0);\n    simplexTableau0.getNumObjectiveFunctions();\n    int int0 = simplexTableau0.getArtificialVariableOffset();\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    linkedList0.add(linearConstraint0);\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType1, false, 0.0);\n    RealMatrix realMatrix0 = simplexTableau1.createTableau(false);\n    boolean boolean0 = simplexTableau0.equals(simplexTableau1);\n    simplexTableau0.dropPhase1Objective();\n    simplexTableau0.getSolution();\n    simplexTableau0.equals((Object) simplexTableau1);\n}",
    "testName" : "test7781"
  },
  "test7780" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7780() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[1] = 0.0;\n    doubleArray0[0] = Double.NaN;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    Double[] doubleArray1 = new Double[4];\n    doubleArray1[0] = (Double) Double.NaN;\n    doubleArray1[1] = (Double) 0.0;\n    doubleArray1[2] = (Double) 0.0;\n    doubleArray1[3] = (Double) 0.0;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray1);\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, 0.0, relationship0, openMapRealVector0, 0.0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 3719.7487517476907);\n    double double0 = SimplexTableau.getInvertedCoefficientSum(openMapRealVector0);\n    simplexTableau0.getNumObjectiveFunctions();\n    int int0 = simplexTableau0.getArtificialVariableOffset();\n    GoalType goalType1 = GoalType.MAXIMIZE;\n    linkedList0.add(linearConstraint0);\n    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType1, false, 0.0);\n    RealMatrix realMatrix0 = simplexTableau1.createTableau(false);\n    boolean boolean0 = simplexTableau0.equals(simplexTableau1);\n}",
    "testName" : "test7780"
  },
  "test8594" : {
    "methodSignature" : "boolean isOptimal()",
    "methodName" : "isOptimal",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8594() throws Throwable {\n    double[] doubleArray0 = new double[4];\n    doubleArray0[1] = 583.983576;\n    doubleArray0[3] = 0.0;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, 583.983576, relationship0, openMapRealVector0, 0.0);\n    linkedList0.add(linearConstraint0);\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-5138.939914));\n    RealPointValuePair realPointValuePair0 = simplexTableau0.getSolution();\n    double[][] doubleArray1 = simplexTableau0.getData();\n    boolean boolean0 = simplexTableau0.isOptimal();\n}",
    "testName" : "test8594"
  },
  "test8593" : {
    "methodSignature" : "protected final double[][] getData()",
    "methodName" : "getData",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8593() throws Throwable {\n    double[] doubleArray0 = new double[4];\n    doubleArray0[1] = 583.983576;\n    doubleArray0[3] = 0.0;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, 583.983576, relationship0, openMapRealVector0, 0.0);\n    linkedList0.add(linearConstraint0);\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-5138.939914));\n    RealPointValuePair realPointValuePair0 = simplexTableau0.getSolution();\n    double[][] doubleArray1 = simplexTableau0.getData();\n}",
    "testName" : "test8593"
  },
  "test8592" : {
    "methodSignature" : "public double getValue()",
    "methodName" : "getValue",
    "className" : "org.apache.commons.math.optimization.linear.SimplexTableau",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8592() throws Throwable {\n    double[] doubleArray0 = new double[4];\n    doubleArray0[1] = 583.983576;\n    doubleArray0[3] = 0.0;\n    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);\n    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();\n    Relationship relationship0 = Relationship.EQ;\n    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, 583.983576, relationship0, openMapRealVector0, 0.0);\n    linkedList0.add(linearConstraint0);\n    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-5138.939914));\n    RealPointValuePair realPointValuePair0 = simplexTableau0.getSolution();\n    realPointValuePair0.getValue();\n}",
    "testName" : "test8592"
  }
}