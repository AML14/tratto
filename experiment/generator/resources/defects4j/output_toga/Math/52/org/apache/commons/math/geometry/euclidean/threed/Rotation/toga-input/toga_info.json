{
  "test35111" : {
    "methodSignature" : "public Rotation(RotationOrder order, double alpha1, double alpha2, double alpha3)",
    "methodName" : "Rotation",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35111() throws Throwable {\n    Rotation rotation0 = null;\n    rotation0 = new Rotation((RotationOrder) null, 954.43669182405, (-1757.22622), 0.0);\n}",
    "testName" : "test35111"
  },
  "test57140" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test57140() throws Throwable {\n    Vector3D vector3D0 = Vector3D.POSITIVE_INFINITY;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);\n    RotationOrder rotationOrder0 = RotationOrder.ZYX;\n    double[] doubleArray0 = rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test57140"
  },
  "test79176" : {
    "methodSignature" : "public Rotation(Vector3D u1, Vector3D u2, Vector3D v1, Vector3D v2)",
    "methodName" : "Rotation",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test79176() throws Throwable {\n    Vector3D vector3D0 = new Vector3D(0.0, 0.3333333134651184, 0.3333333134651184);\n    Vector3D vector3D1 = Vector3D.crossProduct(vector3D0, vector3D0);\n    Rotation rotation0 = null;\n    rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D1);\n}",
    "testName" : "test79176"
  },
  "test63146" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test63146() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    RotationOrder rotationOrder0 = RotationOrder.YZX;\n    double[] doubleArray0 = rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test63146"
  },
  "test24100" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test24100() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 519.975675, 0.0, false);\n    Rotation rotation1 = new Rotation(0.0, 3904.77, 0.0, 0.0, true);\n    Rotation rotation2 = rotation0.IDENTITY.applyInverseTo(rotation1);\n    double double0 = Rotation.distance(rotation0, rotation2);\n    rotation0.getQ2();\n}",
    "testName" : "test24100"
  },
  "test46127" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46127() throws Throwable {\n    Vector3D vector3D0 = Vector3D.PLUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);\n    RotationOrder rotationOrder0 = RotationOrder.YZY;\n    double[] doubleArray0 = rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test46127"
  },
  "test85183" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test85183() throws Throwable {\n    Vector3D vector3D0 = new Vector3D(0.0, 0.03492798088037815, 0.03492798088037815);\n    Rotation rotation0 = new Rotation(vector3D0, (-1852.3083));\n    double[][] doubleArray0 = rotation0.getMatrix();\n    Rotation rotation1 = new Rotation(doubleArray0, 0.0);\n    rotation1.getQ3();\n}",
    "testName" : "test85183"
  },
  "test94206" : {
    "methodSignature" : "public static double distance(Rotation r1, Rotation r2)",
    "methodName" : "distance",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test94206() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    Rotation.distance(rotation0, rotation0);\n}",
    "testName" : "test94206"
  },
  "test85182" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test85182() throws Throwable {\n    Vector3D vector3D0 = new Vector3D(0.0, 0.03492798088037815, 0.03492798088037815);\n    Rotation rotation0 = new Rotation(vector3D0, (-1852.3083));\n    double[][] doubleArray0 = rotation0.getMatrix();\n    Rotation rotation1 = new Rotation(doubleArray0, 0.0);\n    rotation0.getQ3();\n}",
    "testName" : "test85182"
  },
  "test85184" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test85184() throws Throwable {\n    Vector3D vector3D0 = new Vector3D(0.0, 0.03492798088037815, 0.03492798088037815);\n    Rotation rotation0 = new Rotation(vector3D0, (-1852.3083));\n    double[][] doubleArray0 = rotation0.getMatrix();\n    Rotation rotation1 = new Rotation(doubleArray0, 0.0);\n    rotation0.getQ2();\n}",
    "testName" : "test85184"
  },
  "test1461" : {
    "methodSignature" : "public double getNormInf()",
    "methodName" : "getNormInf",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1461() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    Vector3D vector3D0 = Vector3D.NEGATIVE_INFINITY;\n    Vector3D vector3D1 = rotation0.applyTo(vector3D0);\n    vector3D1.getNormInf();\n}",
    "testName" : "test1461"
  },
  "test90194" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test90194() throws Throwable {\n    Vector3D vector3D0 = Vector3D.NaN;\n    Rotation rotation0 = new Rotation(vector3D0, (-239.2149974796));\n    double double0 = rotation0.getQ0();\n}",
    "testName" : "test90194"
  },
  "test74167" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test74167() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.ZXY;\n    Vector3D vector3D0 = rotationOrder0.getA3();\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);\n    double double0 = rotation0.IDENTITY.getAngle();\n    rotation0.getQ3();\n}",
    "testName" : "test74167"
  },
  "test30106" : {
    "methodSignature" : "public Rotation(double[][] m, double threshold) throws NotARotationMatrixException",
    "methodName" : "Rotation",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test30106() throws Throwable {\n    Rotation rotation0 = null;\n    rotation0 = new Rotation((double[][]) null, 103.0);\n}",
    "testName" : "test30106"
  },
  "test74166" : {
    "methodSignature" : "public double getAngle()",
    "methodName" : "getAngle",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test74166() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.ZXY;\n    Vector3D vector3D0 = rotationOrder0.getA3();\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);\n    double double0 = rotation0.IDENTITY.getAngle();\n}",
    "testName" : "test74166"
  },
  "test1357" : {
    "methodSignature" : "public double getX()",
    "methodName" : "getX",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1357() throws Throwable {\n    Rotation rotation0 = new Rotation((-1035.56568471797), 3042.9316100441, (-2240.1263698), (-2240.1263698), true);\n    Vector3D vector3D0 = rotation0.getAxis();\n    vector3D0.getX();\n}",
    "testName" : "test1357"
  },
  "test1358" : {
    "methodSignature" : "public double getZ()",
    "methodName" : "getZ",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1358() throws Throwable {\n    Rotation rotation0 = new Rotation((-1035.56568471797), 3042.9316100441, (-2240.1263698), (-2240.1263698), true);\n    Vector3D vector3D0 = rotation0.getAxis();\n    vector3D0.getZ();\n}",
    "testName" : "test1358"
  },
  "test0945" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0945() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.ZXY;\n    Rotation rotation0 = new Rotation(rotationOrder0, 0.0, (-0.19), 0.0);\n    double double0 = rotation0.getQ1();\n    rotation0.getQ0();\n}",
    "testName" : "test0945"
  },
  "test1359" : {
    "methodSignature" : "public double getY()",
    "methodName" : "getY",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1359() throws Throwable {\n    Rotation rotation0 = new Rotation((-1035.56568471797), 3042.9316100441, (-2240.1263698), (-2240.1263698), true);\n    Vector3D vector3D0 = rotation0.getAxis();\n    vector3D0.getY();\n}",
    "testName" : "test1359"
  },
  "test0942" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0942() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.ZXY;\n    Rotation rotation0 = new Rotation(rotationOrder0, 0.0, (-0.19), 0.0);\n    double double0 = rotation0.getQ1();\n}",
    "testName" : "test0942"
  },
  "test0943" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0943() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.ZXY;\n    Rotation rotation0 = new Rotation(rotationOrder0, 0.0, (-0.19), 0.0);\n    double double0 = rotation0.getQ1();\n    rotation0.getQ2();\n}",
    "testName" : "test0943"
  },
  "test0944" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0944() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.ZXY;\n    Rotation rotation0 = new Rotation(rotationOrder0, 0.0, (-0.19), 0.0);\n    double double0 = rotation0.getQ1();\n    rotation0.getQ3();\n}",
    "testName" : "test0944"
  },
  "test73165" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test73165() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    RotationOrder rotationOrder0 = RotationOrder.YZX;\n    Vector3D vector3D0 = rotationOrder0.getA2();\n    Rotation rotation1 = new Rotation(vector3D0, 3295.4179865744);\n    Rotation rotation2 = rotation1.applyInverseTo(rotation0);\n    Rotation rotation3 = rotation2.applyTo(rotation0);\n    double double0 = rotation3.getAngle();\n    rotation1.getQ1();\n}",
    "testName" : "test73165"
  },
  "test73163" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test73163() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    RotationOrder rotationOrder0 = RotationOrder.YZX;\n    Vector3D vector3D0 = rotationOrder0.getA2();\n    Rotation rotation1 = new Rotation(vector3D0, 3295.4179865744);\n    Rotation rotation2 = rotation1.applyInverseTo(rotation0);\n    Rotation rotation3 = rotation2.applyTo(rotation0);\n    double double0 = rotation3.getAngle();\n    rotation3.getQ3();\n}",
    "testName" : "test73163"
  },
  "test73164" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test73164() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    RotationOrder rotationOrder0 = RotationOrder.YZX;\n    Vector3D vector3D0 = rotationOrder0.getA2();\n    Rotation rotation1 = new Rotation(vector3D0, 3295.4179865744);\n    Rotation rotation2 = rotation1.applyInverseTo(rotation0);\n    Rotation rotation3 = rotation2.applyTo(rotation0);\n    double double0 = rotation3.getAngle();\n    rotation2.getQ3();\n}",
    "testName" : "test73164"
  },
  "test36114" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36114() throws Throwable {\n    Rotation rotation0 = new Rotation((-877.0), (-877.0), (-877.0), (-877.0), true);\n    double double0 = rotation0.getAngle();\n    rotation0.getQ3();\n}",
    "testName" : "test36114"
  },
  "test36113" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36113() throws Throwable {\n    Rotation rotation0 = new Rotation((-877.0), (-877.0), (-877.0), (-877.0), true);\n    double double0 = rotation0.getAngle();\n    rotation0.getQ1();\n}",
    "testName" : "test36113"
  },
  "test36112" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36112() throws Throwable {\n    Rotation rotation0 = new Rotation((-877.0), (-877.0), (-877.0), (-877.0), true);\n    double double0 = rotation0.getAngle();\n    rotation0.getQ0();\n}",
    "testName" : "test36112"
  },
  "test41122" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test41122() throws Throwable {\n    Vector3D vector3D0 = new Vector3D(0.0, 0.03492798088037815, 0.03492798088037815);\n    Rotation rotation0 = new Rotation(vector3D0, (-1852.3083));\n    RotationOrder rotationOrder0 = RotationOrder.ZXZ;\n    rotation0.IDENTITY.getAngles(rotationOrder0);\n}",
    "testName" : "test41122"
  },
  "test0838" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0838() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, (-692.60412), (-692.60412), true);\n    double double0 = rotation0.getQ2();\n    rotation0.getQ1();\n}",
    "testName" : "test0838"
  },
  "test25101" : {
    "methodSignature" : "public static double distance(Rotation r1, Rotation r2)",
    "methodName" : "distance",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test25101() throws Throwable {\n    Rotation.distance((Rotation) null, (Rotation) null);\n}",
    "testName" : "test25101"
  },
  "test68152" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test68152() throws Throwable {\n    Rotation rotation0 = new Rotation((-1499.4005), (-1499.4005), 0.0, 0.11764700710773468, false);\n    RotationOrder rotationOrder0 = RotationOrder.XZY;\n    rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test68152"
  },
  "test89192" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test89192() throws Throwable {\n    Vector3D vector3D0 = Vector3D.NaN;\n    Rotation rotation0 = new Rotation(vector3D0, (-239.2149974796));\n    RotationOrder rotationOrder0 = RotationOrder.XYZ;\n    double[] doubleArray0 = rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test89192"
  },
  "test93201" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test93201() throws Throwable {\n    Rotation rotation0 = new Rotation(1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, false);\n    Rotation rotation1 = rotation0.IDENTITY.revert();\n    rotation1.getQ3();\n}",
    "testName" : "test93201"
  },
  "test93204" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test93204() throws Throwable {\n    Rotation rotation0 = new Rotation(1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, false);\n    Rotation rotation1 = rotation0.IDENTITY.revert();\n    rotation1.getQ1();\n}",
    "testName" : "test93204"
  },
  "test84181" : {
    "methodSignature" : "public Rotation(double[][] m, double threshold) throws NotARotationMatrixException",
    "methodName" : "Rotation",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test84181() throws Throwable {\n    double[][] doubleArray0 = new double[3][4];\n    Rotation rotation0 = null;\n    rotation0 = new Rotation(doubleArray0, (-1091.2336470071473));\n}",
    "testName" : "test84181"
  },
  "test93205" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test93205() throws Throwable {\n    Rotation rotation0 = new Rotation(1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, false);\n    Rotation rotation1 = rotation0.IDENTITY.revert();\n    rotation1.getQ2();\n}",
    "testName" : "test93205"
  },
  "test1360" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1360() throws Throwable {\n    Rotation rotation0 = new Rotation((-1035.56568471797), 3042.9316100441, (-2240.1263698), (-2240.1263698), true);\n    Vector3D vector3D0 = rotation0.getAxis();\n    rotation0.getQ0();\n}",
    "testName" : "test1360"
  },
  "test93202" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test93202() throws Throwable {\n    Rotation rotation0 = new Rotation(1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, false);\n    Rotation rotation1 = rotation0.IDENTITY.revert();\n    rotation0.getQ3();\n}",
    "testName" : "test93202"
  },
  "test93203" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test93203() throws Throwable {\n    Rotation rotation0 = new Rotation(1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, false);\n    Rotation rotation1 = rotation0.IDENTITY.revert();\n    rotation1.getQ0();\n}",
    "testName" : "test93203"
  },
  "test52135" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test52135() throws Throwable {\n    Vector3D vector3D0 = Vector3D.NaN;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    RotationOrder rotationOrder0 = RotationOrder.XYX;\n    double[] doubleArray0 = rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test52135"
  },
  "test89193" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test89193() throws Throwable {\n    Vector3D vector3D0 = Vector3D.NaN;\n    Rotation rotation0 = new Rotation(vector3D0, (-239.2149974796));\n    RotationOrder rotationOrder0 = RotationOrder.XYZ;\n    double[] doubleArray0 = rotation0.getAngles(rotationOrder0);\n    rotation0.getQ0();\n}",
    "testName" : "test89193"
  },
  "test0321" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0321() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 519.975675, 0.0, false);\n    Rotation rotation1 = rotation0.revert();\n    rotation0.getQ1();\n}",
    "testName" : "test0321"
  },
  "test1773" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1773() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, (-5460.4), (-1.0), false);\n    Vector3D vector3D0 = new Vector3D(0.0, 0.0, (-1.0));\n    Vector3D vector3D1 = Vector3D.crossProduct(vector3D0, vector3D0);\n    Vector3D vector3D2 = rotation0.applyTo(vector3D1);\n    rotation0.getQ3();\n}",
    "testName" : "test1773"
  },
  "test0322" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0322() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 519.975675, 0.0, false);\n    Rotation rotation1 = rotation0.revert();\n    rotation1.getQ2();\n}",
    "testName" : "test0322"
  },
  "test0323" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0323() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 519.975675, 0.0, false);\n    Rotation rotation1 = rotation0.revert();\n    rotation1.getQ0();\n}",
    "testName" : "test0323"
  },
  "test0324" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0324() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 519.975675, 0.0, false);\n    Rotation rotation1 = rotation0.revert();\n    rotation1.getQ1();\n}",
    "testName" : "test0324"
  },
  "test81178" : {
    "methodSignature" : "public Rotation(Vector3D u1, Vector3D u2, Vector3D v1, Vector3D v2)",
    "methodName" : "Rotation",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test81178() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_I;\n    Vector3D vector3D1 = vector3D0.subtract((Vector<Euclidean3D>) vector3D0);\n    Rotation rotation0 = null;\n    rotation0 = new Rotation(vector3D0, vector3D1, vector3D0, vector3D0);\n}",
    "testName" : "test81178"
  },
  "test1770" : {
    "methodSignature" : "public double getNormInf()",
    "methodName" : "getNormInf",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1770() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, (-5460.4), (-1.0), false);\n    Vector3D vector3D0 = new Vector3D(0.0, 0.0, (-1.0));\n    Vector3D vector3D1 = Vector3D.crossProduct(vector3D0, vector3D0);\n    Vector3D vector3D2 = rotation0.applyTo(vector3D1);\n    vector3D2.getNormInf();\n}",
    "testName" : "test1770"
  },
  "test1771" : {
    "methodSignature" : "public double getY()",
    "methodName" : "getY",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1771() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, (-5460.4), (-1.0), false);\n    Vector3D vector3D0 = new Vector3D(0.0, 0.0, (-1.0));\n    Vector3D vector3D1 = Vector3D.crossProduct(vector3D0, vector3D0);\n    Vector3D vector3D2 = rotation0.applyTo(vector3D1);\n    vector3D2.getY();\n}",
    "testName" : "test1771"
  },
  "test0320" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0320() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 519.975675, 0.0, false);\n    Rotation rotation1 = rotation0.revert();\n    rotation0.getQ0();\n}",
    "testName" : "test0320"
  },
  "test1772" : {
    "methodSignature" : "public double getZ()",
    "methodName" : "getZ",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1772() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, (-5460.4), (-1.0), false);\n    Vector3D vector3D0 = new Vector3D(0.0, 0.0, (-1.0));\n    Vector3D vector3D1 = Vector3D.crossProduct(vector3D0, vector3D0);\n    Vector3D vector3D2 = rotation0.applyTo(vector3D1);\n    vector3D2.getZ();\n}",
    "testName" : "test1772"
  },
  "test42123" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test42123() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.ZXZ;\n    Rotation rotation0 = new Rotation(0.0, 0.16666666666745392, (-0.4714044926931317), 0.0, false);\n    rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test42123"
  },
  "test70154" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test70154() throws Throwable {\n    Rotation rotation0 = new Rotation((-2634.3122), 0.5, 15.0, (-2634.3122), false);\n    RotationOrder rotationOrder0 = RotationOrder.XYZ;\n    rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test70154"
  },
  "test75168" : {
    "methodSignature" : "public double getNormInf()",
    "methodName" : "getNormInf",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test75168() throws Throwable {\n    Vector3D vector3D0 = new Vector3D((-0.1), (-2491.731326436284));\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);\n    Vector3D vector3D1 = rotation0.getAxis();\n    vector3D1.getNormInf();\n}",
    "testName" : "test75168"
  },
  "test31107" : {
    "methodSignature" : "public Rotation(double[][] m, double threshold) throws NotARotationMatrixException",
    "methodName" : "Rotation",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test31107() throws Throwable {\n    double[][] doubleArray0 = new double[0][4];\n    Rotation rotation0 = null;\n    rotation0 = new Rotation(doubleArray0, 0.09090909090909091);\n}",
    "testName" : "test31107"
  },
  "test2184" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2184() throws Throwable {\n    Rotation rotation0 = new Rotation(1.0, 1.0, 1.0, (-1485.899928), false);\n    Vector3D vector3D0 = new Vector3D(1.0, (-1485.899928));\n    Vector3D vector3D1 = rotation0.IDENTITY.applyInverseTo(vector3D0);\n    vector3D1.equals((Object) vector3D0);\n}",
    "testName" : "test2184"
  },
  "test2183" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2183() throws Throwable {\n    Rotation rotation0 = new Rotation(1.0, 1.0, 1.0, (-1485.899928), false);\n    Vector3D vector3D0 = new Vector3D(1.0, (-1485.899928));\n    Vector3D vector3D1 = rotation0.IDENTITY.applyInverseTo(vector3D0);\n    rotation0.getQ1();\n}",
    "testName" : "test2183"
  },
  "test36116" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36116() throws Throwable {\n    Rotation rotation0 = new Rotation((-877.0), (-877.0), (-877.0), (-877.0), true);\n    double double0 = rotation0.getAngle();\n    rotation0.getQ2();\n}",
    "testName" : "test36116"
  },
  "test53136" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test53136() throws Throwable {\n    Rotation rotation0 = new Rotation(1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, false);\n    RotationOrder rotationOrder0 = RotationOrder.XYX;\n    rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test53136"
  },
  "test36115" : {
    "methodSignature" : "public double getAngle()",
    "methodName" : "getAngle",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36115() throws Throwable {\n    Rotation rotation0 = new Rotation((-877.0), (-877.0), (-877.0), (-877.0), true);\n    double double0 = rotation0.getAngle();\n}",
    "testName" : "test36115"
  },
  "test0211" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0211() throws Throwable {\n    Rotation rotation0 = new Rotation((-877.0), (-877.0), (-877.0), (-877.0), true);\n    Rotation rotation1 = rotation0.revert();\n    rotation1.getQ3();\n}",
    "testName" : "test0211"
  },
  "test1663" : {
    "methodSignature" : "public double getNorm1()",
    "methodName" : "getNorm1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1663() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.YZX;\n    Rotation rotation0 = new Rotation(rotationOrder0, (-823.349531201697), (-823.349531201697), (-3448.3189439421385));\n    Rotation rotation1 = rotation0.revert();\n    Vector3D vector3D0 = rotation1.getAxis();\n    Vector3D vector3D1 = rotation1.IDENTITY.applyTo(vector3D0);\n    vector3D1.getNorm1();\n}",
    "testName" : "test1663"
  },
  "test0212" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0212() throws Throwable {\n    Rotation rotation0 = new Rotation((-877.0), (-877.0), (-877.0), (-877.0), true);\n    Rotation rotation1 = rotation0.revert();\n    rotation0.getQ2();\n}",
    "testName" : "test0212"
  },
  "test1664" : {
    "methodSignature" : "public double getY()",
    "methodName" : "getY",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1664() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.YZX;\n    Rotation rotation0 = new Rotation(rotationOrder0, (-823.349531201697), (-823.349531201697), (-3448.3189439421385));\n    Rotation rotation1 = rotation0.revert();\n    Vector3D vector3D0 = rotation1.getAxis();\n    Vector3D vector3D1 = rotation1.IDENTITY.applyTo(vector3D0);\n    vector3D1.getY();\n}",
    "testName" : "test1664"
  },
  "test0213" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0213() throws Throwable {\n    Rotation rotation0 = new Rotation((-877.0), (-877.0), (-877.0), (-877.0), true);\n    Rotation rotation1 = rotation0.revert();\n    rotation1.getQ2();\n}",
    "testName" : "test0213"
  },
  "test1665" : {
    "methodSignature" : "public double getX()",
    "methodName" : "getX",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1665() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.YZX;\n    Rotation rotation0 = new Rotation(rotationOrder0, (-823.349531201697), (-823.349531201697), (-3448.3189439421385));\n    Rotation rotation1 = rotation0.revert();\n    Vector3D vector3D0 = rotation1.getAxis();\n    Vector3D vector3D1 = rotation1.IDENTITY.applyTo(vector3D0);\n    vector3D1.getX();\n}",
    "testName" : "test1665"
  },
  "test0214" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0214() throws Throwable {\n    Rotation rotation0 = new Rotation((-877.0), (-877.0), (-877.0), (-877.0), true);\n    Rotation rotation1 = rotation0.revert();\n    rotation1.getQ0();\n}",
    "testName" : "test0214"
  },
  "test1666" : {
    "methodSignature" : "public double getZ()",
    "methodName" : "getZ",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1666() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.YZX;\n    Rotation rotation0 = new Rotation(rotationOrder0, (-823.349531201697), (-823.349531201697), (-3448.3189439421385));\n    Rotation rotation1 = rotation0.revert();\n    Vector3D vector3D0 = rotation1.getAxis();\n    Vector3D vector3D1 = rotation1.IDENTITY.applyTo(vector3D0);\n    vector3D1.getZ();\n}",
    "testName" : "test1666"
  },
  "test58141" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test58141() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.ZXY;\n    Rotation rotation0 = new Rotation((-1.7825557603452563E-4), 0.2298510942896171, 2038.4502715, 0.027521523592243975, false);\n    rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test58141"
  },
  "test2079" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2079() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 519.975675, 0.0, false);\n    Rotation rotation1 = new Rotation(0.0, 3904.77, 0.0, 0.0, true);\n    Rotation rotation2 = rotation0.applyTo(rotation1);\n    rotation2.getQ0();\n}",
    "testName" : "test2079"
  },
  "test0215" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0215() throws Throwable {\n    Rotation rotation0 = new Rotation((-877.0), (-877.0), (-877.0), (-877.0), true);\n    Rotation rotation1 = rotation0.revert();\n    rotation0.getQ0();\n}",
    "testName" : "test0215"
  },
  "test1667" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1667() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.YZX;\n    Rotation rotation0 = new Rotation(rotationOrder0, (-823.349531201697), (-823.349531201697), (-3448.3189439421385));\n    Rotation rotation1 = rotation0.revert();\n    Vector3D vector3D0 = rotation1.getAxis();\n    Vector3D vector3D1 = rotation1.IDENTITY.applyTo(vector3D0);\n    rotation1.getQ0();\n}",
    "testName" : "test1667"
  },
  "test47128" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47128() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    RotationOrder rotationOrder0 = RotationOrder.YXY;\n    rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test47128"
  },
  "test0216" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0216() throws Throwable {\n    Rotation rotation0 = new Rotation((-877.0), (-877.0), (-877.0), (-877.0), true);\n    Rotation rotation1 = rotation0.revert();\n    rotation1.getQ1();\n}",
    "testName" : "test0216"
  },
  "test86185" : {
    "methodSignature" : "public Rotation(Vector3D axis, double angle)",
    "methodName" : "Rotation",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test86185() throws Throwable {\n    Vector3D vector3D0 = Vector3D.ZERO;\n    Rotation rotation0 = null;\n    rotation0 = new Rotation(vector3D0, 0.0);\n}",
    "testName" : "test86185"
  },
  "test37117" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test37117() throws Throwable {\n    Vector3D vector3D0 = new Vector3D(0.25, (-2279.098093399), 5748.6735217073);\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);\n    Vector3D vector3D1 = rotation0.IDENTITY.applyTo(vector3D0);\n    vector3D1.equals((Object) vector3D0);\n}",
    "testName" : "test37117"
  },
  "test37118" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test37118() throws Throwable {\n    Vector3D vector3D0 = new Vector3D(0.25, (-2279.098093399), 5748.6735217073);\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);\n    Vector3D vector3D1 = rotation0.IDENTITY.applyTo(vector3D0);\n    rotation0.getQ2();\n}",
    "testName" : "test37118"
  },
  "test59142" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test59142() throws Throwable {\n    Rotation rotation0 = new Rotation(0.02244492401198233, 0.02244492401198233, (-0.7820032231927776), 5334.0, false);\n    RotationOrder rotationOrder0 = RotationOrder.ZXY;\n    rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test59142"
  },
  "test26102" : {
    "methodSignature" : "public Vector3D applyTo(Vector3D u)",
    "methodName" : "applyTo",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test26102() throws Throwable {\n    Vector3D vector3D0 = Vector3D.NaN;\n    Rotation rotation0 = new Rotation(vector3D0, (-239.2149974796));\n    rotation0.IDENTITY.applyTo((Vector3D) null);\n}",
    "testName" : "test26102"
  },
  "test48129" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test48129() throws Throwable {\n    Rotation rotation0 = new Rotation(1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, false);\n    RotationOrder rotationOrder0 = RotationOrder.YXY;\n    rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test48129"
  },
  "test69153" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test69153() throws Throwable {\n    Vector3D vector3D0 = new Vector3D((-0.1), (-2491.731326436284));\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);\n    RotationOrder rotationOrder0 = RotationOrder.XZY;\n    double[] doubleArray0 = rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test69153"
  },
  "test91195" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test91195() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    double double0 = rotation0.getQ2();\n    rotation0.getQ1();\n}",
    "testName" : "test91195"
  },
  "test91196" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test91196() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    double double0 = rotation0.getQ2();\n    rotation0.getQ0();\n}",
    "testName" : "test91196"
  },
  "test91197" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test91197() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    double double0 = rotation0.getQ2();\n}",
    "testName" : "test91197"
  },
  "test2081" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2081() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 519.975675, 0.0, false);\n    Rotation rotation1 = new Rotation(0.0, 3904.77, 0.0, 0.0, true);\n    Rotation rotation2 = rotation0.applyTo(rotation1);\n    rotation2.getQ1();\n}",
    "testName" : "test2081"
  },
  "test2080" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2080() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 519.975675, 0.0, false);\n    Rotation rotation1 = new Rotation(0.0, 3904.77, 0.0, 0.0, true);\n    Rotation rotation2 = rotation0.applyTo(rotation1);\n    rotation2.getQ2();\n}",
    "testName" : "test2080"
  },
  "test2082" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2082() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 519.975675, 0.0, false);\n    Rotation rotation1 = new Rotation(0.0, 3904.77, 0.0, 0.0, true);\n    Rotation rotation2 = rotation0.applyTo(rotation1);\n    rotation2.getQ3();\n}",
    "testName" : "test2082"
  },
  "test80177" : {
    "methodSignature" : "public Rotation(Vector3D u1, Vector3D u2, Vector3D v1, Vector3D v2)",
    "methodName" : "Rotation",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test80177() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.ZYX;\n    Vector3D vector3D0 = rotationOrder0.getA1();\n    Vector3D vector3D1 = Vector3D.crossProduct(vector3D0, vector3D0);\n    Rotation rotation0 = null;\n    rotation0 = new Rotation(vector3D0, vector3D0, vector3D1, vector3D1);\n}",
    "testName" : "test80177"
  },
  "test0110" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0110() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    RotationOrder rotationOrder0 = RotationOrder.ZXZ;\n    Vector3D vector3D0 = rotationOrder0.getA3();\n    Rotation rotation1 = new Rotation(vector3D0, 1523.489803044979);\n    Rotation rotation2 = rotation0.IDENTITY.applyInverseTo(rotation1);\n    Rotation rotation3 = rotation2.revert();\n    rotation3.getQ0();\n}",
    "testName" : "test0110"
  },
  "test1562" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1562() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    Vector3D vector3D0 = new Vector3D(2.0, 2.0, (-246.8));\n    Vector3D vector3D1 = rotation0.applyTo(vector3D0);\n    vector3D1.equals((Object) vector3D0);\n}",
    "testName" : "test1562"
  },
  "test64147" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test64147() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.YXZ;\n    Rotation rotation0 = new Rotation((-1.7825557603452563E-4), 0.2298510942896171, 2038.4502715, 0.027521523592243975, false);\n    rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test64147"
  },
  "test32108" : {
    "methodSignature" : "public Rotation(Vector3D u1, Vector3D u2, Vector3D v1, Vector3D v2)",
    "methodName" : "Rotation",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test32108() throws Throwable {\n    Rotation rotation0 = null;\n    rotation0 = new Rotation((Vector3D) null, (Vector3D) null, (Vector3D) null, (Vector3D) null);\n}",
    "testName" : "test32108"
  },
  "test2389" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2389() throws Throwable {\n    Rotation rotation0 = new Rotation(1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, false);\n    Rotation rotation1 = rotation0.IDENTITY.applyInverseTo(rotation0);\n    rotation1.getQ2();\n}",
    "testName" : "test2389"
  },
  "test2386" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2386() throws Throwable {\n    Rotation rotation0 = new Rotation(1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, false);\n    Rotation rotation1 = rotation0.IDENTITY.applyInverseTo(rotation0);\n    rotation0.getQ3();\n}",
    "testName" : "test2386"
  },
  "test2388" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2388() throws Throwable {\n    Rotation rotation0 = new Rotation(1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, false);\n    Rotation rotation1 = rotation0.IDENTITY.applyInverseTo(rotation0);\n    rotation1.getQ1();\n}",
    "testName" : "test2388"
  },
  "test2387" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2387() throws Throwable {\n    Rotation rotation0 = new Rotation(1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, false);\n    Rotation rotation1 = rotation0.IDENTITY.applyInverseTo(rotation0);\n    rotation1.getQ0();\n}",
    "testName" : "test2387"
  },
  "test0527" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0527() throws Throwable {\n    Rotation rotation0 = new Rotation(321.383871488, 321.383871488, 321.383871488, 321.383871488, true);\n    double double0 = rotation0.getQ3();\n    rotation0.getQ0();\n}",
    "testName" : "test0527"
  },
  "test0528" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0528() throws Throwable {\n    Rotation rotation0 = new Rotation(321.383871488, 321.383871488, 321.383871488, 321.383871488, true);\n    double double0 = rotation0.getQ3();\n    rotation0.getQ2();\n}",
    "testName" : "test0528"
  },
  "test0529" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0529() throws Throwable {\n    Rotation rotation0 = new Rotation(321.383871488, 321.383871488, 321.383871488, 321.383871488, true);\n    double double0 = rotation0.getQ3();\n}",
    "testName" : "test0529"
  },
  "test1975" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1975() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    RotationOrder rotationOrder0 = RotationOrder.XYZ;\n    Rotation rotation1 = new Rotation(rotationOrder0, 4.0, 4.0, (-1979.694588318826));\n    Rotation rotation2 = rotation0.applyTo(rotation1);\n    rotation2.getQ3();\n}",
    "testName" : "test1975"
  },
  "test1976" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1976() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    RotationOrder rotationOrder0 = RotationOrder.XYZ;\n    Rotation rotation1 = new Rotation(rotationOrder0, 4.0, 4.0, (-1979.694588318826));\n    Rotation rotation2 = rotation0.applyTo(rotation1);\n    rotation2.getQ2();\n}",
    "testName" : "test1976"
  },
  "test1977" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1977() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    RotationOrder rotationOrder0 = RotationOrder.XYZ;\n    Rotation rotation1 = new Rotation(rotationOrder0, 4.0, 4.0, (-1979.694588318826));\n    Rotation rotation2 = rotation0.applyTo(rotation1);\n    rotation2.getQ0();\n}",
    "testName" : "test1977"
  },
  "test0526" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0526() throws Throwable {\n    Rotation rotation0 = new Rotation(321.383871488, 321.383871488, 321.383871488, 321.383871488, true);\n    double double0 = rotation0.getQ3();\n    rotation0.getQ1();\n}",
    "testName" : "test0526"
  },
  "test1978" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1978() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    RotationOrder rotationOrder0 = RotationOrder.XYZ;\n    Rotation rotation1 = new Rotation(rotationOrder0, 4.0, 4.0, (-1979.694588318826));\n    Rotation rotation2 = rotation0.applyTo(rotation1);\n    rotation2.getQ1();\n}",
    "testName" : "test1978"
  },
  "test82179" : {
    "methodSignature" : "public Rotation(Vector3D u1, Vector3D u2, Vector3D v1, Vector3D v2)",
    "methodName" : "Rotation",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test82179() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_J;\n    Vector3D vector3D1 = Vector3D.crossProduct(vector3D0, vector3D0);\n    Rotation rotation0 = null;\n    rotation0 = new Rotation(vector3D1, vector3D1, vector3D0, vector3D0);\n}",
    "testName" : "test82179"
  },
  "test87188" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test87188() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    Rotation rotation1 = rotation0.applyTo(rotation0);\n    rotation1.getQ1();\n}",
    "testName" : "test87188"
  },
  "test87189" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test87189() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    Rotation rotation1 = rotation0.applyTo(rotation0);\n    rotation1.getQ2();\n}",
    "testName" : "test87189"
  },
  "test43124" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test43124() throws Throwable {\n    Vector3D vector3D0 = Vector3D.PLUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);\n    RotationOrder rotationOrder0 = RotationOrder.ZYZ;\n    double[] doubleArray0 = rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test43124"
  },
  "test66149" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test66149() throws Throwable {\n    Vector3D vector3D0 = Vector3D.PLUS_K;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    RotationOrder rotationOrder0 = RotationOrder.YXZ;\n    double[] doubleArray0 = rotation0.IDENTITY.getAngles(rotationOrder0);\n}",
    "testName" : "test66149"
  },
  "test27103" : {
    "methodSignature" : "public Rotation applyTo(Rotation r)",
    "methodName" : "applyTo",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27103() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    rotation0.applyTo((Rotation) null);\n}",
    "testName" : "test27103"
  },
  "test66150" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test66150() throws Throwable {\n    Vector3D vector3D0 = Vector3D.PLUS_K;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    RotationOrder rotationOrder0 = RotationOrder.YXZ;\n    double[] doubleArray0 = rotation0.IDENTITY.getAngles(rotationOrder0);\n    rotation0.getQ0();\n}",
    "testName" : "test66150"
  },
  "test87190" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test87190() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    Rotation rotation1 = rotation0.applyTo(rotation0);\n    rotation1.getQ0();\n}",
    "testName" : "test87190"
  },
  "test2393" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2393() throws Throwable {\n    Rotation rotation0 = new Rotation(1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, false);\n    Rotation rotation1 = rotation0.IDENTITY.applyInverseTo(rotation0);\n    rotation0.getQ0();\n}",
    "testName" : "test2393"
  },
  "test2392" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2392() throws Throwable {\n    Rotation rotation0 = new Rotation(1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, false);\n    Rotation rotation1 = rotation0.IDENTITY.applyInverseTo(rotation0);\n    rotation0.getQ2();\n}",
    "testName" : "test2392"
  },
  "test2391" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2391() throws Throwable {\n    Rotation rotation0 = new Rotation(1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, false);\n    Rotation rotation1 = rotation0.IDENTITY.applyInverseTo(rotation0);\n    rotation0.getQ1();\n}",
    "testName" : "test2391"
  },
  "test2390" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2390() throws Throwable {\n    Rotation rotation0 = new Rotation(1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, false);\n    Rotation rotation1 = rotation0.IDENTITY.applyInverseTo(rotation0);\n    rotation1.getQ3();\n}",
    "testName" : "test2390"
  },
  "test54137" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test54137() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_I;\n    Rotation rotation0 = new Rotation(vector3D0, (-834.3178));\n    RotationOrder rotationOrder0 = RotationOrder.XYX;\n    rotation0.IDENTITY.getAngles(rotationOrder0);\n}",
    "testName" : "test54137"
  },
  "test1874" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1874() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    Vector3D vector3D0 = Vector3D.PLUS_K;\n    Rotation rotation1 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);\n    Rotation rotation2 = rotation1.applyTo(rotation0);\n    rotation2.getQ0();\n}",
    "testName" : "test1874"
  },
  "test0425" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0425() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    double double0 = rotation0.getQ3();\n}",
    "testName" : "test0425"
  },
  "test65148" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test65148() throws Throwable {\n    Rotation rotation0 = new Rotation(0.8022124572060929, 0.8022124572060929, (-0.7820032231927776), 5334.0, false);\n    RotationOrder rotationOrder0 = RotationOrder.YXZ;\n    rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test65148"
  },
  "test44125" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44125() throws Throwable {\n    Vector3D vector3D0 = Vector3D.NaN;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    RotationOrder rotationOrder0 = RotationOrder.YZY;\n    rotation0.IDENTITY.getAngles(rotationOrder0);\n}",
    "testName" : "test44125"
  },
  "test004" : {
    "methodSignature" : "public double getZ()",
    "methodName" : "getZ",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test004() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, (-692.60412), (-692.60412), true);\n    Vector3D vector3D0 = rotation0.getAxis();\n    vector3D0.getZ();\n}",
    "testName" : "test004"
  },
  "test002" : {
    "methodSignature" : "public double getY()",
    "methodName" : "getY",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test002() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, (-692.60412), (-692.60412), true);\n    Vector3D vector3D0 = rotation0.getAxis();\n    vector3D0.getY();\n}",
    "testName" : "test002"
  },
  "test33109" : {
    "methodSignature" : "public Rotation(Vector3D u, Vector3D v)",
    "methodName" : "Rotation",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33109() throws Throwable {\n    Rotation rotation0 = null;\n    rotation0 = new Rotation((Vector3D) null, (Vector3D) null);\n}",
    "testName" : "test33109"
  },
  "test003" : {
    "methodSignature" : "public double getX()",
    "methodName" : "getX",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test003() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, (-692.60412), (-692.60412), true);\n    Vector3D vector3D0 = rotation0.getAxis();\n    vector3D0.getX();\n}",
    "testName" : "test003"
  },
  "test87186" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test87186() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    Rotation rotation1 = rotation0.applyTo(rotation0);\n    rotation1.getQ3();\n}",
    "testName" : "test87186"
  },
  "test87187" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test87187() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    Rotation rotation1 = rotation0.applyTo(rotation0);\n    rotation0.getQ2();\n}",
    "testName" : "test87187"
  },
  "test2285" : {
    "methodSignature" : "public double getNormInf()",
    "methodName" : "getNormInf",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2285() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    Vector3D vector3D0 = Vector3D.MINUS_K;\n    Vector3D vector3D1 = Vector3D.crossProduct(vector3D0, vector3D0);\n    Vector3D vector3D2 = new Vector3D((-2138.7303097069434), vector3D1, (-2138.7303097069434), vector3D1, (-2138.7303097069434), vector3D1, (-2138.7303097069434), vector3D1);\n    Vector3D vector3D3 = rotation0.IDENTITY.applyInverseTo(vector3D2);\n    vector3D3.getNormInf();\n}",
    "testName" : "test2285"
  },
  "test55138" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test55138() throws Throwable {\n    Rotation rotation0 = new Rotation(521.84415, (-0.5), 1119.201639707, 0.1, false);\n    RotationOrder rotationOrder0 = RotationOrder.ZYX;\n    rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test55138"
  },
  "test38119" : {
    "methodSignature" : "public double getNorm1()",
    "methodName" : "getNorm1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test38119() throws Throwable {\n    Vector3D vector3D0 = Vector3D.PLUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);\n    Vector3D vector3D1 = rotation0.applyInverseTo(vector3D0);\n    vector3D1.getNorm1();\n}",
    "testName" : "test38119"
  },
  "test60143" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test60143() throws Throwable {\n    Vector3D vector3D0 = new Vector3D((-0.1), (-2491.731326436284));\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);\n    RotationOrder rotationOrder0 = RotationOrder.ZXY;\n    double[] doubleArray0 = rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test60143"
  },
  "test000" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, (-692.60412), (-692.60412), true);\n    Vector3D vector3D0 = rotation0.getAxis();\n    rotation0.getQ0();\n}",
    "testName" : "test000"
  },
  "test0318" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0318() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 519.975675, 0.0, false);\n    Rotation rotation1 = rotation0.revert();\n    rotation0.getQ3();\n}",
    "testName" : "test0318"
  },
  "test001" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test001() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, (-692.60412), (-692.60412), true);\n    Vector3D vector3D0 = rotation0.getAxis();\n    rotation0.getQ2();\n}",
    "testName" : "test001"
  },
  "test0319" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0319() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 519.975675, 0.0, false);\n    Rotation rotation1 = rotation0.revert();\n    rotation1.getQ3();\n}",
    "testName" : "test0319"
  },
  "test1768" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1768() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, (-5460.4), (-1.0), false);\n    Vector3D vector3D0 = new Vector3D(0.0, 0.0, (-1.0));\n    Vector3D vector3D1 = Vector3D.crossProduct(vector3D0, vector3D0);\n    Vector3D vector3D2 = rotation0.applyTo(vector3D1);\n    rotation0.getQ2();\n}",
    "testName" : "test1768"
  },
  "test0317" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0317() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 519.975675, 0.0, false);\n    Rotation rotation1 = rotation0.revert();\n    rotation0.getQ2();\n}",
    "testName" : "test0317"
  },
  "test1769" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1769() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, (-5460.4), (-1.0), false);\n    Vector3D vector3D0 = new Vector3D(0.0, 0.0, (-1.0));\n    Vector3D vector3D1 = Vector3D.crossProduct(vector3D0, vector3D0);\n    Vector3D vector3D2 = rotation0.applyTo(vector3D1);\n    rotation0.getQ1();\n}",
    "testName" : "test1769"
  },
  "test71155" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test71155() throws Throwable {\n    Rotation rotation0 = new Rotation((-1099.4598898379), (-1099.4598898379), (-1099.4598898379), (-1099.4598898379), false);\n    RotationOrder rotationOrder0 = RotationOrder.XYZ;\n    Rotation rotation1 = new Rotation(rotationOrder0, 3155.8, 0.5, 1814.7467);\n    Rotation rotation2 = rotation0.applyInverseTo(rotation1);\n    rotation2.getAngles(rotationOrder0);\n}",
    "testName" : "test71155"
  },
  "test92199" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test92199() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    double double0 = rotation0.getQ1();\n    rotation0.getQ2();\n}",
    "testName" : "test92199"
  },
  "test92198" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test92198() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    double double0 = rotation0.getQ1();\n    rotation0.getQ0();\n}",
    "testName" : "test92198"
  },
  "test49130" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test49130() throws Throwable {\n    Vector3D vector3D0 = Vector3D.PLUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);\n    RotationOrder rotationOrder0 = RotationOrder.YXY;\n    double[] doubleArray0 = rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test49130"
  },
  "test76169" : {
    "methodSignature" : "public Rotation(Vector3D u, Vector3D v)",
    "methodName" : "Rotation",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test76169() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.YXZ;\n    Vector3D vector3D0 = rotationOrder0.getA2();\n    Vector3D vector3D1 = new Vector3D(0.0, vector3D0);\n    Rotation rotation0 = null;\n    rotation0 = new Rotation(vector3D1, vector3D0);\n}",
    "testName" : "test76169"
  },
  "test1256" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1256() throws Throwable {\n    Rotation rotation0 = new Rotation((-1035.56568471797), 3042.9316100441, (-2240.1263698), (-2240.1263698), true);\n    double double0 = rotation0.getQ0();\n    rotation0.getQ1();\n}",
    "testName" : "test1256"
  },
  "test0840" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0840() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, (-692.60412), (-692.60412), true);\n    double double0 = rotation0.getQ2();\n    rotation0.getQ3();\n}",
    "testName" : "test0840"
  },
  "test0841" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0841() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, (-692.60412), (-692.60412), true);\n    double double0 = rotation0.getQ2();\n}",
    "testName" : "test0841"
  },
  "test1253" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1253() throws Throwable {\n    Rotation rotation0 = new Rotation((-1035.56568471797), 3042.9316100441, (-2240.1263698), (-2240.1263698), true);\n    double double0 = rotation0.getQ0();\n    rotation0.getQ2();\n}",
    "testName" : "test1253"
  },
  "test1254" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1254() throws Throwable {\n    Rotation rotation0 = new Rotation((-1035.56568471797), 3042.9316100441, (-2240.1263698), (-2240.1263698), true);\n    double double0 = rotation0.getQ0();\n}",
    "testName" : "test1254"
  },
  "test1255" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1255() throws Throwable {\n    Rotation rotation0 = new Rotation((-1035.56568471797), 3042.9316100441, (-2240.1263698), (-2240.1263698), true);\n    double double0 = rotation0.getQ0();\n    rotation0.getQ3();\n}",
    "testName" : "test1255"
  },
  "test28104" : {
    "methodSignature" : "public Vector3D applyInverseTo(Vector3D u)",
    "methodName" : "applyInverseTo",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test28104() throws Throwable {\n    Rotation rotation0 = new Rotation((-2009.6), 3295.7944100348, 0.0, (-2009.6), false);\n    rotation0.IDENTITY.applyInverseTo((Vector3D) null);\n}",
    "testName" : "test28104"
  },
  "test67151" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test67151() throws Throwable {\n    Rotation rotation0 = new Rotation(0.25, 0.25, 0.25, 1829.5243766, false);\n    RotationOrder rotationOrder0 = RotationOrder.XZY;\n    rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test67151"
  },
  "test0839" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0839() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, (-692.60412), (-692.60412), true);\n    double double0 = rotation0.getQ2();\n    rotation0.getQ0();\n}",
    "testName" : "test0839"
  },
  "test39120" : {
    "methodSignature" : "public Rotation(double[][] m, double threshold) throws NotARotationMatrixException",
    "methodName" : "Rotation",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39120() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.ZXY;\n    Vector3D vector3D0 = rotationOrder0.getA3();\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);\n    double[][] doubleArray0 = rotation0.getMatrix();\n    Rotation rotation1 = null;\n    rotation1 = new Rotation(doubleArray0, 0.0);\n}",
    "testName" : "test39120"
  },
  "test78172" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test78172() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    Vector3D vector3D1 = rotation0.getAxis();\n    Rotation rotation1 = new Rotation(vector3D1, vector3D1, vector3D0, vector3D1);\n    rotation0.getQ0();\n}",
    "testName" : "test78172"
  },
  "test78171" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test78171() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    Vector3D vector3D1 = rotation0.getAxis();\n    Rotation rotation1 = new Rotation(vector3D1, vector3D1, vector3D0, vector3D1);\n    rotation0.getQ2();\n}",
    "testName" : "test78171"
  },
  "test78174" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test78174() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    Vector3D vector3D1 = rotation0.getAxis();\n    Rotation rotation1 = new Rotation(vector3D1, vector3D1, vector3D0, vector3D1);\n    rotation1.getQ3();\n}",
    "testName" : "test78174"
  },
  "test34110" : {
    "methodSignature" : "public Rotation(Vector3D axis, double angle)",
    "methodName" : "Rotation",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34110() throws Throwable {\n    Rotation rotation0 = null;\n    rotation0 = new Rotation((Vector3D) null, 2657.56);\n}",
    "testName" : "test34110"
  },
  "test78173" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test78173() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    Vector3D vector3D1 = rotation0.getAxis();\n    Rotation rotation1 = new Rotation(vector3D1, vector3D1, vector3D0, vector3D1);\n    rotation0.getQ1();\n}",
    "testName" : "test78173"
  },
  "test78175" : {
    "methodSignature" : "public double getNormSq()",
    "methodName" : "getNormSq",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test78175() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    Vector3D vector3D1 = rotation0.getAxis();\n    Rotation rotation1 = new Rotation(vector3D1, vector3D1, vector3D0, vector3D1);\n    vector3D1.getNormSq();\n}",
    "testName" : "test78175"
  },
  "test0736" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0736() throws Throwable {\n    Rotation rotation0 = new Rotation((-2634.3122), 0.5, 15.0, (-2634.3122), false);\n    double double0 = rotation0.getQ2();\n}",
    "testName" : "test0736"
  },
  "test73161" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test73161() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    RotationOrder rotationOrder0 = RotationOrder.YZX;\n    Vector3D vector3D0 = rotationOrder0.getA2();\n    Rotation rotation1 = new Rotation(vector3D0, 3295.4179865744);\n    Rotation rotation2 = rotation1.applyInverseTo(rotation0);\n    Rotation rotation3 = rotation2.applyTo(rotation0);\n    double double0 = rotation3.getAngle();\n    rotation3.getQ2();\n}",
    "testName" : "test73161"
  },
  "test0737" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0737() throws Throwable {\n    Rotation rotation0 = new Rotation((-2634.3122), 0.5, 15.0, (-2634.3122), false);\n    double double0 = rotation0.getQ2();\n    rotation0.getQ3();\n}",
    "testName" : "test0737"
  },
  "test73162" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test73162() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    RotationOrder rotationOrder0 = RotationOrder.YZX;\n    Vector3D vector3D0 = rotationOrder0.getA2();\n    Rotation rotation1 = new Rotation(vector3D0, 3295.4179865744);\n    Rotation rotation2 = rotation1.applyInverseTo(rotation0);\n    Rotation rotation3 = rotation2.applyTo(rotation0);\n    double double0 = rotation3.getAngle();\n    rotation3.getQ0();\n}",
    "testName" : "test73162"
  },
  "test73160" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test73160() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    RotationOrder rotationOrder0 = RotationOrder.YZX;\n    Vector3D vector3D0 = rotationOrder0.getA2();\n    Rotation rotation1 = new Rotation(vector3D0, 3295.4179865744);\n    Rotation rotation2 = rotation1.applyInverseTo(rotation0);\n    Rotation rotation3 = rotation2.applyTo(rotation0);\n    double double0 = rotation3.getAngle();\n    rotation3.getQ1();\n}",
    "testName" : "test73160"
  },
  "test62145" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test62145() throws Throwable {\n    Rotation rotation0 = new Rotation((-2634.3122), 0.5, 15.0, (-2634.3122), false);\n    RotationOrder rotationOrder0 = RotationOrder.YZX;\n    rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test62145"
  },
  "test0734" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0734() throws Throwable {\n    Rotation rotation0 = new Rotation((-2634.3122), 0.5, 15.0, (-2634.3122), false);\n    double double0 = rotation0.getQ2();\n    rotation0.getQ1();\n}",
    "testName" : "test0734"
  },
  "test0735" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0735() throws Throwable {\n    Rotation rotation0 = new Rotation((-2634.3122), 0.5, 15.0, (-2634.3122), false);\n    double double0 = rotation0.getQ2();\n    rotation0.getQ0();\n}",
    "testName" : "test0735"
  },
  "test019" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test019() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    RotationOrder rotationOrder0 = RotationOrder.ZXZ;\n    Vector3D vector3D0 = rotationOrder0.getA3();\n    Rotation rotation1 = new Rotation(vector3D0, 1523.489803044979);\n    Rotation rotation2 = rotation0.IDENTITY.applyInverseTo(rotation1);\n    Rotation rotation3 = rotation2.revert();\n    rotation3.getQ1();\n}",
    "testName" : "test019"
  },
  "test73158" : {
    "methodSignature" : "public double getAngle()",
    "methodName" : "getAngle",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test73158() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    RotationOrder rotationOrder0 = RotationOrder.YZX;\n    Vector3D vector3D0 = rotationOrder0.getA2();\n    Rotation rotation1 = new Rotation(vector3D0, 3295.4179865744);\n    Rotation rotation2 = rotation1.applyInverseTo(rotation0);\n    Rotation rotation3 = rotation2.applyTo(rotation0);\n    double double0 = rotation3.getAngle();\n}",
    "testName" : "test73158"
  },
  "test73159" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test73159() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    RotationOrder rotationOrder0 = RotationOrder.YZX;\n    Vector3D vector3D0 = rotationOrder0.getA2();\n    Rotation rotation1 = new Rotation(vector3D0, 3295.4179865744);\n    Rotation rotation2 = rotation1.applyInverseTo(rotation0);\n    Rotation rotation3 = rotation2.applyTo(rotation0);\n    double double0 = rotation3.getAngle();\n    rotation2.getQ2();\n}",
    "testName" : "test73159"
  },
  "test017" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test017() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    RotationOrder rotationOrder0 = RotationOrder.ZXZ;\n    Vector3D vector3D0 = rotationOrder0.getA3();\n    Rotation rotation1 = new Rotation(vector3D0, 1523.489803044979);\n    Rotation rotation2 = rotation0.IDENTITY.applyInverseTo(rotation1);\n    Rotation rotation3 = rotation2.revert();\n    rotation1.getQ1();\n}",
    "testName" : "test017"
  },
  "test018" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test018() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    RotationOrder rotationOrder0 = RotationOrder.ZXZ;\n    Vector3D vector3D0 = rotationOrder0.getA3();\n    Rotation rotation1 = new Rotation(vector3D0, 1523.489803044979);\n    Rotation rotation2 = rotation0.IDENTITY.applyInverseTo(rotation1);\n    Rotation rotation3 = rotation2.revert();\n    rotation3.getQ3();\n}",
    "testName" : "test018"
  },
  "test015" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test015() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    RotationOrder rotationOrder0 = RotationOrder.ZXZ;\n    Vector3D vector3D0 = rotationOrder0.getA3();\n    Rotation rotation1 = new Rotation(vector3D0, 1523.489803044979);\n    Rotation rotation2 = rotation0.IDENTITY.applyInverseTo(rotation1);\n    Rotation rotation3 = rotation2.revert();\n    rotation2.getQ2();\n}",
    "testName" : "test015"
  },
  "test016" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test016() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    RotationOrder rotationOrder0 = RotationOrder.ZXZ;\n    Vector3D vector3D0 = rotationOrder0.getA3();\n    Rotation rotation1 = new Rotation(vector3D0, 1523.489803044979);\n    Rotation rotation2 = rotation0.IDENTITY.applyInverseTo(rotation1);\n    Rotation rotation3 = rotation2.revert();\n    rotation2.getQ1();\n}",
    "testName" : "test016"
  },
  "test50132" : {
    "methodSignature" : "public double getZ()",
    "methodName" : "getZ",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test50132() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.XZX;\n    Rotation rotation0 = Rotation.IDENTITY;\n    Vector3D vector3D0 = rotation0.getAxis();\n    Rotation rotation1 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);\n    rotation1.getAngles(rotationOrder0);\n    vector3D0.getZ();\n}",
    "testName" : "test50132"
  },
  "test50131" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test50131() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.XZX;\n    Rotation rotation0 = Rotation.IDENTITY;\n    Vector3D vector3D0 = rotation0.getAxis();\n    Rotation rotation1 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);\n    rotation1.getQ0();\n}",
    "testName" : "test50131"
  },
  "test50133" : {
    "methodSignature" : "public double getNorm1()",
    "methodName" : "getNorm1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test50133() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.XZX;\n    Rotation rotation0 = Rotation.IDENTITY;\n    Vector3D vector3D0 = rotation0.getAxis();\n    Rotation rotation1 = new Rotation(vector3D0, vector3D0, vector3D0, vector3D0);\n    rotation1.getAngles(rotationOrder0);\n    vector3D0.getNorm1();\n}",
    "testName" : "test50133"
  },
  "test77170" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test77170() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.XYX;\n    Vector3D vector3D0 = rotationOrder0.getA3();\n    Vector3D vector3D1 = vector3D0.orthogonal();\n    Rotation rotation0 = new Rotation(vector3D1, vector3D0, vector3D0, vector3D1);\n    rotation0.getQ3();\n}",
    "testName" : "test77170"
  },
  "test61144" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test61144() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.YZX;\n    Rotation rotation0 = new Rotation((-1.7825557603452563E-4), 0.2298510942896171, 2038.4502715, 0.027521523592243975, false);\n    rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test61144"
  },
  "test40121" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test40121() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    RotationOrder rotationOrder0 = RotationOrder.ZYZ;\n    rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test40121"
  },
  "test72157" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test72157() throws Throwable {\n    Vector3D vector3D0 = new Vector3D(0.0, 0.3333333134651184, 0.3333333134651184);\n    Rotation rotation0 = new Rotation(vector3D0, (-1852.3083));\n    RotationOrder rotationOrder0 = RotationOrder.ZXZ;\n    double[] doubleArray0 = rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test72157"
  },
  "test88191" : {
    "methodSignature" : "public Rotation(double[][] m, double threshold) throws NotARotationMatrixException",
    "methodName" : "Rotation",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test88191() throws Throwable {\n    Rotation rotation0 = new Rotation(1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, 1.9868161777724352E-8, false);\n    double[][] doubleArray0 = rotation0.getMatrix();\n    Rotation rotation1 = null;\n    rotation1 = new Rotation(doubleArray0, 1.9868161777724352E-8);\n}",
    "testName" : "test88191"
  },
  "test72156" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test72156() throws Throwable {\n    Vector3D vector3D0 = new Vector3D(0.0, 0.3333333134651184, 0.3333333134651184);\n    Rotation rotation0 = new Rotation(vector3D0, (-1852.3083));\n    RotationOrder rotationOrder0 = RotationOrder.ZXZ;\n    double[] doubleArray0 = rotation0.getAngles(rotationOrder0);\n    rotation0.getQ2();\n}",
    "testName" : "test72156"
  },
  "test92200" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test92200() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_J;\n    Rotation rotation0 = new Rotation(vector3D0, vector3D0);\n    double double0 = rotation0.getQ1();\n}",
    "testName" : "test92200"
  },
  "test83180" : {
    "methodSignature" : "public Rotation(double[][] m, double threshold) throws NotARotationMatrixException",
    "methodName" : "Rotation",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test83180() throws Throwable {\n    double[][] doubleArray0 = new double[3][5];\n    double[] doubleArray1 = new double[3];\n    doubleArray0[0] = doubleArray1;\n    Rotation rotation0 = null;\n    rotation0 = new Rotation(doubleArray0, (-0.18084726264509002));\n}",
    "testName" : "test83180"
  },
  "test1150" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1150() throws Throwable {\n    Vector3D vector3D0 = Vector3D.PLUS_I;\n    Vector3D vector3D1 = new Vector3D((-1680.1648465), vector3D0, (-1680.1648465), vector3D0, (-1680.1648465), vector3D0);\n    Rotation rotation0 = new Rotation(vector3D1, vector3D0);\n    double double0 = rotation0.getQ0();\n}",
    "testName" : "test1150"
  },
  "test1151" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1151() throws Throwable {\n    Vector3D vector3D0 = Vector3D.PLUS_I;\n    Vector3D vector3D1 = new Vector3D((-1680.1648465), vector3D0, (-1680.1648465), vector3D0, (-1680.1648465), vector3D0);\n    Rotation rotation0 = new Rotation(vector3D1, vector3D0);\n    double double0 = rotation0.getQ0();\n    rotation0.getQ3();\n}",
    "testName" : "test1151"
  },
  "test1152" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1152() throws Throwable {\n    Vector3D vector3D0 = Vector3D.PLUS_I;\n    Vector3D vector3D1 = new Vector3D((-1680.1648465), vector3D0, (-1680.1648465), vector3D0, (-1680.1648465), vector3D0);\n    Rotation rotation0 = new Rotation(vector3D1, vector3D0);\n    double double0 = rotation0.getQ0();\n    rotation0.getQ1();\n}",
    "testName" : "test1152"
  },
  "test51134" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test51134() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.XZX;\n    Rotation rotation0 = Rotation.IDENTITY;\n    rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test51134"
  },
  "test1047" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1047() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.YXY;\n    Rotation rotation0 = new Rotation(rotationOrder0, 1.0, (-1884.34179737), 0.5);\n    double double0 = rotation0.getQ1();\n    rotation0.getQ2();\n}",
    "testName" : "test1047"
  },
  "test0630" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0630() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 0.0, (-54.66491), true);\n    double double0 = rotation0.getQ3();\n    rotation0.getQ0();\n}",
    "testName" : "test0630"
  },
  "test1048" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1048() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.YXY;\n    Rotation rotation0 = new Rotation(rotationOrder0, 1.0, (-1884.34179737), 0.5);\n    double double0 = rotation0.getQ1();\n    rotation0.getQ3();\n}",
    "testName" : "test1048"
  },
  "test2499" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2499() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 519.975675, 0.0, false);\n    Rotation rotation1 = new Rotation(0.0, 3904.77, 0.0, 0.0, true);\n    Rotation rotation2 = rotation0.IDENTITY.applyInverseTo(rotation1);\n    double double0 = Rotation.distance(rotation0, rotation2);\n    rotation2.getQ3();\n}",
    "testName" : "test2499"
  },
  "test0631" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0631() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 0.0, (-54.66491), true);\n    double double0 = rotation0.getQ3();\n    rotation0.getQ2();\n}",
    "testName" : "test0631"
  },
  "test1049" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1049() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.YXY;\n    Rotation rotation0 = new Rotation(rotationOrder0, 1.0, (-1884.34179737), 0.5);\n    double double0 = rotation0.getQ1();\n    rotation0.getQ0();\n}",
    "testName" : "test1049"
  },
  "test0632" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0632() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 0.0, (-54.66491), true);\n    double double0 = rotation0.getQ3();\n    rotation0.getQ1();\n}",
    "testName" : "test0632"
  },
  "test2496" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2496() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 519.975675, 0.0, false);\n    Rotation rotation1 = new Rotation(0.0, 3904.77, 0.0, 0.0, true);\n    Rotation rotation2 = rotation0.IDENTITY.applyInverseTo(rotation1);\n    double double0 = Rotation.distance(rotation0, rotation2);\n    rotation0.getQ1();\n}",
    "testName" : "test2496"
  },
  "test2495" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2495() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 519.975675, 0.0, false);\n    Rotation rotation1 = new Rotation(0.0, 3904.77, 0.0, 0.0, true);\n    Rotation rotation2 = rotation0.IDENTITY.applyInverseTo(rotation1);\n    double double0 = Rotation.distance(rotation0, rotation2);\n    rotation2.getQ1();\n}",
    "testName" : "test2495"
  },
  "test2498" : {
    "methodSignature" : "public static double distance(Rotation r1, Rotation r2)",
    "methodName" : "distance",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2498() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 519.975675, 0.0, false);\n    Rotation rotation1 = new Rotation(0.0, 3904.77, 0.0, 0.0, true);\n    Rotation rotation2 = rotation0.IDENTITY.applyInverseTo(rotation1);\n    double double0 = Rotation.distance(rotation0, rotation2);\n}",
    "testName" : "test2498"
  },
  "test1046" : {
    "methodSignature" : "public double getQ1()",
    "methodName" : "getQ1",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1046() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.YXY;\n    Rotation rotation0 = new Rotation(rotationOrder0, 1.0, (-1884.34179737), 0.5);\n    double double0 = rotation0.getQ1();\n}",
    "testName" : "test1046"
  },
  "test2497" : {
    "methodSignature" : "public double getQ2()",
    "methodName" : "getQ2",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2497() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 519.975675, 0.0, false);\n    Rotation rotation1 = new Rotation(0.0, 3904.77, 0.0, 0.0, true);\n    Rotation rotation2 = rotation0.IDENTITY.applyInverseTo(rotation1);\n    double double0 = Rotation.distance(rotation0, rotation2);\n    rotation1.getQ2();\n}",
    "testName" : "test2497"
  },
  "test0633" : {
    "methodSignature" : "public double getQ3()",
    "methodName" : "getQ3",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0633() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 0.0, (-54.66491), true);\n    double double0 = rotation0.getQ3();\n}",
    "testName" : "test0633"
  },
  "test29105" : {
    "methodSignature" : "public Rotation applyInverseTo(Rotation r)",
    "methodName" : "applyInverseTo",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test29105() throws Throwable {\n    Rotation rotation0 = Rotation.IDENTITY;\n    rotation0.applyInverseTo((Rotation) null);\n}",
    "testName" : "test29105"
  },
  "test45126" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test45126() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.YZY;\n    Vector3D vector3D0 = rotationOrder0.getA1();\n    Vector3D vector3D1 = Vector3D.MINUS_J;\n    Rotation rotation0 = new Rotation(vector3D1, vector3D0, vector3D0, vector3D0);\n    Rotation rotation1 = new Rotation(vector3D0, vector3D1);\n    Rotation rotation2 = rotation0.IDENTITY.applyInverseTo(rotation1);\n    rotation2.getAngles(rotationOrder0);\n}",
    "testName" : "test45126"
  },
  "test2494" : {
    "methodSignature" : "public double getQ0()",
    "methodName" : "getQ0",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2494() throws Throwable {\n    Rotation rotation0 = new Rotation(0.0, 0.0, 519.975675, 0.0, false);\n    Rotation rotation1 = new Rotation(0.0, 3904.77, 0.0, 0.0, true);\n    Rotation rotation2 = rotation0.IDENTITY.applyInverseTo(rotation1);\n    double double0 = Rotation.distance(rotation0, rotation2);\n    rotation1.getQ0();\n}",
    "testName" : "test2494"
  },
  "test56139" : {
    "methodSignature" : "public double[] getAngles(RotationOrder order) throws CardanEulerSingularityException",
    "methodName" : "getAngles",
    "className" : "org.apache.commons.math.geometry.euclidean.threed.Rotation",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test56139() throws Throwable {\n    Rotation rotation0 = new Rotation((-1634.076), (-1634.076), 282.659391833, 747.6433037848643, false);\n    RotationOrder rotationOrder0 = RotationOrder.ZYX;\n    rotation0.getAngles(rotationOrder0);\n}",
    "testName" : "test56139"
  }
}