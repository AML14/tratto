{
  "test16" : {
    "methodSignature" : "public double getNumericalVariance()",
    "methodName" : "getNumericalVariance",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution();\n    double double0 = uniformRealDistribution0.inverseCumulativeProbability(1.0E-6);\n    uniformRealDistribution0.getNumericalVariance();\n}",
    "testName" : "test16"
  },
  "test15" : {
    "methodSignature" : "public double getSupportUpperBound()",
    "methodName" : "getSupportUpperBound",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test15() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution();\n    double double0 = uniformRealDistribution0.inverseCumulativeProbability(1.0E-6);\n    uniformRealDistribution0.getSupportUpperBound();\n}",
    "testName" : "test15"
  },
  "test14" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution();\n    double double0 = uniformRealDistribution0.inverseCumulativeProbability(1.0E-6);\n    uniformRealDistribution0.getNumericalMean();\n}",
    "testName" : "test14"
  },
  "test13" : {
    "methodSignature" : "public double inverseCumulativeProbability(final double p) throws OutOfRangeException",
    "methodName" : "inverseCumulativeProbability",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution();\n    double double0 = uniformRealDistribution0.inverseCumulativeProbability(1.0E-6);\n}",
    "testName" : "test13"
  },
  "test01" : {
    "methodSignature" : "public double getSupportUpperBound()",
    "methodName" : "getSupportUpperBound",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution((-675.9794592268), 0.0, 0.0);\n    double double0 = uniformRealDistribution0.sample();\n    uniformRealDistribution0.getSupportUpperBound();\n}",
    "testName" : "test01"
  },
  "test12" : {
    "methodSignature" : "public boolean isSupportConnected()",
    "methodName" : "isSupportConnected",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution();\n    double double0 = uniformRealDistribution0.inverseCumulativeProbability(1.0E-6);\n    uniformRealDistribution0.isSupportConnected();\n}",
    "testName" : "test12"
  },
  "test00" : {
    "methodSignature" : "public double sample()",
    "methodName" : "sample",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution((-675.9794592268), 0.0, 0.0);\n    double double0 = uniformRealDistribution0.sample();\n}",
    "testName" : "test00"
  },
  "test210" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test210() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution();\n    boolean boolean0 = uniformRealDistribution0.isSupportUpperBoundInclusive();\n    uniformRealDistribution0.getNumericalMean();\n}",
    "testName" : "test210"
  },
  "test29" : {
    "methodSignature" : "public boolean isSupportUpperBoundInclusive()",
    "methodName" : "isSupportUpperBoundInclusive",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test29() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution();\n    boolean boolean0 = uniformRealDistribution0.isSupportUpperBoundInclusive();\n}",
    "testName" : "test29"
  },
  "test17" : {
    "methodSignature" : "public double getSupportLowerBound()",
    "methodName" : "getSupportLowerBound",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test17() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution();\n    double double0 = uniformRealDistribution0.inverseCumulativeProbability(1.0E-6);\n    uniformRealDistribution0.getSupportLowerBound();\n}",
    "testName" : "test17"
  },
  "test28" : {
    "methodSignature" : "public double getSupportLowerBound()",
    "methodName" : "getSupportLowerBound",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test28() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution();\n    boolean boolean0 = uniformRealDistribution0.isSupportUpperBoundInclusive();\n    uniformRealDistribution0.getSupportLowerBound();\n}",
    "testName" : "test28"
  },
  "test822" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test822() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution((-675.9794592268), 0.0, 0.0);\n    uniformRealDistribution0.probability(2687.229247, 2687.229247);\n    uniformRealDistribution0.getNumericalMean();\n}",
    "testName" : "test822"
  },
  "test515" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test515() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution();\n    double double0 = uniformRealDistribution0.density((-1442.257006783594));\n    uniformRealDistribution0.getNumericalMean();\n}",
    "testName" : "test515"
  },
  "test721" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test721() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution((-1442.257006783594), 0.08333333333333333, 121.928);\n    double double0 = uniformRealDistribution0.density(1.0);\n    uniformRealDistribution0.getNumericalMean();\n}",
    "testName" : "test721"
  },
  "test414" : {
    "methodSignature" : "public UniformRealDistribution(double lower, double upper) throws NumberIsTooLargeException",
    "methodName" : "UniformRealDistribution",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test414() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = null;\n    uniformRealDistribution0 = new UniformRealDistribution(223.0646342768073, 223.0646342768073);\n}",
    "testName" : "test414"
  },
  "test312" : {
    "methodSignature" : "public boolean isSupportLowerBoundInclusive()",
    "methodName" : "isSupportLowerBoundInclusive",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test312() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution();\n    boolean boolean0 = uniformRealDistribution0.isSupportLowerBoundInclusive();\n}",
    "testName" : "test312"
  },
  "test313" : {
    "methodSignature" : "public double getSupportLowerBound()",
    "methodName" : "getSupportLowerBound",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test313() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution();\n    boolean boolean0 = uniformRealDistribution0.isSupportLowerBoundInclusive();\n    uniformRealDistribution0.getSupportLowerBound();\n}",
    "testName" : "test313"
  },
  "test720" : {
    "methodSignature" : "public double density(double x)",
    "methodName" : "density",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test720() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution((-1442.257006783594), 0.08333333333333333, 121.928);\n    double double0 = uniformRealDistribution0.density(1.0);\n}",
    "testName" : "test720"
  },
  "test311" : {
    "methodSignature" : "public double getNumericalVariance()",
    "methodName" : "getNumericalVariance",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test311() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution();\n    boolean boolean0 = uniformRealDistribution0.isSupportLowerBoundInclusive();\n    uniformRealDistribution0.getNumericalVariance();\n}",
    "testName" : "test311"
  },
  "test619" : {
    "methodSignature" : "public double getSupportLowerBound()",
    "methodName" : "getSupportLowerBound",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test619() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution();\n    double double0 = uniformRealDistribution0.density(0.0);\n    uniformRealDistribution0.getSupportLowerBound();\n}",
    "testName" : "test619"
  },
  "test618" : {
    "methodSignature" : "public double density(double x)",
    "methodName" : "density",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test618() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution();\n    double double0 = uniformRealDistribution0.density(0.0);\n}",
    "testName" : "test618"
  },
  "test516" : {
    "methodSignature" : "public double density(double x)",
    "methodName" : "density",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test516() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution();\n    double double0 = uniformRealDistribution0.density((-1442.257006783594));\n}",
    "testName" : "test516"
  },
  "test517" : {
    "methodSignature" : "public double getSupportLowerBound()",
    "methodName" : "getSupportLowerBound",
    "className" : "org.apache.commons.math3.distribution.UniformRealDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test517() throws Throwable {\n    UniformRealDistribution uniformRealDistribution0 = new UniformRealDistribution();\n    double double0 = uniformRealDistribution0.density((-1442.257006783594));\n    uniformRealDistribution0.getSupportLowerBound();\n}",
    "testName" : "test517"
  }
}