org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test000() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(1785.980494615, 227.421396);
    Ceil ceil0 = new Ceil();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(1024, (UnivariateRealFunction) ceil0, (-4088.1339917), (double) 1024, allowedSolution0);
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test012() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-6723.93));
    Abs abs0 = new Abs();
    double double0 = illinoisSolver0.solve(414, (UnivariateRealFunction) abs0, 0.15623792920103693, 0.0);
    illinoisSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test013() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-6723.93));
    Abs abs0 = new Abs();
    double double0 = illinoisSolver0.solve(414, (UnivariateRealFunction) abs0, 0.15623792920103693, 0.0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test024() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-864.2), (-2125.2));
    Log1p log1p0 = new Log1p();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = illinoisSolver0.solve(2, (UnivariateRealFunction) log1p0, 0.0, (double) 2, 2012.456450328, allowedSolution0);
    illinoisSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test036() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver();
    Gaussian gaussian0 = new Gaussian();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(215, (UnivariateRealFunction) gaussian0, (-219.1901488425366), (-219.1901488425366), (double) 215, allowedSolution0);
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test048() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver();
    Gaussian gaussian0 = new Gaussian((-7.650976138217585), 25);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    double double0 = pegasusSolver0.solve(25, univariateRealFunction0, (-808.9), (double) 25, (-7.650976138217585));
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test0510() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
    double double0 = regulaFalsiSolver0.doSolve();
    regulaFalsiSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test0512() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
    double double0 = regulaFalsiSolver0.doSolve();
    regulaFalsiSolver0.getMax();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test0613() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
    pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
    double double0 = pegasusSolver0.doSolve();
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test0715() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    pegasusSolver0.solve(3333, (UnivariateRealFunction) sigmoid0, (-2993.2715265), 549.77032, allowedSolution0);
    double double0 = pegasusSolver0.doSolve();
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test1827() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, 2725.29567932);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, (double) 5, (double) 5, allowedSolution0);
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test1929() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, 2725.29567932);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, (double) 5, (double) 5, allowedSolution0);
    pegasusSolver0.getMin();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test2031() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, 2725.29567932);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = pegasusSolver0.solve(7, (UnivariateRealFunction) sinc0, 1.0E-6, 2725.29567932, 2725.29567932, allowedSolution0);
    pegasusSolver0.getMin();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test2133() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2714.955898046835, 2714.955898046835);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 0.7784825085259628, 952.6424587944366, 952.6424587944366, allowedSolution0);
    pegasusSolver0.getMin();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test2235() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, 2725.29567932);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
    double double0 = pegasusSolver0.solve(7, (UnivariateRealFunction) sinc0, (double) 7, 2725.29567932, allowedSolution0);
    pegasusSolver0.getMin();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test2337() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07738), 3128.7, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-2.705217036836349), 951.92584075, 951.92584075, allowedSolution0);
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test2439() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-2.705217036836349), 951.92584075, 951.92584075, allowedSolution0);
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test2541() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462));
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
    double double0 = pegasusSolver0.solve(18, (UnivariateRealFunction) sinc0, 1.0E-6, (double) 18, (double) 18, allowedSolution0);
    pegasusSolver0.getMin();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test2643() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-808.9), 1024.0, 1055.616);
    pegasusSolver0.getMax();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test2745() throws Throwable {
    RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    Signum signum0 = new Signum();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = regulaFalsiSolver0.solve(1074, (UnivariateRealFunction) signum0, (-1352.308), (double) 1074, allowedSolution0);
    regulaFalsiSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test2847() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-2814.358572557852), (-1240.9191091528942));
    Sinh sinh0 = new Sinh();
    illinoisSolver0.solve(1255, (UnivariateRealFunction) sinh0, (-2814.358572557852), 2426.81716056);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test3049() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, 2725.29567932);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(7, (UnivariateRealFunction) sinc0, (double) 7, 2725.29567932, allowedSolution0);
    pegasusSolver0.getMin();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test3151() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Sinc sinc0 = new Sinc();
    AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
    double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, (double) 5, (double) 5, allowedSolution0);
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test3354() throws Throwable {
    PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    Floor floor0 = new Floor();
    double double0 = pegasusSolver0.solve(793, (UnivariateRealFunction) floor0, (double) 793, 1.0E-6, (double) 793);
    pegasusSolver0.getStartValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.analysis.solvers.BaseSecantSolver,@Test(timeout = 4000)
public void test3456() throws Throwable {
    IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
    Identity identity0 = new Identity();
    AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
    double double0 = illinoisSolver0.solve(2462, (UnivariateRealFunction) identity0, (-1.5707963267948966), 2594214.935144661, allowedSolution0);
    illinoisSolver0.getMax();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
