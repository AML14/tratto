{
  "test1015" : {
    "methodSignature" : "public double getSafety()",
    "methodName" : "getSafety",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1015() throws Throwable {\n    double[] doubleArray0 = new double[1];\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-2473.63036006), 573.13, doubleArray0, doubleArray0);\n    dormandPrince54Integrator0.getSafety();\n}",
    "testName" : "test1015"
  },
  "test1016" : {
    "methodSignature" : "public double getSafety()",
    "methodName" : "getSafety",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1016() throws Throwable {\n    double[] doubleArray0 = new double[1];\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-2473.63036006), 573.13, doubleArray0, doubleArray0);\n    dormandPrince54Integrator0.setSafety(0.0);\n    double double0 = dormandPrince54Integrator0.getSafety();\n}",
    "testName" : "test1016"
  },
  "test011" : {
    "methodSignature" : "public int getEvaluations()",
    "methodName" : "getEvaluations",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(958.3823, 958.3823, 958.3823, (-6.179694156470946));\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(2).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    double[] doubleArray0 = new double[4];\n    dormandPrince54Integrator0.integrate(firstOrderConverter0, (-6.179694156470946), doubleArray0, 0.0, doubleArray0);\n    dormandPrince54Integrator0.getEvaluations();\n}",
    "testName" : "test011"
  },
  "test1319" : {
    "methodSignature" : "public double getMaxGrowth()",
    "methodName" : "getMaxGrowth",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1319() throws Throwable {\n    double[] doubleArray0 = new double[9];\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-3004.8064), (-3004.8064), doubleArray0, doubleArray0);\n    double double0 = highamHall54Integrator0.getMaxGrowth();\n}",
    "testName" : "test1319"
  },
  "test034" : {
    "methodSignature" : "public double getMaxGrowth()",
    "methodName" : "getMaxGrowth",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    double[] doubleArray0 = new double[1];\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-547.75788), (-7.35), doubleArray0, doubleArray0);\n    highamHall54Integrator0.getOrder();\n    highamHall54Integrator0.getMaxGrowth();\n}",
    "testName" : "test034"
  },
  "test1117" : {
    "methodSignature" : "public double integrate(final FirstOrderDifferentialEquations equations, final double t0, final double[] y0, final double t, final double[] y) throws DerivativeException, IntegratorException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1117() throws Throwable {\n    double[] doubleArray0 = new double[0];\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(2602.0188660334, 0.0, doubleArray0, doubleArray0);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());\n    highamHall54Integrator0.addEventHandler(eventHandler0, 6579.906, (-783.025116643216), 951);\n    // Undeclared exception!\n    highamHall54Integrator0.integrate(firstOrderConverter0, 0.0, doubleArray0, (-2561.6749248379533), doubleArray0);\n}",
    "testName" : "test1117"
  },
  "test1218" : {
    "methodSignature" : "public int getEvaluations()",
    "methodName" : "getEvaluations",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1218() throws Throwable {\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(958.3823, 958.3823, 958.3823, 958.3823);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(2).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    double[] doubleArray0 = new double[4];\n    double[] doubleArray1 = new double[4];\n    dormandPrince54Integrator0.integrate(firstOrderConverter0, 958.3823, doubleArray0, 3831.9243024, doubleArray1);\n    dormandPrince54Integrator0.getEvaluations();\n}",
    "testName" : "test1218"
  },
  "test048" : {
    "methodSignature" : "public double getMinReduction()",
    "methodName" : "getMinReduction",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test048() throws Throwable {\n    double[] doubleArray0 = new double[7];\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(0.0, 0.0, doubleArray0, doubleArray0);\n    dormandPrince54Integrator0.setMinReduction(0.0);\n    double double0 = dormandPrince54Integrator0.getMinReduction();\n}",
    "testName" : "test048"
  },
  "test047" : {
    "methodSignature" : "public double getMinReduction()",
    "methodName" : "getMinReduction",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test047() throws Throwable {\n    double[] doubleArray0 = new double[7];\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(0.0, 0.0, doubleArray0, doubleArray0);\n    dormandPrince54Integrator0.getMinReduction();\n}",
    "testName" : "test047"
  },
  "test1422" : {
    "methodSignature" : "public double getMinReduction()",
    "methodName" : "getMinReduction",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1422() throws Throwable {\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(1643.914493, 1643.914493, (-1368.3), (-1368.3));\n    double double0 = highamHall54Integrator0.getMinReduction();\n}",
    "testName" : "test1422"
  },
  "test1423" : {
    "methodSignature" : "public double getSafety()",
    "methodName" : "getSafety",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1423() throws Throwable {\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(1643.914493, 1643.914493, (-1368.3), (-1368.3));\n    double double0 = highamHall54Integrator0.getMinReduction();\n    highamHall54Integrator0.getSafety();\n}",
    "testName" : "test1423"
  },
  "test0610" : {
    "methodSignature" : "public double getMaxGrowth()",
    "methodName" : "getMaxGrowth",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0610() throws Throwable {\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(10.0, (-2333.907148752371), (-1151.70847888), (-2826.589577));\n    dormandPrince54Integrator0.setMaxGrowth((-2629.544768));\n    double double0 = dormandPrince54Integrator0.getMaxGrowth();\n}",
    "testName" : "test0610"
  },
  "test1424" : {
    "methodSignature" : "public double getMaxGrowth()",
    "methodName" : "getMaxGrowth",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1424() throws Throwable {\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(1643.914493, 1643.914493, (-1368.3), (-1368.3));\n    double double0 = highamHall54Integrator0.getMinReduction();\n    highamHall54Integrator0.getMaxGrowth();\n}",
    "testName" : "test1424"
  },
  "test1320" : {
    "methodSignature" : "public double getMinReduction()",
    "methodName" : "getMinReduction",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1320() throws Throwable {\n    double[] doubleArray0 = new double[9];\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-3004.8064), (-3004.8064), doubleArray0, doubleArray0);\n    double double0 = highamHall54Integrator0.getMaxGrowth();\n    highamHall54Integrator0.getMinReduction();\n}",
    "testName" : "test1320"
  },
  "test1321" : {
    "methodSignature" : "public double getSafety()",
    "methodName" : "getSafety",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1321() throws Throwable {\n    double[] doubleArray0 = new double[9];\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-3004.8064), (-3004.8064), doubleArray0, doubleArray0);\n    double double0 = highamHall54Integrator0.getMaxGrowth();\n    highamHall54Integrator0.getSafety();\n}",
    "testName" : "test1321"
  },
  "test000" : {
    "methodSignature" : "public double integrate(final FirstOrderDifferentialEquations equations, final double t0, final double[] y0, final double t, final double[] y) throws DerivativeException, IntegratorException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    double[] doubleArray0 = new double[0];\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(408.234179, 408.234179, doubleArray0, doubleArray0);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    // Undeclared exception!\n    dormandPrince54Integrator0.integrate(firstOrderConverter0, (-186.065561), doubleArray0, 1.0, doubleArray0);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public double getSafety()",
    "methodName" : "getSafety",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(10.0, (-2333.907148752371), (-1151.70847888), (-2826.589577));\n    dormandPrince54Integrator0.getSafety();\n}",
    "testName" : "test022"
  },
  "test023" : {
    "methodSignature" : "public double getSafety()",
    "methodName" : "getSafety",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test023() throws Throwable {\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(10.0, (-2333.907148752371), (-1151.70847888), (-2826.589577));\n    dormandPrince54Integrator0.setSafety((-1151.70847888));\n    double double0 = dormandPrince54Integrator0.getSafety();\n}",
    "testName" : "test023"
  },
  "test0913" : {
    "methodSignature" : "public double getMaxGrowth()",
    "methodName" : "getMaxGrowth",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0913() throws Throwable {\n    double[] doubleArray0 = new double[1];\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-2473.63036006), 573.13, doubleArray0, doubleArray0);\n    dormandPrince54Integrator0.getMaxGrowth();\n}",
    "testName" : "test0913"
  },
  "test0914" : {
    "methodSignature" : "public double getMaxGrowth()",
    "methodName" : "getMaxGrowth",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0914() throws Throwable {\n    double[] doubleArray0 = new double[1];\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-2473.63036006), 573.13, doubleArray0, doubleArray0);\n    dormandPrince54Integrator0.setMaxGrowth(0.0);\n    double double0 = dormandPrince54Integrator0.getMaxGrowth();\n}",
    "testName" : "test0914"
  },
  "test0711" : {
    "methodSignature" : "public double integrate(final FirstOrderDifferentialEquations equations, final double t0, final double[] y0, final double t, final double[] y) throws DerivativeException, IntegratorException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0711() throws Throwable {\n    DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(510.63347, 510.63347, 510.63347, 510.63347);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    double[] doubleArray0 = new double[6];\n    dormandPrince853Integrator0.integrate(firstOrderConverter0, 510.63347, doubleArray0, 3963.8, doubleArray0);\n}",
    "testName" : "test0711"
  },
  "test1525" : {
    "methodSignature" : "public double getSafety()",
    "methodName" : "getSafety",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1525() throws Throwable {\n    double[] doubleArray0 = new double[9];\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-3004.8064), (-3004.8064), doubleArray0, doubleArray0);\n    double double0 = highamHall54Integrator0.getSafety();\n}",
    "testName" : "test1525"
  },
  "test1526" : {
    "methodSignature" : "public double getMaxGrowth()",
    "methodName" : "getMaxGrowth",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1526() throws Throwable {\n    double[] doubleArray0 = new double[9];\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-3004.8064), (-3004.8064), doubleArray0, doubleArray0);\n    double double0 = highamHall54Integrator0.getSafety();\n    highamHall54Integrator0.getMaxGrowth();\n}",
    "testName" : "test1526"
  },
  "test0812" : {
    "methodSignature" : "public double integrate(final FirstOrderDifferentialEquations equations, final double t0, final double[] y0, final double t, final double[] y) throws DerivativeException, IntegratorException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0812() throws Throwable {\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(305.07576780617, 305.07576780617, 539.627267855558, 0.0);\n    double[] doubleArray0 = new double[7];\n    dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) null, (-331.364376440207), doubleArray0, 0.0, doubleArray0);\n}",
    "testName" : "test0812"
  },
  "test1527" : {
    "methodSignature" : "public double getMinReduction()",
    "methodName" : "getMinReduction",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1527() throws Throwable {\n    double[] doubleArray0 = new double[9];\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-3004.8064), (-3004.8064), doubleArray0, doubleArray0);\n    double double0 = highamHall54Integrator0.getSafety();\n    highamHall54Integrator0.getMinReduction();\n}",
    "testName" : "test1527"
  },
  "test059" : {
    "methodSignature" : "public double getMinReduction()",
    "methodName" : "getMinReduction",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test059() throws Throwable {\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(1643.914493, 1643.914493, (-1368.3), (-1368.3));\n    highamHall54Integrator0.setMinReduction((-3.0689499459498917));\n    double double0 = highamHall54Integrator0.getMinReduction();\n}",
    "testName" : "test059"
  },
  "test035" : {
    "methodSignature" : "public double getMinReduction()",
    "methodName" : "getMinReduction",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test035() throws Throwable {\n    double[] doubleArray0 = new double[1];\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-547.75788), (-7.35), doubleArray0, doubleArray0);\n    highamHall54Integrator0.getOrder();\n    highamHall54Integrator0.getMinReduction();\n}",
    "testName" : "test035"
  },
  "test036" : {
    "methodSignature" : "public double getSafety()",
    "methodName" : "getSafety",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test036() throws Throwable {\n    double[] doubleArray0 = new double[1];\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-547.75788), (-7.35), doubleArray0, doubleArray0);\n    highamHall54Integrator0.getOrder();\n    highamHall54Integrator0.getSafety();\n}",
    "testName" : "test036"
  }
}