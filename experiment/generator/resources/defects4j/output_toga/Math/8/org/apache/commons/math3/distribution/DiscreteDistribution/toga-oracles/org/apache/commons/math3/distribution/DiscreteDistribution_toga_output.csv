project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    int[] intArray0 = new int[2];
    Well512a well512a0 = new Well512a(intArray0);
    LinkedList<Pair<Object, Double>> linkedList0 = new LinkedList<Pair<Object, Double>>();
    Double double0 = new Double(1);
    Pair<Object, Double> pair0 = new Pair<Object, Double>("""", double0);
    linkedList0.add(pair0);
    DiscreteDistribution<Object> discreteDistribution0 = new DiscreteDistribution<Object>(well512a0, linkedList0);
    try {
        discreteDistribution0.sample(0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // number of samples (0)
        //
        verifyException(""org.apache.commons.math3.distribution.DiscreteDistribution"", e);
    }
}",1,
project,0,test022,"public void test022() throws Throwable {
    LinkedList<Pair<Short, Double>> linkedList0 = new LinkedList<Pair<Short, Double>>();
    Double double0 = Double.valueOf(1639.442144482485);
    Pair<Short, Double> pair0 = new Pair<Short, Double>((Short) null, double0);
    linkedList0.add(pair0);
    DiscreteDistribution<Short> discreteDistribution0 = new DiscreteDistribution<Short>(linkedList0);
    Short short0 = discreteDistribution0.sample();
    assertNull(short0);
}",0,assertNotNull(short0)
project,0,test033,"public void test033() throws Throwable {
    LinkedList<Pair<Byte, Double>> linkedList0 = new LinkedList<Pair<Byte, Double>>();
    Double double0 = new Double(3039L);
    Pair<Byte, Double> pair0 = new Pair<Byte, Double>((Byte) null, double0);
    linkedList0.add(pair0);
    DiscreteDistribution<Byte> discreteDistribution0 = new DiscreteDistribution<Byte>(linkedList0);
    // Undeclared exception!
    try {
        discreteDistribution0.sample(389);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test044,"public void test044() throws Throwable {
    int[] intArray0 = new int[2];
    Well512a well512a0 = new Well512a(intArray0);
    LinkedList<Pair<Object, Double>> linkedList0 = new LinkedList<Pair<Object, Double>>();
    Double double0 = new Double(1015.9618516734);
    Pair<Object, Double> pair0 = new Pair<Object, Double>(intArray0[1], double0);
    linkedList0.add(pair0);
    Pair<Object, Double> pair1 = new Pair<Object, Double>("""", double0);
    linkedList0.add(pair1);
    DiscreteDistribution<Object> discreteDistribution0 = new DiscreteDistribution<Object>(well512a0, linkedList0);
    // Undeclared exception!
    try {
        discreteDistribution0.sample(2382);
        fail(""Expecting exception: ArrayStoreException"");
    } catch (ArrayStoreException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test055,"public void test055() throws Throwable {
    LinkedList<Pair<Short, Double>> linkedList0 = new LinkedList<Pair<Short, Double>>();
    Short short0 = new Short((short) 18681);
    Double double0 = new Double((short) 18681);
    Pair<Short, Double> pair0 = new Pair<Short, Double>(short0, double0);
    linkedList0.add(pair0);
    DiscreteDistribution<Short> discreteDistribution0 = new DiscreteDistribution<Short>((RandomGenerator) null, linkedList0);
    // Undeclared exception!
    try {
        discreteDistribution0.reseedRandomGenerator((-972714661));
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math3.distribution.DiscreteDistribution"", e);
    }
}",0,
project,0,test088,"public void test088() throws Throwable {
    int[] intArray0 = new int[2];
    intArray0[1] = 1;
    Well512a well512a0 = new Well512a(intArray0);
    LinkedList<Pair<Object, Double>> linkedList0 = new LinkedList<Pair<Object, Double>>();
    Double double0 = new Double(1);
    Pair<Object, Double> pair0 = new Pair<Object, Double>("""", double0);
    linkedList0.add(pair0);
    linkedList0.add(pair0);
    DiscreteDistribution<Object> discreteDistribution0 = new DiscreteDistribution<Object>(well512a0, linkedList0);
    Object object0 = discreteDistribution0.sample();
    assertEquals("""", object0);
}",0,assertNotNull(object0)
project,0,test1010,"public void test1010() throws Throwable {
    int[] intArray0 = new int[2];
    Well512a well512a0 = new Well512a(intArray0);
    LinkedList<Pair<Object, Double>> linkedList0 = new LinkedList<Pair<Object, Double>>();
    Double double0 = new Double(1);
    Pair<Object, Double> pair0 = new Pair<Object, Double>("""", double0);
    linkedList0.add(pair0);
    DiscreteDistribution<Object> discreteDistribution0 = new DiscreteDistribution<Object>(well512a0, linkedList0);
    try {
        discreteDistribution0.sample((-2454));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // number of samples (-2,454)
        //
        verifyException(""org.apache.commons.math3.distribution.DiscreteDistribution"", e);
    }
}",1,
project,0,test1111,"public void test1111() throws Throwable {
    int[] intArray0 = new int[2];
    Well512a well512a0 = new Well512a(intArray0);
    LinkedList<Pair<Object, Double>> linkedList0 = new LinkedList<Pair<Object, Double>>();
    Double double0 = new Double(1015.9618516734);
    Pair<Object, Double> pair0 = new Pair<Object, Double>(intArray0[1], double0);
    linkedList0.add(pair0);
    linkedList0.add(pair0);
    DiscreteDistribution<Object> discreteDistribution0 = new DiscreteDistribution<Object>(well512a0, linkedList0);
    Object[] objectArray0 = discreteDistribution0.sample(2382);
    assertEquals(2382, objectArray0.length);
}",1,
project,0,test1212,"public void test1212() throws Throwable {
    int[] intArray0 = new int[7];
    Well1024a well1024a0 = new Well1024a(intArray0);
    LinkedList<Pair<String, Double>> linkedList0 = new LinkedList<Pair<String, Double>>();
    Double double0 = new Double(2743.928701244215);
    Pair<String, Double> pair0 = new Pair<String, Double>(""s,$A$Zh?;NOno~"", double0);
    linkedList0.add(pair0);
    DiscreteDistribution<String> discreteDistribution0 = new DiscreteDistribution<String>(well1024a0, linkedList0);
    // Undeclared exception!
    discreteDistribution0.sample(168507691);
}",1,
project,0,test1414,"public void test1414() throws Throwable {
    int[] intArray0 = new int[7];
    Well1024a well1024a0 = new Well1024a(intArray0);
    LinkedList<Pair<String, Double>> linkedList0 = new LinkedList<Pair<String, Double>>();
    Double double0 = new Double(2743.928701244215);
    Pair<String, Double> pair0 = new Pair<String, Double>(""s,$A$Zh?;NOno~"", double0);
    linkedList0.add(pair0);
    DiscreteDistribution<String> discreteDistribution0 = new DiscreteDistribution<String>(well1024a0, linkedList0);
    double double1 = discreteDistribution0.probability(""s,$A$Zh?;NOno~"");
    assertEquals(1.0, double1, 0.01);
}",0,
project,0,test1515,"public void test1515() throws Throwable {
    int[] intArray0 = new int[7];
    Well1024a well1024a0 = new Well1024a(intArray0);
    LinkedList<Pair<String, Double>> linkedList0 = new LinkedList<Pair<String, Double>>();
    Double double0 = new Double(1019.075);
    Pair<String, Double> pair0 = new Pair<String, Double>(""s,$A$Zh?;NOno~"", double0);
    linkedList0.add(pair0);
    DiscreteDistribution<String> discreteDistribution0 = new DiscreteDistribution<String>(well1024a0, linkedList0);
    double double1 = discreteDistribution0.probability((String) null);
    assertEquals(0.0, double1, 0.01);
}",0,
project,0,test1616,"public void test1616() throws Throwable {
    int[] intArray0 = new int[7];
    Well1024a well1024a0 = new Well1024a(intArray0);
    LinkedList<Pair<String, Double>> linkedList0 = new LinkedList<Pair<String, Double>>();
    Double double0 = new Double(1019.075);
    Pair<String, Double> pair0 = new Pair<String, Double>((String) null, double0);
    linkedList0.add(pair0);
    DiscreteDistribution<String> discreteDistribution0 = new DiscreteDistribution<String>(well1024a0, linkedList0);
    double double1 = discreteDistribution0.probability((String) null);
    assertEquals(1.0, double1, 0.01);
}",0,
project,0,test1717,"public void test1717() throws Throwable {
    int[] intArray0 = new int[4];
    MersenneTwister mersenneTwister0 = new MersenneTwister(intArray0);
    LinkedList<Pair<Integer, Double>> linkedList0 = new LinkedList<Pair<Integer, Double>>();
    Double double0 = new Double(1702);
    Pair<Integer, Double> pair0 = new Pair<Integer, Double>((Integer) intArray0[1], double0);
    linkedList0.add(pair0);
    DiscreteDistribution<Integer> discreteDistribution0 = new DiscreteDistribution<Integer>(mersenneTwister0, linkedList0);
    LinkedList<Pair<Object, Double>> linkedList1 = new LinkedList<Pair<Object, Double>>();
    Pair<Object, Double> pair1 = new Pair<Object, Double>(discreteDistribution0, double0);
    linkedList1.add(pair1);
    DiscreteDistribution<Object> discreteDistribution1 = new DiscreteDistribution<Object>(linkedList1);
    Byte byte0 = new Byte((byte) (-27));
    double double1 = discreteDistribution1.probability(byte0);
    assertEquals(0.0, double1, 0.01);
}",0,
project,0,test1919,"public void test1919() throws Throwable {
    int[] intArray0 = new int[4];
    MersenneTwister mersenneTwister0 = new MersenneTwister(intArray0);
    LinkedList<Pair<Integer, Double>> linkedList0 = new LinkedList<Pair<Integer, Double>>();
    Double double0 = new Double(1702);
    Pair<Integer, Double> pair0 = new Pair<Integer, Double>((Integer) intArray0[0], double0);
    linkedList0.add(pair0);
    DiscreteDistribution<Integer> discreteDistribution0 = new DiscreteDistribution<Integer>(mersenneTwister0, linkedList0);
    discreteDistribution0.reseedRandomGenerator(0L);
}",0,
