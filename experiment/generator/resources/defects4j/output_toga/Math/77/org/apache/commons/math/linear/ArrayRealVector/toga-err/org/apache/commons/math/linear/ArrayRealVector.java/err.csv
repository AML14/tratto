org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test0011() throws Throwable {
    double[] doubleArray0 = new double[9];
    doubleArray0[0] = (double) 20;
    doubleArray0[1] = (double) 20;
    doubleArray0[2] = (double) 20;
    doubleArray0[3] = (double) 20;
    doubleArray0[5] = (double) 20;
    doubleArray0[6] = (double) 20;
    doubleArray0[7] = (double) 20;
    doubleArray0[8] = (double) 20;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test0044() throws Throwable {
    Double[] doubleArray0 = new Double[1];
    Double double0 = new Double(0.0);
    doubleArray0[0] = double0;
    Double.isFinite(0.0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_77b/src/main/java/java/lang/Double.java
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test01515() throws Throwable {
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, arrayRealVector0);
    ArrayRealVector arrayRealVector2 = new ArrayRealVector(arrayRealVector1, arrayRealVector0);
    ArrayRealVector arrayRealVector3 = new ArrayRealVector(arrayRealVector2);
    int int0 = (-1504);
    double[] doubleArray0 = new double[4];
    doubleArray0[0] = (double) 0;
    doubleArray0[1] = (double) (-1504);
    arrayRealVector3.unitize();
    doubleArray0[2] = (double) int0;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test01717() throws Throwable {
    ArrayRealVector arrayRealVector0 = new ArrayRealVector((Double[]) null);
    boolean boolean0 = false;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test02626() throws Throwable {
    Double[] doubleArray0 = new Double[1];
    Double double0 = new Double(0.0);
    doubleArray0[0] = double0;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, (-2070), 0);
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, arrayRealVector0);
    ArrayRealVector arrayRealVector2 = arrayRealVector0.ebeDivide(arrayRealVector1);
    arrayRealVector2.mapAcos();
    arrayRealVector2.mapTanToSelf();
    int int0 = 0;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test02828() throws Throwable {
    ArrayRealVector arrayRealVector0 = new ArrayRealVector((double[]) null, false);
    int int0 = (-347);
    arrayRealVector0.checkIndex(int0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test03030() throws Throwable {
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = (-613.0005126029037);
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, true);
    RealVector realVector0 = arrayRealVector0.mapAtan();
    realVector0.getDistance(doubleArray0);
    arrayRealVector0.checkIndex(3515);
    arrayRealVector0.getL1Norm();
    RealVector realVector1 = arrayRealVector0.append(doubleArray0);
    realVector1.mapTanToSelf();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test04242() throws Throwable {
    ArrayRealVector arrayRealVector0 = new ArrayRealVector((RealVector) null);
    double double0 = (-1057.4623704541);
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test04646() throws Throwable {
    ArrayRealVector arrayRealVector0 = new ArrayRealVector();
    RealVector realVector0 = arrayRealVector0.mapUlp();
    arrayRealVector0.mapTanh();
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = (-1.0);
    arrayRealVector0.append(doubleArray0);
    arrayRealVector0.isInfinite();
    arrayRealVector0.mapSinh();
    arrayRealVector0.copy();
    arrayRealVector0.dotProduct(realVector0);
    RealVector realVector1 = arrayRealVector0.mapCosToSelf();
    arrayRealVector0.ebeDivide(realVector1);
    int int0 = 0;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test05252() throws Throwable {
    Double[] doubleArray0 = new Double[7];
    Double double0 = new Double(0.0);
    doubleArray0[0] = double0;
    Double double1 = new Double(0.0);
    doubleArray0[1] = double1;
    Double double2 = new Double(0.0);
    doubleArray0[2] = double2;
    double double3 = (-13.14197821102886);
    Double double4 = new Double((-13.14197821102886));
    doubleArray0[3] = double4;
    Double double5 = new Double((double) doubleArray0[2]);
    doubleArray0[4] = double5;
    Double double6 = new Double(0.0);
    doubleArray0[5] = double6;
    Double double7 = new Double((double) doubleArray0[2]);
    doubleArray0[6] = double7;
    int int0 = (-2);
    int int1 = 3140;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, (-2), 3140);
    double[] doubleArray1 = new double[8];
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test05454() throws Throwable {
    Double[] doubleArray0 = new Double[2];
    Double double0 = new Double(Double.POSITIVE_INFINITY);
    doubleArray0[0] = double0;
    Double double1 = new Double(0.0);
    Double.sum(Double.POSITIVE_INFINITY, (double) doubleArray0[0]);
    doubleArray0[1] = double1;
    Double.max(888.8365772, Double.POSITIVE_INFINITY);
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
    Double.isFinite(0.0);
    int int0 = 2155;
    double[] doubleArray1 = new double[4];
    doubleArray1[0] = 0.0;
    doubleArray1[1] = 0.0;
    Double.min(0.0, (-861.3622));
    doubleArray1[2] = (double) doubleArray0[1];
    arrayRealVector0.mapSinh();
    Double.isFinite((-2682.7864675329283));
    double double2 = 0.0;
    arrayRealVector0.sparseIterator();
    doubleArray1[3] = 0.0;
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray1);
    arrayRealVector0.setSubVector(2155, (RealVector) arrayRealVector1);
    arrayRealVector1.mapAtan();
    double double3 = (-1634.82346944388);
    Double.isFinite(double3);
    arrayRealVector0.getDistance(arrayRealVector1);
    double double4 = 0.0;
    Double.isFinite(double4);
    Double.max(double2, doubleArray1[2]);
    double double5 = (-3285.07681766);
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test06060() throws Throwable {
    double[] doubleArray0 = new double[3];
    doubleArray0[0] = (-2360.519185976723);
    doubleArray0[1] = 0.0;
    doubleArray0[2] = 0.0;
    ArrayRealVector arrayRealVector0 = null;
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(doubleArray0, (ArrayRealVector) null);
    ArrayRealVector arrayRealVector2 = new ArrayRealVector((RealVector) arrayRealVector1, arrayRealVector1);
    arrayRealVector1.getDistance(doubleArray0);
    int int0 = 0;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test06464() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = 0.0;
    doubleArray0[1] = (-1.0);
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(2, (-937.682037205));
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(doubleArray0, arrayRealVector0);
    arrayRealVector0.getL1Distance(arrayRealVector1);
    arrayRealVector0.getL1Distance(arrayRealVector1);
    arrayRealVector0.mapExpm1();
    arrayRealVector1.unitVector();
    arrayRealVector1.mapCbrt();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test06666() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(11);
    ArrayRealVector arrayRealVector0 = null;
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(openMapRealVector0, (ArrayRealVector) null);
    openMapRealVector0.checkVectorDimensions(arrayRealVector0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test06868() throws Throwable {
    ArrayRealVector arrayRealVector0 = new ArrayRealVector();
    double[] doubleArray0 = new double[4];
    doubleArray0[0] = Double.POSITIVE_INFINITY;
    doubleArray0[1] = 0.0;
    doubleArray0[2] = 0.0;
    doubleArray0[3] = 1.0;
    arrayRealVector0.outerProduct(doubleArray0);
    arrayRealVector0.mapAsinToSelf();
    arrayRealVector0.toArray();
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
    arrayRealVector1.iterator();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test07070() throws Throwable {
    Double[] doubleArray0 = new Double[1];
    double double0 = 0.0;
    Double double1 = new Double(0.0);
    doubleArray0[0] = double1;
    Double.isFinite((-529.2609320932));
    int int0 = 0;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
    arrayRealVector0.mapAcos();
    arrayRealVector0.getL1Norm();
    double[] doubleArray1 = new double[5];
    doubleArray1[0] = (double) 0;
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray1);
    arrayRealVector0.getLInfDistance(arrayRealVector1);
    doubleArray1[1] = double0;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test07272() throws Throwable {
    double[] doubleArray0 = null;
    int int0 = 749;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector((double[]) null, 749, 0);
    arrayRealVector0.mapPow(int0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test07373() throws Throwable {
    double[] doubleArray0 = new double[6];
    double double0 = (-1786.816);
    doubleArray0[0] = (-1786.816);
    doubleArray0[1] = 1.0;
    doubleArray0[2] = (-1052.361);
    doubleArray0[3] = 0.0;
    double double1 = (-1315.875487);
    doubleArray0[4] = (-1315.875487);
    doubleArray0[5] = 2878.799066;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
    arrayRealVector0.mapUlp();
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, true);
    arrayRealVector0.getLInfDistance(arrayRealVector1);
    arrayRealVector0.sparseIterator();
    int int0 = 353;
    arrayRealVector0.checkIndex(353);
    arrayRealVector0.dotProduct(doubleArray0);
    arrayRealVector0.ebeMultiply(doubleArray0);
    int int1 = (-2277);
    ArrayRealVector arrayRealVector2 = null;
    arrayRealVector0.sparseIterator();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test08989() throws Throwable {
    int int0 = 0;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
    arrayRealVector0.mapAcosToSelf();
    arrayRealVector0.mapCeil();
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(0, 0);
    arrayRealVector1.mapAbs();
    arrayRealVector1.getL1Distance((RealVector) null);
    arrayRealVector1.checkIndex(int0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test09292() throws Throwable {
    ArrayRealVector arrayRealVector0 = new ArrayRealVector((ArrayRealVector) null, true);
    ArrayRealVector arrayRealVector1 = new ArrayRealVector();
    int int0 = (-3113);
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test103103() throws Throwable {
    double[] doubleArray0 = new double[3];
    doubleArray0[0] = (-1.0);
    doubleArray0[1] = 2587.4380300184325;
    doubleArray0[2] = 0.0;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
    arrayRealVector0.append(2587.4380300184325);
    RealVector realVector0 = arrayRealVector0.mapExp();
    arrayRealVector0.hashCode();
    arrayRealVector0.getLInfDistance(realVector0);
    arrayRealVector0.isNaN();
    arrayRealVector0.data = doubleArray0;
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(doubleArray0, arrayRealVector0);
    arrayRealVector1.add(arrayRealVector0);
    arrayRealVector1.append((RealVector) arrayRealVector0);
    double double0 = (-1395.828743020574);
    arrayRealVector1.mapDivide(double0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test104104() throws Throwable {
    double[] doubleArray0 = new double[0];
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, true);
    int int0 = (-2836);
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test105105() throws Throwable {
    ArrayRealVector arrayRealVector0 = new ArrayRealVector();
    RealVector realVector0 = arrayRealVector0.mapAcosToSelf();
    double double0 = arrayRealVector0.getL1Distance(realVector0);
    arrayRealVector0.getDataRef();
    double[] doubleArray0 = new double[5];
    doubleArray0[0] = 0.0;
    arrayRealVector0.mapAsin();
    doubleArray0[1] = 0.0;
    arrayRealVector0.sparseIterator();
    doubleArray0[2] = double0;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test106106() throws Throwable {
    ArrayRealVector arrayRealVector0 = new ArrayRealVector();
    arrayRealVector0.hashCode();
    double[] doubleArray0 = new double[2];
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, arrayRealVector0);
    arrayRealVector0.dotProduct(arrayRealVector1);
    arrayRealVector0.mapInv();
    double double0 = (-1.0);
    arrayRealVector0.sparseIterator();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test108108() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = (-2773.93665084178);
    double double0 = (-1.0);
    doubleArray0[1] = (-1.0);
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, false);
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, false);
    ArrayRealVector arrayRealVector2 = arrayRealVector0.subtract(arrayRealVector1);
    ArrayRealVector arrayRealVector3 = new ArrayRealVector(arrayRealVector0, arrayRealVector0);
    arrayRealVector3.mapAsinToSelf();
    int int0 = 2;
    arrayRealVector3.checkVectorDimensions(2);
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    arrayRealVector0.ebeDivide(arrayRealVector2);
    polynomialFunction0.derivative();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test112112() throws Throwable {
    double[] doubleArray0 = new double[3];
    double double0 = 0.0;
    doubleArray0[0] = 0.0;
    double double1 = (-1.0);
    doubleArray0[1] = (-1.0);
    doubleArray0[2] = 4.376826;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray0);
    arrayRealVector0.sparseIterator();
    double[] doubleArray1 = new double[7];
    doubleArray1[0] = (-1.0);
    arrayRealVector0.subtract((ArrayRealVector) null);
    doubleArray1[1] = double1;
    doubleArray1[2] = double1;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test113113() throws Throwable {
    ArrayRealVector arrayRealVector0 = new ArrayRealVector((ArrayRealVector) null, (RealVector) null);
    double double0 = 2884.5836712024534;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test114114() throws Throwable {
    ArrayRealVector arrayRealVector0 = new ArrayRealVector();
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0);
    double[] doubleArray0 = new double[0];
    arrayRealVector0.getLInfDistance(doubleArray0);
    arrayRealVector0.checkVectorDimensions(5);
    arrayRealVector0.mapSqrt();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test116116() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-522));
    openMapRealVector0.mapFloorToSelf();
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(openMapRealVector0);
    arrayRealVector0.sparseIterator();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test119119() throws Throwable {
    Double[] doubleArray0 = new Double[5];
    Double double0 = Double.valueOf(1141.288969656497);
    doubleArray0[0] = double0;
    double double1 = 1577.63635433;
    Double double2 = new Double(1577.63635433);
    doubleArray0[1] = double2;
    Double double3 = new Double((double) doubleArray0[1]);
    Double.isFinite((double) doubleArray0[0]);
    doubleArray0[2] = double3;
    Double double4 = new Double(1577.63635433);
    doubleArray0[3] = double4;
    Double double5 = new Double(1697.834);
    Double.min((-1385.522647566323), 0.0);
    doubleArray0[4] = double5;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, arrayRealVector0);
    arrayRealVector1.getL1Distance((RealVector) arrayRealVector0);
    Double.isFinite(double1);
    double double6 = 0.0;
    Double.sum((double) doubleArray0[1], double6);
    arrayRealVector1.mapLog();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test126126() throws Throwable {
    Double[] doubleArray0 = new Double[2];
    Double double0 = new Double((-32.17237810406));
    doubleArray0[0] = double0;
    Double double1 = new Double((double) doubleArray0[0]);
    doubleArray0[1] = double1;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
    double[] doubleArray1 = null;
    Double.min((-32.17237810406), (-315.2268951354583));
    Double.sum((-32.17237810406), (double) doubleArray0[1]);
    arrayRealVector0.ebeMultiply((double[]) null);
    double double2 = (-679.0);
    double double3 = (-989.7);
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test136136() throws Throwable {
    Double[] doubleArray0 = new Double[4];
    Double double0 = new Double(1.0E-12);
    doubleArray0[0] = double0;
    Double double1 = new Double(1.0E-12);
    doubleArray0[1] = double1;
    Double double2 = new Double((-1998.6));
    doubleArray0[2] = double2;
    Double.min(1.0E-12, (double) doubleArray0[2]);
    Double double3 = new Double(1548.39);
    doubleArray0[3] = double3;
    int int0 = 0;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector();
    arrayRealVector0.mapCosToSelf();
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0);
    arrayRealVector0.getLInfDistance((RealVector) arrayRealVector1);
    double double4 = Double.sum(1548.39, 0);
    AbstractRealVector abstractRealVector0 = arrayRealVector0.copy();
    ArrayRealVector arrayRealVector2 = new ArrayRealVector(abstractRealVector0, arrayRealVector0);
    arrayRealVector2.mapSignumToSelf();
    arrayRealVector0.getNorm();
    arrayRealVector2.toString();
    arrayRealVector2.mapLogToSelf();
    arrayRealVector2.ebeMultiply((RealVector) arrayRealVector0);
    arrayRealVector2.dotProduct(arrayRealVector0);
    double[] doubleArray1 = new double[3];
    doubleArray1[0] = double4;
    doubleArray1[1] = (double) int0;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math.linear.ArrayRealVector,@Test(timeout = 4000)
public void test137137() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(1655, 1655);
    double[] doubleArray0 = new double[5];
    doubleArray0[0] = 1.0E-12;
    doubleArray0[1] = 1.0E-12;
    doubleArray0[2] = (double) 1655;
    doubleArray0[3] = (double) 1655;
    doubleArray0[4] = (double) 1655;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray0);
    arrayRealVector0.getLInfDistance((RealVector) openMapRealVector0);
    arrayRealVector0.mapSinh();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
