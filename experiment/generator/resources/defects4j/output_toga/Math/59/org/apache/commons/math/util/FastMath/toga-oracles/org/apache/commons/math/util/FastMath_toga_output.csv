project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    float float0 = FastMath.max((float) 1610087935, (float) 1610087935);
    assertEquals(1.61008794E9F, float0, 0.01F);
}",0,
project,0,test0011,"public void test0011() throws Throwable {
    long long0 = FastMath.max((-1L), 767L);
    assertEquals(767L, long0);
}",0,"assertEquals(0, long0)"
project,0,test0022,"public void test0022() throws Throwable {
    double double0 = FastMath.min(1.2958646899018938E-9, 1.2958646899018938E-9);
    assertEquals(1.2958646899018938E-9, double0, 0.01);
}",0,
project,0,test0033,"public void test0033() throws Throwable {
    float float0 = FastMath.min((-1.0F), 0.0F);
    assertEquals((-1.0F), float0, 0.01F);
}",0,
project,0,test0044,"public void test0044() throws Throwable {
    long long0 = FastMath.min(0L, 0L);
    assertEquals(0L, long0);
}",0,"assertEquals(0, long0)"
project,0,test0055,"public void test0055() throws Throwable {
    double double0 = FastMath.floor((-4.503599627370496E15));
    assertEquals((-4.503599627370496E15), double0, 0.01);
}",0,
project,0,test0066,"public void test0066() throws Throwable {
    double double0 = FastMath.nextAfter((-0.8813735870195429), (-0.8813735870195429));
    assertEquals((-0.881373587019543), double0, 0.01);
}",0,
project,0,test0077,"public void test0077() throws Throwable {
    double double0 = FastMath.atan2(0.0F, 3.4620039155736807E-7);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test0088,"public void test0088() throws Throwable {
    double double0 = FastMath.tan(1.5707963267948966);
    assertEquals(1.633123935319537E16, double0, 0.01);
}",0,
project,0,test0099,"public void test0099() throws Throwable {
    double double0 = FastMath.tan(3294198.0);
    assertEquals((-0.7734333808731876), double0, 0.01);
}",0,
project,0,test01010,"public void test01010() throws Throwable {
    double double0 = FastMath.cos(3294198.0);
    assertEquals(0.7910146852024715, double0, 0.01);
}",0,
project,0,test01111,"public void test01111() throws Throwable {
    double double0 = FastMath.cos(0.0);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test01212,"public void test01212() throws Throwable {
    double double0 = FastMath.sin(3294198.0);
    assertEquals((-0.6117971622964877), double0, 0.01);
}",0,
project,0,test01313,"public void test01313() throws Throwable {
    double double0 = FastMath.sin(3.2485117458075736E278);
    assertEquals(0.9674687945516579, double0, 0.01);
}",0,
project,0,test01414,"public void test01414() throws Throwable {
    double double0 = FastMath.expm1(1.0);
    assertEquals(1.7182818284590453, double0, 0.01);
}",0,
project,0,test01515,"public void test01515() throws Throwable {
    double double0 = FastMath.expm1((-1.0));
    assertEquals((-0.6321205588285577), double0, 0.01);
}",0,
project,0,test01616,"public void test01616() throws Throwable {
    double double0 = FastMath.tanh((-20.0));
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test01717,"public void test01717() throws Throwable {
    double double0 = FastMath.sinh((-20.0));
    assertEquals((-2.4258259770489514E8), double0, 0.01);
}",0,
project,0,test01818,"public void test01818() throws Throwable {
    double double0 = FastMath.cosh(0.0);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test01919,"public void test01919() throws Throwable {
    double double0 = FastMath.toRadians(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test02020,"public void test02020() throws Throwable {
    double double0 = FastMath.toRadians((-4460.20706341));
    assertEquals((-77.845298577212), double0, 0.01);
}",0,
project,0,test02121,"public void test02121() throws Throwable {
    double double0 = FastMath.toDegrees(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test02222,"public void test02222() throws Throwable {
    double double0 = FastMath.toDegrees((-417.574158));
    assertEquals((-23925.236887129002), double0, 0.01);
}",1,
project,0,test02323,"public void test02323() throws Throwable {
    double double0 = FastMath.sqrt(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test02424,"public void test02424() throws Throwable {
    double double0 = FastMath.sqrt(3.001117512531765E-7);
    assertEquals(5.478245624770548E-4, double0, 0.01);
}",0,
project,0,test02525,"public void test02525() throws Throwable {
    int int0 = FastMath.round((float) 0L);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test02626,"public void test02626() throws Throwable {
    int int0 = FastMath.round((float) (-1884L));
    assertEquals((-1884), int0);
}",0,"assertEquals(0, int0)"
project,0,test02727,"public void test02727() throws Throwable {
    long long0 = FastMath.round(1.2246467991473532E-16);
    assertEquals(0L, long0);
}",0,"assertEquals(1, long0)"
project,0,test02828,"public void test02828() throws Throwable {
    long long0 = FastMath.round(539.3857692181872);
    assertEquals(539L, long0);
}",0,"assertEquals(1, long0)"
project,0,test02929,"public void test02929() throws Throwable {
    double double0 = FastMath.rint((-0.05417713522911072));
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test03030,"public void test03030() throws Throwable {
    double double0 = FastMath.nextAfter((-4.9E-324), 187.384791016);
    assertEquals(-0.0, double0, 0.01);
}",0,
project,0,test03131,"public void test03131() throws Throwable {
    long long0 = FastMath.min((long) 4035, 1L);
    assertEquals(1L, long0);
}",0,"assertEquals(0, long0)"
project,0,test03232,"public void test03232() throws Throwable {
    long long0 = FastMath.min((-2572L), 0L);
    assertEquals((-2572L), long0);
}",0,"assertEquals(0, long0)"
project,0,test03333,"public void test03333() throws Throwable {
    int int0 = FastMath.min(2147477730, 2147477730);
    assertEquals(2147477730, int0);
}",0,
project,0,test03434,"public void test03434() throws Throwable {
    float float0 = FastMath.min(0.0F, (float) 0L);
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test03535,"public void test03535() throws Throwable {
    float float0 = FastMath.min(1974.7F, 1974.7F);
    assertEquals(1974.7F, float0, 0.01F);
}",0,
project,0,test03636,"public void test03636() throws Throwable {
    double double0 = FastMath.min(729.439563, (-550.19612));
    assertEquals((-550.19612), double0, 0.01);
}",0,
project,0,test03737,"public void test03737() throws Throwable {
    long long0 = FastMath.max((-3133L), (-3133L));
    assertEquals((-3133L), long0);
}",0,"assertEquals(1, long0)"
project,0,test03838,"public void test03838() throws Throwable {
    int int0 = FastMath.max(0, 0);
    assertEquals(0, int0);
}",0,
project,0,test03939,"public void test03939() throws Throwable {
    int int0 = FastMath.max((-3649), (-3649));
    assertEquals((-3649), int0);
}",0,"assertEquals(0, int0)"
project,0,test04040,"public void test04040() throws Throwable {
    float float0 = FastMath.max(0.0F, 55.96F);
    assertEquals(55.96F, float0, 0.01F);
}",0,
project,0,test04141,"public void test04141() throws Throwable {
    double double0 = FastMath.max((double) 0L, (double) 0L);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test04242,"public void test04242() throws Throwable {
    double double0 = FastMath.log1p(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test04343,"public void test04343() throws Throwable {
    double double0 = FastMath.log10(2345.4687312242845);
    assertEquals(3.370229647495384, double0, 0.01);
}",0,
project,0,test04444,"public void test04444() throws Throwable {
    double double0 = FastMath.log10(2.404307984052299E-9);
    assertEquals((-8.619009901391752), double0, 0.01);
}",0,
project,0,test04545,"public void test04545() throws Throwable {
    double double0 = FastMath.log(1.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test04646,"public void test04646() throws Throwable {
    double double0 = FastMath.exp((-4234));
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test04747,"public void test04747() throws Throwable {
    double double0 = FastMath.ceil((-3334.19046999));
    assertEquals((-3334.0), double0, 0.01);
}",0,
project,0,test04848,"public void test04848() throws Throwable {
    double double0 = FastMath.cbrt((-3291.630575171235));
    assertEquals((-14.87545856484684), double0, 0.01);
}",0,
project,0,test04949,"public void test04949() throws Throwable {
    double double0 = FastMath.atan(0L);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test05050,"public void test05050() throws Throwable {
    double double0 = FastMath.atan(1.8508157176809257);
    assertEquals(1.0754290375762232, double0, 0.01);
}",0,
project,0,test05151,"public void test05151() throws Throwable {
    double double0 = FastMath.acosh(1.0);
    assertEquals(0.0, double0, 0.01);
}",1,
project,0,test05252,"public void test05252() throws Throwable {
    double double0 = FastMath.acosh(2163.669);
    assertEquals(8.372707797938883, double0, 0.01);
}",1,
project,0,test05353,"public void test05353() throws Throwable {
    long long0 = FastMath.abs(0L);
    assertEquals(0L, long0);
}",0,
project,0,test05454,"public void test05454() throws Throwable {
    long long0 = FastMath.abs((-9223372036854775808L));
    assertEquals((-9223372036854775808L), long0);
}",0,"assertEquals(0, long0)"
project,0,test05555,"public void test05555() throws Throwable {
    int int0 = FastMath.abs(0);
    assertEquals(0, int0);
}",0,
project,0,test05656,"public void test05656() throws Throwable {
    float float0 = FastMath.abs((float) 0L);
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test05757,"public void test05757() throws Throwable {
    double double0 = FastMath.abs((double) 0L);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test05858,"public void test05858() throws Throwable {
    double double0 = FastMath.floor(0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test05959,"public void test05959() throws Throwable {
    double double0 = FastMath.floor((-1.0));
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test06060,"public void test06060() throws Throwable {
    double double0 = FastMath.floor((-3540.46208));
    assertEquals((-3541.0), double0, 0.01);
}",0,
project,0,test06161,"public void test06161() throws Throwable {
    double double0 = FastMath.floor((-9223372036854775808L));
    assertEquals((-9.223372036854776E18), double0, 0.01);
}",0,
project,0,test06262,"public void test06262() throws Throwable {
    double double0 = FastMath.floor(1.0);
    assertEquals(1.0, double0, 0.01);
}",1,
project,0,test06363,"public void test06363() throws Throwable {
    double double0 = FastMath.floor(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test06464,"public void test06464() throws Throwable {
    double double0 = FastMath.nextAfter(14.136832902969902, 1.570796251296997);
    assertEquals(14.1368329029699, double0, 0.01);
}",0,
project,0,test06565,"public void test06565() throws Throwable {
    double double0 = FastMath.nextAfter(5.551115123125783E-17, 2.85040095144011776E17);
    assertEquals(5.551115123125784E-17, double0, 0.01);
}",1,
project,0,test06666,"public void test06666() throws Throwable {
    double double0 = FastMath.nextAfter(0.0F, 0.0);
    assertEquals(4.9E-324, double0, 0.01);
}",0,
project,0,test06767,"public void test06767() throws Throwable {
    double double0 = FastMath.abs(0.08713622391223907);
    assertEquals(0.08713622391223907, double0, 0.01);
}",0,
project,0,test06868,"public void test06868() throws Throwable {
    double double0 = FastMath.max(Double.NaN, (double) 0L);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test06969,"public void test06969() throws Throwable {
    double double0 = FastMath.max((-2294.24779888286), (-1537.2113330561938));
    assertEquals((-1537.2113330561938), double0, 0.01);
}",0,
project,0,test07070,"public void test07070() throws Throwable {
    double double0 = FastMath.max(0.39362657592563277, (double) 0.0F);
    assertEquals(0.39362657592563277, double0, 0.01);
}",0,
project,0,test07171,"public void test07171() throws Throwable {
    float float0 = FastMath.max(Float.NaN, Float.NaN);
    assertEquals(Float.NaN, float0, 0.01F);
}",0,
project,0,test07272,"public void test07272() throws Throwable {
    float float0 = FastMath.max((-982.0F), 0.0F);
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test07373,"public void test07373() throws Throwable {
    float float0 = FastMath.max(1003.90845F, (-1.0F));
    assertEquals((-1.0F), float0, 0.01F);
}",0,
project,0,test07474,"public void test07474() throws Throwable {
    long long0 = FastMath.max(0L, (-3133L));
    assertEquals(0L, long0);
}",0,"assertEquals(1, long0)"
project,0,test07575,"public void test07575() throws Throwable {
    int int0 = FastMath.max((-1), 1820);
    assertEquals(1820, int0);
}",0,"assertEquals(0, int0)"
project,0,test07676,"public void test07676() throws Throwable {
    int int0 = FastMath.max(575, (-46));
    assertEquals(575, int0);
}",0,"assertEquals(0, int0)"
project,0,test07777,"public void test07777() throws Throwable {
    double double0 = FastMath.min(Double.NaN, (-820.0391));
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test07878,"public void test07878() throws Throwable {
    double double0 = FastMath.min(488.22003, 2734.21557215);
    assertEquals(488.22003, double0, 0.01);
}",0,
project,0,test07979,"public void test07979() throws Throwable {
    double double0 = FastMath.min(3415.645784369997, 0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test08080,"public void test08080() throws Throwable {
    float float0 = FastMath.min(0.0F, (-1439.5981F));
    assertEquals((-1439.5981F), float0, 0.01F);
}",0,
project,0,test08181,"public void test08181() throws Throwable {
    float float0 = FastMath.min(1.0F, Float.NaN);
    assertEquals(Float.NaN, float0, 0.01F);
}",0,
project,0,test08282,"public void test08282() throws Throwable {
    int int0 = FastMath.min((-4234), (-1831));
    assertEquals((-4234), int0);
}",0,"assertEquals(0, int0)"
project,0,test08383,"public void test08383() throws Throwable {
    int int0 = FastMath.min(5, 0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test08484,"public void test08484() throws Throwable {
    double double0 = FastMath.rint((-872.5));
    assertEquals((-872.0), double0, 0.01);
}",1,
project,0,test08585,"public void test08585() throws Throwable {
    double double0 = FastMath.rint(0.9124657557600824);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test08686,"public void test08686() throws Throwable {
    double double0 = FastMath.ceil((-0.33333333333333287));
    assertEquals(-0.0, double0, 0.01);
}",0,
project,0,test08787,"public void test08787() throws Throwable {
    double double0 = FastMath.ceil(18.0);
    assertEquals(18.0, double0, 0.01);
}",0,
project,0,test08888,"public void test08888() throws Throwable {
    double double0 = FastMath.ceil(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test08989,"public void test08989() throws Throwable {
    double double0 = FastMath.rint((-4234));
    assertEquals((-4234.0), double0, 0.01);
}",0,
project,0,test09090,"public void test09090() throws Throwable {
    double double0 = FastMath.ceil(0.5463024898437905);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test09191,"public void test09191() throws Throwable {
    double double0 = FastMath.rint(Double.NEGATIVE_INFINITY);
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",1,
project,0,test09292,"public void test09292() throws Throwable {
    double double0 = FastMath.floor(Double.POSITIVE_INFINITY);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test09393,"public void test09393() throws Throwable {
    double double0 = FastMath.nextAfter(1.0, 0.19454771280288696);
    assertEquals(0.9999999999999999, double0, 0.01);
}",0,
project,0,test09494,"public void test09494() throws Throwable {
    double double0 = FastMath.nextUp(3398.0);
    assertEquals(3398.0000000000005, double0, 0.01);
}",0,
project,0,test09595,"public void test09595() throws Throwable {
    double double0 = FastMath.nextAfter(0.0, (-1.570078214189996));
    assertEquals((-4.9E-324), double0, 0.01);
}",1,
project,0,test09696,"public void test09696() throws Throwable {
    double double0 = FastMath.nextUp(0.0);
    assertEquals(4.9E-324, double0, 0.01);
}",0,
project,0,test09797,"public void test09797() throws Throwable {
    double double0 = FastMath.nextAfter(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test09898,"public void test09898() throws Throwable {
    double double0 = FastMath.nextAfter(Double.NaN, 1.0);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test09999,"public void test09999() throws Throwable {
    double double0 = FastMath.abs((-1537.2113330561938));
    assertEquals(1537.2113330561938, double0, 0.01);
}",0,
project,0,test100100,"public void test100100() throws Throwable {
    float float0 = FastMath.abs((-982.0F));
    assertEquals(982.0F, float0, 0.01F);
}",0,
project,0,test101101,"public void test101101() throws Throwable {
    float float0 = FastMath.abs(2316.0F);
    assertEquals(2316.0F, float0, 0.01F);
}",0,
project,0,test102102,"public void test102102() throws Throwable {
    long long0 = FastMath.abs((-1386L));
    assertEquals(1386L, long0);
}",0,"assertEquals(0, long0)"
project,0,test103103,"public void test103103() throws Throwable {
    long long0 = FastMath.abs(784L);
    assertEquals(784L, long0);
}",0,
project,0,test104104,"public void test104104() throws Throwable {
    int int0 = FastMath.abs((-1));
    assertEquals(1, int0);
}",0,
project,0,test105105,"public void test105105() throws Throwable {
    int int0 = FastMath.abs(1610);
    assertEquals(1610, int0);
}",0,"assertEquals(0, int0)"
project,0,test106106,"public void test106106() throws Throwable {
    double double0 = FastMath.cbrt(Float.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test107107,"public void test107107() throws Throwable {
    double double0 = FastMath.cbrt(0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test108108,"public void test108108() throws Throwable {
    double double0 = FastMath.cbrt(1537.2113330561938);
    assertEquals(11.5410288289951, double0, 0.01);
}",0,
project,0,test109109,"public void test109109() throws Throwable {
    double double0 = FastMath.acos((-0.00918780066381382));
    assertEquals(1.5799842567293627, double0, 0.01);
}",0,
project,0,test110110,"public void test110110() throws Throwable {
    double double0 = FastMath.acos(0L);
    assertEquals(1.5707963267948966, double0, 0.01);
}",0,
project,0,test111111,"public void test111111() throws Throwable {
    double double0 = FastMath.acos(1.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test112112,"public void test112112() throws Throwable {
    double double0 = FastMath.acos((-1.0));
    assertEquals(3.141592653589793, double0, 0.01);
}",0,
project,0,test113113,"public void test113113() throws Throwable {
    double double0 = FastMath.acos((-99.7024));
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test114114,"public void test114114() throws Throwable {
    double double0 = FastMath.acos(20.0);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test115115,"public void test115115() throws Throwable {
    double double0 = FastMath.acos(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test116116,"public void test116116() throws Throwable {
    double double0 = FastMath.asin((-1.0));
    assertEquals((-1.5707963267948966), double0, 0.01);
}",0,
project,0,test117117,"public void test117117() throws Throwable {
    double double0 = FastMath.asin(1.0);
    assertEquals(1.5707963267948966, double0, 0.01);
}",0,
project,0,test118118,"public void test118118() throws Throwable {
    double double0 = FastMath.asin((-1.5701457982452864));
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test119119,"public void test119119() throws Throwable {
    double double0 = FastMath.asin(3398.0);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test120120,"public void test120120() throws Throwable {
    double double0 = FastMath.asin(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test121121,"public void test121121() throws Throwable {
    double double0 = FastMath.atan2(835.6992, 835.6992);
    assertEquals(0.7853981633974483, double0, 0.01);
}",0,
project,0,test122122,"public void test122122() throws Throwable {
    double double0 = FastMath.atan2((-4.469603409122654E-6), 0.0);
    assertEquals((-1.5707963267948966), double0, 0.01);
}",0,
project,0,test123123,"public void test123123() throws Throwable {
    double double0 = FastMath.atan2(8.0E298, -0.0);
    assertEquals(1.5707963267948966, double0, 0.01);
}",0,
project,0,test124124,"public void test124124() throws Throwable {
    double double0 = FastMath.atan2((-1.0), Double.NEGATIVE_INFINITY);
    assertEquals((-3.141592653589793), double0, 0.01);
}",0,
project,0,test125125,"public void test125125() throws Throwable {
    double double0 = FastMath.atan2((-1710.4285759692), Double.POSITIVE_INFINITY);
    assertEquals(-0.0, double0, 0.01);
}",0,
project,0,test126126,"public void test126126() throws Throwable {
    double double0 = FastMath.atan2(Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY);
    assertEquals((-0.7853981633974483), double0, 0.01);
}",0,
project,0,test127127,"public void test127127() throws Throwable {
    double double0 = FastMath.atan2(Double.POSITIVE_INFINITY, 5.1661063655873455E169);
    assertEquals(1.5707963267948966, double0, 0.01);
}",0,
project,0,test128128,"public void test128128() throws Throwable {
    double double0 = FastMath.atan2(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
    assertEquals(0.7853981633974483, double0, 0.01);
}",0,
project,0,test129129,"public void test129129() throws Throwable {
    double double0 = FastMath.atan2(-0.0, (-1.157542012003743E-14));
    assertEquals((-3.141592653589793), double0, 0.01);
}",0,
project,0,test130130,"public void test130130() throws Throwable {
    double double0 = FastMath.atan2(0.0, 0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test131131,"public void test131131() throws Throwable {
    double double0 = FastMath.atan2(0.0, (-1710.4285759692));
    assertEquals(3.141592653589793, double0, 0.01);
}",0,
project,0,test132132,"public void test132132() throws Throwable {
    double double0 = FastMath.atan2(Double.NaN, (-3496.80156));
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test133133,"public void test133133() throws Throwable {
    double double0 = FastMath.atan2(2212.41026543, Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test134134,"public void test134134() throws Throwable {
    double double0 = FastMath.asin(0L);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test135135,"public void test135135() throws Throwable {
    double double0 = FastMath.atan2(3076.8323247, (-4234.0));
    assertEquals(2.5131734557100405, double0, 0.01);
}",0,
project,0,test136136,"public void test136136() throws Throwable {
    double double0 = FastMath.atan2(6.849723859521112E287, (-785));
    assertEquals(1.5707963267948966, double0, 0.01);
}",0,
project,0,test137137,"public void test137137() throws Throwable {
    double double0 = FastMath.atan(Double.NEGATIVE_INFINITY);
    assertEquals((-1.5707963267948966), double0, 0.01);
}",0,
project,0,test138138,"public void test138138() throws Throwable {
    double double0 = FastMath.tan(Double.POSITIVE_INFINITY);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test139139,"public void test139139() throws Throwable {
    double double0 = FastMath.tan(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test140140,"public void test140140() throws Throwable {
    double double0 = FastMath.tan(-0.0);
    assertEquals(-0.0, double0, 0.01);
}",0,
project,0,test141141,"public void test141141() throws Throwable {
    double double0 = FastMath.tan(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test142142,"public void test142142() throws Throwable {
    double double0 = FastMath.cos(1537.2113330561938);
    assertEquals((-0.5632145223911247), double0, 0.01);
}",0,
project,0,test143143,"public void test143143() throws Throwable {
    double double0 = FastMath.cos((-3.141592653589793));
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test144144,"public void test144144() throws Throwable {
    double double0 = FastMath.cos(Double.POSITIVE_INFINITY);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test145145,"public void test145145() throws Throwable {
    double double0 = FastMath.cos(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test146146,"public void test146146() throws Throwable {
    double double0 = FastMath.sin((-26289.35832616549));
    assertEquals((-0.4890505549521145), double0, 0.01);
}",0,
project,0,test147147,"public void test147147() throws Throwable {
    double double0 = FastMath.sin(3.141592653589793);
    assertEquals(1.2246467991473532E-16, double0, 0.01);
}",0,
project,0,test148148,"public void test148148() throws Throwable {
    double double0 = FastMath.sin(Double.NEGATIVE_INFINITY);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test149149,"public void test149149() throws Throwable {
    double double0 = FastMath.sin(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test150150,"public void test150150() throws Throwable {
    double double0 = FastMath.sin(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test151151,"public void test151151() throws Throwable {
    double double0 = FastMath.sin(2147483594);
    assertEquals(0.9384061647119671, double0, 0.01);
}",0,
project,0,test152152,"public void test152152() throws Throwable {
    double double0 = FastMath.tan(1003734390);
    assertEquals(5.211627199720771, double0, 0.01);
}",0,
project,0,test153153,"public void test153153() throws Throwable {
    double double0 = FastMath.sin(2061584302);
    assertEquals(0.9961585365086896, double0, 0.01);
}",0,
project,0,test154154,"public void test154154() throws Throwable {
    double double0 = FastMath.cos(2.85040095144011776E17);
    assertEquals((-0.00918780066381382), double0, 0.01);
}",0,
project,0,test155155,"public void test155155() throws Throwable {
    double double0 = FastMath.tan((-6705138.972558685));
    assertEquals((-0.07301950858910497), double0, 0.01);
}",0,
project,0,test156156,"public void test156156() throws Throwable {
    double double0 = FastMath.tan(8.0E298);
    assertEquals((-0.04237639320697582), double0, 0.01);
}",0,
project,0,test157157,"public void test157157() throws Throwable {
    double double0 = FastMath.tan((-6705139.388311141));
    assertEquals((-0.5316458258475749), double0, 0.01);
}",0,
project,0,test158158,"public void test158158() throws Throwable {
    double double0 = FastMath.tan(0.6409968137741089);
    assertEquals(0.7460943665116851, double0, 0.01);
}",0,
project,0,test159159,"public void test159159() throws Throwable {
    double double0 = FastMath.sin(0.1538461446762085);
    assertEquals(0.1532399744099201, double0, 0.01);
}",0,
project,0,test160160,"public void test160160() throws Throwable {
    double double0 = FastMath.pow(3197.206125659861, Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test161161,"public void test161161() throws Throwable {
    double double0 = FastMath.pow((-1.0), (-1.0));
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test162162,"public void test162162() throws Throwable {
    double double0 = FastMath.pow((-1.8918886108479045), 3.001117512531765E-7);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test163163,"public void test163163() throws Throwable {
    double double0 = FastMath.pow((-4.503599627370496E15), (-4.503599627370496E15));
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test164164,"public void test164164() throws Throwable {
    double double0 = FastMath.pow((-4016.29948), 20.0);
    assertEquals(1.1926740780371286E72, double0, 0.01);
}",0,
project,0,test165165,"public void test165165() throws Throwable {
    double double0 = FastMath.pow(Double.NEGATIVE_INFINITY, 1.197421629234348);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test166166,"public void test166166() throws Throwable {
    double double0 = FastMath.pow(207.2730473156495, Double.POSITIVE_INFINITY);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test167167,"public void test167167() throws Throwable {
    double double0 = FastMath.pow(Double.POSITIVE_INFINITY, 534.0361263716215);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test168168,"public void test168168() throws Throwable {
    double double0 = FastMath.pow(Double.POSITIVE_INFINITY, Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test169169,"public void test169169() throws Throwable {
    double double0 = FastMath.pow(0.0, Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test170170,"public void test170170() throws Throwable {
    double double0 = FastMath.pow(0L, (-1.0));
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test171171,"public void test171171() throws Throwable {
    double double0 = FastMath.pow(0.0, Double.POSITIVE_INFINITY);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test172172,"public void test172172() throws Throwable {
    double double0 = FastMath.pow(-0.0, 5.551115123125783E-17);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test173173,"public void test173173() throws Throwable {
    double double0 = FastMath.pow(Double.NaN, 1);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test174174,"public void test174174() throws Throwable {
    double double0 = FastMath.pow((-354.116861617897), 0.0);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test175175,"public void test175175() throws Throwable {
    double double0 = FastMath.log1p(2.639144044101463E-7);
    assertEquals(2.63914369584746E-7, double0, 0.01);
}",0,
project,0,test176176,"public void test176176() throws Throwable {
    double double0 = FastMath.log1p(Double.POSITIVE_INFINITY);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test177177,"public void test177177() throws Throwable {
    double double0 = FastMath.log1p(1908.117806007);
    assertEquals(7.554396532668752, double0, 0.01);
}",0,
project,0,test178178,"public void test178178() throws Throwable {
    double double0 = FastMath.log1p((-1.0));
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",0,
project,0,test179179,"public void test179179() throws Throwable {
    double double0 = FastMath.log1p((-1493.59867));
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test180180,"public void test180180() throws Throwable {
    double double0 = FastMath.log10(1.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test181181,"public void test181181() throws Throwable {
    double double0 = FastMath.log(1.006182195365655);
    assertEquals(0.0061631639927189575, double0, 0.01);
}",0,
project,0,test182182,"public void test182182() throws Throwable {
    double double0 = FastMath.log(0.0);
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",0,
project,0,test183183,"public void test183183() throws Throwable {
    double double0 = FastMath.log(4.9E-324);
    assertEquals((-744.4400719213812), double0, 0.01);
}",0,
project,0,test184184,"public void test184184() throws Throwable {
    double double0 = FastMath.log10(Double.POSITIVE_INFINITY);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test185185,"public void test185185() throws Throwable {
    double double0 = FastMath.log10(-0.0);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test186186,"public void test186186() throws Throwable {
    double double0 = FastMath.log(Float.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test187187,"public void test187187() throws Throwable {
    double double0 = FastMath.expm1((-0.9990852728343232));
    assertEquals((-0.6317838955559781), double0, 0.01);
}",0,
project,0,test188188,"public void test188188() throws Throwable {
    double double0 = FastMath.expm1(0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test189189,"public void test189189() throws Throwable {
    double double0 = FastMath.expm1(1.8014398509481984E16);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test190190,"public void test190190() throws Throwable {
    double double0 = FastMath.expm1((-1493.9999999999998));
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test191191,"public void test191191() throws Throwable {
    double double0 = FastMath.pow(1.5574077246549023, (-4523.969811987168));
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test192192,"public void test192192() throws Throwable {
    double double0 = FastMath.pow(0.877582550048828, 1.0);
    assertEquals(0.877582550048828, double0, 0.01);
}",0,
project,0,test193193,"public void test193193() throws Throwable {
    double double0 = FastMath.signum(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test194194,"public void test194194() throws Throwable {
    double double0 = FastMath.signum(0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test195195,"public void test195195() throws Throwable {
    double double0 = FastMath.signum((-3306.614));
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test196196,"public void test196196() throws Throwable {
    double double0 = FastMath.signum(0.3153223395347595);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test197197,"public void test197197() throws Throwable {
    double double0 = FastMath.atanh(0.01745329052209854);
    assertEquals(0.017455063037776063, double0, 0.01);
}",0,
project,0,test198198,"public void test198198() throws Throwable {
    double double0 = FastMath.atanh(0.036);
    assertEquals(0.03601556410444137, double0, 0.01);
}",0,
project,0,test199199,"public void test199199() throws Throwable {
    double double0 = FastMath.atanh(0.11754920246761832);
    assertEquals(0.11809516041174332, double0, 0.01);
}",0,
project,0,test200200,"public void test200200() throws Throwable {
    double double0 = FastMath.atanh(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test201201,"public void test201201() throws Throwable {
    double double0 = FastMath.atanh((-1.0));
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",0,
project,0,test202202,"public void test202202() throws Throwable {
    double double0 = FastMath.asinh(0.030589580535888672);
    assertEquals(0.03058481198405819, double0, 0.01);
}",1,
project,0,test203203,"public void test203203() throws Throwable {
    double double0 = FastMath.asinh((-0.05417713522911072));
    assertEquals((-0.05415066706272276), double0, 0.01);
}",1,
project,0,test204204,"public void test204204() throws Throwable {
    double double0 = FastMath.asinh(0.1628696876132061);
    assertEquals(0.16215808821463767, double0, 0.01);
}",0,
project,0,test205205,"public void test205205() throws Throwable {
    double double0 = FastMath.asinh((-1884L));
    assertEquals((-8.234299706129574), double0, 0.01);
}",1,
project,0,test206206,"public void test206206() throws Throwable {
    double double0 = FastMath.asinh(0.0);
    assertEquals(0.0, double0, 0.01);
}",1,
project,0,test207207,"public void test207207() throws Throwable {
    double double0 = FastMath.tanh((-4.469603409122654E-6));
    assertEquals((-4.46960340909289E-6), double0, 0.01);
}",0,
project,0,test208208,"public void test208208() throws Throwable {
    double double0 = FastMath.tanh(0.9124657557600824);
    assertEquals(0.7223136355571643, double0, 0.01);
}",0,
project,0,test209209,"public void test209209() throws Throwable {
    double double0 = FastMath.tanh((-1593.0));
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test210210,"public void test210210() throws Throwable {
    double double0 = FastMath.tanh(784L);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test211211,"public void test211211() throws Throwable {
    double double0 = FastMath.tanh(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test212212,"public void test212212() throws Throwable {
    double double0 = FastMath.tanh(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test213213,"public void test213213() throws Throwable {
    double double0 = FastMath.sinh((-1.0));
    assertEquals((-1.1752011936438014), double0, 0.01);
}",0,
project,0,test214214,"public void test214214() throws Throwable {
    double double0 = FastMath.sinh(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test215215,"public void test215215() throws Throwable {
    double double0 = FastMath.sinh((-1537.2113330561938));
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",0,
project,0,test216216,"public void test216216() throws Throwable {
    double double0 = FastMath.sinh(1.8014398509481984E16);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test217217,"public void test217217() throws Throwable {
    double double0 = FastMath.sinh(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test218218,"public void test218218() throws Throwable {
    double double0 = FastMath.sinh(0.1532399744099201);
    assertEquals(0.1538404216645775, double0, 0.01);
}",0,
project,0,test219219,"public void test219219() throws Throwable {
    double double0 = FastMath.cosh((-7.44321345601866E-11));
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test220220,"public void test220220() throws Throwable {
    double double0 = FastMath.cosh((-2714.21));
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test221221,"public void test221221() throws Throwable {
    double double0 = FastMath.cosh(3398.0000000000005);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test222222,"public void test222222() throws Throwable {
    double double0 = FastMath.cosh(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test223223,"public void test223223() throws Throwable {
    double double0 = FastMath.cosh(0.08713622391223907);
    assertEquals(1.0037987634260317, double0, 0.01);
}",0,
project,0,test224224,"public void test224224() throws Throwable {
    double double0 = FastMath.nextUp((-707.1667484602));
    assertEquals((-707.1667484601999), double0, 0.01);
}",0,
project,0,test225225,"public void test225225() throws Throwable {
    double double0 = FastMath.atan((-1537.2113330561938));
    assertEquals((-1.5701457982452864), double0, 0.01);
}",0,
project,0,test226226,"public void test226226() throws Throwable {
    double double0 = FastMath.exp(1886.48842325);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test227227,"public void test227227() throws Throwable {
    FastMath.random();
    double double0 = FastMath.random();
    assertEquals(0.1, double0, 0.01);
}",0,
project,0,test228228,"public void test228228() throws Throwable {
    int int0 = FastMath.round(1006.5021F);
    assertEquals(1007, int0);
}",0,"assertEquals(1, int0)"
project,0,test229229,"public void test229229() throws Throwable {
    long long0 = FastMath.round((-0.9999999999999999));
    assertEquals((-1L), long0);
}",0,"assertEquals(1, long0)"
project,0,test230230,"public void test230230() throws Throwable {
    double double0 = FastMath.ulp(4675.204408024046);
    assertEquals(9.094947017729282E-13, double0, 0.01);
}",0,
project,0,test231231,"public void test231231() throws Throwable {
    double double0 = FastMath.expm1(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test232232,"public void test232232() throws Throwable {
    double double0 = FastMath.toDegrees(1886.48842325);
    assertEquals(108087.82475251432, double0, 0.01);
}",0,
project,0,test233233,"public void test233233() throws Throwable {
    double double0 = FastMath.toRadians(2.639144044101463E-7);
    assertEquals(4.606175300396897E-9, double0, 0.01);
}",0,
project,0,test234234,"public void test234234() throws Throwable {
    double double0 = FastMath.acos(0.19454771280288696);
    assertEquals(1.3749999950923297, double0, 0.01);
}",0,
