org.apache.commons.math.linear.CholeskyDecompositionImpl,@Test(timeout = 4000)
public void test1313() throws Throwable {
    double[] doubleArray0 = new double[2];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 0.0);
    RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrix0, 0.0, 0.0);
    choleskyDecompositionImpl0.getL();
    RealMatrix realMatrix1 = choleskyDecompositionImpl0.getLT();
    realMatrix1.getFrobeniusNorm();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.linear.CholeskyDecompositionImpl,@Test(timeout = 4000)
public void test1414() throws Throwable {
    double[] doubleArray0 = new double[2];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 0.0);
    RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
    CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrix0, 0.0, 0.0);
    choleskyDecompositionImpl0.getL();
    RealMatrix realMatrix1 = choleskyDecompositionImpl0.getL();
    realMatrix1.getFrobeniusNorm();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
