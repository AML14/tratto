{
  "test05260" : {
    "methodSignature" : "public BigFraction subtract(final BigFraction fraction)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05260() throws Throwable {\n    BigInteger bigInteger0 = BigInteger.ONE;\n    BigFraction bigFraction0 = new BigFraction(bigInteger0);\n    bigFraction0.ONE_QUARTER.multiply(359);\n    bigFraction0.pow((-700L));\n    BigFraction bigFraction1 = BigFraction.FOUR_FIFTHS;\n    bigFraction0.subtract(bigFraction1);\n}",
    "testName" : "test05260"
  },
  "test06472" : {
    "methodSignature" : "public static BigFraction getReducedFraction(final int numerator, final int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06472() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ZERO;\n    BigFraction bigFraction1 = BigFraction.MINUS_ONE;\n    BigFraction bigFraction2 = bigFraction1.TWO.add(bigFraction0);\n    bigFraction2.MINUS_ONE.doubleValue();\n    bigFraction0.divide(bigFraction1);\n    BigFraction bigFraction3 = bigFraction1.add(3);\n    bigFraction3.pow(0.0);\n    bigFraction3.bigDecimalValue();\n    bigFraction0.getNumeratorAsInt();\n    BigFraction bigFraction4 = bigFraction1.multiply(0);\n    bigFraction4.THREE_QUARTERS.getNumeratorAsInt();\n    bigFraction4.TWO_THIRDS.abs();\n    bigFraction3.multiply(bigFraction1);\n    BigFraction bigFraction5 = bigFraction1.reduce();\n    bigFraction5.ONE.add((long) 3);\n    BigFraction.getReducedFraction(3630, 0);\n}",
    "testName" : "test06472"
  },
  "test07280" : {
    "methodSignature" : "public BigFractionField getField()",
    "methodName" : "getField",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07280() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.TWO;\n    BigFraction bigFraction1 = bigFraction0.MINUS_ONE.subtract((-449));\n    bigFraction1.ONE_QUARTER.intValue();\n    bigFraction1.MINUS_ONE.bigDecimalValue();\n    bigFraction0.hashCode();\n    bigFraction0.bigDecimalValue(1, 1);\n    bigFraction0.getField();\n}",
    "testName" : "test07280"
  },
  "test08492" : {
    "methodSignature" : "public BigFraction reciprocal()",
    "methodName" : "reciprocal",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08492() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction(0.0);\n    bigFraction0.ONE_QUARTER.negate();\n    Object object0 = new Object();\n    bigFraction0.ONE_FIFTH.equals(object0);\n    BigFraction bigFraction1 = BigFraction.getReducedFraction((-2492), 1);\n    bigFraction0.compareTo(bigFraction1);\n    BigFraction bigFraction2 = bigFraction0.multiply((long) 1);\n    BigInteger bigInteger0 = BigInteger.TEN;\n    bigFraction2.ONE_THIRD.add(bigInteger0);\n    bigFraction2.THREE_QUARTERS.reciprocal();\n    bigFraction2.intValue();\n    BigFraction bigFraction3 = bigFraction1.divide((long) 2806);\n    BigFraction bigFraction4 = bigFraction3.multiply((long) 1);\n    BigFraction bigFraction5 = bigFraction4.subtract(1);\n    BigFraction bigFraction6 = bigFraction5.ONE_HALF.divide(bigFraction4);\n    bigFraction5.multiply(2396);\n    bigFraction3.multiply((-9223372036854775808L));\n    bigFraction6.reciprocal();\n}",
    "testName" : "test08492"
  },
  "test0000" : {
    "methodSignature" : "public BigFraction divide(final BigInteger bg)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_FIFTH;\n    BigFraction bigFraction1 = new BigFraction(0L);\n    BigFraction bigFraction2 = bigFraction0.TWO_FIFTHS.subtract(bigFraction1);\n    bigFraction0.MINUS_ONE.pow(2.4106173515319824);\n    bigFraction2.ONE_QUARTER.getDenominatorAsInt();\n    BigFraction bigFraction3 = bigFraction0.reciprocal();\n    BigFraction bigFraction4 = bigFraction0.ONE_HALF.reciprocal();\n    bigFraction0.percentageValue();\n    BigFraction bigFraction5 = bigFraction4.divide(bigFraction0);\n    BigFraction bigFraction6 = bigFraction5.TWO_FIFTHS.divide(1951);\n    BigFraction bigFraction7 = bigFraction6.ONE_FIFTH.reciprocal();\n    bigFraction7.ONE_THIRD.getDenominatorAsInt();\n    BigFraction bigFraction8 = bigFraction5.ONE_FIFTH.multiply(bigFraction3);\n    bigFraction6.TWO_THIRDS.getDenominatorAsLong();\n    bigFraction8.TWO_QUARTERS.add(bigFraction4);\n    bigFraction0.getField();\n    bigFraction2.getField();\n    BigFraction bigFraction9 = bigFraction1.multiply(4458);\n    bigFraction9.ZERO.divide(3L);\n    bigFraction7.abs();\n    bigFraction7.divide((BigInteger) null);\n}",
    "testName" : "test0000"
  },
  "test05664" : {
    "methodSignature" : "public BigFraction(final long num, final long den)",
    "methodName" : "BigFraction",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05664() throws Throwable {\n    BigFraction bigFraction0 = null;\n    bigFraction0 = new BigFraction(0L, 0L);\n}",
    "testName" : "test05664"
  },
  "test06876" : {
    "methodSignature" : "public BigFraction divide(final BigInteger bg)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06876() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_QUARTER;\n    BigFraction bigFraction1 = bigFraction0.ONE_THIRD.subtract((-749L));\n    Object object0 = new Object();\n    bigFraction0.equals(object0);\n    BigInteger bigInteger0 = BigInteger.ZERO;\n    bigFraction1.TWO.pow(bigInteger0);\n    bigFraction0.TWO_QUARTERS.divide(bigInteger0);\n}",
    "testName" : "test06876"
  },
  "test02432" : {
    "methodSignature" : "public BigFraction multiply(final long l)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02432() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.TWO_QUARTERS;\n    bigFraction0.FOUR_FIFTHS.add((-3535L));\n    bigFraction0.multiply((-114L));\n}",
    "testName" : "test02432"
  },
  "test03240" : {
    "methodSignature" : "public BigFraction subtract(final BigInteger bg)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03240() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction((-2139));\n    BigFraction bigFraction1 = bigFraction0.reciprocal();\n    BigInteger bigInteger0 = BigInteger.TEN;\n    bigFraction0.multiply(bigInteger0);\n    bigFraction0.getNumeratorAsLong();\n    BigFraction bigFraction2 = bigFraction1.pow((-2139L));\n    bigFraction2.subtract(bigInteger0);\n}",
    "testName" : "test03240"
  },
  "test08896" : {
    "methodSignature" : "public BigInteger getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08896() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction(0.4580921530723572);\n    BigFraction bigFraction1 = bigFraction0.pow((-2755L));\n    BigFraction bigFraction2 = bigFraction1.FOUR_FIFTHS.pow(3);\n    BigFraction bigFraction3 = bigFraction2.ONE_HALF.reciprocal();\n    BigFraction bigFraction4 = bigFraction0.ONE.multiply((-1));\n    bigFraction0.getDenominator();\n    bigFraction0.getField();\n    BigFraction bigFraction5 = bigFraction4.negate();\n    bigFraction3.getDenominator();\n    bigFraction5.pow((-2755L));\n    bigFraction1.getDenominator();\n}",
    "testName" : "test08896"
  },
  "test01220" : {
    "methodSignature" : "public BigFraction(final double value, final double epsilon, final int maxIterations) throws FractionConversionException",
    "methodName" : "BigFraction",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01220() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.TWO_THIRDS;\n    BigFraction bigFraction1 = null;\n    bigFraction1 = new BigFraction(0.0, 0.0, (-4207));\n}",
    "testName" : "test01220"
  },
  "test04452" : {
    "methodSignature" : "public BigDecimal bigDecimalValue(final int roundingMode)",
    "methodName" : "bigDecimalValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04452() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.FOUR_FIFTHS;\n    BigInteger bigInteger0 = BigInteger.ONE;\n    BigFraction bigFraction1 = new BigFraction(bigInteger0);\n    bigFraction0.TWO_QUARTERS.getDenominatorAsInt();\n    bigFraction0.ONE_THIRD.multiply(bigFraction1);\n    BigFraction bigFraction2 = BigFraction.ONE;\n    bigFraction2.ZERO.negate();\n    BigFraction bigFraction3 = bigFraction0.divide(bigFraction2);\n    bigFraction3.THREE_FIFTHS.getDenominatorAsLong();\n    bigFraction2.getDenominatorAsInt();\n    bigFraction0.ONE_FIFTH.intValue();\n    BigFraction bigFraction4 = bigFraction0.divide(1066L);\n    bigFraction4.ONE.getNumeratorAsInt();\n    bigFraction4.getDenominatorAsInt();\n    BigFraction bigFraction5 = bigFraction4.divide(bigFraction2);\n    bigFraction5.ONE_QUARTER.multiply(Integer.MAX_VALUE);\n    int int0 = (-28);\n    bigFraction0.bigDecimalValue((-28));\n}",
    "testName" : "test04452"
  },
  "test07684" : {
    "methodSignature" : "public BigFraction divide(final int i)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07684() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.TWO_QUARTERS;\n    BigFraction.getReducedFraction(0, 0);\n    BigInteger bigInteger0 = bigFraction0.getNumerator();\n    BigFraction bigFraction1 = bigFraction0.divide(540);\n    BigFraction bigFraction2 = bigFraction1.add(bigInteger0);\n    bigFraction1.TWO_FIFTHS.pow(bigInteger0);\n    bigInteger0.equals(bigFraction1);\n    BigFraction bigFraction3 = bigFraction2.divide(540);\n    bigFraction2.ONE.doubleValue();\n    bigFraction3.hashCode();\n    BigFraction bigFraction4 = bigFraction1.THREE_QUARTERS.pow(540);\n    bigFraction4.ONE.getNumeratorAsLong();\n    BigFraction bigFraction5 = BigFraction.getReducedFraction(1699, 1699);\n    bigFraction5.THREE_QUARTERS.longValue();\n    BigFraction.getReducedFraction(3, 1911);\n    BigFraction bigFraction6 = bigFraction2.add(540);\n    bigFraction6.ZERO.floatValue();\n    BigFraction bigFraction7 = bigFraction2.pow(0L);\n    bigFraction5.subtract(bigInteger0);\n    bigFraction0.intValue();\n    bigFraction4.getNumerator();\n    bigFraction7.divide(0);\n}",
    "testName" : "test07684"
  },
  "test02028" : {
    "methodSignature" : "public BigDecimal bigDecimalValue(final int scale, final int roundingMode)",
    "methodName" : "bigDecimalValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02028() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ZERO;\n    bigFraction0.longValue();\n    BigFraction bigFraction1 = BigFraction.TWO;\n    bigFraction0.add(bigFraction1);\n    bigFraction1.reciprocal();\n    bigFraction1.THREE_QUARTERS.bigDecimalValue(1501, 1501);\n}",
    "testName" : "test02028"
  },
  "test104112" : {
    "methodSignature" : "public BigDecimal bigDecimalValue(final int scale, final int roundingMode)",
    "methodName" : "bigDecimalValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104112() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction(1331);\n    bigFraction0.divide((-378));\n    bigFraction0.bigDecimalValue(1331, 1331);\n}",
    "testName" : "test104112"
  },
  "test097105" : {
    "methodSignature" : "public BigDecimal bigDecimalValue(final int roundingMode)",
    "methodName" : "bigDecimalValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097105() throws Throwable {\n    byte[] byteArray0 = new byte[0];\n    BigInteger bigInteger0 = new BigInteger(0, byteArray0);\n    BigFraction bigFraction0 = new BigFraction(bigInteger0);\n    bigFraction0.FOUR_FIFTHS.divide(1);\n    bigFraction0.ONE_QUARTER.divide((-2933));\n    bigFraction0.bigDecimalValue(0);\n    bigFraction0.TWO_QUARTERS.intValue();\n    bigFraction0.bigDecimalValue((-1189));\n}",
    "testName" : "test097105"
  },
  "test08088" : {
    "methodSignature" : "public BigFraction pow(final int exponent)",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08088() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction(0.0);\n    bigFraction0.ONE.longValue();\n    bigFraction0.getDenominatorAsInt();\n    bigFraction0.TWO_FIFTHS.add(3952090531849364496L);\n    bigFraction0.getDenominatorAsInt();\n    byte[] byteArray0 = new byte[1];\n    byteArray0[0] = (byte) (-63);\n    BigInteger bigInteger0 = new BigInteger(byteArray0);\n    bigFraction0.divide(bigInteger0);\n    bigFraction0.pow(0);\n}",
    "testName" : "test08088"
  },
  "test0011" : {
    "methodSignature" : "public BigFraction multiply(final BigInteger bg)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction(0.0);\n    bigFraction0.intValue();\n    BigFraction bigFraction1 = bigFraction0.ONE_HALF.reciprocal();\n    bigFraction1.ONE.multiply((-74));\n    BigFraction bigFraction2 = BigFraction.TWO_QUARTERS;\n    int int0 = 1847;\n    BigFraction bigFraction3 = bigFraction2.subtract(1847);\n    bigFraction0.divide(bigFraction2);\n    bigFraction3.TWO.toString();\n    BigFraction bigFraction4 = bigFraction0.reduce();\n    bigFraction4.TWO.subtract(1847);\n    byte[] byteArray0 = new byte[6];\n    byteArray0[0] = (byte) (-120);\n    bigFraction3.ONE.multiply((BigInteger) null);\n}",
    "testName" : "test0011"
  },
  "test04048" : {
    "methodSignature" : "public int compareTo(final BigFraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04048() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction((-618.0), 3136.5699010956746, 0);\n    bigFraction0.TWO_QUARTERS.getNumeratorAsInt();\n    BigFraction bigFraction1 = bigFraction0.divide((-1L));\n    bigFraction1.TWO_THIRDS.longValue();\n    bigFraction0.toString();\n    bigFraction0.compareTo(bigFraction1);\n}",
    "testName" : "test04048"
  },
  "test06068" : {
    "methodSignature" : "public BigDecimal bigDecimalValue(final int roundingMode)",
    "methodName" : "bigDecimalValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06068() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction((-1));\n    BigFraction bigFraction1 = BigFraction.THREE_QUARTERS;\n    BigFraction bigFraction2 = bigFraction0.multiply(bigFraction1);\n    bigFraction2.add(bigFraction1);\n    bigFraction0.getDenominatorAsInt();\n    bigFraction1.bigDecimalValue(1, 5);\n    bigFraction2.getDenominatorAsInt();\n    BigFraction bigFraction3 = bigFraction2.add(205);\n    bigFraction0.negate();\n    bigFraction3.bigDecimalValue((-1488));\n}",
    "testName" : "test06068"
  },
  "test04957" : {
    "methodSignature" : "public BigFraction divide(final BigFraction fraction)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04957() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction(2037, 2037);\n    BigFraction bigFraction1 = BigFraction.MINUS_ONE;\n    bigFraction0.divide(bigFraction1);\n}",
    "testName" : "test04957"
  },
  "test02533" : {
    "methodSignature" : "public BigFraction divide(final BigFraction fraction)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02533() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.getReducedFraction(0, 0);\n    BigFraction bigFraction1 = bigFraction0.negate();\n    bigFraction0.doubleValue();\n    bigFraction1.divide(bigFraction0);\n}",
    "testName" : "test02533"
  },
  "test01725" : {
    "methodSignature" : "public BigFraction divide(final BigInteger bg)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01725() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.THREE_QUARTERS;\n    BigInteger bigInteger0 = BigInteger.valueOf(0L);\n    bigFraction0.divide(bigInteger0);\n}",
    "testName" : "test01725"
  },
  "test06977" : {
    "methodSignature" : "public BigDecimal bigDecimalValue(final int scale, final int roundingMode)",
    "methodName" : "bigDecimalValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06977() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE;\n    bigFraction0.getField();\n    bigFraction0.FOUR_FIFTHS.subtract(1);\n    bigFraction0.bigDecimalValue();\n    bigFraction0.longValue();\n    bigFraction0.bigDecimalValue((-719), 1043);\n}",
    "testName" : "test06977"
  },
  "test00513" : {
    "methodSignature" : "public BigDecimal bigDecimalValue(final int roundingMode)",
    "methodName" : "bigDecimalValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00513() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.getReducedFraction((-1482), 1045);\n    bigFraction0.toString();\n    bigFraction0.ONE.percentageValue();\n    BigFraction bigFraction1 = bigFraction0.TWO_QUARTERS.multiply((-496L));\n    bigFraction0.THREE_QUARTERS.equals(\"-78 / 55\");\n    BigFraction bigFraction2 = bigFraction0.add(bigFraction0);\n    BigInteger bigInteger0 = bigFraction2.getDenominator();\n    BigFraction bigFraction3 = bigFraction1.multiply(bigInteger0);\n    bigFraction3.TWO_THIRDS.getNumeratorAsLong();\n    BigFraction bigFraction4 = bigFraction0.add(1);\n    BigInteger bigInteger1 = BigInteger.ONE;\n    bigInteger1.xor(bigInteger0);\n    bigFraction0.divide(bigInteger1);\n    BigFraction bigFraction5 = bigFraction1.multiply(bigFraction4);\n    bigFraction5.FOUR_FIFTHS.getDenominatorAsLong();\n    bigFraction5.TWO_QUARTERS.pow(0.0);\n    bigFraction4.TWO.subtract((long) 1);\n    bigFraction4.divide(bigFraction0);\n    bigFraction4.bigDecimalValue(2472);\n}",
    "testName" : "test00513"
  },
  "test03745" : {
    "methodSignature" : "public BigFraction reduce()",
    "methodName" : "reduce",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03745() throws Throwable {\n    BigInteger bigInteger0 = BigInteger.TEN;\n    BigFraction bigFraction0 = new BigFraction(bigInteger0, bigInteger0);\n    bigFraction0.ONE.getNumeratorAsLong();\n    BigFraction bigFraction1 = bigFraction0.abs();\n    BigFraction bigFraction2 = BigFraction.ONE_FIFTH;\n    bigFraction1.subtract(bigFraction2);\n    bigFraction2.doubleValue();\n    bigFraction0.reduce();\n}",
    "testName" : "test03745"
  },
  "test02937" : {
    "methodSignature" : "public BigFraction divide(final long l)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02937() throws Throwable {\n    long long0 = 5648769086999809661L;\n    BigFraction bigFraction0 = new BigFraction(4208363204685324176L, 5648769086999809661L);\n    bigFraction0.THREE_QUARTERS.divide(0L);\n}",
    "testName" : "test02937"
  },
  "test00917" : {
    "methodSignature" : "public BigFraction add(final BigInteger bg) throws NullArgumentException",
    "methodName" : "add",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00917() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.TWO;\n    bigFraction0.longValue();\n    byte[] byteArray0 = new byte[3];\n    byteArray0[0] = (byte) (-1);\n    byteArray0[1] = (byte) (-83);\n    BigInteger bigInteger0 = BigInteger.ONE;\n    bigFraction0.TWO_THIRDS.add(bigInteger0);\n    bigFraction0.ZERO.pow(0.0);\n    byteArray0[2] = (byte) (-1);\n    bigFraction0.ONE_QUARTER.floatValue();\n    BigInteger bigInteger1 = new BigInteger(byteArray0);\n    BigFraction bigFraction1 = bigFraction0.pow(bigInteger1);\n    bigFraction1.ONE.floatValue();\n    BigInteger bigInteger2 = null;\n    BigFraction bigFraction2 = BigFraction.ZERO;\n    bigFraction1.ONE.add(bigFraction2);\n    bigFraction0.add((BigInteger) null);\n}",
    "testName" : "test00917"
  },
  "test094102" : {
    "methodSignature" : "public BigFraction abs()",
    "methodName" : "abs",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094102() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_FIFTH;\n    BigInteger bigInteger0 = BigInteger.TEN;\n    BigFraction bigFraction1 = bigFraction0.ONE_THIRD.divide(bigInteger0);\n    bigFraction1.THREE_FIFTHS.percentageValue();\n    bigFraction0.THREE_FIFTHS.bigDecimalValue(173, 0);\n    BigFraction bigFraction2 = BigFraction.TWO_FIFTHS;\n    bigFraction2.THREE_QUARTERS.toString();\n    BigFraction bigFraction3 = bigFraction0.multiply(bigFraction2);\n    bigFraction3.getDenominatorAsInt();\n    BigFraction bigFraction4 = BigFraction.ONE_FIFTH;\n    BigFraction bigFraction5 = bigFraction3.MINUS_ONE.pow(bigInteger0);\n    bigFraction4.MINUS_ONE.getDenominatorAsInt();\n    bigFraction3.ONE_HALF.longValue();\n    bigFraction4.THREE_QUARTERS.getDenominatorAsInt();\n    bigFraction4.ONE.pow((double) 0);\n    bigFraction4.ONE_HALF.add(bigFraction5);\n    bigFraction2.equals(bigFraction4);\n    bigFraction4.getNumeratorAsInt();\n    bigFraction3.hashCode();\n    bigFraction0.abs();\n    bigFraction0.add(25);\n    bigFraction3.pow(0L);\n    bigFraction3.negate();\n    bigFraction5.intValue();\n    bigFraction5.abs();\n}",
    "testName" : "test094102"
  },
  "test05361" : {
    "methodSignature" : "public BigFraction pow(final int exponent)",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05361() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ZERO;\n    BigFraction bigFraction1 = bigFraction0.add(1852L);\n    bigFraction1.subtract(bigFraction0);\n    bigFraction0.MINUS_ONE.divide((-1));\n    bigFraction1.pow((-664L));\n    bigFraction1.pow(3);\n}",
    "testName" : "test05361"
  },
  "test08593" : {
    "methodSignature" : "public BigFraction pow(final BigInteger exponent)",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08593() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction((-931.46), (-588));\n    BigFraction bigFraction1 = BigFraction.FOUR_FIFTHS;\n    BigFraction bigFraction2 = bigFraction0.ONE_QUARTER.pow((-588));\n    BigFraction bigFraction3 = bigFraction2.ONE.multiply(bigFraction1);\n    BigFraction bigFraction4 = bigFraction1.MINUS_ONE.subtract((long) (-588));\n    bigFraction4.MINUS_ONE.compareTo(bigFraction0);\n    BigFraction bigFraction5 = bigFraction0.THREE_QUARTERS.multiply((long) (-588));\n    BigFraction bigFraction6 = bigFraction0.subtract(bigFraction1);\n    bigFraction6.hashCode();\n    BigFraction bigFraction7 = BigFraction.FOUR_FIFTHS;\n    BigFraction bigFraction8 = bigFraction5.subtract(bigFraction7);\n    bigFraction8.FOUR_FIFTHS.negate();\n    BigFraction bigFraction9 = BigFraction.getReducedFraction((-1), (-1));\n    bigFraction3.divide(bigFraction9);\n    bigFraction4.abs();\n    byte[] byteArray0 = new byte[2];\n    byteArray0[0] = (byte) (-1);\n    byteArray0[1] = (byte) (-1);\n    BigInteger bigInteger0 = new BigInteger(byteArray0);\n    bigFraction5.pow(bigInteger0);\n}",
    "testName" : "test08593"
  },
  "test0022" : {
    "methodSignature" : "public BigFraction multiply(final BigInteger bg)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0022() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction((-717.224843262248));\n    int int0 = 1245;\n    BigFraction bigFraction1 = bigFraction0.pow(1245);\n    BigFraction bigFraction2 = bigFraction0.THREE_FIFTHS.add((long) 1245);\n    BigFraction bigFraction3 = bigFraction1.divide(bigFraction0);\n    BigFraction bigFraction4 = bigFraction1.add(bigFraction0);\n    BigFraction bigFraction5 = bigFraction3.divide(1037L);\n    int int1 = 3;\n    BigFraction bigFraction6 = bigFraction2.divide(3);\n    bigFraction2.ONE_FIFTH.divide(328L);\n    BigFraction bigFraction7 = bigFraction5.ONE_HALF.subtract(1037L);\n    bigFraction7.MINUS_ONE.equals(bigFraction6);\n    bigFraction5.getNumeratorAsLong();\n    bigFraction5.add(bigFraction2);\n    BigInteger bigInteger0 = null;\n    bigFraction4.multiply((BigInteger) null);\n}",
    "testName" : "test0022"
  },
  "test07381" : {
    "methodSignature" : "public static BigFraction getReducedFraction(final int numerator, final int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07381() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction((-1464.0718), 3530.3516753794024, 76);\n    BigFraction bigFraction1 = bigFraction0.TWO_FIFTHS.pow((long) 76);\n    bigFraction1.TWO.pow((long) 76);\n    bigFraction0.ONE.divide(76);\n    bigFraction0.ZERO.multiply(100L);\n    bigFraction1.MINUS_ONE.pow(76);\n    bigFraction1.TWO_QUARTERS.getDenominatorAsLong();\n    bigFraction0.toString();\n    bigFraction0.intValue();\n    BigFraction bigFraction2 = bigFraction0.subtract((long) 76);\n    BigInteger bigInteger0 = BigInteger.ONE;\n    bigFraction0.THREE_FIFTHS.subtract(bigInteger0);\n    bigFraction2.compareTo(bigFraction1);\n    bigFraction0.getDenominatorAsInt();\n    bigFraction0.ZERO.subtract(0);\n    BigFraction.getReducedFraction((-1465), 0);\n}",
    "testName" : "test07381"
  },
  "test04553" : {
    "methodSignature" : "public BigDecimal bigDecimalValue(final int scale, final int roundingMode)",
    "methodName" : "bigDecimalValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04553() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction((-2040.65), (-348));\n    BigFraction bigFraction1 = bigFraction0.THREE_QUARTERS.negate();\n    bigFraction0.ONE.getField();\n    bigFraction0.toString();\n    bigFraction0.bigDecimalValue();\n    int int0 = (-1);\n    bigFraction1.bigDecimalValue((-1), (-348));\n}",
    "testName" : "test04553"
  },
  "test05765" : {
    "methodSignature" : "public int compareTo(final BigFraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05765() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction((-467.49498417), 1480);\n    bigFraction0.doubleValue();\n    bigFraction0.getNumeratorAsLong();\n    bigFraction0.compareTo((BigFraction) null);\n}",
    "testName" : "test05765"
  },
  "test08997" : {
    "methodSignature" : "public BigFraction(final double value, final double epsilon, final int maxIterations) throws FractionConversionException",
    "methodName" : "BigFraction",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08997() throws Throwable {\n    BigFraction bigFraction0 = null;\n    bigFraction0 = new BigFraction(0.01111111111106311, (-1491.6951094175113), (-1208));\n}",
    "testName" : "test08997"
  },
  "test01321" : {
    "methodSignature" : "public BigFraction subtract(final int i)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01321() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_FIFTH;\n    bigFraction0.getDenominatorAsLong();\n    bigFraction0.subtract(603);\n}",
    "testName" : "test01321"
  },
  "test06573" : {
    "methodSignature" : "public BigFraction multiply(final BigInteger bg)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06573() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_THIRD;\n    BigInteger bigInteger0 = null;\n    bigFraction0.MINUS_ONE.multiply((BigInteger) null);\n}",
    "testName" : "test06573"
  },
  "test07785" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07785() throws Throwable {\n    BigInteger bigInteger0 = BigInteger.ONE;\n    BigFraction bigFraction0 = new BigFraction(bigInteger0);\n    bigFraction0.ONE_THIRD.getNumeratorAsLong();\n    bigFraction0.ONE_QUARTER.getField();\n    bigFraction0.MINUS_ONE.pow(0.0);\n    BigFraction bigFraction1 = new BigFraction(2098L, 1L);\n    bigFraction0.ONE_QUARTER.add(bigFraction1);\n    BigFraction bigFraction2 = bigFraction0.add(581);\n    bigFraction0.pow(1);\n    bigFraction2.getNumeratorAsInt();\n    bigFraction0.getDenominator();\n    bigFraction2.divide(bigFraction0);\n    bigFraction0.subtract((-913L));\n    bigFraction2.subtract(1L);\n    bigFraction0.floatValue();\n}",
    "testName" : "test07785"
  },
  "test03341" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03341() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_THIRD;\n    BigFraction bigFraction1 = BigFraction.ONE_THIRD;\n    BigFraction bigFraction2 = bigFraction0.multiply(bigFraction1);\n    BigFraction.getReducedFraction(2152, 2152);\n    bigFraction2.toString();\n}",
    "testName" : "test03341"
  },
  "test04149" : {
    "methodSignature" : "public BigFraction add(final BigInteger bg) throws NullArgumentException",
    "methodName" : "add",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04149() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction(1362.6);\n    BigFraction bigFraction1 = BigFraction.TWO_FIFTHS;\n    bigFraction0.TWO_THIRDS.pow((-197));\n    BigFraction bigFraction2 = bigFraction0.ZERO.divide(bigFraction1);\n    bigFraction2.THREE_FIFTHS.toString();\n    bigFraction0.compareTo(bigFraction1);\n    BigFraction bigFraction3 = bigFraction2.ONE_FIFTH.divide(2627);\n    bigFraction0.negate();\n    BigFraction bigFraction4 = bigFraction3.reduce();\n    BigFraction bigFraction5 = bigFraction3.add((-6265L));\n    bigFraction2.toString();\n    bigFraction4.doubleValue();\n    MockRandom mockRandom0 = new MockRandom();\n    BigInteger bigInteger0 = BigInteger.probablePrime(2627, mockRandom0);\n    bigFraction5.add(bigInteger0);\n}",
    "testName" : "test04149"
  },
  "test102110" : {
    "methodSignature" : "public BigFraction pow(final BigInteger exponent)",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102110() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction((-974L));\n    BigFraction bigFraction1 = bigFraction0.TWO_QUARTERS.abs();\n    BigFraction bigFraction2 = bigFraction1.ONE_THIRD.pow(1);\n    bigFraction0.TWO.hashCode();\n    int int0 = (-1154);\n    bigFraction1.THREE_QUARTERS.intValue();\n    BigFraction bigFraction3 = bigFraction0.divide((-1154));\n    bigFraction2.ONE_FIFTH.add((-1154));\n    bigFraction3.subtract((-974L));\n    BigFraction bigFraction4 = bigFraction3.add(bigFraction0);\n    bigFraction4.TWO.pow((BigInteger) null);\n}",
    "testName" : "test102110"
  },
  "test02129" : {
    "methodSignature" : "public BigDecimal bigDecimalValue(final int roundingMode)",
    "methodName" : "bigDecimalValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02129() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_HALF;\n    bigFraction0.bigDecimalValue(1438);\n}",
    "testName" : "test02129"
  },
  "test099107" : {
    "methodSignature" : "public BigFraction add(final BigFraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099107() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_QUARTER;\n    bigFraction0.FOUR_FIFTHS.add((BigFraction) null);\n}",
    "testName" : "test099107"
  },
  "test0035" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0035() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_FIFTH;\n    bigFraction0.ONE_HALF.bigDecimalValue();\n    BigFraction bigFraction1 = new BigFraction((-9223372036854775808L), (-9223372036854775808L));\n    bigFraction1.TWO_FIFTHS.floatValue();\n    BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);\n    bigFraction2.ONE_THIRD.getField();\n    byte[] byteArray0 = new byte[7];\n    byteArray0[0] = (byte) (-1);\n    byteArray0[1] = (byte) 79;\n    byteArray0[2] = (byte) 4;\n    byteArray0[3] = (byte) 0;\n    byteArray0[4] = (byte) (-65);\n    byteArray0[5] = (byte) 0;\n    int int0 = bigFraction0.ONE.compareTo(bigFraction2);\n    byteArray0[6] = (byte) (-5);\n    BigInteger bigInteger0 = new BigInteger(byteArray0);\n    BigFraction bigFraction3 = bigFraction2.TWO.divide(bigInteger0);\n    BigFraction bigFraction4 = bigFraction3.THREE_FIFTHS.add((int) (byte) 0);\n    float float0 = bigFraction1.floatValue();\n}",
    "testName" : "test0035"
  },
  "test0036" : {
    "methodSignature" : "public boolean equals(final Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0036() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_FIFTH;\n    bigFraction0.ONE_HALF.bigDecimalValue();\n    BigFraction bigFraction1 = new BigFraction((-9223372036854775808L), (-9223372036854775808L));\n    bigFraction1.TWO_FIFTHS.floatValue();\n    BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);\n    bigFraction2.ONE_THIRD.getField();\n    byte[] byteArray0 = new byte[7];\n    byteArray0[0] = (byte) (-1);\n    byteArray0[1] = (byte) 79;\n    byteArray0[2] = (byte) 4;\n    byteArray0[3] = (byte) 0;\n    byteArray0[4] = (byte) (-65);\n    byteArray0[5] = (byte) 0;\n    int int0 = bigFraction0.ONE.compareTo(bigFraction2);\n    byteArray0[6] = (byte) (-5);\n    BigInteger bigInteger0 = new BigInteger(byteArray0);\n    BigFraction bigFraction3 = bigFraction2.TWO.divide(bigInteger0);\n    BigFraction bigFraction4 = bigFraction3.THREE_FIFTHS.add((int) (byte) 0);\n    float float0 = bigFraction1.floatValue();\n    float float1 = bigFraction3.floatValue();\n    bigFraction0.equals((Object) bigFraction4);\n}",
    "testName" : "test0036"
  },
  "test0037" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0037() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_FIFTH;\n    bigFraction0.ONE_HALF.bigDecimalValue();\n    BigFraction bigFraction1 = new BigFraction((-9223372036854775808L), (-9223372036854775808L));\n    bigFraction1.TWO_FIFTHS.floatValue();\n    BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);\n    bigFraction2.ONE_THIRD.getField();\n    byte[] byteArray0 = new byte[7];\n    byteArray0[0] = (byte) (-1);\n    byteArray0[1] = (byte) 79;\n    byteArray0[2] = (byte) 4;\n    byteArray0[3] = (byte) 0;\n    byteArray0[4] = (byte) (-65);\n    byteArray0[5] = (byte) 0;\n    int int0 = bigFraction0.ONE.compareTo(bigFraction2);\n    byteArray0[6] = (byte) (-5);\n    BigInteger bigInteger0 = new BigInteger(byteArray0);\n    BigFraction bigFraction3 = bigFraction2.TWO.divide(bigInteger0);\n    BigFraction bigFraction4 = bigFraction3.THREE_FIFTHS.add((int) (byte) 0);\n    float float0 = bigFraction1.floatValue();\n    float float1 = bigFraction3.floatValue();\n}",
    "testName" : "test0037"
  },
  "test100108" : {
    "methodSignature" : "public BigDecimal bigDecimalValue(final int scale, final int roundingMode)",
    "methodName" : "bigDecimalValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100108() throws Throwable {\n    BigInteger bigInteger0 = BigInteger.ONE;\n    BigFraction bigFraction0 = new BigFraction(bigInteger0, bigInteger0);\n    bigFraction0.ONE_QUARTER.doubleValue();\n    bigFraction0.doubleValue();\n    BigFraction bigFraction1 = BigFraction.TWO_THIRDS;\n    BigFraction bigFraction2 = bigFraction0.add(bigFraction1);\n    BigFraction bigFraction3 = bigFraction2.reduce();\n    bigFraction0.reduce();\n    bigFraction1.MINUS_ONE.reduce();\n    bigFraction2.THREE_QUARTERS.pow(1213);\n    bigFraction3.bigDecimalValue((-1780), (-1780));\n}",
    "testName" : "test100108"
  },
  "test0033" : {
    "methodSignature" : "public int compareTo(final BigFraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0033() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_FIFTH;\n    bigFraction0.ONE_HALF.bigDecimalValue();\n    BigFraction bigFraction1 = new BigFraction((-9223372036854775808L), (-9223372036854775808L));\n    bigFraction1.TWO_FIFTHS.floatValue();\n    BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);\n    bigFraction2.ONE_THIRD.getField();\n    byte[] byteArray0 = new byte[7];\n    byteArray0[0] = (byte) (-1);\n    byteArray0[1] = (byte) 79;\n    byteArray0[2] = (byte) 4;\n    byteArray0[3] = (byte) 0;\n    byteArray0[4] = (byte) (-65);\n    byteArray0[5] = (byte) 0;\n    int int0 = bigFraction0.ONE.compareTo(bigFraction2);\n}",
    "testName" : "test0033"
  },
  "test0034" : {
    "methodSignature" : "public boolean equals(final Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0034() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_FIFTH;\n    bigFraction0.ONE_HALF.bigDecimalValue();\n    BigFraction bigFraction1 = new BigFraction((-9223372036854775808L), (-9223372036854775808L));\n    bigFraction1.TWO_FIFTHS.floatValue();\n    BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);\n    bigFraction2.ONE_THIRD.getField();\n    byte[] byteArray0 = new byte[7];\n    byteArray0[0] = (byte) (-1);\n    byteArray0[1] = (byte) 79;\n    byteArray0[2] = (byte) 4;\n    byteArray0[3] = (byte) 0;\n    byteArray0[4] = (byte) (-65);\n    byteArray0[5] = (byte) 0;\n    int int0 = bigFraction0.ONE.compareTo(bigFraction2);\n    byteArray0[6] = (byte) (-5);\n    BigInteger bigInteger0 = new BigInteger(byteArray0);\n    BigFraction bigFraction3 = bigFraction2.TWO.divide(bigInteger0);\n    BigFraction bigFraction4 = bigFraction3.THREE_FIFTHS.add((int) (byte) 0);\n    bigFraction4.equals((Object) bigFraction0);\n}",
    "testName" : "test0034"
  },
  "test06169" : {
    "methodSignature" : "public BigFraction multiply(final int i)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06169() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction(9007199254740990L);\n    BigInteger bigInteger0 = BigInteger.ZERO;\n    BigFraction bigFraction1 = bigFraction0.TWO_FIFTHS.add(bigInteger0);\n    bigFraction1.ONE_HALF.equals(\" / \");\n    bigFraction0.TWO_QUARTERS.getField();\n    bigFraction0.toString();\n    bigFraction0.getNumeratorAsInt();\n    bigFraction1.TWO_FIFTHS.percentageValue();\n    BigFraction bigFraction2 = bigFraction1.abs();\n    Object object0 = new Object();\n    bigFraction0.equals(object0);\n    BigFraction bigFraction3 = bigFraction0.TWO_QUARTERS.multiply(bigInteger0);\n    bigFraction1.intValue();\n    BigFraction bigFraction4 = bigFraction2.add(bigInteger0);\n    BigFraction bigFraction5 = bigFraction3.reduce();\n    bigFraction5.floatValue();\n    bigFraction4.multiply((-2));\n}",
    "testName" : "test06169"
  },
  "test08189" : {
    "methodSignature" : "public BigFraction subtract(final BigFraction fraction)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08189() throws Throwable {\n    int int0 = 1075;\n    BigFraction bigFraction0 = new BigFraction(1075);\n    bigFraction0.getDenominator();\n    bigFraction0.TWO.subtract((-4337));\n    bigFraction0.subtract((BigFraction) null);\n}",
    "testName" : "test08189"
  },
  "test02634" : {
    "methodSignature" : "public BigFraction pow(final int exponent)",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02634() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.TWO;\n    bigFraction0.doubleValue();\n    bigFraction0.FOUR_FIFTHS.getField();\n    bigFraction0.pow(847);\n}",
    "testName" : "test02634"
  },
  "test03846" : {
    "methodSignature" : "public long getDenominatorAsLong()",
    "methodName" : "getDenominatorAsLong",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03846() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE;\n    bigFraction0.ONE_HALF.pow((-1302));\n    bigFraction0.TWO_FIFTHS.subtract((-4906));\n    bigFraction0.getDenominatorAsLong();\n}",
    "testName" : "test03846"
  },
  "test01422" : {
    "methodSignature" : "public BigFraction divide(final BigFraction fraction)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01422() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_THIRD;\n    BigFraction bigFraction1 = BigFraction.THREE_QUARTERS;\n    bigFraction0.divide(bigFraction1);\n}",
    "testName" : "test01422"
  },
  "test05866" : {
    "methodSignature" : "public BigFraction subtract(final long l)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05866() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.getReducedFraction((-1), (-1));\n    BigFraction bigFraction1 = new BigFraction((long) (-1));\n    BigFraction bigFraction2 = bigFraction0.multiply(bigFraction1);\n    bigFraction0.percentageValue();\n    BigFraction bigFraction3 = bigFraction2.divide(9218868437227405312L);\n    bigFraction3.subtract(0L);\n}",
    "testName" : "test05866"
  },
  "test105113" : {
    "methodSignature" : "public BigDecimal bigDecimalValue(final int scale, final int roundingMode)",
    "methodName" : "bigDecimalValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105113() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.THREE_QUARTERS;\n    bigFraction0.ZERO.percentageValue();\n    bigFraction0.THREE_FIFTHS.floatValue();\n    BigInteger bigInteger0 = BigInteger.TEN;\n    BigFraction bigFraction1 = bigFraction0.subtract(bigInteger0);\n    bigFraction0.toString();\n    bigFraction1.longValue();\n    BigFraction bigFraction2 = bigFraction1.subtract(bigFraction0);\n    int int0 = (-1905);\n    bigFraction2.TWO_THIRDS.subtract((-494));\n    bigFraction2.ONE_QUARTER.pow((-1905));\n    bigFraction1.negate();\n    bigFraction1.bigDecimalValue(2926, 2023);\n}",
    "testName" : "test105113"
  },
  "test00614" : {
    "methodSignature" : "public BigFraction divide(final BigFraction fraction)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00614() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_HALF;\n    bigFraction0.ONE_FIFTH.getDenominatorAsInt();\n    int int0 = (-1209);\n    BigFraction bigFraction1 = null;\n    bigFraction0.TWO_THIRDS.divide((BigFraction) null);\n}",
    "testName" : "test00614"
  },
  "test01826" : {
    "methodSignature" : "public int compareTo(final BigFraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01826() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction(1013.127912813, 1013.127912813, 2274);\n    BigFraction bigFraction1 = BigFraction.ONE_QUARTER;\n    bigFraction0.compareTo(bigFraction1);\n}",
    "testName" : "test01826"
  },
  "test096104" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096104() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction((-858));\n    bigFraction0.ONE_FIFTH.reduce();\n    BigFraction bigFraction1 = bigFraction0.ONE_FIFTH.abs();\n    BigFraction bigFraction2 = bigFraction1.ONE_HALF.pow(1);\n    bigFraction2.TWO.negate();\n    BigInteger bigInteger0 = BigInteger.ZERO;\n    BigFraction bigFraction3 = bigFraction0.subtract(bigInteger0);\n    BigFraction bigFraction4 = bigFraction3.ONE_HALF.add((-1));\n    bigFraction3.compareTo(bigFraction0);\n    bigFraction3.ONE_QUARTER.hashCode();\n    bigFraction0.pow((double) (-858));\n    bigFraction1.pow((-570.8664653));\n    BigFraction bigFraction5 = bigFraction3.multiply(bigInteger0);\n    bigFraction5.TWO_THIRDS.negate();\n    bigFraction5.MINUS_ONE.bigDecimalValue();\n    BigFraction bigFraction6 = bigFraction0.divide((long) 1);\n    bigFraction6.TWO_FIFTHS.longValue();\n    bigFraction6.ONE_HALF.add(0);\n    BigFraction bigFraction7 = bigFraction4.multiply((-3208));\n    bigFraction7.ONE_HALF.multiply((-1530L));\n    bigFraction7.MINUS_ONE.bigDecimalValue();\n    BigInteger bigInteger1 = bigFraction1.getNumerator();\n    BigFraction bigFraction8 = bigFraction4.multiply(bigInteger1);\n    bigFraction3.ONE_HALF.reciprocal();\n    bigFraction7.intValue();\n    bigFraction4.reduce();\n    bigFraction8.floatValue();\n    bigFraction6.hashCode();\n}",
    "testName" : "test096104"
  },
  "test07482" : {
    "methodSignature" : "public int getDenominatorAsInt()",
    "methodName" : "getDenominatorAsInt",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07482() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.TWO;\n    BigFraction bigFraction1 = BigFraction.THREE_QUARTERS;\n    bigFraction0.MINUS_ONE.subtract(bigFraction1);\n    bigFraction0.getDenominatorAsInt();\n}",
    "testName" : "test07482"
  },
  "test08694" : {
    "methodSignature" : "public BigFraction reciprocal()",
    "methodName" : "reciprocal",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08694() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.TWO_QUARTERS;\n    bigFraction0.FOUR_FIFTHS.bigDecimalValue();\n    bigFraction0.ONE_FIFTH.bigDecimalValue(1770, 0);\n    BigFraction bigFraction1 = BigFraction.THREE_FIFTHS;\n    BigFraction bigFraction2 = bigFraction0.TWO.subtract(bigFraction1);\n    bigFraction2.pow((double) 0);\n    BigFraction bigFraction3 = bigFraction0.multiply((-1068));\n    bigFraction3.ONE_QUARTER.intValue();\n    BigFraction bigFraction4 = bigFraction3.multiply((long) 0);\n    BigFraction bigFraction5 = bigFraction0.negate();\n    bigFraction5.THREE_QUARTERS.multiply(1494L);\n    bigFraction5.FOUR_FIFTHS.getDenominatorAsInt();\n    int int0 = 1;\n    BigFraction bigFraction6 = bigFraction4.TWO_THIRDS.subtract(1);\n    bigFraction6.ONE_FIFTH.getField();\n    bigFraction6.ONE.reciprocal();\n    bigFraction0.ONE_FIFTH.abs();\n    bigFraction4.TWO_FIFTHS.add(748);\n    bigFraction4.divide((long) (-1068));\n    bigFraction4.reciprocal();\n}",
    "testName" : "test08694"
  },
  "test04250" : {
    "methodSignature" : "public BigInteger getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04250() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction(2645L);\n    bigFraction0.getDenominator();\n}",
    "testName" : "test04250"
  },
  "test06270" : {
    "methodSignature" : "public BigFractionField getField()",
    "methodName" : "getField",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06270() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction((-1.0));\n    BigFraction bigFraction1 = BigFraction.ZERO;\n    bigFraction1.THREE_FIFTHS.bigDecimalValue();\n    BigFraction bigFraction2 = bigFraction0.add(bigFraction1);\n    bigFraction0.THREE_QUARTERS.getNumeratorAsLong();\n    bigFraction1.ONE_HALF.add((-1102));\n    BigInteger bigInteger0 = bigFraction2.getNumerator();\n    BigFraction bigFraction3 = bigFraction0.multiply(bigInteger0);\n    BigFraction bigFraction4 = bigFraction3.FOUR_FIFTHS.pow((-1102));\n    bigFraction2.TWO_FIFTHS.subtract(bigFraction3);\n    bigFraction3.ZERO.negate();\n    bigFraction0.floatValue();\n    bigFraction4.negate();\n    bigFraction0.getDenominatorAsInt();\n    bigFraction1.getField();\n}",
    "testName" : "test06270"
  },
  "test02230" : {
    "methodSignature" : "public BigFraction pow(final BigInteger exponent)",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02230() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_THIRD;\n    bigFraction0.ONE_QUARTER.pow(0.0);\n    bigFraction0.ONE_FIFTH.toString();\n    BigInteger bigInteger0 = BigInteger.ZERO;\n    bigFraction0.pow(bigInteger0);\n}",
    "testName" : "test02230"
  },
  "test03442" : {
    "methodSignature" : "public BigFraction divide(final int i)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03442() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_QUARTER;\n    BigFraction bigFraction1 = BigFraction.ONE_HALF;\n    BigFraction bigFraction2 = bigFraction1.ONE_HALF.subtract(bigFraction0);\n    bigFraction1.intValue();\n    BigFraction bigFraction3 = BigFraction.getReducedFraction(182, 2871);\n    BigFraction bigFraction4 = bigFraction0.divide(bigFraction1);\n    bigFraction3.longValue();\n    BigInteger bigInteger0 = BigInteger.TEN;\n    bigFraction1.ONE_FIFTH.multiply(bigInteger0);\n    bigFraction2.toString();\n    bigFraction4.divide((-1));\n}",
    "testName" : "test03442"
  },
  "test04654" : {
    "methodSignature" : "public BigFraction(final BigInteger num)",
    "methodName" : "BigFraction",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04654() throws Throwable {\n    BigInteger bigInteger0 = null;\n    BigFraction bigFraction0 = null;\n    bigFraction0 = new BigFraction((BigInteger) null);\n}",
    "testName" : "test04654"
  },
  "test07886" : {
    "methodSignature" : "public BigDecimal bigDecimalValue(final int roundingMode)",
    "methodName" : "bigDecimalValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07886() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_HALF;\n    MockRandom mockRandom0 = new MockRandom();\n    BigInteger bigInteger0 = new BigInteger(794, 794, mockRandom0);\n    BigFraction bigFraction1 = bigFraction0.add(bigInteger0);\n    bigFraction1.ONE_THIRD.intValue();\n    bigFraction0.ONE_FIFTH.doubleValue();\n    BigFraction bigFraction2 = bigFraction0.divide(1728L);\n    BigFraction bigFraction3 = bigFraction2.multiply(4208363204685324176L);\n    BigFraction bigFraction4 = bigFraction3.ONE_HALF.subtract(1728L);\n    bigFraction3.ONE_QUARTER.getNumeratorAsLong();\n    bigFraction3.ONE_QUARTER.pow(1.0);\n    bigFraction4.ONE_THIRD.reciprocal();\n    bigFraction1.bigDecimalValue(0, 1);\n    bigFraction2.ONE_THIRD.getNumeratorAsInt();\n    bigFraction1.getNumeratorAsLong();\n    bigFraction2.hashCode();\n    bigFraction2.bigDecimalValue((-1468));\n}",
    "testName" : "test07886"
  },
  "test05462" : {
    "methodSignature" : "public BigFraction divide(final BigInteger bg)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05462() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_FIFTH;\n    BigFraction bigFraction1 = new BigFraction(0L);\n    BigFraction bigFraction2 = bigFraction0.TWO_FIFTHS.subtract(bigFraction1);\n    bigFraction0.MINUS_ONE.pow(2.4106173515319824);\n    BigFraction bigFraction3 = bigFraction0.reciprocal();\n    BigFraction bigFraction4 = bigFraction0.ONE_HALF.reciprocal();\n    bigFraction0.percentageValue();\n    BigFraction bigFraction5 = bigFraction4.divide(bigFraction0);\n    BigFraction bigFraction6 = bigFraction5.TWO_FIFTHS.divide(1951);\n    BigFraction bigFraction7 = bigFraction6.ONE_FIFTH.reciprocal();\n    bigFraction7.ONE_THIRD.getDenominatorAsInt();\n    BigFraction bigFraction8 = bigFraction5.ONE_FIFTH.multiply(bigFraction3);\n    bigFraction8.TWO_QUARTERS.add(bigFraction4);\n    bigFraction0.getField();\n    bigFraction2.getField();\n    bigFraction1.multiply(4458);\n    bigFraction7.abs();\n    bigFraction7.divide((BigInteger) null);\n}",
    "testName" : "test05462"
  },
  "test06674" : {
    "methodSignature" : "public BigFraction(BigInteger num, BigInteger den)",
    "methodName" : "BigFraction",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06674() throws Throwable {\n    BigInteger bigInteger0 = null;\n    BigFraction bigFraction0 = null;\n    bigFraction0 = new BigFraction((BigInteger) null, (BigInteger) null);\n}",
    "testName" : "test06674"
  },
  "test03038" : {
    "methodSignature" : "public BigFraction divide(final BigInteger bg)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03038() throws Throwable {\n    BigInteger bigInteger0 = BigInteger.ZERO;\n    BigFraction bigFraction0 = new BigFraction(bigInteger0);\n    bigFraction0.getField();\n    BigFraction bigFraction1 = bigFraction0.pow(0L);\n    int int0 = 0;\n    bigFraction1.bigDecimalValue(0);\n    BigFraction bigFraction2 = bigFraction1.multiply(0);\n    bigFraction2.ONE_THIRD.floatValue();\n    BigFraction bigFraction3 = bigFraction0.ONE_FIFTH.pow(bigInteger0);\n    BigFraction bigFraction4 = new BigFraction(bigInteger0);\n    bigFraction3.divide(bigInteger0);\n}",
    "testName" : "test03038"
  },
  "test01018" : {
    "methodSignature" : "public BigFraction add(final int i)",
    "methodName" : "add",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01018() throws Throwable {\n    BigInteger bigInteger0 = BigInteger.ONE;\n    BigFraction bigFraction0 = new BigFraction(bigInteger0);\n    BigFraction bigFraction1 = bigFraction0.divide(1);\n    bigFraction1.add(1);\n}",
    "testName" : "test01018"
  },
  "test08290" : {
    "methodSignature" : "public BigDecimal bigDecimalValue()",
    "methodName" : "bigDecimalValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08290() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.MINUS_ONE;\n    bigFraction0.ONE_QUARTER.longValue();\n    bigFraction0.ONE_THIRD.bigDecimalValue();\n}",
    "testName" : "test08290"
  },
  "test093101" : {
    "methodSignature" : "public BigFraction subtract(final BigInteger bg)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093101() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    byteArray0[0] = (byte) (-3);\n    byteArray0[1] = (byte) 0;\n    byteArray0[2] = (byte) 0;\n    byteArray0[3] = (byte) (-55);\n    byteArray0[4] = (byte) 0;\n    byteArray0[5] = (byte) 0;\n    byteArray0[6] = (byte) 1;\n    BigInteger bigInteger0 = new BigInteger(byteArray0);\n    BigFraction bigFraction0 = new BigFraction(bigInteger0);\n    bigFraction0.subtract((BigInteger) null);\n}",
    "testName" : "test093101"
  },
  "test05058" : {
    "methodSignature" : "public BigFraction(BigInteger num, BigInteger den)",
    "methodName" : "BigFraction",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05058() throws Throwable {\n    BigInteger bigInteger0 = BigInteger.TEN;\n    BigInteger bigInteger1 = BigInteger.ZERO;\n    BigFraction bigFraction0 = null;\n    bigFraction0 = new BigFraction(bigInteger0, bigInteger1);\n}",
    "testName" : "test05058"
  },
  "test07078" : {
    "methodSignature" : "public BigFraction divide(final BigInteger bg)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07078() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE;\n    BigInteger bigInteger0 = BigInteger.ONE;\n    BigFraction bigFraction1 = bigFraction0.subtract(bigInteger0);\n    BigFraction bigFraction2 = bigFraction1.ONE.multiply(bigFraction0);\n    BigFraction bigFraction3 = bigFraction1.divide((-1446L));\n    bigFraction3.FOUR_FIFTHS.pow(bigInteger0);\n    bigFraction3.floatValue();\n    bigFraction0.getField();\n    BigFraction bigFraction4 = bigFraction3.multiply(bigFraction0);\n    bigFraction4.ONE.percentageValue();\n    bigFraction0.subtract(bigInteger0);\n    bigFraction0.floatValue();\n    bigFraction1.equals(\"\");\n    bigFraction2.divide(bigInteger0);\n}",
    "testName" : "test07078"
  },
  "test01523" : {
    "methodSignature" : "public int getDenominatorAsInt()",
    "methodName" : "getDenominatorAsInt",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01523() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.TWO;\n    bigFraction0.subtract(1037L);\n    bigFraction0.getDenominatorAsInt();\n}",
    "testName" : "test01523"
  },
  "test03947" : {
    "methodSignature" : "public BigFraction divide(final int i)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03947() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.THREE_FIFTHS;\n    BigFraction bigFraction1 = bigFraction0.divide((-2803L));\n    BigFraction bigFraction2 = BigFraction.ONE_QUARTER;\n    bigFraction1.compareTo(bigFraction2);\n    bigFraction1.divide(bigFraction0);\n    bigFraction1.divide((-1));\n}",
    "testName" : "test03947"
  },
  "test04755" : {
    "methodSignature" : "public long getDenominatorAsLong()",
    "methodName" : "getDenominatorAsLong",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04755() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE;\n    bigFraction0.ONE.pow(2089L);\n    bigFraction0.getDenominator();\n    bigFraction0.getDenominatorAsLong();\n}",
    "testName" : "test04755"
  },
  "test103111" : {
    "methodSignature" : "public BigFraction pow(final int exponent)",
    "methodName" : "pow",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103111() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction(2147483648L);\n    bigFraction0.getNumeratorAsInt();\n    BigFraction bigFraction1 = bigFraction0.THREE_FIFTHS.add(bigFraction0);\n    BigFraction bigFraction2 = bigFraction1.TWO_QUARTERS.multiply(2147483648L);\n    bigFraction0.TWO_THIRDS.getDenominatorAsInt();\n    bigFraction0.TWO_FIFTHS.subtract(bigFraction0);\n    bigFraction0.percentageValue();\n    bigFraction0.intValue();\n    bigFraction0.getDenominatorAsInt();\n    BigFraction bigFraction3 = bigFraction0.pow((long) 3);\n    BigFraction bigFraction4 = bigFraction0.ONE_THIRD.divide(2147483648L);\n    BigFraction bigFraction5 = BigFraction.ONE_HALF;\n    bigFraction4.ZERO.equals(bigFraction5);\n    bigFraction3.TWO_THIRDS.divide(bigFraction0);\n    bigFraction3.ONE_QUARTER.intValue();\n    BigDecimal bigDecimal0 = new BigDecimal((long) 1);\n    bigFraction3.divide((long) Integer.MIN_VALUE);\n    BigFraction bigFraction6 = bigFraction2.multiply((-3142L));\n    bigFraction6.FOUR_FIFTHS.pow(Integer.MIN_VALUE);\n}",
    "testName" : "test103111"
  },
  "test02735" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02735() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction(2615L);\n    bigFraction0.TWO.pow((-338));\n    bigFraction0.THREE_QUARTERS.toString();\n    bigFraction0.doubleValue();\n}",
    "testName" : "test02735"
  },
  "test05967" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05967() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.TWO_QUARTERS;\n    bigFraction0.doubleValue();\n    BigInteger bigInteger0 = BigInteger.ZERO;\n    bigFraction0.TWO_FIFTHS.multiply(0L);\n    BigFraction bigFraction1 = bigFraction0.add(bigInteger0);\n    bigFraction1.getNumeratorAsLong();\n    bigFraction1.toString();\n}",
    "testName" : "test05967"
  },
  "test01927" : {
    "methodSignature" : "public int getNumeratorAsInt()",
    "methodName" : "getNumeratorAsInt",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01927() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_QUARTER;\n    Object object0 = new Object();\n    bigFraction0.TWO_FIFTHS.equals(object0);\n    bigFraction0.TWO.bigDecimalValue();\n    bigFraction0.getNumeratorAsInt();\n}",
    "testName" : "test01927"
  },
  "test00715" : {
    "methodSignature" : "public BigFraction(final double value, final int maxDenominator) throws FractionConversionException",
    "methodName" : "BigFraction",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00715() throws Throwable {\n    int int0 = (-1);\n    BigFraction bigFraction0 = null;\n    bigFraction0 = new BigFraction(0.0, (-1));\n}",
    "testName" : "test00715"
  },
  "test098106" : {
    "methodSignature" : "public int getDenominatorAsInt()",
    "methodName" : "getDenominatorAsInt",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098106() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction((-1192L), (-3512299194304650054L));\n    BigInteger bigInteger0 = BigInteger.TEN;\n    BigFraction bigFraction1 = new BigFraction(bigInteger0, bigInteger0);\n    bigFraction0.ONE_FIFTH.equals(bigFraction1);\n    BigFraction bigFraction2 = bigFraction0.multiply((-270L));\n    bigFraction2.getDenominatorAsInt();\n}",
    "testName" : "test098106"
  },
  "test06371" : {
    "methodSignature" : "public boolean equals(final Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06371() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE;\n    BigFraction bigFraction1 = bigFraction0.MINUS_ONE.add((-853L));\n    bigFraction0.negate();\n    BigFraction bigFraction2 = BigFraction.MINUS_ONE;\n    bigFraction1.equals(bigFraction2);\n}",
    "testName" : "test06371"
  },
  "test07583" : {
    "methodSignature" : "public BigFraction subtract(final int i)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07583() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.FOUR_FIFTHS;\n    BigFraction bigFraction1 = bigFraction0.negate();\n    bigFraction0.TWO_QUARTERS.multiply(676L);\n    bigFraction0.ZERO.hashCode();\n    bigFraction0.ONE_FIFTH.pow((-940.0));\n    bigFraction0.TWO_QUARTERS.add((-3358L));\n    bigFraction1.divide((-3358L));\n    bigFraction0.subtract((-1105));\n}",
    "testName" : "test07583"
  },
  "test101109" : {
    "methodSignature" : "public BigFraction subtract(final BigInteger bg)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101109() throws Throwable {\n    byte[] byteArray0 = new byte[8];\n    byteArray0[0] = (byte) (-116);\n    byteArray0[1] = (byte) 68;\n    byteArray0[2] = (byte) (-15);\n    byteArray0[3] = (byte) 76;\n    byteArray0[4] = (byte) (-106);\n    byteArray0[5] = (byte) (-103);\n    byteArray0[6] = (byte) 70;\n    byteArray0[7] = (byte) (-31);\n    BigInteger bigInteger0 = new BigInteger(byteArray0);\n    BigFraction bigFraction0 = new BigFraction(bigInteger0, bigInteger0);\n    bigFraction0.subtract(bigInteger0);\n}",
    "testName" : "test101109"
  },
  "test08391" : {
    "methodSignature" : "public BigDecimal bigDecimalValue(final int scale, final int roundingMode)",
    "methodName" : "bigDecimalValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08391() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ZERO;\n    bigFraction0.TWO_THIRDS.intValue();\n    BigInteger bigInteger0 = BigInteger.TEN;\n    BigFraction bigFraction1 = bigFraction0.subtract(bigInteger0);\n    BigFraction bigFraction2 = BigFraction.getReducedFraction(1, 1);\n    BigFraction bigFraction3 = bigFraction1.reduce();\n    bigFraction3.THREE_FIFTHS.multiply(bigFraction1);\n    BigFraction.getReducedFraction(0, 0);\n    BigFraction bigFraction4 = bigFraction0.multiply(bigInteger0);\n    BigFraction bigFraction5 = BigFraction.getReducedFraction(0, 5);\n    bigFraction5.ONE.getDenominatorAsLong();\n    bigFraction2.pow(bigInteger0);\n    BigFraction bigFraction6 = new BigFraction(36);\n    bigFraction5.THREE_QUARTERS.compareTo(bigFraction6);\n    BigFraction bigFraction7 = bigFraction2.reduce();\n    BigFraction bigFraction8 = bigFraction1.abs();\n    bigFraction8.ONE_FIFTH.floatValue();\n    bigFraction0.getNumerator();\n    bigFraction5.divide(bigFraction1);\n    bigFraction7.toString();\n    bigFraction6.pow(1.0);\n    bigFraction4.bigDecimalValue(1, (-806));\n}",
    "testName" : "test08391"
  },
  "test06775" : {
    "methodSignature" : "public long getNumeratorAsLong()",
    "methodName" : "getNumeratorAsLong",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06775() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ZERO;\n    BigInteger bigInteger0 = BigInteger.TEN;\n    bigFraction0.ONE_HALF.pow(bigInteger0);\n    BigInteger bigInteger1 = BigInteger.ZERO;\n    bigFraction0.multiply(bigInteger1);\n    bigFraction0.getNumeratorAsLong();\n}",
    "testName" : "test06775"
  },
  "test07987" : {
    "methodSignature" : "public BigFractionField getField()",
    "methodName" : "getField",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07987() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.TWO_THIRDS;\n    BigFraction bigFraction1 = bigFraction0.TWO_FIFTHS.pow((-2499L));\n    bigFraction0.multiply(710L);\n    bigFraction1.divide((-2377L));\n    bigFraction0.getField();\n}",
    "testName" : "test07987"
  },
  "test03543" : {
    "methodSignature" : "public BigFraction add(final BigInteger bg) throws NullArgumentException",
    "methodName" : "add",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03543() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction(6722166367014452318L, 6722166367014452318L);\n    BigInteger bigInteger0 = BigInteger.TEN;\n    bigFraction0.add(bigInteger0);\n}",
    "testName" : "test03543"
  },
  "test04351" : {
    "methodSignature" : "public BigFraction subtract(final BigFraction fraction)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04351() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ZERO;\n    BigInteger bigInteger0 = BigInteger.ZERO;\n    BigFraction bigFraction1 = bigFraction0.FOUR_FIFTHS.add(bigInteger0);\n    BigFraction bigFraction2 = bigFraction1.ONE_FIFTH.pow((-608L));\n    BigFraction bigFraction3 = bigFraction1.MINUS_ONE.pow(1191);\n    bigFraction0.pow(1.552583321178453E-10);\n    bigFraction1.toString();\n    bigFraction1.intValue();\n    BigFraction bigFraction4 = BigFraction.getReducedFraction(0, 1191);\n    bigFraction0.getNumeratorAsInt();\n    bigFraction2.hashCode();\n    bigFraction0.bigDecimalValue(3, 4);\n    BigFraction bigFraction5 = bigFraction0.multiply(bigInteger0);\n    bigFraction5.TWO.hashCode();\n    bigFraction3.ONE_QUARTER.floatValue();\n    bigFraction5.TWO.hashCode();\n    BigFraction bigFraction6 = bigFraction2.reduce();\n    bigFraction0.ONE_THIRD.getField();\n    BigFraction bigFraction7 = bigFraction1.add((-3183605296591799669L));\n    bigFraction7.ONE.subtract(bigFraction3);\n    bigFraction7.ONE_THIRD.bigDecimalValue(0, 0);\n    bigFraction7.compareTo(bigFraction2);\n    BigFraction bigFraction8 = bigFraction1.add((long) (-1));\n    bigFraction8.TWO.multiply(bigFraction4);\n    bigFraction1.doubleValue();\n    bigFraction7.getDenominator();\n    bigFraction3.pow(1.552583321178453E-10);\n    bigFraction7.add(bigFraction6);\n    bigFraction4.subtract(bigFraction7);\n}",
    "testName" : "test04351"
  },
  "test02331" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02331() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction(880.1038475455);\n    bigFraction0.ONE_THIRD.floatValue();\n    bigFraction0.percentageValue();\n}",
    "testName" : "test02331"
  },
  "test05563" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05563() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction(0L);\n    BigFraction bigFraction1 = bigFraction0.divide(4577762542105553359L);\n    bigFraction1.TWO_FIFTHS.pow((-1.0));\n    bigFraction1.floatValue();\n}",
    "testName" : "test05563"
  },
  "test08795" : {
    "methodSignature" : "public BigFraction multiply(final BigInteger bg)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08795() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction(2145);\n    BigFraction bigFraction1 = bigFraction0.TWO_FIFTHS.add((long) 2145);\n    bigFraction0.ZERO.floatValue();\n    bigFraction0.getNumeratorAsInt();\n    bigFraction0.multiply(0L);\n    byte[] byteArray0 = new byte[6];\n    byteArray0[0] = (byte) (-42);\n    byteArray0[1] = (byte) (-104);\n    byteArray0[2] = (byte) 100;\n    byteArray0[3] = (byte) (-114);\n    byteArray0[4] = (byte) 37;\n    byteArray0[5] = (byte) 16;\n    BigInteger bigInteger0 = new BigInteger(byteArray0);\n    bigFraction1.multiply(bigInteger0);\n}",
    "testName" : "test08795"
  },
  "test01119" : {
    "methodSignature" : "public BigFraction(final double value, final int maxDenominator) throws FractionConversionException",
    "methodName" : "BigFraction",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01119() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction(2421.19, 629);\n}",
    "testName" : "test01119"
  },
  "test03139" : {
    "methodSignature" : "public BigFraction subtract(final BigInteger bg)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03139() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.getReducedFraction(2277, 1);\n    BigInteger bigInteger0 = BigInteger.ONE;\n    bigFraction0.subtract(bigInteger0);\n}",
    "testName" : "test03139"
  },
  "test095103" : {
    "methodSignature" : "public BigFraction add(final BigInteger bg) throws NullArgumentException",
    "methodName" : "add",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095103() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.TWO;\n    bigFraction0.longValue();\n    byte[] byteArray0 = new byte[3];\n    byteArray0[0] = (byte) (-1);\n    byteArray0[1] = (byte) (-83);\n    BigInteger bigInteger0 = BigInteger.ONE;\n    bigFraction0.TWO_THIRDS.add(bigInteger0);\n    bigFraction0.ZERO.pow(0.0);\n    byteArray0[2] = (byte) (-1);\n    bigFraction0.ONE_QUARTER.floatValue();\n    BigInteger bigInteger1 = new BigInteger(byteArray0);\n    BigFraction bigFraction1 = bigFraction0.pow(bigInteger1);\n    BigInteger bigInteger2 = null;\n    BigFraction bigFraction2 = BigFraction.ZERO;\n    bigFraction1.ONE.add(bigFraction2);\n    bigFraction0.add((BigInteger) null);\n}",
    "testName" : "test095103"
  },
  "test09199" : {
    "methodSignature" : "public BigDecimal bigDecimalValue(final int roundingMode)",
    "methodName" : "bigDecimalValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09199() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.getReducedFraction((-1482), 1045);\n    bigFraction0.toString();\n    BigFraction bigFraction1 = new BigFraction((-1), 1045);\n    bigFraction0.ONE.percentageValue();\n    BigFraction bigFraction2 = bigFraction1.TWO_QUARTERS.multiply((-496L));\n    bigFraction1.THREE_QUARTERS.equals(\"-78 / 55\");\n    BigFraction bigFraction3 = bigFraction0.add(bigFraction1);\n    BigInteger bigInteger0 = bigFraction3.getDenominator();\n    BigFraction bigFraction4 = bigFraction2.multiply(bigInteger0);\n    bigFraction4.TWO_THIRDS.getNumeratorAsLong();\n    BigFraction bigFraction5 = bigFraction1.add(1);\n    BigInteger bigInteger1 = BigInteger.ONE;\n    bigInteger1.xor(bigInteger0);\n    bigFraction0.divide(bigInteger1);\n    BigFraction bigFraction6 = bigFraction2.multiply(bigFraction5);\n    bigFraction6.TWO_QUARTERS.pow(0.0);\n    bigFraction5.TWO.subtract((long) 1);\n    bigFraction5.divide(bigFraction0);\n    bigFraction5.bigDecimalValue(2472);\n}",
    "testName" : "test09199"
  },
  "test05159" : {
    "methodSignature" : "public BigFraction(BigInteger num, BigInteger den)",
    "methodName" : "BigFraction",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05159() throws Throwable {\n    BigInteger bigInteger0 = BigInteger.ZERO;\n    BigFraction bigFraction0 = null;\n    bigFraction0 = new BigFraction(bigInteger0, bigInteger0);\n}",
    "testName" : "test05159"
  },
  "test07179" : {
    "methodSignature" : "public BigInteger getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07179() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.TWO_FIFTHS;\n    bigFraction0.getNumerator();\n}",
    "testName" : "test07179"
  },
  "test00412" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00412() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE_QUARTER;\n    BigFraction bigFraction1 = BigFraction.getReducedFraction(1055, 37);\n    BigFraction bigFraction2 = bigFraction1.ONE_HALF.add(1055);\n    BigFraction bigFraction3 = bigFraction0.pow(0L);\n    BigFraction bigFraction4 = bigFraction3.divide((-2651));\n    double double0 = bigFraction2.doubleValue();\n}",
    "testName" : "test00412"
  },
  "test02836" : {
    "methodSignature" : "public BigFraction(final double value, final double epsilon, final int maxIterations) throws FractionConversionException",
    "methodName" : "BigFraction",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02836() throws Throwable {\n    BigInteger bigInteger0 = BigInteger.TEN;\n    BigFraction bigFraction0 = new BigFraction(bigInteger0);\n    BigFraction bigFraction1 = null;\n    bigFraction1 = new BigFraction(0.0, 0.0, 2356);\n}",
    "testName" : "test02836"
  },
  "test03644" : {
    "methodSignature" : "public boolean equals(final Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03644() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.ONE;\n    Object object0 = new Object();\n    bigFraction0.equals(object0);\n}",
    "testName" : "test03644"
  },
  "test01624" : {
    "methodSignature" : "public BigFraction divide(final long l)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01624() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction(1135.778507909085, 27);\n    bigFraction0.divide(4577762542105553359L);\n}",
    "testName" : "test01624"
  },
  "test04856" : {
    "methodSignature" : "public static BigFraction getReducedFraction(final int numerator, final int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04856() throws Throwable {\n    BigFraction bigFraction0 = BigFraction.THREE_QUARTERS;\n    bigFraction0.subtract(0);\n    BigFraction.getReducedFraction((-4785), (-4785));\n}",
    "testName" : "test04856"
  },
  "test00816" : {
    "methodSignature" : "public BigDecimal bigDecimalValue(final int roundingMode)",
    "methodName" : "bigDecimalValue",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00816() throws Throwable {\n    BigFraction bigFraction0 = new BigFraction(206.213706466, 206.213706466, (-3));\n    bigFraction0.TWO_THIRDS.doubleValue();\n    bigFraction0.FOUR_FIFTHS.percentageValue();\n    BigFraction bigFraction1 = BigFraction.MINUS_ONE;\n    bigFraction1.ONE.multiply(bigFraction0);\n    BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);\n    BigFraction bigFraction3 = bigFraction1.TWO_QUARTERS.multiply((-2446L));\n    bigFraction0.longValue();\n    BigFraction bigFraction4 = BigFraction.getReducedFraction((-3), (-182));\n    BigFraction bigFraction5 = bigFraction0.multiply(206L);\n    BigFraction bigFraction6 = bigFraction5.add(bigFraction2);\n    bigFraction3.pow((-182));\n    bigFraction6.longValue();\n    bigFraction4.reduce();\n    bigFraction2.getDenominatorAsInt();\n    bigFraction5.hashCode();\n    bigFraction1.getDenominator();\n    bigFraction4.bigDecimalValue((-182));\n}",
    "testName" : "test00816"
  },
  "test092100" : {
    "methodSignature" : "public BigFraction(final double value, final int maxDenominator) throws FractionConversionException",
    "methodName" : "BigFraction",
    "className" : "org.apache.commons.math.fraction.BigFraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092100() throws Throwable {\n    BigFraction bigFraction0 = null;\n    bigFraction0 = new BigFraction(3.7048805655699485E151, 1);\n}",
    "testName" : "test092100"
  }
}