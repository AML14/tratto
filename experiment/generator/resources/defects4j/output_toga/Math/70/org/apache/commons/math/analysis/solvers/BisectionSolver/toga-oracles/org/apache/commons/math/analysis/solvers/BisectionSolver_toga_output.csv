project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test011,"public void test011() throws Throwable {
    BisectionSolver bisectionSolver0 = new BisectionSolver();
    bisectionSolver0.solve(6.940845639756056, 6.940845639756056, 6.940845639756056);
}",1,
project,0,test022,"public void test022() throws Throwable {
    UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    doReturn(5.406718628364615E-9, 5.406718628364615E-9, 5.406718628364615E-9, 5.406718628364615E-9, 5.406718628364615E-9).when(univariateRealFunction0).value(anyDouble());
    BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
    UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    bisectionSolver0.solve(univariateRealFunction1, 5.406718628364615E-9, 2.4904010193268507, 5.406718628364615E-9);
}",1,
project,0,test033,"public void test033() throws Throwable {
    BisectionSolver bisectionSolver0 = new BisectionSolver();
    bisectionSolver0.solve((-251.2857715), 51.981129398, (-251.2857715));
}",1,
project,0,test055,"public void test055() throws Throwable {
    UnivariateRealFunction univariateRealFunction0 = null;
    BisectionSolver bisectionSolver0 = null;
    try {
        bisectionSolver0 = new BisectionSolver((UnivariateRealFunction) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // function to solve cannot be null
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",0,
project,0,test099,"public void test099() throws Throwable {
    BisectionSolver bisectionSolver0 = new BisectionSolver();
    bisectionSolver0.result = (-864.2);
    bisectionSolver0.resetRelativeAccuracy();
    double double0 = 1.0E-15;
    bisectionSolver0.setAbsoluteAccuracy(1.0E-15);
    bisectionSolver0.functionValueAccuracy = (-864.2);
    UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    double double1 = (-508.649680886601);
    UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    UnivariateRealFunction univariateRealFunction2 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    doReturn(0.0, 0.0).when(univariateRealFunction2).value(anyDouble());
    bisectionSolver0.isBracketing((-864.2), (-2348.881511), univariateRealFunction2);
    UnivariateRealFunction univariateRealFunction3 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    bisectionSolver0.solve(univariateRealFunction3, (-864.2), 1.0E-15, 0.0);
    bisectionSolver0.verifyBracketing(double1, double1, univariateRealFunction1);
    double double2 = 1.0;
    // Undeclared exception!
    try {
        bisectionSolver0.resetMaximalIterationCount();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.analysis.solvers.BisectionSolver"", e);
    }
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
    UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    double double0 = (-2007.8392609);
    // Undeclared exception!
    try {
        bisectionSolver0.solve(univariateRealFunction1, (-2007.8392609), (-2007.8392609));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // endpoints do not specify an interval: [-2,007.839, -2,007.839]
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction0).value(anyDouble());
    BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
    bisectionSolver0.setResult((-3567.241), 1.0E-14, 3);
    bisectionSolver0.setResult((-432.6581938845), (-2798));
    UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    doReturn(0.0, 0.0).when(univariateRealFunction1).value(anyDouble());
    bisectionSolver0.isBracketing(4288.547, 4288.547, univariateRealFunction1);
    double double0 = bisectionSolver0.solve((-432.6581938845), Double.POSITIVE_INFINITY, 0.0);
    UnivariateRealFunction univariateRealFunction2 = null;
    double double1 = 1254.5779;
    bisectionSolver0.solve(univariateRealFunction2, double1, double1);
    double double2 = 156.7199311373;
    bisectionSolver0.solve(double2, double0);
    double double3 = 1.0;
    double double4 = 1293.9865620470193;
    try {
        bisectionSolver0.solve(double0, double3, double4);
        fail(""Expecting exception: Exception"");
    } catch (Exception e) {
        //
        // Maximal number of iterations (100) exceeded
        //
        verifyException(""org.apache.commons.math.analysis.solvers.BisectionSolver"", e);
    }
}",1,
project,0,test1313,"public void test1313() throws Throwable {
    UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction0).value(anyDouble());
    BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
    bisectionSolver0.solve(0.0, 1.0);
}",1,
project,0,test1414,"public void test1414() throws Throwable {
    UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction0).value(anyDouble());
    BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
    bisectionSolver0.solve((-2698.571479289), 0.0, 0.0);
}",1,
project,0,test1515,"public void test1515() throws Throwable {
    UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction0).value(anyDouble());
    BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
    bisectionSolver0.solve(0.0, 1.0, 0.0);
}",1,
project,0,test1616,"public void test1616() throws Throwable {
    UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction0).value(anyDouble());
    BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
    bisectionSolver0.solve((-3282.6), (-1.0));
    UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction1).value(anyDouble());
    bisectionSolver0.solve(univariateRealFunction1, (-3282.6), 1.0);
}",1,
project,0,test1919,"public void test1919() throws Throwable {
    UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction0).value(anyDouble());
    BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
    bisectionSolver0.functionValue = 1.0;
    bisectionSolver0.solve(1.0, 1033.952836874215);
    UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction1).value(anyDouble());
    bisectionSolver0.solve(univariateRealFunction1, 1.0, 1033.952836874215);
}",0,
project,0,test2020,"public void test2020() throws Throwable {
    UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealFunction0).value(anyDouble());
    BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
    UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    bisectionSolver0.solve(univariateRealFunction1, (-2220.5), 0.0, 0.0);
}",1,
project,0,test2121,"public void test2121() throws Throwable {
    BisectionSolver bisectionSolver0 = new BisectionSolver();
    bisectionSolver0.verifyInterval(3615.837, Double.POSITIVE_INFINITY);
    UnivariateRealFunction univariateRealFunction0 = null;
    double double0 = 0.0;
    double double1 = 470.0;
    bisectionSolver0.solve((UnivariateRealFunction) null, 0.0, 470.0);
    double double2 = 0.0;
    // Undeclared exception!
    try {
        bisectionSolver0.verifyInterval(double0, double2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.analysis.solvers.BisectionSolver"", e);
    }
}",1,
project,0,test2222,"public void test2222() throws Throwable {
    BisectionSolver bisectionSolver0 = new BisectionSolver();
    UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    doReturn(435.3, 435.3, 0.0, 435.3, 1.0E-15).when(univariateRealFunction0).value(anyDouble());
    bisectionSolver0.resetMaximalIterationCount();
    bisectionSolver0.defaultFunctionValueAccuracy = 2464.25961844;
    bisectionSolver0.setFunctionValueAccuracy(0.0);
    bisectionSolver0.solve(univariateRealFunction0, (-304.0), 0.0);
    bisectionSolver0.setRelativeAccuracy((-304.0));
}",0,
project,0,test2525,"public void test2525() throws Throwable {
    UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    doReturn(5.406718628364615E-9, 5.406718628364615E-9, 5.406718628364615E-9, 436.568589, 436.568589).when(univariateRealFunction0).value(anyDouble());
    BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
    UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    bisectionSolver0.setMaximalIterationCount(25);
    bisectionSolver0.solve(univariateRealFunction1, 436.568589, Double.POSITIVE_INFINITY, 3475.0);
    double double0 = 0.0;
    double double1 = 1.0;
    bisectionSolver0.solve(double0, double1, double0);
}",1,
project,0,test2626,"public void test2626() throws Throwable {
    UnivariateRealFunction univariateRealFunction0 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    doReturn(5.406718628364615E-9, 5.406718628364615E-9).when(univariateRealFunction0).value(anyDouble());
    BisectionSolver bisectionSolver0 = new BisectionSolver(univariateRealFunction0);
    bisectionSolver0.setAbsoluteAccuracy(1.0);
    UnivariateRealFunction univariateRealFunction1 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    bisectionSolver0.result = 1.0;
    bisectionSolver0.solve(univariateRealFunction1, (-1.0), 1.0, 0.0);
    UnivariateRealFunction univariateRealFunction2 = mock(UnivariateRealFunction.class, new ViolatedAssumptionAnswer());
    bisectionSolver0.solve(univariateRealFunction2, 0.5, (-3975.2375));
}",1,
