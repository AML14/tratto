org.apache.commons.math.ode.events.EventState,@Test(timeout = 4000)
public void test2158() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(2146763342).when(eventHandler0).eventOccurred(anyDouble(), any(double[].class), anyBoolean());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, 1.0, 1.0, 1589);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    dummyStepInterpolator0.storeTime(1.0E-14);
    eventState0.stepAccepted(1.0, doubleArray0);
    boolean boolean0 = eventState0.evaluateStep(dummyStepInterpolator0);
    dummyStepInterpolator0.getInterpolatedTime();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.ode.events.EventState,@Test(timeout = 4000)
public void test2260() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(2146763342).when(eventHandler0).eventOccurred(anyDouble(), any(double[].class), anyBoolean());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, Double.NaN, Double.NaN, 3);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    eventState0.stepAccepted((-4390.858), doubleArray0);
    boolean boolean0 = eventState0.evaluateStep(dummyStepInterpolator0);
    dummyStepInterpolator0.getInterpolatedTime();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.ode.events.EventState,@Test(timeout = 4000)
public void test2362() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(2146763341).when(eventHandler0).eventOccurred(anyDouble(), any(double[].class), anyBoolean());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, 1.0, 1.0, 1589);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    dummyStepInterpolator0.storeTime(4.891109038513414);
    eventState0.stepAccepted((-1.0), doubleArray0);
    boolean boolean0 = eventState0.evaluateStep(dummyStepInterpolator0);
    dummyStepInterpolator0.getInterpolatedTime();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.ode.events.EventState,@Test(timeout = 4000)
public void test2464() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn((-748.584), 1.0, (-748.584), 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, (-2637.9), Double.NEGATIVE_INFINITY, 0);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, true);
    eventState0.stepAccepted((-619.85245), doubleArray0);
    dummyStepInterpolator0.storeTime((-619.85245));
    boolean boolean0 = eventState0.evaluateStep(dummyStepInterpolator0);
    dummyStepInterpolator0.getInterpolatedTime();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.ode.events.EventState,@Test(timeout = 4000)
public void test2569() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(Double.NEGATIVE_INFINITY, 2840.0, 2840.0, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, (-2099.0), Double.NEGATIVE_INFINITY, 1211);
    double[] doubleArray0 = new double[2];
    eventState0.reinitializeBegin(Double.NaN, doubleArray0);
    eventState0.reinitializeBegin(1211.0, doubleArray0);
    eventState0.stepAccepted(Double.NEGATIVE_INFINITY, doubleArray0);
    eventState0.reinitializeBegin(1211, doubleArray0);
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    dummyStepInterpolator0.getInterpolatedTime();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
