project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(2146763342, (-1)).when(eventHandler0).eventOccurred(anyDouble(), any(double[].class), anyBoolean());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, Double.NaN, Double.NaN, 3);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    boolean boolean0 = eventState0.evaluateStep(dummyStepInterpolator0);
    eventState0.stepAccepted((-4390.858), doubleArray0);
    eventState0.stepAccepted((-1.0), doubleArray0);
    boolean boolean1 = eventState0.reset(0.0, doubleArray0);
    assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
}",0,
project,0,test001,"public void test001() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(2146763342, (-1)).when(eventHandler0).eventOccurred(anyDouble(), any(double[].class), anyBoolean());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, Double.NaN, Double.NaN, 3);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    boolean boolean0 = eventState0.evaluateStep(dummyStepInterpolator0);
    eventState0.stepAccepted((-4390.858), doubleArray0);
    eventState0.stepAccepted((-1.0), doubleArray0);
    boolean boolean1 = eventState0.reset(0.0, doubleArray0);
    assertFalse(boolean1 == boolean0);
}",0,
project,0,test002,"public void test002() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(2146763342, (-1)).when(eventHandler0).eventOccurred(anyDouble(), any(double[].class), anyBoolean());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, Double.NaN, Double.NaN, 3);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    boolean boolean0 = eventState0.evaluateStep(dummyStepInterpolator0);
    eventState0.stepAccepted((-4390.858), doubleArray0);
    eventState0.stepAccepted((-1.0), doubleArray0);
    boolean boolean1 = eventState0.reset(0.0, doubleArray0);
    assertEquals(3, eventState0.getMaxIterationCount());
}",0,"assertEquals(0, eventState0.getMaxIterationCount())"
project,0,test014,"public void test014() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn((-1619)).when(eventHandler0).eventOccurred(anyDouble(), any(double[].class), anyBoolean());
    doReturn(13.1043514962, Double.NaN, 13.1043514962, Double.NaN, 2656.17622683).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, 2656.17622683, 2656.17622683, (-1925));
    double[] doubleArray0 = new double[3];
    eventState0.stepAccepted((-2298.0), doubleArray0);
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    eventState0.stepAccepted(1146.3058360164546, doubleArray0);
    boolean boolean0 = eventState0.stop();
    assertEquals((-2298.0), eventState0.getEventTime(), 0.01);
}",0,
project,0,test015,"public void test015() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn((-1619)).when(eventHandler0).eventOccurred(anyDouble(), any(double[].class), anyBoolean());
    doReturn(13.1043514962, Double.NaN, 13.1043514962, Double.NaN, 2656.17622683).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, 2656.17622683, 2656.17622683, (-1925));
    double[] doubleArray0 = new double[3];
    eventState0.stepAccepted((-2298.0), doubleArray0);
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    eventState0.stepAccepted(1146.3058360164546, doubleArray0);
    boolean boolean0 = eventState0.stop();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test026,"public void test026() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, Double.NaN, Double.NaN, 3);
    assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
}",0,
project,0,test027,"public void test027() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, Double.NaN, Double.NaN, 3);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, true);
    boolean boolean0 = eventState0.evaluateStep(dummyStepInterpolator0);
    assertTrue(boolean0);
}",0,
project,0,test028,"public void test028() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, Double.NaN, Double.NaN, 3);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, true);
    boolean boolean0 = eventState0.evaluateStep(dummyStepInterpolator0);
    eventState0.reinitializeBegin(Double.NaN, doubleArray0);
    assertEquals(3, eventState0.getMaxIterationCount());
}",0,"assertEquals(1, eventState0.getMaxIterationCount())"
project,0,test029,"public void test029() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, Double.NaN, Double.NaN, 3);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, true);
    boolean boolean0 = eventState0.evaluateStep(dummyStepInterpolator0);
    eventState0.reinitializeBegin(Double.NaN, doubleArray0);
    assertFalse(eventState0.stop());
}",0,assertTrue(eventState0.stop())
project,0,test0310,"public void test0310() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 417.0404448, 417.0404448, 46);
    int int0 = eventState0.getMaxIterationCount();
    assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
}",0,
project,0,test0311,"public void test0311() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 417.0404448, 417.0404448, 46);
    int int0 = eventState0.getMaxIterationCount();
    assertFalse(eventState0.stop());
}",0,assertTrue(eventState0.stop())
project,0,test0312,"public void test0312() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 417.0404448, 417.0404448, 46);
    int int0 = eventState0.getMaxIterationCount();
    assertEquals(417.0404448, eventState0.getMaxCheckInterval(), 0.01);
}",0,
project,0,test0313,"public void test0313() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 417.0404448, 417.0404448, 46);
    int int0 = eventState0.getMaxIterationCount();
    assertEquals(46, int0);
}",0,"assertEquals(1, int0)"
project,0,test0414,"public void test0414() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 54.079985423256, 54.079985423256, (-1));
    int int0 = eventState0.getMaxIterationCount();
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test0415,"public void test0415() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 54.079985423256, 54.079985423256, (-1));
    int int0 = eventState0.getMaxIterationCount();
    assertEquals(54.079985423256, eventState0.getMaxCheckInterval(), 0.01);
}",0,
project,0,test0416,"public void test0416() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 54.079985423256, 54.079985423256, (-1));
    int int0 = eventState0.getMaxIterationCount();
    assertFalse(eventState0.stop());
}",0,assertTrue(eventState0.stop())
project,0,test0417,"public void test0417() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 54.079985423256, 54.079985423256, (-1));
    int int0 = eventState0.getMaxIterationCount();
    assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
}",0,
project,0,test0518,"public void test0518() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 0.0, 1378.49288319921, 2);
    double double0 = eventState0.getMaxCheckInterval();
    assertEquals(1378.49288319921, eventState0.getConvergence(), 0.01);
}",0,
project,0,test0519,"public void test0519() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 0.0, 1378.49288319921, 2);
    double double0 = eventState0.getMaxCheckInterval();
    assertFalse(eventState0.stop());
}",0,assertTrue(eventState0.stop())
project,0,test0520,"public void test0520() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 0.0, 1378.49288319921, 2);
    double double0 = eventState0.getMaxCheckInterval();
    assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
}",0,
project,0,test0521,"public void test0521() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 0.0, 1378.49288319921, 2);
    double double0 = eventState0.getMaxCheckInterval();
    assertEquals(2, eventState0.getMaxIterationCount());
}",0,"assertEquals(1, eventState0.getMaxIterationCount())"
project,0,test0522,"public void test0522() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 0.0, 1378.49288319921, 2);
    double double0 = eventState0.getMaxCheckInterval();
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test0623,"public void test0623() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 1.0, (-2778.2), 0);
    double double0 = eventState0.getMaxCheckInterval();
    assertEquals(0, eventState0.getMaxIterationCount());
}",0,"assertEquals(0, eventState0.getMaxIterationCount())"
project,0,test0624,"public void test0624() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 1.0, (-2778.2), 0);
    double double0 = eventState0.getMaxCheckInterval();
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test0625,"public void test0625() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 1.0, (-2778.2), 0);
    double double0 = eventState0.getMaxCheckInterval();
    assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
}",0,
project,0,test0626,"public void test0626() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 1.0, (-2778.2), 0);
    double double0 = eventState0.getMaxCheckInterval();
    assertFalse(eventState0.stop());
}",0,assertTrue(eventState0.stop())
project,0,test0627,"public void test0627() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 1.0, (-2778.2), 0);
    double double0 = eventState0.getMaxCheckInterval();
    assertEquals(2778.2, eventState0.getConvergence(), 0.01);
}",0,
project,0,test0728,"public void test0728() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(13.1043514962, Double.NaN, 25.486786159349, Double.NaN).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, 1968.5608838813664, 1968.5608838813664, (-1925));
    double[] doubleArray0 = new double[3];
    eventState0.stepAccepted(0.0, doubleArray0);
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, true);
    eventState0.evaluateStep(dummyStepInterpolator0);
    double double0 = eventState0.getEventTime();
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test0829,"public void test0829() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(13.1043514962, Double.NaN, 13.1043514962, Double.NaN).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, 2656.17622683, 2656.17622683, (-1925));
    double[] doubleArray0 = new double[3];
    eventState0.stepAccepted((-2298.0), doubleArray0);
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    double double0 = eventState0.getEventTime();
    assertEquals((-2298.0), double0, 0.01);
}",0,
project,0,test0930,"public void test0930() throws Throwable {
    EventState eventState0 = new EventState((EventHandler) null, (-0.87865675720713), (-0.87865675720713), 836);
    eventState0.getEventHandler();
    assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
}",0,
project,0,test0931,"public void test0931() throws Throwable {
    EventState eventState0 = new EventState((EventHandler) null, (-0.87865675720713), (-0.87865675720713), 836);
    eventState0.getEventHandler();
    assertFalse(eventState0.stop());
}",0,assertTrue(eventState0.stop())
project,0,test0932,"public void test0932() throws Throwable {
    EventState eventState0 = new EventState((EventHandler) null, (-0.87865675720713), (-0.87865675720713), 836);
    eventState0.getEventHandler();
    assertEquals(836, eventState0.getMaxIterationCount());
}",0,"assertEquals(0, eventState0.getMaxIterationCount())"
project,0,test0933,"public void test0933() throws Throwable {
    EventState eventState0 = new EventState((EventHandler) null, (-0.87865675720713), (-0.87865675720713), 836);
    eventState0.getEventHandler();
    assertEquals((-0.87865675720713), eventState0.getMaxCheckInterval(), 0.01);
}",0,
project,0,test1034,"public void test1034() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 0.0, 0.0, (-925));
    double double0 = eventState0.getConvergence();
    assertFalse(eventState0.stop());
}",0,assertTrue(eventState0.stop())
project,0,test1035,"public void test1035() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 0.0, 0.0, (-925));
    double double0 = eventState0.getConvergence();
    assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
}",0,
project,0,test1036,"public void test1036() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 0.0, 0.0, (-925));
    double double0 = eventState0.getConvergence();
    assertEquals(0.0, eventState0.getMaxCheckInterval(), 0.01);
}",0,
project,0,test1037,"public void test1037() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 0.0, 0.0, (-925));
    double double0 = eventState0.getConvergence();
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test1038,"public void test1038() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 0.0, 0.0, (-925));
    double double0 = eventState0.getConvergence();
    assertEquals((-925), eventState0.getMaxIterationCount());
}",0,"assertEquals(0, eventState0.getMaxIterationCount())"
project,0,test1139,"public void test1139() throws Throwable {
    EventState eventState0 = new EventState((EventHandler) null, Double.NaN, Double.NaN, (-1927));
    double[] doubleArray0 = new double[2];
    // Undeclared exception!
    try {
        eventState0.stepAccepted(0.0, doubleArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.ode.events.EventState"", e);
    }
}",0,
project,0,test1240,"public void test1240() throws Throwable {
    EventState eventState0 = new EventState((EventHandler) null, 1383.9, 679.10588639448, 247);
    double[] doubleArray0 = new double[7];
    // Undeclared exception!
    try {
        eventState0.reinitializeBegin(1383.9, doubleArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.ode.events.EventState"", e);
    }
}",0,
project,0,test1341,"public void test1341() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, 1.0, 1.0, 1589);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    dummyStepInterpolator0.storeTime(0.0);
    eventState0.reset(0.0, doubleArray0);
    eventState0.stepAccepted(2146763342, doubleArray0);
    // Undeclared exception!
    eventState0.evaluateStep(dummyStepInterpolator0);
}",0,
project,0,test1442,"public void test1442() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn((-748.584), 1.0, (-748.584)).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, (-2637.9), Double.NEGATIVE_INFINITY, 0);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, true);
    try {
        eventState0.evaluateStep(dummyStepInterpolator0);
        fail(""Expecting exception: Exception"");
    } catch (Exception e) {
        //
        // Maximal number of iterations (0) exceeded
        //
        verifyException(""org.apache.commons.math.analysis.solvers.BrentSolver"", e);
    }
}",0,
project,0,test1543,"public void test1543() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, (-2880.083445), 0.0, 2655);
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator();
    // Undeclared exception!
    try {
        eventState0.evaluateStep(dummyStepInterpolator0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test1644,"public void test1644() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(2146763342, 2).when(eventHandler0).eventOccurred(anyDouble(), any(double[].class), anyBoolean());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, Double.NaN, Double.NaN, 3);
    assertEquals(3, eventState0.getMaxIterationCount());
}",0,"assertEquals(0, eventState0.getMaxIterationCount())"
project,0,test1645,"public void test1645() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(2146763342, 2).when(eventHandler0).eventOccurred(anyDouble(), any(double[].class), anyBoolean());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, Double.NaN, Double.NaN, 3);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    assertFalse(eventState0.stop());
}",0,assertTrue(eventState0.stop())
project,0,test1646,"public void test1646() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(2146763342, 2).when(eventHandler0).eventOccurred(anyDouble(), any(double[].class), anyBoolean());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, Double.NaN, Double.NaN, 3);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    eventState0.stepAccepted((-4390.858), doubleArray0);
    eventState0.stepAccepted((-1.0), doubleArray0);
    boolean boolean0 = eventState0.reset(0.0, doubleArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test1647,"public void test1647() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(2146763342, 2).when(eventHandler0).eventOccurred(anyDouble(), any(double[].class), anyBoolean());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, Double.NaN, Double.NaN, 3);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    eventState0.stepAccepted((-4390.858), doubleArray0);
    eventState0.stepAccepted((-1.0), doubleArray0);
    boolean boolean0 = eventState0.reset(0.0, doubleArray0);
    assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
}",0,
project,0,test1748,"public void test1748() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, Double.NaN, Double.NaN, 3);
    double[] doubleArray0 = new double[6];
    boolean boolean0 = eventState0.reset(0.0, doubleArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1749,"public void test1749() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, Double.NaN, Double.NaN, 3);
    double[] doubleArray0 = new double[6];
    boolean boolean0 = eventState0.reset(0.0, doubleArray0);
    assertFalse(eventState0.stop());
}",0,assertTrue(eventState0.stop())
project,0,test1750,"public void test1750() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, Double.NaN, Double.NaN, 3);
    double[] doubleArray0 = new double[6];
    boolean boolean0 = eventState0.reset(0.0, doubleArray0);
    assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
}",0,
project,0,test1751,"public void test1751() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, Double.NaN, Double.NaN, 3);
    double[] doubleArray0 = new double[6];
    boolean boolean0 = eventState0.reset(0.0, doubleArray0);
    assertEquals(3, eventState0.getMaxIterationCount());
}",0,
project,0,test1852,"public void test1852() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(2146763341, 0).when(eventHandler0).eventOccurred(anyDouble(), any(double[].class), anyBoolean());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, 1.0, 1.0, 1589);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    eventState0.stepAccepted(1589.0, doubleArray0);
    eventState0.stepAccepted((-1.0), doubleArray0);
    boolean boolean0 = eventState0.stop();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test1953,"public void test1953() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 1.0, 1.0, 1589);
    boolean boolean0 = eventState0.stop();
    assertEquals(1589, eventState0.getMaxIterationCount());
}",0,"assertEquals(1, eventState0.getMaxIterationCount())"
project,0,test1954,"public void test1954() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 1.0, 1.0, 1589);
    boolean boolean0 = eventState0.stop();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1955,"public void test1955() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 1.0, 1.0, 1589);
    boolean boolean0 = eventState0.stop();
    assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
}",0,
project,0,test1956,"public void test1956() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, 1.0, 1.0, 1589);
    boolean boolean0 = eventState0.stop();
    assertEquals(1.0, eventState0.getMaxCheckInterval(), 0.01);
}",0,
project,0,test2057,"public void test2057() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn((-1619)).when(eventHandler0).eventOccurred(anyDouble(), any(double[].class), anyBoolean());
    doReturn(13.1043514962, Double.NaN, 25.486786159349, Double.NaN, 2656.17622683).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, (-1619), (-1619), (-1925));
    double[] doubleArray0 = new double[3];
    eventState0.stepAccepted(25.486786159349, doubleArray0);
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, true);
    eventState0.evaluateStep(dummyStepInterpolator0);
    eventState0.stepAccepted(1146.3058360164546, doubleArray0);
    assertEquals(25.486786159349, eventState0.getEventTime(), 0.01);
}",0,
project,0,test2158,"public void test2158() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(2146763342).when(eventHandler0).eventOccurred(anyDouble(), any(double[].class), anyBoolean());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, 1.0, 1.0, 1589);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    dummyStepInterpolator0.storeTime(1.0E-14);
    eventState0.stepAccepted(1.0, doubleArray0);
    boolean boolean0 = eventState0.evaluateStep(dummyStepInterpolator0);
    assertEquals(1.0, dummyStepInterpolator0.getInterpolatedTime(), 0.01);
}",0,
project,0,test2159,"public void test2159() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(2146763342).when(eventHandler0).eventOccurred(anyDouble(), any(double[].class), anyBoolean());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, 1.0, 1.0, 1589);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    dummyStepInterpolator0.storeTime(1.0E-14);
    eventState0.stepAccepted(1.0, doubleArray0);
    boolean boolean0 = eventState0.evaluateStep(dummyStepInterpolator0);
    assertFalse(boolean0);
}",0,
project,0,test2260,"public void test2260() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(2146763342).when(eventHandler0).eventOccurred(anyDouble(), any(double[].class), anyBoolean());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, Double.NaN, Double.NaN, 3);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    eventState0.stepAccepted((-4390.858), doubleArray0);
    boolean boolean0 = eventState0.evaluateStep(dummyStepInterpolator0);
    assertEquals((-4390.858), dummyStepInterpolator0.getInterpolatedTime(), 0.01);
}",0,
project,0,test2261,"public void test2261() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(2146763342).when(eventHandler0).eventOccurred(anyDouble(), any(double[].class), anyBoolean());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, Double.NaN, Double.NaN, 3);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    eventState0.stepAccepted((-4390.858), doubleArray0);
    boolean boolean0 = eventState0.evaluateStep(dummyStepInterpolator0);
    assertFalse(boolean0);
}",0,
project,0,test2362,"public void test2362() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(2146763341).when(eventHandler0).eventOccurred(anyDouble(), any(double[].class), anyBoolean());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, 1.0, 1.0, 1589);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    dummyStepInterpolator0.storeTime(4.891109038513414);
    eventState0.stepAccepted((-1.0), doubleArray0);
    boolean boolean0 = eventState0.evaluateStep(dummyStepInterpolator0);
    assertEquals(1.9274060256756091, dummyStepInterpolator0.getInterpolatedTime(), 0.01);
}",0,
project,0,test2363,"public void test2363() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(2146763341).when(eventHandler0).eventOccurred(anyDouble(), any(double[].class), anyBoolean());
    doReturn((-1863.0), 1.0, (-1863.0), 1.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, 1.0, 1.0, 1589);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    dummyStepInterpolator0.storeTime(4.891109038513414);
    eventState0.stepAccepted((-1.0), doubleArray0);
    boolean boolean0 = eventState0.evaluateStep(dummyStepInterpolator0);
    assertTrue(boolean0);
}",0,
project,0,test2464,"public void test2464() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn((-748.584), 1.0, (-748.584), 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, (-2637.9), Double.NEGATIVE_INFINITY, 0);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, true);
    eventState0.stepAccepted((-619.85245), doubleArray0);
    dummyStepInterpolator0.storeTime((-619.85245));
    boolean boolean0 = eventState0.evaluateStep(dummyStepInterpolator0);
    assertEquals(Double.POSITIVE_INFINITY, dummyStepInterpolator0.getInterpolatedTime(), 0.01);
}",0,
project,0,test2465,"public void test2465() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn((-748.584), 1.0, (-748.584), 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, (-2637.9), Double.NEGATIVE_INFINITY, 0);
    double[] doubleArray0 = new double[6];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, true);
    eventState0.stepAccepted((-619.85245), doubleArray0);
    dummyStepInterpolator0.storeTime((-619.85245));
    boolean boolean0 = eventState0.evaluateStep(dummyStepInterpolator0);
    assertTrue(boolean0);
}",0,
project,0,test2566,"public void test2566() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(Double.NEGATIVE_INFINITY, 2840.0, 2840.0, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, (-2099.0), Double.NEGATIVE_INFINITY, 1211);
    double[] doubleArray0 = new double[2];
    eventState0.reinitializeBegin(Double.NaN, doubleArray0);
    eventState0.reinitializeBegin(1211.0, doubleArray0);
    eventState0.stepAccepted(Double.NEGATIVE_INFINITY, doubleArray0);
    eventState0.reinitializeBegin(1211, doubleArray0);
    assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
}",0,
project,0,test2567,"public void test2567() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(Double.NEGATIVE_INFINITY, 2840.0, 2840.0, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, (-2099.0), Double.NEGATIVE_INFINITY, 1211);
    double[] doubleArray0 = new double[2];
    eventState0.reinitializeBegin(Double.NaN, doubleArray0);
    eventState0.reinitializeBegin(1211.0, doubleArray0);
    eventState0.stepAccepted(Double.NEGATIVE_INFINITY, doubleArray0);
    eventState0.reinitializeBegin(1211, doubleArray0);
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    assertEquals(1211, eventState0.getMaxIterationCount());
}",0,"assertEquals(0, eventState0.getMaxIterationCount())"
project,0,test2568,"public void test2568() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(Double.NEGATIVE_INFINITY, 2840.0, 2840.0, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, (-2099.0), Double.NEGATIVE_INFINITY, 1211);
    double[] doubleArray0 = new double[2];
    eventState0.reinitializeBegin(Double.NaN, doubleArray0);
    eventState0.reinitializeBegin(1211.0, doubleArray0);
    eventState0.stepAccepted(Double.NEGATIVE_INFINITY, doubleArray0);
    eventState0.reinitializeBegin(1211, doubleArray0);
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    assertFalse(eventState0.stop());
}",0,assertTrue(eventState0.stop())
project,0,test2569,"public void test2569() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(Double.NEGATIVE_INFINITY, 2840.0, 2840.0, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, (-2099.0), Double.NEGATIVE_INFINITY, 1211);
    double[] doubleArray0 = new double[2];
    eventState0.reinitializeBegin(Double.NaN, doubleArray0);
    eventState0.reinitializeBegin(1211.0, doubleArray0);
    eventState0.stepAccepted(Double.NEGATIVE_INFINITY, doubleArray0);
    eventState0.reinitializeBegin(1211, doubleArray0);
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    assertEquals(Double.NaN, dummyStepInterpolator0.getInterpolatedTime(), 0.01);
}",0,
project,0,test2570,"public void test2570() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(Double.NEGATIVE_INFINITY, 2840.0, 2840.0, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, (-2099.0), Double.NEGATIVE_INFINITY, 1211);
    double[] doubleArray0 = new double[2];
    eventState0.reinitializeBegin(Double.NaN, doubleArray0);
    eventState0.reinitializeBegin(1211.0, doubleArray0);
    eventState0.stepAccepted(Double.NEGATIVE_INFINITY, doubleArray0);
    eventState0.reinitializeBegin(1211, doubleArray0);
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    eventState0.evaluateStep(dummyStepInterpolator0);
    assertEquals((-2099.0), eventState0.getMaxCheckInterval(), 0.01);
}",0,
project,0,test2671,"public void test2671() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(Double.NEGATIVE_INFINITY, 2840.0, 2840.0).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, (-2099.0), Double.NEGATIVE_INFINITY, 1211);
    double[] doubleArray0 = new double[2];
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
    // Undeclared exception!
    try {
        eventState0.evaluateStep(dummyStepInterpolator0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // function values at endpoints do not have different signs.  Endpoints: [\uFFFD, \uFFFD], Values: [2,840, 2,840]
        //
        verifyException(""org.apache.commons.math.MathRuntimeException"", e);
    }
}",0,
project,0,test2772,"public void test2772() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, (-2637.9), Double.NEGATIVE_INFINITY, 0);
    double double0 = eventState0.getConvergence();
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test2773,"public void test2773() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, (-2637.9), Double.NEGATIVE_INFINITY, 0);
    double double0 = eventState0.getConvergence();
    assertEquals(0, eventState0.getMaxIterationCount());
}",0,"assertEquals(0, eventState0.getMaxIterationCount())"
project,0,test2774,"public void test2774() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, (-2637.9), Double.NEGATIVE_INFINITY, 0);
    double double0 = eventState0.getConvergence();
    assertEquals((-2637.9), eventState0.getMaxCheckInterval(), 0.01);
}",0,
project,0,test2775,"public void test2775() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, (-2637.9), Double.NEGATIVE_INFINITY, 0);
    double double0 = eventState0.getConvergence();
    assertFalse(eventState0.stop());
}",0,assertTrue(eventState0.stop())
project,0,test2776,"public void test2776() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, (-2637.9), Double.NEGATIVE_INFINITY, 0);
    double double0 = eventState0.getConvergence();
    assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
}",0,
project,0,test2877,"public void test2877() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, (-2637.9), Double.NEGATIVE_INFINITY, 0);
    double double0 = eventState0.getMaxCheckInterval();
    assertEquals((-2637.9), double0, 0.01);
}",0,
project,0,test2878,"public void test2878() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, (-2637.9), Double.NEGATIVE_INFINITY, 0);
    double double0 = eventState0.getMaxCheckInterval();
    assertFalse(eventState0.stop());
}",0,assertTrue(eventState0.stop())
project,0,test2879,"public void test2879() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, (-2637.9), Double.NEGATIVE_INFINITY, 0);
    double double0 = eventState0.getMaxCheckInterval();
    assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
}",0,
project,0,test2880,"public void test2880() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, (-2637.9), Double.NEGATIVE_INFINITY, 0);
    double double0 = eventState0.getMaxCheckInterval();
    assertEquals(Double.POSITIVE_INFINITY, eventState0.getConvergence(), 0.01);
}",0,
project,0,test2881,"public void test2881() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, (-2637.9), Double.NEGATIVE_INFINITY, 0);
    double double0 = eventState0.getMaxCheckInterval();
    assertEquals(0, eventState0.getMaxIterationCount());
}",0,"assertEquals(0, eventState0.getMaxIterationCount())"
project,0,test2982,"public void test2982() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, (-2637.9), Double.NEGATIVE_INFINITY, 0);
    int int0 = eventState0.getMaxIterationCount();
    assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
}",0,
project,0,test2983,"public void test2983() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, (-2637.9), Double.NEGATIVE_INFINITY, 0);
    int int0 = eventState0.getMaxIterationCount();
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test2984,"public void test2984() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, (-2637.9), Double.NEGATIVE_INFINITY, 0);
    int int0 = eventState0.getMaxIterationCount();
    assertEquals((-2637.9), eventState0.getMaxCheckInterval(), 0.01);
}",0,
project,0,test2985,"public void test2985() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, (-2637.9), Double.NEGATIVE_INFINITY, 0);
    int int0 = eventState0.getMaxIterationCount();
    assertFalse(eventState0.stop());
}",0,assertTrue(eventState0.stop())
project,0,test2986,"public void test2986() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    EventState eventState0 = new EventState(eventHandler0, (-2637.9), Double.NEGATIVE_INFINITY, 0);
    int int0 = eventState0.getMaxIterationCount();
    assertEquals(Double.POSITIVE_INFINITY, eventState0.getConvergence(), 0.01);
}",0,
project,0,test3087,"public void test3087() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(""7RA#IlJ9-4poj4/6G]"").when(eventHandler0).toString();
    EventState eventState0 = new EventState(eventHandler0, (-1619), (-1619), (-1925));
    eventState0.getEventHandler();
    assertEquals(Double.NaN, eventState0.getEventTime(), 0.01);
}",0,
project,0,test3088,"public void test3088() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(""7RA#IlJ9-4poj4/6G]"").when(eventHandler0).toString();
    EventState eventState0 = new EventState(eventHandler0, (-1619), (-1619), (-1925));
    eventState0.getEventHandler();
    assertEquals((-1925), eventState0.getMaxIterationCount());
}",0,"assertEquals(0, eventState0.getMaxIterationCount())"
project,0,test3089,"public void test3089() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(""7RA#IlJ9-4poj4/6G]"").when(eventHandler0).toString();
    EventState eventState0 = new EventState(eventHandler0, (-1619), (-1619), (-1925));
    eventState0.getEventHandler();
    assertFalse(eventState0.stop());
}",0,assertTrue(eventState0.stop())
project,0,test3090,"public void test3090() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(""7RA#IlJ9-4poj4/6G]"").when(eventHandler0).toString();
    EventState eventState0 = new EventState(eventHandler0, (-1619), (-1619), (-1925));
    eventState0.getEventHandler();
    assertEquals((-1619.0), eventState0.getMaxCheckInterval(), 0.01);
}",0,
project,0,test3191,"public void test3191() throws Throwable {
    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
    doReturn(13.1043514962, Double.NaN, 25.486786159349, Double.NaN).when(eventHandler0).g(anyDouble(), any(double[].class));
    EventState eventState0 = new EventState(eventHandler0, (-1619), (-1619), (-1925));
    double[] doubleArray0 = new double[3];
    eventState0.stepAccepted(25.486786159349, doubleArray0);
    DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, true);
    eventState0.evaluateStep(dummyStepInterpolator0);
    double double0 = eventState0.getEventTime();
    assertEquals(25.486786159349, double0, 0.01);
}",0,
