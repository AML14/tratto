/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 05:11:30 GMT 2023
 */
package org.apache.commons.math3.analysis.differentiation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.differentiation.DSCompiler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class DSCompiler_ESTest extends DSCompiler_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        int int0 = 3;
        int int1 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 0);
        double[] doubleArray0 = new double[8];
        doubleArray0[0] = (double) 3;
        doubleArray0[1] = (double) 3;
        doubleArray0[2] = (double) 0;
        doubleArray0[3] = (double) 3;
        doubleArray0[4] = 2805.6104957987;
        doubleArray0[5] = (double) 0;
        doubleArray0[6] = (double) 3;
        doubleArray0[7] = (double) 3;
        double[] doubleArray1 = new double[1];
        doubleArray1[0] = 2805.6104957987;
        dSCompiler0.compose(doubleArray0, 0, doubleArray0, doubleArray1, 3);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[5];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (-305.8274);
        doubleArray0[2] = (double) 0;
        doubleArray0[3] = (double) 0;
        doubleArray0[4] = (double) 0;
        int int0 = (-1318);
        dSCompiler0.divide(doubleArray0, 0, doubleArray0, 0, doubleArray0, (-1318));
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        int int0 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double double0 = 0.0;
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = (double) 0;
        dSCompiler0.linearCombination(0.0, doubleArray0, 0, (-3.141592653589793), doubleArray0, 0, 0.0, doubleArray0, 0, (-4396.0), doubleArray0, 0, doubleArray0, 0);
        doubleArray0[1] = 0.0;
        doubleArray0[2] = 0.0;
        doubleArray0[3] = 0.0;
        double double1 = 0.0;
        double[] doubleArray1 = null;
        int int1 = 0;
        int int2 = 2444;
        dSCompiler0.atan(doubleArray0, 0, (double[]) null, 2444);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[7];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (double) 0;
        doubleArray0[2] = (double) 0;
        doubleArray0[3] = (double) 0;
        doubleArray0[4] = 0.0;
        doubleArray0[5] = 0.0;
        doubleArray0[6] = (double) 0;
        dSCompiler0.atanh(doubleArray0, (-1007), doubleArray0, 0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 0.0;
        doubleArray0[1] = (-804.6489);
        doubleArray0[2] = (double) 2;
        doubleArray0[3] = (double) 2;
        int int0 = (-1643);
        dSCompiler0.add(doubleArray0, 2, doubleArray0, (-1643), doubleArray0, (-1643));
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        int int0 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[0];
        dSCompiler0.acosh(doubleArray0, 0, doubleArray0, (-3895));
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        int int0 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(1596, 0);
        dSCompiler0.getSize();
        double[] doubleArray0 = new double[5];
        int int1 = 0;
        dSCompiler0.log10(doubleArray0, 0, doubleArray0, 0);
        doubleArray0[0] = (double) 1;
        doubleArray0[1] = (double) 1;
        doubleArray0[2] = (double) 1596;
        doubleArray0[3] = (double) 1;
        dSCompiler0.pow(doubleArray0, 620, (-122), doubleArray0, 620);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 97);
        double[] doubleArray0 = new double[7];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (double) 0;
        doubleArray0[2] = (double) 97;
        doubleArray0[3] = (double) 97;
        doubleArray0[4] = 9.74480384E9;
        doubleArray0[5] = (double) 0;
        doubleArray0[6] = (double) 97;
        dSCompiler0.expm1(doubleArray0, (-472), doubleArray0, (-472));
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        int int0 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[8];
        dSCompiler0.atan(doubleArray0, 0, doubleArray0, 0);
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (double) 0;
        doubleArray0[2] = (double) 0;
        doubleArray0[3] = (double) 0;
        doubleArray0[4] = (double) 0;
        doubleArray0[5] = (double) 0;
        doubleArray0[6] = (double) 0;
        doubleArray0[7] = (double) 0;
        int int1 = 0;
        dSCompiler0.pow(doubleArray0, 0, 0, doubleArray0, 0);
        dSCompiler0.getPartialDerivativeIndex((int[]) null);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
        double[] doubleArray0 = new double[8];
        doubleArray0[0] = (double) 1;
        doubleArray0[1] = (double) 1;
        doubleArray0[2] = 0.5;
        doubleArray0[3] = (double) 1;
        doubleArray0[4] = (double) 1;
        doubleArray0[5] = (double) 1;
        doubleArray0[6] = (double) 1;
        doubleArray0[7] = 2968.0;
        dSCompiler0.log(doubleArray0, 1445, doubleArray0, (-5358));
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        int int0 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = null;
        dSCompiler0.exp((double[]) null, (-219), (double[]) null, 0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (double) 0;
        doubleArray0[2] = (double) 0;
        doubleArray0[3] = (double) 0;
        doubleArray0[4] = (double) 0;
        doubleArray0[5] = (double) 0;
        dSCompiler0.expm1(doubleArray0, 0, doubleArray0, 0);
        int[] intArray0 = new int[0];
        dSCompiler0.getPartialDerivativeIndex(intArray0);
        dSCompiler0.tan(doubleArray0, (-2159), doubleArray0, 0);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        int int0 = 1285;
        int int1 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(1285, 0);
        double[] doubleArray0 = new double[7];
        doubleArray0[0] = 0.0;
        doubleArray0[1] = (double) 0;
        double[] doubleArray1 = new double[0];
        double[] doubleArray2 = new double[9];
        doubleArray2[0] = (-596.1902107531372);
        doubleArray2[1] = (-8.955768055535647E-8);
        doubleArray2[2] = 5976.126681621543;
        doubleArray2[3] = 1.5367772579193115;
        doubleArray2[4] = (double) 1285;
        doubleArray2[5] = 18.72;
        doubleArray2[6] = (double) 1285;
        doubleArray2[7] = (-1746.7742912364677);
        doubleArray2[8] = (double) 0;
        dSCompiler0.linearCombination((-8.955768055535647E-8), doubleArray1, 0, (double) 1285, doubleArray0, 633, 5976.126681621543, doubleArray0, (-2416), (-1746.7742912364677), doubleArray1, 1285, doubleArray2, 1285);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[9];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (double) 0;
        doubleArray0[2] = (double) 0;
        doubleArray0[3] = (double) 0;
        doubleArray0[4] = (double) 0;
        doubleArray0[5] = (double) 0;
        doubleArray0[6] = 0.0;
        doubleArray0[7] = (double) 0;
        doubleArray0[8] = (double) 0;
        dSCompiler0.pow(doubleArray0, 0, 2308, doubleArray0, 0);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
        double[] doubleArray0 = new double[0];
        double[] doubleArray1 = new double[9];
        doubleArray1[0] = (-1.7335469415174996E-8);
        doubleArray1[1] = (-1.7335469415174996E-8);
        doubleArray1[2] = (double) 2;
        doubleArray1[3] = (double) 2;
        doubleArray1[4] = (double) (-195);
        doubleArray1[5] = (double) 2;
        doubleArray1[6] = (-1.7335469415174996E-8);
        doubleArray1[7] = (double) 2;
        doubleArray1[8] = 886.1;
        double[] doubleArray2 = new double[2];
        doubleArray2[0] = (-1.7335469415174996E-8);
        doubleArray2[1] = 886.1;
        double[] doubleArray3 = new double[1];
        doubleArray3[0] = (-1.7335469415174996E-8);
        dSCompiler0.linearCombination((double) 2, doubleArray0, 2, 886.1, doubleArray0, (-195), (-1.7335469415174996E-8), doubleArray1, 2, 0.0, doubleArray2, 754, doubleArray3, 2);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        int int0 = 0;
        int int1 = 731;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 731);
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = (double) 731;
        doubleArray0[1] = (double) 0;
        doubleArray0[2] = (double) 0;
        int[] intArray0 = new int[9];
        intArray0[0] = 0;
        intArray0[1] = 0;
        intArray0[2] = 2611;
        intArray0[3] = 731;
        int int2 = 0;
        DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
        dSCompiler0.checkCompatibility(dSCompiler1);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        int int0 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[5];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (-1382.2856743257173);
        doubleArray0[2] = (double) 0;
        doubleArray0[3] = (double) 0;
        doubleArray0[4] = (double) 0;
        int int1 = 430;
        int int2 = (-1);
        int int3 = 392;
        dSCompiler0.asinh(doubleArray0, (-1), doubleArray0, 392);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        int int0 = 4569;
        int int1 = 0;
        // Undeclared exception!
        DSCompiler.getCompiler(4569, 0);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        dSCompiler0.getPartialDerivativeOrders(0);
        double[] doubleArray0 = new double[3];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (double) 0;
        doubleArray0[2] = (double) 0;
        int int0 = (-1477);
        int int1 = 3;
        dSCompiler0.remainder(doubleArray0, 0, doubleArray0, (-1477), doubleArray0, 3);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        int int0 = 906;
        int int1 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(906, 0);
        double[] doubleArray0 = null;
        int int2 = 1502;
        dSCompiler0.divide((double[]) null, 906, (double[]) null, 906, (double[]) null, 1502);
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        int int0 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[9];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (double) 0;
        doubleArray0[2] = (double) 0;
        doubleArray0[3] = (double) 0;
        doubleArray0[4] = (double) 0;
        doubleArray0[5] = (double) 0;
        doubleArray0[6] = (double) 0;
        doubleArray0[7] = (double) 0;
        doubleArray0[8] = (double) 0;
        dSCompiler0.divide(doubleArray0, (-6852), doubleArray0, (-6852), doubleArray0, 361);
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
        dSCompiler0.getPartialDerivativeOrders(0);
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (double) 0;
        dSCompiler0.multiply((double[]) null, 0, doubleArray0, 2, doubleArray0, 0);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        int int0 = 0;
        int int1 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (double) 0;
        dSCompiler0.cosh(doubleArray0, (-1250), doubleArray0, 0);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        int int0 = 458;
        int int1 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(458, 0);
        double[] doubleArray0 = new double[9];
        doubleArray0[0] = (double) 458;
        doubleArray0[1] = (double) 0;
        doubleArray0[2] = (double) 458;
        doubleArray0[3] = 0.0;
        doubleArray0[4] = (double) 0;
        doubleArray0[5] = (double) 0;
        doubleArray0[6] = (double) 458;
        doubleArray0[7] = (double) 458;
        doubleArray0[8] = (double) 458;
        dSCompiler0.atan(doubleArray0, 0, doubleArray0, 0);
        dSCompiler0.cosh(doubleArray0, 1529, doubleArray0, 458);
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[5];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (double) 0;
        doubleArray0[2] = (double) 0;
        doubleArray0[3] = (double) 0;
        doubleArray0[4] = (double) 0;
        double[] doubleArray1 = new double[0];
        dSCompiler0.rootN(doubleArray0, 4544, 3102, doubleArray1, 4544);
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = (double) 3;
        doubleArray0[1] = (double) 3;
        dSCompiler0.rootN(doubleArray0, (-1684), 3, doubleArray0, 1251);
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        int int0 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[5];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (double) 0;
        doubleArray0[2] = (-3631.0);
        doubleArray0[3] = (double) 0;
        doubleArray0[4] = (double) 0;
        int int1 = 1241;
        dSCompiler0.pow(doubleArray0, 1241, 0.0, doubleArray0, (-352));
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        int int0 = 0;
        int int1 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (double) 0;
        int int2 = (-2387);
        dSCompiler0.atan2(doubleArray0, (-2387), doubleArray0, 0, doubleArray0, 0);
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        int int0 = 0;
        int int1 = 520;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 520);
        double[] doubleArray0 = new double[8];
        doubleArray0[0] = 484.40437685;
        doubleArray0[1] = (double) 520;
        doubleArray0[2] = (double) 520;
        doubleArray0[3] = (double) 0;
        doubleArray0[4] = (double) 520;
        doubleArray0[5] = 2.116316283183901E-290;
        double[] doubleArray1 = new double[2];
        doubleArray1[0] = 2.116316283183901E-290;
        doubleArray1[1] = (double) 0;
        dSCompiler0.linearCombination(0.0, doubleArray0, 520, 2.116316283183901E-290, doubleArray0, 1443, doubleArray1, 520);
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[5];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (double) 0;
        doubleArray0[2] = (double) 0;
        doubleArray0[3] = (double) 0;
        doubleArray0[4] = 193.364787875037;
        dSCompiler0.remainder(doubleArray0, 3, doubleArray0, 0, doubleArray0, 0);
        dSCompiler0.tan((double[]) null, 2019, (double[]) null, 0);
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[8];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (double) 0;
        doubleArray0[2] = (double) 0;
        doubleArray0[3] = (double) 0;
        doubleArray0[4] = (double) 0;
        doubleArray0[5] = (double) 0;
        doubleArray0[6] = (double) 0;
        doubleArray0[7] = (double) 0;
        double[] doubleArray1 = new double[8];
        doubleArray1[0] = (double) (-1);
        doubleArray1[1] = (double) (-1);
        doubleArray1[2] = (double) (-1);
        doubleArray1[3] = (double) 0;
        doubleArray1[4] = (double) (-1);
        doubleArray1[5] = (double) (-1);
        doubleArray1[6] = (-1743.0);
        doubleArray1[7] = (double) (-1);
        dSCompiler0.acos(doubleArray0, (-1), doubleArray1, 0);
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        int int0 = 0;
        int int1 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = null;
        int int2 = 0;
        dSCompiler0.multiply((double[]) null, 0, (double[]) null, 0, (double[]) null, 0);
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(863, 0);
        double[] doubleArray0 = new double[5];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = 0.0;
        doubleArray0[2] = (double) 0;
        doubleArray0[3] = (double) 863;
        doubleArray0[4] = (double) 0;
        dSCompiler0.log(doubleArray0, 0, doubleArray0, 1);
    }

    @Test(timeout = 4000)
    public void test3333() throws Throwable {
        int int0 = 0;
        int int1 = 245;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 245);
        double[] doubleArray0 = new double[7];
        doubleArray0[0] = (double) 245;
        doubleArray0[1] = (double) 0;
        doubleArray0[2] = (double) 245;
        doubleArray0[3] = (double) 0;
        doubleArray0[4] = (double) 0;
        int int2 = 2085;
        dSCompiler0.cos(doubleArray0, 918, doubleArray0, (-740));
    }

    @Test(timeout = 4000)
    public void test3434() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[3];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (double) 0;
        doubleArray0[2] = (double) 0;
        dSCompiler0.acos(doubleArray0, 0, doubleArray0, 1);
    }

    @Test(timeout = 4000)
    public void test3535() throws Throwable {
        int int0 = 649;
        int int1 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(649, 0);
        double[] doubleArray0 = null;
        int int2 = 0;
        int int3 = (-133);
        dSCompiler0.tan((double[]) null, (-133), (double[]) null, 0);
    }

    @Test(timeout = 4000)
    public void test3636() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        dSCompiler0.getSize();
        double[] doubleArray0 = new double[5];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (-1543.289897274249);
        doubleArray0[2] = (double) 0;
        doubleArray0[3] = (double) 1;
        doubleArray0[4] = (double) 1;
        dSCompiler0.log1p(doubleArray0, (-469), doubleArray0, 47);
    }

    @Test(timeout = 4000)
    public void test3737() throws Throwable {
        int int0 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[0];
        int int1 = (-1943);
        dSCompiler0.tanh(doubleArray0, (-1943), doubleArray0, (-3224));
    }

    @Test(timeout = 4000)
    public void test3838() throws Throwable {
        int int0 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(36, 0);
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (double) 36;
        doubleArray0[2] = (double) 0;
        doubleArray0[3] = (double) 36;
        doubleArray0[4] = (double) 0;
        doubleArray0[5] = (double) 36;
        dSCompiler0.asin(doubleArray0, 36, doubleArray0, 0);
    }

    @Test(timeout = 4000)
    public void test3939() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        dSCompiler0.getOrder();
        double[] doubleArray0 = new double[3];
        DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
        dSCompiler0.checkCompatibility(dSCompiler1);
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (double) 0;
        doubleArray0[2] = 3.141592653589793;
        dSCompiler0.exp(doubleArray0, 0, doubleArray0, 0);
        dSCompiler0.asin(doubleArray0, (-263), doubleArray0, (-526));
    }

    @Test(timeout = 4000)
    public void test4040() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(2038, 0);
        dSCompiler0.log10((double[]) null, 2038, (double[]) null, 0);
    }

    @Test(timeout = 4000)
    public void test4141() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        int[] intArray0 = new int[8];
        intArray0[0] = 0;
        intArray0[1] = 0;
        intArray0[2] = 0;
        intArray0[3] = 0;
        intArray0[4] = 0;
        intArray0[5] = 0;
        intArray0[6] = 0;
        intArray0[7] = 0;
        dSCompiler0.getPartialDerivativeIndex(intArray0);
    }

    @Test(timeout = 4000)
    public void test4242() throws Throwable {
        int int0 = 700;
        int int1 = 1;
        // Undeclared exception!
        DSCompiler.getCompiler(700, 1);
    }

    @Test(timeout = 4000)
    public void test4343() throws Throwable {
        int int0 = 3029;
        DSCompiler.getCompiler(3029, (-5080));
    }

    @Test(timeout = 4000)
    public void test4444() throws Throwable {
        int int0 = (-2289);
        DSCompiler.getCompiler((-2289), (-2289));
    }

    @Test(timeout = 4000)
    public void test4545() throws Throwable {
        int int0 = 2512;
        int int1 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(2512, 0);
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = (double) 2512;
        dSCompiler0.tan(doubleArray0, 0, doubleArray0, 0);
        doubleArray0[1] = (double) 0;
        doubleArray0[2] = (double) 2512;
        doubleArray0[3] = (double) 0;
        doubleArray0[4] = (double) 2512;
        doubleArray0[5] = (double) 0;
        double[] doubleArray1 = new double[0];
        int int2 = 172;
        dSCompiler0.subtract(doubleArray0, 0, doubleArray0, 2512, doubleArray1, 172);
    }

    @Test(timeout = 4000)
    public void test4646() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[7];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = (double) 0;
        doubleArray0[2] = (double) 0;
        doubleArray0[3] = (double) 0;
        doubleArray0[4] = (double) 0;
        doubleArray0[5] = (double) 0;
        doubleArray0[6] = 1270.0335;
        dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 2);
    }

    @Test(timeout = 4000)
    public void test4747() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        int[] intArray0 = new int[2];
        intArray0[0] = 0;
        intArray0[1] = 0;
        dSCompiler0.getPartialDerivativeIndex(intArray0);
    }

    @Test(timeout = 4000)
    public void test4848() throws Throwable {
        int int0 = 0;
        int int1 = 46;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 46);
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = (double) 46;
        doubleArray0[1] = (double) 46;
        int int2 = (-318);
        int int3 = 524;
        double[] doubleArray1 = new double[0];
        dSCompiler0.taylor(doubleArray1, (-2289), doubleArray0);
    }

    @Test(timeout = 4000)
    public void test4949() throws Throwable {
        int int0 = 559;
        int int1 = 686;
        // Undeclared exception!
        DSCompiler.getCompiler(559, 686);
    }

    @Test(timeout = 4000)
    public void test5050() throws Throwable {
        int int0 = 526;
        int int1 = 569;
        // Undeclared exception!
        DSCompiler.getCompiler(526, 569);
    }

    @Test(timeout = 4000)
    public void test5151() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(328, 0);
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = (double) 328;
        doubleArray0[1] = (double) 328;
        dSCompiler0.multiply(doubleArray0, 0, doubleArray0, 328, doubleArray0, 0);
    }

    @Test(timeout = 4000)
    public void test5252() throws Throwable {
        int int0 = 707;
        int int1 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(707, 0);
        double[] doubleArray0 = new double[9];
        doubleArray0[0] = 0.5734702348709106;
        doubleArray0[1] = (double) 707;
        doubleArray0[2] = (double) 0;
        doubleArray0[3] = (double) 707;
        doubleArray0[4] = (double) 707;
        doubleArray0[5] = (double) 0;
        doubleArray0[6] = 0.57;
        doubleArray0[7] = (double) 707;
        doubleArray0[8] = (double) 707;
        dSCompiler0.sin(doubleArray0, 707, doubleArray0, (-1443));
    }

    @Test(timeout = 4000)
    public void test5353() throws Throwable {
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 615);
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = (double) 0;
        doubleArray0[1] = 0.0;
        doubleArray0[2] = (double) 615;
        doubleArray0[3] = (-1509.514525752);
        dSCompiler0.linearCombination(0.0, doubleArray0, 0, 0.0, doubleArray0, 0, doubleArray0, 535);
    }

    @Test(timeout = 4000)
    public void test5454() throws Throwable {
        int int0 = 0;
        DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
        double[] doubleArray0 = new double[3];
        double double0 = 0.0;
        double double1 = (-1729.96897);
        int int1 = (-3556);
        dSCompiler0.linearCombination((double) 0, doubleArray0, 0, 0.0, doubleArray0, 0, 3836.298489, doubleArray0, 0, doubleArray0, 0);
        int int2 = 0;
        int int3 = (-2852);
        int int4 = (-1525);
        dSCompiler0.pow(doubleArray0, 0, (-2852), doubleArray0, (-1525));
    }
}
