[ {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "public PointValuePair optimize(int maxEval, FUNC f, GoalType goalType, double[] startPoint)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "public PointValuePair optimize(int maxEval, FUNC f, GoalType goalType, double[] startPoint, double[] lower, double[] upper)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test011"
}, {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "public PointValuePair optimize(int maxEval, FUNC f, GoalType goalType, double[] startPoint, double[] lower, double[] upper)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test022"
}, {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "protected PointValuePair doOptimize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test033"
}, {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "protected PointValuePair doOptimize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test044"
}, {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "public CMAESOptimizer(int lambda, double[] inputSigma, int maxIterations, double stopFitness, boolean isActiveCMA, int diagonalOnly, int checkFeasableCount, RandomGenerator random, boolean generateStatistics, ConvergenceChecker<PointValuePair> checker)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test055"
}, {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "public CMAESOptimizer(int lambda, double[] inputSigma, int maxIterations, double stopFitness, boolean isActiveCMA, int diagonalOnly, int checkFeasableCount, RandomGenerator random, boolean generateStatistics, ConvergenceChecker<PointValuePair> checker)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test066"
}, {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "public CMAESOptimizer(int lambda, double[] inputSigma, int maxIterations, double stopFitness, boolean isActiveCMA, int diagonalOnly, int checkFeasableCount, RandomGenerator random, boolean generateStatistics)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test077"
}, {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "public PointValuePair optimize(int maxEval, FUNC f, GoalType goalType, double[] startPoint, double[] lower, double[] upper)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test088"
}, {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "public PointValuePair optimize(int maxEval, FUNC f, GoalType goalType, double[] startPoint)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test099"
}, {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "public PointValuePair optimize(int maxEval, FUNC f, GoalType goalType, double[] startPoint, double[] lower, double[] upper)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1010"
}, {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "public PointValuePair optimize(int maxEval, FUNC f, GoalType goalType, double[] startPoint, double[] lower, double[] upper)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1111"
}, {
  "className" : "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
  "methodSignature" : "public boolean equals(Object o)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1212"
} ]