{
  "test3952" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3952() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = fraction0.subtract(fraction0);\n    fraction1.percentageValue();\n}",
    "testName" : "test3952"
  },
  "test4965" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4965() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);\n    fraction0.percentageValue();\n}",
    "testName" : "test4965"
  },
  "test1015" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1015() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    fraction0.hashCode();\n}",
    "testName" : "test1015"
  },
  "test3953" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3953() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = fraction0.subtract(fraction0);\n    fraction1.getDenominator();\n}",
    "testName" : "test3953"
  },
  "test4763" : {
    "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4763() throws Throwable {\n    Fraction.getReducedFraction(0, 0);\n}",
    "testName" : "test4763"
  },
  "test2025" : {
    "methodSignature" : "public Fraction(int num, int den)",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2025() throws Throwable {\n    Fraction fraction0 = null;\n    fraction0 = new Fraction(0, 0);\n}",
    "testName" : "test2025"
  },
  "test034" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    Fraction fraction1 = fraction0.TWO_FIFTHS.divide(1399);\n    fraction1.getDenominator();\n}",
    "testName" : "test034"
  },
  "test1419" : {
    "methodSignature" : "public Fraction(double value, int maxDenominator) throws FractionConversionException",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1419() throws Throwable {\n    Fraction fraction0 = null;\n    fraction0 = new Fraction((double) 4, 4);\n}",
    "testName" : "test1419"
  },
  "test1217" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1217() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    float float0 = fraction0.floatValue();\n}",
    "testName" : "test1217"
  },
  "test2228" : {
    "methodSignature" : "public Fraction(int num, int den)",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2228() throws Throwable {\n    Fraction fraction0 = null;\n    fraction0 = new Fraction(Integer.MIN_VALUE, Integer.MIN_VALUE);\n}",
    "testName" : "test2228"
  },
  "test4561" : {
    "methodSignature" : "public Fraction divide(Fraction fraction)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4561() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    fraction0.THREE_FIFTHS.divide((Fraction) null);\n}",
    "testName" : "test4561"
  },
  "test3445" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3445() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    fraction0.add((Fraction) null);\n}",
    "testName" : "test3445"
  },
  "test1621" : {
    "methodSignature" : "public Fraction(double value, int maxDenominator) throws FractionConversionException",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1621() throws Throwable {\n    Fraction fraction0 = null;\n    fraction0 = new Fraction((double) 9, 9);\n}",
    "testName" : "test1621"
  },
  "test2633" : {
    "methodSignature" : "public int compareTo(Fraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2633() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    int int0 = fraction0.compareTo(fraction0);\n}",
    "testName" : "test2633"
  },
  "test2430" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2430() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = fraction0.MINUS_ONE.abs();\n    fraction1.getDenominator();\n}",
    "testName" : "test2430"
  },
  "test3243" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3243() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    Fraction fraction1 = Fraction.TWO_THIRDS;\n    boolean boolean0 = fraction1.equals(fraction0);\n    fraction0.equals((Object) fraction1);\n}",
    "testName" : "test3243"
  },
  "test4258" : {
    "methodSignature" : "public Fraction multiply(Fraction fraction)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4258() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    fraction0.multiply((Fraction) null);\n}",
    "testName" : "test4258"
  },
  "test5268" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5268() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_FIFTH;\n    String string0 = fraction0.toString();\n}",
    "testName" : "test5268"
  },
  "test023" : {
    "methodSignature" : "public Fraction negate()",
    "methodName" : "negate",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test023() throws Throwable {\n    Fraction fraction0 = new Fraction(423, 423);\n    Fraction fraction1 = fraction0.add(Integer.MAX_VALUE);\n    fraction1.negate();\n}",
    "testName" : "test023"
  },
  "test3648" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3648() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = fraction0.ZERO.add(fraction0);\n}",
    "testName" : "test3648"
  },
  "test0811" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0811() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = fraction0.TWO_THIRDS.subtract(4268);\n    fraction1.doubleValue();\n}",
    "testName" : "test0811"
  },
  "test1823" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1823() throws Throwable {\n    Fraction fraction0 = new Fraction((-1044.2346729));\n    fraction0.getDenominator();\n}",
    "testName" : "test1823"
  },
  "test2836" : {
    "methodSignature" : "public int compareTo(Fraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2836() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = fraction0.MINUS_ONE.add((-2682));\n    int int0 = fraction0.compareTo(fraction1);\n}",
    "testName" : "test2836"
  },
  "test0812" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0812() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = fraction0.TWO_THIRDS.subtract(4268);\n    fraction1.getDenominator();\n}",
    "testName" : "test0812"
  },
  "test057" : {
    "methodSignature" : "public FractionField getField()",
    "methodName" : "getField",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test057() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    FractionField fractionField0 = fraction0.getField();\n}",
    "testName" : "test057"
  },
  "test3242" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3242() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    Fraction fraction1 = Fraction.TWO_THIRDS;\n    boolean boolean0 = fraction1.equals(fraction0);\n}",
    "testName" : "test3242"
  },
  "test4054" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4054() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_FIFTH;\n    Fraction fraction1 = Fraction.getReducedFraction(Integer.MAX_VALUE, 2880);\n    fraction1.add(fraction0);\n}",
    "testName" : "test4054"
  },
  "test5066" : {
    "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5066() throws Throwable {\n    Fraction.getReducedFraction(4507, Integer.MIN_VALUE);\n}",
    "testName" : "test5066"
  },
  "test3040" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3040() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    boolean boolean0 = fraction0.equals(fraction0);\n}",
    "testName" : "test3040"
  },
  "test2126" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2126() throws Throwable {\n    Fraction fraction0 = new Fraction((-2059), (-2059));\n    fraction0.getNumerator();\n}",
    "testName" : "test2126"
  },
  "test4864" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4864() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(0, (-14612));\n    fraction0.doubleValue();\n}",
    "testName" : "test4864"
  },
  "test1116" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1116() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    int int0 = fraction0.getNumerator();\n}",
    "testName" : "test1116"
  },
  "test2127" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2127() throws Throwable {\n    Fraction fraction0 = new Fraction((-2059), (-2059));\n    fraction0.percentageValue();\n}",
    "testName" : "test2127"
  },
  "test3851" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3851() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    Fraction fraction1 = fraction0.TWO_FIFTHS.add(fraction0);\n    fraction1.percentageValue();\n}",
    "testName" : "test3851"
  },
  "test4662" : {
    "methodSignature" : "public Fraction divide(Fraction fraction)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4662() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    fraction0.ZERO.divide(fraction0);\n}",
    "testName" : "test4662"
  },
  "test3850" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3850() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    Fraction fraction1 = fraction0.TWO_FIFTHS.add(fraction0);\n    fraction1.getNumerator();\n}",
    "testName" : "test3850"
  },
  "test012" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test012() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    int int0 = fraction0.getDenominator();\n}",
    "testName" : "test012"
  },
  "test1318" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1318() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    double double0 = fraction0.percentageValue();\n}",
    "testName" : "test1318"
  },
  "test2329" : {
    "methodSignature" : "public Fraction(int num, int den)",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2329() throws Throwable {\n    Fraction fraction0 = null;\n    fraction0 = new Fraction(2, Integer.MIN_VALUE);\n}",
    "testName" : "test2329"
  },
  "test046" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test046() throws Throwable {\n    Fraction fraction0 = Fraction.MINUS_ONE;\n    Fraction fraction1 = fraction0.subtract(fraction0);\n    fraction1.percentageValue();\n}",
    "testName" : "test046"
  },
  "test4460" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4460() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    Fraction fraction1 = fraction0.FOUR_FIFTHS.multiply(fraction0);\n    fraction1.getNumerator();\n}",
    "testName" : "test4460"
  },
  "test1520" : {
    "methodSignature" : "public Fraction(double value) throws FractionConversionException",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1520() throws Throwable {\n    Fraction fraction0 = null;\n    fraction0 = new Fraction((double) Integer.MIN_VALUE);\n}",
    "testName" : "test1520"
  },
  "test2532" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2532() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_FIFTH;\n    Fraction fraction1 = fraction0.abs();\n    fraction1.doubleValue();\n}",
    "testName" : "test2532"
  },
  "test3547" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3547() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.ZERO.subtract(fraction0);\n    fraction1.getNumerator();\n}",
    "testName" : "test3547"
  },
  "test3546" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3546() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.ZERO.subtract(fraction0);\n    fraction1.percentageValue();\n}",
    "testName" : "test3546"
  },
  "test4359" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4359() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    Fraction fraction1 = fraction0.FOUR_FIFTHS.multiply(fraction0);\n    fraction1.doubleValue();\n}",
    "testName" : "test4359"
  },
  "test5369" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5369() throws Throwable {\n    Fraction fraction0 = Fraction.MINUS_ONE;\n    String string0 = fraction0.toString();\n}",
    "testName" : "test5369"
  },
  "test4156" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4156() throws Throwable {\n    Fraction fraction0 = new Fraction(11, 11);\n    Fraction fraction1 = fraction0.ZERO.divide(fraction0);\n    fraction0.getDenominator();\n}",
    "testName" : "test4156"
  },
  "test3344" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3344() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    Fraction fraction1 = Fraction.ONE_HALF;\n    boolean boolean0 = fraction1.equals(fraction0);\n}",
    "testName" : "test3344"
  },
  "test4157" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4157() throws Throwable {\n    Fraction fraction0 = new Fraction(11, 11);\n    Fraction fraction1 = fraction0.ZERO.divide(fraction0);\n    fraction0.percentageValue();\n}",
    "testName" : "test4157"
  },
  "test000" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    Fraction fraction1 = fraction0.ONE_THIRD.multiply((-1517));\n    fraction1.getNumerator();\n}",
    "testName" : "test000"
  },
  "test1924" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1924() throws Throwable {\n    Fraction fraction0 = new Fraction(425.11148473894536, 2288);\n    fraction0.percentageValue();\n}",
    "testName" : "test1924"
  },
  "test001" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test001() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    Fraction fraction1 = fraction0.ONE_THIRD.multiply((-1517));\n    fraction1.percentageValue();\n}",
    "testName" : "test001"
  },
  "test0913" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0913() throws Throwable {\n    Fraction fraction0 = new Fraction(4);\n    int int0 = fraction0.intValue();\n}",
    "testName" : "test0913"
  },
  "test0914" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0914() throws Throwable {\n    Fraction fraction0 = new Fraction(4);\n    int int0 = fraction0.intValue();\n    fraction0.getDenominator();\n}",
    "testName" : "test0914"
  },
  "test2939" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2939() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    Fraction fraction1 = Fraction.ONE_HALF;\n    boolean boolean0 = fraction1.equals(fraction0);\n}",
    "testName" : "test2939"
  },
  "test2938" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2938() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    Fraction fraction1 = Fraction.ONE_HALF;\n    boolean boolean0 = fraction1.equals(fraction0);\n    fraction0.equals((Object) fraction1);\n}",
    "testName" : "test2938"
  },
  "test0710" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0710() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    long long0 = fraction0.longValue();\n}",
    "testName" : "test0710"
  },
  "test1722" : {
    "methodSignature" : "public Fraction(double value, double epsilon, int maxIterations) throws FractionConversionException",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1722() throws Throwable {\n    Fraction fraction0 = null;\n    fraction0 = new Fraction(4.671341494509873E-4, 4.671341494509873E-4, (-87));\n}",
    "testName" : "test1722"
  },
  "test2735" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2735() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = fraction0.MINUS_ONE.add(2);\n    int int0 = fraction0.compareTo(fraction1);\n    fraction1.floatValue();\n}",
    "testName" : "test2735"
  },
  "test2734" : {
    "methodSignature" : "public int compareTo(Fraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2734() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = fraction0.MINUS_ONE.add(2);\n    int int0 = fraction0.compareTo(fraction1);\n}",
    "testName" : "test2734"
  },
  "test3749" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3749() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    Fraction fraction1 = Fraction.ZERO;\n    Fraction fraction2 = fraction0.TWO_FIFTHS.add(fraction1);\n    fraction2.percentageValue();\n}",
    "testName" : "test3749"
  },
  "test035" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test035() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    Fraction fraction1 = fraction0.TWO_FIFTHS.divide(1399);\n    fraction1.floatValue();\n}",
    "testName" : "test035"
  },
  "test079" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    long long0 = fraction0.longValue();\n    fraction0.percentageValue();\n}",
    "testName" : "test079"
  },
  "test3141" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3141() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    Object object0 = new Object();\n    boolean boolean0 = fraction0.equals(object0);\n}",
    "testName" : "test3141"
  },
  "test4155" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4155() throws Throwable {\n    Fraction fraction0 = new Fraction(11, 11);\n    Fraction fraction1 = fraction0.ZERO.divide(fraction0);\n    fraction1.getNumerator();\n}",
    "testName" : "test4155"
  },
  "test5167" : {
    "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5167() throws Throwable {\n    Fraction.getReducedFraction(Integer.MIN_VALUE, (-2212));\n}",
    "testName" : "test5167"
  }
}