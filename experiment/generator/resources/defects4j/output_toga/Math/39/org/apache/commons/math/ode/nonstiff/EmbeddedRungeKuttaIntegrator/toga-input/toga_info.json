{
  "test0410" : {
    "methodSignature" : "public double integrate(final FirstOrderDifferentialEquations equations, final double t0, final double[] y0, final double t, final double[] y) throws MathIllegalStateException, MathIllegalArgumentException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0410() throws Throwable {\n    double[] doubleArray0 = new double[0];\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(0.10379679501056671, 0.10379679501056671, doubleArray0, doubleArray0);\n    double[][] doubleArray1 = new double[3][0];\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    // Undeclared exception!\n    dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-32.795504), doubleArray0, 0.10379679501056671, doubleArray1[0]);\n}",
    "testName" : "test0410"
  },
  "test1016" : {
    "methodSignature" : "public double getMaxGrowth()",
    "methodName" : "getMaxGrowth",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1016() throws Throwable {\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(0.0, 0.0, (-1068.15155932), (-1.043079666926483E-86));\n    highamHall54Integrator0.setMaxGrowth((-1.043079666926483E-86));\n    highamHall54Integrator0.getMaxGrowth();\n}",
    "testName" : "test1016"
  },
  "test0511" : {
    "methodSignature" : "public void integrate(final ExpandableStatefulODE equations, final double t) throws MathIllegalStateException, MathIllegalArgumentException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0511() throws Throwable {\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(0.0, 0.0, 0.0, 0.0);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(13).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);\n    // Undeclared exception!\n    dormandPrince54Integrator0.integrate(expandableStatefulODE0, 0.2);\n}",
    "testName" : "test0511"
  },
  "test1420" : {
    "methodSignature" : "public double getSafety()",
    "methodName" : "getSafety",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1420() throws Throwable {\n    DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(0.0, 0.0, (-847.59644), 0.0);\n    dormandPrince853Integrator0.setSafety(0.0);\n    dormandPrince853Integrator0.getSafety();\n}",
    "testName" : "test1420"
  },
  "test000" : {
    "methodSignature" : "public double getMaxGrowth()",
    "methodName" : "getMaxGrowth",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(559.5, 559.5, 559.5, 0.0);\n    double double0 = dormandPrince54Integrator0.getSafety();\n    dormandPrince54Integrator0.getMaxGrowth();\n}",
    "testName" : "test000"
  },
  "test1319" : {
    "methodSignature" : "public double getSafety()",
    "methodName" : "getSafety",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1319() throws Throwable {\n    double[] doubleArray0 = new double[4];\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-1.0342514383702196E-7), (-1.0342514383702196E-7), doubleArray0, doubleArray0);\n    dormandPrince54Integrator0.setSafety((-1.0342514383702196E-7));\n    dormandPrince54Integrator0.getSafety();\n}",
    "testName" : "test1319"
  },
  "test001" : {
    "methodSignature" : "public double getSafety()",
    "methodName" : "getSafety",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test001() throws Throwable {\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(559.5, 559.5, 559.5, 0.0);\n    double double0 = dormandPrince54Integrator0.getSafety();\n}",
    "testName" : "test001"
  },
  "test0814" : {
    "methodSignature" : "public void integrate(final ExpandableStatefulODE equations, final double t) throws MathIllegalStateException, MathIllegalArgumentException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0814() throws Throwable {\n    double[] doubleArray0 = new double[1];\n    DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(1306.7655606344235, (-2471.2328452794), doubleArray0, doubleArray0);\n    dormandPrince853Integrator0.integrate((ExpandableStatefulODE) null, 1306.7655606344235);\n}",
    "testName" : "test0814"
  },
  "test0915" : {
    "methodSignature" : "public void integrate(final ExpandableStatefulODE equations, final double t) throws MathIllegalStateException, MathIllegalArgumentException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0915() throws Throwable {\n    double[] doubleArray0 = new double[4];\n    DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(0.0, (-802.2175), doubleArray0, doubleArray0);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);\n    dormandPrince853Integrator0.integrate(expandableStatefulODE0, (-802.2175));\n}",
    "testName" : "test0915"
  },
  "test1117" : {
    "methodSignature" : "public double getMaxGrowth()",
    "methodName" : "getMaxGrowth",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1117() throws Throwable {\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(7.868447965383903E-63, 7.868447965383903E-63, (-1.0), (-1.0));\n    dormandPrince54Integrator0.setMaxGrowth(0.0);\n    dormandPrince54Integrator0.getMaxGrowth();\n}",
    "testName" : "test1117"
  },
  "test0612" : {
    "methodSignature" : "public void integrate(final ExpandableStatefulODE equations, final double t) throws MathIllegalStateException, MathIllegalArgumentException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0612() throws Throwable {\n    double[] doubleArray0 = new double[10];\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(102.221419, 102.221419, doubleArray0, doubleArray0);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(5).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);\n    // Undeclared exception!\n    dormandPrince54Integrator0.integrate(expandableStatefulODE0, (double) 5);\n}",
    "testName" : "test0612"
  },
  "test1218" : {
    "methodSignature" : "public int getOrder()",
    "methodName" : "getOrder",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1218() throws Throwable {\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-676.5445304058), (-676.5445304058), 0.0, 687.0788934394282);\n    dormandPrince54Integrator0.getOrder();\n}",
    "testName" : "test1218"
  },
  "test0713" : {
    "methodSignature" : "public double getMinReduction()",
    "methodName" : "getMinReduction",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0713() throws Throwable {\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-676.5445304058), (-676.5445304058), 0.0, 687.0788934394282);\n    dormandPrince54Integrator0.setMinReduction((-676.5445304058));\n    dormandPrince54Integrator0.getMinReduction();\n}",
    "testName" : "test0713"
  },
  "test028" : {
    "methodSignature" : "public double getSafety()",
    "methodName" : "getSafety",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test028() throws Throwable {\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(559.5, 559.5, 559.5, 0.0);\n    double double0 = dormandPrince54Integrator0.getMaxGrowth();\n    dormandPrince54Integrator0.getSafety();\n}",
    "testName" : "test028"
  },
  "test039" : {
    "methodSignature" : "public void integrate(final ExpandableStatefulODE equations, final double t) throws MathIllegalStateException, MathIllegalArgumentException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test039() throws Throwable {\n    double[] doubleArray0 = new double[0];\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(10.0, (-744.5252793487655), doubleArray0, doubleArray0);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);\n    // Undeclared exception!\n    highamHall54Integrator0.integrate(expandableStatefulODE0, 10.0);\n}",
    "testName" : "test039"
  },
  "test015" : {
    "methodSignature" : "public double getSafety()",
    "methodName" : "getSafety",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test015() throws Throwable {\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(559.5, 559.5, 559.5, 0.0);\n    double double0 = dormandPrince54Integrator0.getMinReduction();\n    dormandPrince54Integrator0.getSafety();\n}",
    "testName" : "test015"
  },
  "test026" : {
    "methodSignature" : "public double getMinReduction()",
    "methodName" : "getMinReduction",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test026() throws Throwable {\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(559.5, 559.5, 559.5, 0.0);\n    double double0 = dormandPrince54Integrator0.getMaxGrowth();\n    dormandPrince54Integrator0.getMinReduction();\n}",
    "testName" : "test026"
  },
  "test027" : {
    "methodSignature" : "public double getMaxGrowth()",
    "methodName" : "getMaxGrowth",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test027() throws Throwable {\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(559.5, 559.5, 559.5, 0.0);\n    double double0 = dormandPrince54Integrator0.getMaxGrowth();\n}",
    "testName" : "test027"
  },
  "test002" : {
    "methodSignature" : "public double getMinReduction()",
    "methodName" : "getMinReduction",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test002() throws Throwable {\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(559.5, 559.5, 559.5, 0.0);\n    double double0 = dormandPrince54Integrator0.getSafety();\n    dormandPrince54Integrator0.getMinReduction();\n}",
    "testName" : "test002"
  },
  "test013" : {
    "methodSignature" : "public double getMinReduction()",
    "methodName" : "getMinReduction",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test013() throws Throwable {\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(559.5, 559.5, 559.5, 0.0);\n    double double0 = dormandPrince54Integrator0.getMinReduction();\n}",
    "testName" : "test013"
  },
  "test014" : {
    "methodSignature" : "public double getMaxGrowth()",
    "methodName" : "getMaxGrowth",
    "className" : "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test014() throws Throwable {\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(559.5, 559.5, 559.5, 0.0);\n    double double0 = dormandPrince54Integrator0.getMinReduction();\n    dormandPrince54Integrator0.getMaxGrowth();\n}",
    "testName" : "test014"
  }
}