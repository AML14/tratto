org.apache.commons.math.optimization.linear.SimplexSolver,@Test(timeout = 4000)
public void test066() throws Throwable {
    SimplexSolver simplexSolver0 = new SimplexSolver(1.0E-6);
    Double[] doubleArray0 = new Double[2];
    Double double0 = new Double((-5609.2087724));
    doubleArray0[1] = double0;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(100, (double) doubleArray0[1]);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(arrayRealVector0, (-1.0));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    Relationship relationship0 = Relationship.EQ;
    LinearConstraint linearConstraint0 = mock(LinearConstraint.class, new ViolatedAssumptionAnswer());
    doReturn(arrayRealVector0).when(linearConstraint0).getCoefficients();
    doReturn(relationship0, relationship0, relationship0, relationship0, relationship0).when(linearConstraint0).getRelationship();
    doReturn(1.0E-6, (double) 100).when(linearConstraint0).getValue();
    linkedList0.add(linearConstraint0);
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 562.7235872);
    simplexSolver0.doIteration(simplexTableau0);
    simplexTableau0.getNumVariables();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.linear.SimplexSolver,@Test(timeout = 4000)
public void test088() throws Throwable {
    SimplexSolver simplexSolver0 = new SimplexSolver(1.0E-6);
    Double[] doubleArray0 = new Double[21];
    Double double0 = new Double(100);
    doubleArray0[0] = double0;
    doubleArray0[1] = doubleArray0[0];
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(100, (double) doubleArray0[1]);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(arrayRealVector0, 1413.958);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    simplexSolver0.optimize(linearObjectiveFunction0, linkedList0, goalType0, true);
    RealPointValuePair realPointValuePair0 = simplexSolver0.doOptimize();
    realPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.linear.SimplexSolver,@Test(timeout = 4000)
public void test2121() throws Throwable {
    SimplexSolver simplexSolver0 = new SimplexSolver();
    Double[] doubleArray0 = new Double[2];
    Double double0 = new Double(100);
    doubleArray0[1] = double0;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(100, (double) doubleArray0[1]);
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, arrayRealVector0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(arrayRealVector1, 100);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    Relationship relationship0 = Relationship.GEQ;
    LinearConstraint linearConstraint0 = mock(LinearConstraint.class, new ViolatedAssumptionAnswer());
    doReturn(arrayRealVector0).when(linearConstraint0).getCoefficients();
    doReturn(relationship0, relationship0, relationship0, relationship0, relationship0).when(linearConstraint0).getRelationship();
    doReturn(1.0E-6, (double) 100).when(linearConstraint0).getValue();
    linkedList0.add(linearConstraint0);
    GoalType goalType0 = GoalType.MAXIMIZE;
    simplexSolver0.optimize(linearObjectiveFunction0, linkedList0, goalType0, true);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
