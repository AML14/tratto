{
  "test0000" : {
    "methodSignature" : "public static long factorial(final int n)",
    "methodName" : "factorial",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    MathUtils.lcm(3000, 3000);\n    MathUtils.sign(0L);\n    MathUtils.cosh((-4.9E-324));\n    double double0 = MathUtils.EPSILON;\n    MathUtils.mulAndCheck((-24L), 0L);\n    MathUtils.scalb(3000, 3000);\n    MathUtils.sign((double) 3000);\n    MathUtils.cosh((-2093.952733));\n    MathUtils.factorial(3000);\n}",
    "testName" : "test0000"
  },
  "test03760" : {
    "methodSignature" : "public static double scalb(final double d, final int scaleFactor)",
    "methodName" : "scalb",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03760() throws Throwable {\n    MathUtils.round(0.0F, 0, 0);\n    MathUtils.equals(2.0, 2.0);\n    MathUtils.round(2.0, 0);\n    MathUtils.scalb((-503.9778030393684), 0);\n}",
    "testName" : "test03760"
  },
  "test04972" : {
    "methodSignature" : "public static long sign(final long x)",
    "methodName" : "sign",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04972() throws Throwable {\n    MathUtils.indicator(0L);\n    MathUtils.sign(2);\n    MathUtils.binomialCoefficientLog(1, 0);\n    MathUtils.sinh(1);\n    MathUtils.sign(0L);\n}",
    "testName" : "test04972"
  },
  "test101124" : {
    "methodSignature" : "public static double round(double x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101124() throws Throwable {\n    MathUtils.nextAfter(2.2250738585072014E-308, (-1766.6440045686));\n    MathUtils.round(Double.NaN, 4132, (-763));\n}",
    "testName" : "test101124"
  },
  "test080103" : {
    "methodSignature" : "public static int sign(final int x)",
    "methodName" : "sign",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test080103() throws Throwable {\n    MathUtils.normalizeAngle(0.0, 1.0);\n    MathUtils.sign(616.1991F);\n    MathUtils.sign((byte) 0);\n    MathUtils.indicator(0L);\n    MathUtils.sign(0);\n}",
    "testName" : "test080103"
  },
  "test05780" : {
    "methodSignature" : "public static long sign(final long x)",
    "methodName" : "sign",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05780() throws Throwable {\n    MathUtils.sign((-110L));\n}",
    "testName" : "test05780"
  },
  "test06992" : {
    "methodSignature" : "public static double binomialCoefficientDouble(final int n, final int k)",
    "methodName" : "binomialCoefficientDouble",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06992() throws Throwable {\n    MathUtils.lcm(2282, 2282);\n    MathUtils.round((double) 2282, 3060);\n    MathUtils.sign(0);\n    MathUtils.binomialCoefficientDouble(0, 421);\n}",
    "testName" : "test06992"
  },
  "test01336" : {
    "methodSignature" : "public static double binomialCoefficientDouble(final int n, final int k)",
    "methodName" : "binomialCoefficientDouble",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01336() throws Throwable {\n    int int0 = 300;\n    MathUtils.mulAndCheck(300, 1);\n    MathUtils.scalb((-2900.8202145115297), (-929));\n    MathUtils.sign((-2900.8202145115297));\n    int int1 = 453;\n    MathUtils.binomialCoefficientLog(453, 1);\n    MathUtils.equals(0.0, (double) 300);\n    MathUtils.sign((long) 300);\n    MathUtils.mulAndCheck((long) (-929), (long) 453);\n    MathUtils.factorialLog(453);\n    MathUtils.sign((-3894));\n    MathUtils.binomialCoefficientDouble((-1), (-929));\n}",
    "testName" : "test01336"
  },
  "test099122" : {
    "methodSignature" : "public static double factorialDouble(final int n)",
    "methodName" : "factorialDouble",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099122() throws Throwable {\n    MathUtils.sign((-816.297189));\n    MathUtils.sign((-377L));\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = (double) (-1L);\n    doubleArray0[1] = (double) (-377L);\n    doubleArray0[2] = (-1.0);\n    doubleArray0[3] = (-1.0);\n    doubleArray0[4] = (-1.0);\n    MathUtils.hash(doubleArray0);\n    MathUtils.sign((float) 1697859743);\n    MathUtils.subAndCheck((-377L), 1L);\n    MathUtils.gcd(1697859743, 1697859743);\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.sign(1697859743);\n    MathUtils.round((float) (-3840L), 1697859743, 1);\n    MathUtils.indicator((float) 1L);\n    MathUtils.mulAndCheck((long) 1697859743, (long) 1697859743);\n    // Undeclared exception!\n    MathUtils.factorialDouble(1697859743);\n}",
    "testName" : "test099122"
  },
  "test04568" : {
    "methodSignature" : "public static long factorial(final int n)",
    "methodName" : "factorial",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04568() throws Throwable {\n    MathUtils.indicator((short) 0);\n    MathUtils.sign((short) (-1));\n    MathUtils.cosh(1.0);\n    MathUtils.log(0.0, (short) (-1));\n    MathUtils.factorial((short) (-1));\n}",
    "testName" : "test04568"
  },
  "test02548" : {
    "methodSignature" : "public static long subAndCheck(long a, long b)",
    "methodName" : "subAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02548() throws Throwable {\n    MathUtils.subAndCheck(2123L, 4503599627370495L);\n}",
    "testName" : "test02548"
  },
  "test00524" : {
    "methodSignature" : "public static double binomialCoefficientLog(final int n, final int k)",
    "methodName" : "binomialCoefficientLog",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00524() throws Throwable {\n    MathUtils.binomialCoefficientDouble(0, 0);\n    MathUtils.hash((double) 0);\n    MathUtils.lcm((-3869), 52);\n    MathUtils.sign((double) 201188);\n    MathUtils.sign((byte) 0);\n    MathUtils.gcd(52, 1);\n    MathUtils.sign(52);\n    MathUtils.sign((long) 201188);\n    MathUtils.subAndCheck(0, 6603);\n    MathUtils.mulAndCheck((long) 1, (-2588L));\n    MathUtils.sign((-243.34741F));\n    MathUtils.scalb((-3869), 1);\n    double[] doubleArray0 = new double[4];\n    doubleArray0[0] = (double) 201188;\n    doubleArray0[1] = 1.0;\n    doubleArray0[2] = 1.0;\n    doubleArray0[3] = (double) 0;\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.hash((double) 1);\n    MathUtils.subAndCheck(1892, 31);\n    MathUtils.binomialCoefficientLog((-3869), 1);\n}",
    "testName" : "test00524"
  },
  "test115138" : {
    "methodSignature" : "public static double nextAfter(double d, double direction)",
    "methodName" : "nextAfter",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115138() throws Throwable {\n    MathUtils.sign((-815.850163223983));\n    MathUtils.mulAndCheck((-3840L), (-377L));\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = (double) 1447680L;\n    doubleArray0[1] = (double) (-377L);\n    doubleArray0[2] = (-1.0);\n    doubleArray0[3] = (-1.0);\n    doubleArray0[4] = (-1.0);\n    MathUtils.hash((double[]) null);\n    MathUtils.sign((float) 0);\n    MathUtils.subAndCheck((-377L), 1L);\n    MathUtils.gcd(0, 0);\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.sign(0);\n    MathUtils.round((float) (-3840L), 0, 1);\n    MathUtils.mulAndCheck(2964, 2972);\n    MathUtils.indicator((-1.0));\n    MathUtils.nextAfter((-3839.0F), (-1.0));\n}",
    "testName" : "test115138"
  },
  "test094117" : {
    "methodSignature" : "public static boolean equals(double[] x, double[] y)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094117() throws Throwable {\n    MathUtils.factorialLog(1354);\n    MathUtils.round((float) 1354, 1354);\n    MathUtils.round(0.0, 1354);\n    MathUtils.round(Float.NaN, 1354, 0);\n    MathUtils.sign(1.0F);\n    MathUtils.binomialCoefficientDouble(2, 2);\n    double[] doubleArray0 = new double[9];\n    doubleArray0[0] = (double) 1.0F;\n    doubleArray0[1] = (double) Float.NaN;\n    doubleArray0[2] = (double) 2;\n    doubleArray0[3] = 8413.972595307363;\n    doubleArray0[4] = (double) 1354;\n    doubleArray0[5] = 0.0;\n    doubleArray0[6] = 0.0;\n    doubleArray0[7] = (double) 2;\n    doubleArray0[8] = (double) 0;\n    double[] doubleArray1 = new double[1];\n    doubleArray1[0] = 1.0;\n    MathUtils.equals(doubleArray0, doubleArray1);\n}",
    "testName" : "test094117"
  },
  "test0013" : {
    "methodSignature" : "public static float round(float x, int scale)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0013() throws Throwable {\n    MathUtils.addAndCheck(0L, 0L);\n    MathUtils.equals((double) 0L, (double) 0L);\n    double double0 = MathUtils.SAFE_MIN;\n    MathUtils.subAndCheck(0L, 0L);\n    double double1 = MathUtils.indicator(1335.70629);\n    double double2 = MathUtils.EPSILON;\n    short short0 = MathUtils.sign((short) 1);\n    float float0 = MathUtils.round((float) (short) 1, 0, (int) (short) 1);\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = 0.5;\n    doubleArray0[1] = (double) (short) 1;\n    doubleArray0[2] = 2746.4256;\n    MathUtils.hash(doubleArray0);\n    MathUtils.hash(0.0);\n    double double3 = MathUtils.factorialDouble((short) 1);\n    float float1 = MathUtils.round((float) 0L, (int) (short) 1);\n}",
    "testName" : "test0013"
  },
  "test06184" : {
    "methodSignature" : "public static boolean equals(double[] x, double[] y)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06184() throws Throwable {\n    MathUtils.mulAndCheck(0L, 2033L);\n    MathUtils.mulAndCheck(2033L, 2033L);\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = (double) 0L;\n    doubleArray0[1] = (double) 2033L;\n    doubleArray0[2] = (double) 0L;\n    MathUtils.equals(doubleArray0, doubleArray0);\n}",
    "testName" : "test06184"
  },
  "test0014" : {
    "methodSignature" : "public static double sinh(double x)",
    "methodName" : "sinh",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0014() throws Throwable {\n    MathUtils.addAndCheck(0L, 0L);\n    MathUtils.equals((double) 0L, (double) 0L);\n    double double0 = MathUtils.SAFE_MIN;\n    MathUtils.subAndCheck(0L, 0L);\n    double double1 = MathUtils.indicator(1335.70629);\n    double double2 = MathUtils.EPSILON;\n    short short0 = MathUtils.sign((short) 1);\n    float float0 = MathUtils.round((float) (short) 1, 0, (int) (short) 1);\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = 0.5;\n    doubleArray0[1] = (double) (short) 1;\n    doubleArray0[2] = 2746.4256;\n    MathUtils.hash(doubleArray0);\n    MathUtils.hash(0.0);\n    double double3 = MathUtils.factorialDouble((short) 1);\n    float float1 = MathUtils.round((float) 0L, (int) (short) 1);\n    double double4 = MathUtils.sinh(2746.4256);\n}",
    "testName" : "test0014"
  },
  "test0015" : {
    "methodSignature" : "public static long addAndCheck(long a, long b)",
    "methodName" : "addAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0015() throws Throwable {\n    MathUtils.addAndCheck(0L, 0L);\n    MathUtils.equals((double) 0L, (double) 0L);\n    double double0 = MathUtils.SAFE_MIN;\n    MathUtils.subAndCheck(0L, 0L);\n    double double1 = MathUtils.indicator(1335.70629);\n    double double2 = MathUtils.EPSILON;\n    short short0 = MathUtils.sign((short) 1);\n    float float0 = MathUtils.round((float) (short) 1, 0, (int) (short) 1);\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = 0.5;\n    doubleArray0[1] = (double) (short) 1;\n    doubleArray0[2] = 2746.4256;\n    MathUtils.hash(doubleArray0);\n    MathUtils.hash(0.0);\n    double double3 = MathUtils.factorialDouble((short) 1);\n    float float1 = MathUtils.round((float) 0L, (int) (short) 1);\n    double double4 = MathUtils.sinh(2746.4256);\n    long long0 = MathUtils.addAndCheck((long) 0, 2855L);\n}",
    "testName" : "test0015"
  },
  "test07396" : {
    "methodSignature" : "public static float sign(final float x)",
    "methodName" : "sign",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07396() throws Throwable {\n    MathUtils.sinh(0.0);\n    MathUtils.round(0.0, 0, 0);\n    MathUtils.sign(0.0F);\n}",
    "testName" : "test07396"
  },
  "test117140" : {
    "methodSignature" : "public static long factorial(final int n)",
    "methodName" : "factorial",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test117140() throws Throwable {\n    MathUtils.log(0.0, 0.0);\n    double double0 = MathUtils.SAFE_MIN;\n    MathUtils.subAndCheck(3463L, (-2147483648L));\n    MathUtils.nextAfter(Double.NaN, 0.15728391532667219);\n    MathUtils.binomialCoefficientLog(356, 356);\n    MathUtils.sign(356);\n    MathUtils.gcd(356, 356);\n    // Undeclared exception!\n    MathUtils.factorial(2147483645);\n}",
    "testName" : "test117140"
  },
  "test0016" : {
    "methodSignature" : "public static int gcd(int u, int v)",
    "methodName" : "gcd",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0016() throws Throwable {\n    MathUtils.addAndCheck(0L, 0L);\n    MathUtils.equals((double) 0L, (double) 0L);\n    double double0 = MathUtils.SAFE_MIN;\n    MathUtils.subAndCheck(0L, 0L);\n    double double1 = MathUtils.indicator(1335.70629);\n    double double2 = MathUtils.EPSILON;\n    short short0 = MathUtils.sign((short) 1);\n    float float0 = MathUtils.round((float) (short) 1, 0, (int) (short) 1);\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = 0.5;\n    doubleArray0[1] = (double) (short) 1;\n    doubleArray0[2] = 2746.4256;\n    MathUtils.hash(doubleArray0);\n    MathUtils.hash(0.0);\n    double double3 = MathUtils.factorialDouble((short) 1);\n    float float1 = MathUtils.round((float) 0L, (int) (short) 1);\n    double double4 = MathUtils.sinh(2746.4256);\n    long long0 = MathUtils.addAndCheck((long) 0, 2855L);\n    int int0 = MathUtils.gcd(0, 945);\n}",
    "testName" : "test0016"
  },
  "test0011" : {
    "methodSignature" : "public static short sign(final short x)",
    "methodName" : "sign",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    MathUtils.addAndCheck(0L, 0L);\n    MathUtils.equals((double) 0L, (double) 0L);\n    double double0 = MathUtils.SAFE_MIN;\n    MathUtils.subAndCheck(0L, 0L);\n    double double1 = MathUtils.indicator(1335.70629);\n    double double2 = MathUtils.EPSILON;\n    short short0 = MathUtils.sign((short) 1);\n}",
    "testName" : "test0011"
  },
  "test0012" : {
    "methodSignature" : "public static double factorialDouble(final int n)",
    "methodName" : "factorialDouble",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0012() throws Throwable {\n    MathUtils.addAndCheck(0L, 0L);\n    MathUtils.equals((double) 0L, (double) 0L);\n    double double0 = MathUtils.SAFE_MIN;\n    MathUtils.subAndCheck(0L, 0L);\n    double double1 = MathUtils.indicator(1335.70629);\n    double double2 = MathUtils.EPSILON;\n    short short0 = MathUtils.sign((short) 1);\n    float float0 = MathUtils.round((float) (short) 1, 0, (int) (short) 1);\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = 0.5;\n    doubleArray0[1] = (double) (short) 1;\n    doubleArray0[2] = 2746.4256;\n    MathUtils.hash(doubleArray0);\n    MathUtils.hash(0.0);\n    double double3 = MathUtils.factorialDouble((short) 1);\n}",
    "testName" : "test0012"
  },
  "test06588" : {
    "methodSignature" : "public static int hash(double[] value)",
    "methodName" : "hash",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06588() throws Throwable {\n    MathUtils.sign(0.0F);\n    MathUtils.indicator((short) (-206));\n    MathUtils.nextAfter((short) (-1), 0.0);\n    MathUtils.hash((double) 0.0F);\n    MathUtils.binomialCoefficientLog(0, (short) (-206));\n    MathUtils.nextAfter(1.0, 2601.66);\n    MathUtils.sinh(0);\n    MathUtils.factorialDouble(0);\n    MathUtils.sign((int) (short) (-206));\n    MathUtils.factorialLog(4061);\n    MathUtils.sign((float) (-1));\n    double[] doubleArray0 = new double[9];\n    doubleArray0[0] = 2601.66;\n    doubleArray0[1] = 1.0000000000000002;\n    doubleArray0[2] = 29687.671918251523;\n    doubleArray0[3] = (double) (short) (-206);\n    doubleArray0[4] = 0.0;\n    doubleArray0[5] = (double) (short) (-1);\n    doubleArray0[6] = (double) 0.0F;\n    doubleArray0[7] = (double) 0.0F;\n    doubleArray0[8] = 29687.671918251523;\n    MathUtils.hash(doubleArray0);\n}",
    "testName" : "test06588"
  },
  "test083106" : {
    "methodSignature" : "public static long sign(final long x)",
    "methodName" : "sign",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test083106() throws Throwable {\n    MathUtils.addAndCheck(52, (-1));\n    MathUtils.binomialCoefficientLog(52, 51);\n    MathUtils.sign(38L);\n}",
    "testName" : "test083106"
  },
  "test104127" : {
    "methodSignature" : "public static double cosh(double x)",
    "methodName" : "cosh",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104127() throws Throwable {\n    MathUtils.normalizeAngle(0.0, 0.0);\n    MathUtils.normalizeAngle(1.0, 0.0);\n    MathUtils.indicator(0L);\n    MathUtils.indicator(0);\n    MathUtils.lcm(4954, 0);\n    MathUtils.binomialCoefficientDouble(4954, 578);\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = (double) 1;\n    doubleArray0[1] = (double) 4954;\n    doubleArray0[2] = (double) 1;\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.indicator((-44));\n    MathUtils.equals(doubleArray0, (double[]) null);\n    MathUtils.mulAndCheck(1, 0);\n    MathUtils.log(4954.0, 1752.95617);\n    MathUtils.gcd((-1), 2585);\n    MathUtils.addAndCheck(0, (-1349));\n    MathUtils.cosh(2585);\n}",
    "testName" : "test104127"
  },
  "test088111" : {
    "methodSignature" : "public static int indicator(final int x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088111() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = 3946.2302;\n    doubleArray0[1] = Double.NaN;\n    doubleArray0[2] = (-1720.5420547137624);\n    doubleArray0[3] = (-4.9E-324);\n    doubleArray0[4] = 2403.7689728;\n    doubleArray0[5] = (-4.9E-324);\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.addAndCheck(828, 828);\n    MathUtils.sign((short) 0);\n    MathUtils.sign((short) 0);\n    MathUtils.indicator((short) 0);\n    MathUtils.subAndCheck((long) (short) 0, 9218868437227405312L);\n    MathUtils.indicator(11);\n}",
    "testName" : "test088111"
  },
  "test03356" : {
    "methodSignature" : "public static double log(double base, double x)",
    "methodName" : "log",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03356() throws Throwable {\n    MathUtils.sign((-759.6439791));\n    MathUtils.log(0.0, (-583.3606628057408));\n}",
    "testName" : "test03356"
  },
  "test0017" : {
    "methodSignature" : "public static float indicator(final float x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0017() throws Throwable {\n    MathUtils.addAndCheck(0L, 0L);\n    MathUtils.equals((double) 0L, (double) 0L);\n    double double0 = MathUtils.SAFE_MIN;\n    MathUtils.subAndCheck(0L, 0L);\n    double double1 = MathUtils.indicator(1335.70629);\n    double double2 = MathUtils.EPSILON;\n    short short0 = MathUtils.sign((short) 1);\n    float float0 = MathUtils.round((float) (short) 1, 0, (int) (short) 1);\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = 0.5;\n    doubleArray0[1] = (double) (short) 1;\n    doubleArray0[2] = 2746.4256;\n    MathUtils.hash(doubleArray0);\n    MathUtils.hash(0.0);\n    double double3 = MathUtils.factorialDouble((short) 1);\n    float float1 = MathUtils.round((float) 0L, (int) (short) 1);\n    double double4 = MathUtils.sinh(2746.4256);\n    long long0 = MathUtils.addAndCheck((long) 0, 2855L);\n    int int0 = MathUtils.gcd(0, 945);\n    float float2 = MathUtils.indicator(0.0F);\n}",
    "testName" : "test0017"
  },
  "test0018" : {
    "methodSignature" : "public static boolean equals(double[] x, double[] y)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0018() throws Throwable {\n    MathUtils.addAndCheck(0L, 0L);\n    MathUtils.equals((double) 0L, (double) 0L);\n    double double0 = MathUtils.SAFE_MIN;\n    MathUtils.subAndCheck(0L, 0L);\n    double double1 = MathUtils.indicator(1335.70629);\n    double double2 = MathUtils.EPSILON;\n    short short0 = MathUtils.sign((short) 1);\n    float float0 = MathUtils.round((float) (short) 1, 0, (int) (short) 1);\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = 0.5;\n    doubleArray0[1] = (double) (short) 1;\n    doubleArray0[2] = 2746.4256;\n    MathUtils.hash(doubleArray0);\n    MathUtils.hash(0.0);\n    double double3 = MathUtils.factorialDouble((short) 1);\n    float float1 = MathUtils.round((float) 0L, (int) (short) 1);\n    double double4 = MathUtils.sinh(2746.4256);\n    long long0 = MathUtils.addAndCheck((long) 0, 2855L);\n    int int0 = MathUtils.gcd(0, 945);\n    float float2 = MathUtils.indicator(0.0F);\n    boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);\n}",
    "testName" : "test0018"
  },
  "test04164" : {
    "methodSignature" : "public static boolean equals(double[] x, double[] y)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04164() throws Throwable {\n    MathUtils.binomialCoefficientLog(0, 0);\n    MathUtils.scalb(0, (-1));\n    MathUtils.equals((double[]) null, (double[]) null);\n}",
    "testName" : "test04164"
  },
  "test0019" : {
    "methodSignature" : "public static float sign(final float x)",
    "methodName" : "sign",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0019() throws Throwable {\n    MathUtils.addAndCheck(0L, 0L);\n    MathUtils.equals((double) 0L, (double) 0L);\n    double double0 = MathUtils.SAFE_MIN;\n    MathUtils.subAndCheck(0L, 0L);\n    double double1 = MathUtils.indicator(1335.70629);\n    double double2 = MathUtils.EPSILON;\n    short short0 = MathUtils.sign((short) 1);\n    float float0 = MathUtils.round((float) (short) 1, 0, (int) (short) 1);\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = 0.5;\n    doubleArray0[1] = (double) (short) 1;\n    doubleArray0[2] = 2746.4256;\n    MathUtils.hash(doubleArray0);\n    MathUtils.hash(0.0);\n    double double3 = MathUtils.factorialDouble((short) 1);\n    float float1 = MathUtils.round((float) 0L, (int) (short) 1);\n    double double4 = MathUtils.sinh(2746.4256);\n    long long0 = MathUtils.addAndCheck((long) 0, 2855L);\n    int int0 = MathUtils.gcd(0, 945);\n    float float2 = MathUtils.indicator(0.0F);\n    boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.hash(0.0);\n    float float3 = MathUtils.sign(0.0F);\n}",
    "testName" : "test0019"
  },
  "test02144" : {
    "methodSignature" : "public static double binomialCoefficientDouble(final int n, final int k)",
    "methodName" : "binomialCoefficientDouble",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02144() throws Throwable {\n    MathUtils.binomialCoefficientDouble((-330), (-1));\n}",
    "testName" : "test02144"
  },
  "test05376" : {
    "methodSignature" : "public static double factorialDouble(final int n)",
    "methodName" : "factorialDouble",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05376() throws Throwable {\n    MathUtils.sign((short) 0);\n    int int0 = 712;\n    MathUtils.factorialDouble(712);\n    MathUtils.round(Double.POSITIVE_INFINITY, (int) (short) 0, (-1634));\n    MathUtils.indicator((byte) (-127));\n    MathUtils.mulAndCheck(0, (int) (short) 0);\n    MathUtils.sign((-1025.8123F));\n    MathUtils.factorialDouble((byte) (-1));\n}",
    "testName" : "test05376"
  },
  "test01841" : {
    "methodSignature" : "public static double cosh(double x)",
    "methodName" : "cosh",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01841() throws Throwable {\n    MathUtils.gcd(0, (-1));\n    MathUtils.factorial(1);\n    MathUtils.cosh(0);\n}",
    "testName" : "test01841"
  },
  "test109132" : {
    "methodSignature" : "public static double binomialCoefficientDouble(final int n, final int k)",
    "methodName" : "binomialCoefficientDouble",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109132() throws Throwable {\n    MathUtils.sign((-816.297189));\n    MathUtils.mulAndCheck((-3840L), (-377L));\n    double[] doubleArray0 = new double[5];\n    doubleArray0[1] = (double) (-377L);\n    doubleArray0[2] = (-1.0);\n    doubleArray0[3] = (-1.0);\n    doubleArray0[4] = (-1.0);\n    MathUtils.hash(doubleArray0);\n    MathUtils.sign((float) 490948767);\n    MathUtils.subAndCheck((-377L), (-377L));\n    MathUtils.gcd(490948767, 490948767);\n    MathUtils.sign(490948767);\n    MathUtils.round((float) (-3840L), 490948767, 1);\n    // Undeclared exception!\n    MathUtils.binomialCoefficientDouble(490948767, (-2183));\n}",
    "testName" : "test109132"
  },
  "test077100" : {
    "methodSignature" : "public static int hash(double[] value)",
    "methodName" : "hash",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077100() throws Throwable {\n    double[] doubleArray0 = new double[7];\n    doubleArray0[0] = (-2876.801556);\n    doubleArray0[1] = 3.141592653589793;\n    doubleArray0[2] = (-3070.78921);\n    doubleArray0[3] = 0.0;\n    doubleArray0[4] = (-2453.60306502094);\n    doubleArray0[5] = (-2290.1434776);\n    doubleArray0[6] = 1108.064798174;\n    MathUtils.hash(doubleArray0);\n}",
    "testName" : "test077100"
  },
  "test112135" : {
    "methodSignature" : "public static short indicator(final short x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112135() throws Throwable {\n    MathUtils.sign((-816.297189));\n    double[] doubleArray0 = new double[5];\n    doubleArray0[1] = (double) (-377L);\n    doubleArray0[2] = (-1.0);\n    doubleArray0[3] = (-1.0);\n    doubleArray0[4] = (-1.0);\n    MathUtils.hash(doubleArray0);\n    MathUtils.sign((float) 490948767);\n    MathUtils.subAndCheck((-377L), 1L);\n    MathUtils.gcd(490948767, 490948767);\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.sign(490948767);\n    MathUtils.equals(1.0, 530.0596236264574);\n    MathUtils.round((float) 490948767, (-1), 7);\n    MathUtils.indicator((short) (-1017));\n}",
    "testName" : "test112135"
  },
  "test091114" : {
    "methodSignature" : "public static int lcm(int a, int b)",
    "methodName" : "lcm",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test091114() throws Throwable {\n    double double0 = (-1853.67);\n    MathUtils.log(1470.7, (-1853.67));\n    MathUtils.sign((short) 0);\n    MathUtils.indicator(1);\n    MathUtils.indicator(Double.NaN);\n    MathUtils.lcm((short) 0, 0);\n}",
    "testName" : "test091114"
  },
  "test118141" : {
    "methodSignature" : "public static float round(float x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118141() throws Throwable {\n    MathUtils.sign((-816.297189));\n    MathUtils.mulAndCheck((-3840L), (-377L));\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = (double) 1447680L;\n    doubleArray0[1] = (double) (-377L);\n    doubleArray0[2] = (-1.0);\n    doubleArray0[3] = (-1.0);\n    doubleArray0[4] = (-1.0);\n    MathUtils.hash((-1.0));\n    MathUtils.sign((float) (-1074790400));\n    MathUtils.subAndCheck((-377L), 1L);\n    MathUtils.gcd((-1074790400), (-1074790400));\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.sign((-2145386496));\n    MathUtils.round((float) (-3840L), (-1074790400), 1);\n}",
    "testName" : "test118141"
  },
  "test082105" : {
    "methodSignature" : "public static double binomialCoefficientDouble(final int n, final int k)",
    "methodName" : "binomialCoefficientDouble",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test082105() throws Throwable {\n    byte byte0 = (byte) 0;\n    MathUtils.indicator((byte) 0);\n    int int0 = 0;\n    MathUtils.subAndCheck(0, (int) (byte) 1);\n    MathUtils.sign((-2087.4907F));\n    int int1 = (-3156);\n    MathUtils.lcm((-3156), (-3156));\n    MathUtils.binomialCoefficientDouble(3156, (byte) 1);\n    MathUtils.binomialCoefficientDouble((-1518), (-3156));\n}",
    "testName" : "test082105"
  },
  "test03861" : {
    "methodSignature" : "public static int lcm(int a, int b)",
    "methodName" : "lcm",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03861() throws Throwable {\n    MathUtils.sign((-3029.091F));\n    MathUtils.nextAfter((-3029.091F), (-1.0F));\n    MathUtils.binomialCoefficientDouble(4, 4);\n    MathUtils.indicator((-1L));\n    MathUtils.lcm(4, 0);\n}",
    "testName" : "test03861"
  },
  "test087110" : {
    "methodSignature" : "public static long factorial(final int n)",
    "methodName" : "factorial",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test087110() throws Throwable {\n    MathUtils.normalizeAngle(1069.1507236483772, (-850.954521));\n    int int0 = 2;\n    MathUtils.addAndCheck(1052, 2);\n    MathUtils.factorial(1054);\n}",
    "testName" : "test087110"
  },
  "test05881" : {
    "methodSignature" : "public static int indicator(final int x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05881() throws Throwable {\n    MathUtils.nextAfter((-1934.03970552), (-1934.03970552));\n    MathUtils.addAndCheck(4503599627370496L, 4503599627370496L);\n    MathUtils.round(0.0F, 2671);\n    MathUtils.subAndCheck(2671, 2671);\n    MathUtils.round(3885.95470837, 4, 0);\n    MathUtils.indicator(994);\n}",
    "testName" : "test05881"
  },
  "test02649" : {
    "methodSignature" : "public static long binomialCoefficient(final int n, final int k)",
    "methodName" : "binomialCoefficient",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02649() throws Throwable {\n    int int0 = (-2255);\n    MathUtils.sign((-2255));\n    MathUtils.indicator(0.0F);\n    MathUtils.binomialCoefficient((-2255), (-1));\n}",
    "testName" : "test02649"
  },
  "test00625" : {
    "methodSignature" : "public static long subAndCheck(long a, long b)",
    "methodName" : "subAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00625() throws Throwable {\n    MathUtils.log((-0.7478510541174533), (-0.7478510541174533));\n    MathUtils.cosh(Double.NaN);\n    long long0 = MathUtils.subAndCheck(3487L, (-2147483648L));\n}",
    "testName" : "test00625"
  },
  "test03457" : {
    "methodSignature" : "public static double binomialCoefficientLog(final int n, final int k)",
    "methodName" : "binomialCoefficientLog",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03457() throws Throwable {\n    int int0 = 0;\n    int int1 = 1800;\n    MathUtils.subAndCheck(0, 1800);\n    byte byte0 = (byte) 0;\n    MathUtils.indicator((byte) 0);\n    int int2 = 0;\n    MathUtils.binomialCoefficientLog((-1800), 0);\n}",
    "testName" : "test03457"
  },
  "test01437" : {
    "methodSignature" : "public static short sign(final short x)",
    "methodName" : "sign",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01437() throws Throwable {\n    MathUtils.indicator((-1474.277532));\n    MathUtils.sign((byte) 4);\n    MathUtils.sign((short) (-241));\n}",
    "testName" : "test01437"
  },
  "test04669" : {
    "methodSignature" : "public static double round(double x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04669() throws Throwable {\n    MathUtils.addAndCheck((-1), 0);\n    int int0 = 0;\n    MathUtils.subAndCheck(0, 819);\n    int int1 = 3677;\n    MathUtils.round((double) (-1), 0, 3677);\n}",
    "testName" : "test04669"
  },
  "test00628" : {
    "methodSignature" : "public static int sign(final int x)",
    "methodName" : "sign",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00628() throws Throwable {\n    MathUtils.log((-0.7478510541174533), (-0.7478510541174533));\n    MathUtils.cosh(Double.NaN);\n    long long0 = MathUtils.subAndCheck(3487L, (-2147483648L));\n    double double0 = MathUtils.nextAfter(Double.NaN, (-10.928587103411145));\n    double double1 = MathUtils.binomialCoefficientLog(356, 356);\n    int int0 = MathUtils.sign(356);\n}",
    "testName" : "test00628"
  },
  "test096119" : {
    "methodSignature" : "public static boolean equals(double[] x, double[] y)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096119() throws Throwable {\n    MathUtils.sinh(52);\n    MathUtils.indicator(934.227F);\n    MathUtils.indicator((byte) 31);\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = (double) 52;\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.sign((byte) 31);\n    MathUtils.sign(4503599627370495L);\n    MathUtils.factorial((byte) 1);\n    MathUtils.sign(462.4014F);\n    MathUtils.indicator((long) (byte) 1);\n    MathUtils.sinh(Double.NEGATIVE_INFINITY);\n    MathUtils.indicator((-1L));\n    double[] doubleArray1 = new double[7];\n    doubleArray1[0] = 1080.976317389;\n    doubleArray1[1] = (double) 4503599627370495L;\n    doubleArray1[2] = (double) 1.0F;\n    doubleArray1[3] = (double) 462.4014F;\n    doubleArray1[5] = (double) 934.227F;\n    doubleArray1[6] = (double) 2147483647L;\n    MathUtils.equals(doubleArray0, doubleArray1);\n}",
    "testName" : "test096119"
  },
  "test00626" : {
    "methodSignature" : "public static double nextAfter(double d, double direction)",
    "methodName" : "nextAfter",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00626() throws Throwable {\n    MathUtils.log((-0.7478510541174533), (-0.7478510541174533));\n    MathUtils.cosh(Double.NaN);\n    long long0 = MathUtils.subAndCheck(3487L, (-2147483648L));\n    double double0 = MathUtils.nextAfter(Double.NaN, (-10.928587103411145));\n}",
    "testName" : "test00626"
  },
  "test00627" : {
    "methodSignature" : "public static double binomialCoefficientLog(final int n, final int k)",
    "methodName" : "binomialCoefficientLog",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00627() throws Throwable {\n    MathUtils.log((-0.7478510541174533), (-0.7478510541174533));\n    MathUtils.cosh(Double.NaN);\n    long long0 = MathUtils.subAndCheck(3487L, (-2147483648L));\n    double double0 = MathUtils.nextAfter(Double.NaN, (-10.928587103411145));\n    double double1 = MathUtils.binomialCoefficientLog(356, 356);\n}",
    "testName" : "test00627"
  },
  "test113136" : {
    "methodSignature" : "public static short indicator(final short x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113136() throws Throwable {\n    MathUtils.log(0.0, 0.0);\n    MathUtils.cosh(Double.NaN);\n    MathUtils.subAndCheck(3438L, (-2147483648L));\n    MathUtils.nextAfter(Double.NaN, 0.0);\n    MathUtils.binomialCoefficientLog(356, 356);\n    MathUtils.sign(356);\n    MathUtils.binomialCoefficient(4360, 1);\n    MathUtils.indicator((short) 834);\n}",
    "testName" : "test113136"
  },
  "test05073" : {
    "methodSignature" : "public static long binomialCoefficient(final int n, final int k)",
    "methodName" : "binomialCoefficient",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05073() throws Throwable {\n    MathUtils.sign(0.0);\n    int int0 = (-1956);\n    MathUtils.gcd((-1956), (-1956));\n    int int1 = 3585;\n    MathUtils.binomialCoefficient(663, 3585);\n}",
    "testName" : "test05073"
  },
  "test06285" : {
    "methodSignature" : "public static double binomialCoefficientLog(final int n, final int k)",
    "methodName" : "binomialCoefficientLog",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06285() throws Throwable {\n    MathUtils.binomialCoefficientLog((-1109), (-1109));\n}",
    "testName" : "test06285"
  },
  "test07093" : {
    "methodSignature" : "public static int hash(double[] value)",
    "methodName" : "hash",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07093() throws Throwable {\n    MathUtils.lcm(0, 1253);\n    MathUtils.sign(31);\n    MathUtils.gcd(1, 22);\n    MathUtils.log(22, 1);\n    double[] doubleArray0 = new double[0];\n    MathUtils.hash(doubleArray0);\n}",
    "testName" : "test07093"
  },
  "test121144" : {
    "methodSignature" : "public static long subAndCheck(long a, long b)",
    "methodName" : "subAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121144() throws Throwable {\n    MathUtils.indicator((-4138L));\n    MathUtils.gcd(31, 31);\n    MathUtils.cosh((-1L));\n    MathUtils.subAndCheck(9223372036854775807L, (-1572L));\n}",
    "testName" : "test121144"
  },
  "test05477" : {
    "methodSignature" : "public static double binomialCoefficientDouble(final int n, final int k)",
    "methodName" : "binomialCoefficientDouble",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05477() throws Throwable {\n    int int0 = 0;\n    MathUtils.mulAndCheck(0, 0);\n    MathUtils.round(0.0F, 0);\n    MathUtils.binomialCoefficientDouble(0, 1);\n}",
    "testName" : "test05477"
  },
  "test085108" : {
    "methodSignature" : "public static float round(float x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test085108() throws Throwable {\n    MathUtils.indicator(544);\n    MathUtils.log(544, 544);\n    MathUtils.indicator(544);\n    MathUtils.normalizeAngle(113.58579447, 1);\n    MathUtils.round(325.309F, 1, 1);\n}",
    "testName" : "test085108"
  },
  "test102125" : {
    "methodSignature" : "public static long binomialCoefficient(final int n, final int k)",
    "methodName" : "binomialCoefficient",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102125() throws Throwable {\n    MathUtils.mulAndCheck((-1), (-1));\n    MathUtils.binomialCoefficientDouble(1, (-2857));\n    MathUtils.indicator((-2857));\n    MathUtils.binomialCoefficient(1, (-1705));\n    MathUtils.binomialCoefficientDouble(0, (-1264));\n    MathUtils.sign(2186.2F);\n    MathUtils.mulAndCheck(31, 31);\n    MathUtils.factorialLog(4362);\n    // Undeclared exception!\n    MathUtils.binomialCoefficient(3182, (-3431));\n}",
    "testName" : "test102125"
  },
  "test06689" : {
    "methodSignature" : "public static long mulAndCheck(long a, long b)",
    "methodName" : "mulAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06689() throws Throwable {\n    MathUtils.sinh(3018.52846);\n    MathUtils.mulAndCheck((-9218868437227405313L), (-2831L));\n}",
    "testName" : "test06689"
  },
  "test02245" : {
    "methodSignature" : "public static int subAndCheck(int x, int y)",
    "methodName" : "subAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02245() throws Throwable {\n    MathUtils.equals(0.0, 0.0);\n    MathUtils.subAndCheck(31, (-1));\n}",
    "testName" : "test02245"
  },
  "test07497" : {
    "methodSignature" : "public static long binomialCoefficient(final int n, final int k)",
    "methodName" : "binomialCoefficient",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07497() throws Throwable {\n    MathUtils.lcm(840, 840);\n    MathUtils.sign(840);\n    MathUtils.sign((short) (-1));\n    byte byte0 = (byte) 0;\n    MathUtils.indicator((byte) 0);\n    MathUtils.sign(0.0F);\n    MathUtils.normalizeAngle(0.0, 1);\n    MathUtils.normalizeAngle(840, 0.0F);\n    MathUtils.subAndCheck((long) 1, 517L);\n    MathUtils.indicator((int) (byte) 0);\n    MathUtils.indicator(517L);\n    MathUtils.subAndCheck(0L, (long) (byte) 1);\n    MathUtils.sign((short) (-1));\n    MathUtils.addAndCheck((int) (short) (-1), 974);\n    MathUtils.indicator((short) (-1));\n    MathUtils.indicator((-1.0F));\n    MathUtils.gcd(973, 516);\n    MathUtils.binomialCoefficient(974, 840);\n}",
    "testName" : "test07497"
  },
  "test03053" : {
    "methodSignature" : "public static long mulAndCheck(long a, long b)",
    "methodName" : "mulAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03053() throws Throwable {\n    MathUtils.indicator((byte) 0);\n    MathUtils.normalizeAngle((byte) 0, (byte) 1);\n    MathUtils.mulAndCheck((-2323L), (long) (byte) 0);\n}",
    "testName" : "test03053"
  },
  "test01033" : {
    "methodSignature" : "public static short sign(final short x)",
    "methodName" : "sign",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01033() throws Throwable {\n    MathUtils.mulAndCheck(31, (-4501));\n    MathUtils.sign(699L);\n    MathUtils.indicator((short) 0);\n    MathUtils.indicator((double) (-139531));\n    MathUtils.sign((long) 31);\n    MathUtils.sign(0.0F);\n    MathUtils.equals((double[]) null, (double[]) null);\n    MathUtils.nextAfter(10.0, 1L);\n    MathUtils.indicator(15L);\n    MathUtils.cosh(699L);\n    MathUtils.sign((-181.1638149));\n    MathUtils.equals(6.283185307179586, 3319.9999999999995);\n    MathUtils.sign((short) 29);\n}",
    "testName" : "test01033"
  },
  "test04265" : {
    "methodSignature" : "public static byte indicator(final byte x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04265() throws Throwable {\n    MathUtils.indicator((-1));\n    MathUtils.sign((-620.0F));\n    MathUtils.indicator((byte) 0);\n}",
    "testName" : "test04265"
  },
  "test00730" : {
    "methodSignature" : "public static int addAndCheck(int x, int y)",
    "methodName" : "addAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00730() throws Throwable {\n    MathUtils.mulAndCheck(0L, 0L);\n    MathUtils.mulAndCheck(0L, 0L);\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = (-110.3522941595321);\n    doubleArray0[1] = (double) 0L;\n    doubleArray0[2] = (double) 0L;\n    doubleArray0[3] = (double) 0L;\n    doubleArray0[4] = (double) 0L;\n    MathUtils.equals(doubleArray0, doubleArray0);\n    double[] doubleArray1 = new double[6];\n    doubleArray1[0] = (-110.3522941595321);\n    doubleArray1[1] = (double) 0L;\n    doubleArray1[2] = (-110.3522941595321);\n    doubleArray1[3] = (double) 0L;\n    doubleArray1[4] = (double) 0L;\n    doubleArray1[5] = (-110.3522941595321);\n    int int0 = MathUtils.hash(doubleArray1);\n    MathUtils.addAndCheck(2068852981, 2068852981);\n}",
    "testName" : "test00730"
  },
  "test03962" : {
    "methodSignature" : "public static double sign(final double x)",
    "methodName" : "sign",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03962() throws Throwable {\n    MathUtils.subAndCheck(4718, 4718);\n    MathUtils.mulAndCheck(4718, 0);\n    MathUtils.subAndCheck(207L, 207L);\n    MathUtils.sign(1.0);\n}",
    "testName" : "test03962"
  },
  "test098121" : {
    "methodSignature" : "public static int mulAndCheck(int x, int y)",
    "methodName" : "mulAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098121() throws Throwable {\n    double[] doubleArray0 = new double[9];\n    doubleArray0[0] = 2937.58149819;\n    doubleArray0[1] = 6.283185307179586;\n    doubleArray0[2] = (-1.0);\n    doubleArray0[3] = (-43.8565267608);\n    doubleArray0[4] = 1.1102230246251565E-16;\n    doubleArray0[5] = (-921.80277);\n    doubleArray0[6] = 1.0;\n    doubleArray0[7] = (-2076.6398838);\n    doubleArray0[8] = 0.0;\n    MathUtils.hash(doubleArray0);\n    MathUtils.indicator(1390893829);\n    MathUtils.hash(doubleArray0);\n    MathUtils.sign(0.0);\n    MathUtils.mulAndCheck(1390893829, (-1));\n    MathUtils.subAndCheck(1390893829, 1);\n    MathUtils.round((float) 1390893829, (-1390893829));\n    MathUtils.mulAndCheck(3223L, (long) 1);\n    MathUtils.mulAndCheck(2022, 1390893829);\n}",
    "testName" : "test098121"
  },
  "test107130" : {
    "methodSignature" : "public static double scalb(final double d, final int scaleFactor)",
    "methodName" : "scalb",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107130() throws Throwable {\n    double double0 = MathUtils.SAFE_MIN;\n    MathUtils.normalizeAngle(0.0, 2.2250738585072014E-308);\n    MathUtils.sinh(0.0);\n    MathUtils.equals(0.0, 0.0);\n    MathUtils.sinh(0.0);\n    MathUtils.round(0.0, 1, 1);\n    MathUtils.round(0.0F, 283);\n    MathUtils.equals((-110.3522941595321), 0.0);\n    MathUtils.addAndCheck((long) 1, 4774L);\n    MathUtils.binomialCoefficient(4, (-4276));\n    MathUtils.nextAfter(0.0F, 1);\n    MathUtils.round(0.0, 188);\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = 2.2250738585072014E-308;\n    doubleArray0[1] = 0.0;\n    doubleArray0[2] = 2874.20586468;\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.factorial(1);\n    MathUtils.binomialCoefficient(0, 0);\n    MathUtils.sign(148);\n    MathUtils.scalb(Double.POSITIVE_INFINITY, 3295);\n}",
    "testName" : "test107130"
  },
  "test110133" : {
    "methodSignature" : "public static int mulAndCheck(int x, int y)",
    "methodName" : "mulAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110133() throws Throwable {\n    MathUtils.sign((-816.297189));\n    MathUtils.mulAndCheck((-3840L), (-377L));\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = (double) 1447680L;\n    doubleArray0[1] = (double) (-377L);\n    doubleArray0[2] = (-1.0);\n    doubleArray0[3] = (-1.0);\n    doubleArray0[4] = (-1.0);\n    MathUtils.hash(doubleArray0);\n    MathUtils.sign((float) 395698079);\n    MathUtils.subAndCheck((-377L), 1447680L);\n    MathUtils.gcd(395698079, 395698079);\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.sign(395698079);\n    MathUtils.round((float) (-3840L), 395698079, 1);\n    MathUtils.nextAfter((-2145.3777), (-377L));\n    int int0 = 5316;\n    MathUtils.indicator(5316);\n    MathUtils.indicator(0.0F);\n    MathUtils.mulAndCheck(395698079, (-639));\n}",
    "testName" : "test110133"
  },
  "test01942" : {
    "methodSignature" : "public static double indicator(final double x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01942() throws Throwable {\n    MathUtils.addAndCheck(53, 0);\n    MathUtils.gcd(0, 0);\n    MathUtils.indicator((double) 0);\n}",
    "testName" : "test01942"
  },
  "test079102" : {
    "methodSignature" : "public static short indicator(final short x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079102() throws Throwable {\n    MathUtils.addAndCheck(0L, (-2067L));\n    MathUtils.lcm(1359, (-1614));\n    MathUtils.addAndCheck((-243), 0);\n    MathUtils.mulAndCheck(731142, 1359);\n    MathUtils.factorialLog(1359);\n    MathUtils.indicator(Float.NaN);\n    MathUtils.scalb((-1.0), (-1614));\n    MathUtils.lcm((-422), 853);\n    MathUtils.gcd(0, 0);\n    MathUtils.indicator((short) 0);\n}",
    "testName" : "test079102"
  },
  "test093116" : {
    "methodSignature" : "public static long subAndCheck(long a, long b)",
    "methodName" : "subAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093116() throws Throwable {\n    long long0 = 9223372036854775807L;\n    MathUtils.subAndCheck((-2147483648L), 9223372036854775807L);\n}",
    "testName" : "test093116"
  },
  "test06790" : {
    "methodSignature" : "public static int gcd(int u, int v)",
    "methodName" : "gcd",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06790() throws Throwable {\n    MathUtils.equals((-2317.8935063303857), (-2317.8935063303857));\n    MathUtils.addAndCheck(31, 31);\n    MathUtils.sign(0.0F);\n    MathUtils.equals((double) 31, 321.5);\n    MathUtils.sign(1445L);\n    MathUtils.indicator(1);\n    MathUtils.factorialDouble(52);\n    MathUtils.equals((double) 1L, 4.9E-324);\n    MathUtils.gcd(2, 1);\n}",
    "testName" : "test06790"
  },
  "test122145" : {
    "methodSignature" : "public static int subAndCheck(int x, int y)",
    "methodName" : "subAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test122145() throws Throwable {\n    int int0 = 7449;\n    MathUtils.subAndCheck(7449, (-2147483645));\n}",
    "testName" : "test122145"
  },
  "test105128" : {
    "methodSignature" : "public static boolean equals(double[] x, double[] y)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105128() throws Throwable {\n    MathUtils.mulAndCheck(0L, 0L);\n    MathUtils.mulAndCheck(0L, 0L);\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = (double) 0L;\n    doubleArray0[2] = (double) 0L;\n    MathUtils.equals(doubleArray0, doubleArray0);\n    double[] doubleArray1 = new double[3];\n    doubleArray1[0] = (double) 0L;\n    doubleArray1[1] = (-252.3568776820009);\n    doubleArray1[2] = (double) 0L;\n    MathUtils.equals(doubleArray1, doubleArray0);\n}",
    "testName" : "test105128"
  },
  "test05982" : {
    "methodSignature" : "public static double factorialLog(final int n)",
    "methodName" : "factorialLog",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05982() throws Throwable {\n    MathUtils.sign(2944);\n    double[] doubleArray0 = new double[0];\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.addAndCheck(2944, 31);\n    MathUtils.factorialLog(786);\n}",
    "testName" : "test05982"
  },
  "test084107" : {
    "methodSignature" : "public static double round(double x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test084107() throws Throwable {\n    MathUtils.sign(4);\n    MathUtils.sign((long) 1);\n    MathUtils.sign((byte) (-29));\n    MathUtils.indicator((byte) 0);\n    MathUtils.sign((long) 4);\n    MathUtils.addAndCheck(0, 1);\n    MathUtils.indicator(1L);\n    MathUtils.log(0.0, 0.0);\n    MathUtils.binomialCoefficientDouble(0, (-1));\n    MathUtils.mulAndCheck((long) 1, (long) 0);\n    MathUtils.normalizeAngle(0.0, 0.0);\n    MathUtils.cosh(1L);\n    MathUtils.mulAndCheck(57L, 0L);\n    MathUtils.nextAfter(0.0, (-4.9E-324));\n    MathUtils.round((-1.0F), (-1), 0);\n    MathUtils.indicator((short) (byte) 0);\n    MathUtils.round((double) (-10.0F), 0, 1282);\n}",
    "testName" : "test084107"
  },
  "test089112" : {
    "methodSignature" : "public static int hash(double value)",
    "methodName" : "hash",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089112() throws Throwable {\n    double[] doubleArray0 = new double[7];\n    doubleArray0[0] = 1.0;\n    doubleArray0[1] = 0.0;\n    doubleArray0[2] = (-2237.0);\n    doubleArray0[3] = (-5515.636800492);\n    doubleArray0[4] = Double.NaN;\n    doubleArray0[5] = (-1.0);\n    doubleArray0[6] = (-2617.34607633);\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.sign((short) 899);\n    MathUtils.indicator((short) 899);\n    MathUtils.hash((-1.0));\n    MathUtils.log(1.0, 0.0);\n    MathUtils.round(784.95306F, (int) (short) 1);\n    MathUtils.indicator(0.0);\n    MathUtils.lcm(0, (short) 899);\n    MathUtils.hash((-354.11686));\n}",
    "testName" : "test089112"
  },
  "test00210" : {
    "methodSignature" : "public static double factorialDouble(final int n)",
    "methodName" : "factorialDouble",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00210() throws Throwable {\n    MathUtils.nextAfter(4.9E-324, 0.0);\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = 0.0;\n    doubleArray0[1] = 4.9E-324;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = 0.0;\n    doubleArray0[4] = 0.0;\n    MathUtils.hash(doubleArray0);\n    MathUtils.indicator((byte) 0);\n    MathUtils.sign(1530.2847F);\n    MathUtils.scalb(0.0, (byte) 0);\n    MathUtils.gcd((byte) 1, (-1));\n    MathUtils.round(0.0, 1083);\n    MathUtils.sign(1814L);\n    MathUtils.addAndCheck(1762, (int) (byte) 0);\n    MathUtils.indicator((float) 1);\n    MathUtils.indicator((long) 1083);\n    MathUtils.sign((byte) (-111));\n    MathUtils.factorialDouble(1083);\n    MathUtils.binomialCoefficientLog(1762, (byte) (-111));\n    MathUtils.hash(doubleArray0);\n    MathUtils.addAndCheck((-4640L), (-4640L));\n    MathUtils.factorialDouble((-1));\n}",
    "testName" : "test00210"
  },
  "test02750" : {
    "methodSignature" : "public static long binomialCoefficient(final int n, final int k)",
    "methodName" : "binomialCoefficient",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02750() throws Throwable {\n    double double0 = (-1505.4677638);\n    MathUtils.nextAfter((-1505.4677638), 0.0);\n    int int0 = (-367);\n    MathUtils.binomialCoefficient((-367), (-367));\n}",
    "testName" : "test02750"
  },
  "test04770" : {
    "methodSignature" : "public static int gcd(int u, int v)",
    "methodName" : "gcd",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04770() throws Throwable {\n    MathUtils.gcd(1, 1);\n}",
    "testName" : "test04770"
  },
  "test02346" : {
    "methodSignature" : "public static double scalb(final double d, final int scaleFactor)",
    "methodName" : "scalb",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02346() throws Throwable {\n    MathUtils.scalb(0.0, 822);\n    MathUtils.scalb(822, 0);\n}",
    "testName" : "test02346"
  },
  "test01538" : {
    "methodSignature" : "public static long factorial(final int n)",
    "methodName" : "factorial",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01538() throws Throwable {\n    double double0 = (-1712.611);\n    MathUtils.cosh((-1712.611));\n    MathUtils.indicator((-1L));\n    MathUtils.indicator((short) (-241));\n    MathUtils.subAndCheck((-1), 31);\n    MathUtils.factorial((-32));\n}",
    "testName" : "test01538"
  },
  "test03558" : {
    "methodSignature" : "public static float round(float x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03558() throws Throwable {\n    MathUtils.subAndCheck(1626L, 0L);\n    int int0 = 0;\n    MathUtils.binomialCoefficient(0, 0);\n    MathUtils.mulAndCheck(1, 0);\n    MathUtils.sinh(1);\n    MathUtils.indicator((float) 1626L);\n    MathUtils.round((double) 0, 1);\n    MathUtils.mulAndCheck((-1L), (long) 0);\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = (double) 0L;\n    doubleArray0[1] = (double) 0L;\n    doubleArray0[2] = (double) 0L;\n    doubleArray0[3] = (double) 1626L;\n    doubleArray0[4] = (double) 1L;\n    doubleArray0[5] = (double) 0L;\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.indicator((short) 451);\n    MathUtils.normalizeAngle(0L, 2.2909552562);\n    MathUtils.mulAndCheck(1639, (-1057));\n    MathUtils.factorial(0);\n    MathUtils.round((float) 0, 2068, (-1));\n}",
    "testName" : "test03558"
  },
  "test078101" : {
    "methodSignature" : "public static int subAndCheck(int x, int y)",
    "methodName" : "subAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078101() throws Throwable {\n    MathUtils.scalb(1.0, 0);\n    MathUtils.binomialCoefficient(1105, 0);\n    MathUtils.sign((-1));\n    MathUtils.equals(1199.58787, (double) 1105);\n    MathUtils.indicator((-1L));\n    MathUtils.sign(3971L);\n    MathUtils.subAndCheck(0, 0);\n}",
    "testName" : "test078101"
  },
  "test111134" : {
    "methodSignature" : "public static int lcm(int a, int b)",
    "methodName" : "lcm",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111134() throws Throwable {\n    MathUtils.nextAfter(4.9E-324, 0.0);\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = 0.0;\n    doubleArray0[1] = 4.9E-324;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = 0.0;\n    doubleArray0[4] = 0.0;\n    MathUtils.hash(doubleArray0);\n    MathUtils.indicator((byte) 0);\n    MathUtils.sign(1530.2847F);\n    MathUtils.scalb(0.0, (byte) 0);\n    MathUtils.gcd((byte) 1, (-1));\n    int int0 = 1083;\n    MathUtils.round(0.0, 1083);\n    MathUtils.sign(1814L);\n    MathUtils.lcm(1083, 28658942);\n}",
    "testName" : "test111134"
  },
  "test090113" : {
    "methodSignature" : "public static float indicator(final float x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090113() throws Throwable {\n    MathUtils.factorialDouble(0);\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = 1.0;\n    doubleArray0[1] = 1186.58;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = 1.0;\n    doubleArray0[4] = (double) 0;\n    doubleArray0[5] = 1.0;\n    MathUtils.equals((double[]) null, doubleArray0);\n    MathUtils.indicator((-455L));\n    MathUtils.cosh(0);\n    MathUtils.indicator((double) 0);\n    MathUtils.gcd(0, 0);\n    MathUtils.binomialCoefficient(2804, 0);\n    MathUtils.subAndCheck(0, 1);\n    MathUtils.nextAfter(1.0, 0.0);\n    MathUtils.factorialDouble(2804);\n    MathUtils.nextAfter(0.0, 1186.58);\n    MathUtils.binomialCoefficientLog(351, (-1));\n    MathUtils.mulAndCheck((-455L), (-1630L));\n    MathUtils.equals((double[]) null, (double[]) null);\n    MathUtils.log(0.9999999999999999, 1.0);\n    MathUtils.scalb(1186.58, 0);\n    MathUtils.indicator((byte) (-1));\n    MathUtils.hash(0.0);\n    MathUtils.indicator((float) (-1630L));\n}",
    "testName" : "test090113"
  },
  "test00729" : {
    "methodSignature" : "public static int hash(double[] value)",
    "methodName" : "hash",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00729() throws Throwable {\n    MathUtils.mulAndCheck(0L, 0L);\n    MathUtils.mulAndCheck(0L, 0L);\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = (-110.3522941595321);\n    doubleArray0[1] = (double) 0L;\n    doubleArray0[2] = (double) 0L;\n    doubleArray0[3] = (double) 0L;\n    doubleArray0[4] = (double) 0L;\n    MathUtils.equals(doubleArray0, doubleArray0);\n    double[] doubleArray1 = new double[6];\n    doubleArray1[0] = (-110.3522941595321);\n    doubleArray1[1] = (double) 0L;\n    doubleArray1[2] = (-110.3522941595321);\n    doubleArray1[3] = (double) 0L;\n    doubleArray1[4] = (double) 0L;\n    doubleArray1[5] = (-110.3522941595321);\n    int int0 = MathUtils.hash(doubleArray1);\n}",
    "testName" : "test00729"
  },
  "test05174" : {
    "methodSignature" : "public static long binomialCoefficient(final int n, final int k)",
    "methodName" : "binomialCoefficient",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05174() throws Throwable {\n    MathUtils.binomialCoefficientDouble(2421, (-3779));\n    MathUtils.sign(Double.NaN);\n    MathUtils.indicator((byte) (-36));\n    MathUtils.normalizeAngle(Double.NaN, (byte) (-36));\n    MathUtils.mulAndCheck(2421, 0);\n    int int0 = 31;\n    MathUtils.binomialCoefficient(1851, 31);\n}",
    "testName" : "test05174"
  },
  "test07194" : {
    "methodSignature" : "public static long mulAndCheck(long a, long b)",
    "methodName" : "mulAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07194() throws Throwable {\n    MathUtils.mulAndCheck(0, (-4501));\n    MathUtils.sign(678L);\n    MathUtils.indicator((short) 0);\n    MathUtils.indicator((double) 0);\n    MathUtils.sign((long) 0);\n    MathUtils.sign(0.0F);\n    MathUtils.mulAndCheck((-104L), 9223372036854774099L);\n}",
    "testName" : "test07194"
  },
  "test04366" : {
    "methodSignature" : "public static int hash(double value)",
    "methodName" : "hash",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04366() throws Throwable {\n    MathUtils.hash(1276.5594546284);\n}",
    "testName" : "test04366"
  },
  "test05578" : {
    "methodSignature" : "public static double sinh(double x)",
    "methodName" : "sinh",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05578() throws Throwable {\n    MathUtils.factorialDouble(941);\n    MathUtils.indicator(1.0);\n    MathUtils.sign(2976L);\n    MathUtils.sinh(1.0);\n}",
    "testName" : "test05578"
  },
  "test100123" : {
    "methodSignature" : "public static long mulAndCheck(long a, long b)",
    "methodName" : "mulAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100123() throws Throwable {\n    int int0 = 779;\n    MathUtils.factorialLog(779);\n    MathUtils.sign(4411.838655764204);\n    MathUtils.lcm(779, 1286);\n    MathUtils.mulAndCheck(4503599627370496L, (long) 1001794);\n}",
    "testName" : "test100123"
  },
  "test01134" : {
    "methodSignature" : "public static long subAndCheck(long a, long b)",
    "methodName" : "subAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01134() throws Throwable {\n    MathUtils.equals(379.65915000474, 0.0);\n    MathUtils.binomialCoefficient(52, 0);\n    MathUtils.mulAndCheck((long) 52, (long) 52);\n    MathUtils.indicator((long) 52);\n    MathUtils.sign(2704L);\n    MathUtils.binomialCoefficientLog(1535, 31);\n    MathUtils.addAndCheck(0L, (long) 0);\n    MathUtils.sign((short) 1143);\n    MathUtils.sign(52);\n    MathUtils.binomialCoefficientLog((short) 1143, (-1386));\n    MathUtils.indicator(1);\n    MathUtils.nextAfter(0L, (-1386));\n    MathUtils.factorialLog(1535);\n    MathUtils.cosh((-1.0));\n    MathUtils.lcm(0, (-1477));\n    MathUtils.gcd((-1386), 2737);\n    MathUtils.subAndCheck((long) (short) 1143, 1509L);\n}",
    "testName" : "test01134"
  },
  "test06386" : {
    "methodSignature" : "public static double round(double x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06386() throws Throwable {\n    MathUtils.cosh(0.0);\n    MathUtils.factorial(1);\n    MathUtils.round((double) 1L, 1);\n    MathUtils.addAndCheck((long) 1, 1L);\n    double double0 = Double.POSITIVE_INFINITY;\n    MathUtils.nextAfter(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);\n    MathUtils.nextAfter(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);\n    MathUtils.indicator((byte) 37);\n    MathUtils.indicator((byte) 1);\n    MathUtils.round(0.0, (int) (byte) 1, (int) (byte) 37);\n}",
    "testName" : "test06386"
  },
  "test07598" : {
    "methodSignature" : "public static double factorialDouble(final int n)",
    "methodName" : "factorialDouble",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07598() throws Throwable {\n    MathUtils.mulAndCheck((-2144), 0);\n    MathUtils.addAndCheck(0, 0);\n    MathUtils.factorialDouble(0);\n}",
    "testName" : "test07598"
  },
  "test03154" : {
    "methodSignature" : "public static float round(float x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03154() throws Throwable {\n    long long0 = 0L;\n    MathUtils.addAndCheck(0L, 0L);\n    int int0 = 0;\n    MathUtils.round((float) 0L, 0, 3511);\n}",
    "testName" : "test03154"
  },
  "test00311" : {
    "methodSignature" : "public static long binomialCoefficient(final int n, final int k)",
    "methodName" : "binomialCoefficient",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00311() throws Throwable {\n    double double0 = MathUtils.SAFE_MIN;\n    MathUtils.normalizeAngle(0.0, 2.2250738585072014E-308);\n    MathUtils.sinh(0.0);\n    MathUtils.equals(0.0, 0.0);\n    MathUtils.sinh(0.0);\n    MathUtils.round(0.0, 1, 1);\n    MathUtils.round(0.0F, 283);\n    MathUtils.equals((-110.3522941595321), 0.0);\n    MathUtils.addAndCheck((long) 1, 4774L);\n    MathUtils.binomialCoefficient(4, (-4276));\n    MathUtils.nextAfter(0.0F, 1);\n    MathUtils.round(0.0, 188);\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = 2.2250738585072014E-308;\n    doubleArray0[1] = 0.0;\n    doubleArray0[2] = 2874.20586468;\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.factorial(1);\n    MathUtils.binomialCoefficient(0, 0);\n    MathUtils.binomialCoefficient((-2315), (-1));\n}",
    "testName" : "test00311"
  },
  "test02851" : {
    "methodSignature" : "public static double sinh(double x)",
    "methodName" : "sinh",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02851() throws Throwable {\n    MathUtils.sign(0);\n    MathUtils.round(1.0, 0);\n    MathUtils.binomialCoefficient(0, 0);\n    MathUtils.mulAndCheck(1L, 0L);\n    MathUtils.mulAndCheck((-1175), 0);\n    MathUtils.sinh(0.0);\n}",
    "testName" : "test02851"
  },
  "test00831" : {
    "methodSignature" : "public static int gcd(int u, int v)",
    "methodName" : "gcd",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00831() throws Throwable {\n    MathUtils.equals(379.65915000474, 0.0);\n    MathUtils.binomialCoefficient(52, 0);\n    MathUtils.mulAndCheck((long) 52, (long) 52);\n    MathUtils.indicator((long) 52);\n    MathUtils.sign(2704L);\n    MathUtils.binomialCoefficientLog(1535, 31);\n    MathUtils.addAndCheck(0L, (long) 0);\n    MathUtils.sign((short) 1143);\n    MathUtils.sign(52);\n    MathUtils.binomialCoefficientLog((short) 1143, (-1386));\n    MathUtils.indicator((-872));\n    MathUtils.nextAfter(0L, (-1386));\n    MathUtils.factorialLog(1535);\n    MathUtils.cosh((-1.0));\n    MathUtils.lcm(0, (-1477));\n    MathUtils.gcd((-1386), 2737);\n}",
    "testName" : "test00831"
  },
  "test116139" : {
    "methodSignature" : "public static double binomialCoefficientLog(final int n, final int k)",
    "methodName" : "binomialCoefficientLog",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test116139() throws Throwable {\n    MathUtils.log(0.0, 0.0);\n    MathUtils.cosh(Double.NaN);\n    MathUtils.subAndCheck(3463L, (-2147483648L));\n    MathUtils.nextAfter(Double.NaN, 0.0);\n    MathUtils.binomialCoefficientLog(356, 356);\n    MathUtils.sign(356);\n    MathUtils.sign(2147483648L);\n    MathUtils.binomialCoefficientLog(2803, 1);\n}",
    "testName" : "test116139"
  },
  "test095118" : {
    "methodSignature" : "public static double factorialLog(final int n)",
    "methodName" : "factorialLog",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095118() throws Throwable {\n    int int0 = 0;\n    MathUtils.sinh(0);\n    MathUtils.factorialDouble(0);\n    long long0 = (-9218868437227405313L);\n    // Undeclared exception!\n    MathUtils.factorialLog(2113929216);\n}",
    "testName" : "test095118"
  },
  "test086109" : {
    "methodSignature" : "public static long factorial(final int n)",
    "methodName" : "factorial",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test086109() throws Throwable {\n    MathUtils.sign((-3029.091F));\n    MathUtils.nextAfter((-3029.091F), (-1.0F));\n    MathUtils.binomialCoefficientDouble(4, 4);\n    MathUtils.lcm(4, 0);\n    MathUtils.factorial(373);\n}",
    "testName" : "test086109"
  },
  "test120143" : {
    "methodSignature" : "public static double binomialCoefficientLog(final int n, final int k)",
    "methodName" : "binomialCoefficientLog",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test120143() throws Throwable {\n    MathUtils.nextAfter(4.9E-324, 0.0);\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = 0.0;\n    doubleArray0[1] = 4.9E-324;\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = 0.0;\n    doubleArray0[4] = 0.0;\n    MathUtils.hash(doubleArray0);\n    MathUtils.indicator((byte) 0);\n    MathUtils.sign(1530.2847F);\n    MathUtils.scalb(0.0, (byte) 0);\n    MathUtils.gcd((byte) 1, (-1));\n    MathUtils.round(0.0, 1083);\n    MathUtils.sign(1814L);\n    MathUtils.indicator((float) 1);\n    MathUtils.indicator((long) 1083);\n    MathUtils.sign((byte) (-111));\n    MathUtils.factorialDouble(1083);\n    // Undeclared exception!\n    MathUtils.binomialCoefficientLog(28658942, (byte) (-111));\n}",
    "testName" : "test120143"
  },
  "test04871" : {
    "methodSignature" : "public static long factorial(final int n)",
    "methodName" : "factorial",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04871() throws Throwable {\n    MathUtils.lcm((-479), (-1));\n    MathUtils.factorial((-1));\n}",
    "testName" : "test04871"
  },
  "test103126" : {
    "methodSignature" : "public static double binomialCoefficientDouble(final int n, final int k)",
    "methodName" : "binomialCoefficientDouble",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103126() throws Throwable {\n    MathUtils.cosh(6.283185307179586);\n    MathUtils.indicator((short) (-1));\n    MathUtils.indicator((short) (-1));\n    int int0 = 2;\n    MathUtils.binomialCoefficientLog(2, 2);\n    int int1 = 2;\n    MathUtils.round((-3167.637F), 2, 2);\n    int int2 = 4240;\n    MathUtils.factorialDouble(4240);\n    MathUtils.binomialCoefficientDouble(0, 118);\n}",
    "testName" : "test103126"
  },
  "test06891" : {
    "methodSignature" : "public static double round(double x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06891() throws Throwable {\n    MathUtils.hash(0.0);\n    MathUtils.sinh(0.0);\n    MathUtils.round((-1.0), 0, 0);\n    MathUtils.addAndCheck((long) 0, 1999L);\n    MathUtils.round(1748.0F, 1119);\n    MathUtils.factorialDouble(1801);\n    MathUtils.round((-1.0), 1, 0);\n}",
    "testName" : "test06891"
  },
  "test00422" : {
    "methodSignature" : "public static long sign(final long x)",
    "methodName" : "sign",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00422() throws Throwable {\n    double double0 = MathUtils.binomialCoefficientLog(1, 1);\n    long long0 = MathUtils.subAndCheck(4312L, 4312L);\n    int int0 = MathUtils.gcd(0, 3320);\n    double double1 = MathUtils.nextAfter(3320, 0.0);\n    double double2 = MathUtils.indicator((double) 4312L);\n    MathUtils.scalb(0.0, 0);\n    MathUtils.mulAndCheck(0L, 4312L);\n    MathUtils.hash(571.8459247721023);\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = 0.0;\n    doubleArray0[1] = (double) 3320;\n    doubleArray0[2] = (double) 0L;\n    doubleArray0[3] = 3319.9999999999995;\n    doubleArray0[4] = (double) 4312L;\n    boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.equals((double) 884287158, 0.0);\n    float float0 = MathUtils.sign((float) 0L);\n    byte byte0 = MathUtils.indicator((byte) 0);\n    int int1 = MathUtils.hash((-1.0));\n    MathUtils.sign((byte) 1);\n    double double3 = MathUtils.sinh(0.5);\n    long long1 = MathUtils.sign((long) (-1074790400));\n}",
    "testName" : "test00422"
  },
  "test02447" : {
    "methodSignature" : "public static double normalizeAngle(double a, double center)",
    "methodName" : "normalizeAngle",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02447() throws Throwable {\n    MathUtils.lcm(3517, 0);\n    MathUtils.round((float) 0, 0, 0);\n    MathUtils.normalizeAngle(1.0F, 1637.4906461181);\n}",
    "testName" : "test02447"
  },
  "test00423" : {
    "methodSignature" : "public static long indicator(final long x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00423() throws Throwable {\n    double double0 = MathUtils.binomialCoefficientLog(1, 1);\n    long long0 = MathUtils.subAndCheck(4312L, 4312L);\n    int int0 = MathUtils.gcd(0, 3320);\n    double double1 = MathUtils.nextAfter(3320, 0.0);\n    double double2 = MathUtils.indicator((double) 4312L);\n    MathUtils.scalb(0.0, 0);\n    MathUtils.mulAndCheck(0L, 4312L);\n    MathUtils.hash(571.8459247721023);\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = 0.0;\n    doubleArray0[1] = (double) 3320;\n    doubleArray0[2] = (double) 0L;\n    doubleArray0[3] = 3319.9999999999995;\n    doubleArray0[4] = (double) 4312L;\n    boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.equals((double) 884287158, 0.0);\n    float float0 = MathUtils.sign((float) 0L);\n    byte byte0 = MathUtils.indicator((byte) 0);\n    int int1 = MathUtils.hash((-1.0));\n    MathUtils.sign((byte) 1);\n    double double3 = MathUtils.sinh(0.5);\n    long long1 = MathUtils.sign((long) (-1074790400));\n    long long2 = MathUtils.indicator((long) (byte) 0);\n}",
    "testName" : "test00423"
  },
  "test03659" : {
    "methodSignature" : "public static int gcd(int u, int v)",
    "methodName" : "gcd",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03659() throws Throwable {\n    MathUtils.factorialLog(0);\n    MathUtils.round((-850.8327063), 0);\n    MathUtils.indicator((-851.0));\n    MathUtils.log((-850.8327063), 829.6205);\n    MathUtils.gcd(0, (-2127031421));\n}",
    "testName" : "test03659"
  },
  "test00420" : {
    "methodSignature" : "public static int hash(double value)",
    "methodName" : "hash",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00420() throws Throwable {\n    double double0 = MathUtils.binomialCoefficientLog(1, 1);\n    long long0 = MathUtils.subAndCheck(4312L, 4312L);\n    int int0 = MathUtils.gcd(0, 3320);\n    double double1 = MathUtils.nextAfter(3320, 0.0);\n    double double2 = MathUtils.indicator((double) 4312L);\n    MathUtils.scalb(0.0, 0);\n    MathUtils.mulAndCheck(0L, 4312L);\n    MathUtils.hash(571.8459247721023);\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = 0.0;\n    doubleArray0[1] = (double) 3320;\n    doubleArray0[2] = (double) 0L;\n    doubleArray0[3] = 3319.9999999999995;\n    doubleArray0[4] = (double) 4312L;\n    boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.equals((double) 884287158, 0.0);\n    float float0 = MathUtils.sign((float) 0L);\n    byte byte0 = MathUtils.indicator((byte) 0);\n    int int1 = MathUtils.hash((-1.0));\n}",
    "testName" : "test00420"
  },
  "test01235" : {
    "methodSignature" : "public static int subAndCheck(int x, int y)",
    "methodName" : "subAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01235() throws Throwable {\n    MathUtils.factorial(0);\n    MathUtils.sign(0);\n    MathUtils.round((float) 1L, 0);\n    MathUtils.indicator((byte) (-121));\n    MathUtils.sign((int) (byte) (-1));\n    MathUtils.sinh(1L);\n    MathUtils.mulAndCheck((-1L), (long) (byte) (-121));\n    MathUtils.binomialCoefficient(0, (-1));\n    MathUtils.indicator((byte) (-1));\n    MathUtils.round((-180.6522257959), (int) (byte) (-1));\n    MathUtils.subAndCheck((long) (byte) (-1), 0L);\n    MathUtils.factorial(0);\n    MathUtils.cosh(1.1752011936438016);\n    MathUtils.mulAndCheck((-1330), (-1));\n    MathUtils.indicator(21.6F);\n    MathUtils.subAndCheck(1508, (-1));\n}",
    "testName" : "test01235"
  },
  "test00421" : {
    "methodSignature" : "public static double sinh(double x)",
    "methodName" : "sinh",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00421() throws Throwable {\n    double double0 = MathUtils.binomialCoefficientLog(1, 1);\n    long long0 = MathUtils.subAndCheck(4312L, 4312L);\n    int int0 = MathUtils.gcd(0, 3320);\n    double double1 = MathUtils.nextAfter(3320, 0.0);\n    double double2 = MathUtils.indicator((double) 4312L);\n    MathUtils.scalb(0.0, 0);\n    MathUtils.mulAndCheck(0L, 4312L);\n    MathUtils.hash(571.8459247721023);\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = 0.0;\n    doubleArray0[1] = (double) 3320;\n    doubleArray0[2] = (double) 0L;\n    doubleArray0[3] = 3319.9999999999995;\n    doubleArray0[4] = (double) 4312L;\n    boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.equals((double) 884287158, 0.0);\n    float float0 = MathUtils.sign((float) 0L);\n    byte byte0 = MathUtils.indicator((byte) 0);\n    int int1 = MathUtils.hash((-1.0));\n    MathUtils.sign((byte) 1);\n    double double3 = MathUtils.sinh(0.5);\n}",
    "testName" : "test00421"
  },
  "test05679" : {
    "methodSignature" : "public static double log(double base, double x)",
    "methodName" : "log",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05679() throws Throwable {\n    MathUtils.mulAndCheck((-2696L), (-2696L));\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = (double) 7268416L;\n    doubleArray0[1] = (double) (-2696L);\n    doubleArray0[2] = (double) (-2696L);\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.log((-2696.0), (-2696.0));\n}",
    "testName" : "test05679"
  },
  "test097120" : {
    "methodSignature" : "public static double factorialLog(final int n)",
    "methodName" : "factorialLog",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097120() throws Throwable {\n    MathUtils.binomialCoefficient(758, 758);\n    MathUtils.indicator((-3704));\n    MathUtils.nextAfter((-5328384.368904361), (-2618.33587));\n    MathUtils.round((float) 1L, (-3704), 2);\n    byte byte0 = (byte) (-124);\n    MathUtils.sign((byte) (-124));\n    int int0 = (-794);\n    MathUtils.factorialLog((-794));\n}",
    "testName" : "test097120"
  },
  "test108131" : {
    "methodSignature" : "public static long mulAndCheck(long a, long b)",
    "methodName" : "mulAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108131() throws Throwable {\n    MathUtils.binomialCoefficientDouble(0, 0);\n    MathUtils.hash((double) 0);\n    MathUtils.lcm((-3869), 52);\n    MathUtils.sign((double) 201188);\n    MathUtils.sign((byte) 0);\n    MathUtils.gcd(52, 1);\n    MathUtils.sign(52);\n    MathUtils.sign((long) 201188);\n    MathUtils.subAndCheck(0, 6603);\n    MathUtils.mulAndCheck((long) 1, (-2588L));\n    MathUtils.sign((-243.34741F));\n    MathUtils.scalb((-3869), 1);\n    double[] doubleArray0 = new double[4];\n    doubleArray0[0] = (double) 201188;\n    doubleArray0[1] = 1.0;\n    doubleArray0[2] = 1.0;\n    doubleArray0[3] = (double) 0;\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.hash((double) 1);\n    MathUtils.subAndCheck(1892, 31);\n    MathUtils.indicator((byte) 52);\n    MathUtils.mulAndCheck((-9223372036854775808L), 1L);\n}",
    "testName" : "test108131"
  },
  "test01639" : {
    "methodSignature" : "public static double binomialCoefficientDouble(final int n, final int k)",
    "methodName" : "binomialCoefficientDouble",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01639() throws Throwable {\n    MathUtils.nextAfter((-2200.8951), (-2200.8951));\n    MathUtils.cosh((-2200.8951));\n    MathUtils.sign(Float.NaN);\n    MathUtils.sign((-912.0F));\n    int int0 = (-2147234663);\n    MathUtils.binomialCoefficientDouble((-2147234663), (-2147234663));\n}",
    "testName" : "test01639"
  },
  "test092115" : {
    "methodSignature" : "public static long binomialCoefficient(final int n, final int k)",
    "methodName" : "binomialCoefficient",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092115() throws Throwable {\n    MathUtils.log(0.0, 0.0);\n    MathUtils.cosh(Double.NaN);\n    MathUtils.subAndCheck(3438L, (-2147483648L));\n    MathUtils.nextAfter(Double.NaN, 0.0);\n    MathUtils.binomialCoefficientLog(356, 356);\n    MathUtils.sign(356);\n    MathUtils.indicator(2147487086L);\n    MathUtils.scalb(2147487086L, 1);\n    MathUtils.binomialCoefficient(1, (-1));\n}",
    "testName" : "test092115"
  },
  "test07295" : {
    "methodSignature" : "public static int lcm(int a, int b)",
    "methodName" : "lcm",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07295() throws Throwable {\n    MathUtils.mulAndCheck((-2593L), 899L);\n    MathUtils.sign((short) (-615));\n    MathUtils.indicator((-860.92F));\n    int int0 = 0;\n    MathUtils.lcm(0, 0);\n}",
    "testName" : "test07295"
  },
  "test04063" : {
    "methodSignature" : "public static byte indicator(final byte x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04063() throws Throwable {\n    MathUtils.indicator((byte) 1);\n    MathUtils.indicator((-1.0F));\n    MathUtils.sign((short) (byte) 1);\n    MathUtils.sign(0.0F);\n    MathUtils.indicator((byte) 1);\n}",
    "testName" : "test04063"
  },
  "test119142" : {
    "methodSignature" : "public static long subAndCheck(long a, long b)",
    "methodName" : "subAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119142() throws Throwable {\n    MathUtils.log(0.0, 0.0);\n    MathUtils.cosh(Double.NaN);\n    MathUtils.subAndCheck(3463L, (-9223372036854775780L));\n}",
    "testName" : "test119142"
  },
  "test06083" : {
    "methodSignature" : "public static double round(double x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06083() throws Throwable {\n    MathUtils.equals(1083.8, 1083.8);\n    MathUtils.round((-2676.102F), 0, 0);\n    MathUtils.sign((-2677.0F));\n    MathUtils.addAndCheck((-1967L), (-2288L));\n    MathUtils.factorialLog(0);\n    MathUtils.log((-1.0F), (-1266.6));\n    MathUtils.subAndCheck(0, 839);\n    MathUtils.round((-1094.1), 839, 52);\n}",
    "testName" : "test06083"
  },
  "test02043" : {
    "methodSignature" : "public static float round(float x, int scale)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02043() throws Throwable {\n    MathUtils.sinh((-1754.10975657812));\n    MathUtils.round(0.0F, 0);\n}",
    "testName" : "test02043"
  },
  "test03255" : {
    "methodSignature" : "public static double nextAfter(double d, double direction)",
    "methodName" : "nextAfter",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03255() throws Throwable {\n    MathUtils.round((-1617.9F), 0);\n    MathUtils.binomialCoefficientLog(4, 0);\n    MathUtils.nextAfter(0, (-1618.0F));\n}",
    "testName" : "test03255"
  },
  "test04467" : {
    "methodSignature" : "public static long binomialCoefficient(final int n, final int k)",
    "methodName" : "binomialCoefficient",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04467() throws Throwable {\n    short short0 = (short) 2846;\n    MathUtils.sign((short) 2846);\n    int int0 = 0;\n    MathUtils.indicator(0);\n    int int1 = 31;\n    MathUtils.scalb((short) 1, 31);\n    int int2 = (-176);\n    MathUtils.binomialCoefficient((-176), (-1207));\n}",
    "testName" : "test04467"
  },
  "test07699" : {
    "methodSignature" : "public static long factorial(final int n)",
    "methodName" : "factorial",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07699() throws Throwable {\n    MathUtils.nextAfter(0.0, 0.0);\n    MathUtils.hash((-2574.0));\n    MathUtils.indicator(1070.411672413604);\n    MathUtils.factorial((-1062986752));\n}",
    "testName" : "test07699"
  },
  "test081104" : {
    "methodSignature" : "public static double log(double base, double x)",
    "methodName" : "log",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081104() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = (-322.307296);\n    doubleArray0[1] = (-1.0);\n    doubleArray0[2] = 0.0;\n    doubleArray0[3] = 244.86671;\n    doubleArray0[4] = 0.0;\n    doubleArray0[5] = 0.0;\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.binomialCoefficientLog(0, 0);\n    MathUtils.log(244.86671, 0.0);\n}",
    "testName" : "test081104"
  },
  "test05275" : {
    "methodSignature" : "public static double factorialLog(final int n)",
    "methodName" : "factorialLog",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05275() throws Throwable {\n    MathUtils.scalb((-3868.132), 0);\n    MathUtils.binomialCoefficientDouble(0, 0);\n    MathUtils.sign((byte) 95);\n    MathUtils.mulAndCheck(0, 0);\n    MathUtils.factorialLog((-2545));\n}",
    "testName" : "test05275"
  },
  "test06487" : {
    "methodSignature" : "public static long binomialCoefficient(final int n, final int k)",
    "methodName" : "binomialCoefficient",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06487() throws Throwable {\n    MathUtils.round(54.987404F, 1, 1);\n    MathUtils.indicator((short) 0);\n    MathUtils.hash((double) 54.9F);\n    MathUtils.cosh(1);\n    MathUtils.indicator(2147483647L);\n    MathUtils.addAndCheck(1, 1);\n    MathUtils.addAndCheck(3230L, (long) 1);\n    MathUtils.sign((long) 4944691);\n    MathUtils.binomialCoefficient(1, 4944691);\n}",
    "testName" : "test06487"
  },
  "test106129" : {
    "methodSignature" : "public static float indicator(final float x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106129() throws Throwable {\n    MathUtils.log(0.0, 0.0);\n    MathUtils.cosh(Double.NaN);\n    MathUtils.subAndCheck(3438L, (-1676L));\n    MathUtils.nextAfter(Double.NaN, (-0.0177823110247029));\n    MathUtils.binomialCoefficientLog(356, 356);\n    MathUtils.sign(356);\n    MathUtils.subAndCheck(5114L, (long) 1);\n    MathUtils.indicator((-931L));\n    MathUtils.scalb(Double.NEGATIVE_INFINITY, 1);\n    MathUtils.indicator(51.7F);\n}",
    "testName" : "test106129"
  },
  "test00412" : {
    "methodSignature" : "public static double binomialCoefficientLog(final int n, final int k)",
    "methodName" : "binomialCoefficientLog",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00412() throws Throwable {\n    double double0 = MathUtils.binomialCoefficientLog(1, 1);\n}",
    "testName" : "test00412"
  },
  "test02952" : {
    "methodSignature" : "public static short indicator(final short x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02952() throws Throwable {\n    MathUtils.mulAndCheck(0, (-1));\n    MathUtils.indicator((short) (-204));\n}",
    "testName" : "test02952"
  },
  "test01740" : {
    "methodSignature" : "public static double normalizeAngle(double a, double center)",
    "methodName" : "normalizeAngle",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01740() throws Throwable {\n    MathUtils.subAndCheck(0L, 0L);\n    MathUtils.normalizeAngle(1.0, 10.0);\n}",
    "testName" : "test01740"
  },
  "test00415" : {
    "methodSignature" : "public static double nextAfter(double d, double direction)",
    "methodName" : "nextAfter",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00415() throws Throwable {\n    double double0 = MathUtils.binomialCoefficientLog(1, 1);\n    long long0 = MathUtils.subAndCheck(4312L, 4312L);\n    int int0 = MathUtils.gcd(0, 3320);\n    double double1 = MathUtils.nextAfter(3320, 0.0);\n}",
    "testName" : "test00415"
  },
  "test00932" : {
    "methodSignature" : "public static float round(float x, int scale, int roundingMethod)",
    "methodName" : "round",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00932() throws Throwable {\n    MathUtils.sign((-816.297189));\n    MathUtils.mulAndCheck((-3840L), (-377L));\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = (double) 1447680L;\n    doubleArray0[1] = (double) (-377L);\n    doubleArray0[2] = (-1.0);\n    doubleArray0[3] = (-1.0);\n    doubleArray0[4] = (-1.0);\n    MathUtils.hash(doubleArray0);\n    MathUtils.sign((float) 395698079);\n    MathUtils.subAndCheck((-377L), 1L);\n    MathUtils.gcd(395698079, 395698079);\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.sign(395698079);\n    MathUtils.round((float) (-3840L), 395698079, 1);\n}",
    "testName" : "test00932"
  },
  "test00416" : {
    "methodSignature" : "public static double indicator(final double x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00416() throws Throwable {\n    double double0 = MathUtils.binomialCoefficientLog(1, 1);\n    long long0 = MathUtils.subAndCheck(4312L, 4312L);\n    int int0 = MathUtils.gcd(0, 3320);\n    double double1 = MathUtils.nextAfter(3320, 0.0);\n    double double2 = MathUtils.indicator((double) 4312L);\n}",
    "testName" : "test00416"
  },
  "test00413" : {
    "methodSignature" : "public static long subAndCheck(long a, long b)",
    "methodName" : "subAndCheck",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00413() throws Throwable {\n    double double0 = MathUtils.binomialCoefficientLog(1, 1);\n    long long0 = MathUtils.subAndCheck(4312L, 4312L);\n}",
    "testName" : "test00413"
  },
  "test00414" : {
    "methodSignature" : "public static int gcd(int u, int v)",
    "methodName" : "gcd",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00414() throws Throwable {\n    double double0 = MathUtils.binomialCoefficientLog(1, 1);\n    long long0 = MathUtils.subAndCheck(4312L, 4312L);\n    int int0 = MathUtils.gcd(0, 3320);\n}",
    "testName" : "test00414"
  },
  "test00419" : {
    "methodSignature" : "public static byte indicator(final byte x)",
    "methodName" : "indicator",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00419() throws Throwable {\n    double double0 = MathUtils.binomialCoefficientLog(1, 1);\n    long long0 = MathUtils.subAndCheck(4312L, 4312L);\n    int int0 = MathUtils.gcd(0, 3320);\n    double double1 = MathUtils.nextAfter(3320, 0.0);\n    double double2 = MathUtils.indicator((double) 4312L);\n    MathUtils.scalb(0.0, 0);\n    MathUtils.mulAndCheck(0L, 4312L);\n    MathUtils.hash(571.8459247721023);\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = 0.0;\n    doubleArray0[1] = (double) 3320;\n    doubleArray0[2] = (double) 0L;\n    doubleArray0[3] = 3319.9999999999995;\n    doubleArray0[4] = (double) 4312L;\n    boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.equals((double) 884287158, 0.0);\n    float float0 = MathUtils.sign((float) 0L);\n    byte byte0 = MathUtils.indicator((byte) 0);\n}",
    "testName" : "test00419"
  },
  "test00417" : {
    "methodSignature" : "public static boolean equals(double[] x, double[] y)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00417() throws Throwable {\n    double double0 = MathUtils.binomialCoefficientLog(1, 1);\n    long long0 = MathUtils.subAndCheck(4312L, 4312L);\n    int int0 = MathUtils.gcd(0, 3320);\n    double double1 = MathUtils.nextAfter(3320, 0.0);\n    double double2 = MathUtils.indicator((double) 4312L);\n    MathUtils.scalb(0.0, 0);\n    MathUtils.mulAndCheck(0L, 4312L);\n    MathUtils.hash(571.8459247721023);\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = 0.0;\n    doubleArray0[1] = (double) 3320;\n    doubleArray0[2] = (double) 0L;\n    doubleArray0[3] = 3319.9999999999995;\n    doubleArray0[4] = (double) 4312L;\n    boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);\n}",
    "testName" : "test00417"
  },
  "test114137" : {
    "methodSignature" : "public static float sign(final float x)",
    "methodName" : "sign",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test114137() throws Throwable {\n    MathUtils.sign((-816.297189));\n    MathUtils.mulAndCheck((-3840L), (-377L));\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = (double) 1447680L;\n    doubleArray0[1] = (double) (-377L);\n    doubleArray0[2] = (-1.0);\n    doubleArray0[3] = (-1.0);\n    doubleArray0[4] = (-1.0);\n    MathUtils.hash(doubleArray0);\n    MathUtils.sign((float) 395698079);\n    MathUtils.subAndCheck((-377L), (-377L));\n    MathUtils.gcd(395698079, 395698079);\n    MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.sign(395698079);\n    MathUtils.round((float) (-3840L), 395698079, 1);\n    MathUtils.sign(Float.NaN);\n}",
    "testName" : "test114137"
  },
  "test00418" : {
    "methodSignature" : "public static float sign(final float x)",
    "methodName" : "sign",
    "className" : "org.apache.commons.math.util.MathUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00418() throws Throwable {\n    double double0 = MathUtils.binomialCoefficientLog(1, 1);\n    long long0 = MathUtils.subAndCheck(4312L, 4312L);\n    int int0 = MathUtils.gcd(0, 3320);\n    double double1 = MathUtils.nextAfter(3320, 0.0);\n    double double2 = MathUtils.indicator((double) 4312L);\n    MathUtils.scalb(0.0, 0);\n    MathUtils.mulAndCheck(0L, 4312L);\n    MathUtils.hash(571.8459247721023);\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = 0.0;\n    doubleArray0[1] = (double) 3320;\n    doubleArray0[2] = (double) 0L;\n    doubleArray0[3] = 3319.9999999999995;\n    doubleArray0[4] = (double) 4312L;\n    boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);\n    MathUtils.equals((double) 884287158, 0.0);\n    float float0 = MathUtils.sign((float) 0L);\n}",
    "testName" : "test00418"
  }
}