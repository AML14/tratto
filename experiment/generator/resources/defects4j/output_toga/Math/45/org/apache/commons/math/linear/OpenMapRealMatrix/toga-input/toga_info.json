{
  "test1212" : {
    "methodSignature" : "public RealMatrix scalarAdd(final double d)",
    "methodName" : "scalarAdd",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    int int0 = 218;\n    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(218, 218);\n    int int1 = 0;\n    // Undeclared exception!\n    openMapRealMatrix0.scalarAdd(218);\n}",
    "testName" : "test1212"
  },
  "test1313" : {
    "methodSignature" : "public OpenMapRealMatrix(int rowDimension, int columnDimension)",
    "methodName" : "OpenMapRealMatrix",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    OpenMapRealMatrix openMapRealMatrix0 = null;\n    openMapRealMatrix0 = new OpenMapRealMatrix(0, 0);\n}",
    "testName" : "test1313"
  },
  "test1010" : {
    "methodSignature" : "public OpenMapRealMatrix(OpenMapRealMatrix matrix)",
    "methodName" : "OpenMapRealMatrix",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    OpenMapRealMatrix openMapRealMatrix0 = null;\n    OpenMapRealMatrix openMapRealMatrix1 = null;\n    openMapRealMatrix1 = new OpenMapRealMatrix((OpenMapRealMatrix) null);\n}",
    "testName" : "test1010"
  },
  "test1111" : {
    "methodSignature" : "public OpenMapRealMatrix(int rowDimension, int columnDimension)",
    "methodName" : "OpenMapRealMatrix",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    int int0 = (-744);\n    OpenMapRealMatrix openMapRealMatrix0 = null;\n    openMapRealMatrix0 = new OpenMapRealMatrix((-744), (-744));\n}",
    "testName" : "test1111"
  },
  "test011" : {
    "methodSignature" : "public double getEntry(int row, int column)",
    "methodName" : "getEntry",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    int int0 = 212;\n    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(212, 212);\n    OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);\n    openMapRealMatrix0.getEntry((-271), (-271));\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public void multiplyEntry(int row, int column, double factor)",
    "methodName" : "multiplyEntry",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    int int0 = 4525;\n    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(4525, 4525);\n    OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);\n    int int1 = 0;\n    openMapRealMatrix1.multiplyEntry(4525, 0, 4525);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public OpenMapRealMatrix createMatrix(int rowDimension, int columnDimension)",
    "methodName" : "createMatrix",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1359, 5627);\n    OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);\n    openMapRealMatrix1.createMatrix(1359, 156);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public OpenMapRealMatrix subtract(OpenMapRealMatrix m)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(4112, 4112);\n    OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);\n    openMapRealMatrix1.subtract(openMapRealMatrix0);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public OpenMapRealMatrix(int rowDimension, int columnDimension)",
    "methodName" : "OpenMapRealMatrix",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1, 1);\n    openMapRealMatrix0.multiplyEntry(0, 0, 0.0);\n    OpenMapRealMatrix openMapRealMatrix1 = null;\n    openMapRealMatrix1 = new OpenMapRealMatrix(0, 0);\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "public void addToEntry(int row, int column, double increment)",
    "methodName" : "addToEntry",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1037, 1037);\n    openMapRealMatrix0.getTrace();\n    OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);\n    openMapRealMatrix1.getRowDimension();\n    openMapRealMatrix0.subtract((RealMatrix) openMapRealMatrix1);\n    openMapRealMatrix0.copy();\n    openMapRealMatrix0.addToEntry(1037, 1, 0.0);\n}",
    "testName" : "test1616"
  },
  "test1717" : {
    "methodSignature" : "public RealVector operate(final RealVector v)",
    "methodName" : "operate",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    int int0 = 665;\n    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(665, 665);\n    OpenMapRealMatrix openMapRealMatrix1 = openMapRealMatrix0.createMatrix(665, 665);\n    openMapRealMatrix1.operate((RealVector) null);\n}",
    "testName" : "test1717"
  },
  "test1414" : {
    "methodSignature" : "public OpenMapRealMatrix(int rowDimension, int columnDimension)",
    "methodName" : "OpenMapRealMatrix",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    int int0 = (-385);\n    OpenMapRealMatrix openMapRealMatrix0 = null;\n    openMapRealMatrix0 = new OpenMapRealMatrix(0, (-385));\n}",
    "testName" : "test1414"
  },
  "test1515" : {
    "methodSignature" : "public void addToEntry(int row, int column, double increment)",
    "methodName" : "addToEntry",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    int int0 = 1968;\n    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1968, 1968);\n    openMapRealMatrix0.getColumnDimension();\n    OpenMapRealMatrix openMapRealMatrix1 = openMapRealMatrix0.createMatrix(1968, 1968);\n    openMapRealMatrix1.multiply((RealMatrix) openMapRealMatrix0);\n    OpenMapRealMatrix openMapRealMatrix2 = openMapRealMatrix1.add(openMapRealMatrix0);\n    openMapRealMatrix0.getTrace();\n    openMapRealMatrix2.addToEntry(1959, 1968, 1968);\n}",
    "testName" : "test1515"
  },
  "test2020" : {
    "methodSignature" : "public OpenMapRealMatrix add(OpenMapRealMatrix m)",
    "methodName" : "add",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    int int0 = 1270;\n    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1270, 1270);\n    OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(1270, 1270);\n    // Undeclared exception!\n    openMapRealMatrix0.add(openMapRealMatrix1);\n}",
    "testName" : "test2020"
  },
  "test000" : {
    "methodSignature" : "public RealMatrix multiply(final RealMatrix m)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    int int0 = 80;\n    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(80, 80);\n    openMapRealMatrix0.multiply((RealMatrix) null);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public void multiplyEntry(int row, int column, double factor)",
    "methodName" : "multiplyEntry",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    int int0 = 1;\n    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1, 1);\n    DefaultRealMatrixPreservingVisitor defaultRealMatrixPreservingVisitor0 = new DefaultRealMatrixPreservingVisitor();\n    openMapRealMatrix0.walkInColumnOrder((RealMatrixPreservingVisitor) defaultRealMatrixPreservingVisitor0);\n    OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);\n    OpenMapRealMatrix openMapRealMatrix2 = openMapRealMatrix1.multiply(openMapRealMatrix0);\n    openMapRealMatrix2.multiply((RealMatrix) openMapRealMatrix0);\n    openMapRealMatrix1.multiply((RealMatrix) openMapRealMatrix2);\n    openMapRealMatrix2.multiplyEntry(1, 1, 1);\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public void addToEntry(int row, int column, double increment)",
    "methodName" : "addToEntry",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(76, 76);\n    OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);\n    openMapRealMatrix1.addToEntry(206, 76, 0.0);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public void setEntry(int row, int column, double value)",
    "methodName" : "setEntry",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    int int0 = 1479;\n    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1479, 1479);\n    openMapRealMatrix0.copy();\n    openMapRealMatrix0.setEntry(1479, 0, 404.22937);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public void addToEntry(int row, int column, double increment)",
    "methodName" : "addToEntry",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(51, 51);\n    openMapRealMatrix0.addToEntry(0, 0, 3878.83901075);\n}",
    "testName" : "test088"
  },
  "test1818" : {
    "methodSignature" : "public OpenMapRealMatrix(int rowDimension, int columnDimension)",
    "methodName" : "OpenMapRealMatrix",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    int int0 = (-3661);\n    OpenMapRealMatrix openMapRealMatrix0 = null;\n    openMapRealMatrix0 = new OpenMapRealMatrix((-3661), (-3661));\n}",
    "testName" : "test1818"
  },
  "test1919" : {
    "methodSignature" : "public RealMatrix transpose()",
    "methodName" : "transpose",
    "className" : "org.apache.commons.math.linear.OpenMapRealMatrix",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1117, 1117);\n    OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);\n    // Undeclared exception!\n    openMapRealMatrix1.transpose();\n}",
    "testName" : "test1919"
  }
}