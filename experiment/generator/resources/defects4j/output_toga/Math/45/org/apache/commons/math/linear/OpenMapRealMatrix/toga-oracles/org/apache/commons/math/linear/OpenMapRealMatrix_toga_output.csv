project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    int int0 = 80;
    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(80, 80);
    // Undeclared exception!
    try {
        openMapRealMatrix0.multiply((RealMatrix) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.linear.MatrixUtils"", e);
    }
}",1,
project,0,test011,"public void test011() throws Throwable {
    int int0 = 212;
    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(212, 212);
    OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
    // Undeclared exception!
    try {
        openMapRealMatrix0.getEntry((-271), (-271));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // row index (-271)
        //
        verifyException(""org.apache.commons.math.linear.MatrixUtils"", e);
    }
}",1,
project,0,test022,"public void test022() throws Throwable {
    int int0 = 1;
    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1, 1);
    DefaultRealMatrixPreservingVisitor defaultRealMatrixPreservingVisitor0 = new DefaultRealMatrixPreservingVisitor();
    openMapRealMatrix0.walkInColumnOrder((RealMatrixPreservingVisitor) defaultRealMatrixPreservingVisitor0);
    OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
    OpenMapRealMatrix openMapRealMatrix2 = openMapRealMatrix1.multiply(openMapRealMatrix0);
    openMapRealMatrix2.multiply((RealMatrix) openMapRealMatrix0);
    openMapRealMatrix1.multiply((RealMatrix) openMapRealMatrix2);
    // Undeclared exception!
    try {
        openMapRealMatrix2.multiplyEntry(1, 1, 1);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // row index (1)
        //
        verifyException(""org.apache.commons.math.linear.MatrixUtils"", e);
    }
}",1,
project,0,test033,"public void test033() throws Throwable {
    int int0 = 4525;
    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(4525, 4525);
    OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
    int int1 = 0;
    // Undeclared exception!
    try {
        openMapRealMatrix1.multiplyEntry(4525, 0, 4525);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // row index (4,525)
        //
        verifyException(""org.apache.commons.math.linear.MatrixUtils"", e);
    }
}",1,
project,0,test044,"public void test044() throws Throwable {
    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(76, 76);
    OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
    // Undeclared exception!
    try {
        openMapRealMatrix1.addToEntry(206, 76, 0.0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // row index (206)
        //
        verifyException(""org.apache.commons.math.linear.MatrixUtils"", e);
    }
}",1,
project,0,test055,"public void test055() throws Throwable {
    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1359, 5627);
    OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
    openMapRealMatrix1.createMatrix(1359, 156);
}",0,
project,0,test066,"public void test066() throws Throwable {
    int int0 = 1479;
    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1479, 1479);
    openMapRealMatrix0.copy();
    // Undeclared exception!
    try {
        openMapRealMatrix0.setEntry(1479, 0, 404.22937);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // row index (1,479)
        //
        verifyException(""org.apache.commons.math.linear.MatrixUtils"", e);
    }
}",1,
project,0,test077,"public void test077() throws Throwable {
    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(4112, 4112);
    OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
    openMapRealMatrix1.subtract(openMapRealMatrix0);
}",1,
project,0,test088,"public void test088() throws Throwable {
    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(51, 51);
    openMapRealMatrix0.addToEntry(0, 0, 3878.83901075);
}",1,
project,0,test099,"public void test099() throws Throwable {
    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1, 1);
    openMapRealMatrix0.multiplyEntry(0, 0, 0.0);
    OpenMapRealMatrix openMapRealMatrix1 = null;
    try {
        openMapRealMatrix1 = new OpenMapRealMatrix(0, 0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // 0 is smaller than, or equal to, the minimum (0)
        //
        verifyException(""org.apache.commons.math.linear.AbstractRealMatrix"", e);
    }
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    OpenMapRealMatrix openMapRealMatrix0 = null;
    OpenMapRealMatrix openMapRealMatrix1 = null;
    try {
        openMapRealMatrix1 = new OpenMapRealMatrix((OpenMapRealMatrix) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.linear.OpenMapRealMatrix"", e);
    }
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    int int0 = (-744);
    OpenMapRealMatrix openMapRealMatrix0 = null;
    try {
        openMapRealMatrix0 = new OpenMapRealMatrix((-744), (-744));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // -744 is smaller than, or equal to, the minimum (0)
        //
        verifyException(""org.apache.commons.math.linear.AbstractRealMatrix"", e);
    }
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    int int0 = 218;
    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(218, 218);
    int int1 = 0;
    // Undeclared exception!
    openMapRealMatrix0.scalarAdd(218);
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    OpenMapRealMatrix openMapRealMatrix0 = null;
    try {
        openMapRealMatrix0 = new OpenMapRealMatrix(0, 0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // 0 is smaller than, or equal to, the minimum (0)
        //
        verifyException(""org.apache.commons.math.linear.AbstractRealMatrix"", e);
    }
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    int int0 = (-385);
    OpenMapRealMatrix openMapRealMatrix0 = null;
    try {
        openMapRealMatrix0 = new OpenMapRealMatrix(0, (-385));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // 0 is smaller than, or equal to, the minimum (0)
        //
        verifyException(""org.apache.commons.math.linear.AbstractRealMatrix"", e);
    }
}",0,
project,0,test1515,"public void test1515() throws Throwable {
    int int0 = 1968;
    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1968, 1968);
    openMapRealMatrix0.getColumnDimension();
    OpenMapRealMatrix openMapRealMatrix1 = openMapRealMatrix0.createMatrix(1968, 1968);
    openMapRealMatrix1.multiply((RealMatrix) openMapRealMatrix0);
    OpenMapRealMatrix openMapRealMatrix2 = openMapRealMatrix1.add(openMapRealMatrix0);
    openMapRealMatrix0.getTrace();
    // Undeclared exception!
    try {
        openMapRealMatrix2.addToEntry(1959, 1968, 1968);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // column index (1,968)
        //
        verifyException(""org.apache.commons.math.linear.MatrixUtils"", e);
    }
}",1,
project,0,test1616,"public void test1616() throws Throwable {
    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1037, 1037);
    openMapRealMatrix0.getTrace();
    OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
    openMapRealMatrix1.getRowDimension();
    openMapRealMatrix0.subtract((RealMatrix) openMapRealMatrix1);
    openMapRealMatrix0.copy();
    // Undeclared exception!
    try {
        openMapRealMatrix0.addToEntry(1037, 1, 0.0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // row index (1,037)
        //
        verifyException(""org.apache.commons.math.linear.MatrixUtils"", e);
    }
}",1,
project,0,test1717,"public void test1717() throws Throwable {
    int int0 = 665;
    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(665, 665);
    OpenMapRealMatrix openMapRealMatrix1 = openMapRealMatrix0.createMatrix(665, 665);
    // Undeclared exception!
    try {
        openMapRealMatrix1.operate((RealVector) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math.linear.AbstractRealMatrix"", e);
    }
}",0,
project,0,test1818,"public void test1818() throws Throwable {
    int int0 = (-3661);
    OpenMapRealMatrix openMapRealMatrix0 = null;
    try {
        openMapRealMatrix0 = new OpenMapRealMatrix((-3661), (-3661));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // -3,661 is smaller than, or equal to, the minimum (0)
        //
        verifyException(""org.apache.commons.math.linear.AbstractRealMatrix"", e);
    }
}",0,
project,0,test1919,"public void test1919() throws Throwable {
    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1117, 1117);
    OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(openMapRealMatrix0);
    // Undeclared exception!
    openMapRealMatrix1.transpose();
}",0,
project,0,test2020,"public void test2020() throws Throwable {
    int int0 = 1270;
    OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(1270, 1270);
    OpenMapRealMatrix openMapRealMatrix1 = new OpenMapRealMatrix(1270, 1270);
    // Undeclared exception!
    openMapRealMatrix0.add(openMapRealMatrix1);
}",1,
