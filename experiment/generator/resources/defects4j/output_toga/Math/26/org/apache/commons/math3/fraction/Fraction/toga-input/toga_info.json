{
  "test3875" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3875() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = fraction0.MINUS_ONE.add(0);\n    fraction1.getNumerator();\n}",
    "testName" : "test3875"
  },
  "test4686" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4686() throws Throwable {\n    Fraction fraction0 = new Fraction(1025, 1025);\n    fraction0.getNumerator();\n}",
    "testName" : "test4686"
  },
  "test86145" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test86145() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    long long0 = fraction0.longValue();\n    fraction0.floatValue();\n}",
    "testName" : "test86145"
  },
  "test86146" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test86146() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    long long0 = fraction0.longValue();\n}",
    "testName" : "test86146"
  },
  "test4685" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4685() throws Throwable {\n    Fraction fraction0 = new Fraction(1025, 1025);\n    fraction0.percentageValue();\n}",
    "testName" : "test4685"
  },
  "test75131" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test75131() throws Throwable {\n    Fraction fraction0 = new Fraction((-4313.770396564076));\n    Fraction fraction1 = fraction0.ONE_THIRD.multiply((-2283));\n    fraction0.getNumerator();\n}",
    "testName" : "test75131"
  },
  "test81138" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test81138() throws Throwable {\n    Fraction fraction0 = new Fraction((-248.53421868528));\n    double double0 = fraction0.percentageValue();\n}",
    "testName" : "test81138"
  },
  "test75130" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test75130() throws Throwable {\n    Fraction fraction0 = new Fraction((-4313.770396564076));\n    Fraction fraction1 = fraction0.ONE_THIRD.multiply((-2283));\n    fraction1.getDenominator();\n}",
    "testName" : "test75130"
  },
  "test2548" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2548() throws Throwable {\n    Fraction fraction0 = Fraction.TWO;\n    Fraction fraction1 = fraction0.ZERO.abs();\n    float float0 = fraction1.floatValue();\n    fraction0.floatValue();\n}",
    "testName" : "test2548"
  },
  "test0920" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0920() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.ZERO.divide(fraction0);\n    double double0 = fraction1.percentageValue();\n    fraction0.percentageValue();\n}",
    "testName" : "test0920"
  },
  "test2547" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2547() throws Throwable {\n    Fraction fraction0 = Fraction.TWO;\n    Fraction fraction1 = fraction0.ZERO.abs();\n    float float0 = fraction1.floatValue();\n}",
    "testName" : "test2547"
  },
  "test1735" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1735() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    Fraction fraction1 = Fraction.TWO;\n    Fraction fraction2 = fraction0.TWO_THIRDS.multiply(fraction1);\n    long long0 = fraction2.longValue();\n    fraction2.floatValue();\n}",
    "testName" : "test1735"
  },
  "test1736" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1736() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    Fraction fraction1 = Fraction.TWO;\n    Fraction fraction2 = fraction0.TWO_THIRDS.multiply(fraction1);\n    long long0 = fraction2.longValue();\n}",
    "testName" : "test1736"
  },
  "test81139" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test81139() throws Throwable {\n    Fraction fraction0 = new Fraction((-248.53421868528));\n    double double0 = fraction0.percentageValue();\n    fraction0.getNumerator();\n}",
    "testName" : "test81139"
  },
  "test5092" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5092() throws Throwable {\n    Fraction fraction0 = new Fraction((-248.53421868528));\n    double double0 = fraction0.doubleValue();\n}",
    "testName" : "test5092"
  },
  "test5091" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5091() throws Throwable {\n    Fraction fraction0 = new Fraction((-248.53421868528));\n    double double0 = fraction0.doubleValue();\n    fraction0.getNumerator();\n}",
    "testName" : "test5091"
  },
  "test67112" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test67112() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    Fraction fraction1 = Fraction.ONE;\n    Fraction fraction2 = fraction0.ONE_THIRD.divide(fraction1);\n    boolean boolean0 = fraction1.equals(fraction2);\n    fraction1.equals((Object) fraction0);\n}",
    "testName" : "test67112"
  },
  "test0919" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0919() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.ZERO.divide(fraction0);\n    double double0 = fraction1.percentageValue();\n}",
    "testName" : "test0919"
  },
  "test5497" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5497() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(0, 1);\n    fraction0.percentageValue();\n}",
    "testName" : "test5497"
  },
  "test2141" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2141() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(3, (-1));\n    fraction0.getDenominator();\n}",
    "testName" : "test2141"
  },
  "test4281" : {
    "methodSignature" : "public Fraction reciprocal()",
    "methodName" : "reciprocal",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4281() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_FIFTHS;\n    fraction0.ZERO.reciprocal();\n}",
    "testName" : "test4281"
  },
  "test0410" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0410() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = fraction0.TWO_FIFTHS.subtract(fraction0);\n    fraction1.getNumerator();\n}",
    "testName" : "test0410"
  },
  "test58101" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test58101() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    Fraction fraction1 = fraction0.ZERO.multiply(105);\n    Fraction fraction2 = fraction1.FOUR_FIFTHS.multiply(fraction1);\n    fraction2.equals((Object) fraction1);\n}",
    "testName" : "test58101"
  },
  "test0411" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0411() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = fraction0.TWO_FIFTHS.subtract(fraction0);\n    fraction1.getDenominator();\n}",
    "testName" : "test0411"
  },
  "test1225" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1225() throws Throwable {\n    Fraction fraction0 = Fraction.MINUS_ONE;\n    Fraction fraction1 = fraction0.negate();\n    fraction1.getNumerator();\n}",
    "testName" : "test1225"
  },
  "test58102" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test58102() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    Fraction fraction1 = fraction0.ZERO.multiply(105);\n    Fraction fraction2 = fraction1.FOUR_FIFTHS.multiply(fraction1);\n    fraction1.longValue();\n}",
    "testName" : "test58102"
  },
  "test62107" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test62107() throws Throwable {\n    Fraction fraction0 = new Fraction((-248.53421868528));\n    Fraction fraction1 = fraction0.ONE_HALF.subtract(fraction0);\n    fraction1.floatValue();\n}",
    "testName" : "test62107"
  },
  "test1226" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1226() throws Throwable {\n    Fraction fraction0 = Fraction.MINUS_ONE;\n    Fraction fraction1 = fraction0.negate();\n    fraction1.longValue();\n}",
    "testName" : "test1226"
  },
  "test3364" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3364() throws Throwable {\n    Fraction fraction0 = Fraction.TWO;\n    Fraction fraction1 = fraction0.divide(2);\n    fraction1.getDenominator();\n}",
    "testName" : "test3364"
  },
  "test83141" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test83141() throws Throwable {\n    Fraction fraction0 = new Fraction((-248.53421868528));\n    int int0 = fraction0.getNumerator();\n}",
    "testName" : "test83141"
  },
  "test67115" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test67115() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    Fraction fraction1 = Fraction.ONE;\n    Fraction fraction2 = fraction0.ONE_THIRD.divide(fraction1);\n    boolean boolean0 = fraction1.equals(fraction2);\n}",
    "testName" : "test67115"
  },
  "test67116" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test67116() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    Fraction fraction1 = Fraction.ONE;\n    Fraction fraction2 = fraction0.ONE_THIRD.divide(fraction1);\n    boolean boolean0 = fraction1.equals(fraction2);\n    fraction2.getNumerator();\n}",
    "testName" : "test67116"
  },
  "test67113" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test67113() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    Fraction fraction1 = Fraction.ONE;\n    Fraction fraction2 = fraction0.ONE_THIRD.divide(fraction1);\n    boolean boolean0 = fraction1.equals(fraction2);\n    fraction0.equals((Object) fraction1);\n}",
    "testName" : "test67113"
  },
  "test67114" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test67114() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    Fraction fraction1 = Fraction.ONE;\n    Fraction fraction2 = fraction0.ONE_THIRD.divide(fraction1);\n    boolean boolean0 = fraction1.equals(fraction2);\n    fraction2.percentageValue();\n}",
    "testName" : "test67114"
  },
  "test2955" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2955() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = Fraction.getReducedFraction((-1), 263);\n    Fraction fraction2 = fraction0.divide(fraction1);\n    fraction2.getDenominator();\n}",
    "testName" : "test2955"
  },
  "test2957" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2957() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = Fraction.getReducedFraction((-1), 263);\n    Fraction fraction2 = fraction0.divide(fraction1);\n    fraction1.percentageValue();\n}",
    "testName" : "test2957"
  },
  "test2956" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2956() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = Fraction.getReducedFraction((-1), 263);\n    Fraction fraction2 = fraction0.divide(fraction1);\n    fraction2.getNumerator();\n}",
    "testName" : "test2956"
  },
  "test70121" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test70121() throws Throwable {\n    Fraction fraction0 = new Fraction((-248.53421868528));\n    Fraction fraction1 = Fraction.getReducedFraction(64, 64);\n    fraction0.equals(fraction1);\n    fraction1.getDenominator();\n}",
    "testName" : "test70121"
  },
  "test70120" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test70120() throws Throwable {\n    Fraction fraction0 = new Fraction((-248.53421868528));\n    Fraction fraction1 = Fraction.getReducedFraction(64, 64);\n    fraction0.equals(fraction1);\n    fraction0.getDenominator();\n}",
    "testName" : "test70120"
  },
  "test70122" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test70122() throws Throwable {\n    Fraction fraction0 = new Fraction((-248.53421868528));\n    Fraction fraction1 = Fraction.getReducedFraction(64, 64);\n    fraction0.equals(fraction1);\n    fraction1.doubleValue();\n}",
    "testName" : "test70122"
  },
  "test75132" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test75132() throws Throwable {\n    Fraction fraction0 = new Fraction((-4313.770396564076));\n    Fraction fraction1 = fraction0.ONE_THIRD.multiply((-2283));\n    fraction1.doubleValue();\n}",
    "testName" : "test75132"
  },
  "test3363" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3363() throws Throwable {\n    Fraction fraction0 = Fraction.TWO;\n    Fraction fraction1 = fraction0.divide(2);\n    fraction1.percentageValue();\n}",
    "testName" : "test3363"
  },
  "test1633" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1633() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = fraction0.ONE_HALF.add(998);\n    Fraction fraction2 = fraction0.ONE_FIFTH.multiply(fraction1);\n    fraction1.getDenominator();\n}",
    "testName" : "test1633"
  },
  "test2446" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2446() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    int int0 = fraction0.getNumerator();\n}",
    "testName" : "test2446"
  },
  "test59103" : {
    "methodSignature" : "public Fraction multiply(Fraction fraction)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test59103() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_FIFTH;\n    fraction0.multiply((Fraction) null);\n}",
    "testName" : "test59103"
  },
  "test88149" : {
    "methodSignature" : "public FractionField getField()",
    "methodName" : "getField",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test88149() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    FractionField fractionField0 = fraction0.TWO_THIRDS.getField();\n}",
    "testName" : "test88149"
  },
  "test3772" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3772() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_FIFTHS;\n    Fraction fraction1 = fraction0.ZERO.add(0);\n    fraction1.getDenominator();\n}",
    "testName" : "test3772"
  },
  "test3773" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3773() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_FIFTHS;\n    Fraction fraction1 = fraction0.ZERO.add(0);\n    fraction1.floatValue();\n}",
    "testName" : "test3773"
  },
  "test011" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = Fraction.MINUS_ONE;\n    Fraction fraction2 = fraction0.divide((-413));\n    boolean boolean0 = fraction2.equals(fraction1);\n    fraction1.equals((Object) fraction2);\n}",
    "testName" : "test011"
  },
  "test012" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test012() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = Fraction.MINUS_ONE;\n    Fraction fraction2 = fraction0.divide((-413));\n    boolean boolean0 = fraction2.equals(fraction1);\n}",
    "testName" : "test012"
  },
  "test1634" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1634() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = fraction0.ONE_HALF.add(998);\n    Fraction fraction2 = fraction0.ONE_FIFTH.multiply(fraction1);\n    fraction2.percentageValue();\n}",
    "testName" : "test1634"
  },
  "test61106" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test61106() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    Fraction fraction1 = fraction0.add(fraction0);\n    fraction1.floatValue();\n}",
    "testName" : "test61106"
  },
  "test61105" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test61105() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    Fraction fraction1 = fraction0.add(fraction0);\n    fraction1.getDenominator();\n}",
    "testName" : "test61105"
  },
  "test4180" : {
    "methodSignature" : "public Fraction subtract(Fraction fraction)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4180() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    fraction0.ONE_FIFTH.subtract((Fraction) null);\n}",
    "testName" : "test4180"
  },
  "test0817" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0817() throws Throwable {\n    Fraction fraction0 = Fraction.TWO;\n    Fraction fraction1 = fraction0.MINUS_ONE.reciprocal();\n    fraction1.longValue();\n}",
    "testName" : "test0817"
  },
  "test0818" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0818() throws Throwable {\n    Fraction fraction0 = Fraction.TWO;\n    Fraction fraction1 = fraction0.MINUS_ONE.reciprocal();\n    fraction1.getDenominator();\n}",
    "testName" : "test0818"
  },
  "test2040" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2040() throws Throwable {\n    Fraction fraction0 = Fraction.MINUS_ONE;\n    int int0 = fraction0.intValue();\n}",
    "testName" : "test2040"
  },
  "test4584" : {
    "methodSignature" : "public Fraction(double value) throws FractionConversionException",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4584() throws Throwable {\n    Fraction fraction0 = null;\n    fraction0 = new Fraction((-8.0E298));\n}",
    "testName" : "test4584"
  },
  "test5396" : {
    "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5396() throws Throwable {\n    Fraction.getReducedFraction(371, Integer.MIN_VALUE);\n}",
    "testName" : "test5396"
  },
  "test1124" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1124() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = fraction0.multiply(0);\n    Fraction fraction2 = fraction1.negate();\n    fraction1.percentageValue();\n}",
    "testName" : "test1124"
  },
  "test2854" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2854() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    double double0 = fraction0.doubleValue();\n}",
    "testName" : "test2854"
  },
  "test64109" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test64109() throws Throwable {\n    Fraction fraction0 = new Fraction(1);\n    fraction0.add((Fraction) null);\n}",
    "testName" : "test64109"
  },
  "test85143" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test85143() throws Throwable {\n    Fraction fraction0 = new Fraction(1);\n    int int0 = fraction0.intValue();\n}",
    "testName" : "test85143"
  },
  "test1122" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1122() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = fraction0.multiply(0);\n    Fraction fraction2 = fraction1.negate();\n    fraction1.getDenominator();\n}",
    "testName" : "test1122"
  },
  "test4079" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4079() throws Throwable {\n    Fraction fraction0 = Fraction.MINUS_ONE;\n    Fraction fraction1 = fraction0.abs();\n    fraction1.getDenominator();\n}",
    "testName" : "test4079"
  },
  "test1123" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1123() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = fraction0.multiply(0);\n    Fraction fraction2 = fraction1.negate();\n    fraction2.floatValue();\n}",
    "testName" : "test1123"
  },
  "test85144" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test85144() throws Throwable {\n    Fraction fraction0 = new Fraction(1);\n    int int0 = fraction0.intValue();\n    fraction0.getDenominator();\n}",
    "testName" : "test85144"
  },
  "test000" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = Fraction.MINUS_ONE;\n    Fraction fraction2 = fraction0.THREE_QUARTERS.divide(fraction1);\n    String string0 = fraction2.toString();\n}",
    "testName" : "test000"
  },
  "test69118" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test69118() throws Throwable {\n    Fraction fraction0 = new Fraction((-248.53421868528));\n    boolean boolean0 = fraction0.equals(fraction0);\n}",
    "testName" : "test69118"
  },
  "test80137" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test80137() throws Throwable {\n    Fraction fraction0 = new Fraction(4173, 4173, 206);\n    fraction0.percentageValue();\n}",
    "testName" : "test80137"
  },
  "test0716" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0716() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = fraction0.subtract(0);\n    fraction1.equals((Object) fraction0);\n}",
    "testName" : "test0716"
  },
  "test69119" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test69119() throws Throwable {\n    Fraction fraction0 = new Fraction((-248.53421868528));\n    boolean boolean0 = fraction0.equals(fraction0);\n    fraction0.getNumerator();\n}",
    "testName" : "test69119"
  },
  "test72125" : {
    "methodSignature" : "public int compareTo(Fraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test72125() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = new Fraction(216);\n    int int0 = fraction0.compareTo(fraction1);\n}",
    "testName" : "test72125"
  },
  "test3262" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3262() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = fraction0.ZERO.divide(508);\n    fraction1.intValue();\n}",
    "testName" : "test3262"
  },
  "test4990" : {
    "methodSignature" : "public Fraction(int num, int den)",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4990() throws Throwable {\n    Fraction fraction0 = null;\n    fraction0 = new Fraction(1, 0);\n}",
    "testName" : "test4990"
  },
  "test77134" : {
    "methodSignature" : "public Fraction(int num, int den)",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test77134() throws Throwable {\n    Fraction fraction0 = null;\n    fraction0 = new Fraction(Integer.MIN_VALUE, Integer.MIN_VALUE);\n}",
    "testName" : "test77134"
  },
  "test3261" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3261() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = fraction0.ZERO.divide(508);\n    fraction1.getDenominator();\n}",
    "testName" : "test3261"
  },
  "test4078" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4078() throws Throwable {\n    Fraction fraction0 = Fraction.MINUS_ONE;\n    Fraction fraction1 = fraction0.abs();\n    fraction1.intValue();\n}",
    "testName" : "test4078"
  },
  "test72126" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test72126() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = new Fraction(216);\n    int int0 = fraction0.compareTo(fraction1);\n    fraction1.percentageValue();\n}",
    "testName" : "test72126"
  },
  "test1531" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1531() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-1), 263);\n    Fraction fraction1 = fraction0.TWO_FIFTHS.multiply(fraction0);\n    fraction0.getNumerator();\n}",
    "testName" : "test1531"
  },
  "test4888" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4888() throws Throwable {\n    Fraction fraction0 = new Fraction(1519, (-533));\n    fraction0.floatValue();\n}",
    "testName" : "test4888"
  },
  "test1532" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1532() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-1), 263);\n    Fraction fraction1 = fraction0.TWO_FIFTHS.multiply(fraction0);\n    fraction1.percentageValue();\n}",
    "testName" : "test1532"
  },
  "test2345" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2345() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    int int0 = fraction0.getNumerator();\n}",
    "testName" : "test2345"
  },
  "test3159" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3159() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.subtract((-3737));\n    Fraction fraction2 = fraction1.divide(fraction0);\n    fraction2.getDenominator();\n}",
    "testName" : "test3159"
  },
  "test4889" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4889() throws Throwable {\n    Fraction fraction0 = new Fraction(1519, (-533));\n    fraction0.getDenominator();\n}",
    "testName" : "test4889"
  },
  "test57100" : {
    "methodSignature" : "public Fraction divide(Fraction fraction)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test57100() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(2711, 2711);\n    fraction0.ZERO.divide((Fraction) null);\n}",
    "testName" : "test57100"
  },
  "test63108" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test63108() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    Fraction fraction1 = fraction0.ZERO.multiply(fraction0);\n    Fraction fraction2 = fraction0.ONE_HALF.subtract(fraction1);\n    fraction2.doubleValue();\n}",
    "testName" : "test63108"
  },
  "test5699" : {
    "methodSignature" : "public Fraction divide(Fraction fraction)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5699() throws Throwable {\n    Fraction fraction0 = new Fraction(14.101419448852539, 25);\n    Fraction fraction1 = Fraction.ZERO;\n    fraction0.divide(fraction1);\n}",
    "testName" : "test5699"
  },
  "test82140" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test82140() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    float float0 = fraction0.floatValue();\n}",
    "testName" : "test82140"
  },
  "test68117" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test68117() throws Throwable {\n    Fraction fraction0 = Fraction.TWO;\n    Object object0 = new Object();\n    boolean boolean0 = fraction0.equals(object0);\n}",
    "testName" : "test68117"
  },
  "test1938" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1938() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    int int0 = fraction0.intValue();\n    fraction0.percentageValue();\n}",
    "testName" : "test1938"
  },
  "test71124" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test71124() throws Throwable {\n    Fraction fraction0 = new Fraction((-248.53421868528));\n    Fraction fraction1 = Fraction.getReducedFraction(64, 64);\n    int int0 = fraction1.compareTo(fraction0);\n    fraction1.floatValue();\n}",
    "testName" : "test71124"
  },
  "test71123" : {
    "methodSignature" : "public int compareTo(Fraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test71123() throws Throwable {\n    Fraction fraction0 = new Fraction((-248.53421868528));\n    Fraction fraction1 = Fraction.getReducedFraction(64, 64);\n    int int0 = fraction1.compareTo(fraction0);\n}",
    "testName" : "test71123"
  },
  "test026" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test026() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = fraction0.reciprocal();\n    boolean boolean0 = fraction1.equals(fraction0);\n    fraction1.getDenominator();\n}",
    "testName" : "test026"
  },
  "test027" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test027() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = fraction0.reciprocal();\n    boolean boolean0 = fraction1.equals(fraction0);\n    fraction1.floatValue();\n}",
    "testName" : "test027"
  },
  "test025" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test025() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = fraction0.reciprocal();\n    boolean boolean0 = fraction1.equals(fraction0);\n}",
    "testName" : "test025"
  },
  "test76133" : {
    "methodSignature" : "public Fraction divide(final int i)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test76133() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    fraction0.ONE_THIRD.divide(Integer.MIN_VALUE);\n}",
    "testName" : "test76133"
  },
  "test4483" : {
    "methodSignature" : "public int compareTo(Fraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4483() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(4, (-2546));\n    fraction0.compareTo((Fraction) null);\n}",
    "testName" : "test4483"
  },
  "test5295" : {
    "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5295() throws Throwable {\n    Fraction.getReducedFraction(Integer.MIN_VALUE, (-1204));\n}",
    "testName" : "test5295"
  },
  "test2753" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2753() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = fraction0.multiply(0);\n    double double0 = fraction1.doubleValue();\n}",
    "testName" : "test2753"
  },
  "test2752" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2752() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = fraction0.multiply(0);\n    double double0 = fraction1.doubleValue();\n    fraction1.getDenominator();\n}",
    "testName" : "test2752"
  },
  "test3569" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3569() throws Throwable {\n    Fraction fraction0 = new Fraction(0);\n    Fraction fraction1 = fraction0.ZERO.add(fraction0);\n    fraction1.percentageValue();\n}",
    "testName" : "test3569"
  },
  "test87148" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test87148() throws Throwable {\n    Fraction fraction0 = new Fraction((-4313.770396564076));\n    Fraction fraction1 = fraction0.reciprocal();\n    fraction1.getNumerator();\n}",
    "testName" : "test87148"
  },
  "test3568" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3568() throws Throwable {\n    Fraction fraction0 = new Fraction(0);\n    Fraction fraction1 = fraction0.ZERO.add(fraction0);\n}",
    "testName" : "test3568"
  },
  "test1021" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1021() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    double double0 = fraction0.percentageValue();\n}",
    "testName" : "test1021"
  },
  "test87147" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test87147() throws Throwable {\n    Fraction fraction0 = new Fraction((-4313.770396564076));\n    Fraction fraction1 = fraction0.reciprocal();\n    fraction1.floatValue();\n}",
    "testName" : "test87147"
  },
  "test2751" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2751() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = fraction0.multiply(0);\n    double double0 = fraction1.doubleValue();\n    fraction0.floatValue();\n}",
    "testName" : "test2751"
  },
  "test0615" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0615() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = fraction0.multiply(0);\n    Fraction fraction2 = fraction1.subtract(0);\n    fraction2.doubleValue();\n}",
    "testName" : "test0615"
  },
  "test1429" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1429() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = Fraction.ONE;\n    Fraction fraction2 = fraction0.TWO_QUARTERS.add(fraction1);\n    Fraction fraction3 = fraction0.negate();\n    Fraction fraction4 = fraction3.multiply(fraction2);\n    fraction4.percentageValue();\n}",
    "testName" : "test1429"
  },
  "test0614" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0614() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = fraction0.multiply(0);\n    Fraction fraction2 = fraction1.subtract(0);\n    fraction2.getDenominator();\n}",
    "testName" : "test0614"
  },
  "test1939" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1939() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    int int0 = fraction0.intValue();\n}",
    "testName" : "test1939"
  },
  "test90152" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test90152() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    int int0 = fraction0.getDenominator();\n}",
    "testName" : "test90152"
  },
  "test66111" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test66111() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = Fraction.TWO_QUARTERS;\n    boolean boolean0 = fraction0.equals(fraction1);\n}",
    "testName" : "test66111"
  },
  "test013" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test013() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = Fraction.MINUS_ONE;\n    Fraction fraction2 = fraction0.divide((-413));\n    boolean boolean0 = fraction2.equals(fraction1);\n    fraction2.doubleValue();\n}",
    "testName" : "test013"
  },
  "test014" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test014() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = Fraction.MINUS_ONE;\n    Fraction fraction2 = fraction0.divide((-413));\n    boolean boolean0 = fraction2.equals(fraction1);\n    fraction2.getNumerator();\n}",
    "testName" : "test014"
  },
  "test79136" : {
    "methodSignature" : "public Fraction(double value, int maxDenominator) throws FractionConversionException",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test79136() throws Throwable {\n    Fraction fraction0 = null;\n    fraction0 = new Fraction(100.0, 4);\n}",
    "testName" : "test79136"
  },
  "test74129" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test74129() throws Throwable {\n    Fraction fraction0 = new Fraction((-4313.770396564076));\n    Fraction fraction1 = fraction0.abs();\n    fraction1.percentageValue();\n}",
    "testName" : "test74129"
  },
  "test3160" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3160() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.subtract((-3737));\n    Fraction fraction2 = fraction1.divide(fraction0);\n    fraction2.percentageValue();\n}",
    "testName" : "test3160"
  },
  "test3976" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3976() throws Throwable {\n    Fraction fraction0 = new Fraction(Integer.MAX_VALUE, 1025);\n    Fraction fraction1 = fraction0.abs();\n    fraction1.percentageValue();\n}",
    "testName" : "test3976"
  },
  "test4787" : {
    "methodSignature" : "public Fraction(int num, int den)",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4787() throws Throwable {\n    Fraction fraction0 = null;\n    fraction0 = new Fraction(156, Integer.MIN_VALUE);\n}",
    "testName" : "test4787"
  },
  "test2243" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2243() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(4646, 31);\n    fraction0.percentageValue();\n}",
    "testName" : "test2243"
  },
  "test84142" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test84142() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    fraction0.hashCode();\n}",
    "testName" : "test84142"
  },
  "test1430" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1430() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = Fraction.ONE;\n    Fraction fraction2 = fraction0.TWO_QUARTERS.add(fraction1);\n    Fraction fraction3 = fraction0.negate();\n    Fraction fraction4 = fraction3.multiply(fraction2);\n    fraction3.getDenominator();\n}",
    "testName" : "test1430"
  },
  "test2244" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2244() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(4646, 31);\n    fraction0.getDenominator();\n}",
    "testName" : "test2244"
  },
  "test3058" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3058() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.ONE_HALF.divide(fraction0);\n    fraction1.doubleValue();\n}",
    "testName" : "test3058"
  },
  "test5598" : {
    "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5598() throws Throwable {\n    Fraction.getReducedFraction((-1), 0);\n}",
    "testName" : "test5598"
  },
  "test1837" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1837() throws Throwable {\n    Fraction fraction0 = new Fraction((-1752.3966), (-1));\n    long long0 = fraction0.longValue();\n}",
    "testName" : "test1837"
  },
  "test3977" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3977() throws Throwable {\n    Fraction fraction0 = new Fraction(Integer.MAX_VALUE, 1025);\n    Fraction fraction1 = fraction0.abs();\n    fraction0.floatValue();\n}",
    "testName" : "test3977"
  },
  "test2649" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2649() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.divide((-1894));\n    float float0 = fraction1.floatValue();\n}",
    "testName" : "test2649"
  },
  "test65110" : {
    "methodSignature" : "public Fraction subtract(Fraction fraction)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test65110() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    Fraction fraction1 = fraction0.ZERO.multiply(105);\n    Fraction fraction2 = fraction1.add(Integer.MIN_VALUE);\n    fraction1.subtract(fraction2);\n}",
    "testName" : "test65110"
  },
  "test3570" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3570() throws Throwable {\n    Fraction fraction0 = new Fraction(0);\n    Fraction fraction1 = fraction0.ZERO.add(fraction0);\n    fraction0.getDenominator();\n}",
    "testName" : "test3570"
  },
  "test78135" : {
    "methodSignature" : "public Fraction(double value, double epsilon, int maxIterations) throws FractionConversionException",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test78135() throws Throwable {\n    Fraction fraction0 = null;\n    fraction0 = new Fraction((-3708.46337892569), 0.0032307692306403624, (-1));\n}",
    "testName" : "test78135"
  },
  "test4382" : {
    "methodSignature" : "public Fraction multiply(Fraction fraction)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4382() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    Fraction fraction1 = fraction0.add(1870);\n    Fraction fraction2 = fraction1.multiply(1870);\n    fraction1.multiply(fraction2);\n}",
    "testName" : "test4382"
  },
  "test5193" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5193() throws Throwable {\n    Fraction fraction0 = new Fraction((-4313.770396564076));\n    String string0 = fraction0.THREE_QUARTERS.toString();\n}",
    "testName" : "test5193"
  },
  "test73127" : {
    "methodSignature" : "public int compareTo(Fraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test73127() throws Throwable {\n    Fraction fraction0 = new Fraction((-248.53421868528));\n    int int0 = fraction0.compareTo(fraction0);\n}",
    "testName" : "test73127"
  },
  "test5194" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5194() throws Throwable {\n    Fraction fraction0 = new Fraction((-4313.770396564076));\n    String string0 = fraction0.THREE_QUARTERS.toString();\n    fraction0.longValue();\n}",
    "testName" : "test5194"
  },
  "test73128" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test73128() throws Throwable {\n    Fraction fraction0 = new Fraction((-248.53421868528));\n    int int0 = fraction0.compareTo(fraction0);\n    fraction0.getDenominator();\n}",
    "testName" : "test73128"
  },
  "test3467" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3467() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = fraction0.subtract(998);\n    Fraction fraction2 = fraction1.divide(118);\n    fraction1.doubleValue();\n}",
    "testName" : "test3467"
  },
  "test2650" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2650() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.divide((-1894));\n    float float0 = fraction1.floatValue();\n    fraction1.getDenominator();\n}",
    "testName" : "test2650"
  },
  "test3466" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3466() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = fraction0.subtract(998);\n    Fraction fraction2 = fraction1.divide(118);\n    fraction2.doubleValue();\n}",
    "testName" : "test3466"
  },
  "test3465" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3465() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = fraction0.subtract(998);\n    Fraction fraction2 = fraction1.divide(118);\n    fraction2.getNumerator();\n}",
    "testName" : "test3465"
  },
  "test0512" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0512() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.TWO_THIRDS.negate();\n    Fraction fraction2 = fraction0.TWO_QUARTERS.subtract(fraction1);\n    fraction2.floatValue();\n}",
    "testName" : "test0512"
  },
  "test0513" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0513() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.TWO_THIRDS.negate();\n    Fraction fraction2 = fraction0.TWO_QUARTERS.subtract(fraction1);\n    fraction1.getDenominator();\n}",
    "testName" : "test0513"
  },
  "test1327" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1327() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = fraction0.TWO.negate();\n    fraction1.percentageValue();\n}",
    "testName" : "test1327"
  },
  "test1328" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1328() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = fraction0.TWO.negate();\n    fraction1.getDenominator();\n}",
    "testName" : "test1328"
  },
  "test60104" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test60104() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    Fraction fraction1 = Fraction.getReducedFraction(156, Integer.MIN_VALUE);\n    Fraction fraction2 = fraction0.TWO_FIFTHS.add(fraction0);\n    fraction2.add(fraction1);\n}",
    "testName" : "test60104"
  },
  "test039" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test039() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    Fraction fraction1 = new Fraction(2543.70070575406, (-970));\n    Fraction fraction2 = fraction0.subtract(fraction1);\n    fraction2.getNumerator();\n}",
    "testName" : "test039"
  },
  "test038" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test038() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    Fraction fraction1 = new Fraction(2543.70070575406, (-970));\n    Fraction fraction2 = fraction0.subtract(fraction1);\n    fraction2.doubleValue();\n}",
    "testName" : "test038"
  },
  "test89151" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test89151() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    Fraction fraction1 = fraction0.ONE_HALF.subtract(fraction0);\n    fraction1.percentageValue();\n}",
    "testName" : "test89151"
  },
  "test89150" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test89150() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    Fraction fraction1 = fraction0.ONE_HALF.subtract(fraction0);\n    fraction1.getDenominator();\n}",
    "testName" : "test89150"
  }
}