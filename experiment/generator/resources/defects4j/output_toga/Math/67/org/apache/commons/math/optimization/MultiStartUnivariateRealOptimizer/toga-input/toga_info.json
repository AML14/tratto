{
  "test1212" : {
    "methodSignature" : "public int getMaximalIterationCount()",
    "methodName" : "getMaximalIterationCount",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(0.0).when(univariateRealOptimizer0).getResult();\n    MersenneTwister mersenneTwister0 = new MersenneTwister(0);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, (-1525), mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.getIterationCount();\n    multiStartUnivariateRealOptimizer0.getResult();\n    multiStartUnivariateRealOptimizer0.getMaximalIterationCount();\n}",
    "testName" : "test1212"
  },
  "test4646" : {
    "methodSignature" : "public void resetMaximalIterationCount()",
    "methodName" : "resetMaximalIterationCount",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4646() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn((-182.391301), (-182.391301)).when(univariateRealOptimizer0).getResult();\n    MersenneTwister mersenneTwister0 = new MersenneTwister();\n    byte[] byteArray0 = new byte[2];\n    byteArray0[0] = (byte) (-99);\n    byteArray0[1] = (byte) 97;\n    mersenneTwister0.setSeed((long) (byte) (-99));\n    mersenneTwister0.nextBytes(byteArray0);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 226, mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.getResult();\n    mersenneTwister0.nextFloat();\n    multiStartUnivariateRealOptimizer0.getResult();\n    multiStartUnivariateRealOptimizer0.resetAbsoluteAccuracy();\n    multiStartUnivariateRealOptimizer0.resetMaximalIterationCount();\n}",
    "testName" : "test4646"
  },
  "test3434" : {
    "methodSignature" : "public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max) throws ConvergenceException, FunctionEvaluationException",
    "methodName" : "optimize",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0, 0, 0, 0).when(univariateRealOptimizer0).getIterationCount();\n    doReturn(0.0).when(univariateRealOptimizer0).getRelativeAccuracy();\n    doReturn(0, 0, 0, 0, 0).when(univariateRealOptimizer0).getEvaluations();\n    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    int int0 = 3358;\n    MersenneTwister mersenneTwister0 = new MersenneTwister((-4795L));\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 3358, mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n    multiStartUnivariateRealOptimizer0.setMaximalIterationCount(0);\n    mersenneTwister0.nextGaussian();\n    double[] doubleArray0 = new double[8];\n    doubleArray0[0] = (double) 0;\n    doubleArray0[1] = (double) (-4795L);\n    doubleArray0[2] = (double) 3358;\n    doubleArray0[3] = (-1425.7562);\n    doubleArray0[4] = 0.0;\n    doubleArray0[5] = (double) 0;\n    doubleArray0[6] = (double) 3358;\n    doubleArray0[7] = (-1.1147970683875246);\n    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    // Undeclared exception!\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, (double) 0, 0.0);\n}",
    "testName" : "test3434"
  },
  "test2424" : {
    "methodSignature" : "public double getFunctionValue()",
    "methodName" : "getFunctionValue",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0, 0, 0, 0).when(univariateRealOptimizer0).getIterationCount();\n    doReturn(0.0).when(univariateRealOptimizer0).getRelativeAccuracy();\n    doReturn(0, 0, 0, 0, 0).when(univariateRealOptimizer0).getEvaluations();\n    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    MersenneTwister mersenneTwister0 = new MersenneTwister(1987L);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 131, mersenneTwister0);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) null, goalType0, 1137.6576, (double) 131);\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n    multiStartUnivariateRealOptimizer0.resetAbsoluteAccuracy();\n    multiStartUnivariateRealOptimizer0.getFunctionValue();\n}",
    "testName" : "test2424"
  },
  "test1010" : {
    "methodSignature" : "public double[] getOptima() throws IllegalStateException",
    "methodName" : "getOptima",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    int int0 = 97;\n    MersenneTwister mersenneTwister0 = new MersenneTwister((long) 97);\n    int[] intArray0 = new int[6];\n    int int1 = 107;\n    intArray0[0] = 107;\n    intArray0[1] = 97;\n    intArray0[2] = 97;\n    intArray0[3] = 97;\n    intArray0[4] = 97;\n    intArray0[5] = 97;\n    mersenneTwister0.setSeed(intArray0);\n    mersenneTwister0.nextInt(97);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 97, mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.getIterationCount();\n    multiStartUnivariateRealOptimizer0.getOptima();\n}",
    "testName" : "test1010"
  },
  "test4444" : {
    "methodSignature" : "public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max) throws ConvergenceException, FunctionEvaluationException",
    "methodName" : "optimize",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4444() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(38, 38, (-892), (-892), 2358).when(univariateRealOptimizer0).getIterationCount();\n    doReturn(2358, (-892), 2358, 3833, 2358).when(univariateRealOptimizer0).getEvaluations();\n    doReturn((double) (-892), (double) 2358, 2.220446049250313E-16, 2.220446049250313E-16, (-1253.126790531354)).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn(719.915886, (double) 2358, (double) 2358, (double) 3833, 91.0).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 118, jDKRandomGenerator0);\n    multiStartUnivariateRealOptimizer0.getMaxEvaluations();\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = (double) 118;\n    doubleArray0[2] = (double) Integer.MAX_VALUE;\n    doubleArray0[3] = (double) Integer.MAX_VALUE;\n    doubleArray0[4] = (double) Integer.MAX_VALUE;\n    doubleArray0[5] = (double) Integer.MAX_VALUE;\n    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, (-1235.169347908), (-1636.005026824798));\n}",
    "testName" : "test4444"
  },
  "test3232" : {
    "methodSignature" : "public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws ConvergenceException, FunctionEvaluationException",
    "methodName" : "optimize",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(univariateRealOptimizer0).getIterationCount();\n    doReturn(0).when(univariateRealOptimizer0).getEvaluations();\n    doReturn(0.0).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn(0.0).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 1728, (RandomGenerator) null);\n    double double0 = 3426.2169024276;\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    multiStartUnivariateRealOptimizer0.resetAbsoluteAccuracy();\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) null, goalType0, 0.0, 0.0, 1547.5406);\n}",
    "testName" : "test3232"
  },
  "test2222" : {
    "methodSignature" : "public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max) throws ConvergenceException, FunctionEvaluationException",
    "methodName" : "optimize",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    int int0 = 0;\n    MersenneTwister mersenneTwister0 = new MersenneTwister((long) 0);\n    mersenneTwister0.setSeed((long) 0);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 0, mersenneTwister0);\n    double[] doubleArray0 = new double[8];\n    doubleArray0[0] = (double) 0;\n    doubleArray0[1] = 187.0818123856052;\n    doubleArray0[2] = (double) 0;\n    doubleArray0[3] = (double) 0;\n    doubleArray0[4] = (double) 0;\n    mersenneTwister0.setSeed(0L);\n    doubleArray0[5] = (double) 0;\n    doubleArray0[6] = (double) 0;\n    doubleArray0[7] = (double) 0;\n    PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) polynomialFunctionLagrangeForm0, goalType0, 0.0, 0.0);\n}",
    "testName" : "test2222"
  },
  "test033" : {
    "methodSignature" : "public int getMaxEvaluations()",
    "methodName" : "getMaxEvaluations",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    MersenneTwister mersenneTwister0 = new MersenneTwister((long) (-1237));\n    byte[] byteArray0 = new byte[8];\n    byteArray0[0] = (byte) 0;\n    byteArray0[1] = (byte) 27;\n    byteArray0[2] = (byte) (-26);\n    byteArray0[3] = (byte) 82;\n    byteArray0[4] = (byte) 1;\n    byteArray0[5] = (byte) (-127);\n    byteArray0[6] = (byte) 67;\n    byteArray0[7] = (byte) 112;\n    mersenneTwister0.nextBytes(byteArray0);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, (-1237), mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.getMaxEvaluations();\n}",
    "testName" : "test033"
  },
  "test077" : {
    "methodSignature" : "public double[] getOptimaValues() throws IllegalStateException",
    "methodName" : "getOptimaValues",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(0.0).when(univariateRealOptimizer0).getAbsoluteAccuracy();\n    doReturn(0.0).when(univariateRealOptimizer0).getRelativeAccuracy();\n    doReturn(0.0).when(univariateRealOptimizer0).getFunctionValue();\n    MersenneTwister mersenneTwister0 = new MersenneTwister((long) 0);\n    mersenneTwister0.setSeed(0L);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 0, mersenneTwister0);\n    mersenneTwister0.nextInt();\n    multiStartUnivariateRealOptimizer0.setMaximalIterationCount(0);\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n    multiStartUnivariateRealOptimizer0.getEvaluations();\n    multiStartUnivariateRealOptimizer0.setAbsoluteAccuracy(0.0);\n    multiStartUnivariateRealOptimizer0.getFunctionValue();\n    multiStartUnivariateRealOptimizer0.resetMaximalIterationCount();\n    multiStartUnivariateRealOptimizer0.getAbsoluteAccuracy();\n    multiStartUnivariateRealOptimizer0.getOptimaValues();\n}",
    "testName" : "test077"
  },
  "test1616" : {
    "methodSignature" : "public void setMaxEvaluations(int maxEvaluations)",
    "methodName" : "setMaxEvaluations",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    MersenneTwister mersenneTwister0 = new MersenneTwister(0);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer((UnivariateRealOptimizer) null, 0, mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.setMaxEvaluations((-1050));\n}",
    "testName" : "test1616"
  },
  "test3838" : {
    "methodSignature" : "public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws ConvergenceException, FunctionEvaluationException",
    "methodName" : "optimize",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3838() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(458.67).when(univariateRealOptimizer0).getAbsoluteAccuracy();\n    doReturn((-1779), (-1779), (-1779), (-1), 1915).when(univariateRealOptimizer0).getIterationCount();\n    doReturn((double) 1915).when(univariateRealOptimizer0).getRelativeAccuracy();\n    doReturn(1509, (-2762), 3402, (-2762), 91).when(univariateRealOptimizer0).getEvaluations();\n    doReturn(0.0, (double) 91, 0.0, Double.NaN, (-1253.126790531354)).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn((double) 3402, 500.46380688, 1129.3, 0.0, (-1253.126790531354)).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    int[] intArray0 = new int[7];\n    intArray0[0] = 31;\n    intArray0[1] = 31;\n    intArray0[2] = 31;\n    intArray0[3] = 31;\n    intArray0[4] = 31;\n    intArray0[5] = 31;\n    intArray0[6] = 31;\n    MersenneTwister mersenneTwister0 = new MersenneTwister(intArray0);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 31, mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n    multiStartUnivariateRealOptimizer0.getEvaluations();\n    multiStartUnivariateRealOptimizer0.getAbsoluteAccuracy();\n    double[] doubleArray0 = new double[2];\n    doubleArray0[0] = (double) 31;\n    doubleArray0[1] = 458.67;\n    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, (double) 31, (double) 31, (-1459.0540161));\n}",
    "testName" : "test3838"
  },
  "test2828" : {
    "methodSignature" : "public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws ConvergenceException, FunctionEvaluationException",
    "methodName" : "optimize",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0, 0, 0, 0).when(univariateRealOptimizer0).getIterationCount();\n    doReturn(0, 0, 0, 0, 0).when(univariateRealOptimizer0).getEvaluations();\n    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    int int0 = 357;\n    int int1 = 0;\n    MersenneTwister mersenneTwister0 = new MersenneTwister(0);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 357, mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.setMaxEvaluations(0);\n    double[] doubleArray0 = new double[1];\n    doubleArray0[0] = (double) 357;\n    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    // Undeclared exception!\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, (-1019.661629518), (-1019.661629518), 1059.6);\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public void setAbsoluteAccuracy(double accuracy)",
    "methodName" : "setAbsoluteAccuracy",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    int int0 = 0;\n    JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();\n    jDKRandomGenerator0.doubles();\n    jDKRandomGenerator0.ints((long) 0);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer((UnivariateRealOptimizer) null, 0, jDKRandomGenerator0);\n    multiStartUnivariateRealOptimizer0.setMaximalIterationCount(0);\n    int int1 = (-657);\n    jDKRandomGenerator0.setSeed((-657));\n    multiStartUnivariateRealOptimizer0.setAbsoluteAccuracy(0);\n}",
    "testName" : "test1414"
  },
  "test4848" : {
    "methodSignature" : "public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max) throws ConvergenceException, FunctionEvaluationException",
    "methodName" : "optimize",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4848() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(univariateRealOptimizer0).getIterationCount();\n    doReturn(0).when(univariateRealOptimizer0).getEvaluations();\n    doReturn(0.0).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn(0.0).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    int int0 = 16;\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 16, (RandomGenerator) null);\n    multiStartUnivariateRealOptimizer0.resetAbsoluteAccuracy();\n    multiStartUnivariateRealOptimizer0.resetMaximalIterationCount();\n    multiStartUnivariateRealOptimizer0.getEvaluations();\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = (double) 0;\n    double double0 = 1.0;\n    doubleArray0[1] = 1.0;\n    doubleArray0[2] = (double) 16;\n    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);\n    polynomialFunction0.toString();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, 1.0, 1.0);\n}",
    "testName" : "test4848"
  },
  "test3636" : {
    "methodSignature" : "public double getAbsoluteAccuracy()",
    "methodName" : "getAbsoluteAccuracy",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3636() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn((-1478.94)).when(univariateRealOptimizer0).getAbsoluteAccuracy();\n    MersenneTwister mersenneTwister0 = new MersenneTwister();\n    RandomAdaptor randomAdaptor0 = new RandomAdaptor(mersenneTwister0);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 34, randomAdaptor0);\n    multiStartUnivariateRealOptimizer0.getAbsoluteAccuracy();\n}",
    "testName" : "test3636"
  },
  "test2626" : {
    "methodSignature" : "public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max) throws ConvergenceException, FunctionEvaluationException",
    "methodName" : "optimize",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0, 0, 0, 0).when(univariateRealOptimizer0).getIterationCount();\n    doReturn(0, 0, 0, 0, 0).when(univariateRealOptimizer0).getEvaluations();\n    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 118, jDKRandomGenerator0);\n    multiStartUnivariateRealOptimizer0.getMaxEvaluations();\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = (double) 118;\n    doubleArray0[1] = (double) Integer.MAX_VALUE;\n    doubleArray0[2] = (double) Integer.MAX_VALUE;\n    doubleArray0[3] = (double) Integer.MAX_VALUE;\n    doubleArray0[4] = (double) Integer.MAX_VALUE;\n    doubleArray0[5] = (double) Integer.MAX_VALUE;\n    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, (-1235.169347908), (-1636.005026824798));\n}",
    "testName" : "test2626"
  },
  "test4242" : {
    "methodSignature" : "public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws ConvergenceException, FunctionEvaluationException",
    "methodName" : "optimize",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4242() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0, 0, 0, 0).when(univariateRealOptimizer0).getIterationCount();\n    doReturn(0, 0, 0, 0, 0).when(univariateRealOptimizer0).getEvaluations();\n    doReturn((-521.6812024478388), 0.0, 0.0, 0.0, 0.0).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn(0.0).when(univariateRealOptimizer0).getResult();\n    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    int[] intArray0 = new int[9];\n    intArray0[0] = 77;\n    intArray0[1] = (-1772);\n    intArray0[2] = 77;\n    intArray0[3] = 77;\n    intArray0[4] = 77;\n    intArray0[4] = 77;\n    intArray0[6] = 77;\n    intArray0[7] = 77;\n    intArray0[8] = (-1495);\n    MersenneTwister mersenneTwister0 = new MersenneTwister(intArray0);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 77, mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.getFunctionValue();\n    multiStartUnivariateRealOptimizer0.getResult();\n    double[] doubleArray0 = new double[7];\n    doubleArray0[0] = (-521.6812024478388);\n    doubleArray0[1] = (double) 77;\n    doubleArray0[2] = (double) 77;\n    doubleArray0[3] = (double) (-1495);\n    doubleArray0[4] = (double) (-1772);\n    doubleArray0[5] = (-521.6812024478388);\n    doubleArray0[6] = (-521.6812024478388);\n    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, (-726.92802), Double.NaN, (-1495.0));\n}",
    "testName" : "test4242"
  },
  "test3030" : {
    "methodSignature" : "public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws ConvergenceException, FunctionEvaluationException",
    "methodName" : "optimize",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(0.0).when(univariateRealOptimizer0).getAbsoluteAccuracy();\n    doReturn(0, 0, 0, 0, 0).when(univariateRealOptimizer0).getIterationCount();\n    doReturn(0.0).when(univariateRealOptimizer0).getRelativeAccuracy();\n    doReturn(0, 0, 0, 0, 0).when(univariateRealOptimizer0).getEvaluations();\n    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    int[] intArray0 = new int[7];\n    intArray0[0] = 31;\n    intArray0[1] = 31;\n    intArray0[2] = 31;\n    intArray0[3] = 31;\n    intArray0[4] = 31;\n    intArray0[5] = 31;\n    intArray0[6] = 31;\n    MersenneTwister mersenneTwister0 = new MersenneTwister(intArray0);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 31, mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n    multiStartUnivariateRealOptimizer0.getEvaluations();\n    multiStartUnivariateRealOptimizer0.getAbsoluteAccuracy();\n    double[] doubleArray0 = new double[2];\n    doubleArray0[0] = (double) 31;\n    doubleArray0[1] = 0.0;\n    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, (double) 31, (double) 31, (-1459.0540161));\n}",
    "testName" : "test3030"
  },
  "test5252" : {
    "methodSignature" : "public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max) throws ConvergenceException, FunctionEvaluationException",
    "methodName" : "optimize",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5252() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn((-1800), 41, (-1800), (-1800), 41).when(univariateRealOptimizer0).getIterationCount();\n    doReturn((-2236), (-2236), (-1800), (-890), (-890)).when(univariateRealOptimizer0).getEvaluations();\n    doReturn((double) 41, (-1908.4867478), 1101.462035, (-312.8767485127), 856.6).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn((-4182.80226830022), (double) (-890), (-4182.80226830022), Double.NaN, Double.POSITIVE_INFINITY).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    MersenneTwister mersenneTwister0 = new MersenneTwister(1987L);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 131, mersenneTwister0);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) null, goalType0, 1137.6576, (double) 131);\n}",
    "testName" : "test5252"
  },
  "test2020" : {
    "methodSignature" : "public int nextInt(int n) throws IllegalArgumentException",
    "methodName" : "nextInt",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(univariateRealOptimizer0).getIterationCount();\n    doReturn(0.0).when(univariateRealOptimizer0).getRelativeAccuracy();\n    doReturn(0).when(univariateRealOptimizer0).getEvaluations();\n    doReturn(0.0).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn(0.0).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    MersenneTwister mersenneTwister0 = new MersenneTwister(235L);\n    mersenneTwister0.setSeed(235L);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 1, mersenneTwister0);\n    double[] doubleArray0 = new double[8];\n    doubleArray0[0] = (double) 235L;\n    doubleArray0[1] = (double) 235L;\n    doubleArray0[2] = (double) 235L;\n    doubleArray0[3] = (double) 1;\n    doubleArray0[4] = (double) 0;\n    doubleArray0[5] = (double) 235L;\n    doubleArray0[6] = (double) 235L;\n    doubleArray0[7] = 0.0;\n    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);\n    UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize(univariateRealFunction0, goalType0, (double) 1, 0.0);\n    multiStartUnivariateRealOptimizer0.setMaximalIterationCount(0);\n    multiStartUnivariateRealOptimizer0.getOptimaValues();\n    multiStartUnivariateRealOptimizer0.getIterationCount();\n    multiStartUnivariateRealOptimizer0.resetRelativeAccuracy();\n    multiStartUnivariateRealOptimizer0.resetAbsoluteAccuracy();\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n    mersenneTwister0.nextInt(0);\n}",
    "testName" : "test2020"
  },
  "test4040" : {
    "methodSignature" : "public double[] getOptima() throws IllegalStateException",
    "methodName" : "getOptima",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4040() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn((-892.0)).when(univariateRealOptimizer0).getRelativeAccuracy();\n    MersenneTwister mersenneTwister0 = new MersenneTwister((-968L));\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 1348, mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n    multiStartUnivariateRealOptimizer0.setMaxEvaluations(3794);\n    multiStartUnivariateRealOptimizer0.getOptima();\n}",
    "testName" : "test4040"
  },
  "test5050" : {
    "methodSignature" : "public double getFunctionValue()",
    "methodName" : "getFunctionValue",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5050() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(1, 0, 17, 1928, 17).when(univariateRealOptimizer0).getIterationCount();\n    doReturn((double) 1928).when(univariateRealOptimizer0).getRelativeAccuracy();\n    doReturn(17, 18, 17, 3, 1).when(univariateRealOptimizer0).getEvaluations();\n    doReturn((double) 1928, (-1831.301294236), (-508.017154), (double) 0, (-1.0)).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn((-2164.039021799), (double) 17, (double) 0, 279.0818189505857, (double) 3).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    MersenneTwister mersenneTwister0 = new MersenneTwister(1987L);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 131, mersenneTwister0);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) null, goalType0, 1137.6576, (double) 131);\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n    multiStartUnivariateRealOptimizer0.resetAbsoluteAccuracy();\n    multiStartUnivariateRealOptimizer0.getFunctionValue();\n}",
    "testName" : "test5050"
  },
  "test022" : {
    "methodSignature" : "public double[] getOptimaValues() throws IllegalStateException",
    "methodName" : "getOptimaValues",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    int[] intArray0 = new int[4];\n    MersenneTwister mersenneTwister0 = new MersenneTwister(intArray0);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, (-2936), mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.setAbsoluteAccuracy(Double.NaN);\n    multiStartUnivariateRealOptimizer0.setMaxEvaluations((-1909));\n    mersenneTwister0.setSeed((long) (-1909));\n    multiStartUnivariateRealOptimizer0.setMaxEvaluations((-2936));\n    multiStartUnivariateRealOptimizer0.getMaximalIterationCount();\n    multiStartUnivariateRealOptimizer0.getOptimaValues();\n}",
    "testName" : "test022"
  },
  "test1818" : {
    "methodSignature" : "public void setRelativeAccuracy(double accuracy)",
    "methodName" : "setRelativeAccuracy",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    MersenneTwister mersenneTwister0 = new MersenneTwister((long) 0);\n    RandomAdaptor randomAdaptor0 = new RandomAdaptor(mersenneTwister0);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 0, randomAdaptor0);\n    multiStartUnivariateRealOptimizer0.setRelativeAccuracy(0);\n}",
    "testName" : "test1818"
  },
  "test2323" : {
    "methodSignature" : "public int getMaximalIterationCount()",
    "methodName" : "getMaximalIterationCount",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    MersenneTwister mersenneTwister0 = new MersenneTwister((long) Integer.MAX_VALUE);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer((UnivariateRealOptimizer) null, Integer.MAX_VALUE, mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.getMaximalIterationCount();\n}",
    "testName" : "test2323"
  },
  "test1313" : {
    "methodSignature" : "public double getRelativeAccuracy()",
    "methodName" : "getRelativeAccuracy",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(0.0).when(univariateRealOptimizer0).getRelativeAccuracy();\n    MersenneTwister mersenneTwister0 = new MersenneTwister((long) (-1));\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, (-1), mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n}",
    "testName" : "test1313"
  },
  "test3535" : {
    "methodSignature" : "public void setMaxEvaluations(int maxEvaluations)",
    "methodName" : "setMaxEvaluations",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(0.0, 0.0).when(univariateRealOptimizer0).getAbsoluteAccuracy();\n    doReturn(0, 0, 0, 0, 0).when(univariateRealOptimizer0).getIterationCount();\n    doReturn(0.0, 0.0).when(univariateRealOptimizer0).getRelativeAccuracy();\n    doReturn(0, 0, 0, 0, 0).when(univariateRealOptimizer0).getEvaluations();\n    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    MersenneTwister mersenneTwister0 = new MersenneTwister();\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 101, mersenneTwister0);\n    double[] doubleArray0 = new double[1];\n    doubleArray0[0] = (double) 101;\n    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);\n    mersenneTwister0.setSeed((long) 101);\n    UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    PolynomialFunction polynomialFunction1 = polynomialFunction0.polynomialDerivative();\n    mersenneTwister0.nextInt(241);\n    PolynomialFunction polynomialFunction2 = new PolynomialFunction(doubleArray0);\n    polynomialFunction1.multiply(polynomialFunction2);\n    mersenneTwister0.setSeed((long) 101);\n    polynomialFunction1.derivative();\n    polynomialFunction0.polynomialDerivative();\n    multiStartUnivariateRealOptimizer0.optimize(univariateRealFunction0, goalType0, 101.0, 101.0, (-2607.81902));\n    GoalType goalType1 = GoalType.MINIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) polynomialFunction1, goalType1, 1234.5736213204275, 101.0, (-2607.81902));\n    multiStartUnivariateRealOptimizer0.setRelativeAccuracy(101);\n    multiStartUnivariateRealOptimizer0.getAbsoluteAccuracy();\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n    multiStartUnivariateRealOptimizer0.getOptima();\n    multiStartUnivariateRealOptimizer0.getOptima();\n    multiStartUnivariateRealOptimizer0.getAbsoluteAccuracy();\n    multiStartUnivariateRealOptimizer0.getIterationCount();\n    multiStartUnivariateRealOptimizer0.getMaximalIterationCount();\n    multiStartUnivariateRealOptimizer0.setMaximalIterationCount(101);\n    multiStartUnivariateRealOptimizer0.setMaxEvaluations((-2006));\n}",
    "testName" : "test3535"
  },
  "test2121" : {
    "methodSignature" : "public double getAbsoluteAccuracy()",
    "methodName" : "getAbsoluteAccuracy",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(0.0).when(univariateRealOptimizer0).getAbsoluteAccuracy();\n    doReturn(0.0).when(univariateRealOptimizer0).getFunctionValue();\n    MersenneTwister mersenneTwister0 = new MersenneTwister(1812433253L);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, Integer.MAX_VALUE, mersenneTwister0);\n    byte[] byteArray0 = new byte[9];\n    byteArray0[0] = (byte) 0;\n    byteArray0[1] = (byte) 31;\n    byteArray0[2] = (byte) (-11);\n    byteArray0[3] = (byte) (-1);\n    byteArray0[4] = (byte) 0;\n    mersenneTwister0.nextGaussian();\n    byteArray0[5] = (byte) 0;\n    byteArray0[6] = (byte) 35;\n    byteArray0[7] = (byte) (-122);\n    byteArray0[8] = (byte) 33;\n    mersenneTwister0.nextBoolean();\n    mersenneTwister0.nextBytes(byteArray0);\n    multiStartUnivariateRealOptimizer0.getFunctionValue();\n    multiStartUnivariateRealOptimizer0.setMaximalIterationCount(Integer.MAX_VALUE);\n    multiStartUnivariateRealOptimizer0.resetMaximalIterationCount();\n    multiStartUnivariateRealOptimizer0.setMaximalIterationCount(0);\n    multiStartUnivariateRealOptimizer0.getMaximalIterationCount();\n    multiStartUnivariateRealOptimizer0.getAbsoluteAccuracy();\n}",
    "testName" : "test2121"
  },
  "test1111" : {
    "methodSignature" : "public double[] getOptimaValues() throws IllegalStateException",
    "methodName" : "getOptimaValues",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    int int0 = 0;\n    MersenneTwister mersenneTwister0 = new MersenneTwister();\n    mersenneTwister0.nextFloat();\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 0, mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.getOptimaValues();\n}",
    "testName" : "test1111"
  },
  "test4343" : {
    "methodSignature" : "public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws ConvergenceException, FunctionEvaluationException",
    "methodName" : "optimize",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4343() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn((-1253.126790531354)).when(univariateRealOptimizer0).getAbsoluteAccuracy();\n    doReturn((-897), 231, 88, (-58), 25).when(univariateRealOptimizer0).getIterationCount();\n    doReturn((double) 231).when(univariateRealOptimizer0).getRelativeAccuracy();\n    doReturn(25, 31, (-897), 88, 25).when(univariateRealOptimizer0).getEvaluations();\n    doReturn(1822.03793, (-521.6812024478388), (-1253.126790531354), (-704.0), (-521.6812024478388)).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn(1822.03793, (-1502.0), (-1253.126790531354), 2702.913652377001, (double) 88).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    int[] intArray0 = new int[7];\n    intArray0[0] = 31;\n    intArray0[1] = 31;\n    intArray0[2] = 31;\n    intArray0[3] = 31;\n    intArray0[4] = 31;\n    intArray0[5] = 31;\n    intArray0[6] = 31;\n    MersenneTwister mersenneTwister0 = new MersenneTwister(intArray0);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 31, mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n    multiStartUnivariateRealOptimizer0.getEvaluations();\n    multiStartUnivariateRealOptimizer0.getAbsoluteAccuracy();\n    double[] doubleArray0 = new double[2];\n    doubleArray0[0] = (double) 31;\n    doubleArray0[1] = (-1253.126790531354);\n    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, (double) 31, (double) 31, (-1459.0540161));\n}",
    "testName" : "test4343"
  },
  "test3333" : {
    "methodSignature" : "public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws ConvergenceException, FunctionEvaluationException",
    "methodName" : "optimize",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    int[] intArray0 = new int[4];\n    int int0 = 0;\n    intArray0[0] = 0;\n    intArray0[1] = (-843);\n    intArray0[2] = (-843);\n    intArray0[3] = (-843);\n    MersenneTwister mersenneTwister0 = new MersenneTwister(intArray0);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, (-843), mersenneTwister0);\n    double[] doubleArray0 = new double[3];\n    doubleArray0[0] = (double) (-843);\n    doubleArray0[1] = (double) (-843);\n    doubleArray0[2] = (double) (-843);\n    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);\n    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);\n    multiStartUnivariateRealOptimizer0.setMaxEvaluations(0);\n    polynomialFunction0.subtract(polynomialFunction1);\n    UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();\n    polynomialFunction0.negate();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize(univariateRealFunction0, goalType0, (double) (-843), (-843.0), 2536.2380678878);\n}",
    "testName" : "test3333"
  },
  "test011" : {
    "methodSignature" : "public double[] getOptima() throws IllegalStateException",
    "methodName" : "getOptima",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    int int0 = Integer.MAX_VALUE;\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, Integer.MAX_VALUE, (RandomGenerator) null);\n    multiStartUnivariateRealOptimizer0.resetAbsoluteAccuracy();\n    multiStartUnivariateRealOptimizer0.getOptima();\n}",
    "testName" : "test011"
  },
  "test055" : {
    "methodSignature" : "public void setMaxEvaluations(int maxEvaluations)",
    "methodName" : "setMaxEvaluations",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(1917.02030267747, 1448.143421483).when(univariateRealOptimizer0).getAbsoluteAccuracy();\n    doReturn(20, 20, (-629), 20, 20).when(univariateRealOptimizer0).getIterationCount();\n    doReturn((double) 20, 1137.78731358741).when(univariateRealOptimizer0).getRelativeAccuracy();\n    doReturn(6, 6, 1805, 18, 4352).when(univariateRealOptimizer0).getEvaluations();\n    doReturn(1917.02030267747, 0.0, (double) 18, 1.0, 0.0).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn(0.0).when(univariateRealOptimizer0).getResult();\n    doReturn(1448.143421483, (double) 1805, 0.5, (-4768.7876427765), 4012.984605767).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    MersenneTwister mersenneTwister0 = new MersenneTwister();\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 96, mersenneTwister0);\n    double[] doubleArray0 = new double[1];\n    doubleArray0[0] = (double) 96;\n    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);\n    mersenneTwister0.setSeed((long) 96);\n    UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    PolynomialFunction polynomialFunction1 = polynomialFunction0.polynomialDerivative();\n    mersenneTwister0.nextInt(241);\n    PolynomialFunction polynomialFunction2 = new PolynomialFunction(doubleArray0);\n    polynomialFunction1.multiply(polynomialFunction2);\n    mersenneTwister0.setSeed((long) 96);\n    polynomialFunction1.derivative();\n    polynomialFunction0.polynomialDerivative();\n    multiStartUnivariateRealOptimizer0.optimize(univariateRealFunction0, goalType0, 96.0, 96.0, (-2607.81902));\n    multiStartUnivariateRealOptimizer0.getResult();\n    multiStartUnivariateRealOptimizer0.setRelativeAccuracy(96);\n    multiStartUnivariateRealOptimizer0.getAbsoluteAccuracy();\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n    multiStartUnivariateRealOptimizer0.getOptima();\n    multiStartUnivariateRealOptimizer0.getOptima();\n    multiStartUnivariateRealOptimizer0.getAbsoluteAccuracy();\n    multiStartUnivariateRealOptimizer0.getIterationCount();\n    multiStartUnivariateRealOptimizer0.getMaximalIterationCount();\n    multiStartUnivariateRealOptimizer0.setMaximalIterationCount(96);\n    multiStartUnivariateRealOptimizer0.setMaxEvaluations((-2006));\n}",
    "testName" : "test055"
  },
  "test099" : {
    "methodSignature" : "public double getFunctionValue()",
    "methodName" : "getFunctionValue",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    int[] intArray0 = null;\n    MersenneTwister mersenneTwister0 = new MersenneTwister((int[]) null);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer((UnivariateRealOptimizer) null, 0, mersenneTwister0);\n    mersenneTwister0.setSeed((long) 0);\n    int[] intArray1 = new int[2];\n    intArray1[0] = 0;\n    mersenneTwister0.setSeed(intArray1);\n    intArray1[1] = 0;\n    mersenneTwister0.nextGaussian();\n    mersenneTwister0.nextInt(1474);\n    mersenneTwister0.setSeed(intArray1);\n    multiStartUnivariateRealOptimizer0.getIterationCount();\n    multiStartUnivariateRealOptimizer0.getFunctionValue();\n}",
    "testName" : "test099"
  },
  "test2727" : {
    "methodSignature" : "public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws ConvergenceException, FunctionEvaluationException",
    "methodName" : "optimize",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, (-1511), (RandomGenerator) null);\n    double[] doubleArray0 = new double[2];\n    doubleArray0[0] = (double) (-1511);\n    doubleArray0[1] = (double) (-1511);\n    PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) polynomialFunctionLagrangeForm0, goalType0, (double) (-1511), 0.0, (-1511.0));\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "public void setRelativeAccuracy(double accuracy)",
    "methodName" : "setRelativeAccuracy",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    MersenneTwister mersenneTwister0 = new MersenneTwister((-1468L));\n    mersenneTwister0.nextBoolean();\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer((UnivariateRealOptimizer) null, (-3541), mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.setRelativeAccuracy((-3541));\n}",
    "testName" : "test1717"
  },
  "test4949" : {
    "methodSignature" : "public void setMaxEvaluations(int maxEvaluations)",
    "methodName" : "setMaxEvaluations",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4949() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(179.829, (-2.0)).when(univariateRealOptimizer0).getAbsoluteAccuracy();\n    doReturn(74, 1, 94, (-1111), 94).when(univariateRealOptimizer0).getIterationCount();\n    doReturn((double) 94, (-2.0)).when(univariateRealOptimizer0).getRelativeAccuracy();\n    doReturn(1, 1765, 97, 96, 1).when(univariateRealOptimizer0).getEvaluations();\n    doReturn(1.0, 0.0, (-1039.5549572521322), 179.829, 2358.0).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn((double) 1765, (-2008.335052), (-604.4557476678459), (double) (-1111), Double.POSITIVE_INFINITY).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    MersenneTwister mersenneTwister0 = new MersenneTwister();\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 101, mersenneTwister0);\n    double[] doubleArray0 = new double[1];\n    doubleArray0[0] = (double) 101;\n    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);\n    mersenneTwister0.setSeed((long) 101);\n    UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    PolynomialFunction polynomialFunction1 = polynomialFunction0.polynomialDerivative();\n    mersenneTwister0.nextInt(241);\n    PolynomialFunction polynomialFunction2 = new PolynomialFunction(doubleArray0);\n    polynomialFunction1.multiply(polynomialFunction2);\n    mersenneTwister0.setSeed((long) 101);\n    polynomialFunction1.derivative();\n    polynomialFunction0.polynomialDerivative();\n    multiStartUnivariateRealOptimizer0.optimize(univariateRealFunction0, goalType0, 101.0, 101.0, (-2607.81902));\n    GoalType goalType1 = GoalType.MINIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) polynomialFunction1, goalType1, 1234.5736213204275, 101.0, (-2607.81902));\n    multiStartUnivariateRealOptimizer0.setRelativeAccuracy(101);\n    multiStartUnivariateRealOptimizer0.getAbsoluteAccuracy();\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n    multiStartUnivariateRealOptimizer0.getOptima();\n    multiStartUnivariateRealOptimizer0.getOptima();\n    multiStartUnivariateRealOptimizer0.getAbsoluteAccuracy();\n    multiStartUnivariateRealOptimizer0.getIterationCount();\n    multiStartUnivariateRealOptimizer0.getMaximalIterationCount();\n    multiStartUnivariateRealOptimizer0.setMaximalIterationCount(101);\n    multiStartUnivariateRealOptimizer0.setMaxEvaluations((-2006));\n}",
    "testName" : "test4949"
  },
  "test3939" : {
    "methodSignature" : "public double getFunctionValue()",
    "methodName" : "getFunctionValue",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3939() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(2.0).when(univariateRealOptimizer0).getFunctionValue();\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 0, (RandomGenerator) null);\n    multiStartUnivariateRealOptimizer0.getFunctionValue();\n}",
    "testName" : "test3939"
  },
  "test2525" : {
    "methodSignature" : "public double getRelativeAccuracy()",
    "methodName" : "getRelativeAccuracy",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    int[] intArray0 = new int[4];\n    intArray0[0] = (-685);\n    intArray0[1] = 0;\n    intArray0[2] = (-685);\n    intArray0[3] = (-685);\n    MersenneTwister mersenneTwister0 = new MersenneTwister(intArray0);\n    mersenneTwister0.nextBoolean();\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer((UnivariateRealOptimizer) null, (-685), mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public void resetMaximalIterationCount()",
    "methodName" : "resetMaximalIterationCount",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    int[] intArray0 = new int[6];\n    intArray0[0] = 1106;\n    intArray0[1] = 1106;\n    intArray0[2] = 1106;\n    intArray0[3] = 1106;\n    intArray0[4] = 1106;\n    intArray0[5] = 1106;\n    MersenneTwister mersenneTwister0 = new MersenneTwister(intArray0);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer((UnivariateRealOptimizer) null, 1106, mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.resetMaximalIterationCount();\n}",
    "testName" : "test1515"
  },
  "test4747" : {
    "methodSignature" : "public void resetAbsoluteAccuracy()",
    "methodName" : "resetAbsoluteAccuracy",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4747() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(411, 411, 411, 3, 411).when(univariateRealOptimizer0).getIterationCount();\n    doReturn((double) 3).when(univariateRealOptimizer0).getRelativeAccuracy();\n    doReturn(87, (-445), (-445), 616, 616).when(univariateRealOptimizer0).getEvaluations();\n    doReturn((-850.1879669), 1511.66, 1511.66, 1979.2053091305, (double) (-445)).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn((double) 411).when(univariateRealOptimizer0).getResult();\n    doReturn(2.0, 2.220446049250313E-16, 1.0, 2.0, (-358.6890254228)).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    int[] intArray0 = new int[8];\n    intArray0[0] = 55;\n    intArray0[1] = 55;\n    intArray0[2] = 55;\n    intArray0[3] = 55;\n    intArray0[4] = 55;\n    intArray0[5] = 55;\n    intArray0[6] = 55;\n    intArray0[7] = 55;\n    MersenneTwister mersenneTwister0 = new MersenneTwister(intArray0);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 55, mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.resetAbsoluteAccuracy();\n    double[] doubleArray0 = new double[6];\n    doubleArray0[0] = (double) 55;\n    doubleArray0[1] = (double) 55;\n    doubleArray0[2] = (double) 55;\n    doubleArray0[3] = (double) 55;\n    doubleArray0[4] = (double) 55;\n    doubleArray0[5] = (double) 55;\n    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    polynomialFunction0.polynomialDerivative();\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, 0.0, 1.0);\n    multiStartUnivariateRealOptimizer0.getMaxEvaluations();\n    multiStartUnivariateRealOptimizer0.getEvaluations();\n    multiStartUnivariateRealOptimizer0.resetMaximalIterationCount();\n    multiStartUnivariateRealOptimizer0.getResult();\n    multiStartUnivariateRealOptimizer0.resetAbsoluteAccuracy();\n    multiStartUnivariateRealOptimizer0.getMaximalIterationCount();\n    multiStartUnivariateRealOptimizer0.getMaximalIterationCount();\n    multiStartUnivariateRealOptimizer0.getMaximalIterationCount();\n    mersenneTwister0.setSeed(55);\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n    multiStartUnivariateRealOptimizer0.getOptimaValues();\n    multiStartUnivariateRealOptimizer0.resetAbsoluteAccuracy();\n}",
    "testName" : "test4747"
  },
  "test3737" : {
    "methodSignature" : "public double[] getOptima() throws IllegalStateException",
    "methodName" : "getOptima",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3737() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(91.0).when(univariateRealOptimizer0).getAbsoluteAccuracy();\n    JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 12, jDKRandomGenerator0);\n    multiStartUnivariateRealOptimizer0.getAbsoluteAccuracy();\n    Random.setNextRandom(12);\n    multiStartUnivariateRealOptimizer0.getOptima();\n}",
    "testName" : "test3737"
  },
  "test4141" : {
    "methodSignature" : "public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws ConvergenceException, FunctionEvaluationException",
    "methodName" : "optimize",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4141() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(189, 2839, 189, 26, Integer.MAX_VALUE).when(univariateRealOptimizer0).getIterationCount();\n    doReturn(58, (-958), 58, 26, 26).when(univariateRealOptimizer0).getEvaluations();\n    doReturn((double) (-958), 1437.71525099608, Double.NaN, (-3284.624325347188), (-1028.624866188)).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn(Double.NaN, (double) Integer.MAX_VALUE, 1160.913199592, (double) 26, 1437.71525099608).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    int[] intArray0 = new int[9];\n    intArray0[0] = 1532;\n    intArray0[1] = 1532;\n    intArray0[2] = 1;\n    intArray0[3] = 1532;\n    intArray0[4] = 1532;\n    intArray0[5] = 1532;\n    intArray0[6] = 1532;\n    intArray0[7] = 1532;\n    intArray0[8] = 1532;\n    MersenneTwister mersenneTwister0 = new MersenneTwister(intArray0);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 1532, mersenneTwister0);\n    double[] doubleArray0 = new double[9];\n    doubleArray0[0] = (double) 1532;\n    doubleArray0[1] = (double) 1532;\n    doubleArray0[2] = (double) 1532;\n    doubleArray0[3] = (double) 1532;\n    doubleArray0[4] = (double) 1532;\n    doubleArray0[5] = (double) 1532;\n    doubleArray0[6] = (double) 1532;\n    doubleArray0[7] = (double) 1;\n    doubleArray0[8] = (double) 1532;\n    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, 2009.6002, (double) 1532, Double.NaN);\n}",
    "testName" : "test4141"
  },
  "test3131" : {
    "methodSignature" : "public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max) throws ConvergenceException, FunctionEvaluationException",
    "methodName" : "optimize",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(0.0).when(univariateRealOptimizer0).getRelativeAccuracy();\n    MersenneTwister mersenneTwister0 = new MersenneTwister((long) (-2455));\n    RandomAdaptor randomAdaptor0 = new RandomAdaptor(mersenneTwister0);\n    randomAdaptor0.setSeed((-2255));\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, (-2455), randomAdaptor0);\n    multiStartUnivariateRealOptimizer0.resetAbsoluteAccuracy();\n    multiStartUnivariateRealOptimizer0.resetAbsoluteAccuracy();\n    multiStartUnivariateRealOptimizer0.setMaximalIterationCount((-2455));\n    mersenneTwister0.nextDouble();\n    multiStartUnivariateRealOptimizer0.getIterationCount();\n    multiStartUnivariateRealOptimizer0.getMaximalIterationCount();\n    randomAdaptor0.nextGaussian();\n    multiStartUnivariateRealOptimizer0.setRelativeAccuracy((-931.461445));\n    multiStartUnivariateRealOptimizer0.setMaximalIterationCount(1150);\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n    multiStartUnivariateRealOptimizer0.setMaximalIterationCount(22);\n    double[] doubleArray0 = new double[5];\n    doubleArray0[0] = (double) (-2455);\n    doubleArray0[1] = (double) (-2455);\n    doubleArray0[2] = (double) 0;\n    doubleArray0[3] = (-931.461445);\n    doubleArray0[4] = 934.848070378;\n    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, (double) 22, (double) (-2255));\n}",
    "testName" : "test3131"
  },
  "test5151" : {
    "methodSignature" : "public void setMaxEvaluations(int maxEvaluations)",
    "methodName" : "setMaxEvaluations",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5151() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(1172.93939895, 1172.93939895).when(univariateRealOptimizer0).getAbsoluteAccuracy();\n    doReturn(77, (-1), 77, (-1), (-1)).when(univariateRealOptimizer0).getIterationCount();\n    doReturn((double) (-1), (-807.0767907506947)).when(univariateRealOptimizer0).getRelativeAccuracy();\n    doReturn((-1452), 77, (-1452), 95, 25).when(univariateRealOptimizer0).getEvaluations();\n    doReturn((double) 25, (double) 77, 2900.1156751240483, (-1831.301294236), (-1.0)).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn((-185.27168), (double) (-1), (-1.0), 2411.087572124363, 1172.93939895).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    MersenneTwister mersenneTwister0 = new MersenneTwister();\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 101, mersenneTwister0);\n    double[] doubleArray0 = new double[1];\n    doubleArray0[0] = (double) 101;\n    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);\n    mersenneTwister0.setSeed((long) 101);\n    UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    PolynomialFunction polynomialFunction1 = polynomialFunction0.polynomialDerivative();\n    mersenneTwister0.nextInt(241);\n    PolynomialFunction polynomialFunction2 = new PolynomialFunction(doubleArray0);\n    polynomialFunction1.multiply(polynomialFunction2);\n    mersenneTwister0.setSeed((long) 101);\n    polynomialFunction1.derivative();\n    polynomialFunction0.polynomialDerivative();\n    multiStartUnivariateRealOptimizer0.optimize(univariateRealFunction0, goalType0, 101.0, 101.0, (-2607.81902));\n    GoalType goalType1 = GoalType.MINIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) polynomialFunction1, goalType1, 1234.5736213204275, 101.0, (-2607.81902));\n    multiStartUnivariateRealOptimizer0.setRelativeAccuracy(101);\n    multiStartUnivariateRealOptimizer0.getAbsoluteAccuracy();\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n    multiStartUnivariateRealOptimizer0.getOptima();\n    multiStartUnivariateRealOptimizer0.getOptima();\n    multiStartUnivariateRealOptimizer0.getAbsoluteAccuracy();\n    multiStartUnivariateRealOptimizer0.getIterationCount();\n    multiStartUnivariateRealOptimizer0.getMaximalIterationCount();\n    multiStartUnivariateRealOptimizer0.setMaximalIterationCount(101);\n    multiStartUnivariateRealOptimizer0.setMaxEvaluations((-2006));\n}",
    "testName" : "test5151"
  },
  "test000" : {
    "methodSignature" : "public double[] getOptimaValues() throws IllegalStateException",
    "methodName" : "getOptimaValues",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    doReturn(1, 1, 1, 1437, 1437).when(univariateRealOptimizer0).getIterationCount();\n    doReturn((double) 1).when(univariateRealOptimizer0).getRelativeAccuracy();\n    doReturn(1437, 2793, 1437, 107, 1).when(univariateRealOptimizer0).getEvaluations();\n    doReturn((-392.63505723186324), (-1831.301294236), (-1831.301294236), (-1831.301294236), (double) 1).when(univariateRealOptimizer0).getFunctionValue();\n    doReturn((double) 1437, (double) 2793, (-1831.301294236), (double) 1437, (double) 2793).when(univariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.UnivariateRealFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());\n    MersenneTwister mersenneTwister0 = new MersenneTwister(1987L);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 131, mersenneTwister0);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) null, goalType0, 1137.6576, (double) 131);\n    multiStartUnivariateRealOptimizer0.getRelativeAccuracy();\n    multiStartUnivariateRealOptimizer0.resetAbsoluteAccuracy();\n    multiStartUnivariateRealOptimizer0.getFunctionValue();\n    multiStartUnivariateRealOptimizer0.getOptimaValues();\n}",
    "testName" : "test000"
  },
  "test044" : {
    "methodSignature" : "public int getIterationCount()",
    "methodName" : "getIterationCount",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    int[] intArray0 = new int[5];\n    intArray0[0] = (-2688);\n    intArray0[1] = (-2688);\n    intArray0[2] = (-2688);\n    intArray0[3] = 0;\n    intArray0[4] = (-2688);\n    MersenneTwister mersenneTwister0 = new MersenneTwister(intArray0);\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, (-2688), mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.setMaximalIterationCount(0);\n    multiStartUnivariateRealOptimizer0.setAbsoluteAccuracy(0);\n    multiStartUnivariateRealOptimizer0.resetRelativeAccuracy();\n    multiStartUnivariateRealOptimizer0.setMaximalIterationCount((-2688));\n    multiStartUnivariateRealOptimizer0.resetMaximalIterationCount();\n    multiStartUnivariateRealOptimizer0.setRelativeAccuracy(0);\n    multiStartUnivariateRealOptimizer0.getIterationCount();\n}",
    "testName" : "test044"
  },
  "test088" : {
    "methodSignature" : "public double getResult()",
    "methodName" : "getResult",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    int int0 = 1489;\n    MersenneTwister mersenneTwister0 = new MersenneTwister();\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer((UnivariateRealOptimizer) null, 1489, mersenneTwister0);\n    multiStartUnivariateRealOptimizer0.getResult();\n}",
    "testName" : "test088"
  },
  "test2929" : {
    "methodSignature" : "public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws ConvergenceException, FunctionEvaluationException",
    "methodName" : "optimize",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    MersenneTwister mersenneTwister0 = new MersenneTwister((-1));\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, 0, mersenneTwister0);\n    double[] doubleArray0 = new double[7];\n    doubleArray0[0] = (double) 0;\n    doubleArray0[1] = (double) 0;\n    doubleArray0[2] = (double) 0;\n    doubleArray0[3] = 328.593902707;\n    doubleArray0[4] = (double) (-1);\n    doubleArray0[5] = (double) 0;\n    doubleArray0[6] = (double) (-1);\n    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    multiStartUnivariateRealOptimizer0.optimize((UnivariateRealFunction) polynomialFunction0, goalType0, 0.0, (-443.0906184439465), (double) 0);\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public double[] getOptima() throws IllegalStateException",
    "methodName" : "getOptima",
    "className" : "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    UnivariateRealOptimizer univariateRealOptimizer0 = mock(UnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());\n    JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();\n    MultiStartUnivariateRealOptimizer multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer(univariateRealOptimizer0, (-779), jDKRandomGenerator0);\n    multiStartUnivariateRealOptimizer0.getEvaluations();\n    multiStartUnivariateRealOptimizer0.resetRelativeAccuracy();\n    multiStartUnivariateRealOptimizer0.getOptima();\n}",
    "testName" : "test1919"
  }
}