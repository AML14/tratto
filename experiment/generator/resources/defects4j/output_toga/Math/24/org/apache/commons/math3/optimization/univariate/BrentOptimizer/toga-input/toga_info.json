{
  "test1213" : {
    "methodSignature" : "public UnivariatePointValuePair optimize(int maxEval, UnivariateFunction f, GoalType goalType, double min, double max, double startValue)",
    "methodName" : "optimize",
    "className" : "org.apache.commons.math3.optimization.univariate.BrentOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1213() throws Throwable {\n    BrentOptimizer brentOptimizer0 = new BrentOptimizer(3052.9454376443, 3052.9454376443);\n    GoalType goalType0 = GoalType.MINIMIZE;\n    Acos acos0 = new Acos();\n    brentOptimizer0.optimize(2944, (UnivariateFunction) acos0, goalType0, 3.1780704338483322E165, (-1451.669414), 1445.23141598);\n}",
    "testName" : "test1213"
  },
  "test1011" : {
    "methodSignature" : "protected UnivariatePointValuePair doOptimize()",
    "methodName" : "doOptimize",
    "className" : "org.apache.commons.math3.optimization.univariate.BrentOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1011() throws Throwable {\n    BrentOptimizer brentOptimizer0 = new BrentOptimizer(1.0, 1.0);\n    brentOptimizer0.doOptimize();\n}",
    "testName" : "test1011"
  },
  "test1112" : {
    "methodSignature" : "protected UnivariatePointValuePair doOptimize()",
    "methodName" : "doOptimize",
    "className" : "org.apache.commons.math3.optimization.univariate.BrentOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1112() throws Throwable {\n    BrentOptimizer brentOptimizer0 = new BrentOptimizer(1881.1, 3.0);\n    Cbrt cbrt0 = new Cbrt();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    brentOptimizer0.optimize(42, (UnivariateFunction) cbrt0, goalType0, 5.0, (double) 0, (double) 0);\n    brentOptimizer0.doOptimize();\n}",
    "testName" : "test1112"
  },
  "test000" : {
    "methodSignature" : "public BrentOptimizer(double rel, double abs)",
    "methodName" : "BrentOptimizer",
    "className" : "org.apache.commons.math3.optimization.univariate.BrentOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    BrentOptimizer brentOptimizer0 = null;\n    brentOptimizer0 = new BrentOptimizer((-3.356118100840571E-7), (-3.356118100840571E-7));\n}",
    "testName" : "test000"
  },
  "test011" : {
    "methodSignature" : "public BrentOptimizer(double rel, double abs)",
    "methodName" : "BrentOptimizer",
    "className" : "org.apache.commons.math3.optimization.univariate.BrentOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    BrentOptimizer brentOptimizer0 = null;\n    brentOptimizer0 = new BrentOptimizer(1034.718748, (-1728.0852664));\n}",
    "testName" : "test011"
  },
  "test022" : {
    "methodSignature" : "public double getPoint()",
    "methodName" : "getPoint",
    "className" : "org.apache.commons.math3.optimization.univariate.BrentOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    BrentOptimizer brentOptimizer0 = new BrentOptimizer(721.4313229246643, 721.4313229246643);\n    Asin asin0 = new Asin();\n    GoalType goalType0 = GoalType.MINIMIZE;\n    UnivariatePointValuePair univariatePointValuePair0 = brentOptimizer0.optimize(334, (UnivariateFunction) asin0, goalType0, 1445.23141598, 1445.23141598, 1.12996721591364E-202);\n    univariatePointValuePair0.getPoint();\n}",
    "testName" : "test022"
  },
  "test033" : {
    "methodSignature" : "public double getValue()",
    "methodName" : "getValue",
    "className" : "org.apache.commons.math3.optimization.univariate.BrentOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    BrentOptimizer brentOptimizer0 = new BrentOptimizer(721.4313229246643, 721.4313229246643);\n    Asin asin0 = new Asin();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    UnivariatePointValuePair univariatePointValuePair0 = brentOptimizer0.optimize(4687, (UnivariateFunction) asin0, goalType0, 3.0, (double) 334);\n    univariatePointValuePair0.getValue();\n}",
    "testName" : "test033"
  },
  "test034" : {
    "methodSignature" : "public double getPoint()",
    "methodName" : "getPoint",
    "className" : "org.apache.commons.math3.optimization.univariate.BrentOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    BrentOptimizer brentOptimizer0 = new BrentOptimizer(721.4313229246643, 721.4313229246643);\n    Asin asin0 = new Asin();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    UnivariatePointValuePair univariatePointValuePair0 = brentOptimizer0.optimize(4687, (UnivariateFunction) asin0, goalType0, 3.0, (double) 334);\n    univariatePointValuePair0.getPoint();\n}",
    "testName" : "test034"
  },
  "test045" : {
    "methodSignature" : "protected UnivariatePointValuePair doOptimize()",
    "methodName" : "doOptimize",
    "className" : "org.apache.commons.math3.optimization.univariate.BrentOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test045() throws Throwable {\n    BrentOptimizer brentOptimizer0 = new BrentOptimizer(1249.2, 1249.2);\n    Ceil ceil0 = new Ceil();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    brentOptimizer0.optimize(2145249207, (UnivariateFunction) ceil0, goalType0, 1249.2, (-1.8740018211089393E288), (double) 2145249207);\n    brentOptimizer0.doOptimize();\n    brentOptimizer0.doOptimize();\n    // Undeclared exception!\n    brentOptimizer0.doOptimize();\n}",
    "testName" : "test045"
  },
  "test056" : {
    "methodSignature" : "public UnivariatePointValuePair optimize(int maxEval, UnivariateFunction f, GoalType goalType, double min, double max, double startValue)",
    "methodName" : "optimize",
    "className" : "org.apache.commons.math3.optimization.univariate.BrentOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056() throws Throwable {\n    BrentOptimizer brentOptimizer0 = new BrentOptimizer(3038.8573290628333, 3038.8573290628333);\n    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator((-2153.3921348511344), 2918, 3038.8573290628333);\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    brentOptimizer0.optimize(2144511069, (UnivariateFunction) harmonicOscillator0, goalType0, (-508.0), (-7.049068240916723E166), (double) 2144511069);\n}",
    "testName" : "test056"
  },
  "test067" : {
    "methodSignature" : "protected UnivariatePointValuePair doOptimize()",
    "methodName" : "doOptimize",
    "className" : "org.apache.commons.math3.optimization.univariate.BrentOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067() throws Throwable {\n    BrentOptimizer brentOptimizer0 = new BrentOptimizer(1.0, 1.0);\n    Abs abs0 = new Abs();\n    GoalType goalType0 = GoalType.MAXIMIZE;\n    brentOptimizer0.optimize(17, (UnivariateFunction) abs0, goalType0, 2654.49, 549.35120909645, 1.0);\n    brentOptimizer0.doOptimize();\n}",
    "testName" : "test067"
  },
  "test078" : {
    "methodSignature" : "public BrentOptimizer(double rel, double abs, ConvergenceChecker<UnivariatePointValuePair> checker)",
    "methodName" : "BrentOptimizer",
    "className" : "org.apache.commons.math3.optimization.univariate.BrentOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078() throws Throwable {\n    ConvergenceChecker<UnivariatePointValuePair> convergenceChecker0 = (ConvergenceChecker<UnivariatePointValuePair>) mock(ConvergenceChecker.class, new ViolatedAssumptionAnswer());\n    BrentOptimizer brentOptimizer0 = null;\n    brentOptimizer0 = new BrentOptimizer((-34.0), (-34.0), convergenceChecker0);\n}",
    "testName" : "test078"
  },
  "test089" : {
    "methodSignature" : "public BrentOptimizer(double rel, double abs, ConvergenceChecker<UnivariatePointValuePair> checker)",
    "methodName" : "BrentOptimizer",
    "className" : "org.apache.commons.math3.optimization.univariate.BrentOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089() throws Throwable {\n    BrentOptimizer brentOptimizer0 = new BrentOptimizer(0.9808930158615112, 0.9808930158615112, (ConvergenceChecker<UnivariatePointValuePair>) null);\n}",
    "testName" : "test089"
  },
  "test0910" : {
    "methodSignature" : "public BrentOptimizer(double rel, double abs, ConvergenceChecker<UnivariatePointValuePair> checker)",
    "methodName" : "BrentOptimizer",
    "className" : "org.apache.commons.math3.optimization.univariate.BrentOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0910() throws Throwable {\n    ConvergenceChecker<UnivariatePointValuePair> convergenceChecker0 = (ConvergenceChecker<UnivariatePointValuePair>) mock(ConvergenceChecker.class, new ViolatedAssumptionAnswer());\n    BrentOptimizer brentOptimizer0 = null;\n    brentOptimizer0 = new BrentOptimizer(805.80288612552, (-1661.1974), convergenceChecker0);\n}",
    "testName" : "test0910"
  }
}