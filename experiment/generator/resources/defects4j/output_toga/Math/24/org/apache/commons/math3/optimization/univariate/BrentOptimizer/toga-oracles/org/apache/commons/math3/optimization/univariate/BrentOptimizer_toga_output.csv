project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    BrentOptimizer brentOptimizer0 = null;
    try {
        brentOptimizer0 = new BrentOptimizer((-3.356118100840571E-7), (-3.356118100840571E-7));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // -0 is smaller than the minimum (0)
        //
        verifyException(""org.apache.commons.math3.optimization.univariate.BrentOptimizer"", e);
    }
}",0,
project,0,test011,"public void test011() throws Throwable {
    BrentOptimizer brentOptimizer0 = null;
    try {
        brentOptimizer0 = new BrentOptimizer(1034.718748, (-1728.0852664));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // -1,728.085 is smaller than, or equal to, the minimum (0)
        //
        verifyException(""org.apache.commons.math3.optimization.univariate.BrentOptimizer"", e);
    }
}",0,
project,0,test022,"public void test022() throws Throwable {
    BrentOptimizer brentOptimizer0 = new BrentOptimizer(721.4313229246643, 721.4313229246643);
    Asin asin0 = new Asin();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariatePointValuePair univariatePointValuePair0 = brentOptimizer0.optimize(334, (UnivariateFunction) asin0, goalType0, 1445.23141598, 1445.23141598, 1.12996721591364E-202);
    assertEquals(721.4313229246643, univariatePointValuePair0.getPoint(), 0.01);
}",0,
project,0,test033,"public void test033() throws Throwable {
    BrentOptimizer brentOptimizer0 = new BrentOptimizer(721.4313229246643, 721.4313229246643);
    Asin asin0 = new Asin();
    GoalType goalType0 = GoalType.MAXIMIZE;
    UnivariatePointValuePair univariatePointValuePair0 = brentOptimizer0.optimize(4687, (UnivariateFunction) asin0, goalType0, 3.0, (double) 334);
    assertEquals(Double.NaN, univariatePointValuePair0.getValue(), 0.01);
}",0,
project,0,test034,"public void test034() throws Throwable {
    BrentOptimizer brentOptimizer0 = new BrentOptimizer(721.4313229246643, 721.4313229246643);
    Asin asin0 = new Asin();
    GoalType goalType0 = GoalType.MAXIMIZE;
    UnivariatePointValuePair univariatePointValuePair0 = brentOptimizer0.optimize(4687, (UnivariateFunction) asin0, goalType0, 3.0, (double) 334);
    assertEquals(168.5, univariatePointValuePair0.getPoint(), 0.01);
}",0,
project,0,test045,"public void test045() throws Throwable {
    BrentOptimizer brentOptimizer0 = new BrentOptimizer(1249.2, 1249.2);
    Ceil ceil0 = new Ceil();
    GoalType goalType0 = GoalType.MAXIMIZE;
    brentOptimizer0.optimize(2145249207, (UnivariateFunction) ceil0, goalType0, 1249.2, (-1.8740018211089393E288), (double) 2145249207);
    brentOptimizer0.doOptimize();
    brentOptimizer0.doOptimize();
    // Undeclared exception!
    brentOptimizer0.doOptimize();
}",0,
project,0,test056,"public void test056() throws Throwable {
    BrentOptimizer brentOptimizer0 = new BrentOptimizer(3038.8573290628333, 3038.8573290628333);
    HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator((-2153.3921348511344), 2918, 3038.8573290628333);
    GoalType goalType0 = GoalType.MAXIMIZE;
    brentOptimizer0.optimize(2144511069, (UnivariateFunction) harmonicOscillator0, goalType0, (-508.0), (-7.049068240916723E166), (double) 2144511069);
}",0,
project,0,test067,"public void test067() throws Throwable {
    BrentOptimizer brentOptimizer0 = new BrentOptimizer(1.0, 1.0);
    Abs abs0 = new Abs();
    GoalType goalType0 = GoalType.MAXIMIZE;
    brentOptimizer0.optimize(17, (UnivariateFunction) abs0, goalType0, 2654.49, 549.35120909645, 1.0);
    brentOptimizer0.doOptimize();
}",0,
project,0,test078,"public void test078() throws Throwable {
    ConvergenceChecker<UnivariatePointValuePair> convergenceChecker0 = (ConvergenceChecker<UnivariatePointValuePair>) mock(ConvergenceChecker.class, new ViolatedAssumptionAnswer());
    BrentOptimizer brentOptimizer0 = null;
    try {
        brentOptimizer0 = new BrentOptimizer((-34.0), (-34.0), convergenceChecker0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // -34 is smaller than the minimum (0)
        //
        verifyException(""org.apache.commons.math3.optimization.univariate.BrentOptimizer"", e);
    }
}",0,
project,0,test089,"public void test089() throws Throwable {
    BrentOptimizer brentOptimizer0 = new BrentOptimizer(0.9808930158615112, 0.9808930158615112, (ConvergenceChecker<UnivariatePointValuePair>) null);
}",0,
project,0,test0910,"public void test0910() throws Throwable {
    ConvergenceChecker<UnivariatePointValuePair> convergenceChecker0 = (ConvergenceChecker<UnivariatePointValuePair>) mock(ConvergenceChecker.class, new ViolatedAssumptionAnswer());
    BrentOptimizer brentOptimizer0 = null;
    try {
        brentOptimizer0 = new BrentOptimizer(805.80288612552, (-1661.1974), convergenceChecker0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // -1,661.197 is smaller than, or equal to, the minimum (0)
        //
        verifyException(""org.apache.commons.math3.optimization.univariate.BrentOptimizer"", e);
    }
}",0,
project,0,test1011,"public void test1011() throws Throwable {
    BrentOptimizer brentOptimizer0 = new BrentOptimizer(1.0, 1.0);
    // Undeclared exception!
    try {
        brentOptimizer0.doOptimize();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // illegal state: maximal count (0) exceeded: evaluations
        //
        verifyException(""org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer"", e);
    }
}",0,
project,0,test1112,"public void test1112() throws Throwable {
    BrentOptimizer brentOptimizer0 = new BrentOptimizer(1881.1, 3.0);
    Cbrt cbrt0 = new Cbrt();
    GoalType goalType0 = GoalType.MINIMIZE;
    brentOptimizer0.optimize(42, (UnivariateFunction) cbrt0, goalType0, 5.0, (double) 0, (double) 0);
    brentOptimizer0.doOptimize();
}",0,
project,0,test1213,"public void test1213() throws Throwable {
    BrentOptimizer brentOptimizer0 = new BrentOptimizer(3052.9454376443, 3052.9454376443);
    GoalType goalType0 = GoalType.MINIMIZE;
    Acos acos0 = new Acos();
    brentOptimizer0.optimize(2944, (UnivariateFunction) acos0, goalType0, 3.1780704338483322E165, (-1451.669414), 1445.23141598);
}",0,
