project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation((-323), (-323));
}",0,
project,0,test011,"public void test011() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(3542, 0.21449066);
    elitisticListPopulation0.toString();
    int int0 = (-1108);
    elitisticListPopulation0.setPopulationLimit((-1108));
    double double0 = 0.9;
    // Undeclared exception!
    try {
        elitisticListPopulation0.setElitismRate(double0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // population limit has to be positive
        //
        verifyException(""org.apache.commons.math3.genetics.ListPopulation"", e);
    }
}",1,
project,0,test022,"public void test022() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation((List<Chromosome>) null, 3535, 3535);
}",0,
project,0,test033,"public void test033() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(1, 1);
    elitisticListPopulation0.addChromosome((Chromosome) null);
    elitisticListPopulation0.addChromosome((Chromosome) null);
}",1,
project,0,test055,"public void test055() throws Throwable {
    LinkedList<Chromosome> linkedList0 = new LinkedList<Chromosome>();
    linkedList0.add((Chromosome) null);
    linkedList0.offer((Chromosome) null);
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(linkedList0, 1, 1);
    elitisticListPopulation0.toString();
}",0,
project,0,test066,"public void test066() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(1, 1);
    LinkedList<Chromosome> linkedList0 = new LinkedList<Chromosome>();
    linkedList0.offer((Chromosome) null);
    elitisticListPopulation0.getChromosomes();
    ElitisticListPopulation elitisticListPopulation1 = (ElitisticListPopulation) elitisticListPopulation0.nextGeneration();
    elitisticListPopulation0.getPopulationSize();
    elitisticListPopulation1.iterator();
    elitisticListPopulation1.addChromosome((Chromosome) null);
    elitisticListPopulation1.addChromosomes(linkedList0);
}",1,
project,0,test077,"public void test077() throws Throwable {
    int int0 = 3227;
    double double0 = 0.9;
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(3227, 0.9);
    elitisticListPopulation0.setChromosomes((List<Chromosome>) null);
    // Undeclared exception!
    try {
        elitisticListPopulation0.getChromosomes();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // null is not allowed
        //
        verifyException(""org.apache.commons.math3.genetics.ListPopulation"", e);
    }
}",1,
project,0,test088,"public void test088() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(1, 1);
    LinkedList<Chromosome> linkedList0 = new LinkedList<Chromosome>();
    linkedList0.add((Chromosome) null);
    linkedList0.add((Chromosome) null);
    elitisticListPopulation0.setChromosomes(linkedList0);
    elitisticListPopulation0.getPopulationSize();
    // Undeclared exception!
    try {
        elitisticListPopulation0.iterator();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // list of chromosomes bigger than maxPopulationSize
        //
        verifyException(""org.apache.commons.math3.genetics.ListPopulation"", e);
    }
}",0,
project,0,test099,"public void test099() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(1, 1);
    LinkedList<Chromosome> linkedList0 = new LinkedList<Chromosome>();
    elitisticListPopulation0.setPopulationLimit(1499);
    linkedList0.add((Chromosome) null);
    linkedList0.offer((Chromosome) null);
    elitisticListPopulation0.setChromosomes(linkedList0);
    elitisticListPopulation0.setPopulationLimit(1);
    LinkedList<Chromosome> linkedList1 = new LinkedList<Chromosome>();
    ElitisticListPopulation elitisticListPopulation1 = (ElitisticListPopulation) elitisticListPopulation0.nextGeneration();
    // Undeclared exception!
    try {
        elitisticListPopulation1.setChromosomes(linkedList0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // 1 is smaller than the minimum (2)
        //
        verifyException(""org.apache.commons.math3.genetics.ListPopulation"", e);
    }
}",1,
project,0,test1010,"public void test1010() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(1, 1);
    elitisticListPopulation0.addChromosome((Chromosome) null);
    elitisticListPopulation0.getFittestChromosome();
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation((-279), (-279));
    // Undeclared exception!
    try {
        elitisticListPopulation0.getChromosomeList();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // population limit has to be positive
        //
        verifyException(""org.apache.commons.math3.genetics.ListPopulation"", e);
    }
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(184, 0.0);
    elitisticListPopulation0.getChromosomes();
}",1,
project,0,test1313,"public void test1313() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation((List<Chromosome>) null, 189, (-212.6545));
    elitisticListPopulation0.getChromosomes();
}",1,
project,0,test1414,"public void test1414() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(925, 0.0);
    List<Chromosome> list0 = elitisticListPopulation0.getChromosomes();
    elitisticListPopulation0.setChromosomes(list0);
    elitisticListPopulation0.getFittestChromosome();
    elitisticListPopulation0.setChromosomes(list0);
}",1,
project,0,test1515,"public void test1515() throws Throwable {
    double double0 = 0.0;
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(298, 0.0);
    elitisticListPopulation0.getFittestChromosome();
    // Undeclared exception!
    try {
        elitisticListPopulation0.getFittestChromosome();
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test1616,"public void test1616() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(1, 0.0);
    LinkedList<Chromosome> linkedList0 = new LinkedList<Chromosome>();
    elitisticListPopulation0.addChromosomes(linkedList0);
    elitisticListPopulation0.toString();
    elitisticListPopulation0.nextGeneration();
}",0,
project,0,test1717,"public void test1717() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(2312, 0.0);
    elitisticListPopulation0.getChromosomeList();
    elitisticListPopulation0.toString();
    Chromosome chromosome0 = elitisticListPopulation0.getFittestChromosome();
    elitisticListPopulation0.addChromosome(chromosome0);
    // Undeclared exception!
    try {
        elitisticListPopulation0.getChromosomes();
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",1,
project,0,test1818,"public void test1818() throws Throwable {
    LinkedList<Chromosome> linkedList0 = new LinkedList<Chromosome>();
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(linkedList0, 372, 0.0);
    elitisticListPopulation0.iterator();
}",0,
project,0,test1919,"public void test1919() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(29, 0.0);
    elitisticListPopulation0.setPopulationLimit((-3288));
    elitisticListPopulation0.getFittestChromosome();
    elitisticListPopulation0.getPopulationSize();
    // Undeclared exception!
    try {
        elitisticListPopulation0.getChromosomes();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // population limit has to be positive
        //
        verifyException(""org.apache.commons.math3.genetics.ListPopulation"", e);
    }
}",1,
project,0,test2222,"public void test2222() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(3153, 0.0);
    elitisticListPopulation0.getPopulationLimit();
}",0,
project,0,test2323,"public void test2323() throws Throwable {
    int int0 = 1;
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(1, 1);
    int int1 = 0;
    // Undeclared exception!
    try {
        elitisticListPopulation0.setPopulationLimit(0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // population limit has to be positive
        //
        verifyException(""org.apache.commons.math3.genetics.ListPopulation"", e);
    }
}",1,
project,0,test2424,"public void test2424() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(2983, 0.0);
    elitisticListPopulation0.addChromosomes((Collection<Chromosome>) null);
}",1,
project,0,test2525,"public void test2525() throws Throwable {
    int int0 = 3236;
    double double0 = 0.9;
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(3236, 0.9);
    elitisticListPopulation0.setChromosomes((List<Chromosome>) null);
    // Undeclared exception!
    try {
        elitisticListPopulation0.getChromosomes();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // null is not allowed
        //
        verifyException(""org.apache.commons.math3.genetics.ListPopulation"", e);
    }
}",1,
project,0,test2626,"public void test2626() throws Throwable {
    LinkedList<Chromosome> linkedList0 = new LinkedList<Chromosome>();
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(linkedList0, 345, 1.0);
    elitisticListPopulation0.getPopulationSize();
}",0,
project,0,test2727,"public void test2727() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(1, 1);
    List<Chromosome> list0 = elitisticListPopulation0.getChromosomeList();
    elitisticListPopulation0.addChromosomes(list0);
    List<Chromosome> list1 = elitisticListPopulation0.getChromosomes();
    elitisticListPopulation0.setChromosomes(list1);
    elitisticListPopulation0.setPopulationLimit(1);
    int int0 = new Integer(1);
    Population population0 = elitisticListPopulation0.nextGeneration();
    elitisticListPopulation0.getPopulationLimit();
    elitisticListPopulation0.getPopulationSize();
    elitisticListPopulation0.setChromosomes(list1);
    population0.addChromosome((Chromosome) null);
}",0,
project,0,test2828,"public void test2828() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(1, 1);
    List<Chromosome> list0 = elitisticListPopulation0.getChromosomeList();
    elitisticListPopulation0.addChromosomes(list0);
    Integer integer0 = new Integer(1);
    elitisticListPopulation0.getPopulationLimit();
    elitisticListPopulation0.getPopulationSize();
    elitisticListPopulation0.setChromosomes(list0);
    elitisticListPopulation0.addChromosome((Chromosome) null);
    elitisticListPopulation0.setChromosomes(list0);
    elitisticListPopulation0.setChromosomes(list0);
    elitisticListPopulation0.getElitismRate();
}",0,
project,0,test2929,"public void test2929() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(1, 1);
    List<Chromosome> list0 = elitisticListPopulation0.getChromosomeList();
    elitisticListPopulation0.addChromosomes(list0);
    List<Chromosome> list1 = elitisticListPopulation0.getChromosomes();
    elitisticListPopulation0.setChromosomes(list1);
    elitisticListPopulation0.setPopulationLimit(1);
    ElitisticListPopulation elitisticListPopulation1 = (ElitisticListPopulation) elitisticListPopulation0.nextGeneration();
    elitisticListPopulation0.spliterator();
    elitisticListPopulation0.getPopulationLimit();
    elitisticListPopulation0.getPopulationSize();
    elitisticListPopulation0.setChromosomes(list1);
    elitisticListPopulation1.addChromosome((Chromosome) null);
    elitisticListPopulation1.getChromosomeList();
}",0,
project,0,test3030,"public void test3030() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(1, 1);
    List<Chromosome> list0 = elitisticListPopulation0.getChromosomeList();
    elitisticListPopulation0.addChromosomes(list0);
    List<Chromosome> list1 = elitisticListPopulation0.getChromosomes();
    elitisticListPopulation0.setChromosomes(list1);
    elitisticListPopulation0.setPopulationLimit(1);
    Integer integer0 = new Integer(1);
    Population population0 = elitisticListPopulation0.nextGeneration();
    elitisticListPopulation0.getPopulationLimit();
    elitisticListPopulation0.getPopulationSize();
    elitisticListPopulation0.setChromosomes(list1);
    population0.addChromosome((Chromosome) null);
    elitisticListPopulation0.getElitismRate();
    elitisticListPopulation0.getChromosomeList();
    population0.getPopulationSize();
}",0,
project,0,test3131,"public void test3131() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(1, 1);
    List<Chromosome> list0 = elitisticListPopulation0.getChromosomeList();
    elitisticListPopulation0.addChromosomes(list0);
    List<Chromosome> list1 = elitisticListPopulation0.getChromosomes();
    elitisticListPopulation0.setPopulationLimit(1);
    Integer integer0 = new Integer(1);
    ElitisticListPopulation elitisticListPopulation1 = (ElitisticListPopulation) elitisticListPopulation0.nextGeneration();
    elitisticListPopulation0.getPopulationLimit();
    elitisticListPopulation0.nextGeneration();
    elitisticListPopulation1.setChromosomes(list1);
    elitisticListPopulation0.getPopulationSize();
    elitisticListPopulation0.setChromosomes(list1);
    elitisticListPopulation1.addChromosome((Chromosome) null);
    elitisticListPopulation1.addChromosomes(list0);
}",1,
project,0,test3232,"public void test3232() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(1, 1);
    List<Chromosome> list0 = elitisticListPopulation0.getChromosomeList();
    elitisticListPopulation0.addChromosomes(list0);
    List<Chromosome> list1 = elitisticListPopulation0.getChromosomes();
    elitisticListPopulation0.setChromosomes(list1);
    elitisticListPopulation0.setPopulationLimit(1);
    Integer integer0 = new Integer(1);
    Population population0 = elitisticListPopulation0.nextGeneration();
    int int0 = new Integer(1);
    elitisticListPopulation0.getPopulationSize();
    elitisticListPopulation0.setChromosomes(list1);
    population0.addChromosome((Chromosome) null);
    elitisticListPopulation0.getChromosomes();
    population0.addChromosome((Chromosome) null);
}",0,
project,0,test3434,"public void test3434() throws Throwable {
    int int0 = 1;
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(1, 1);
    LinkedList<Chromosome> linkedList0 = new LinkedList<Chromosome>();
    linkedList0.add((Chromosome) null);
    linkedList0.offer((Chromosome) null);
    elitisticListPopulation0.addChromosomes(linkedList0);
    // Undeclared exception!
    try {
        elitisticListPopulation0.getChromosomes();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // list of chromosomes bigger than maxPopulationSize
        //
        verifyException(""org.apache.commons.math3.genetics.ListPopulation"", e);
    }
}",0,
project,0,test3535,"public void test3535() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(1, 1);
    LinkedList<Chromosome> linkedList0 = new LinkedList<Chromosome>();
    elitisticListPopulation0.getChromosomes();
    linkedList0.add((Chromosome) null);
    linkedList0.offer((Chromosome) null);
    elitisticListPopulation0.setPopulationLimit(1);
    LinkedList<Chromosome> linkedList1 = new LinkedList<Chromosome>();
    linkedList0.addAll((Collection<? extends Chromosome>) linkedList1);
    ElitisticListPopulation elitisticListPopulation1 = (ElitisticListPopulation) elitisticListPopulation0.nextGeneration();
    elitisticListPopulation1.setChromosomes(linkedList0);
    elitisticListPopulation0.getPopulationSize();
    // Undeclared exception!
    try {
        elitisticListPopulation1.iterator();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // list of chromosomes bigger than maxPopulationSize
        //
        verifyException(""org.apache.commons.math3.genetics.ListPopulation"", e);
    }
}",0,
project,0,test3636,"public void test3636() throws Throwable {
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(1, 1);
    LinkedList<Chromosome> linkedList0 = new LinkedList<Chromosome>();
    elitisticListPopulation0.setPopulationLimit(1512);
    linkedList0.add((Chromosome) null);
    linkedList0.offer((Chromosome) null);
    elitisticListPopulation0.setChromosomes(linkedList0);
    elitisticListPopulation0.setPopulationLimit(1);
    LinkedList<Chromosome> linkedList1 = new LinkedList<Chromosome>();
    ElitisticListPopulation elitisticListPopulation1 = (ElitisticListPopulation) elitisticListPopulation0.nextGeneration();
    // Undeclared exception!
    try {
        elitisticListPopulation1.setChromosomes(linkedList0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // 1 is smaller than the minimum (2)
        //
        verifyException(""org.apache.commons.math3.genetics.ListPopulation"", e);
    }
}",1,
project,0,test3737,"public void test3737() throws Throwable {
    LinkedList<Chromosome> linkedList0 = new LinkedList<Chromosome>();
    linkedList0.add((Chromosome) null);
    linkedList0.offer((Chromosome) null);
    ElitisticListPopulation elitisticListPopulation0 = new ElitisticListPopulation(linkedList0, 1, 0.0);
    elitisticListPopulation0.getFittestChromosome();
    elitisticListPopulation0.getElitismRate();
    // Undeclared exception!
    try {
        elitisticListPopulation0.getChromosomes();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // list of chromosomes bigger than maxPopulationSize
        //
        verifyException(""org.apache.commons.math3.genetics.ListPopulation"", e);
    }
}",1,
