{
  "test122224" : {
    "methodSignature" : "public BigDecimal[] operate(double[] v) throws IllegalArgumentException",
    "methodName" : "operate",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test122224() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    double[] doubleArray1 = new double[7];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.operate(doubleArray1);\n}",
    "testName" : "test122224"
  },
  "test0000" : {
    "methodSignature" : "public BigDecimal[] getColumn(int col) throws MatrixIndexException",
    "methodName" : "getColumn",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(3376, 324);\n    bigMatrixImpl0.getColumn(3376);\n}",
    "testName" : "test0000"
  },
  "test04299" : {
    "methodSignature" : "public BigDecimal[] operate(double[] v) throws IllegalArgumentException",
    "methodName" : "operate",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04299() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    double[] doubleArray0 = new double[3];\n    bigMatrixImpl0.operate(doubleArray0);\n}",
    "testName" : "test04299"
  },
  "test102177" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102177() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getData();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test102177"
  },
  "test138254" : {
    "methodSignature" : "public BigDecimal[] getRow(int row) throws MatrixIndexException",
    "methodName" : "getRow",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test138254() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getRow(64);\n}",
    "testName" : "test138254"
  },
  "test03087" : {
    "methodSignature" : "public BigDecimal[] solve(BigDecimal[] b) throws IllegalArgumentException, InvalidMatrixException",
    "methodName" : "solve",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03087() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigMatrixImpl.ZERO;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.solve(bigDecimalArray0);\n}",
    "testName" : "test03087"
  },
  "test00921" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00921() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.subtract((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test00921"
  },
  "test127231" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test127231() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigMatrixImpl.ONE;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.luDecompose();\n    bigMatrixImpl0.solve(bigDecimalArray0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test127231"
  },
  "test01339" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01339() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    double[] doubleArray1 = new double[7];\n    doubleArray0[0] = doubleArray1;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.operate(doubleArray1);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test01339"
  },
  "test03996" : {
    "methodSignature" : "public BigMatrix preMultiply(BigMatrix m) throws IllegalArgumentException",
    "methodName" : "preMultiply",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03996() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(121, 121);\n    BigDecimal[][] bigDecimalArray0 = new BigDecimal[7][2];\n    BigMatrixImpl bigMatrixImpl1 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.preMultiply((BigMatrix) bigMatrixImpl1);\n}",
    "testName" : "test03996"
  },
  "test102176" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102176() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getData();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test102176"
  },
  "test107186" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107186() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigDecimal bigDecimal0 = new BigDecimal(0.0);\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimal0;\n    bigDecimalArray0[2] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.hashCode();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test107186"
  },
  "test127232" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test127232() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigMatrixImpl.ONE;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.luDecompose();\n    bigMatrixImpl0.solve(bigDecimalArray0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test127232"
  },
  "test01338" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01338() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    double[] doubleArray1 = new double[7];\n    doubleArray0[0] = doubleArray1;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.operate(doubleArray1);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test01338"
  },
  "test107187" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107187() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigDecimal bigDecimal0 = new BigDecimal(0.0);\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimal0;\n    bigDecimalArray0[2] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.hashCode();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test107187"
  },
  "test133244" : {
    "methodSignature" : "public BigDecimal[] getColumn(int col) throws MatrixIndexException",
    "methodName" : "getColumn",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test133244() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getColumn(1);\n}",
    "testName" : "test133244"
  },
  "test00920" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00920() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.subtract((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test00920"
  },
  "test01337" : {
    "methodSignature" : "public int getColumnDimension()",
    "methodName" : "getColumnDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01337() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    double[] doubleArray1 = new double[7];\n    doubleArray0[0] = doubleArray1;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.getColumnDimension();\n}",
    "testName" : "test01337"
  },
  "test0011" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    double[] doubleArray1 = new double[7];\n    doubleArray1[0] = 1.0;\n    doubleArray0[0] = doubleArray1;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.hashCode();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test0011"
  },
  "test144268" : {
    "methodSignature" : "public void setSubMatrix(BigDecimal[][] subMatrix, int row, int column) throws MatrixIndexException",
    "methodName" : "setSubMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test144268() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    BigDecimal[][] bigDecimalArray0 = new BigDecimal[1][2];\n    bigMatrixImpl0.setSubMatrix(bigDecimalArray0, 0, 1082);\n}",
    "testName" : "test144268"
  },
  "test0012" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0012() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    double[] doubleArray1 = new double[7];\n    doubleArray1[0] = 1.0;\n    doubleArray0[0] = doubleArray1;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.hashCode();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test0012"
  },
  "test082139" : {
    "methodSignature" : "public BigMatrixImpl(BigDecimal[][] d, boolean copyArray)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test082139() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl((BigDecimal[][]) null, true);\n}",
    "testName" : "test082139"
  },
  "test02784" : {
    "methodSignature" : "public BigMatrix transpose()",
    "methodName" : "transpose",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02784() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.transpose();\n}",
    "testName" : "test02784"
  },
  "test087144" : {
    "methodSignature" : "public void luDecompose() throws InvalidMatrixException",
    "methodName" : "luDecompose",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test087144() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[7];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.luDecompose();\n}",
    "testName" : "test087144"
  },
  "test064121" : {
    "methodSignature" : "protected BigMatrix getLUMatrix() throws InvalidMatrixException",
    "methodName" : "getLUMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test064121() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getLUMatrix();\n}",
    "testName" : "test064121"
  },
  "test181333" : {
    "methodSignature" : "public BigMatrix inverse() throws InvalidMatrixException",
    "methodName" : "inverse",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test181333() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.inverse();\n}",
    "testName" : "test181333"
  },
  "test01443" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01443() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.multiply((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test01443"
  },
  "test160298" : {
    "methodSignature" : "public BigMatrix multiply(BigMatrix m) throws IllegalArgumentException",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test160298() throws Throwable {\n    BigDecimal[][] bigDecimalArray0 = new BigDecimal[6][9];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0, true);\n    bigMatrixImpl0.multiply((BigMatrix) bigMatrixImpl0);\n}",
    "testName" : "test160298"
  },
  "test053110" : {
    "methodSignature" : "public BigMatrix getSubMatrix(int[] selectedRows, int[] selectedColumns) throws MatrixIndexException",
    "methodName" : "getSubMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test053110() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    int[] intArray0 = new int[9];\n    bigMatrixImpl0.getSubMatrix(intArray0, intArray0);\n}",
    "testName" : "test053110"
  },
  "test071128" : {
    "methodSignature" : "public BigMatrix getColumnMatrix(int column) throws MatrixIndexException",
    "methodName" : "getColumnMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test071128() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.getColumnMatrix(0);\n}",
    "testName" : "test071128"
  },
  "test116215" : {
    "methodSignature" : "public BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException",
    "methodName" : "solve",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test116215() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.solve((BigMatrix) bigMatrixImpl0);\n}",
    "testName" : "test116215"
  },
  "test186343" : {
    "methodSignature" : "public BigMatrix subtract(BigMatrix m) throws IllegalArgumentException",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test186343() throws Throwable {\n    BigDecimal[][] bigDecimalArray0 = new BigDecimal[6][9];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0, true);\n    BigMatrix bigMatrix0 = bigMatrixImpl0.transpose();\n    bigMatrixImpl0.subtract(bigMatrix0);\n}",
    "testName" : "test186343"
  },
  "test00918" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00918() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.subtract((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test00918"
  },
  "test111201" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111201() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    String string0 = bigMatrixImpl0.toString();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test111201"
  },
  "test00919" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00919() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.subtract((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test00919"
  },
  "test111202" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111202() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    String string0 = bigMatrixImpl0.toString();\n}",
    "testName" : "test111202"
  },
  "test076133" : {
    "methodSignature" : "public BigDecimal[] getColumn(int col) throws MatrixIndexException",
    "methodName" : "getColumn",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076133() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.getColumn(0);\n}",
    "testName" : "test076133"
  },
  "test111203" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111203() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    String string0 = bigMatrixImpl0.toString();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test111203"
  },
  "test00917" : {
    "methodSignature" : "public boolean equals(Object object)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00917() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.subtract((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl1.equals((Object) bigMatrixImpl0);\n}",
    "testName" : "test00917"
  },
  "test149273" : {
    "methodSignature" : "public BigMatrixImpl(BigDecimal[][] d)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test149273() throws Throwable {\n    BigDecimal[][] bigDecimalArray0 = new BigDecimal[0][7];\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n}",
    "testName" : "test149273"
  },
  "test168320" : {
    "methodSignature" : "public BigMatrixImpl(String[][] d)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test168320() throws Throwable {\n    String[][] stringArray0 = new String[6][8];\n    String[] stringArray1 = new String[2];\n    stringArray0[0] = stringArray1;\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl(stringArray0);\n}",
    "testName" : "test168320"
  },
  "test060117" : {
    "methodSignature" : "public BigDecimal getNorm()",
    "methodName" : "getNorm",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test060117() throws Throwable {\n    BigDecimal[][] bigDecimalArray0 = new BigDecimal[6][9];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0, true);\n    bigMatrixImpl0.getNorm();\n}",
    "testName" : "test060117"
  },
  "test143267" : {
    "methodSignature" : "public void setSubMatrix(BigDecimal[][] subMatrix, int row, int column) throws MatrixIndexException",
    "methodName" : "setSubMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test143267() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal[][] bigDecimalArray1 = new BigDecimal[5][3];\n    bigDecimalArray1[0] = bigDecimalArray0;\n    bigDecimalArray1[1] = bigDecimalArray0;\n    bigDecimalArray1[2] = bigDecimalArray0;\n    bigDecimalArray1[3] = bigDecimalArray0;\n    bigDecimalArray1[4] = bigDecimalArray0;\n    bigMatrixImpl0.setSubMatrix(bigDecimalArray1, 1, 0);\n}",
    "testName" : "test143267"
  },
  "test174326" : {
    "methodSignature" : "public BigMatrixImpl(double[][] d)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test174326() throws Throwable {\n    double[][] doubleArray0 = new double[0][0];\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n}",
    "testName" : "test174326"
  },
  "test0023" : {
    "methodSignature" : "public BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException",
    "methodName" : "solve",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0023() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[2];\n    BigMatrixImpl bigMatrixImpl1 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.solve((BigMatrix) bigMatrixImpl1);\n}",
    "testName" : "test0023"
  },
  "test03188" : {
    "methodSignature" : "public BigDecimal[] solve(BigDecimal[] b) throws IllegalArgumentException, InvalidMatrixException",
    "methodName" : "solve",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03188() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.solve(bigDecimalArray0);\n}",
    "testName" : "test03188"
  },
  "test159296" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test159296() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.multiply(bigMatrixImpl0);\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test159296"
  },
  "test159297" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test159297() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.multiply(bigMatrixImpl0);\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test159297"
  },
  "test081138" : {
    "methodSignature" : "public BigMatrix add(BigMatrix m) throws IllegalArgumentException",
    "methodName" : "add",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081138() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.add((BigMatrix) null);\n}",
    "testName" : "test081138"
  },
  "test01442" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01442() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.multiply((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test01442"
  },
  "test086143" : {
    "methodSignature" : "public BigMatrixImpl(BigDecimal[] v)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test086143() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl((BigDecimal[]) null);\n}",
    "testName" : "test086143"
  },
  "test01441" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01441() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.multiply((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test01441"
  },
  "test159293" : {
    "methodSignature" : "public int getRowDimension()",
    "methodName" : "getRowDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test159293() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getRowDimension();\n}",
    "testName" : "test159293"
  },
  "test01440" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01440() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.multiply((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test01440"
  },
  "test154283" : {
    "methodSignature" : "public BigMatrix getSubMatrix(int startRow, int endRow, int startColumn, int endColumn) throws MatrixIndexException",
    "methodName" : "getSubMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test154283() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getSubMatrix(0, (-2621), (-269), 31);\n}",
    "testName" : "test154283"
  },
  "test159294" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test159294() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.multiply(bigMatrixImpl0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test159294"
  },
  "test065122" : {
    "methodSignature" : "public double getEntryAsDouble(int row, int column) throws MatrixIndexException",
    "methodName" : "getEntryAsDouble",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test065122() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.getEntryAsDouble((-16), (-16));\n}",
    "testName" : "test065122"
  },
  "test159295" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test159295() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.multiply(bigMatrixImpl0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test159295"
  },
  "test163309" : {
    "methodSignature" : "public BigMatrix subtract(BigMatrix m) throws IllegalArgumentException",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test163309() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(2912, 2912);\n    BigMatrix bigMatrix0 = bigMatrixImpl0.getRowMatrix(1);\n    bigMatrixImpl0.subtract(bigMatrix0);\n}",
    "testName" : "test163309"
  },
  "test097167" : {
    "methodSignature" : "public BigMatrixImpl subtract(BigMatrixImpl m) throws IllegalArgumentException",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097167() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(121, 121);\n    BigDecimal[][] bigDecimalArray0 = new BigDecimal[7][2];\n    BigMatrixImpl bigMatrixImpl1 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl1.subtract(bigMatrixImpl0);\n}",
    "testName" : "test097167"
  },
  "test112206" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112206() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    String string0 = bigMatrixImpl0.toString();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test112206"
  },
  "test02885" : {
    "methodSignature" : "public BigMatrix transpose()",
    "methodName" : "transpose",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02885() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.transpose();\n}",
    "testName" : "test02885"
  },
  "test054111" : {
    "methodSignature" : "public BigMatrix getSubMatrix(int[] selectedRows, int[] selectedColumns) throws MatrixIndexException",
    "methodName" : "getSubMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test054111() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    int[] intArray0 = new int[9];\n    bigMatrixImpl0.getSubMatrix(intArray0, intArray0);\n}",
    "testName" : "test054111"
  },
  "test070127" : {
    "methodSignature" : "public BigDecimal[][] getData()",
    "methodName" : "getData",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test070127() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.getData();\n}",
    "testName" : "test070127"
  },
  "test092157" : {
    "methodSignature" : "public boolean isSquare()",
    "methodName" : "isSquare",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092157() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[4];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    boolean boolean0 = bigMatrixImpl0.isSquare();\n}",
    "testName" : "test092157"
  },
  "test117216" : {
    "methodSignature" : "BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException",
    "methodName" : "solve",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test117216() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrix bigMatrix0 = bigMatrixImpl0.transpose();\n    bigMatrix0.solve((BigMatrix) bigMatrixImpl0);\n}",
    "testName" : "test117216"
  },
  "test075132" : {
    "methodSignature" : "public double[] getColumnAsDoubleArray(int col) throws MatrixIndexException",
    "methodName" : "getColumnAsDoubleArray",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test075132() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getColumnAsDoubleArray((-403));\n}",
    "testName" : "test075132"
  },
  "test092155" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092155() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[4];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    boolean boolean0 = bigMatrixImpl0.isSquare();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test092155"
  },
  "test112204" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112204() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    String string0 = bigMatrixImpl0.toString();\n}",
    "testName" : "test112204"
  },
  "test092156" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092156() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[4];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    boolean boolean0 = bigMatrixImpl0.isSquare();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test092156"
  },
  "test112205" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112205() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    String string0 = bigMatrixImpl0.toString();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test112205"
  },
  "test148272" : {
    "methodSignature" : "public BigMatrixImpl(BigDecimal[][] d)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test148272() throws Throwable {\n    BigDecimal[][] bigDecimalArray0 = new BigDecimal[4][0];\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n}",
    "testName" : "test148272"
  },
  "test0034" : {
    "methodSignature" : "public BigDecimal[] preMultiply(BigDecimal[] v) throws IllegalArgumentException",
    "methodName" : "preMultiply",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0034() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[9];\n    bigMatrixImpl0.preMultiply(bigDecimalArray0);\n}",
    "testName" : "test0034"
  },
  "test043100" : {
    "methodSignature" : "public BigMatrixImpl multiply(BigMatrixImpl m) throws IllegalArgumentException",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test043100() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(467, 17);\n    bigMatrixImpl0.multiply((BigMatrixImpl) null);\n}",
    "testName" : "test043100"
  },
  "test103178" : {
    "methodSignature" : "public BigDecimal getEntry(int row, int column) throws MatrixIndexException",
    "methodName" : "getEntry",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103178() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getEntry(121, 0);\n}",
    "testName" : "test103178"
  },
  "test01545" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01545() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.inverse();\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test01545"
  },
  "test01544" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01544() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.inverse();\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test01544"
  },
  "test048105" : {
    "methodSignature" : "public boolean isSingular()",
    "methodName" : "isSingular",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test048105() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.isSingular();\n}",
    "testName" : "test048105"
  },
  "test108189" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108189() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigDecimal bigDecimal0 = new BigDecimal(0L);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.scalarMultiply(bigDecimal0);\n    boolean boolean0 = bigMatrixImpl1.equals(bigMatrixImpl0);\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test108189"
  },
  "test01546" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01546() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.inverse();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test01546"
  },
  "test108188" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108188() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigDecimal bigDecimal0 = new BigDecimal(0L);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.scalarMultiply(bigDecimal0);\n    boolean boolean0 = bigMatrixImpl1.equals(bigMatrixImpl0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test108188"
  },
  "test059116" : {
    "methodSignature" : "public BigDecimal[] getRow(int row) throws MatrixIndexException",
    "methodName" : "getRow",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test059116() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.getRow(0);\n}",
    "testName" : "test059116"
  },
  "test145269" : {
    "methodSignature" : "public void setSubMatrix(BigDecimal[][] subMatrix, int row, int column) throws MatrixIndexException",
    "methodName" : "setSubMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test145269() throws Throwable {\n    BigDecimal[][] bigDecimalArray0 = new BigDecimal[6][9];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.setSubMatrix(bigDecimalArray0, 1396, 1396);\n}",
    "testName" : "test145269"
  },
  "test165311" : {
    "methodSignature" : "public BigMatrix add(BigMatrix m) throws IllegalArgumentException",
    "methodName" : "add",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test165311() throws Throwable {\n    double[][] doubleArray0 = new double[3][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrix bigMatrix0 = bigMatrixImpl0.getRowMatrix(1);\n    bigMatrixImpl0.add(bigMatrix0);\n}",
    "testName" : "test165311"
  },
  "test176328" : {
    "methodSignature" : "public BigMatrixImpl(BigDecimal[][] d, boolean copyArray)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test176328() throws Throwable {\n    BigDecimal[][] bigDecimalArray0 = new BigDecimal[8][2];\n    BigDecimal[] bigDecimalArray1 = new BigDecimal[0];\n    bigDecimalArray0[0] = bigDecimalArray1;\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0, false);\n}",
    "testName" : "test176328"
  },
  "test03289" : {
    "methodSignature" : "public BigDecimal[] solve(BigDecimal[] b) throws IllegalArgumentException, InvalidMatrixException",
    "methodName" : "solve",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03289() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.solve(bigDecimalArray0);\n}",
    "testName" : "test03289"
  },
  "test046103" : {
    "methodSignature" : "public void luDecompose() throws InvalidMatrixException",
    "methodName" : "luDecompose",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test046103() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(64, 64);\n    bigMatrixImpl0.luDecompose();\n}",
    "testName" : "test046103"
  },
  "test140258" : {
    "methodSignature" : "public BigMatrix getColumnMatrix(int column) throws MatrixIndexException",
    "methodName" : "getColumnMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test140258() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[12];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getColumnMatrix((-3914));\n}",
    "testName" : "test140258"
  },
  "test156285" : {
    "methodSignature" : "public BigMatrix getSubMatrix(int startRow, int endRow, int startColumn, int endColumn) throws MatrixIndexException",
    "methodName" : "getSubMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test156285() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.getSubMatrix((-2415), 659, (-4553), 64);\n}",
    "testName" : "test156285"
  },
  "test063120" : {
    "methodSignature" : "protected BigMatrix getLUMatrix() throws InvalidMatrixException",
    "methodName" : "getLUMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test063120() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.getLUMatrix();\n}",
    "testName" : "test063120"
  },
  "test02986" : {
    "methodSignature" : "public BigMatrixImpl subtract(BigMatrixImpl m) throws IllegalArgumentException",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02986() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.subtract(bigMatrixImpl0);\n}",
    "testName" : "test02986"
  },
  "test151275" : {
    "methodSignature" : "public void setSubMatrix(BigDecimal[][] subMatrix, int row, int column) throws MatrixIndexException",
    "methodName" : "setSubMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test151275() throws Throwable {\n    BigDecimal[][] bigDecimalArray0 = new BigDecimal[6][9];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0, true);\n    bigMatrixImpl0.setSubMatrix(bigDecimalArray0, (-1), 11);\n}",
    "testName" : "test151275"
  },
  "test190348" : {
    "methodSignature" : "public BigMatrix copy()",
    "methodName" : "copy",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test190348() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.copy();\n}",
    "testName" : "test190348"
  },
  "test108190" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108190() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigDecimal bigDecimal0 = new BigDecimal(0L);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.scalarMultiply(bigDecimal0);\n    boolean boolean0 = bigMatrixImpl1.equals(bigMatrixImpl0);\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test108190"
  },
  "test108192" : {
    "methodSignature" : "public boolean equals(Object object)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108192() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigDecimal bigDecimal0 = new BigDecimal(0L);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.scalarMultiply(bigDecimal0);\n    boolean boolean0 = bigMatrixImpl1.equals(bigMatrixImpl0);\n}",
    "testName" : "test108192"
  },
  "test108191" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108191() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigDecimal bigDecimal0 = new BigDecimal(0L);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.scalarMultiply(bigDecimal0);\n    boolean boolean0 = bigMatrixImpl1.equals(bigMatrixImpl0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test108191"
  },
  "test123227" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test123227() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal[] bigDecimalArray1 = bigMatrixImpl0.operate(bigDecimalArray0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test123227"
  },
  "test03390" : {
    "methodSignature" : "public void setSubMatrix(BigDecimal[][] subMatrix, int row, int column) throws MatrixIndexException",
    "methodName" : "setSubMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03390() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal[][] bigDecimalArray1 = new BigDecimal[5][3];\n    bigDecimalArray1[1] = null;\n    bigMatrixImpl0.setSubMatrix(bigDecimalArray1, 1, 0);\n}",
    "testName" : "test03390"
  },
  "test123226" : {
    "methodSignature" : "public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException",
    "methodName" : "operate",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test123226() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal[] bigDecimalArray1 = bigMatrixImpl0.operate(bigDecimalArray0);\n}",
    "testName" : "test123226"
  },
  "test123225" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test123225() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal[] bigDecimalArray1 = bigMatrixImpl0.operate(bigDecimalArray0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test123225"
  },
  "test02060" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02060() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[9];\n    BigDecimal bigDecimal0 = new BigDecimal(0);\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimalArray0[0];\n    bigDecimalArray0[2] = bigDecimalArray0[1];\n    bigDecimalArray0[3] = bigDecimalArray0[1];\n    BigDecimal bigDecimal1 = new BigDecimal(834);\n    bigDecimalArray0[4] = bigDecimal1;\n    bigDecimalArray0[5] = bigDecimal0;\n    bigDecimalArray0[6] = bigDecimalArray0[4];\n    bigDecimalArray0[7] = bigDecimalArray0[2];\n    bigDecimalArray0[8] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal bigDecimal2 = bigMatrixImpl0.getNorm();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test02060"
  },
  "test068125" : {
    "methodSignature" : "public double[][] getDataAsDoubleArray()",
    "methodName" : "getDataAsDoubleArray",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068125() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.getDataAsDoubleArray();\n}",
    "testName" : "test068125"
  },
  "test128236" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test128236() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigMatrixImpl.ONE;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal bigDecimal1 = bigMatrixImpl0.getDeterminant();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test128236"
  },
  "test02062" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02062() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[9];\n    BigDecimal bigDecimal0 = new BigDecimal(0);\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimalArray0[0];\n    bigDecimalArray0[2] = bigDecimalArray0[1];\n    bigDecimalArray0[3] = bigDecimalArray0[1];\n    BigDecimal bigDecimal1 = new BigDecimal(834);\n    bigDecimalArray0[4] = bigDecimal1;\n    bigDecimalArray0[5] = bigDecimal0;\n    bigDecimalArray0[6] = bigDecimalArray0[4];\n    bigDecimalArray0[7] = bigDecimalArray0[2];\n    bigDecimalArray0[8] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal bigDecimal2 = bigMatrixImpl0.getNorm();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test02062"
  },
  "test096166" : {
    "methodSignature" : "public BigMatrixImpl subtract(BigMatrixImpl m) throws IllegalArgumentException",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096166() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.subtract(bigMatrixImpl0);\n}",
    "testName" : "test096166"
  },
  "test179331" : {
    "methodSignature" : "public BigMatrixImpl(int rowDimension, int columnDimension)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test179331() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl(7, (-668));\n}",
    "testName" : "test179331"
  },
  "test052109" : {
    "methodSignature" : "public BigDecimal getTrace() throws IllegalArgumentException",
    "methodName" : "getTrace",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test052109() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getTrace();\n}",
    "testName" : "test052109"
  },
  "test01648" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01648() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal bigDecimal0 = bigMatrixImpl0.getTrace();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test01648"
  },
  "test091151" : {
    "methodSignature" : "public int getColumnDimension()",
    "methodName" : "getColumnDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test091151() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigDecimal[][] bigDecimalArray0 = bigMatrixImpl0.getDataRef();\n    bigMatrixImpl0.lu = bigDecimalArray0;\n    boolean boolean0 = bigMatrixImpl0.isSingular();\n    bigMatrixImpl0.getColumnDimension();\n}",
    "testName" : "test091151"
  },
  "test128233" : {
    "methodSignature" : "public boolean isSquare()",
    "methodName" : "isSquare",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test128233() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigMatrixImpl.ONE;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.isSquare();\n}",
    "testName" : "test128233"
  },
  "test01647" : {
    "methodSignature" : "public BigDecimal getTrace() throws IllegalArgumentException",
    "methodName" : "getTrace",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01647() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal bigDecimal0 = bigMatrixImpl0.getTrace();\n}",
    "testName" : "test01647"
  },
  "test128235" : {
    "methodSignature" : "public BigDecimal getDeterminant() throws InvalidMatrixException",
    "methodName" : "getDeterminant",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test128235() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigMatrixImpl.ONE;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal bigDecimal1 = bigMatrixImpl0.getDeterminant();\n}",
    "testName" : "test128235"
  },
  "test128234" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test128234() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigMatrixImpl.ONE;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal bigDecimal1 = bigMatrixImpl0.getDeterminant();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test128234"
  },
  "test091154" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test091154() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigDecimal[][] bigDecimalArray0 = bigMatrixImpl0.getDataRef();\n    bigMatrixImpl0.lu = bigDecimalArray0;\n    boolean boolean0 = bigMatrixImpl0.isSingular();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test091154"
  },
  "test057114" : {
    "methodSignature" : "public BigMatrix getRowMatrix(int row) throws MatrixIndexException",
    "methodName" : "getRowMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test057114() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getRowMatrix(0);\n}",
    "testName" : "test057114"
  },
  "test091153" : {
    "methodSignature" : "public boolean isSingular()",
    "methodName" : "isSingular",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test091153() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigDecimal[][] bigDecimalArray0 = bigMatrixImpl0.getDataRef();\n    bigMatrixImpl0.lu = bigDecimalArray0;\n    boolean boolean0 = bigMatrixImpl0.isSingular();\n}",
    "testName" : "test091153"
  },
  "test01649" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01649() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal bigDecimal0 = bigMatrixImpl0.getTrace();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test01649"
  },
  "test091152" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test091152() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigDecimal[][] bigDecimalArray0 = bigMatrixImpl0.getDataRef();\n    bigMatrixImpl0.lu = bigDecimalArray0;\n    boolean boolean0 = bigMatrixImpl0.isSingular();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test091152"
  },
  "test124228" : {
    "methodSignature" : "public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException",
    "methodName" : "operate",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test124228() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.operate(bigDecimalArray0);\n}",
    "testName" : "test124228"
  },
  "test170322" : {
    "methodSignature" : "public BigMatrixImpl(String[][] d)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test170322() throws Throwable {\n    String[][] stringArray0 = new String[1][3];\n    String[] stringArray1 = new String[0];\n    stringArray0[0] = stringArray1;\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl(stringArray0);\n}",
    "testName" : "test170322"
  },
  "test129238" : {
    "methodSignature" : "public BigDecimal getDeterminant() throws InvalidMatrixException",
    "methodName" : "getDeterminant",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test129238() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.getDeterminant();\n}",
    "testName" : "test129238"
  },
  "test069126" : {
    "methodSignature" : "public double[][] getDataAsDoubleArray()",
    "methodName" : "getDataAsDoubleArray",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test069126() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getDataAsDoubleArray();\n}",
    "testName" : "test069126"
  },
  "test150274" : {
    "methodSignature" : "public void setSubMatrix(BigDecimal[][] subMatrix, int row, int column) throws MatrixIndexException",
    "methodName" : "setSubMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test150274() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal[][] bigDecimalArray1 = new BigDecimal[5][3];\n    bigMatrixImpl0.setSubMatrix(bigDecimalArray1, 1, (-24));\n}",
    "testName" : "test150274"
  },
  "test104179" : {
    "methodSignature" : "public int getColumnDimension()",
    "methodName" : "getColumnDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104179() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getColumnDimension();\n}",
    "testName" : "test104179"
  },
  "test180332" : {
    "methodSignature" : "public BigMatrixImpl(int rowDimension, int columnDimension)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test180332() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl((-741), (-881));\n}",
    "testName" : "test180332"
  },
  "test01752" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01752() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal bigDecimal1 = bigMatrixImpl0.getTrace();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test01752"
  },
  "test047104" : {
    "methodSignature" : "public boolean isSquare()",
    "methodName" : "isSquare",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test047104() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.isSquare();\n}",
    "testName" : "test047104"
  },
  "test161299" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test161299() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigDecimal bigDecimal0 = new BigDecimal(0.0);\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimalArray0[0];\n    bigDecimalArray0[2] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.scalarAdd(bigDecimal0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test161299"
  },
  "test113210" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113210() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.data = null;\n    String string0 = bigMatrixImpl0.toString();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test113210"
  },
  "test185341" : {
    "methodSignature" : "public int getRowDimension()",
    "methodName" : "getRowDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test185341() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    int int0 = bigMatrixImpl0.getScale();\n    bigMatrixImpl0.getRowDimension();\n}",
    "testName" : "test185341"
  },
  "test185342" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test185342() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    int int0 = bigMatrixImpl0.getScale();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test185342"
  },
  "test058115" : {
    "methodSignature" : "public double[] getRowAsDoubleArray(int row) throws MatrixIndexException",
    "methodName" : "getRowAsDoubleArray",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test058115() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getRowAsDoubleArray(1916);\n}",
    "testName" : "test058115"
  },
  "test079136" : {
    "methodSignature" : "public BigMatrixImpl add(BigMatrixImpl m) throws IllegalArgumentException",
    "methodName" : "add",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079136() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.add((BigMatrixImpl) null);\n}",
    "testName" : "test079136"
  },
  "test185340" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test185340() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    int int0 = bigMatrixImpl0.getScale();\n}",
    "testName" : "test185340"
  },
  "test169321" : {
    "methodSignature" : "public BigMatrixImpl(String[][] d)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test169321() throws Throwable {\n    String[][] stringArray0 = new String[6][8];\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl(stringArray0);\n}",
    "testName" : "test169321"
  },
  "test03491" : {
    "methodSignature" : "public BigMatrix scalarMultiply(BigDecimal d)",
    "methodName" : "scalarMultiply",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03491() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.scalarMultiply((BigDecimal) null);\n}",
    "testName" : "test03491"
  },
  "test085142" : {
    "methodSignature" : "public BigMatrixImpl(double[][] d)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test085142() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl((double[][]) null);\n}",
    "testName" : "test085142"
  },
  "test175327" : {
    "methodSignature" : "public BigMatrixImpl(BigDecimal[][] d, boolean copyArray)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test175327() throws Throwable {\n    BigDecimal[][] bigDecimalArray0 = new BigDecimal[6][4];\n    BigDecimal[] bigDecimalArray1 = new BigDecimal[3];\n    bigDecimalArray0[0] = bigDecimalArray1;\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0, false);\n}",
    "testName" : "test175327"
  },
  "test02164" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02164() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.getEntryAsDouble(0, 0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test02164"
  },
  "test139257" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test139257() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal[] bigDecimalArray1 = bigMatrixImpl0.getRow(0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test139257"
  },
  "test02163" : {
    "methodSignature" : "public int getColumnDimension()",
    "methodName" : "getColumnDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02163() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.getEntryAsDouble(0, 0);\n    bigMatrixImpl0.getColumnDimension();\n}",
    "testName" : "test02163"
  },
  "test139256" : {
    "methodSignature" : "public BigDecimal[] getRow(int row) throws MatrixIndexException",
    "methodName" : "getRow",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test139256() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal[] bigDecimalArray1 = bigMatrixImpl0.getRow(0);\n}",
    "testName" : "test139256"
  },
  "test080137" : {
    "methodSignature" : "public BigMatrix add(BigMatrix m) throws IllegalArgumentException",
    "methodName" : "add",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test080137() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.add((BigMatrix) bigMatrixImpl0);\n}",
    "testName" : "test080137"
  },
  "test139255" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test139255() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal[] bigDecimalArray1 = bigMatrixImpl0.getRow(0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test139255"
  },
  "test01750" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01750() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal bigDecimal1 = bigMatrixImpl0.getTrace();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test01750"
  },
  "test155284" : {
    "methodSignature" : "public BigMatrix getSubMatrix(int startRow, int endRow, int startColumn, int endColumn) throws MatrixIndexException",
    "methodName" : "getSubMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test155284() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getSubMatrix(0, 0, 0, 0);\n}",
    "testName" : "test155284"
  },
  "test02165" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02165() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.getEntryAsDouble(0, 0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test02165"
  },
  "test113207" : {
    "methodSignature" : "public int getColumnDimension()",
    "methodName" : "getColumnDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113207() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.getColumnDimension();\n}",
    "testName" : "test113207"
  },
  "test134247" : {
    "methodSignature" : "public boolean isSquare()",
    "methodName" : "isSquare",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test134247() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(2912, 2912);\n    BigDecimal[] bigDecimalArray0 = bigMatrixImpl0.getColumn(11);\n    bigMatrixImpl0.isSquare();\n}",
    "testName" : "test134247"
  },
  "test113208" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113208() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.data = null;\n    String string0 = bigMatrixImpl0.toString();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test113208"
  },
  "test134246" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test134246() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(2912, 2912);\n    BigDecimal[] bigDecimalArray0 = bigMatrixImpl0.getColumn(11);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test134246"
  },
  "test113209" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113209() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.data = null;\n    String string0 = bigMatrixImpl0.toString();\n}",
    "testName" : "test113209"
  },
  "test134248" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test134248() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(2912, 2912);\n    BigDecimal[] bigDecimalArray0 = bigMatrixImpl0.getColumn(11);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test134248"
  },
  "test134245" : {
    "methodSignature" : "public BigDecimal[] getColumn(int col) throws MatrixIndexException",
    "methodName" : "getColumn",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test134245() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(2912, 2912);\n    BigDecimal[] bigDecimalArray0 = bigMatrixImpl0.getColumn(11);\n}",
    "testName" : "test134245"
  },
  "test109195" : {
    "methodSignature" : "public int getColumnDimension()",
    "methodName" : "getColumnDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109195() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    boolean boolean0 = bigMatrixImpl0.equals(bigMatrixImpl0);\n    bigMatrixImpl0.getColumnDimension();\n}",
    "testName" : "test109195"
  },
  "test109194" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109194() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    boolean boolean0 = bigMatrixImpl0.equals(bigMatrixImpl0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test109194"
  },
  "test118217" : {
    "methodSignature" : "public BigDecimal[] solve(double[] b) throws IllegalArgumentException, InvalidMatrixException",
    "methodName" : "solve",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118217() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    double[] doubleArray0 = new double[4];\n    bigMatrixImpl0.solve(doubleArray0);\n}",
    "testName" : "test118217"
  },
  "test164310" : {
    "methodSignature" : "public BigMatrix subtract(BigMatrix m) throws IllegalArgumentException",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test164310() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(2912, 2912);\n    bigMatrixImpl0.subtract((BigMatrix) bigMatrixImpl0);\n}",
    "testName" : "test164310"
  },
  "test109196" : {
    "methodSignature" : "public boolean equals(Object object)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109196() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    boolean boolean0 = bigMatrixImpl0.equals(bigMatrixImpl0);\n}",
    "testName" : "test109196"
  },
  "test074131" : {
    "methodSignature" : "public double[] getColumnAsDoubleArray(int col) throws MatrixIndexException",
    "methodName" : "getColumnAsDoubleArray",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test074131() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.getColumnAsDoubleArray((-1));\n}",
    "testName" : "test074131"
  },
  "test109193" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109193() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    boolean boolean0 = bigMatrixImpl0.equals(bigMatrixImpl0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test109193"
  },
  "test141262" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test141262() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    double[] doubleArray1 = new double[7];\n    doubleArray0[0] = doubleArray1;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getColumnMatrix(6);\n    BigDecimal bigDecimal0 = bigMatrixImpl1.getTrace();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test141262"
  },
  "test141263" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test141263() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    double[] doubleArray1 = new double[7];\n    doubleArray0[0] = doubleArray1;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getColumnMatrix(6);\n    BigDecimal bigDecimal0 = bigMatrixImpl1.getTrace();\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test141263"
  },
  "test141260" : {
    "methodSignature" : "public boolean isSquare()",
    "methodName" : "isSquare",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test141260() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    double[] doubleArray1 = new double[7];\n    doubleArray0[0] = doubleArray1;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getColumnMatrix(6);\n    bigMatrixImpl1.isSquare();\n}",
    "testName" : "test141260"
  },
  "test084141" : {
    "methodSignature" : "public BigMatrixImpl(String[][] d)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test084141() throws Throwable {\n    String[][] stringArray0 = new String[1][4];\n    String[] stringArray1 = new String[9];\n    stringArray1[0] = \"EOdo$1A>M*I\";\n    stringArray0[0] = stringArray1;\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl(stringArray0);\n}",
    "testName" : "test084141"
  },
  "test141261" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test141261() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    double[] doubleArray1 = new double[7];\n    doubleArray0[0] = doubleArray1;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getColumnMatrix(6);\n    BigDecimal bigDecimal0 = bigMatrixImpl1.getTrace();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test141261"
  },
  "test062119" : {
    "methodSignature" : "protected BigMatrix getLUMatrix() throws InvalidMatrixException",
    "methodName" : "getLUMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test062119() throws Throwable {\n    BigDecimal[][] bigDecimalArray0 = new BigDecimal[7][2];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getLUMatrix();\n}",
    "testName" : "test062119"
  },
  "test141264" : {
    "methodSignature" : "public BigDecimal getTrace() throws IllegalArgumentException",
    "methodName" : "getTrace",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test141264() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    double[] doubleArray1 = new double[7];\n    doubleArray0[0] = doubleArray1;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getColumnMatrix(6);\n    BigDecimal bigDecimal0 = bigMatrixImpl1.getTrace();\n}",
    "testName" : "test141264"
  },
  "test172324" : {
    "methodSignature" : "public BigMatrixImpl(double[][] d)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test172324() throws Throwable {\n    double[][] doubleArray0 = new double[3][1];\n    double[] doubleArray1 = new double[5];\n    doubleArray0[0] = doubleArray1;\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n}",
    "testName" : "test172324"
  },
  "test141265" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test141265() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    double[] doubleArray1 = new double[7];\n    doubleArray0[0] = doubleArray1;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getColumnMatrix(6);\n    BigDecimal bigDecimal0 = bigMatrixImpl1.getTrace();\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test141265"
  },
  "test067124" : {
    "methodSignature" : "public BigDecimal getDeterminant() throws InvalidMatrixException",
    "methodName" : "getDeterminant",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067124() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getDeterminant();\n}",
    "testName" : "test067124"
  },
  "test152280" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test152280() throws Throwable {\n    double[][] doubleArray0 = new double[3][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    int[] intArray0 = new int[4];\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getSubMatrix(intArray0, intArray0);\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test152280"
  },
  "test152281" : {
    "methodSignature" : "public int getRowDimension()",
    "methodName" : "getRowDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test152281() throws Throwable {\n    double[][] doubleArray0 = new double[3][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    int[] intArray0 = new int[4];\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getSubMatrix(intArray0, intArray0);\n    bigMatrixImpl0.getRowDimension();\n}",
    "testName" : "test152281"
  },
  "test01853" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01853() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getRowMatrix(0);\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test01853"
  },
  "test095164" : {
    "methodSignature" : "public boolean equals(Object object)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095164() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.subtract(bigMatrixImpl0);\n    bigMatrixImpl1.equals((Object) bigMatrixImpl0);\n}",
    "testName" : "test095164"
  },
  "test095163" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095163() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.subtract(bigMatrixImpl0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test095163"
  },
  "test095165" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095165() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.subtract(bigMatrixImpl0);\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test095165"
  },
  "test051108" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test051108() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.hashCode();\n}",
    "testName" : "test051108"
  },
  "test090150" : {
    "methodSignature" : "public BigDecimal[] solve(BigDecimal[] b) throws IllegalArgumentException, InvalidMatrixException",
    "methodName" : "solve",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090150() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(777, 1120);\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[6];\n    bigMatrixImpl0.solve(bigDecimalArray0);\n}",
    "testName" : "test090150"
  },
  "test01856" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01856() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getRowMatrix(0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test01856"
  },
  "test01855" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01855() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getRowMatrix(0);\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test01855"
  },
  "test095162" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095162() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.subtract(bigMatrixImpl0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test095162"
  },
  "test01854" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01854() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getRowMatrix(0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test01854"
  },
  "test095161" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095161() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.subtract(bigMatrixImpl0);\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test095161"
  },
  "test119219" : {
    "methodSignature" : "public BigDecimal[] preMultiply(BigDecimal[] v) throws IllegalArgumentException",
    "methodName" : "preMultiply",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119219() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigMatrixImpl.ONE;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal[] bigDecimalArray1 = bigMatrixImpl0.preMultiply(bigDecimalArray0);\n}",
    "testName" : "test119219"
  },
  "test056113" : {
    "methodSignature" : "public BigMatrix getRowMatrix(int row) throws MatrixIndexException",
    "methodName" : "getRowMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056113() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.getRowMatrix(1960);\n}",
    "testName" : "test056113"
  },
  "test119218" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119218() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigMatrixImpl.ONE;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal[] bigDecimalArray1 = bigMatrixImpl0.preMultiply(bigDecimalArray0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test119218"
  },
  "test073130" : {
    "methodSignature" : "public int getColumnDimension()",
    "methodName" : "getColumnDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test073130() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.getColumnDimension();\n}",
    "testName" : "test073130"
  },
  "test146270" : {
    "methodSignature" : "public void setSubMatrix(BigDecimal[][] subMatrix, int row, int column) throws MatrixIndexException",
    "methodName" : "setSubMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test146270() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigDecimal[][] bigDecimalArray0 = bigMatrixImpl0.getDataRef();\n    bigMatrixImpl0.setSubMatrix(bigDecimalArray0, 0, 1);\n}",
    "testName" : "test146270"
  },
  "test177329" : {
    "methodSignature" : "public BigMatrixImpl(BigDecimal[][] d, boolean copyArray)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test177329() throws Throwable {\n    BigDecimal[][] bigDecimalArray0 = new BigDecimal[0][6];\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0, false);\n}",
    "testName" : "test177329"
  },
  "test166312" : {
    "methodSignature" : "public int getRowDimension()",
    "methodName" : "getRowDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test166312() throws Throwable {\n    double[][] doubleArray0 = new double[3][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.add((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl0.getRowDimension();\n}",
    "testName" : "test166312"
  },
  "test166313" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test166313() throws Throwable {\n    double[][] doubleArray0 = new double[3][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.add((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test166313"
  },
  "test166314" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test166314() throws Throwable {\n    double[][] doubleArray0 = new double[3][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.add((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test166314"
  },
  "test166315" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test166315() throws Throwable {\n    double[][] doubleArray0 = new double[3][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.add((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test166315"
  },
  "test166316" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test166316() throws Throwable {\n    double[][] doubleArray0 = new double[3][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.add((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test166316"
  },
  "test166317" : {
    "methodSignature" : "public int getColumnDimension()",
    "methodName" : "getColumnDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test166317() throws Throwable {\n    double[][] doubleArray0 = new double[3][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.add((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl1.getColumnDimension();\n}",
    "testName" : "test166317"
  },
  "test045102" : {
    "methodSignature" : "public BigMatrix multiply(BigMatrix m) throws IllegalArgumentException",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test045102() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.multiply((BigMatrix) bigMatrixImpl0);\n}",
    "testName" : "test045102"
  },
  "test166318" : {
    "methodSignature" : "public boolean equals(Object object)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test166318() throws Throwable {\n    double[][] doubleArray0 = new double[3][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.add((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl1.equals((Object) bigMatrixImpl0);\n}",
    "testName" : "test166318"
  },
  "test02267" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02267() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.getDataRef();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test02267"
  },
  "test157286" : {
    "methodSignature" : "public int getColumnDimension()",
    "methodName" : "getColumnDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test157286() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigDecimal bigDecimal0 = bigMatrixImpl0.getNorm();\n    bigMatrixImpl0.getColumnDimension();\n}",
    "testName" : "test157286"
  },
  "test02266" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02266() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.getDataRef();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test02266"
  },
  "test03592" : {
    "methodSignature" : "public BigMatrix scalarMultiply(BigDecimal d)",
    "methodName" : "scalarMultiply",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03592() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal bigDecimal0 = new BigDecimal((-727));\n    bigMatrixImpl0.scalarMultiply(bigDecimal0);\n}",
    "testName" : "test03592"
  },
  "test157289" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test157289() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigDecimal bigDecimal0 = bigMatrixImpl0.getNorm();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test157289"
  },
  "test161303" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test161303() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigDecimal bigDecimal0 = new BigDecimal(0.0);\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimalArray0[0];\n    bigDecimalArray0[2] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.scalarAdd(bigDecimal0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test161303"
  },
  "test157287" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test157287() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigDecimal bigDecimal0 = bigMatrixImpl0.getNorm();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test157287"
  },
  "test110199" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110199() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    Object object0 = new Object();\n    boolean boolean0 = bigMatrixImpl0.equals(object0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test110199"
  },
  "test161301" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test161301() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigDecimal bigDecimal0 = new BigDecimal(0.0);\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimalArray0[0];\n    bigDecimalArray0[2] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.scalarAdd(bigDecimal0);\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test161301"
  },
  "test110198" : {
    "methodSignature" : "public int getColumnDimension()",
    "methodName" : "getColumnDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110198() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    Object object0 = new Object();\n    boolean boolean0 = bigMatrixImpl0.equals(object0);\n    bigMatrixImpl0.getColumnDimension();\n}",
    "testName" : "test110198"
  },
  "test152276" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test152276() throws Throwable {\n    double[][] doubleArray0 = new double[3][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    int[] intArray0 = new int[4];\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getSubMatrix(intArray0, intArray0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test152276"
  },
  "test161302" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test161302() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigDecimal bigDecimal0 = new BigDecimal(0.0);\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimalArray0[0];\n    bigDecimalArray0[2] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.scalarAdd(bigDecimal0);\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test161302"
  },
  "test110197" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110197() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    Object object0 = new Object();\n    boolean boolean0 = bigMatrixImpl0.equals(object0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test110197"
  },
  "test152277" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test152277() throws Throwable {\n    double[][] doubleArray0 = new double[3][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    int[] intArray0 = new int[4];\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getSubMatrix(intArray0, intArray0);\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test152277"
  },
  "test152278" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test152278() throws Throwable {\n    double[][] doubleArray0 = new double[3][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    int[] intArray0 = new int[4];\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getSubMatrix(intArray0, intArray0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test152278"
  },
  "test161300" : {
    "methodSignature" : "public int getRowDimension()",
    "methodName" : "getRowDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test161300() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigDecimal bigDecimal0 = new BigDecimal(0.0);\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimalArray0[0];\n    bigDecimalArray0[2] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.scalarAdd(bigDecimal0);\n    bigMatrixImpl1.getRowDimension();\n}",
    "testName" : "test161300"
  },
  "test152279" : {
    "methodSignature" : "public int getRowDimension()",
    "methodName" : "getRowDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test152279() throws Throwable {\n    double[][] doubleArray0 = new double[3][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    int[] intArray0 = new int[4];\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getSubMatrix(intArray0, intArray0);\n    bigMatrixImpl1.getRowDimension();\n}",
    "testName" : "test152279"
  },
  "test120222" : {
    "methodSignature" : "public BigDecimal[] preMultiply(BigDecimal[] v) throws IllegalArgumentException",
    "methodName" : "preMultiply",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test120222() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(130, 130);\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[5];\n    bigMatrixImpl0.preMultiply(bigDecimalArray0);\n}",
    "testName" : "test120222"
  },
  "test135249" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test135249() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigDecimal bigDecimal0 = new BigDecimal(0.0);\n    bigDecimalArray0[1] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    double[] doubleArray0 = bigMatrixImpl0.getRowAsDoubleArray(1);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test135249"
  },
  "test02369" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02369() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getColumnDimension();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test02369"
  },
  "test184338" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test184338() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test184338"
  },
  "test02368" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02368() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getColumnDimension();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test02368"
  },
  "test184339" : {
    "methodSignature" : "public int getColumnDimension()",
    "methodName" : "getColumnDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test184339() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.setScale(0);\n    bigMatrixImpl0.getColumnDimension();\n}",
    "testName" : "test184339"
  },
  "test100173" : {
    "methodSignature" : "public BigMatrixImpl add(BigMatrixImpl m) throws IllegalArgumentException",
    "methodName" : "add",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100173() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(2912, 2912);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getRowMatrix(1);\n    bigMatrixImpl1.add(bigMatrixImpl0);\n}",
    "testName" : "test100173"
  },
  "test189347" : {
    "methodSignature" : "public double getEntryAsDouble(int row, int column) throws MatrixIndexException",
    "methodName" : "getEntryAsDouble",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test189347() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getEntryAsDouble(40, 474);\n}",
    "testName" : "test189347"
  },
  "test01958" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01958() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[5];\n    BigDecimal bigDecimal0 = BigDecimal.ONE;\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimalArray0[0];\n    bigDecimalArray0[2] = bigDecimalArray0[0];\n    bigDecimalArray0[3] = bigDecimal0;\n    bigDecimalArray0[4] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal bigDecimal1 = bigMatrixImpl0.getNorm();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test01958"
  },
  "test01957" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01957() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[5];\n    BigDecimal bigDecimal0 = BigDecimal.ONE;\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimalArray0[0];\n    bigDecimalArray0[2] = bigDecimalArray0[0];\n    bigDecimalArray0[3] = bigDecimal0;\n    bigDecimalArray0[4] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal bigDecimal1 = bigMatrixImpl0.getNorm();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test01957"
  },
  "test105181" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105181() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getRowDimension();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test105181"
  },
  "test105180" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105180() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getRowDimension();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test105180"
  },
  "test130239" : {
    "methodSignature" : "public BigDecimal getDeterminant() throws InvalidMatrixException",
    "methodName" : "getDeterminant",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test130239() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getDeterminant();\n}",
    "testName" : "test130239"
  },
  "test125229" : {
    "methodSignature" : "public BigDecimal getTrace() throws IllegalArgumentException",
    "methodName" : "getTrace",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test125229() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(297, 297);\n    bigMatrixImpl0.getTrace();\n}",
    "testName" : "test125229"
  },
  "test119221" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119221() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigMatrixImpl.ONE;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal[] bigDecimalArray1 = bigMatrixImpl0.preMultiply(bigDecimalArray0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test119221"
  },
  "test171323" : {
    "methodSignature" : "public BigMatrixImpl(String[][] d)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test171323() throws Throwable {\n    String[][] stringArray0 = new String[0][9];\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl(stringArray0);\n}",
    "testName" : "test171323"
  },
  "test141259" : {
    "methodSignature" : "public int getRowDimension()",
    "methodName" : "getRowDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test141259() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    double[] doubleArray1 = new double[7];\n    doubleArray0[0] = doubleArray1;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.getRowDimension();\n}",
    "testName" : "test141259"
  },
  "test099172" : {
    "methodSignature" : "public BigMatrixImpl add(BigMatrixImpl m) throws IllegalArgumentException",
    "methodName" : "add",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099172() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.add(bigMatrixImpl0);\n}",
    "testName" : "test099172"
  },
  "test135250" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test135250() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigDecimal bigDecimal0 = new BigDecimal(0.0);\n    bigDecimalArray0[1] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    double[] doubleArray0 = bigMatrixImpl0.getRowAsDoubleArray(1);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test135250"
  },
  "test135251" : {
    "methodSignature" : "public double[] getRowAsDoubleArray(int row) throws MatrixIndexException",
    "methodName" : "getRowAsDoubleArray",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test135251() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigDecimal bigDecimal0 = new BigDecimal(0.0);\n    bigDecimalArray0[1] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    double[] doubleArray0 = bigMatrixImpl0.getRowAsDoubleArray(1);\n}",
    "testName" : "test135251"
  },
  "test089149" : {
    "methodSignature" : "public BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException",
    "methodName" : "solve",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089149() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.solve((BigMatrix) bigMatrixImpl0);\n}",
    "testName" : "test089149"
  },
  "test03693" : {
    "methodSignature" : "public BigMatrix scalarAdd(BigDecimal d)",
    "methodName" : "scalarAdd",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03693() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    BigDecimal bigDecimal0 = new BigDecimal(3051L);\n    bigMatrixImpl0.scalarAdd(bigDecimal0);\n}",
    "testName" : "test03693"
  },
  "test01026" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01026() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.scalarMultiply(bigDecimal0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test01026"
  },
  "test01025" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01025() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.scalarMultiply(bigDecimal0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test01025"
  },
  "test094160" : {
    "methodSignature" : "public BigMatrixImpl multiply(BigMatrixImpl m) throws IllegalArgumentException",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094160() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[4];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.multiply(bigMatrixImpl0);\n}",
    "testName" : "test094160"
  },
  "test114212" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test114212() throws Throwable {\n    double[][] doubleArray0 = new double[1][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    boolean boolean0 = bigMatrixImpl0.isSingular();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test114212"
  },
  "test114211" : {
    "methodSignature" : "public boolean isSingular()",
    "methodName" : "isSingular",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test114211() throws Throwable {\n    double[][] doubleArray0 = new double[1][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    boolean boolean0 = bigMatrixImpl0.isSingular();\n}",
    "testName" : "test114211"
  },
  "test114213" : {
    "methodSignature" : "public int getColumnDimension()",
    "methodName" : "getColumnDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test114213() throws Throwable {\n    double[][] doubleArray0 = new double[1][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    boolean boolean0 = bigMatrixImpl0.isSingular();\n    bigMatrixImpl0.getColumnDimension();\n}",
    "testName" : "test114213"
  },
  "test078135" : {
    "methodSignature" : "public BigMatrix copy()",
    "methodName" : "copy",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078135() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.copy();\n}",
    "testName" : "test078135"
  },
  "test0045" : {
    "methodSignature" : "public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException",
    "methodName" : "operate",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0045() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(1498, 1498);\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    bigMatrixImpl0.operate(bigDecimalArray0);\n}",
    "testName" : "test0045"
  },
  "test02472" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02472() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.copy();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test02472"
  },
  "test02471" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02471() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.copy();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test02471"
  },
  "test02470" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02470() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.copy();\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test02470"
  },
  "test01024" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01024() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.scalarMultiply(bigDecimal0);\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test01024"
  },
  "test04097" : {
    "methodSignature" : "public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException",
    "methodName" : "operate",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04097() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal[] bigDecimalArray1 = new BigDecimal[1];\n    bigMatrixImpl0.operate(bigDecimalArray1);\n}",
    "testName" : "test04097"
  },
  "test088146" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088146() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.solve((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test088146"
  },
  "test01023" : {
    "methodSignature" : "public boolean equals(Object object)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01023() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.scalarMultiply(bigDecimal0);\n    bigMatrixImpl1.equals((Object) bigMatrixImpl0);\n}",
    "testName" : "test01023"
  },
  "test088145" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088145() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.solve((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test088145"
  },
  "test01022" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01022() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.scalarMultiply(bigDecimal0);\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test01022"
  },
  "test088148" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088148() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.solve((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test088148"
  },
  "test02473" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02473() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.copy();\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test02473"
  },
  "test088147" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088147() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.solve((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test088147"
  },
  "test182334" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test182334() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    int int0 = bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test182334"
  },
  "test110200" : {
    "methodSignature" : "public boolean equals(Object object)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110200() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    Object object0 = new Object();\n    boolean boolean0 = bigMatrixImpl0.equals(object0);\n}",
    "testName" : "test110200"
  },
  "test049106" : {
    "methodSignature" : "public boolean isSingular()",
    "methodName" : "isSingular",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test049106() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.isSingular();\n}",
    "testName" : "test049106"
  },
  "test182336" : {
    "methodSignature" : "public int getRowDimension()",
    "methodName" : "getRowDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test182336() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    int int0 = bigMatrixImpl0.getRoundingMode();\n    bigMatrixImpl0.getRowDimension();\n}",
    "testName" : "test182336"
  },
  "test072129" : {
    "methodSignature" : "public BigMatrix getColumnMatrix(int column) throws MatrixIndexException",
    "methodName" : "getColumnMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test072129() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getColumnMatrix((-1));\n}",
    "testName" : "test072129"
  },
  "test182335" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test182335() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    int int0 = bigMatrixImpl0.getRoundingMode();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test182335"
  },
  "test187344" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test187344() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test187344"
  },
  "test115214" : {
    "methodSignature" : "public BigMatrix inverse() throws InvalidMatrixException",
    "methodName" : "inverse",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115214() throws Throwable {\n    double[][] doubleArray0 = new double[8][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.inverse();\n}",
    "testName" : "test115214"
  },
  "test187345" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test187345() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.setRoundingMode(0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test187345"
  },
  "test077134" : {
    "methodSignature" : "public boolean equals(Object object)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077134() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = new BigMatrixImpl();\n    bigMatrixImpl0.equals(bigMatrixImpl1);\n}",
    "testName" : "test077134"
  },
  "test083140" : {
    "methodSignature" : "public BigMatrixImpl(BigDecimal[][] d)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test083140() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl((BigDecimal[][]) null);\n}",
    "testName" : "test083140"
  },
  "test158290" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test158290() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    double[][] doubleArray1 = bigMatrixImpl0.getDataAsDoubleArray();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test158290"
  },
  "test173325" : {
    "methodSignature" : "public BigMatrixImpl(double[][] d)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test173325() throws Throwable {\n    double[][] doubleArray0 = new double[5][0];\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n}",
    "testName" : "test173325"
  },
  "test0056" : {
    "methodSignature" : "public BigMatrixImpl(BigDecimal[][] d)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0056() throws Throwable {\n    BigDecimal[][] bigDecimalArray0 = new BigDecimal[7][9];\n    BigDecimal[] bigDecimalArray1 = new BigDecimal[6];\n    bigDecimalArray0[1] = bigDecimalArray1;\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n}",
    "testName" : "test0056"
  },
  "test01130" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01130() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.scalarAdd(bigDecimal0);\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test01130"
  },
  "test03794" : {
    "methodSignature" : "public BigMatrix scalarAdd(BigDecimal d)",
    "methodName" : "scalarAdd",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03794() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal bigDecimal0 = BigMatrixImpl.ZERO;\n    bigMatrixImpl0.scalarAdd(bigDecimal0);\n}",
    "testName" : "test03794"
  },
  "test158292" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test158292() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    double[][] doubleArray1 = bigMatrixImpl0.getDataAsDoubleArray();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test158292"
  },
  "test137253" : {
    "methodSignature" : "public double[] getRowAsDoubleArray(int row) throws MatrixIndexException",
    "methodName" : "getRowAsDoubleArray",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test137253() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getRowAsDoubleArray(1);\n}",
    "testName" : "test137253"
  },
  "test158291" : {
    "methodSignature" : "public double[][] getDataAsDoubleArray()",
    "methodName" : "getDataAsDoubleArray",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test158291() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    double[][] doubleArray1 = bigMatrixImpl0.getDataAsDoubleArray();\n}",
    "testName" : "test158291"
  },
  "test153282" : {
    "methodSignature" : "public BigMatrix getSubMatrix(int startRow, int endRow, int startColumn, int endColumn) throws MatrixIndexException",
    "methodName" : "getSubMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test153282() throws Throwable {\n    double[][] doubleArray0 = new double[1][6];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.getSubMatrix(0, 31, 0, 0);\n}",
    "testName" : "test153282"
  },
  "test162308" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test162308() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigDecimal bigDecimal0 = new BigDecimal(0.0);\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimal0;\n    bigDecimalArray0[2] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.subtract((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test162308"
  },
  "test01131" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01131() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.scalarAdd(bigDecimal0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test01131"
  },
  "test178330" : {
    "methodSignature" : "public BigMatrixImpl(BigDecimal[][] d, boolean copyArray)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test178330() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl((BigDecimal[][]) null, false);\n}",
    "testName" : "test178330"
  },
  "test01127" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01127() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.scalarAdd(bigDecimal0);\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test01127"
  },
  "test02577" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02577() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.copy();\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test02577"
  },
  "test02576" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02576() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.copy();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test02576"
  },
  "test106184" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106184() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigMatrixImpl.ONE;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.luDecompose();\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getLUMatrix();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test106184"
  },
  "test106185" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106185() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigMatrixImpl.ONE;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.luDecompose();\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getLUMatrix();\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test106185"
  },
  "test132241" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test132241() throws Throwable {\n    double[][] doubleArray0 = new double[3][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.getColumnAsDoubleArray(1);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test132241"
  },
  "test00710" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00710() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.transpose();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test00710"
  },
  "test01129" : {
    "methodSignature" : "public boolean equals(Object object)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01129() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.scalarAdd(bigDecimal0);\n    bigMatrixImpl1.equals((Object) bigMatrixImpl0);\n}",
    "testName" : "test01129"
  },
  "test101175" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101175() throws Throwable {\n    BigDecimal[][] bigDecimalArray0 = new BigDecimal[6][4];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0, false);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test101175"
  },
  "test132242" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test132242() throws Throwable {\n    double[][] doubleArray0 = new double[3][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.getColumnAsDoubleArray(1);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test132242"
  },
  "test00711" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00711() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.transpose();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test00711"
  },
  "test01128" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01128() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.scalarAdd(bigDecimal0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test01128"
  },
  "test101174" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101174() throws Throwable {\n    BigDecimal[][] bigDecimalArray0 = new BigDecimal[6][4];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0, false);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test101174"
  },
  "test132243" : {
    "methodSignature" : "public int getColumnDimension()",
    "methodName" : "getColumnDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test132243() throws Throwable {\n    double[][] doubleArray0 = new double[3][8];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.getColumnAsDoubleArray(1);\n    bigMatrixImpl0.getColumnDimension();\n}",
    "testName" : "test132243"
  },
  "test106182" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106182() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigMatrixImpl.ONE;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.luDecompose();\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getLUMatrix();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test106182"
  },
  "test106183" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106183() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigMatrixImpl.ONE;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.luDecompose();\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.getLUMatrix();\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test106183"
  },
  "test0067" : {
    "methodSignature" : "public BigMatrixImpl(BigDecimal[][] d, boolean copyArray)",
    "methodName" : "BigMatrixImpl",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0067() throws Throwable {\n    BigDecimal[][] bigDecimalArray0 = new BigDecimal[8][0];\n    BigDecimal[] bigDecimalArray1 = new BigDecimal[9];\n    bigDecimalArray0[0] = bigDecimalArray1;\n    BigMatrixImpl bigMatrixImpl0 = null;\n    bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0, false);\n}",
    "testName" : "test0067"
  },
  "test098171" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098171() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.add(bigMatrixImpl0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test098171"
  },
  "test044101" : {
    "methodSignature" : "public BigMatrix multiply(BigMatrix m) throws IllegalArgumentException",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044101() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.multiply((BigMatrix) bigMatrixImpl0);\n}",
    "testName" : "test044101"
  },
  "test098170" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098170() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.add(bigMatrixImpl0);\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test098170"
  },
  "test167319" : {
    "methodSignature" : "public BigMatrixImpl add(BigMatrixImpl m) throws IllegalArgumentException",
    "methodName" : "add",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test167319() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.transpose();\n    bigMatrixImpl1.add(bigMatrixImpl0);\n}",
    "testName" : "test167319"
  },
  "test136252" : {
    "methodSignature" : "public double[] getRowAsDoubleArray(int row) throws MatrixIndexException",
    "methodName" : "getRowAsDoubleArray",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test136252() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(155, 155);\n    bigMatrixImpl0.getRowAsDoubleArray(155);\n}",
    "testName" : "test136252"
  },
  "test02575" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02575() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.copy();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test02575"
  },
  "test02574" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02574() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.copy();\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test02574"
  },
  "test04198" : {
    "methodSignature" : "public BigDecimal[] operate(double[] v) throws IllegalArgumentException",
    "methodName" : "operate",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04198() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    double[] doubleArray0 = new double[7];\n    bigMatrixImpl0.operate(doubleArray0);\n}",
    "testName" : "test04198"
  },
  "test162306" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test162306() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigDecimal bigDecimal0 = new BigDecimal(0.0);\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimal0;\n    bigDecimalArray0[2] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.subtract((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test162306"
  },
  "test01236" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01236() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[2];\n    BigDecimal bigDecimal0 = BigDecimal.ONE;\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrix bigMatrix0 = bigMatrixImpl0.transpose();\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.preMultiply(bigMatrix0);\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test01236"
  },
  "test162307" : {
    "methodSignature" : "public int getColumnDimension()",
    "methodName" : "getColumnDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test162307() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigDecimal bigDecimal0 = new BigDecimal(0.0);\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimal0;\n    bigDecimalArray0[2] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.subtract((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl1.getColumnDimension();\n}",
    "testName" : "test162307"
  },
  "test01235" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01235() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[2];\n    BigDecimal bigDecimal0 = BigDecimal.ONE;\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrix bigMatrix0 = bigMatrixImpl0.transpose();\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.preMultiply(bigMatrix0);\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test01235"
  },
  "test162304" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test162304() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigDecimal bigDecimal0 = new BigDecimal(0.0);\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimal0;\n    bigDecimalArray0[2] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.subtract((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test162304"
  },
  "test01234" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01234() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[2];\n    BigDecimal bigDecimal0 = BigDecimal.ONE;\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrix bigMatrix0 = bigMatrixImpl0.transpose();\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.preMultiply(bigMatrix0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test01234"
  },
  "test162305" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test162305() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigDecimal bigDecimal0 = new BigDecimal(0.0);\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimal0;\n    bigDecimalArray0[2] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.subtract((BigMatrix) bigMatrixImpl0);\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test162305"
  },
  "test131240" : {
    "methodSignature" : "public double[] getColumnAsDoubleArray(int col) throws MatrixIndexException",
    "methodName" : "getColumnAsDoubleArray",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test131240() throws Throwable {\n    double[][] doubleArray0 = new double[1][4];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.getColumnAsDoubleArray((-2818));\n}",
    "testName" : "test131240"
  },
  "test0079" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0079() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.transpose();\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test0079"
  },
  "test121223" : {
    "methodSignature" : "public BigDecimal[] preMultiply(BigDecimal[] v) throws IllegalArgumentException",
    "methodName" : "preMultiply",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121223() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.preMultiply(bigDecimalArray0);\n}",
    "testName" : "test121223"
  },
  "test061118" : {
    "methodSignature" : "public BigDecimal getNorm()",
    "methodName" : "getNorm",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test061118() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.getNorm();\n}",
    "testName" : "test061118"
  },
  "test0078" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0078() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.transpose();\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test0078"
  },
  "test142266" : {
    "methodSignature" : "public BigMatrix getRowMatrix(int row) throws MatrixIndexException",
    "methodName" : "getRowMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test142266() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(2912, 2912);\n    bigMatrixImpl0.getRowMatrix((-14));\n}",
    "testName" : "test142266"
  },
  "test02681" : {
    "methodSignature" : "public boolean isSquare()",
    "methodName" : "isSquare",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02681() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.add(bigMatrixImpl0);\n    bigMatrixImpl1.isSquare();\n}",
    "testName" : "test02681"
  },
  "test02680" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02680() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.add(bigMatrixImpl0);\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test02680"
  },
  "test03895" : {
    "methodSignature" : "public BigDecimal[] preMultiply(BigDecimal[] v) throws IllegalArgumentException",
    "methodName" : "preMultiply",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03895() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.preMultiply(bigDecimalArray0);\n}",
    "testName" : "test03895"
  },
  "test01233" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01233() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[2];\n    BigDecimal bigDecimal0 = BigDecimal.ONE;\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrix bigMatrix0 = bigMatrixImpl0.transpose();\n    BigMatrixImpl bigMatrixImpl1 = (BigMatrixImpl) bigMatrixImpl0.preMultiply(bigMatrix0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test01233"
  },
  "test01232" : {
    "methodSignature" : "int getColumnDimension()",
    "methodName" : "getColumnDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01232() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[2];\n    BigDecimal bigDecimal0 = BigDecimal.ONE;\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrix bigMatrix0 = bigMatrixImpl0.transpose();\n    bigMatrix0.getColumnDimension();\n}",
    "testName" : "test01232"
  },
  "test02683" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02683() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.add(bigMatrixImpl0);\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test02683"
  },
  "test02682" : {
    "methodSignature" : "public int getColumnDimension()",
    "methodName" : "getColumnDimension",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02682() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.add(bigMatrixImpl0);\n    bigMatrixImpl1.getColumnDimension();\n}",
    "testName" : "test02682"
  },
  "test066123" : {
    "methodSignature" : "public BigDecimal getEntry(int row, int column) throws MatrixIndexException",
    "methodName" : "getEntry",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066123() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.getEntry((-2962), 75);\n}",
    "testName" : "test066123"
  },
  "test02678" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02678() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.add(bigMatrixImpl0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test02678"
  },
  "test098169" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098169() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.add(bigMatrixImpl0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test098169"
  },
  "test098168" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098168() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    bigDecimalArray0[0] = bigDecimal0;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.add(bigMatrixImpl0);\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test098168"
  },
  "test050107" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test050107() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.hashCode();\n}",
    "testName" : "test050107"
  },
  "test126230" : {
    "methodSignature" : "public BigDecimal getTrace() throws IllegalArgumentException",
    "methodName" : "getTrace",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test126230() throws Throwable {\n    double[][] doubleArray0 = new double[1][0];\n    double[] doubleArray1 = new double[7];\n    doubleArray0[0] = doubleArray1;\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    bigMatrixImpl0.getTrace();\n}",
    "testName" : "test126230"
  },
  "test00812" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00812() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigDecimal bigDecimal0 = new BigDecimal(0.0);\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimal0;\n    bigDecimalArray0[2] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.subtract(bigMatrixImpl0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test00812"
  },
  "test183337" : {
    "methodSignature" : "public BigMatrix preMultiply(BigMatrix m) throws IllegalArgumentException",
    "methodName" : "preMultiply",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test183337() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(121, 121);\n    bigMatrixImpl0.preMultiply((BigMatrix) bigMatrixImpl0);\n}",
    "testName" : "test183337"
  },
  "test02679" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02679() throws Throwable {\n    double[][] doubleArray0 = new double[1][5];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(doubleArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.add(bigMatrixImpl0);\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test02679"
  },
  "test00815" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00815() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigDecimal bigDecimal0 = new BigDecimal(0.0);\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimal0;\n    bigDecimalArray0[2] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.subtract(bigMatrixImpl0);\n    bigMatrixImpl1.getScale();\n}",
    "testName" : "test00815"
  },
  "test093158" : {
    "methodSignature" : "public int getScale()",
    "methodName" : "getScale",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093158() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.isSquare();\n    bigMatrixImpl0.getScale();\n}",
    "testName" : "test093158"
  },
  "test00816" : {
    "methodSignature" : "public boolean isSquare()",
    "methodName" : "isSquare",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00816() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigDecimal bigDecimal0 = new BigDecimal(0.0);\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimal0;\n    bigDecimalArray0[2] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.subtract(bigMatrixImpl0);\n    bigMatrixImpl1.isSquare();\n}",
    "testName" : "test00816"
  },
  "test055112" : {
    "methodSignature" : "public BigMatrix getSubMatrix(int startRow, int endRow, int startColumn, int endColumn) throws MatrixIndexException",
    "methodName" : "getSubMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055112() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.getSubMatrix(1, 1, 0, 4);\n}",
    "testName" : "test055112"
  },
  "test093159" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093159() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    bigMatrixImpl0.isSquare();\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test093159"
  },
  "test00813" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00813() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigDecimal bigDecimal0 = new BigDecimal(0.0);\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimal0;\n    bigDecimalArray0[2] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.subtract(bigMatrixImpl0);\n    bigMatrixImpl1.getRoundingMode();\n}",
    "testName" : "test00813"
  },
  "test00814" : {
    "methodSignature" : "public int getRoundingMode()",
    "methodName" : "getRoundingMode",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00814() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[3];\n    BigDecimal bigDecimal0 = new BigDecimal(0.0);\n    bigDecimalArray0[0] = bigDecimal0;\n    bigDecimalArray0[1] = bigDecimal0;\n    bigDecimalArray0[2] = bigDecimalArray0[0];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigMatrixImpl bigMatrixImpl1 = bigMatrixImpl0.subtract(bigMatrixImpl0);\n    bigMatrixImpl0.getRoundingMode();\n}",
    "testName" : "test00814"
  },
  "test188346" : {
    "methodSignature" : "protected int[] getPermutation()",
    "methodName" : "getPermutation",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test188346() throws Throwable {\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl();\n    bigMatrixImpl0.getPermutation();\n}",
    "testName" : "test188346"
  },
  "test147271" : {
    "methodSignature" : "public void setSubMatrix(BigDecimal[][] subMatrix, int row, int column) throws MatrixIndexException",
    "methodName" : "setSubMatrix",
    "className" : "org.apache.commons.math.linear.BigMatrixImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test147271() throws Throwable {\n    BigDecimal[] bigDecimalArray0 = new BigDecimal[1];\n    BigMatrixImpl bigMatrixImpl0 = new BigMatrixImpl(bigDecimalArray0);\n    BigDecimal[][] bigDecimalArray1 = new BigDecimal[5][3];\n    bigDecimalArray1[0] = bigDecimalArray0;\n    bigMatrixImpl0.setSubMatrix(bigDecimalArray1, 1, 0);\n}",
    "testName" : "test147271"
  }
}