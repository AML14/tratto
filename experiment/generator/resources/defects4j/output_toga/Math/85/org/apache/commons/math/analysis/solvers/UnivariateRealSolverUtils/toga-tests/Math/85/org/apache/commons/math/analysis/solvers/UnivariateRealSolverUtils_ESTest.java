/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 19:27:27 GMT 2023
 */
package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.polynomials.PolynomialFunction;
import org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm;
import org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction;
import org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class UnivariateRealSolverUtils_ESTest extends UnivariateRealSolverUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        double double0 = UnivariateRealSolverUtils.midpoint(352.617872, 0.5);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        double[] doubleArray0 = new double[3];
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunctionLagrangeForm0, Double.NaN, (-453.1300898761805), 0.0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        double[] doubleArray0 = new double[5];
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunction0, (-1418.193365), (-172.56756), (-172.56756), 0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[1] = 6.0;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunction0, (-473.83763), 0.0, 0.0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 2514.9414599383;
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        double double0 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, (-2516.294219155), 1.5, 243.992729932158);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[1] = 2381.909530279;
        doubleArray0[5] = (-22.812964);
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
        double double0 = UnivariateRealSolverUtils.solve(univariateRealFunction0, (-1421.05262768), 0.0, 0.5);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = (-1595.0);
        doubleArray0[1] = 938.0;
        doubleArray0[2] = 1108.004441853651;
        doubleArray0[3] = 1350.6452156541468;
        doubleArray0[4] = (-838.931759972695);
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        double double0 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, (-838.931759972695), 0.0);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = Double.POSITIVE_INFINITY;
        doubleArray0[1] = Double.POSITIVE_INFINITY;
        doubleArray0[2] = 1752.95617;
        doubleArray0[3] = 164.5;
        doubleArray0[5] = (-1918.61816);
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        double double0 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, 1.0, Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        double[] doubleArray0 = new double[7];
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunction0, (-373.40972633), 0.0);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        double double0 = UnivariateRealSolverUtils.midpoint(0.0, 0.0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[2] = 366.5560145;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
        double[] doubleArray1 = UnivariateRealSolverUtils.bracket(univariateRealFunction0, 0.0, (-853.96784643052), 879.67);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) null, 2028.36210992623, 2028.36210992623, 0.0);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[1] = 1161.5534;
        PolynomialFunction[] polynomialFunctionArray0 = new PolynomialFunction[1];
        PolynomialSplineFunction polynomialSplineFunction0 = new PolynomialSplineFunction(doubleArray0, polynomialFunctionArray0);
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialSplineFunction0, (-2054.5238297), 1161.5534, (-2054.5238297));
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        double[] doubleArray0 = new double[6];
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, 1.0, Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 865.9414599382999;
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        // Undeclared exception!
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunctionLagrangeForm0, 865.9414599382999, 865.9414599382999, 2142582.8990391945, 2022);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 2514.9414599383;
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        // Undeclared exception!
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunctionLagrangeForm0, 2514.9414599383, 0.0, 2514.9414599383);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = (-1454.0);
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunction0, (-1454.0), (-1454.0), 291.9966, 2565);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        double[] doubleArray0 = new double[7];
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunction0, (-1.0), 770.90204361892, 0.5, 7);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        double[] doubleArray0 = new double[3];
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunctionLagrangeForm0, Double.NaN, 2262.6, 1302.54756, 2147481241);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) null, (-1490.0), (-1490.0), 0.5, 0);
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[1] = (-127.63355408236791);
        doubleArray0[2] = (-2963.22064613);
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        UnivariateRealFunction univariateRealFunction0 = polynomialFunction0.derivative();
        double[] doubleArray1 = UnivariateRealSolverUtils.bracket(univariateRealFunction0, 0.0, (-127.63355408236791), 0.0, 7);
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        double[] doubleArray0 = new double[8];
        doubleArray0[4] = (-1836.04);
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunction0, (-445.1300898761805), (-453.1300898761805), 1541.17589679727, 9);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        double[] doubleArray0 = new double[7];
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunction0, 0.0, (-3018.643523973796), 0.0);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        double[] doubleArray0 = new double[17];
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunction0, 0.0, 0.0, 0.0);
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        double[] doubleArray0 = new double[6];
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunctionLagrangeForm0, 839.7158, (-1094.0609), (-4005.44912496), 1804);
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        double[] doubleArray0 = new double[5];
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        UnivariateRealSolverUtils.bracket((UnivariateRealFunction) polynomialFunction0, (-1418.19337), (-2963.22064613), (-2963.22064613), (-35));
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        double[] doubleArray0 = new double[6];
        PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) polynomialFunctionLagrangeForm0, (-1595.0), 1350.6452156541468, (-838.931759972695));
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        double double0 = UnivariateRealSolverUtils.midpoint((-4935.6723), (-4935.6723));
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        UnivariateRealSolverUtils.solve((UnivariateRealFunction) null, 0.0, 0.0);
    }
}
