org.apache.commons.math.optimization.linear.SimplexTableau,@Test(timeout = 4000)
public void test4545() throws Throwable {
    double[] doubleArray0 = new double[3];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 253.165282);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    Relationship relationship0 = Relationship.EQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, Double.NEGATIVE_INFINITY);
    linkedList0.add(linearConstraint0);
    GoalType goalType0 = GoalType.MAXIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);
    List<LinearConstraint> list0 = simplexTableau0.getNormalizedConstraints();
    list0.contains(linearConstraint0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_88b/src/java/java/util/List.java
org.apache.commons.math.optimization.linear.SimplexTableau,@Test(timeout = 4000)
public void test5657() throws Throwable {
    double[] doubleArray0 = new double[8];
    doubleArray0[2] = 1.0;
    doubleArray0[3] = (-1316.0582);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    Relationship relationship0 = Relationship.GEQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, 1563.0709777);
    linkedList0.add(linearConstraint0);
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0);
    RealPointValuePair realPointValuePair0 = simplexTableau0.getSolution();
    realPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.linear.SimplexTableau,@Test(timeout = 4000)
public void test5859() throws Throwable {
    double[] doubleArray0 = new double[5];
    doubleArray0[0] = (-0.06985575287115274);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-0.06985575287115274));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    Relationship relationship0 = Relationship.EQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, (-3842.09919628));
    linkedList0.add(linearConstraint0);
    linkedList0.add(linearConstraint0);
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-0.06985575287115274));
    RealPointValuePair realPointValuePair0 = simplexTableau0.getSolution();
    realPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
