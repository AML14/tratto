org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test000() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 0L);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 68, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 68, 68, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(100);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[3] = (byte) 3;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 555, well19937c0);
    well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 869, (double) 0L);
    multiStartUnivariateRealOptimizer0.getOptima();
    multiStartUnivariateRealOptimizer0.getOptima();
    Random.setNextRandom(33);
    multiStartUnivariateRealOptimizer0.getEvaluations();
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = (double) 100;
    doubleArray0[1] = 253.362;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    System.setCurrentTimeMillis(869);
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test022() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 53);
    univariateRealPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test023() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 53);
    univariateRealPointValuePair0.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test024() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 53);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test025() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 53);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test026() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 53);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) 5;
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test028() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 53);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) 5;
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    univariateRealPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test029() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 53);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) 5;
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    univariateRealPointValuePair0.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0212() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 53);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) 5;
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunction>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0213() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 53);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) 5;
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0214() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 53);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) 5;
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0215() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 53);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) 5;
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 2450, (double) 0L);
    univariateRealPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0216() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 53);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) 5;
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 2450, (double) 0L);
    univariateRealPointValuePair0.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0219() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 53);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) 5;
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 2450, (double) 0L);
    univariateRealPointValuePair1.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0220() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 53);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) 5;
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 2450, (double) 0L);
    univariateRealPointValuePair1.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0224() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 53);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) 5;
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 2450, (double) 0L);
    UnivariateRealPointValuePair[] univariateRealPointValuePairArray0 = multiStartUnivariateRealOptimizer0.getOptima();
    univariateRealPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0225() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 53);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) 5;
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 2450, (double) 0L);
    UnivariateRealPointValuePair[] univariateRealPointValuePairArray0 = multiStartUnivariateRealOptimizer0.getOptima();
    univariateRealPointValuePair0.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0232() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 53);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) 5;
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 2450, (double) 0L);
    UnivariateRealPointValuePair[] univariateRealPointValuePairArray0 = multiStartUnivariateRealOptimizer0.getOptima();
    UnivariateRealPointValuePair[] univariateRealPointValuePairArray1 = multiStartUnivariateRealOptimizer0.getOptima();
    univariateRealPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0233() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 53);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) 5;
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 2450, (double) 0L);
    UnivariateRealPointValuePair[] univariateRealPointValuePairArray0 = multiStartUnivariateRealOptimizer0.getOptima();
    UnivariateRealPointValuePair[] univariateRealPointValuePairArray1 = multiStartUnivariateRealOptimizer0.getOptima();
    univariateRealPointValuePair0.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0240() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 53);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) 5;
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 2450, (double) 0L);
    UnivariateRealPointValuePair[] univariateRealPointValuePairArray0 = multiStartUnivariateRealOptimizer0.getOptima();
    UnivariateRealPointValuePair[] univariateRealPointValuePairArray1 = multiStartUnivariateRealOptimizer0.getOptima();
    Random.setNextRandom(2450);
    int int0 = multiStartUnivariateRealOptimizer0.getEvaluations();
    univariateRealPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0241() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, 53);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) 5;
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 2450, (double) 0L);
    UnivariateRealPointValuePair[] univariateRealPointValuePairArray0 = multiStartUnivariateRealOptimizer0.getOptima();
    UnivariateRealPointValuePair[] univariateRealPointValuePairArray1 = multiStartUnivariateRealOptimizer0.getOptima();
    Random.setNextRandom(2450);
    int int0 = multiStartUnivariateRealOptimizer0.getEvaluations();
    univariateRealPointValuePair0.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0346() throws Throwable {
    ConvergenceChecker<UnivariateRealPointValuePair> convergenceChecker0 = (ConvergenceChecker<UnivariateRealPointValuePair>) mock(ConvergenceChecker.class, new ViolatedAssumptionAnswer());
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    Well512a well512a0 = new Well512a();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0349() throws Throwable {
    ConvergenceChecker<UnivariateRealPointValuePair> convergenceChecker0 = (ConvergenceChecker<UnivariateRealPointValuePair>) mock(ConvergenceChecker.class, new ViolatedAssumptionAnswer());
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    Well512a well512a0 = new Well512a();
    well512a0.setSeed(4420);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 4420, well512a0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunction>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0453() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(2906.946, 0.0);
    univariateRealPointValuePair0.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0454() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(2906.946, 0.0);
    univariateRealPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0455() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(2906.946, 0.0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0456() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(2906.946, 0.0);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(253, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(1655, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0459() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(2906.946, 0.0);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(253, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(1655, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1, well1024a0);
    univariateRealPointValuePair0.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0460() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(2906.946, 0.0);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(253, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(1655, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1, well1024a0);
    univariateRealPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0463() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(2906.946, 0.0);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(253, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(1655, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1, well1024a0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunction>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0466() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(2906.946, 0.0);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(253, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(1655, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1, well1024a0);
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 1;
    doubleArray0[1] = (double) 1;
    doubleArray0[2] = (double) 1;
    doubleArray0[3] = (double) 1;
    doubleArray0[4] = (double) 1;
    doubleArray0[5] = (double) 1;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    polynomialFunction0.degree();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0467() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(2906.946, 0.0);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(253, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(1655, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1, well1024a0);
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 1;
    doubleArray0[1] = (double) 1;
    doubleArray0[2] = (double) 1;
    doubleArray0[3] = (double) 1;
    doubleArray0[4] = (double) 1;
    doubleArray0[5] = (double) 1;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0470() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(2906.946, 0.0);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(253, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(1655, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1, well1024a0);
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 1;
    doubleArray0[1] = (double) 1;
    doubleArray0[2] = (double) 1;
    doubleArray0[3] = (double) 1;
    doubleArray0[4] = (double) 1;
    doubleArray0[5] = (double) 1;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    GoalType goalType0 = GoalType.MINIMIZE;
    GoalType goalType1 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize(polynomialFunction0, goalType1, 1.0, (double) 1, (-58.37));
    polynomialFunction0.degree();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0471() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(2906.946, 0.0);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(253, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(1655, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1, well1024a0);
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 1;
    doubleArray0[1] = (double) 1;
    doubleArray0[2] = (double) 1;
    doubleArray0[3] = (double) 1;
    doubleArray0[4] = (double) 1;
    doubleArray0[5] = (double) 1;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    GoalType goalType0 = GoalType.MINIMIZE;
    GoalType goalType1 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize(polynomialFunction0, goalType1, 1.0, (double) 1, (-58.37));
    univariateRealPointValuePair0.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0472() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(2906.946, 0.0);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(253, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(1655, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1, well1024a0);
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 1;
    doubleArray0[1] = (double) 1;
    doubleArray0[2] = (double) 1;
    doubleArray0[3] = (double) 1;
    doubleArray0[4] = (double) 1;
    doubleArray0[5] = (double) 1;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    GoalType goalType0 = GoalType.MINIMIZE;
    GoalType goalType1 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize(polynomialFunction0, goalType1, 1.0, (double) 1, (-58.37));
    univariateRealPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0473() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(2906.946, 0.0);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(253, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(1655, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1, well1024a0);
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 1;
    doubleArray0[1] = (double) 1;
    doubleArray0[2] = (double) 1;
    doubleArray0[3] = (double) 1;
    doubleArray0[4] = (double) 1;
    doubleArray0[5] = (double) 1;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    GoalType goalType0 = GoalType.MINIMIZE;
    GoalType goalType1 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize(polynomialFunction0, goalType1, 1.0, (double) 1, (-58.37));
    univariateRealPointValuePair1.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0474() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(2906.946, 0.0);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(253, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(1655, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1, well1024a0);
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 1;
    doubleArray0[1] = (double) 1;
    doubleArray0[2] = (double) 1;
    doubleArray0[3] = (double) 1;
    doubleArray0[4] = (double) 1;
    doubleArray0[5] = (double) 1;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    GoalType goalType0 = GoalType.MINIMIZE;
    GoalType goalType1 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize(polynomialFunction0, goalType1, 1.0, (double) 1, (-58.37));
    univariateRealPointValuePair1.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0586() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0587() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0590() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunction>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0591() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    polynomialFunction0.degree();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0592() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0595() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    polynomialFunction1.equals((Object) polynomialFunction0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0596() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    polynomialFunction1.degree();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test0597() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test05100() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction2 = polynomialFunction1.multiply(polynomialFunction0);
    polynomialFunction0.equals((Object) polynomialFunction1);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test05101() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction2 = polynomialFunction1.multiply(polynomialFunction0);
    polynomialFunction1.equals((Object) polynomialFunction0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test05102() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction2 = polynomialFunction1.multiply(polynomialFunction0);
    polynomialFunction2.equals((Object) polynomialFunction0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test05103() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction2 = polynomialFunction1.multiply(polynomialFunction0);
    polynomialFunction2.equals((Object) polynomialFunction1);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test05104() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction2 = polynomialFunction1.multiply(polynomialFunction0);
    polynomialFunction0.degree();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test05105() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction2 = polynomialFunction1.multiply(polynomialFunction0);
    polynomialFunction1.degree();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test05106() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction2 = polynomialFunction1.multiply(polynomialFunction0);
    polynomialFunction2.degree();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test05107() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction2 = polynomialFunction1.multiply(polynomialFunction0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test05116() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction2 = polynomialFunction1.multiply(polynomialFunction0);
    PolynomialFunction polynomialFunction3 = polynomialFunction0.add(polynomialFunction1);
    polynomialFunction3.equals((Object) polynomialFunction0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test05117() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction2 = polynomialFunction1.multiply(polynomialFunction0);
    PolynomialFunction polynomialFunction3 = polynomialFunction0.add(polynomialFunction1);
    polynomialFunction3.equals((Object) polynomialFunction1);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test05118() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction2 = polynomialFunction1.multiply(polynomialFunction0);
    PolynomialFunction polynomialFunction3 = polynomialFunction0.add(polynomialFunction1);
    polynomialFunction3.equals((Object) polynomialFunction2);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test05119() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction2 = polynomialFunction1.multiply(polynomialFunction0);
    PolynomialFunction polynomialFunction3 = polynomialFunction0.add(polynomialFunction1);
    polynomialFunction0.equals((Object) polynomialFunction2);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test05120() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction2 = polynomialFunction1.multiply(polynomialFunction0);
    PolynomialFunction polynomialFunction3 = polynomialFunction0.add(polynomialFunction1);
    polynomialFunction0.equals((Object) polynomialFunction1);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test05121() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction2 = polynomialFunction1.multiply(polynomialFunction0);
    PolynomialFunction polynomialFunction3 = polynomialFunction0.add(polynomialFunction1);
    polynomialFunction1.equals((Object) polynomialFunction2);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test05122() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction2 = polynomialFunction1.multiply(polynomialFunction0);
    PolynomialFunction polynomialFunction3 = polynomialFunction0.add(polynomialFunction1);
    polynomialFunction1.equals((Object) polynomialFunction0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test05123() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction2 = polynomialFunction1.multiply(polynomialFunction0);
    PolynomialFunction polynomialFunction3 = polynomialFunction0.add(polynomialFunction1);
    polynomialFunction3.degree();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test05124() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction2 = polynomialFunction1.multiply(polynomialFunction0);
    PolynomialFunction polynomialFunction3 = polynomialFunction0.add(polynomialFunction1);
    polynomialFunction0.degree();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test05125() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction2 = polynomialFunction1.multiply(polynomialFunction0);
    PolynomialFunction polynomialFunction3 = polynomialFunction0.add(polynomialFunction1);
    polynomialFunction1.degree();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test05126() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 3694;
    Well44497b well44497b0 = new Well44497b();
    boolean boolean0 = well44497b0.nextBoolean();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 3694, well44497b0);
    double[] doubleArray0 = new double[7];
    doubleArray0[0] = (double) 3694;
    doubleArray0[1] = (double) 3694;
    doubleArray0[2] = (double) 3694;
    doubleArray0[3] = (double) 3694;
    doubleArray0[4] = (double) 3694;
    doubleArray0[5] = (double) 3694;
    doubleArray0[6] = (double) 3694;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction1 = new PolynomialFunction(doubleArray0);
    PolynomialFunction polynomialFunction2 = polynomialFunction1.multiply(polynomialFunction0);
    PolynomialFunction polynomialFunction3 = polynomialFunction0.add(polynomialFunction1);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test06138() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[1];
    intArray0[0] = (-1);
    Well1024a well1024a0 = new Well1024a(intArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test06143() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[1];
    intArray0[0] = (-1);
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>(baseUnivariateRealOptimizer0, 878, well1024a0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test06146() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[1];
    intArray0[0] = (-1);
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>(baseUnivariateRealOptimizer0, 878, well1024a0);
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = (double) 213;
    doubleArray0[1] = (double) (-1);
    PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
    polynomialFunctionLagrangeForm0.degree();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test06147() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[1];
    intArray0[0] = (-1);
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>(baseUnivariateRealOptimizer0, 878, well1024a0);
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = (double) 213;
    doubleArray0[1] = (double) (-1);
    PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test07151() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(95, 95);
    univariateRealPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test07152() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(95, 95);
    univariateRealPointValuePair0.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test07153() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(95, 95);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test07154() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(95, 95);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn((-1), 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(95, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test07157() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(95, 95);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn((-1), 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(95, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1, well1024a0);
    univariateRealPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test07158() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(95, 95);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn((-1), 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(95, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1, well1024a0);
    univariateRealPointValuePair0.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test07161() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(95, 95);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn((-1), 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(95, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1, well1024a0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunction>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test07164() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(95, 95);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn((-1), 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(95, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1, well1024a0);
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 1;
    doubleArray0[1] = (double) 1;
    doubleArray0[2] = (double) 1;
    doubleArray0[3] = (double) 1;
    doubleArray0[4] = (double) 1;
    doubleArray0[5] = (double) 1;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    polynomialFunction0.degree();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test07165() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(95, 95);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn((-1), 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(95, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1, well1024a0);
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 1;
    doubleArray0[1] = (double) 1;
    doubleArray0[2] = (double) 1;
    doubleArray0[3] = (double) 1;
    doubleArray0[4] = (double) 1;
    doubleArray0[5] = (double) 1;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test07168() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(95, 95);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn((-1), 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(95, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1, well1024a0);
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 1;
    doubleArray0[1] = (double) 1;
    doubleArray0[2] = (double) 1;
    doubleArray0[3] = (double) 1;
    doubleArray0[4] = (double) 1;
    doubleArray0[5] = (double) 1;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    GoalType goalType0 = GoalType.MINIMIZE;
    GoalType goalType1 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize(polynomialFunction0, goalType1, 1.0, (double) 1, (-58.37));
    polynomialFunction0.degree();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test07169() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(95, 95);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn((-1), 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(95, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1, well1024a0);
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 1;
    doubleArray0[1] = (double) 1;
    doubleArray0[2] = (double) 1;
    doubleArray0[3] = (double) 1;
    doubleArray0[4] = (double) 1;
    doubleArray0[5] = (double) 1;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    GoalType goalType0 = GoalType.MINIMIZE;
    GoalType goalType1 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize(polynomialFunction0, goalType1, 1.0, (double) 1, (-58.37));
    univariateRealPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test07170() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(95, 95);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn((-1), 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(95, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1, well1024a0);
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 1;
    doubleArray0[1] = (double) 1;
    doubleArray0[2] = (double) 1;
    doubleArray0[3] = (double) 1;
    doubleArray0[4] = (double) 1;
    doubleArray0[5] = (double) 1;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    GoalType goalType0 = GoalType.MINIMIZE;
    GoalType goalType1 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize(polynomialFunction0, goalType1, 1.0, (double) 1, (-58.37));
    univariateRealPointValuePair0.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test07171() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(95, 95);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn((-1), 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(95, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1, well1024a0);
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 1;
    doubleArray0[1] = (double) 1;
    doubleArray0[2] = (double) 1;
    doubleArray0[3] = (double) 1;
    doubleArray0[4] = (double) 1;
    doubleArray0[5] = (double) 1;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    GoalType goalType0 = GoalType.MINIMIZE;
    GoalType goalType1 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize(polynomialFunction0, goalType1, 1.0, (double) 1, (-58.37));
    univariateRealPointValuePair1.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test07172() throws Throwable {
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(95, 95);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn((-1), 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(95, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int[] intArray0 = new int[4];
    intArray0[0] = 1;
    intArray0[1] = 1;
    intArray0[2] = 1;
    intArray0[3] = 1;
    Well1024a well1024a0 = new Well1024a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1, well1024a0);
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 1;
    doubleArray0[1] = (double) 1;
    doubleArray0[2] = (double) 1;
    doubleArray0[3] = (double) 1;
    doubleArray0[4] = (double) 1;
    doubleArray0[5] = (double) 1;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    GoalType goalType0 = GoalType.MINIMIZE;
    GoalType goalType1 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize(polynomialFunction0, goalType1, 1.0, (double) 1, (-58.37));
    univariateRealPointValuePair1.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test08184() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, (-126.151));
    univariateRealPointValuePair0.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test08185() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, (-126.151));
    univariateRealPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test08186() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, (-126.151));
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test08187() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, (-126.151));
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test08188() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, (-126.151));
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) (-1);
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test08190() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, (-126.151));
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) (-1);
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    univariateRealPointValuePair0.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test08191() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, (-126.151));
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) (-1);
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    univariateRealPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test08194() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, (-126.151));
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) (-1);
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunction>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test08195() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, (-126.151));
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) (-1);
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test08196() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, (-126.151));
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) (-1);
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test08197() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, (-126.151));
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) (-1);
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 2450, (double) 0L);
    univariateRealPointValuePair0.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test08198() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, (-126.151));
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) (-1);
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 2450, (double) 0L);
    univariateRealPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test08201() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, (-126.151));
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) (-1);
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 2450, (double) 0L);
    univariateRealPointValuePair1.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test08202() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, (-126.151));
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) (-1);
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 2450, (double) 0L);
    univariateRealPointValuePair1.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test08206() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, (-126.151));
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) (-1);
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 2450, (double) 0L);
    UnivariateRealPointValuePair[] univariateRealPointValuePairArray0 = multiStartUnivariateRealOptimizer0.getOptima();
    univariateRealPointValuePair0.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test08207() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, (-126.151));
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) (-1);
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 2450, (double) 0L);
    UnivariateRealPointValuePair[] univariateRealPointValuePairArray0 = multiStartUnivariateRealOptimizer0.getOptima();
    univariateRealPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test08214() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, (-126.151));
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) (-1);
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 2450, (double) 0L);
    UnivariateRealPointValuePair[] univariateRealPointValuePairArray0 = multiStartUnivariateRealOptimizer0.getOptima();
    UnivariateRealPointValuePair[] univariateRealPointValuePairArray1 = multiStartUnivariateRealOptimizer0.getOptima();
    univariateRealPointValuePair0.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test08215() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, (-126.151));
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) (-1);
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 2450, (double) 0L);
    UnivariateRealPointValuePair[] univariateRealPointValuePairArray0 = multiStartUnivariateRealOptimizer0.getOptima();
    UnivariateRealPointValuePair[] univariateRealPointValuePairArray1 = multiStartUnivariateRealOptimizer0.getOptima();
    univariateRealPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test08222() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, (-126.151));
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) (-1);
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 2450, (double) 0L);
    UnivariateRealPointValuePair[] univariateRealPointValuePairArray0 = multiStartUnivariateRealOptimizer0.getOptima();
    UnivariateRealPointValuePair[] univariateRealPointValuePairArray1 = multiStartUnivariateRealOptimizer0.getOptima();
    Random.setNextRandom(2450);
    int int0 = multiStartUnivariateRealOptimizer0.getEvaluations();
    univariateRealPointValuePair0.getPoint();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test08223() throws Throwable {
    System.setCurrentTimeMillis(0L);
    UnivariateRealPointValuePair univariateRealPointValuePair0 = new UnivariateRealPointValuePair(253.362, (-126.151));
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(47, 47, 53, 869, 100).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(555, 33, 53, 53, 33).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn(univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0, univariateRealPointValuePair0).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) (-1);
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
    GoalType goalType0 = GoalType.MINIMIZE;
    UnivariateRealPointValuePair univariateRealPointValuePair1 = multiStartUnivariateRealOptimizer0.optimize((PolynomialFunction) null, goalType0, (double) 2450, (double) 0L);
    UnivariateRealPointValuePair[] univariateRealPointValuePairArray0 = multiStartUnivariateRealOptimizer0.getOptima();
    UnivariateRealPointValuePair[] univariateRealPointValuePairArray1 = multiStartUnivariateRealOptimizer0.getOptima();
    Random.setNextRandom(2450);
    int int0 = multiStartUnivariateRealOptimizer0.getEvaluations();
    univariateRealPointValuePair0.getValue();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test09228() throws Throwable {
    ConvergenceChecker<UnivariateRealPointValuePair> convergenceChecker0 = (ConvergenceChecker<UnivariateRealPointValuePair>) mock(ConvergenceChecker.class, new ViolatedAssumptionAnswer());
    doReturn((String) null).when(convergenceChecker0).toString();
    BaseUnivariateRealOptimizer<PolynomialSplineFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialSplineFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(convergenceChecker0).when(baseUnivariateRealOptimizer0).getConvergenceChecker();
    MersenneTwister mersenneTwister0 = new MersenneTwister(53);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test09231() throws Throwable {
    ConvergenceChecker<UnivariateRealPointValuePair> convergenceChecker0 = (ConvergenceChecker<UnivariateRealPointValuePair>) mock(ConvergenceChecker.class, new ViolatedAssumptionAnswer());
    doReturn((String) null).when(convergenceChecker0).toString();
    BaseUnivariateRealOptimizer<PolynomialSplineFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialSplineFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(convergenceChecker0).when(baseUnivariateRealOptimizer0).getConvergenceChecker();
    MersenneTwister mersenneTwister0 = new MersenneTwister(53);
    MultiStartUnivariateRealOptimizer<PolynomialSplineFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialSplineFunction>(baseUnivariateRealOptimizer0, 2555, mersenneTwister0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test09238() throws Throwable {
    ConvergenceChecker<UnivariateRealPointValuePair> convergenceChecker0 = (ConvergenceChecker<UnivariateRealPointValuePair>) mock(ConvergenceChecker.class, new ViolatedAssumptionAnswer());
    doReturn((String) null).when(convergenceChecker0).toString();
    BaseUnivariateRealOptimizer<PolynomialSplineFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialSplineFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(convergenceChecker0).when(baseUnivariateRealOptimizer0).getConvergenceChecker();
    MersenneTwister mersenneTwister0 = new MersenneTwister(53);
    MultiStartUnivariateRealOptimizer<PolynomialSplineFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialSplineFunction>(baseUnivariateRealOptimizer0, 2555, mersenneTwister0);
    ConvergenceChecker<UnivariateRealPointValuePair> convergenceChecker1 = multiStartUnivariateRealOptimizer0.getConvergenceChecker();
    BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm> baseUnivariateRealOptimizer1 = (BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    MultiStartUnivariateRealOptimizer<PolynomialFunctionNewtonForm> multiStartUnivariateRealOptimizer1 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionNewtonForm>(baseUnivariateRealOptimizer1, (-1), mersenneTwister0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test10243() throws Throwable {
    System.setCurrentTimeMillis(0L);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 2450;
    Well19937c well19937c0 = new Well19937c(2450);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test10244() throws Throwable {
    System.setCurrentTimeMillis(0L);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 2450;
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) (-1);
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test10248() throws Throwable {
    System.setCurrentTimeMillis(0L);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 2450;
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) (-1);
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunction>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test10249() throws Throwable {
    System.setCurrentTimeMillis(0L);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 2450;
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) (-1);
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test10250() throws Throwable {
    System.setCurrentTimeMillis(0L);
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 2450;
    Well19937c well19937c0 = new Well19937c(2450);
    well19937c0.setSeed(0L);
    byte[] byteArray0 = new byte[4];
    byteArray0[0] = (byte) 5;
    byteArray0[1] = (byte) 3;
    byteArray0[2] = (byte) (-1);
    byteArray0[3] = (byte) 0;
    well19937c0.nextBytes(byteArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2450, well19937c0);
    boolean boolean0 = well19937c0.nextBoolean();
    float float0 = well19937c0.nextFloat();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test11254() throws Throwable {
    int int0 = 0;
    RandomGenerator randomGenerator0 = null;
    MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>((BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) null, 0, (RandomGenerator) null);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test11257() throws Throwable {
    int int0 = 0;
    RandomGenerator randomGenerator0 = null;
    MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>((BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) null, 0, (RandomGenerator) null);
    BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn((ConvergenceChecker) null).when(baseUnivariateRealOptimizer0).getConvergenceChecker();
    MultiStartUnivariateRealOptimizer<PolynomialFunctionNewtonForm> multiStartUnivariateRealOptimizer1 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionNewtonForm>(baseUnivariateRealOptimizer0, 0, (RandomGenerator) null);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test12262() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    Well1024a well1024a0 = new Well1024a();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test12263() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    Well1024a well1024a0 = new Well1024a();
    float float0 = well1024a0.nextFloat();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test12266() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    Well1024a well1024a0 = new Well1024a();
    float float0 = well1024a0.nextFloat();
    MultiStartUnivariateRealOptimizer<PolynomialFunctionNewtonForm> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionNewtonForm>(baseUnivariateRealOptimizer0, (-18), well1024a0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test12271() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    Well1024a well1024a0 = new Well1024a();
    float float0 = well1024a0.nextFloat();
    MultiStartUnivariateRealOptimizer<PolynomialFunctionNewtonForm> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionNewtonForm>(baseUnivariateRealOptimizer0, (-18), well1024a0);
    multiStartUnivariateRealOptimizer0.setMaxEvaluations(116);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer1 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>((BaseUnivariateRealOptimizer<PolynomialFunction>) null, 116, well1024a0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunction>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test13275() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1039, (RandomGenerator) null);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunction>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test13276() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1039, (RandomGenerator) null);
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = (double) 1039;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    polynomialFunction0.degree();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test13277() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn(0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 1039, (RandomGenerator) null);
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = (double) 1039;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test14281() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    Well1024a well1024a0 = new Well1024a();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test14284() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    Well1024a well1024a0 = new Well1024a();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, (-2728), well1024a0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunction>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test14292() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    Well1024a well1024a0 = new Well1024a();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, (-2728), well1024a0);
    multiStartUnivariateRealOptimizer0.setMaxEvaluations(1);
    int int0 = multiStartUnivariateRealOptimizer0.getMaxEvaluations();
    BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm> baseUnivariateRealOptimizer1 = (BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    MultiStartUnivariateRealOptimizer<PolynomialFunctionNewtonForm> multiStartUnivariateRealOptimizer1 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionNewtonForm>(baseUnivariateRealOptimizer1, (-2728), well1024a0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test14293() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    Well1024a well1024a0 = new Well1024a();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, (-2728), well1024a0);
    multiStartUnivariateRealOptimizer0.setMaxEvaluations(1);
    int int0 = multiStartUnivariateRealOptimizer0.getMaxEvaluations();
    BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm> baseUnivariateRealOptimizer1 = (BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    MultiStartUnivariateRealOptimizer<PolynomialFunctionNewtonForm> multiStartUnivariateRealOptimizer1 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionNewtonForm>(baseUnivariateRealOptimizer1, (-2728), well1024a0);
    double[] doubleArray0 = new double[4];
    doubleArray0[0] = (double) 1;
    doubleArray0[1] = (double) 1;
    doubleArray0[2] = (double) 1;
    doubleArray0[3] = (double) (-2728);
    PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = null;
    polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test15294() throws Throwable {
    int int0 = 112;
    Well19937c well19937c0 = new Well19937c((long) 112);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test15297() throws Throwable {
    int int0 = 112;
    Well19937c well19937c0 = new Well19937c((long) 112);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>((BaseUnivariateRealOptimizer<PolynomialFunction>) null, 112, well19937c0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunction>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test16299() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    int[] intArray0 = new int[2];
    intArray0[0] = (-1468);
    intArray0[1] = (-1468);
    Well44497a well44497a0 = new Well44497a(intArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test16304() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    int[] intArray0 = new int[2];
    intArray0[0] = (-1468);
    intArray0[1] = (-1468);
    Well44497a well44497a0 = new Well44497a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>(baseUnivariateRealOptimizer0, (-1468), well44497a0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test16307() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    int[] intArray0 = new int[2];
    intArray0[0] = (-1468);
    intArray0[1] = (-1468);
    Well44497a well44497a0 = new Well44497a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>(baseUnivariateRealOptimizer0, (-1468), well44497a0);
    double[] doubleArray0 = new double[4];
    doubleArray0[0] = (double) (-1468);
    doubleArray0[1] = (double) (-1468);
    doubleArray0[2] = (double) (-1468);
    doubleArray0[3] = (double) (-1468);
    PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
    polynomialFunctionLagrangeForm0.degree();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test16308() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    int[] intArray0 = new int[2];
    intArray0[0] = (-1468);
    intArray0[1] = (-1468);
    Well44497a well44497a0 = new Well44497a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>(baseUnivariateRealOptimizer0, (-1468), well44497a0);
    double[] doubleArray0 = new double[4];
    doubleArray0[0] = (double) (-1468);
    doubleArray0[1] = (double) (-1468);
    doubleArray0[2] = (double) (-1468);
    doubleArray0[3] = (double) (-1468);
    PolynomialFunctionLagrangeForm polynomialFunctionLagrangeForm0 = new PolynomialFunctionLagrangeForm(doubleArray0, doubleArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test17312() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    long long0 = 0L;
    Well19937a well19937a0 = new Well19937a(0L);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test17313() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    long long0 = 0L;
    Well19937a well19937a0 = new Well19937a(0L);
    RandomAdaptor randomAdaptor0 = new RandomAdaptor(well19937a0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test17316() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    long long0 = 0L;
    Well19937a well19937a0 = new Well19937a(0L);
    RandomAdaptor randomAdaptor0 = new RandomAdaptor(well19937a0);
    MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>(baseUnivariateRealOptimizer0, 185, randomAdaptor0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test17322() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    long long0 = 0L;
    Well19937a well19937a0 = new Well19937a(0L);
    RandomAdaptor randomAdaptor0 = new RandomAdaptor(well19937a0);
    MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>(baseUnivariateRealOptimizer0, 185, randomAdaptor0);
    int int0 = multiStartUnivariateRealOptimizer0.getMaxEvaluations();
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer1 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn((ConvergenceChecker) null).when(baseUnivariateRealOptimizer1).getConvergenceChecker();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer1).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer1).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer1).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int1 = 52;
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer1 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer1, 52, randomAdaptor0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunction>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test17323() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    long long0 = 0L;
    Well19937a well19937a0 = new Well19937a(0L);
    RandomAdaptor randomAdaptor0 = new RandomAdaptor(well19937a0);
    MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>(baseUnivariateRealOptimizer0, 185, randomAdaptor0);
    int int0 = multiStartUnivariateRealOptimizer0.getMaxEvaluations();
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer1 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn((ConvergenceChecker) null).when(baseUnivariateRealOptimizer1).getConvergenceChecker();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer1).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer1).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer1).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int1 = 52;
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer1 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer1, 52, randomAdaptor0);
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 185;
    doubleArray0[1] = (double) 52;
    int int2 = randomAdaptor0.nextInt(52);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test17329() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    long long0 = 0L;
    Well19937a well19937a0 = new Well19937a(0L);
    RandomAdaptor randomAdaptor0 = new RandomAdaptor(well19937a0);
    MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>(baseUnivariateRealOptimizer0, 185, randomAdaptor0);
    int int0 = multiStartUnivariateRealOptimizer0.getMaxEvaluations();
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer1 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn((ConvergenceChecker) null).when(baseUnivariateRealOptimizer1).getConvergenceChecker();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer1).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer1).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer1).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int1 = 52;
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer1 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer1, 52, randomAdaptor0);
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 185;
    doubleArray0[1] = (double) 52;
    int int2 = randomAdaptor0.nextInt(52);
    ConvergenceChecker<UnivariateRealPointValuePair> convergenceChecker0 = multiStartUnivariateRealOptimizer1.getConvergenceChecker();
    doubleArray0[2] = (double) 0L;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    polynomialFunction0.degree();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test17330() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    long long0 = 0L;
    Well19937a well19937a0 = new Well19937a(0L);
    RandomAdaptor randomAdaptor0 = new RandomAdaptor(well19937a0);
    MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>(baseUnivariateRealOptimizer0, 185, randomAdaptor0);
    int int0 = multiStartUnivariateRealOptimizer0.getMaxEvaluations();
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer1 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn((ConvergenceChecker) null).when(baseUnivariateRealOptimizer1).getConvergenceChecker();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer1).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer1).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer1).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int1 = 52;
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer1 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer1, 52, randomAdaptor0);
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = (double) 185;
    doubleArray0[1] = (double) 52;
    int int2 = randomAdaptor0.nextInt(52);
    ConvergenceChecker<UnivariateRealPointValuePair> convergenceChecker0 = multiStartUnivariateRealOptimizer1.getConvergenceChecker();
    doubleArray0[2] = (double) 0L;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test18334() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    MersenneTwister mersenneTwister0 = new MersenneTwister(1);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test18337() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    MersenneTwister mersenneTwister0 = new MersenneTwister(1);
    MultiStartUnivariateRealOptimizer<PolynomialFunctionNewtonForm> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionNewtonForm>(baseUnivariateRealOptimizer0, 5116, mersenneTwister0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test19340() throws Throwable {
    MersenneTwister mersenneTwister0 = new MersenneTwister();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test19343() throws Throwable {
    MersenneTwister mersenneTwister0 = new MersenneTwister();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>((BaseUnivariateRealOptimizer<PolynomialFunction>) null, 0, mersenneTwister0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunction>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test20345() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    Well512a well512a0 = new Well512a((long) 0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test20348() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    Well512a well512a0 = new Well512a((long) 0);
    MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>(baseUnivariateRealOptimizer0, 0, well512a0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test21352() throws Throwable {
    JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test21352() throws Throwable {
    JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.VariableDeclarationExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.VariableDeclarationExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test21355() throws Throwable {
    JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>((BaseUnivariateRealOptimizer<PolynomialFunction>) null, 0, jDKRandomGenerator0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunction>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test22357() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    int int0 = 3765;
    Well1024a well1024a0 = new Well1024a((long) 3765);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test22360() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    int int0 = 3765;
    Well1024a well1024a0 = new Well1024a((long) 3765);
    MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>(baseUnivariateRealOptimizer0, 3765, well1024a0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test22361() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    int int0 = 3765;
    Well1024a well1024a0 = new Well1024a((long) 3765);
    MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>(baseUnivariateRealOptimizer0, 3765, well1024a0);
    BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm> baseUnivariateRealOptimizer1 = (BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    int[] intArray0 = new int[9];
    intArray0[0] = 3765;
    intArray0[1] = 3765;
    intArray0[2] = 3765;
    intArray0[3] = 3765;
    intArray0[4] = 3765;
    intArray0[5] = 4531;
    intArray0[6] = 3765;
    intArray0[7] = 3765;
    intArray0[8] = 3765;
    Well44497a well44497a0 = new Well44497a(intArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test22366() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    int int0 = 3765;
    Well1024a well1024a0 = new Well1024a((long) 3765);
    MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>(baseUnivariateRealOptimizer0, 3765, well1024a0);
    BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm> baseUnivariateRealOptimizer1 = (BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    int[] intArray0 = new int[9];
    intArray0[0] = 3765;
    intArray0[1] = 3765;
    intArray0[2] = 3765;
    intArray0[3] = 3765;
    intArray0[4] = 3765;
    intArray0[5] = 4531;
    intArray0[6] = 3765;
    intArray0[7] = 3765;
    intArray0[8] = 3765;
    Well44497a well44497a0 = new Well44497a(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunctionNewtonForm> multiStartUnivariateRealOptimizer1 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionNewtonForm>((BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm>) null, 4531, well44497a0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test23370() throws Throwable {
    Well1024a well1024a0 = new Well1024a((long) (-571));
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test23373() throws Throwable {
    Well1024a well1024a0 = new Well1024a((long) (-571));
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>((BaseUnivariateRealOptimizer<PolynomialFunction>) null, (-571), well1024a0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunction>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test23374() throws Throwable {
    Well1024a well1024a0 = new Well1024a((long) (-571));
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>((BaseUnivariateRealOptimizer<PolynomialFunction>) null, (-571), well1024a0);
    double[] doubleArray0 = new double[4];
    doubleArray0[0] = (-1777.9833);
    doubleArray0[1] = (double) (-571);
    doubleArray0[2] = (double) (-571);
    doubleArray0[3] = (double) (-571);
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    polynomialFunction0.degree();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test23375() throws Throwable {
    Well1024a well1024a0 = new Well1024a((long) (-571));
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>((BaseUnivariateRealOptimizer<PolynomialFunction>) null, (-571), well1024a0);
    double[] doubleArray0 = new double[4];
    doubleArray0[0] = (-1777.9833);
    doubleArray0[1] = (double) (-571);
    doubleArray0[2] = (double) (-571);
    doubleArray0[3] = (double) (-571);
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test24379() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    int int0 = 0;
    int[] intArray0 = new int[2];
    intArray0[0] = 0;
    intArray0[1] = 205;
    MersenneTwister mersenneTwister0 = new MersenneTwister(intArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test24384() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    int int0 = 0;
    int[] intArray0 = new int[2];
    intArray0[0] = 0;
    intArray0[1] = 205;
    MersenneTwister mersenneTwister0 = new MersenneTwister(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 0, mersenneTwister0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunction>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test24387() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    int int0 = 0;
    int[] intArray0 = new int[2];
    intArray0[0] = 0;
    intArray0[1] = 205;
    MersenneTwister mersenneTwister0 = new MersenneTwister(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 0, mersenneTwister0);
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = (double) 0;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    polynomialFunction0.degree();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test24388() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    int int0 = 0;
    int[] intArray0 = new int[2];
    intArray0[0] = 0;
    intArray0[1] = 205;
    MersenneTwister mersenneTwister0 = new MersenneTwister(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 0, mersenneTwister0);
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = (double) 0;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test24391() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    int int0 = 0;
    int[] intArray0 = new int[2];
    intArray0[0] = 0;
    intArray0[1] = 205;
    MersenneTwister mersenneTwister0 = new MersenneTwister(intArray0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 0, mersenneTwister0);
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = (double) 0;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    float float0 = mersenneTwister0.nextFloat();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test25395() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn((ConvergenceChecker) null).when(baseUnivariateRealOptimizer0).getConvergenceChecker();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 4420;
    Well512a well512a0 = new Well512a();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test25398() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn((ConvergenceChecker) null).when(baseUnivariateRealOptimizer0).getConvergenceChecker();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getEvaluations();
    doReturn(0, 0, 0, 0, 0).when(baseUnivariateRealOptimizer0).getMaxEvaluations();
    doReturn((UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null, (UnivariateRealPointValuePair) null).when(baseUnivariateRealOptimizer0).optimize(any(org.apache.commons.math.analysis.polynomials.PolynomialFunction.class), any(org.apache.commons.math.optimization.GoalType.class), anyDouble(), anyDouble());
    int int0 = 4420;
    Well512a well512a0 = new Well512a();
    well512a0.setSeed(4420);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 4420, well512a0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer<org/apache/commons/math/analysis/polynomials/PolynomialFunction>.java
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test27408() throws Throwable {
    double[] doubleArray0 = new double[2];
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    double[] doubleArray1 = new double[8];
    doubleArray1[1] = (-1.0);
    doubleArray1[3] = (-1.0);
    doubleArray1[5] = 1325.0;
    doubleArray1[7] = (-1.0);
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test28409() throws Throwable {
    BaseUnivariateRealOptimizer<PolynomialFunction> baseUnivariateRealOptimizer0 = (BaseUnivariateRealOptimizer<PolynomialFunction>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    int[] intArray0 = new int[7];
    intArray0[0] = 2327;
    intArray0[1] = 2327;
    intArray0[2] = 2327;
    intArray0[3] = 2327;
    intArray0[4] = 2327;
    intArray0[5] = 2327;
    intArray0[6] = 2327;
    MersenneTwister mersenneTwister0 = new MersenneTwister(intArray0);
    mersenneTwister0.nextDouble();
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer0 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(baseUnivariateRealOptimizer0, 2327, mersenneTwister0);
    MultiStartUnivariateRealOptimizer<PolynomialFunction> multiStartUnivariateRealOptimizer1 = new MultiStartUnivariateRealOptimizer<PolynomialFunction>(multiStartUnivariateRealOptimizer0, 2327, mersenneTwister0);
    BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm> baseUnivariateRealOptimizer1 = (BaseUnivariateRealOptimizer<PolynomialFunctionNewtonForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    doReturn((ConvergenceChecker) null).when(baseUnivariateRealOptimizer1).getConvergenceChecker();
    MultiStartUnivariateRealOptimizer<PolynomialFunctionNewtonForm> multiStartUnivariateRealOptimizer2 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionNewtonForm>(baseUnivariateRealOptimizer1, 2327, mersenneTwister0);
    multiStartUnivariateRealOptimizer2.getConvergenceChecker();
    multiStartUnivariateRealOptimizer1.setConvergenceChecker((ConvergenceChecker<UnivariateRealPointValuePair>) null);
    BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> baseUnivariateRealOptimizer2 = (BaseUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>) mock(BaseUnivariateRealOptimizer.class, new ViolatedAssumptionAnswer());
    MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm> multiStartUnivariateRealOptimizer3 = new MultiStartUnivariateRealOptimizer<PolynomialFunctionLagrangeForm>(baseUnivariateRealOptimizer2, 2327, mersenneTwister0);
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = 0.0;
    doubleArray0[1] = (double) 2327;
    doubleArray0[2] = 0.0;
    doubleArray0[3] = (double) 2327;
    doubleArray0[4] = (double) 2327;
    doubleArray0[5] = (double) 2327;
    doubleArray0[6] = (double) 2327;
    doubleArray0[7] = (double) 2327;
    PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer,@Test(timeout = 4000)
public void test30411() throws Throwable {
    int[] intArray0 = new int[6];
    Well1024a well1024a0 = new Well1024a(intArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
