project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    SimpleVectorValueChecker simpleVectorValueChecker0 = new SimpleVectorValueChecker(0.0, 0.0);
    LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer(simpleVectorValueChecker0);
    OptimizationData[] optimizationDataArray0 = new OptimizationData[7];
    double[] doubleArray0 = new double[3];
    doubleArray0[0] = (double) 1;
    doubleArray0[1] = (double) 11;
    doubleArray0[2] = (double) 32;
    DiagonalMatrix diagonalMatrix0 = new DiagonalMatrix(doubleArray0);
    Weight weight0 = new Weight(diagonalMatrix0);
    optimizationDataArray0[6] = (OptimizationData) weight0;
    // Undeclared exception!
    try {
        levenbergMarquardtOptimizer0.optimize(optimizationDataArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer"", e);
    }
}",0,
project,0,test011,"public void test011() throws Throwable {
    LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer(0.0, 0.0, 1390.983231656, 0.0, 0.0);
    double[] doubleArray0 = new double[4];
    // Undeclared exception!
    try {
        levenbergMarquardtOptimizer0.computeCost(doubleArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer"", e);
    }
}",0,
project,0,test022,"public void test022() throws Throwable {
    LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer((-453.9606066), (-453.9606066), (-453.9606066), (-453.9606066), (-453.9606066));
    levenbergMarquardtOptimizer0.setCost(74.817);
    double double0 = levenbergMarquardtOptimizer0.getChiSquare();
    assertEquals(5597.583488999999, double0, 0.01);
}",0,
project,0,test033,"public void test033() throws Throwable {
    LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
    OptimizationData[] optimizationDataArray0 = new OptimizationData[6];
    DiagonalMatrix diagonalMatrix0 = new DiagonalMatrix(719);
    Weight weight0 = new Weight(diagonalMatrix0);
    optimizationDataArray0[1] = (OptimizationData) weight0;
    // Undeclared exception!
    levenbergMarquardtOptimizer0.optimize(optimizationDataArray0);
}",0,
project,0,test044,"public void test044() throws Throwable {
    double[] doubleArray0 = new double[0];
    LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
    OptimizationData[] optimizationDataArray0 = new OptimizationData[8];
    DiagonalMatrix diagonalMatrix0 = new DiagonalMatrix(doubleArray0);
    Weight weight0 = new Weight(diagonalMatrix0);
    optimizationDataArray0[4] = (OptimizationData) weight0;
    // Undeclared exception!
    try {
        levenbergMarquardtOptimizer0.optimize(optimizationDataArray0);
        fail(""Expecting exception: NegativeArraySizeException"");
    } catch (NegativeArraySizeException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math3.linear.TriDiagonalTransformer"", e);
    }
}",0,
project,0,test055,"public void test055() throws Throwable {
    SimplePointChecker<PointVectorValuePair> simplePointChecker0 = new SimplePointChecker<PointVectorValuePair>((-1.0), (-1.0));
    GaussNewtonOptimizer gaussNewtonOptimizer0 = new GaussNewtonOptimizer(true, simplePointChecker0);
    double[] doubleArray0 = new double[5];
    // Undeclared exception!
    try {
        gaussNewtonOptimizer0.computeWeightedJacobian(doubleArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer"", e);
    }
}",0,
project,0,test066,"public void test066() throws Throwable {
    LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
    double[] doubleArray0 = new double[0];
    // Undeclared exception!
    try {
        levenbergMarquardtOptimizer0.computeSigma(doubleArray0, 0.0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer"", e);
    }
}",0,
project,0,test077,"public void test077() throws Throwable {
    LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
    double[] doubleArray0 = new double[8];
    // Undeclared exception!
    try {
        levenbergMarquardtOptimizer0.computeResiduals(doubleArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer"", e);
    }
}",0,
project,0,test088,"public void test088() throws Throwable {
    LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer((-453.9606066), (-453.9606066), (-453.9606066), (-453.9606066), (-453.9606066));
    double double0 = levenbergMarquardtOptimizer0.getChiSquare();
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test099,"public void test099() throws Throwable {
    LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
    // Undeclared exception!
    try {
        levenbergMarquardtOptimizer0.getWeightSquareRoot();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer"", e);
    }
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
    OptimizationData[] optimizationDataArray0 = new OptimizationData[8];
    double[] doubleArray0 = new double[6];
    DiagonalMatrix diagonalMatrix0 = new DiagonalMatrix(doubleArray0);
    Weight weight0 = new Weight(diagonalMatrix0);
    optimizationDataArray0[1] = (OptimizationData) weight0;
    // Undeclared exception!
    try {
        levenbergMarquardtOptimizer0.optimize(optimizationDataArray0);
        fail(""Expecting exception: MathUnsupportedOperationException"");
    } catch (MathUnsupportedOperationException e) {
        //
        // unsupported operation
        //
        verifyException(""org.apache.commons.math3.linear.EigenDecomposition"", e);
    }
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer(9.394561, 9.394561, 9.394561, 9.394561, 9.394561);
    // Undeclared exception!
    try {
        levenbergMarquardtOptimizer0.getRMS();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer"", e);
    }
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
    OptimizationData[] optimizationDataArray0 = new OptimizationData[2];
    // Undeclared exception!
    try {
        levenbergMarquardtOptimizer0.optimize(optimizationDataArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer"", e);
    }
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer();
    double[] doubleArray0 = new double[7];
    // Undeclared exception!
    try {
        levenbergMarquardtOptimizer0.computeCovariances(doubleArray0, 0.0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer"", e);
    }
}",0,
