focal_method,test_prefix,docstring
"int getColumnDimension();","public void test00() throws Throwable {
    double[] doubleArray0 = new double[3];
    Weight weight0 = new Weight(doubleArray0);
    RealMatrix realMatrix0 = weight0.getWeight();
    assertEquals(3, realMatrix0.getColumnDimension());
}","/**
 * Returns the number of columns in the matrix.
 *
 * @return columnDimension
 */"
"public Weight(RealMatrix weight) {
    if (weight.getColumnDimension() != weight.getRowDimension()) {
        throw new NonSquareMatrixException(weight.getColumnDimension(), weight.getRowDimension());
    }
    weightMatrix = weight.copy();
}","public void test11() throws Throwable {
    Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(3318, 3318);
    Weight weight0 = new Weight(array2DRowRealMatrix0);
}","/**
 * @param weight Weight matrix.
 * @throws NonSquareMatrixException if the argument is not
 * a square matrix.
 */"
"public Weight(RealMatrix weight) {
    if (weight.getColumnDimension() != weight.getRowDimension()) {
        throw new NonSquareMatrixException(weight.getColumnDimension(), weight.getRowDimension());
    }
    weightMatrix = weight.copy();
}","public void test22() throws Throwable {
    Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(31, 2300);
    Weight weight0 = null;
    try {
        weight0 = new Weight(array2DRowRealMatrix0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // non square (2,300x31) matrix
        //
        verifyException(""org.apache.commons.math3.optim.nonlinear.vector.Weight"", e);
    }
}","/**
 * @param weight Weight matrix.
 * @throws NonSquareMatrixException if the argument is not
 * a square matrix.
 */"
