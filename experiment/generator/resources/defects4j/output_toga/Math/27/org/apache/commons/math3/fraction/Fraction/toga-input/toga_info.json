{
  "test1212" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    int int0 = (-2038);\n    Fraction fraction0 = new Fraction((-1886.8021), (-1.0), (-2038));\n    Fraction fraction1 = fraction0.ONE_QUARTER.abs();\n    fraction1.percentageValue();\n}",
    "testName" : "test1212"
  },
  "test4646" : {
    "methodSignature" : "public Fraction divide(final int i)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4646() throws Throwable {\n    Fraction fraction0 = new Fraction(4061.2371117112, 4061.2371117112, 8388607);\n    fraction0.MINUS_ONE.add(8388607);\n    Fraction fraction1 = Fraction.ONE_THIRD;\n    fraction0.ONE.multiply(fraction1);\n    fraction0.divide(2);\n}",
    "testName" : "test4646"
  },
  "test3434" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    Fraction fraction1 = Fraction.FOUR_FIFTHS;\n    fraction0.divide(1842);\n    fraction0.ZERO.add(1842);\n    fraction0.TWO_THIRDS.divide(fraction1);\n    fraction0.longValue();\n}",
    "testName" : "test3434"
  },
  "test6868" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6868() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = Fraction.MINUS_ONE;\n    fraction0.compareTo(fraction1);\n    Fraction fraction2 = fraction1.divide(fraction0);\n    fraction0.ONE.getField();\n    Fraction fraction3 = fraction0.ONE_FIFTH.multiply(fraction1);\n    Fraction fraction4 = fraction3.ZERO.abs();\n    fraction2.longValue();\n    fraction0.floatValue();\n    fraction4.floatValue();\n}",
    "testName" : "test6868"
  },
  "test5656" : {
    "methodSignature" : "public Fraction multiply(final int i)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5656() throws Throwable {\n    Fraction fraction0 = new Fraction((-208.791664943), 959);\n    Fraction fraction1 = fraction0.abs();\n    fraction0.MINUS_ONE.subtract(fraction1);\n    fraction0.getDenominator();\n    fraction1.getField();\n    fraction1.multiply(959);\n}",
    "testName" : "test5656"
  },
  "test2424" : {
    "methodSignature" : "public Fraction multiply(final int i)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    Fraction fraction0 = new Fraction(1.0E-5);\n    fraction0.THREE_FIFTHS.getField();\n    Fraction fraction1 = fraction0.divide((-379));\n    fraction1.multiply((-379));\n}",
    "testName" : "test2424"
  },
  "test7878" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7878() throws Throwable {\n    Fraction fraction0 = new Fraction((-1.0));\n    fraction0.ONE_HALF.percentageValue();\n    Fraction fraction1 = fraction0.add(4312);\n    fraction1.hashCode();\n    fraction1.getNumerator();\n    fraction1.floatValue();\n    Fraction fraction2 = Fraction.getReducedFraction(3320, 3320);\n    fraction2.TWO_QUARTERS.multiply(4312);\n    fraction0.getField();\n    Fraction fraction3 = Fraction.getReducedFraction(4312, 3320);\n    fraction3.ONE_FIFTH.abs();\n    fraction0.intValue();\n    fraction2.negate();\n    Fraction fraction4 = new Fraction(0.0, 4311);\n    fraction1.equals(fraction4);\n}",
    "testName" : "test7878"
  },
  "test1010" : {
    "methodSignature" : "public Fraction subtract(final int i)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Fraction fraction0 = new Fraction(0.0, 7.734335768410164E-14, 1879048192);\n    Fraction fraction1 = fraction0.add((-2290));\n    Fraction fraction2 = fraction1.TWO_THIRDS.abs();\n    fraction0.getDenominator();\n    fraction1.getDenominator();\n    Fraction fraction3 = fraction1.subtract(fraction2);\n    fraction2.getField();\n    Fraction fraction4 = Fraction.TWO_QUARTERS;\n    Fraction fraction5 = fraction0.subtract(fraction4);\n    fraction0.TWO_FIFTHS.multiply(fraction4);\n    Fraction fraction6 = fraction0.TWO_FIFTHS.negate();\n    Fraction fraction7 = fraction1.divide((-2147483646));\n    Fraction fraction8 = fraction7.ONE_THIRD.multiply(fraction2);\n    fraction3.getField();\n    Fraction fraction9 = fraction6.add(fraction5);\n    fraction9.TWO_THIRDS.multiply((-2147483646));\n    fraction6.abs();\n    Fraction fraction10 = fraction4.reciprocal();\n    fraction10.getDenominator();\n    Fraction fraction11 = fraction4.subtract(fraction6);\n    fraction3.multiply(fraction10);\n    fraction9.multiply(1);\n    Fraction fraction12 = fraction11.subtract(fraction8);\n    fraction5.compareTo(fraction0);\n    fraction8.compareTo(fraction0);\n    Fraction fraction13 = Fraction.ONE_HALF;\n    fraction5.add(fraction13);\n    fraction12.subtract((-90));\n}",
    "testName" : "test1010"
  },
  "test4444" : {
    "methodSignature" : "public Fraction negate()",
    "methodName" : "negate",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4444() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    fraction0.TWO_QUARTERS.multiply(984);\n    fraction0.negate();\n}",
    "testName" : "test4444"
  },
  "test3232" : {
    "methodSignature" : "public Fraction divide(Fraction fraction)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    Fraction fraction0 = Fraction.MINUS_ONE;\n    Fraction fraction1 = Fraction.TWO_QUARTERS;\n    fraction1.THREE_FIFTHS.percentageValue();\n    fraction0.divide(fraction1);\n}",
    "testName" : "test3232"
  },
  "test6666" : {
    "methodSignature" : "public Fraction reciprocal()",
    "methodName" : "reciprocal",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6666() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_FIFTHS;\n    Fraction fraction1 = fraction0.TWO_QUARTERS.add((-1059));\n    Fraction fraction2 = fraction1.multiply((Fraction) null);\n    fraction1.ONE_THIRD.toString();\n    fraction2.THREE_FIFTHS.reciprocal();\n}",
    "testName" : "test6666"
  },
  "test8888" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8888() throws Throwable {\n    Fraction fraction0 = Fraction.TWO;\n    fraction0.equals(\"Me|<[@o.O]r,Iz\");\n    Fraction fraction1 = fraction0.subtract(754);\n    Fraction fraction2 = fraction1.reciprocal();\n    fraction2.MINUS_ONE.percentageValue();\n    Fraction fraction3 = fraction1.ONE_QUARTER.subtract(2379);\n    fraction3.FOUR_FIFTHS.add(2379);\n    fraction0.FOUR_FIFTHS.abs();\n    Fraction fraction4 = fraction0.negate();\n    fraction4.ONE.toString();\n    Fraction fraction5 = fraction0.negate();\n    Fraction fraction6 = fraction5.THREE_FIFTHS.add(fraction2);\n    fraction6.TWO_FIFTHS.abs();\n    fraction6.TWO_FIFTHS.divide(fraction3);\n    fraction5.negate();\n    Fraction.getReducedFraction(2379, 2379);\n    fraction2.subtract(754);\n    fraction5.equals(fraction4);\n}",
    "testName" : "test8888"
  },
  "test5454" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5454() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = Fraction.ONE_THIRD;\n    fraction0.TWO.divide(fraction1);\n    Fraction fraction2 = fraction0.divide((-2774));\n    fraction0.doubleValue();\n    fraction0.intValue();\n    fraction2.negate();\n    fraction0.getDenominator();\n}",
    "testName" : "test5454"
  },
  "test2222" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    Fraction fraction0 = new Fraction(4);\n    fraction0.getDenominator();\n}",
    "testName" : "test2222"
  },
  "test7676" : {
    "methodSignature" : "public Fraction subtract(Fraction fraction)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7676() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(1, 1);\n    fraction0.getNumerator();\n    Fraction fraction1 = fraction0.add((-351));\n    Fraction fraction2 = fraction1.ZERO.divide(fraction0);\n    Fraction fraction3 = fraction1.ONE_FIFTH.add(1);\n    Fraction fraction4 = fraction3.THREE_QUARTERS.multiply(fraction2);\n    Fraction fraction5 = fraction1.ONE_QUARTER.negate();\n    fraction5.TWO_THIRDS.percentageValue();\n    fraction1.doubleValue();\n    Fraction fraction6 = fraction0.add((-3465));\n    fraction6.TWO_THIRDS.divide(99);\n    Fraction fraction7 = fraction2.subtract(1);\n    fraction7.ONE_HALF.multiply(31);\n    fraction1.getField();\n    fraction7.ONE_QUARTER.divide(201);\n    fraction7.add(1);\n    fraction6.getDenominator();\n    fraction5.subtract(1);\n    Fraction fraction8 = fraction7.negate();\n    fraction8.floatValue();\n    fraction5.compareTo(fraction7);\n    fraction4.subtract(fraction1);\n}",
    "testName" : "test7676"
  },
  "test033" : {
    "methodSignature" : "public Fraction multiply(Fraction fraction)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Fraction fraction0 = Fraction.TWO;\n    Fraction fraction1 = Fraction.TWO;\n    Fraction fraction2 = fraction0.add(fraction1);\n    int int0 = 2236;\n    Fraction fraction3 = Fraction.getReducedFraction(2236, (-2329));\n    fraction0.getNumerator();\n    Fraction fraction4 = new Fraction(2);\n    Fraction fraction5 = fraction0.FOUR_FIFTHS.divide(fraction4);\n    Fraction fraction6 = fraction3.TWO_FIFTHS.multiply(fraction5);\n    fraction6.add(fraction5);\n    Fraction fraction7 = fraction5.ONE_THIRD.add(fraction2);\n    fraction0.hashCode();\n    Fraction fraction8 = fraction0.subtract(613);\n    fraction0.compareTo(fraction1);\n    fraction0.getField();\n    fraction5.equals(fraction4);\n    Fraction fraction9 = fraction0.subtract(fraction8);\n    fraction9.ONE_FIFTH.percentageValue();\n    fraction8.MINUS_ONE.divide(0);\n    fraction8.abs();\n    fraction3.multiply(fraction7);\n}",
    "testName" : "test033"
  },
  "test077" : {
    "methodSignature" : "public Fraction divide(final int i)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Fraction fraction0 = Fraction.MINUS_ONE;\n    Fraction fraction1 = fraction0.THREE_QUARTERS.abs();\n    Fraction fraction2 = new Fraction(2082.036, 5);\n    Fraction fraction3 = fraction2.ONE_FIFTH.negate();\n    Fraction fraction4 = fraction2.TWO_FIFTHS.subtract(fraction3);\n    fraction0.compareTo(fraction2);\n    Fraction fraction5 = fraction0.multiply(fraction2);\n    fraction1.TWO_THIRDS.toString();\n    Fraction fraction6 = fraction0.subtract(fraction5);\n    Fraction fraction7 = fraction2.subtract(fraction5);\n    fraction7.TWO.divide(fraction1);\n    Fraction.getReducedFraction(5, 5);\n    Fraction fraction8 = Fraction.ONE_HALF;\n    fraction8.THREE_FIFTHS.percentageValue();\n    fraction1.divide(fraction8);\n    Fraction fraction9 = Fraction.THREE_QUARTERS;\n    Fraction fraction10 = fraction7.ONE_QUARTER.divide(5);\n    fraction10.THREE_FIFTHS.percentageValue();\n    Fraction fraction11 = fraction3.divide((-1));\n    Fraction fraction12 = fraction11.TWO_THIRDS.multiply(fraction4);\n    Fraction fraction13 = fraction12.FOUR_FIFTHS.negate();\n    Fraction fraction14 = fraction11.FOUR_FIFTHS.reciprocal();\n    Fraction fraction15 = fraction14.TWO_QUARTERS.divide(fraction0);\n    fraction0.FOUR_FIFTHS.add(5);\n    fraction0.TWO_FIFTHS.add(fraction3);\n    fraction7.toString();\n    fraction8.getNumerator();\n    fraction15.floatValue();\n    fraction7.subtract(fraction0);\n    fraction3.floatValue();\n    fraction2.multiply(5);\n    fraction13.divide(29);\n    fraction2.intValue();\n    fraction8.multiply(fraction6);\n    fraction7.divide((-1));\n}",
    "testName" : "test077"
  },
  "test1616" : {
    "methodSignature" : "public Fraction subtract(final int i)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    Fraction fraction0 = Fraction.MINUS_ONE;\n    Fraction fraction1 = fraction0.abs();\n    Fraction fraction2 = fraction1.TWO_FIFTHS.divide(714);\n    fraction2.abs();\n    fraction1.getField();\n    fraction1.subtract(409);\n}",
    "testName" : "test1616"
  },
  "test3838" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3838() throws Throwable {\n    Fraction fraction0 = new Fraction(0.0);\n    Fraction fraction1 = fraction0.TWO_FIFTHS.divide(2);\n    fraction1.ONE_HALF.add(2);\n    Object object0 = new Object();\n    fraction0.equals(object0);\n}",
    "testName" : "test3838"
  },
  "test2828" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    Fraction fraction0 = new Fraction(0.0);\n    Fraction fraction1 = Fraction.ZERO;\n    fraction0.TWO_THIRDS.subtract(fraction1);\n    Fraction fraction2 = Fraction.TWO;\n    Fraction fraction3 = fraction0.add(fraction2);\n    fraction1.divide(fraction3);\n    fraction0.toString();\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public int compareTo(Fraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    Fraction fraction1 = fraction0.MINUS_ONE.reciprocal();\n    Fraction fraction2 = fraction1.ONE_HALF.divide((-541));\n    Fraction.getReducedFraction((-541), 25);\n    fraction2.THREE_QUARTERS.multiply(fraction0);\n    fraction0.getField();\n    fraction0.getNumerator();\n    fraction1.compareTo(fraction0);\n}",
    "testName" : "test1414"
  },
  "test4848" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4848() throws Throwable {\n    Fraction fraction0 = new Fraction((-1454.18), 2);\n    fraction0.ONE.getField();\n    Fraction fraction1 = fraction0.subtract(2);\n    Fraction fraction2 = fraction1.THREE_FIFTHS.multiply(0);\n    fraction0.negate();\n    fraction2.TWO_THIRDS.getField();\n    fraction1.percentageValue();\n    fraction2.hashCode();\n}",
    "testName" : "test4848"
  },
  "test3636" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3636() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-2464), (-2464));\n    fraction0.MINUS_ONE.negate();\n    fraction0.hashCode();\n    fraction0.equals(\"\\\"\");\n}",
    "testName" : "test3636"
  },
  "test5858" : {
    "methodSignature" : "public Fraction subtract(Fraction fraction)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5858() throws Throwable {\n    Fraction fraction0 = new Fraction(2.479773539153719E-5, 5);\n    Object object0 = new Object();\n    fraction0.equals(object0);\n    fraction0.getField();\n    fraction0.getField();\n    Fraction fraction1 = new Fraction(5, 5, 165);\n    fraction0.subtract(fraction1);\n}",
    "testName" : "test5858"
  },
  "test2626" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    Fraction fraction0 = new Fraction(292, 1814);\n    fraction0.longValue();\n}",
    "testName" : "test2626"
  },
  "test6060" : {
    "methodSignature" : "public Fraction add(final int i)",
    "methodName" : "add",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6060() throws Throwable {\n    Fraction fraction0 = new Fraction((-3056));\n    fraction0.MINUS_ONE.add((-3056));\n    fraction0.getField();\n    Fraction fraction1 = Fraction.MINUS_ONE;\n    fraction0.equals(fraction1);\n    fraction1.multiply((-3056));\n    fraction1.add(945);\n}",
    "testName" : "test6060"
  },
  "test7070" : {
    "methodSignature" : "public Fraction add(final int i)",
    "methodName" : "add",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7070() throws Throwable {\n    Fraction fraction0 = Fraction.TWO;\n    fraction0.ONE_QUARTER.toString();\n    Fraction fraction1 = fraction0.negate();\n    fraction1.compareTo(fraction0);\n    fraction0.getDenominator();\n    fraction1.add(193);\n}",
    "testName" : "test7070"
  },
  "test8080" : {
    "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8080() throws Throwable {\n    int int0 = (-17);\n    int int1 = 0;\n    Fraction.getReducedFraction((-17), 0);\n}",
    "testName" : "test8080"
  },
  "test4242" : {
    "methodSignature" : "public Fraction add(final int i)",
    "methodName" : "add",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4242() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    fraction0.ONE_HALF.abs();\n    Fraction fraction1 = fraction0.ONE_HALF.subtract((-277));\n    fraction0.ONE_THIRD.reciprocal();\n    fraction0.doubleValue();\n    fraction0.hashCode();\n    Fraction fraction2 = fraction1.subtract(fraction0);\n    Fraction fraction3 = fraction2.ONE_THIRD.multiply(fraction0);\n    fraction1.ONE.abs();\n    fraction3.THREE_QUARTERS.multiply(fraction2);\n    fraction0.compareTo(fraction2);\n    fraction1.add((-277));\n}",
    "testName" : "test4242"
  },
  "test9090" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test9090() throws Throwable {\n    Fraction fraction0 = new Fraction(244);\n    Fraction fraction1 = Fraction.TWO_FIFTHS;\n    Fraction fraction2 = fraction0.TWO.subtract(160);\n    Fraction fraction3 = fraction1.TWO_QUARTERS.add(fraction2);\n    fraction0.MINUS_ONE.getField();\n    Fraction fraction4 = fraction2.ZERO.subtract(201);\n    fraction1.THREE_QUARTERS.add(fraction0);\n    Fraction fraction5 = fraction1.ONE.add(54);\n    fraction5.ONE_THIRD.getField();\n    fraction0.compareTo(fraction1);\n    fraction0.percentageValue();\n    fraction4.ONE_FIFTH.abs();\n    Fraction fraction6 = new Fraction((-47.374153064));\n    Fraction fraction7 = fraction2.ONE_FIFTH.add(1);\n    fraction7.TWO_THIRDS.negate();\n    fraction7.TWO_THIRDS.getField();\n    fraction7.ONE.percentageValue();\n    fraction4.multiply(fraction6);\n    fraction5.THREE_QUARTERS.divide(fraction6);\n    Fraction fraction8 = fraction2.THREE_QUARTERS.abs();\n    Fraction fraction9 = fraction5.abs();\n    fraction4.hashCode();\n    fraction3.doubleValue();\n    fraction0.add(fraction8);\n    fraction0.getDenominator();\n    fraction6.subtract(1);\n    fraction0.add(fraction3);\n    fraction0.toString();\n    fraction9.equals(fraction5);\n}",
    "testName" : "test9090"
  },
  "test3030" : {
    "methodSignature" : "public Fraction divide(final int i)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    Fraction fraction0 = new Fraction((-1.0), (-888.2572836470878), (-1906));\n    int int0 = (-1487);\n    fraction0.divide(int0);\n}",
    "testName" : "test3030"
  },
  "test6464" : {
    "methodSignature" : "public Fraction reciprocal()",
    "methodName" : "reciprocal",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6464() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_FIFTH;\n    Fraction fraction1 = new Fraction(1.1974215507507324, 1.1974215507507324, 4);\n    Fraction fraction2 = fraction0.THREE_QUARTERS.subtract(fraction1);\n    fraction0.hashCode();\n    fraction0.hashCode();\n    Fraction fraction3 = fraction1.subtract(fraction2);\n    fraction3.TWO_THIRDS.getField();\n    fraction0.equals(fraction2);\n    fraction2.reciprocal();\n}",
    "testName" : "test6464"
  },
  "test8686" : {
    "methodSignature" : "public Fraction multiply(Fraction fraction)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8686() throws Throwable {\n    Fraction fraction0 = Fraction.TWO;\n    Fraction fraction1 = Fraction.TWO;\n    Fraction fraction2 = fraction0.add(fraction1);\n    int int0 = 2236;\n    Fraction fraction3 = Fraction.getReducedFraction(2236, (-2329));\n    fraction0.getNumerator();\n    Fraction fraction4 = new Fraction(2);\n    Fraction fraction5 = fraction0.FOUR_FIFTHS.divide(fraction4);\n    fraction3.TWO_FIFTHS.multiply(fraction5);\n    Fraction fraction6 = fraction5.ONE_THIRD.add(fraction2);\n    fraction0.hashCode();\n    Fraction fraction7 = fraction0.subtract(613);\n    fraction0.compareTo(fraction1);\n    fraction0.getField();\n    fraction5.equals(fraction4);\n    Fraction fraction8 = fraction0.subtract(fraction7);\n    fraction8.ONE_FIFTH.percentageValue();\n    fraction7.MINUS_ONE.divide(0);\n    fraction7.abs();\n    fraction3.multiply(fraction6);\n}",
    "testName" : "test8686"
  },
  "test5252" : {
    "methodSignature" : "public Fraction multiply(Fraction fraction)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5252() throws Throwable {\n    Fraction fraction0 = new Fraction(82, 84);\n    fraction0.MINUS_ONE.multiply(5);\n    Fraction fraction1 = fraction0.ONE_THIRD.divide(82);\n    fraction1.ONE_QUARTER.toString();\n    fraction0.getDenominator();\n    fraction0.doubleValue();\n    fraction0.multiply(fraction1);\n}",
    "testName" : "test5252"
  },
  "test2020" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    Fraction fraction1 = fraction0.negate();\n    Fraction fraction2 = fraction1.TWO_THIRDS.divide(1);\n    Fraction fraction3 = fraction2.TWO.subtract(fraction0);\n    fraction3.reciprocal();\n    fraction1.add(fraction0);\n}",
    "testName" : "test2020"
  },
  "test7474" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7474() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_FIFTH;\n    Fraction fraction1 = null;\n    fraction0.ZERO.add((Fraction) null);\n}",
    "testName" : "test7474"
  },
  "test4040" : {
    "methodSignature" : "public Fraction subtract(final int i)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4040() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_FIFTH;\n    fraction0.floatValue();\n    Fraction fraction1 = Fraction.TWO;\n    fraction0.multiply(fraction1);\n    fraction0.subtract((-1082));\n}",
    "testName" : "test4040"
  },
  "test6262" : {
    "methodSignature" : "public Fraction(int num, int den)",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6262() throws Throwable {\n    int int0 = 1;\n    int int1 = 0;\n    Fraction fraction0 = null;\n    fraction0 = new Fraction(1, 0);\n}",
    "testName" : "test6262"
  },
  "test8484" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8484() throws Throwable {\n    int int0 = 275;\n    Fraction fraction0 = new Fraction(275);\n    fraction0.ZERO.subtract((Fraction) null);\n    fraction0.THREE_QUARTERS.toString();\n}",
    "testName" : "test8484"
  },
  "test5050" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5050() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = new Fraction(5);\n    Fraction fraction2 = fraction1.TWO_FIFTHS.subtract(fraction0);\n    fraction2.TWO_THIRDS.toString();\n    Fraction fraction3 = fraction0.ONE_FIFTH.multiply(fraction1);\n    fraction3.ZERO.add(fraction1);\n    Fraction fraction4 = new Fraction((-416), (-416));\n    Fraction.getReducedFraction(5, 4);\n    fraction0.compareTo(fraction4);\n    fraction3.longValue();\n}",
    "testName" : "test5050"
  },
  "test7272" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7272() throws Throwable {\n    Fraction fraction0 = new Fraction(577.784);\n    Fraction fraction1 = fraction0.MINUS_ONE.negate();\n    Fraction fraction2 = Fraction.ONE_FIFTH;\n    Fraction fraction3 = fraction0.ONE_QUARTER.divide(fraction2);\n    int int0 = 1317;\n    Fraction fraction4 = fraction1.TWO_THIRDS.multiply(1317);\n    fraction4.TWO.add(fraction2);\n    Fraction fraction5 = fraction0.FOUR_FIFTHS.abs();\n    fraction5.MINUS_ONE.divide(fraction1);\n    fraction3.ZERO.reciprocal();\n    fraction5.TWO.toString();\n}",
    "testName" : "test7272"
  },
  "test022" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Fraction fraction0 = Fraction.TWO;\n    fraction0.equals(\"Me|<[@o.O]r,Iz\");\n    Fraction fraction1 = fraction0.subtract(753);\n    Fraction fraction2 = fraction1.reciprocal();\n    int int0 = 2379;\n    fraction2.MINUS_ONE.percentageValue();\n    Fraction fraction3 = fraction1.ONE_QUARTER.subtract(2379);\n    fraction3.FOUR_FIFTHS.add(2379);\n    fraction0.negate();\n    Fraction fraction4 = new Fraction((double) 2379, 753);\n    fraction4.TWO.toString();\n    fraction4.THREE_FIFTHS.add(fraction2);\n}",
    "testName" : "test022"
  },
  "test066" : {
    "methodSignature" : "public int compareTo(Fraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    int int0 = 1475;\n    Fraction fraction0 = Fraction.getReducedFraction(0, 1475);\n    Fraction fraction1 = Fraction.getReducedFraction((-3096), (-3096));\n    fraction1.ONE.add(fraction0);\n    fraction1.divide(2058);\n    fraction1.subtract(5);\n    Fraction fraction2 = Fraction.getReducedFraction((-131), 0);\n    int int1 = (-238);\n    Fraction fraction3 = Fraction.getReducedFraction(int1, int0);\n    fraction2.compareTo(fraction3);\n}",
    "testName" : "test066"
  },
  "test1818" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    Fraction fraction1 = Fraction.TWO;\n    fraction0.add(fraction1);\n}",
    "testName" : "test1818"
  },
  "test5757" : {
    "methodSignature" : "public Fraction reciprocal()",
    "methodName" : "reciprocal",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5757() throws Throwable {\n    Fraction fraction0 = new Fraction(4414.6, 4);\n    Fraction fraction1 = fraction0.TWO_THIRDS.reciprocal();\n    fraction0.longValue();\n    fraction0.TWO_QUARTERS.add(4);\n    fraction0.ONE_QUARTER.add(fraction1);\n    fraction0.getField();\n    fraction0.hashCode();\n    fraction1.reciprocal();\n}",
    "testName" : "test5757"
  },
  "test2323" : {
    "methodSignature" : "public int compareTo(Fraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    fraction0.doubleValue();\n    fraction0.floatValue();\n    Fraction fraction1 = Fraction.ZERO;\n    fraction0.compareTo(fraction1);\n}",
    "testName" : "test2323"
  },
  "test7979" : {
    "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7979() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_FIFTHS;\n    Fraction fraction1 = fraction0.multiply(2275);\n    fraction1.hashCode();\n    Fraction fraction2 = fraction0.TWO_FIFTHS.multiply(fraction1);\n    fraction2.ZERO.percentageValue();\n    fraction0.add(2);\n    fraction0.divide(fraction1);\n    Fraction.getReducedFraction(2, 0);\n}",
    "testName" : "test7979"
  },
  "test4545" : {
    "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4545() throws Throwable {\n    Fraction fraction0 = new Fraction(1030, 179);\n    Fraction fraction1 = Fraction.THREE_FIFTHS;\n    fraction1.ONE.subtract(fraction0);\n    fraction0.MINUS_ONE.multiply(fraction1);\n    Fraction.getReducedFraction(4, 1030);\n}",
    "testName" : "test4545"
  },
  "test3535" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    Fraction fraction0 = new Fraction(0);\n    Fraction fraction1 = Fraction.MINUS_ONE;\n    fraction0.TWO_QUARTERS.divide(fraction1);\n    fraction0.MINUS_ONE.add(0);\n    Object object0 = new Object();\n    fraction0.equals(object0);\n}",
    "testName" : "test3535"
  },
  "test8989" : {
    "methodSignature" : "public Fraction subtract(final int i)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8989() throws Throwable {\n    int int0 = 3;\n    Fraction fraction0 = new Fraction((-378), 3);\n    Fraction fraction1 = Fraction.getReducedFraction(584703393, 3);\n    Object object0 = new Object();\n    Fraction.getReducedFraction(584703393, (-378));\n    fraction1.ZERO.abs();\n    Fraction fraction2 = Fraction.getReducedFraction(3, 3);\n    fraction2.reciprocal();\n    fraction0.equals(object0);\n    Fraction fraction3 = fraction0.multiply(fraction1);\n    Fraction fraction4 = fraction3.subtract(int0);\n    fraction4.subtract(int0);\n}",
    "testName" : "test8989"
  },
  "test5555" : {
    "methodSignature" : "public Fraction subtract(final int i)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5555() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    fraction0.getDenominator();\n    Fraction fraction1 = Fraction.FOUR_FIFTHS;\n    Fraction fraction2 = fraction0.add(fraction1);\n    Fraction fraction3 = fraction2.ONE_QUARTER.multiply(fraction0);\n    Fraction fraction4 = Fraction.TWO_QUARTERS;\n    fraction2.TWO_FIFTHS.divide(fraction4);\n    Fraction fraction5 = fraction3.ONE_QUARTER.subtract(80);\n    fraction0.floatValue();\n    fraction2.toString();\n    fraction5.floatValue();\n    fraction0.subtract(80);\n}",
    "testName" : "test5555"
  },
  "test2121" : {
    "methodSignature" : "public Fraction divide(Fraction fraction)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = Fraction.ONE_QUARTER;\n    fraction0.divide(fraction1);\n}",
    "testName" : "test2121"
  },
  "test7777" : {
    "methodSignature" : "public Fraction divide(final int i)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7777() throws Throwable {\n    int int0 = (-3077);\n    Fraction fraction0 = new Fraction(2219.5, (-3077));\n    fraction0.ZERO.toString();\n    int int1 = fraction0.compareTo((Fraction) null);\n    Fraction fraction1 = fraction0.multiply(int1);\n    fraction1.divide(int1);\n}",
    "testName" : "test7777"
  },
  "test1111" : {
    "methodSignature" : "public Fraction subtract(Fraction fraction)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    fraction0.ONE_THIRD.getField();\n    fraction0.getField();\n    Fraction fraction1 = null;\n    fraction0.ONE_QUARTER.negate();\n    fraction0.subtract((Fraction) null);\n}",
    "testName" : "test1111"
  },
  "test4343" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4343() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    Fraction fraction1 = fraction0.divide((-783));\n    fraction0.TWO_THIRDS.multiply(2);\n    fraction1.TWO_THIRDS.percentageValue();\n    fraction0.divide(fraction1);\n    fraction1.longValue();\n    fraction0.hashCode();\n}",
    "testName" : "test4343"
  },
  "test3333" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    Fraction fraction1 = Fraction.getReducedFraction(3, (-1));\n    fraction0.THREE_QUARTERS.multiply(fraction1);\n    fraction0.intValue();\n}",
    "testName" : "test3333"
  },
  "test6565" : {
    "methodSignature" : "public Fraction(double value, double epsilon, int maxIterations) throws FractionConversionException",
    "methodName" : "Fraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6565() throws Throwable {\n    Fraction fraction0 = new Fraction((-2701.0064), (-581.631083304973), (-2568));\n}",
    "testName" : "test6565"
  },
  "test8787" : {
    "methodSignature" : "public int compareTo(Fraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8787() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_FIFTHS;\n    Fraction fraction1 = fraction0.ONE_FIFTH.reciprocal();\n    fraction1.FOUR_FIFTHS.abs();\n    Object object0 = new Object();\n    fraction0.equals(object0);\n    fraction0.ZERO.toString();\n    fraction0.floatValue();\n    Fraction fraction2 = Fraction.MINUS_ONE;\n    fraction0.FOUR_FIFTHS.divide(fraction2);\n    Fraction fraction3 = Fraction.FOUR_FIFTHS;\n    int int0 = Integer.MAX_VALUE;\n    Fraction fraction4 = Fraction.getReducedFraction((-3869), Integer.MAX_VALUE);\n    Fraction fraction5 = fraction4.TWO.negate();\n    Fraction fraction6 = Fraction.TWO;\n    fraction5.MINUS_ONE.multiply(fraction6);\n    fraction5.ONE_THIRD.negate();\n    Fraction fraction7 = fraction3.ONE_FIFTH.divide(Integer.MAX_VALUE);\n    fraction7.THREE_QUARTERS.add(fraction4);\n    fraction0.compareTo(fraction3);\n}",
    "testName" : "test8787"
  },
  "test011" : {
    "methodSignature" : "public Fraction negate()",
    "methodName" : "negate",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(1577, (-566));\n    Fraction fraction1 = Fraction.ONE_FIFTH;\n    Fraction fraction2 = fraction1.ONE_FIFTH.add(Integer.MAX_VALUE);\n    fraction1.negate();\n    Fraction fraction3 = Fraction.TWO_FIFTHS;\n    fraction1.toString();\n    fraction2.TWO_QUARTERS.add(2);\n    Fraction fraction4 = Fraction.ONE_QUARTER;\n    Fraction fraction5 = fraction2.TWO.negate();\n    Fraction fraction6 = fraction5.ZERO.add(fraction4);\n    fraction6.ZERO.subtract(1577);\n    Fraction fraction7 = Fraction.ONE_THIRD;\n    fraction6.THREE_FIFTHS.subtract(31);\n    fraction6.ONE_FIFTH.getField();\n    Fraction fraction8 = Fraction.getReducedFraction(1577, 1);\n    Fraction fraction9 = fraction2.TWO_FIFTHS.multiply(fraction8);\n    Fraction fraction10 = fraction4.multiply((-566));\n    Fraction.getReducedFraction(1577, 2);\n    fraction9.toString();\n    fraction10.TWO_FIFTHS.multiply((Fraction) null);\n    fraction0.negate();\n}",
    "testName" : "test011"
  },
  "test055" : {
    "methodSignature" : "public Fraction add(final int i)",
    "methodName" : "add",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Fraction fraction0 = new Fraction(244);\n    Fraction fraction1 = Fraction.TWO_FIFTHS;\n    Fraction fraction2 = fraction0.TWO.subtract(160);\n    Fraction fraction3 = fraction1.TWO_QUARTERS.add(fraction2);\n    fraction0.MINUS_ONE.getField();\n    Fraction fraction4 = fraction2.ZERO.subtract(201);\n    fraction1.THREE_QUARTERS.add(fraction0);\n    Fraction fraction5 = fraction1.ONE.add(54);\n    fraction5.ONE_THIRD.getField();\n    fraction0.compareTo(fraction1);\n    fraction0.percentageValue();\n    fraction4.ONE_FIFTH.abs();\n    Fraction fraction6 = new Fraction((-47.374153064));\n    Fraction fraction7 = fraction2.ONE_FIFTH.add(1);\n    fraction7.TWO_THIRDS.getField();\n    fraction7.ONE.percentageValue();\n    fraction4.multiply(fraction6);\n    fraction5.THREE_QUARTERS.divide(fraction6);\n    Fraction fraction8 = fraction2.THREE_QUARTERS.abs();\n    fraction5.abs();\n    fraction4.hashCode();\n    fraction3.doubleValue();\n    fraction0.add(fraction8);\n    fraction0.getDenominator();\n    fraction6.subtract(1);\n    fraction0.add(fraction3);\n    fraction0.toString();\n    fraction5.add(1);\n}",
    "testName" : "test055"
  },
  "test099" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Fraction fraction0 = new Fraction(55);\n    Fraction fraction1 = fraction0.ONE_THIRD.add(55);\n    fraction0.getField();\n    fraction0.ONE_FIFTH.getField();\n    fraction1.THREE_QUARTERS.percentageValue();\n    Fraction fraction2 = fraction0.subtract(592);\n    fraction2.equals(fraction1);\n    fraction2.compareTo(fraction0);\n    Fraction fraction3 = fraction2.ZERO.divide(592);\n    Fraction fraction4 = fraction2.add((-1));\n    Fraction fraction5 = Fraction.ONE_THIRD;\n    Fraction.getReducedFraction(34, (-1));\n    fraction1.equals(fraction5);\n    Fraction fraction6 = fraction2.abs();\n    fraction6.THREE_FIFTHS.percentageValue();\n    fraction4.multiply(fraction5);\n    fraction0.abs();\n    Fraction fraction7 = fraction5.subtract(2446);\n    fraction3.add(fraction7);\n    Object object0 = new Object();\n    fraction6.equals(object0);\n}",
    "testName" : "test099"
  },
  "test2727" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    fraction0.hashCode();\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "public boolean equals(Object other)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_FIFTHS;\n    fraction0.equals(\"np&|kvzC\");\n}",
    "testName" : "test1717"
  },
  "test4949" : {
    "methodSignature" : "public Fraction divide(Fraction fraction)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4949() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    Fraction fraction1 = Fraction.ONE;\n    Fraction fraction2 = fraction0.ONE_THIRD.subtract(fraction1);\n    fraction2.TWO_THIRDS.toString();\n    fraction2.TWO_FIFTHS.percentageValue();\n    fraction0.hashCode();\n    Fraction fraction3 = fraction2.abs();\n    fraction0.ONE_FIFTH.percentageValue();\n    fraction0.hashCode();\n    fraction2.getNumerator();\n    fraction3.intValue();\n    Fraction fraction4 = fraction3.abs();\n    fraction3.ONE_HALF.add(1761);\n    fraction1.abs();\n    Fraction fraction5 = fraction4.negate();\n    fraction5.THREE_FIFTHS.abs();\n    fraction1.divide(fraction4);\n}",
    "testName" : "test4949"
  },
  "test3939" : {
    "methodSignature" : "public Fraction multiply(Fraction fraction)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3939() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    Fraction fraction1 = Fraction.TWO;\n    fraction0.multiply(fraction1);\n}",
    "testName" : "test3939"
  },
  "test5959" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5959() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = Fraction.TWO_THIRDS;\n    fraction1.TWO_QUARTERS.percentageValue();\n    fraction1.ONE_FIFTH.subtract(fraction0);\n    Fraction fraction2 = fraction0.subtract(fraction1);\n    fraction2.ONE.add(3);\n    fraction2.percentageValue();\n}",
    "testName" : "test5959"
  },
  "test2525" : {
    "methodSignature" : "public Fraction subtract(final int i)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    Fraction fraction0 = new Fraction(402, 402);\n    Fraction fraction1 = fraction0.reciprocal();\n    fraction0.compareTo(fraction1);\n    fraction0.toString();\n    fraction1.getNumerator();\n    fraction0.floatValue();\n    fraction1.getNumerator();\n    fraction1.subtract(1);\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public Fraction abs()",
    "methodName" : "abs",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    fraction0.THREE_FIFTHS.percentageValue();\n    fraction0.abs();\n}",
    "testName" : "test1515"
  },
  "test4747" : {
    "methodSignature" : "public Fraction divide(final int i)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4747() throws Throwable {\n    Fraction fraction0 = new Fraction(2069);\n    fraction0.ONE_THIRD.subtract(2069);\n    Fraction fraction1 = fraction0.multiply(2069);\n    Fraction fraction2 = Fraction.THREE_QUARTERS;\n    Fraction fraction3 = fraction0.add(fraction2);\n    Fraction fraction4 = fraction3.FOUR_FIFTHS.abs();\n    fraction2.getDenominator();\n    fraction2.floatValue();\n    fraction3.divide(4);\n    fraction0.MINUS_ONE.subtract(fraction4);\n    fraction1.divide(297);\n}",
    "testName" : "test4747"
  },
  "test3737" : {
    "methodSignature" : "public int compareTo(Fraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3737() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-2317), Integer.MAX_VALUE);\n    Fraction fraction1 = Fraction.TWO_QUARTERS;\n    fraction0.compareTo(fraction1);\n}",
    "testName" : "test3737"
  },
  "test6969" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6969() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_FIFTH;\n    Fraction fraction1 = new Fraction(0.0);\n    fraction0.THREE_QUARTERS.multiply(fraction1);\n    fraction0.TWO_FIFTHS.negate();\n    fraction0.doubleValue();\n}",
    "testName" : "test6969"
  },
  "test7171" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7171() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = fraction0.THREE_FIFTHS.divide(1668);\n    fraction0.doubleValue();\n    fraction0.longValue();\n    Fraction fraction2 = fraction1.divide(1668);\n    Fraction fraction3 = fraction1.divide(fraction2);\n    Fraction fraction4 = fraction3.abs();\n    fraction4.TWO_THIRDS.add(fraction1);\n    fraction4.ZERO.multiply(fraction0);\n    fraction3.percentageValue();\n    Fraction fraction5 = fraction0.add(1668);\n    Fraction fraction6 = fraction5.reciprocal();\n    Fraction fraction7 = fraction0.divide(1668);\n    fraction6.divide(fraction7);\n    fraction1.intValue();\n}",
    "testName" : "test7171"
  },
  "test8181" : {
    "methodSignature" : "public double percentageValue()",
    "methodName" : "percentageValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8181() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_FIFTHS;\n    Fraction fraction1 = Fraction.MINUS_ONE;\n    fraction1.ONE.percentageValue();\n    Fraction fraction2 = fraction0.TWO_THIRDS.divide(fraction1);\n    Fraction fraction3 = fraction2.ONE_THIRD.divide(fraction1);\n    Fraction fraction4 = fraction3.ONE_FIFTH.multiply(fraction1);\n    Fraction.getReducedFraction(31, 31);\n    fraction4.ZERO.divide(54);\n    fraction0.getDenominator();\n    fraction0.percentageValue();\n    fraction0.percentageValue();\n    fraction2.reciprocal();\n    Fraction.getReducedFraction(5, (-1440));\n    fraction3.percentageValue();\n}",
    "testName" : "test8181"
  },
  "test5353" : {
    "methodSignature" : "public int compareTo(Fraction object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5353() throws Throwable {\n    Fraction fraction0 = new Fraction(1223, 1223);\n    Fraction fraction1 = fraction0.ONE_HALF.reciprocal();\n    Fraction fraction2 = fraction0.THREE_FIFTHS.multiply((-1341));\n    Fraction fraction3 = fraction0.multiply((-1341));\n    Fraction fraction4 = fraction0.ONE_THIRD.subtract(fraction3);\n    fraction3.divide(15);\n    Fraction fraction5 = fraction1.divide(15);\n    fraction5.ONE_HALF.reciprocal();\n    Fraction fraction6 = fraction2.multiply(1223);\n    fraction6.TWO_QUARTERS.subtract((-1341));\n    Fraction fraction7 = Fraction.ONE;\n    fraction3.divide(fraction7);\n    fraction0.getField();\n    fraction2.toString();\n    fraction4.compareTo(fraction3);\n}",
    "testName" : "test5353"
  },
  "test7575" : {
    "methodSignature" : "public Fraction multiply(final int i)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7575() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.FOUR_FIFTHS.add(2);\n    fraction0.FOUR_FIFTHS.percentageValue();\n    fraction0.FOUR_FIFTHS.percentageValue();\n    fraction0.toString();\n    Fraction fraction2 = fraction0.TWO_QUARTERS.subtract(3971);\n    fraction2.ONE_FIFTH.subtract(3814);\n    fraction1.getDenominator();\n    Fraction fraction3 = Fraction.THREE_QUARTERS;\n    Fraction fraction4 = fraction0.ONE_HALF.abs();\n    fraction4.TWO_THIRDS.subtract(fraction0);\n    fraction4.subtract(2);\n    Fraction fraction5 = fraction0.divide(fraction3);\n    fraction0.floatValue();\n    fraction5.toString();\n    fraction5.floatValue();\n    Fraction fraction6 = Fraction.THREE_FIFTHS;\n    fraction3.equals(fraction6);\n    fraction6.TWO_FIFTHS.abs();\n    fraction6.intValue();\n    fraction6.floatValue();\n    fraction0.multiply(31);\n}",
    "testName" : "test7575"
  },
  "test4141" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4141() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-2580), 63);\n    fraction0.TWO_QUARTERS.toString();\n    Fraction fraction1 = Fraction.ONE;\n    fraction0.add(fraction1);\n}",
    "testName" : "test4141"
  },
  "test6363" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6363() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = Fraction.ONE;\n    fraction0.TWO_FIFTHS.subtract(fraction1);\n    Fraction fraction2 = fraction0.negate();\n    fraction2.doubleValue();\n}",
    "testName" : "test6363"
  },
  "test3131" : {
    "methodSignature" : "public Fraction subtract(Fraction fraction)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    Fraction fraction0 = new Fraction(Integer.MAX_VALUE);\n    Fraction fraction1 = Fraction.MINUS_ONE;\n    fraction0.subtract(fraction1);\n}",
    "testName" : "test3131"
  },
  "test8585" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8585() throws Throwable {\n    Fraction fraction0 = new Fraction(0.0);\n    Fraction fraction1 = fraction0.add((-1266));\n    Fraction fraction2 = Fraction.getReducedFraction((-1037), (-1037));\n    Fraction fraction3 = fraction1.TWO_QUARTERS.add(fraction0);\n    Fraction fraction4 = fraction3.TWO.add(1);\n    fraction1.intValue();\n    fraction0.doubleValue();\n    Fraction fraction5 = fraction1.divide((-1266));\n    fraction3.TWO_FIFTHS.toString();\n    fraction5.ONE.subtract(fraction1);\n    fraction4.floatValue();\n    fraction2.divide((-1266));\n    fraction0.getDenominator();\n    fraction3.divide((-1037));\n    fraction5.compareTo(fraction3);\n    fraction0.getDenominator();\n}",
    "testName" : "test8585"
  },
  "test5151" : {
    "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5151() throws Throwable {\n    Fraction.getReducedFraction((-1227), (-1442));\n}",
    "testName" : "test5151"
  },
  "test7373" : {
    "methodSignature" : "public Fraction abs()",
    "methodName" : "abs",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7373() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_FIFTHS;\n    fraction0.THREE_QUARTERS.subtract((Fraction) null);\n    fraction0.abs();\n}",
    "testName" : "test7373"
  },
  "test6161" : {
    "methodSignature" : "public Fraction divide(final int i)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6161() throws Throwable {\n    Fraction fraction0 = new Fraction((-1066), (-1066));\n    Fraction fraction1 = fraction0.divide(199);\n    Fraction fraction2 = fraction0.add(fraction1);\n    fraction2.ONE_THIRD.multiply(fraction1);\n    Fraction fraction3 = Fraction.TWO;\n    Fraction fraction4 = fraction3.subtract(fraction1);\n    Fraction fraction5 = fraction4.divide(Integer.MIN_VALUE);\n    Fraction fraction6 = fraction5.THREE_FIFTHS.add(fraction4);\n    int int0 = 2936;\n    fraction6.divide(int0);\n}",
    "testName" : "test6161"
  },
  "test8383" : {
    "methodSignature" : "public Fraction multiply(final int i)",
    "methodName" : "multiply",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8383() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.multiply(1);\n    Fraction fraction2 = fraction1.TWO_QUARTERS.multiply(fraction0);\n    Fraction fraction3 = fraction0.reciprocal();\n    Fraction fraction4 = Fraction.getReducedFraction(1, 1);\n    Fraction fraction5 = fraction4.TWO_QUARTERS.multiply((-80));\n    fraction3.floatValue();\n    Fraction fraction6 = fraction3.add(0);\n    int int0 = 1;\n    int int1 = 8;\n    fraction6.MINUS_ONE.multiply(3);\n    Fraction fraction7 = Fraction.getReducedFraction(1, 8);\n    fraction7.THREE_QUARTERS.add(1349);\n    fraction0.percentageValue();\n    Fraction fraction8 = fraction3.add(fraction6);\n    Fraction fraction9 = fraction8.ZERO.negate();\n    Fraction fraction10 = fraction9.TWO_FIFTHS.divide(fraction5);\n    fraction10.FOUR_FIFTHS.toString();\n    Fraction fraction11 = fraction2.divide((Fraction) null);\n    Fraction fraction12 = fraction11.divide(fraction9);\n    fraction1.getNumerator();\n    fraction4.compareTo(fraction8);\n    Fraction fraction13 = fraction12.divide(fraction9);\n    fraction1.floatValue();\n    fraction13.multiply(int0);\n}",
    "testName" : "test8383"
  },
  "test000" : {
    "methodSignature" : "public Fraction divide(Fraction fraction)",
    "methodName" : "divide",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    int int0 = 2;\n    Fraction fraction0 = new Fraction(14.101419448852539, 2);\n    fraction0.doubleValue();\n    Fraction fraction1 = Fraction.ZERO;\n    fraction0.divide(fraction1);\n    fraction1.divide(fraction0);\n}",
    "testName" : "test000"
  },
  "test044" : {
    "methodSignature" : "public Fraction reciprocal()",
    "methodName" : "reciprocal",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_FIFTHS;\n    fraction0.getField();\n    fraction0.MINUS_ONE.getField();\n    Fraction fraction1 = Fraction.MINUS_ONE;\n    fraction1.ZERO.toString();\n    Fraction fraction2 = fraction1.ONE_HALF.subtract(3);\n    Fraction fraction3 = fraction0.TWO_QUARTERS.reciprocal();\n    Fraction fraction4 = Fraction.getReducedFraction(3, 3);\n    fraction0.compareTo(fraction1);\n    fraction0.longValue();\n    Fraction fraction5 = fraction3.TWO.divide(fraction2);\n    Fraction fraction6 = fraction0.multiply(1);\n    fraction6.negate();\n    Fraction.getReducedFraction(1, 3);\n    Fraction fraction7 = fraction5.multiply(3);\n    fraction0.getNumerator();\n    fraction6.getField();\n    Fraction fraction8 = fraction3.divide(fraction0);\n    fraction8.THREE_FIFTHS.percentageValue();\n    Fraction fraction9 = fraction7.divide(2);\n    Fraction fraction10 = fraction7.MINUS_ONE.subtract(3);\n    fraction9.TWO_THIRDS.reciprocal();\n    fraction0.ONE_FIFTH.multiply(fraction7);\n    fraction2.getNumerator();\n    fraction0.percentageValue();\n    Fraction.getReducedFraction((-503), 3);\n    Fraction fraction11 = fraction4.abs();\n    Object object0 = new Object();\n    fraction11.equals(object0);\n    fraction3.floatValue();\n    fraction10.toString();\n    fraction6.reciprocal();\n}",
    "testName" : "test044"
  },
  "test088" : {
    "methodSignature" : "public Fraction reciprocal()",
    "methodName" : "reciprocal",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    int int0 = 37;\n    Fraction fraction1 = fraction0.THREE_FIFTHS.subtract(37);\n    fraction1.ZERO.multiply(fraction0);\n    fraction1.ONE.negate();\n    fraction0.TWO_FIFTHS.abs();\n    fraction0.ONE_FIFTH.add(fraction0);\n    fraction0.reciprocal();\n}",
    "testName" : "test088"
  },
  "test2929" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_FIFTHS;\n    fraction0.intValue();\n    Fraction fraction1 = Fraction.TWO_QUARTERS;\n    Fraction fraction2 = fraction0.subtract(fraction1);\n    fraction2.THREE_QUARTERS.abs();\n    Fraction.getReducedFraction(0, 38);\n    Fraction fraction3 = Fraction.TWO_QUARTERS;\n    fraction0.compareTo(fraction3);\n    Fraction fraction4 = fraction1.add(fraction2);\n    Fraction fraction5 = fraction0.subtract(1);\n    Fraction fraction6 = fraction5.THREE_QUARTERS.multiply(38);\n    Fraction fraction7 = fraction5.MINUS_ONE.reciprocal();\n    Fraction fraction8 = fraction7.THREE_QUARTERS.negate();\n    fraction8.TWO_QUARTERS.subtract(fraction0);\n    fraction7.ONE_HALF.toString();\n    fraction3.getField();\n    fraction2.subtract(323);\n    fraction4.add(fraction6);\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public Fraction add(final int i)",
    "methodName" : "add",
    "className" : "org.apache.commons.math3.fraction.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    Fraction fraction0 = new Fraction(0.0036, (-561));\n    fraction0.add((-561));\n}",
    "testName" : "test1919"
  }
}