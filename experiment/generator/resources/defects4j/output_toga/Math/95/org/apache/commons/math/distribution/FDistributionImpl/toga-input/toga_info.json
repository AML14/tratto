{
  "test1730" : {
    "methodSignature" : "public double getNumeratorDegreesOfFreedom()",
    "methodName" : "getNumeratorDegreesOfFreedom",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1730() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(2446.3075409, 2446.3075409);\n    double double0 = fDistributionImpl0.inverseCumulativeProbability(0.0);\n    fDistributionImpl0.getNumeratorDegreesOfFreedom();\n}",
    "testName" : "test1730"
  },
  "test1016" : {
    "methodSignature" : "public void setNumeratorDegreesOfFreedom(double degreesOfFreedom)",
    "methodName" : "setNumeratorDegreesOfFreedom",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1016() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(4347.3109934, 4347.3109934);\n    fDistributionImpl0.setNumeratorDegreesOfFreedom(0.0);\n}",
    "testName" : "test1016"
  },
  "test1731" : {
    "methodSignature" : "public double getDenominatorDegreesOfFreedom()",
    "methodName" : "getDenominatorDegreesOfFreedom",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1731() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(2446.3075409, 2446.3075409);\n    double double0 = fDistributionImpl0.inverseCumulativeProbability(0.0);\n    fDistributionImpl0.getDenominatorDegreesOfFreedom();\n}",
    "testName" : "test1731"
  },
  "test011" : {
    "methodSignature" : "public double inverseCumulativeProbability(final double p) throws MathException",
    "methodName" : "inverseCumulativeProbability",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(2421.0, 2421.0);\n    fDistributionImpl0.inverseCumulativeProbability((-1.643181065367639E-4));\n}",
    "testName" : "test011"
  },
  "test034" : {
    "methodSignature" : "public double getNumeratorDegreesOfFreedom()",
    "methodName" : "getNumeratorDegreesOfFreedom",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(8.441822398385275E-5, 0.9999999999999971);\n    double double0 = fDistributionImpl0.getInitialDomain(0.9995456442973051);\n    fDistributionImpl0.getNumeratorDegreesOfFreedom();\n}",
    "testName" : "test034"
  },
  "test1117" : {
    "methodSignature" : "public double getDenominatorDegreesOfFreedom()",
    "methodName" : "getDenominatorDegreesOfFreedom",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1117() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1.0, 1.7976931348623157E308);\n    double double0 = fDistributionImpl0.cumulativeProbability((-1817.526));\n    fDistributionImpl0.getDenominatorDegreesOfFreedom();\n}",
    "testName" : "test1117"
  },
  "test1832" : {
    "methodSignature" : "public double inverseCumulativeProbability(final double p) throws MathException",
    "methodName" : "inverseCumulativeProbability",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1832() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(234.30556717516757, 234.30556717516757);\n    fDistributionImpl0.inverseCumulativeProbability(0.9999999999999999);\n}",
    "testName" : "test1832"
  },
  "test1118" : {
    "methodSignature" : "public double getNumeratorDegreesOfFreedom()",
    "methodName" : "getNumeratorDegreesOfFreedom",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1118() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1.0, 1.7976931348623157E308);\n    double double0 = fDistributionImpl0.cumulativeProbability((-1817.526));\n    fDistributionImpl0.getNumeratorDegreesOfFreedom();\n}",
    "testName" : "test1118"
  },
  "test1119" : {
    "methodSignature" : "public double cumulativeProbability(double x) throws MathException",
    "methodName" : "cumulativeProbability",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1119() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1.0, 1.7976931348623157E308);\n    double double0 = fDistributionImpl0.cumulativeProbability((-1817.526));\n}",
    "testName" : "test1119"
  },
  "test1933" : {
    "methodSignature" : "public double cumulativeProbability(double x) throws MathException",
    "methodName" : "cumulativeProbability",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1933() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1389.8747, 1389.8747);\n    double double0 = fDistributionImpl0.cumulativeProbability(1389.8747);\n}",
    "testName" : "test1933"
  },
  "test048" : {
    "methodSignature" : "public double getDenominatorDegreesOfFreedom()",
    "methodName" : "getDenominatorDegreesOfFreedom",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test048() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1701.2, 3161.329915527);\n    double double0 = fDistributionImpl0.getDomainUpperBound(417.040445);\n    fDistributionImpl0.getDenominatorDegreesOfFreedom();\n}",
    "testName" : "test048"
  },
  "test046" : {
    "methodSignature" : "protected double getDomainUpperBound(double p)",
    "methodName" : "getDomainUpperBound",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test046() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1701.2, 3161.329915527);\n    double double0 = fDistributionImpl0.getDomainUpperBound(417.040445);\n}",
    "testName" : "test046"
  },
  "test047" : {
    "methodSignature" : "public double getNumeratorDegreesOfFreedom()",
    "methodName" : "getNumeratorDegreesOfFreedom",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test047() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1701.2, 3161.329915527);\n    double double0 = fDistributionImpl0.getDomainUpperBound(417.040445);\n    fDistributionImpl0.getNumeratorDegreesOfFreedom();\n}",
    "testName" : "test047"
  },
  "test1322" : {
    "methodSignature" : "public double getDenominatorDegreesOfFreedom()",
    "methodName" : "getDenominatorDegreesOfFreedom",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1322() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1701.2, 3161.329915527);\n    double double0 = fDistributionImpl0.getNumeratorDegreesOfFreedom();\n    fDistributionImpl0.getDenominatorDegreesOfFreedom();\n}",
    "testName" : "test1322"
  },
  "test1323" : {
    "methodSignature" : "public double getNumeratorDegreesOfFreedom()",
    "methodName" : "getNumeratorDegreesOfFreedom",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1323() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1701.2, 3161.329915527);\n    double double0 = fDistributionImpl0.getNumeratorDegreesOfFreedom();\n}",
    "testName" : "test1323"
  },
  "test0510" : {
    "methodSignature" : "public double getDenominatorDegreesOfFreedom()",
    "methodName" : "getDenominatorDegreesOfFreedom",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0510() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1701.2, 3161.329915527);\n    double double0 = fDistributionImpl0.getDomainLowerBound(1023.111003045955);\n    fDistributionImpl0.getDenominatorDegreesOfFreedom();\n}",
    "testName" : "test0510"
  },
  "test0511" : {
    "methodSignature" : "public double getNumeratorDegreesOfFreedom()",
    "methodName" : "getNumeratorDegreesOfFreedom",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0511() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1701.2, 3161.329915527);\n    double double0 = fDistributionImpl0.getDomainLowerBound(1023.111003045955);\n    fDistributionImpl0.getNumeratorDegreesOfFreedom();\n}",
    "testName" : "test0511"
  },
  "test1424" : {
    "methodSignature" : "public void setDenominatorDegreesOfFreedom(double degreesOfFreedom)",
    "methodName" : "setDenominatorDegreesOfFreedom",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1424() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(8.441822398385275E-5, 0.9999999999999971);\n    fDistributionImpl0.setDenominatorDegreesOfFreedom(0.0);\n}",
    "testName" : "test1424"
  },
  "test1220" : {
    "methodSignature" : "public double getNumeratorDegreesOfFreedom()",
    "methodName" : "getNumeratorDegreesOfFreedom",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1220() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1701.2, 3161.329915527);\n    double double0 = fDistributionImpl0.getDenominatorDegreesOfFreedom();\n    fDistributionImpl0.getNumeratorDegreesOfFreedom();\n}",
    "testName" : "test1220"
  },
  "test1221" : {
    "methodSignature" : "public double getDenominatorDegreesOfFreedom()",
    "methodName" : "getDenominatorDegreesOfFreedom",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1221() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1701.2, 3161.329915527);\n    double double0 = fDistributionImpl0.getDenominatorDegreesOfFreedom();\n}",
    "testName" : "test1221"
  },
  "test000" : {
    "methodSignature" : "public FDistributionImpl(double numeratorDegreesOfFreedom, double denominatorDegreesOfFreedom)",
    "methodName" : "FDistributionImpl",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = null;\n    fDistributionImpl0 = new FDistributionImpl(1122.5185115, (-1684.087766816052));\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public double getNumeratorDegreesOfFreedom()",
    "methodName" : "getNumeratorDegreesOfFreedom",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1701.2, 3161.329915527);\n    double double0 = fDistributionImpl0.getInitialDomain((-9.837447530487956E-5));\n    fDistributionImpl0.getNumeratorDegreesOfFreedom();\n}",
    "testName" : "test022"
  },
  "test1627" : {
    "methodSignature" : "public double getNumeratorDegreesOfFreedom()",
    "methodName" : "getNumeratorDegreesOfFreedom",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1627() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1389.8747, 1389.8747);\n    double double0 = fDistributionImpl0.inverseCumulativeProbability(1.0);\n    fDistributionImpl0.getNumeratorDegreesOfFreedom();\n}",
    "testName" : "test1627"
  },
  "test023" : {
    "methodSignature" : "protected double getInitialDomain(double p)",
    "methodName" : "getInitialDomain",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test023() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1701.2, 3161.329915527);\n    double double0 = fDistributionImpl0.getInitialDomain((-9.837447530487956E-5));\n}",
    "testName" : "test023"
  },
  "test0814" : {
    "methodSignature" : "public double inverseCumulativeProbability(final double p) throws MathException",
    "methodName" : "inverseCumulativeProbability",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0814() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1389.8747, 1389.8747);\n    fDistributionImpl0.inverseCumulativeProbability(1.7976931348623157E308);\n}",
    "testName" : "test0814"
  },
  "test1628" : {
    "methodSignature" : "public double getDenominatorDegreesOfFreedom()",
    "methodName" : "getDenominatorDegreesOfFreedom",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1628() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1389.8747, 1389.8747);\n    double double0 = fDistributionImpl0.inverseCumulativeProbability(1.0);\n    fDistributionImpl0.getDenominatorDegreesOfFreedom();\n}",
    "testName" : "test1628"
  },
  "test0915" : {
    "methodSignature" : "public double getDenominatorDegreesOfFreedom()",
    "methodName" : "getDenominatorDegreesOfFreedom",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0915() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1701.2, 3161.329915527);\n    fDistributionImpl0.setDenominatorDegreesOfFreedom(1023.111003045955);\n    fDistributionImpl0.getDenominatorDegreesOfFreedom();\n}",
    "testName" : "test0915"
  },
  "test1729" : {
    "methodSignature" : "public double inverseCumulativeProbability(final double p) throws MathException",
    "methodName" : "inverseCumulativeProbability",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1729() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(2446.3075409, 2446.3075409);\n    double double0 = fDistributionImpl0.inverseCumulativeProbability(0.0);\n}",
    "testName" : "test1729"
  },
  "test0612" : {
    "methodSignature" : "public double cumulativeProbability(double x) throws MathException",
    "methodName" : "cumulativeProbability",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0612() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1107.0, 1.0E-14);\n    double double0 = fDistributionImpl0.cumulativeProbability(1.0E-14);\n}",
    "testName" : "test0612"
  },
  "test1525" : {
    "methodSignature" : "public FDistributionImpl(double numeratorDegreesOfFreedom, double denominatorDegreesOfFreedom)",
    "methodName" : "FDistributionImpl",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1525() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = null;\n    fDistributionImpl0 = new FDistributionImpl((-2976.553895288), (-2976.553895288));\n}",
    "testName" : "test1525"
  },
  "test0713" : {
    "methodSignature" : "public double inverseCumulativeProbability(final double p) throws MathException",
    "methodName" : "inverseCumulativeProbability",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0713() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1701.2, 1701.2);\n    fDistributionImpl0.setNumeratorDegreesOfFreedom(1.0E-6);\n    // Undeclared exception!\n    fDistributionImpl0.inverseCumulativeProbability(0.9999967531099152);\n}",
    "testName" : "test0713"
  },
  "test1626" : {
    "methodSignature" : "public double inverseCumulativeProbability(final double p) throws MathException",
    "methodName" : "inverseCumulativeProbability",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1626() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1389.8747, 1389.8747);\n    double double0 = fDistributionImpl0.inverseCumulativeProbability(1.0);\n}",
    "testName" : "test1626"
  },
  "test059" : {
    "methodSignature" : "protected double getDomainLowerBound(double p)",
    "methodName" : "getDomainLowerBound",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test059() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(1701.2, 3161.329915527);\n    double double0 = fDistributionImpl0.getDomainLowerBound(1023.111003045955);\n}",
    "testName" : "test059"
  },
  "test035" : {
    "methodSignature" : "protected double getInitialDomain(double p)",
    "methodName" : "getInitialDomain",
    "className" : "org.apache.commons.math.distribution.FDistributionImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test035() throws Throwable {\n    FDistributionImpl fDistributionImpl0 = new FDistributionImpl(8.441822398385275E-5, 0.9999999999999971);\n    double double0 = fDistributionImpl0.getInitialDomain(0.9995456442973051);\n}",
    "testName" : "test035"
  }
}