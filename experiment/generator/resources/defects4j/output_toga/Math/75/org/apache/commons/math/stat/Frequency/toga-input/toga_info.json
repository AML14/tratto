{
  "test1212" : {
    "methodSignature" : "public double getCumPct(Comparable<?> v)",
    "methodName" : "getCumPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue(1);\n    Long long0 = Long.getLong(\"QiSON~eFIdi]WTwsEb\", (-1388L));\n    double double0 = frequency0.getCumPct((Comparable<?>) long0);\n}",
    "testName" : "test1212"
  },
  "test4646" : {
    "methodSignature" : "public double getCumPct(Comparable<?> v)",
    "methodName" : "getCumPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4646() throws Throwable {\n    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0, 0, 0).when(comparator0).compare(anyInt(), anyInt());\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue((-2007));\n    double double0 = frequency0.getCumPct((Comparable<?>) \"Value \\t Freq. \\t Pct. \\t Cum Pct. \\n-2007\\t1\\t100%\\t100%\\n\");\n}",
    "testName" : "test4646"
  },
  "test3434" : {
    "methodSignature" : "public long getCumFreq(Object v)",
    "methodName" : "getCumFreq",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    Object object0 = new Object();\n    frequency0.getCumFreq(object0);\n}",
    "testName" : "test3434"
  },
  "test6868" : {
    "methodSignature" : "public long getCumFreq(Object v)",
    "methodName" : "getCumFreq",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6868() throws Throwable {\n    Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    doReturn(10, 10, 10, (-872), 10).when(comparator0).compare(anyString(), anyString());\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue((Comparable<?>) \"Value \\t Freq. \\t Pct. \\t Cum Pct. \\n10\\t1\\t100%\\t100%\\n\");\n    long long0 = frequency0.getCumFreq((Object) \"Value \\t Freq. \\t Pct. \\t Cum Pct. \\n10\\t1\\t100%\\t100%\\n\");\n}",
    "testName" : "test6868"
  },
  "test5656" : {
    "methodSignature" : "public long getCount(Comparable<?> v)",
    "methodName" : "getCount",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5656() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    long long0 = frequency0.getCount((Comparable<?>) \"Value \\t Freq. \\t Pct. \\t Cum Pct. \\n\");\n}",
    "testName" : "test5656"
  },
  "test2424" : {
    "methodSignature" : "public long getCount(long v)",
    "methodName" : "getCount",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0).when(comparator0).compare(anyInt(), anyInt());\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue((-2007));\n    long long0 = frequency0.getCount((long) (-2007));\n}",
    "testName" : "test2424"
  },
  "test7878" : {
    "methodSignature" : "public double getCumPct(Object v)",
    "methodName" : "getCumPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7878() throws Throwable {\n    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0, 0, 0).when(comparator0).compare(anyInt(), anyInt());\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue((-2007));\n    Integer integer0 = new Integer((-617));\n    double double0 = frequency0.getCumPct((Object) integer0);\n}",
    "testName" : "test7878"
  },
  "test1010" : {
    "methodSignature" : "public double getPct(char v)",
    "methodName" : "getPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0).when(comparator0).compare(anyInt(), anyInt());\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue((-2007));\n    double double0 = frequency0.getPct(',');\n}",
    "testName" : "test1010"
  },
  "test4444" : {
    "methodSignature" : "public void addValue(int v)",
    "methodName" : "addValue",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4444() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue('\\'');\n    frequency0.addValue((-148));\n}",
    "testName" : "test4444"
  },
  "test3232" : {
    "methodSignature" : "public double getCumPct(Comparable<?> v)",
    "methodName" : "getCumPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue(13);\n    frequency0.getCumPct((Comparable<?>) null);\n}",
    "testName" : "test3232"
  },
  "test6666" : {
    "methodSignature" : "public long getCumFreq(long v)",
    "methodName" : "getCumFreq",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6666() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    Integer integer0 = new Integer((-571));\n    frequency0.addValue(integer0);\n    frequency0.addValue(9);\n    long long0 = frequency0.getCumFreq(1L);\n}",
    "testName" : "test6666"
  },
  "test5454" : {
    "methodSignature" : "public double getPct(Comparable<?> v)",
    "methodName" : "getPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5454() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue((Object) \"Value \\t Freq. \\t Pct. \\t Cum Pct. \\n\");\n    double double0 = frequency0.getPct((Comparable<?>) \"Value \\t Freq. \\t Pct. \\t Cum Pct. \\n\");\n}",
    "testName" : "test5454"
  },
  "test2222" : {
    "methodSignature" : "public long getCount(Object v)",
    "methodName" : "getCount",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    long long0 = frequency0.getCount((Object) \"org.apace.ommons.math.MathRntimeException2\");\n}",
    "testName" : "test2222"
  },
  "test7676" : {
    "methodSignature" : "public long getCumFreq(char v)",
    "methodName" : "getCumFreq",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7676() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    long long0 = frequency0.getCumFreq(':');\n}",
    "testName" : "test7676"
  },
  "test033" : {
    "methodSignature" : "public double getPct(Object v)",
    "methodName" : "getPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue('l');\n    double double0 = frequency0.getPct((Object) \"\");\n}",
    "testName" : "test033"
  },
  "test077" : {
    "methodSignature" : "public double getPct(long v)",
    "methodName" : "getPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0).when(comparator0).compare(anyInt(), anyInt());\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue(0);\n    double double0 = frequency0.getPct(1L);\n}",
    "testName" : "test077"
  },
  "test1616" : {
    "methodSignature" : "public double getCumPct(int v)",
    "methodName" : "getCumPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0, 0, 0).when(comparator0).compare(anyInt(), anyInt());\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue((-2715L));\n    double double0 = frequency0.getCumPct(520);\n}",
    "testName" : "test1616"
  },
  "test3838" : {
    "methodSignature" : "public long getCount(Comparable<?> v)",
    "methodName" : "getCount",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3838() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.getCount((Comparable<?>) null);\n}",
    "testName" : "test3838"
  },
  "test2828" : {
    "methodSignature" : "public double getPct(Object v)",
    "methodName" : "getPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    Comparator<Frequency> comparator0 = (Comparator<Frequency>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    Frequency frequency0 = new Frequency(comparator0);\n    Object object0 = new Object();\n    frequency0.getPct(object0);\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public double getCumPct(long v)",
    "methodName" : "getCumPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    Comparator<Frequency> comparator0 = (Comparator<Frequency>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0, 0, 0).when(comparator0).compare(any(org.apache.commons.math.stat.Frequency.class), any(org.apache.commons.math.stat.Frequency.class));\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue((long) (-797));\n    double double0 = frequency0.getCumPct((long) (-797));\n}",
    "testName" : "test1414"
  },
  "test4848" : {
    "methodSignature" : "public long getCumFreq(Comparable<?> v)",
    "methodName" : "getCumFreq",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4848() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue(1);\n    Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());\n    doReturn(1431655765, 1, (-594), 0).when(comparable0).compareTo(any());\n    long long0 = frequency0.getCumFreq(comparable0);\n}",
    "testName" : "test4848"
  },
  "test3636" : {
    "methodSignature" : "public long getCumFreq(int v)",
    "methodName" : "getCumFreq",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3636() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());\n    doReturn(1431655765, 1431655765).when(comparable0).compareTo(any());\n    Integer integer0 = new Integer((-8));\n    frequency0.addValue(integer0);\n    frequency0.addValue(comparable0);\n    frequency0.getCumFreq((-8));\n}",
    "testName" : "test3636"
  },
  "test5858" : {
    "methodSignature" : "public long getSumFreq()",
    "methodName" : "getSumFreq",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5858() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    long long0 = frequency0.getSumFreq();\n}",
    "testName" : "test5858"
  },
  "test2626" : {
    "methodSignature" : "public long getCount(char v)",
    "methodName" : "getCount",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0).when(comparator0).compare(anyInt(), anyInt());\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue((-2007));\n    long long0 = frequency0.getCount('e');\n}",
    "testName" : "test2626"
  },
  "test6060" : {
    "methodSignature" : "public long getCount(long v)",
    "methodName" : "getCount",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6060() throws Throwable {\n    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    Frequency frequency0 = new Frequency(comparator0);\n    long long0 = frequency0.getCount((long) (-2007));\n}",
    "testName" : "test6060"
  },
  "test7070" : {
    "methodSignature" : "public void addValue(Object v)",
    "methodName" : "addValue",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7070() throws Throwable {\n    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue((Object) frequency0);\n}",
    "testName" : "test7070"
  },
  "test8080" : {
    "methodSignature" : "public long getCumFreq(int v)",
    "methodName" : "getCumFreq",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8080() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    long long0 = frequency0.getCumFreq((-8));\n}",
    "testName" : "test8080"
  },
  "test4242" : {
    "methodSignature" : "public void addValue(Comparable<?> v)",
    "methodName" : "addValue",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4242() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue('a');\n    Integer integer0 = new Integer(1961);\n    frequency0.addValue((Comparable<?>) integer0);\n}",
    "testName" : "test4242"
  },
  "test3030" : {
    "methodSignature" : "public double getCumPct(Object v)",
    "methodName" : "getCumPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue((Object) \"Value \\t Freq. \\t Pct. \\t Cum Pct. \\n\");\n    frequency0.getCumPct((Object) null);\n}",
    "testName" : "test3030"
  },
  "test6464" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6464() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    boolean boolean0 = frequency0.equals(frequency0);\n}",
    "testName" : "test6464"
  },
  "test5252" : {
    "methodSignature" : "public long getCumFreq(Comparable<?> v)",
    "methodName" : "getCumFreq",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5252() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    long long0 = frequency0.getCumFreq((Comparable<?>) \"Value \\t Freq. \\t Pct. \\t Cum Pct. \\n\");\n}",
    "testName" : "test5252"
  },
  "test2020" : {
    "methodSignature" : "public long getCumFreq(int v)",
    "methodName" : "getCumFreq",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    Integer integer0 = new Integer((-3471));\n    frequency0.addValue(integer0);\n    long long0 = frequency0.getCumFreq(1);\n}",
    "testName" : "test2020"
  },
  "test7474" : {
    "methodSignature" : "public long getCount(Object v)",
    "methodName" : "getCount",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7474() throws Throwable {\n    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    Frequency frequency0 = new Frequency(comparator0);\n    Iterator<Comparable<?>> iterator0 = frequency0.valuesIterator();\n    frequency0.getCount((Object) iterator0);\n}",
    "testName" : "test7474"
  },
  "test4040" : {
    "methodSignature" : "public void addValue(Integer v)",
    "methodName" : "addValue",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4040() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue((Object) \"Value \\t Freq. \\t Pct. \\t Cum Pct. \\n\");\n    Integer integer0 = new Integer(237);\n    frequency0.addValue(integer0);\n}",
    "testName" : "test4040"
  },
  "test6262" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6262() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    Frequency frequency1 = new Frequency();\n    boolean boolean0 = frequency0.equals(frequency1);\n}",
    "testName" : "test6262"
  },
  "test5050" : {
    "methodSignature" : "public long getCumFreq(Comparable<?> v)",
    "methodName" : "getCumFreq",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5050() throws Throwable {\n    Comparator<Frequency> comparator0 = (Comparator<Frequency>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0, 0, 0).when(comparator0).compare(any(org.apache.commons.math.stat.Frequency.class), any(org.apache.commons.math.stat.Frequency.class));\n    Frequency frequency0 = new Frequency(comparator0);\n    Long long0 = new Long((-875L));\n    frequency0.addValue('0');\n    long long1 = frequency0.getCumFreq((Comparable<?>) long0);\n}",
    "testName" : "test5050"
  },
  "test7272" : {
    "methodSignature" : "public double getPct(int v)",
    "methodName" : "getPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7272() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    Integer integer0 = new Integer((-542));\n    frequency0.addValue(integer0);\n    double double0 = frequency0.getPct(0);\n}",
    "testName" : "test7272"
  },
  "test022" : {
    "methodSignature" : "public void addValue(Object v)",
    "methodName" : "addValue",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0, 0).when(comparator0).compare(anyString(), anyString());\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue(31);\n    Integer integer0 = new Integer(31);\n    frequency0.addValue((Object) integer0);\n}",
    "testName" : "test022"
  },
  "test066" : {
    "methodSignature" : "public double getPct(long v)",
    "methodName" : "getPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue('');\n    double double0 = frequency0.getPct(796L);\n}",
    "testName" : "test066"
  },
  "test1818" : {
    "methodSignature" : "public double getCumPct(char v)",
    "methodName" : "getCumPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    Comparator<Frequency> comparator0 = (Comparator<Frequency>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0, 0, 0).when(comparator0).compare(any(org.apache.commons.math.stat.Frequency.class), any(org.apache.commons.math.stat.Frequency.class));\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue((long) (-797));\n    double double0 = frequency0.getCumPct('>');\n}",
    "testName" : "test1818"
  },
  "test5757" : {
    "methodSignature" : "public long getSumFreq()",
    "methodName" : "getSumFreq",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5757() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue('a');\n    long long0 = frequency0.getSumFreq();\n}",
    "testName" : "test5757"
  },
  "test2323" : {
    "methodSignature" : "public long getCount(Object v)",
    "methodName" : "getCount",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0).when(comparator0).compare(anyInt(), anyInt());\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue(0);\n    long long0 = frequency0.getCount((Object) \"\");\n}",
    "testName" : "test2323"
  },
  "test7979" : {
    "methodSignature" : "public void clear()",
    "methodName" : "clear",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7979() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.clear();\n}",
    "testName" : "test7979"
  },
  "test1313" : {
    "methodSignature" : "public double getCumPct(long v)",
    "methodName" : "getCumPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(comparable0).compareTo(any());\n    frequency0.addValue(comparable0);\n    double double0 = frequency0.getCumPct(2L);\n}",
    "testName" : "test1313"
  },
  "test4545" : {
    "methodSignature" : "public void addValue(char v)",
    "methodName" : "addValue",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4545() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue(770L);\n    frequency0.addValue('Y');\n}",
    "testName" : "test4545"
  },
  "test3535" : {
    "methodSignature" : "public long getCumFreq(Comparable<?> v)",
    "methodName" : "getCumFreq",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(comparable0).compareTo(any());\n    frequency0.addValue(comparable0);\n    frequency0.getCumFreq((Comparable<?>) null);\n}",
    "testName" : "test3535"
  },
  "test6767" : {
    "methodSignature" : "public long getCumFreq(long v)",
    "methodName" : "getCumFreq",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6767() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue(9);\n    long long0 = frequency0.getCumFreq(1L);\n}",
    "testName" : "test6767"
  },
  "test5555" : {
    "methodSignature" : "public long getCount(Comparable<?> v)",
    "methodName" : "getCount",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5555() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(comparable0).compareTo(any());\n    frequency0.addValue(comparable0);\n    Comparable<Object> comparable1 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(comparable1).compareTo(any());\n    long long0 = frequency0.getCount(comparable1);\n}",
    "testName" : "test5555"
  },
  "test2121" : {
    "methodSignature" : "public long getCumFreq(char v)",
    "methodName" : "getCumFreq",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0, 0, 0).when(comparator0).compare(anyString(), anyString());\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue((Object) \"[H0Ka\");\n    long long0 = frequency0.getCumFreq('/');\n}",
    "testName" : "test2121"
  },
  "test7777" : {
    "methodSignature" : "public long getCount(char v)",
    "methodName" : "getCount",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7777() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    long long0 = frequency0.getCount('b');\n}",
    "testName" : "test7777"
  },
  "test1111" : {
    "methodSignature" : "public double getCumPct(Object v)",
    "methodName" : "getCumPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue('a');\n    Integer integer0 = new Integer(1961);\n    double double0 = frequency0.getCumPct((Object) integer0);\n}",
    "testName" : "test1111"
  },
  "test4343" : {
    "methodSignature" : "public void addValue(Comparable<?> v)",
    "methodName" : "addValue",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4343() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue((Comparable<?>) null);\n}",
    "testName" : "test4343"
  },
  "test3333" : {
    "methodSignature" : "public long getCumFreq(Object v)",
    "methodName" : "getCumFreq",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue((-450));\n    frequency0.getCumFreq((Object) null);\n}",
    "testName" : "test3333"
  },
  "test6565" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6565() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    boolean boolean0 = frequency0.equals(\"Value \\t Freq. \\t Pct. \\t Cum Pct. \\n\");\n}",
    "testName" : "test6565"
  },
  "test011" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0, 0, 0, 0).when(comparator0).compare(anyInt(), anyInt());\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue((-2007));\n    frequency0.addValue((-2007));\n    String string0 = frequency0.toString();\n}",
    "testName" : "test011"
  },
  "test055" : {
    "methodSignature" : "public double getPct(Comparable<?> v)",
    "methodName" : "getPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue(0L);\n    double double0 = frequency0.getPct((Comparable<?>) 33);\n}",
    "testName" : "test055"
  },
  "test099" : {
    "methodSignature" : "public double getPct(char v)",
    "methodName" : "getPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue(770L);\n    double double0 = frequency0.getPct('Y');\n}",
    "testName" : "test099"
  },
  "test2727" : {
    "methodSignature" : "public double getPct(Object v)",
    "methodName" : "getPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue(9);\n    frequency0.getPct((Object) null);\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "public double getCumPct(char v)",
    "methodName" : "getCumPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue(1);\n    double double0 = frequency0.getCumPct('+');\n}",
    "testName" : "test1717"
  },
  "test4949" : {
    "methodSignature" : "public long getCumFreq(Comparable<?> v)",
    "methodName" : "getCumFreq",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4949() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue(1);\n    Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());\n    doReturn(1610612736, (-687)).when(comparable0).compareTo(any());\n    long long0 = frequency0.getCumFreq(comparable0);\n}",
    "testName" : "test4949"
  },
  "test3939" : {
    "methodSignature" : "public void addValue(Object v)",
    "methodName" : "addValue",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3939() throws Throwable {\n    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue((Object) null);\n}",
    "testName" : "test3939"
  },
  "test5959" : {
    "methodSignature" : "public void addValue(Comparable<?> v)",
    "methodName" : "addValue",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5959() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    Integer integer0 = new Integer(1961);\n    frequency0.addValue((Comparable<?>) integer0);\n}",
    "testName" : "test5959"
  },
  "test2525" : {
    "methodSignature" : "public long getCount(int v)",
    "methodName" : "getCount",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    Comparator<Frequency> comparator0 = (Comparator<Frequency>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0).when(comparator0).compare(any(org.apache.commons.math.stat.Frequency.class), any(org.apache.commons.math.stat.Frequency.class));\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue((long) (-797));\n    long long0 = frequency0.getCount(3306);\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public double getCumPct(int v)",
    "methodName" : "getCumPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue(770L);\n    double double0 = frequency0.getCumPct((-2288));\n}",
    "testName" : "test1515"
  },
  "test4747" : {
    "methodSignature" : "public double getCumPct(Comparable<?> v)",
    "methodName" : "getCumPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4747() throws Throwable {\n    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    Frequency frequency0 = new Frequency(comparator0);\n    Comparable<Frequency> comparable0 = (Comparable<Frequency>) mock(Comparable.class, new ViolatedAssumptionAnswer());\n    double double0 = frequency0.getCumPct(comparable0);\n}",
    "testName" : "test4747"
  },
  "test3737" : {
    "methodSignature" : "public long getCount(Object v)",
    "methodName" : "getCount",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3737() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.getCount((Object) null);\n}",
    "testName" : "test3737"
  },
  "test6969" : {
    "methodSignature" : "public void addValue(Comparable<?> v)",
    "methodName" : "addValue",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6969() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue((Object) \"Value \\t Freq. \\t Pct. \\t Cum Pct. \\n\");\n    frequency0.addValue((Comparable<?>) \"Value \\t Freq. \\t Pct. \\t Cum Pct. \\n\");\n}",
    "testName" : "test6969"
  },
  "test7171" : {
    "methodSignature" : "public long getCount(Comparable<?> v)",
    "methodName" : "getCount",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7171() throws Throwable {\n    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    Frequency frequency0 = new Frequency(comparator0);\n    Integer integer0 = new Integer((-617));\n    long long0 = frequency0.getCount((Comparable<?>) integer0);\n}",
    "testName" : "test7171"
  },
  "test8181" : {
    "methodSignature" : "public long getCumFreq(Comparable<?> v)",
    "methodName" : "getCumFreq",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8181() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue(1);\n    Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());\n    doReturn(1, 582, (-1234), 73).when(comparable0).compareTo(any());\n    long long0 = frequency0.getCumFreq(comparable0);\n}",
    "testName" : "test8181"
  },
  "test5353" : {
    "methodSignature" : "public double getPct(Comparable<?> v)",
    "methodName" : "getPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5353() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    double double0 = frequency0.getPct((Comparable<?>) \"Value \\t Freq. \\t Pct. \\t Cum Pct. \\n\");\n}",
    "testName" : "test5353"
  },
  "test7575" : {
    "methodSignature" : "public void addValue(long v)",
    "methodName" : "addValue",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7575() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue('#');\n    frequency0.addValue(69L);\n}",
    "testName" : "test7575"
  },
  "test4141" : {
    "methodSignature" : "public void addValue(Integer v)",
    "methodName" : "addValue",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4141() throws Throwable {\n    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue((Integer) null);\n}",
    "testName" : "test4141"
  },
  "test6363" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6363() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    boolean boolean0 = frequency0.equals((Object) null);\n}",
    "testName" : "test6363"
  },
  "test3131" : {
    "methodSignature" : "public double getCumPct(Object v)",
    "methodName" : "getCumPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    Frequency frequency0 = new Frequency(comparator0);\n    Iterator<Comparable<?>> iterator0 = frequency0.valuesIterator();\n    frequency0.getCumPct((Object) iterator0);\n}",
    "testName" : "test3131"
  },
  "test5151" : {
    "methodSignature" : "public long getCumFreq(Comparable<?> v)",
    "methodName" : "getCumFreq",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5151() throws Throwable {\n    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0, 0, 0).when(comparator0).compare(anyInt(), anyInt());\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue((-2007));\n    Integer integer0 = new Integer((-617));\n    long long0 = frequency0.getCumFreq((Comparable<?>) integer0);\n}",
    "testName" : "test5151"
  },
  "test7373" : {
    "methodSignature" : "public long getCount(int v)",
    "methodName" : "getCount",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7373() throws Throwable {\n    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    Frequency frequency0 = new Frequency(comparator0);\n    long long0 = frequency0.getCount((-2007));\n}",
    "testName" : "test7373"
  },
  "test6161" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6161() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue((Object) \"instance of class {0} not comparableto exiting values\");\n    Frequency frequency1 = new Frequency();\n    boolean boolean0 = frequency0.equals(frequency1);\n}",
    "testName" : "test6161"
  },
  "test000" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    frequency0.addValue(770L);\n    frequency0.hashCode();\n}",
    "testName" : "test000"
  },
  "test044" : {
    "methodSignature" : "public double getPct(Object v)",
    "methodName" : "getPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0, 0, 0).when(comparator0).compare(anyInt(), anyInt());\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue(0);\n    double double0 = frequency0.getPct((Object) \"\");\n}",
    "testName" : "test044"
  },
  "test088" : {
    "methodSignature" : "public double getPct(int v)",
    "methodName" : "getPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Comparator<Frequency> comparator0 = (Comparator<Frequency>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0).when(comparator0).compare(any(org.apache.commons.math.stat.Frequency.class), any(org.apache.commons.math.stat.Frequency.class));\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue((long) (-797));\n    double double0 = frequency0.getPct((-797));\n}",
    "testName" : "test088"
  },
  "test2929" : {
    "methodSignature" : "public double getPct(Comparable<?> v)",
    "methodName" : "getPct",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    Frequency frequency0 = new Frequency();\n    Integer integer0 = new Integer((-571));\n    frequency0.addValue(integer0);\n    frequency0.getPct((Comparable<?>) null);\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public long getCumFreq(Object v)",
    "methodName" : "getCumFreq",
    "className" : "org.apache.commons.math.stat.Frequency",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    doReturn(0, 0, 0, 0).when(comparator0).compare(anyString(), anyString());\n    Frequency frequency0 = new Frequency(comparator0);\n    frequency0.addValue((Object) \"[H0Ka\");\n    long long0 = frequency0.getCumFreq((Object) \"[H0Ka\");\n}",
    "testName" : "test1919"
  }
}