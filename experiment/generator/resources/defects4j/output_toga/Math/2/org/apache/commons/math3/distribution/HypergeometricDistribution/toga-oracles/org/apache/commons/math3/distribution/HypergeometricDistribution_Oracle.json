[ {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double upperCumulativeProbability(int x)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double upperCumulativeProbability(int x)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test011"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double getNumericalMean()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test012"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int[] sample(int sampleSize)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test023"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double cumulativeProbability(int x0, int x1) throws NumberIsTooLargeException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test034"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getPopulationSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test035"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double getNumericalMean()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test036"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getSampleSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test037"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double cumulativeProbability(int x)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test048"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public HypergeometricDistribution(int populationSize, int numberOfSuccesses, int sampleSize) throws NotPositiveException, NotStrictlyPositiveException, NumberIsTooLargeException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test059"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double probability(int x)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0610"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getSupportUpperBound()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test0711"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getPopulationSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, hypergeometricDistribution0.getPopulationSize())",
  "exception" : "",
  "testName" : "test0712"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getSampleSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, hypergeometricDistribution0.getSampleSize())",
  "exception" : "",
  "testName" : "test0713"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getSupportLowerBound()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test0814"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getPopulationSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, hypergeometricDistribution0.getPopulationSize())",
  "exception" : "",
  "testName" : "test0915"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double getNumericalMean()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0916"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getNumberOfSuccesses()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0917"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getSampleSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test0918"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double getNumericalMean()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1019"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getNumberOfSuccesses()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, hypergeometricDistribution0.getNumberOfSuccesses())",
  "exception" : "",
  "testName" : "test1020"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getPopulationSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, hypergeometricDistribution0.getPopulationSize())",
  "exception" : "",
  "testName" : "test1021"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double getNumericalMean()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1122"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getNumberOfSuccesses()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test1123"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getPopulationSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1224"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getSampleSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, hypergeometricDistribution0.getSampleSize())",
  "exception" : "",
  "testName" : "test1225"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getNumberOfSuccesses()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, hypergeometricDistribution0.getNumberOfSuccesses())",
  "exception" : "",
  "testName" : "test1226"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "protected double calculateNumericalVariance()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1227"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public HypergeometricDistribution(int populationSize, int numberOfSuccesses, int sampleSize) throws NotPositiveException, NotStrictlyPositiveException, NumberIsTooLargeException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1328"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double getNumericalVariance()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1429"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public HypergeometricDistribution(RandomGenerator rng, int populationSize, int numberOfSuccesses, int sampleSize) throws NotPositiveException, NotStrictlyPositiveException, NumberIsTooLargeException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1530"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double getNumericalMean()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1631"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double getNumericalMean()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1732"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getPopulationSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test1733"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getSampleSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, hypergeometricDistribution0.getSampleSize())",
  "exception" : "",
  "testName" : "test1834"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double getNumericalMean()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1835"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getPopulationSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, hypergeometricDistribution0.getPopulationSize())",
  "exception" : "",
  "testName" : "test1836"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getNumberOfSuccesses()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test1837"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getSupportLowerBound()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test1938"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getSampleSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, hypergeometricDistribution0.getSampleSize())",
  "exception" : "",
  "testName" : "test1939"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getPopulationSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1940"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double getNumericalMean()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1941"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getSampleSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test2042"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getPopulationSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, hypergeometricDistribution0.getPopulationSize())",
  "exception" : "",
  "testName" : "test2043"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getNumberOfSuccesses()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2044"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double getNumericalMean()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2145"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getSupportUpperBound()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test2146"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double upperCumulativeProbability(int x)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2247"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getSampleSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, hypergeometricDistribution0.getSampleSize())",
  "exception" : "",
  "testName" : "test2348"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getPopulationSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, hypergeometricDistribution0.getPopulationSize())",
  "exception" : "",
  "testName" : "test2349"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double getNumericalMean()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2350"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double upperCumulativeProbability(int x)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2351"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double getNumericalMean()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2452"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double upperCumulativeProbability(int x)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2453"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getSampleSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, hypergeometricDistribution0.getSampleSize())",
  "exception" : "",
  "testName" : "test2454"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getPopulationSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, hypergeometricDistribution0.getPopulationSize())",
  "exception" : "",
  "testName" : "test2455"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getPopulationSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, hypergeometricDistribution0.getPopulationSize())",
  "exception" : "",
  "testName" : "test2556"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double getNumericalMean()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2557"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double probability(int x)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2558"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getSampleSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, hypergeometricDistribution0.getSampleSize())",
  "exception" : "",
  "testName" : "test2559"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getSampleSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, hypergeometricDistribution0.getSampleSize())",
  "exception" : "",
  "testName" : "test2660"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double getNumericalMean()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2661"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getPopulationSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, hypergeometricDistribution0.getPopulationSize())",
  "exception" : "",
  "testName" : "test2662"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double probability(int x)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2663"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getSampleSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, hypergeometricDistribution0.getSampleSize())",
  "exception" : "",
  "testName" : "test2764"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double cumulativeProbability(int x)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2765"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double getNumericalMean()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2766"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getPopulationSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, hypergeometricDistribution0.getPopulationSize())",
  "exception" : "",
  "testName" : "test2767"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public HypergeometricDistribution(RandomGenerator rng, int populationSize, int numberOfSuccesses, int sampleSize) throws NotPositiveException, NotStrictlyPositiveException, NumberIsTooLargeException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2868"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public HypergeometricDistribution(RandomGenerator rng, int populationSize, int numberOfSuccesses, int sampleSize) throws NotPositiveException, NotStrictlyPositiveException, NumberIsTooLargeException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2969"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public HypergeometricDistribution(RandomGenerator rng, int populationSize, int numberOfSuccesses, int sampleSize) throws NotPositiveException, NotStrictlyPositiveException, NumberIsTooLargeException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3070"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public HypergeometricDistribution(RandomGenerator rng, int populationSize, int numberOfSuccesses, int sampleSize) throws NotPositiveException, NotStrictlyPositiveException, NumberIsTooLargeException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3171"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public boolean isSupportConnected()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test3272"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double getNumericalMean()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3273"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getSampleSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, hypergeometricDistribution0.getSampleSize())",
  "exception" : "",
  "testName" : "test3374"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public int getPopulationSize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, hypergeometricDistribution0.getPopulationSize())",
  "exception" : "",
  "testName" : "test3375"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double getNumericalVariance()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3376"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double getNumericalMean()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3377"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double getNumericalMean()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3478"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "public double cumulativeProbability(int x)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3479"
}, {
  "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
  "methodSignature" : "protected double calculateNumericalVariance()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3580"
} ]