{
  "test3479" : {
    "methodSignature" : "public double cumulativeProbability(int x)",
    "methodName" : "cumulativeProbability",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3479() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1130, 888, 568);\n    double double0 = hypergeometricDistribution0.cumulativeProbability(1130);\n}",
    "testName" : "test3479"
  },
  "test3478" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3478() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1130, 888, 568);\n    double double0 = hypergeometricDistribution0.cumulativeProbability(1130);\n    hypergeometricDistribution0.getNumericalMean();\n}",
    "testName" : "test3478"
  },
  "test2348" : {
    "methodSignature" : "public int getSampleSize()",
    "methodName" : "getSampleSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2348() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    double double0 = hypergeometricDistribution0.upperCumulativeProbability((-2040));\n    hypergeometricDistribution0.getSampleSize();\n}",
    "testName" : "test2348"
  },
  "test1732" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1732() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(474, 474, 474);\n    int int0 = hypergeometricDistribution0.getPopulationSize();\n    hypergeometricDistribution0.getNumericalMean();\n}",
    "testName" : "test1732"
  },
  "test2661" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2661() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    double double0 = hypergeometricDistribution0.probability((-1892));\n    hypergeometricDistribution0.getNumericalMean();\n}",
    "testName" : "test2661"
  },
  "test2660" : {
    "methodSignature" : "public int getSampleSize()",
    "methodName" : "getSampleSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2660() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    double double0 = hypergeometricDistribution0.probability((-1892));\n    hypergeometricDistribution0.getSampleSize();\n}",
    "testName" : "test2660"
  },
  "test2146" : {
    "methodSignature" : "public int getSupportUpperBound()",
    "methodName" : "getSupportUpperBound",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2146() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1130, 888, 568);\n    int int0 = hypergeometricDistribution0.getSupportUpperBound();\n}",
    "testName" : "test2146"
  },
  "test2663" : {
    "methodSignature" : "public double probability(int x)",
    "methodName" : "probability",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2663() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    double double0 = hypergeometricDistribution0.probability((-1892));\n}",
    "testName" : "test2663"
  },
  "test1530" : {
    "methodSignature" : "public HypergeometricDistribution(RandomGenerator rng, int populationSize, int numberOfSuccesses, int sampleSize) throws NotPositiveException, NotStrictlyPositiveException, NumberIsTooLargeException",
    "methodName" : "HypergeometricDistribution",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1530() throws Throwable {\n    MersenneTwister mersenneTwister0 = new MersenneTwister(6722166367014452318L);\n    HypergeometricDistribution hypergeometricDistribution0 = null;\n    hypergeometricDistribution0 = new HypergeometricDistribution(mersenneTwister0, 0, 0, 0);\n}",
    "testName" : "test1530"
  },
  "test2145" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2145() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1130, 888, 568);\n    int int0 = hypergeometricDistribution0.getSupportUpperBound();\n    hypergeometricDistribution0.getNumericalMean();\n}",
    "testName" : "test2145"
  },
  "test2662" : {
    "methodSignature" : "public int getPopulationSize()",
    "methodName" : "getPopulationSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2662() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    double double0 = hypergeometricDistribution0.probability((-1892));\n    hypergeometricDistribution0.getPopulationSize();\n}",
    "testName" : "test2662"
  },
  "test034" : {
    "methodSignature" : "public double cumulativeProbability(int x0, int x1) throws NumberIsTooLargeException",
    "methodName" : "cumulativeProbability",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    double double0 = hypergeometricDistribution0.cumulativeProbability(0, 144);\n}",
    "testName" : "test034"
  },
  "test1938" : {
    "methodSignature" : "public int getSupportLowerBound()",
    "methodName" : "getSupportLowerBound",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1938() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    int int0 = hypergeometricDistribution0.getSupportLowerBound();\n}",
    "testName" : "test1938"
  },
  "test1733" : {
    "methodSignature" : "public int getPopulationSize()",
    "methodName" : "getPopulationSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1733() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(474, 474, 474);\n    int int0 = hypergeometricDistribution0.getPopulationSize();\n}",
    "testName" : "test1733"
  },
  "test1019" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1019() throws Throwable {\n    Well19937c well19937c0 = new Well19937c();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well19937c0, 1795, 1795, 0);\n    double double0 = hypergeometricDistribution0.getNumericalMean();\n}",
    "testName" : "test1019"
  },
  "test2349" : {
    "methodSignature" : "public int getPopulationSize()",
    "methodName" : "getPopulationSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2349() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    double double0 = hypergeometricDistribution0.upperCumulativeProbability((-2040));\n    hypergeometricDistribution0.getPopulationSize();\n}",
    "testName" : "test2349"
  },
  "test2868" : {
    "methodSignature" : "public HypergeometricDistribution(RandomGenerator rng, int populationSize, int numberOfSuccesses, int sampleSize) throws NotPositiveException, NotStrictlyPositiveException, NumberIsTooLargeException",
    "methodName" : "HypergeometricDistribution",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2868() throws Throwable {\n    Well1024a well1024a0 = new Well1024a(3952L);\n    HypergeometricDistribution hypergeometricDistribution0 = null;\n    hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 30, 30, 1269);\n}",
    "testName" : "test2868"
  },
  "test0916" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0916() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(2, 2, 0);\n    int int0 = hypergeometricDistribution0.getSampleSize();\n    hypergeometricDistribution0.getNumericalMean();\n}",
    "testName" : "test0916"
  },
  "test0917" : {
    "methodSignature" : "public int getNumberOfSuccesses()",
    "methodName" : "getNumberOfSuccesses",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0917() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(2, 2, 0);\n    int int0 = hypergeometricDistribution0.getSampleSize();\n    hypergeometricDistribution0.getNumberOfSuccesses();\n}",
    "testName" : "test0917"
  },
  "test0918" : {
    "methodSignature" : "public int getSampleSize()",
    "methodName" : "getSampleSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0918() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(2, 2, 0);\n    int int0 = hypergeometricDistribution0.getSampleSize();\n}",
    "testName" : "test0918"
  },
  "test3273" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3273() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(474, 474, 474);\n    boolean boolean0 = hypergeometricDistribution0.isSupportConnected();\n    hypergeometricDistribution0.getNumericalMean();\n}",
    "testName" : "test3273"
  },
  "test3272" : {
    "methodSignature" : "public boolean isSupportConnected()",
    "methodName" : "isSupportConnected",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3272() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(474, 474, 474);\n    boolean boolean0 = hypergeometricDistribution0.isSupportConnected();\n}",
    "testName" : "test3272"
  },
  "test3070" : {
    "methodSignature" : "public HypergeometricDistribution(RandomGenerator rng, int populationSize, int numberOfSuccesses, int sampleSize) throws NotPositiveException, NotStrictlyPositiveException, NumberIsTooLargeException",
    "methodName" : "HypergeometricDistribution",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3070() throws Throwable {\n    Well512a well512a0 = new Well512a();\n    HypergeometricDistribution hypergeometricDistribution0 = null;\n    hypergeometricDistribution0 = new HypergeometricDistribution(well512a0, 426, 426, (byte) (-13));\n}",
    "testName" : "test3070"
  },
  "test1224" : {
    "methodSignature" : "public int getPopulationSize()",
    "methodName" : "getPopulationSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1224() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    double double0 = hypergeometricDistribution0.calculateNumericalVariance();\n    hypergeometricDistribution0.getPopulationSize();\n}",
    "testName" : "test1224"
  },
  "test1225" : {
    "methodSignature" : "public int getSampleSize()",
    "methodName" : "getSampleSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1225() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    double double0 = hypergeometricDistribution0.calculateNumericalVariance();\n    hypergeometricDistribution0.getSampleSize();\n}",
    "testName" : "test1225"
  },
  "test1940" : {
    "methodSignature" : "public int getPopulationSize()",
    "methodName" : "getPopulationSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1940() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    int int0 = hypergeometricDistribution0.getSupportLowerBound();\n    hypergeometricDistribution0.getPopulationSize();\n}",
    "testName" : "test1940"
  },
  "test2557" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2557() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    double double0 = hypergeometricDistribution0.probability(835);\n    hypergeometricDistribution0.getNumericalMean();\n}",
    "testName" : "test2557"
  },
  "test0610" : {
    "methodSignature" : "public double probability(int x)",
    "methodName" : "probability",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0610() throws Throwable {\n    Well19937a well19937a0 = new Well19937a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well19937a0, 200, 1, 1);\n    double double0 = hypergeometricDistribution0.probability(1);\n}",
    "testName" : "test0610"
  },
  "test1226" : {
    "methodSignature" : "public int getNumberOfSuccesses()",
    "methodName" : "getNumberOfSuccesses",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1226() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    double double0 = hypergeometricDistribution0.calculateNumericalVariance();\n    hypergeometricDistribution0.getNumberOfSuccesses();\n}",
    "testName" : "test1226"
  },
  "test1941" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1941() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    int int0 = hypergeometricDistribution0.getSupportLowerBound();\n    hypergeometricDistribution0.getNumericalMean();\n}",
    "testName" : "test1941"
  },
  "test2556" : {
    "methodSignature" : "public int getPopulationSize()",
    "methodName" : "getPopulationSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2556() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    double double0 = hypergeometricDistribution0.probability(835);\n    hypergeometricDistribution0.getPopulationSize();\n}",
    "testName" : "test2556"
  },
  "test1021" : {
    "methodSignature" : "public int getPopulationSize()",
    "methodName" : "getPopulationSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1021() throws Throwable {\n    Well19937c well19937c0 = new Well19937c();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well19937c0, 1795, 1795, 0);\n    double double0 = hypergeometricDistribution0.getNumericalMean();\n    hypergeometricDistribution0.getPopulationSize();\n}",
    "testName" : "test1021"
  },
  "test1429" : {
    "methodSignature" : "public double getNumericalVariance()",
    "methodName" : "getNumericalVariance",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1429() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1130, 888, 568);\n    double double0 = hypergeometricDistribution0.getNumericalVariance();\n}",
    "testName" : "test1429"
  },
  "test023" : {
    "methodSignature" : "public int[] sample(int sampleSize)",
    "methodName" : "sample",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test023() throws Throwable {\n    ISAACRandom iSAACRandom0 = new ISAACRandom();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(iSAACRandom0, 2548, 324, 324);\n    // Undeclared exception!\n    hypergeometricDistribution0.sample(2048);\n}",
    "testName" : "test023"
  },
  "test0814" : {
    "methodSignature" : "public int getSupportLowerBound()",
    "methodName" : "getSupportLowerBound",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0814() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1130, 888, 568);\n    int int0 = hypergeometricDistribution0.getSupportLowerBound();\n}",
    "testName" : "test0814"
  },
  "test1227" : {
    "methodSignature" : "protected double calculateNumericalVariance()",
    "methodName" : "calculateNumericalVariance",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1227() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    double double0 = hypergeometricDistribution0.calculateNumericalVariance();\n}",
    "testName" : "test1227"
  },
  "test2559" : {
    "methodSignature" : "public int getSampleSize()",
    "methodName" : "getSampleSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2559() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    double double0 = hypergeometricDistribution0.probability(835);\n    hypergeometricDistribution0.getSampleSize();\n}",
    "testName" : "test2559"
  },
  "test2558" : {
    "methodSignature" : "public double probability(int x)",
    "methodName" : "probability",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2558() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    double double0 = hypergeometricDistribution0.probability(835);\n}",
    "testName" : "test2558"
  },
  "test059" : {
    "methodSignature" : "public HypergeometricDistribution(int populationSize, int numberOfSuccesses, int sampleSize) throws NotPositiveException, NotStrictlyPositiveException, NumberIsTooLargeException",
    "methodName" : "HypergeometricDistribution",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test059() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = null;\n    hypergeometricDistribution0 = new HypergeometricDistribution(0, 0, 0);\n}",
    "testName" : "test059"
  },
  "test1939" : {
    "methodSignature" : "public int getSampleSize()",
    "methodName" : "getSampleSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1939() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    int int0 = hypergeometricDistribution0.getSupportLowerBound();\n    hypergeometricDistribution0.getSampleSize();\n}",
    "testName" : "test1939"
  },
  "test2351" : {
    "methodSignature" : "public double upperCumulativeProbability(int x)",
    "methodName" : "upperCumulativeProbability",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2351() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    double double0 = hypergeometricDistribution0.upperCumulativeProbability((-2040));\n}",
    "testName" : "test2351"
  },
  "test1020" : {
    "methodSignature" : "public int getNumberOfSuccesses()",
    "methodName" : "getNumberOfSuccesses",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1020() throws Throwable {\n    Well19937c well19937c0 = new Well19937c();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well19937c0, 1795, 1795, 0);\n    double double0 = hypergeometricDistribution0.getNumericalMean();\n    hypergeometricDistribution0.getNumberOfSuccesses();\n}",
    "testName" : "test1020"
  },
  "test2350" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2350() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    double double0 = hypergeometricDistribution0.upperCumulativeProbability((-2040));\n    hypergeometricDistribution0.getNumericalMean();\n}",
    "testName" : "test2350"
  },
  "test2247" : {
    "methodSignature" : "public double upperCumulativeProbability(int x)",
    "methodName" : "upperCumulativeProbability",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2247() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1130, 888, 568);\n    double double0 = hypergeometricDistribution0.upperCumulativeProbability(458);\n}",
    "testName" : "test2247"
  },
  "test2764" : {
    "methodSignature" : "public int getSampleSize()",
    "methodName" : "getSampleSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2764() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    double double0 = hypergeometricDistribution0.cumulativeProbability((-24));\n    hypergeometricDistribution0.getSampleSize();\n}",
    "testName" : "test2764"
  },
  "test1631" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1631() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(474, 474, 474);\n    double double0 = hypergeometricDistribution0.getNumericalMean();\n}",
    "testName" : "test1631"
  },
  "test2766" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2766() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    double double0 = hypergeometricDistribution0.cumulativeProbability((-24));\n    hypergeometricDistribution0.getNumericalMean();\n}",
    "testName" : "test2766"
  },
  "test2765" : {
    "methodSignature" : "public double cumulativeProbability(int x)",
    "methodName" : "cumulativeProbability",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2765() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    double double0 = hypergeometricDistribution0.cumulativeProbability((-24));\n}",
    "testName" : "test2765"
  },
  "test3376" : {
    "methodSignature" : "public double getNumericalVariance()",
    "methodName" : "getNumericalVariance",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3376() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    hypergeometricDistribution0.sample();\n    double double0 = hypergeometricDistribution0.getNumericalVariance();\n}",
    "testName" : "test3376"
  },
  "test2044" : {
    "methodSignature" : "public int getNumberOfSuccesses()",
    "methodName" : "getNumberOfSuccesses",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2044() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    int int0 = hypergeometricDistribution0.getSampleSize();\n    hypergeometricDistribution0.getNumberOfSuccesses();\n}",
    "testName" : "test2044"
  },
  "test3375" : {
    "methodSignature" : "public int getPopulationSize()",
    "methodName" : "getPopulationSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3375() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    hypergeometricDistribution0.sample();\n    double double0 = hypergeometricDistribution0.getNumericalVariance();\n    hypergeometricDistribution0.getPopulationSize();\n}",
    "testName" : "test3375"
  },
  "test3377" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3377() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    hypergeometricDistribution0.sample();\n    double double0 = hypergeometricDistribution0.getNumericalVariance();\n    hypergeometricDistribution0.getNumericalMean();\n}",
    "testName" : "test3377"
  },
  "test011" : {
    "methodSignature" : "public double upperCumulativeProbability(int x)",
    "methodName" : "upperCumulativeProbability",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1, 1, 1);\n    double double0 = hypergeometricDistribution0.upperCumulativeProbability(1);\n}",
    "testName" : "test011"
  },
  "test1836" : {
    "methodSignature" : "public int getPopulationSize()",
    "methodName" : "getPopulationSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1836() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    int int0 = hypergeometricDistribution0.getNumberOfSuccesses();\n    hypergeometricDistribution0.getPopulationSize();\n}",
    "testName" : "test1836"
  },
  "test012" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test012() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1, 1, 1);\n    double double0 = hypergeometricDistribution0.upperCumulativeProbability(1);\n    hypergeometricDistribution0.getNumericalMean();\n}",
    "testName" : "test012"
  },
  "test1837" : {
    "methodSignature" : "public int getNumberOfSuccesses()",
    "methodName" : "getNumberOfSuccesses",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1837() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    int int0 = hypergeometricDistribution0.getNumberOfSuccesses();\n}",
    "testName" : "test1837"
  },
  "test2969" : {
    "methodSignature" : "public HypergeometricDistribution(RandomGenerator rng, int populationSize, int numberOfSuccesses, int sampleSize) throws NotPositiveException, NotStrictlyPositiveException, NumberIsTooLargeException",
    "methodName" : "HypergeometricDistribution",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2969() throws Throwable {\n    Well44497a well44497a0 = new Well44497a(860);\n    HypergeometricDistribution hypergeometricDistribution0 = null;\n    hypergeometricDistribution0 = new HypergeometricDistribution(well44497a0, 739, 860, 1);\n}",
    "testName" : "test2969"
  },
  "test2767" : {
    "methodSignature" : "public int getPopulationSize()",
    "methodName" : "getPopulationSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2767() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    double double0 = hypergeometricDistribution0.cumulativeProbability((-24));\n    hypergeometricDistribution0.getPopulationSize();\n}",
    "testName" : "test2767"
  },
  "test1834" : {
    "methodSignature" : "public int getSampleSize()",
    "methodName" : "getSampleSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1834() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    int int0 = hypergeometricDistribution0.getNumberOfSuccesses();\n    hypergeometricDistribution0.getSampleSize();\n}",
    "testName" : "test1834"
  },
  "test1835" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1835() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    int int0 = hypergeometricDistribution0.getNumberOfSuccesses();\n    hypergeometricDistribution0.getNumericalMean();\n}",
    "testName" : "test1835"
  },
  "test048" : {
    "methodSignature" : "public double cumulativeProbability(int x)",
    "methodName" : "cumulativeProbability",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test048() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1130, 888, 568);\n    double double0 = hypergeometricDistribution0.cumulativeProbability(326);\n}",
    "testName" : "test048"
  },
  "test2043" : {
    "methodSignature" : "public int getPopulationSize()",
    "methodName" : "getPopulationSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2043() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    int int0 = hypergeometricDistribution0.getSampleSize();\n    hypergeometricDistribution0.getPopulationSize();\n}",
    "testName" : "test2043"
  },
  "test3374" : {
    "methodSignature" : "public int getSampleSize()",
    "methodName" : "getSampleSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3374() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    hypergeometricDistribution0.sample();\n    double double0 = hypergeometricDistribution0.getNumericalVariance();\n    hypergeometricDistribution0.getSampleSize();\n}",
    "testName" : "test3374"
  },
  "test2042" : {
    "methodSignature" : "public int getSampleSize()",
    "methodName" : "getSampleSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2042() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    int int0 = hypergeometricDistribution0.getSampleSize();\n}",
    "testName" : "test2042"
  },
  "test3171" : {
    "methodSignature" : "public HypergeometricDistribution(RandomGenerator rng, int populationSize, int numberOfSuccesses, int sampleSize) throws NotPositiveException, NotStrictlyPositiveException, NumberIsTooLargeException",
    "methodName" : "HypergeometricDistribution",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3171() throws Throwable {\n    Well44497b well44497b0 = new Well44497b(178);\n    HypergeometricDistribution hypergeometricDistribution0 = null;\n    hypergeometricDistribution0 = new HypergeometricDistribution(well44497b0, 1, (-766), 5976);\n}",
    "testName" : "test3171"
  },
  "test2455" : {
    "methodSignature" : "public int getPopulationSize()",
    "methodName" : "getPopulationSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2455() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    double double0 = hypergeometricDistribution0.upperCumulativeProbability(835);\n    hypergeometricDistribution0.getPopulationSize();\n}",
    "testName" : "test2455"
  },
  "test2452" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2452() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    double double0 = hypergeometricDistribution0.upperCumulativeProbability(835);\n    hypergeometricDistribution0.getNumericalMean();\n}",
    "testName" : "test2452"
  },
  "test1122" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1122() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(474, 474, 474);\n    int int0 = hypergeometricDistribution0.getNumberOfSuccesses();\n    hypergeometricDistribution0.getNumericalMean();\n}",
    "testName" : "test1122"
  },
  "test2454" : {
    "methodSignature" : "public int getSampleSize()",
    "methodName" : "getSampleSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2454() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    double double0 = hypergeometricDistribution0.upperCumulativeProbability(835);\n    hypergeometricDistribution0.getSampleSize();\n}",
    "testName" : "test2454"
  },
  "test1123" : {
    "methodSignature" : "public int getNumberOfSuccesses()",
    "methodName" : "getNumberOfSuccesses",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1123() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(474, 474, 474);\n    int int0 = hypergeometricDistribution0.getNumberOfSuccesses();\n}",
    "testName" : "test1123"
  },
  "test2453" : {
    "methodSignature" : "public double upperCumulativeProbability(int x)",
    "methodName" : "upperCumulativeProbability",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2453() throws Throwable {\n    Well1024a well1024a0 = new Well1024a();\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(well1024a0, 835, 0, 835);\n    double double0 = hypergeometricDistribution0.upperCumulativeProbability(835);\n}",
    "testName" : "test2453"
  },
  "test000" : {
    "methodSignature" : "public double upperCumulativeProbability(int x)",
    "methodName" : "upperCumulativeProbability",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1130, 888, 568);\n    double double0 = hypergeometricDistribution0.upperCumulativeProbability(568);\n}",
    "testName" : "test000"
  },
  "test0915" : {
    "methodSignature" : "public int getPopulationSize()",
    "methodName" : "getPopulationSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0915() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(2, 2, 0);\n    int int0 = hypergeometricDistribution0.getSampleSize();\n    hypergeometricDistribution0.getPopulationSize();\n}",
    "testName" : "test0915"
  },
  "test0711" : {
    "methodSignature" : "public int getSupportUpperBound()",
    "methodName" : "getSupportUpperBound",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0711() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    int int0 = hypergeometricDistribution0.getSupportUpperBound();\n}",
    "testName" : "test0711"
  },
  "test0712" : {
    "methodSignature" : "public int getPopulationSize()",
    "methodName" : "getPopulationSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0712() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    int int0 = hypergeometricDistribution0.getSupportUpperBound();\n    hypergeometricDistribution0.getPopulationSize();\n}",
    "testName" : "test0712"
  },
  "test1328" : {
    "methodSignature" : "public HypergeometricDistribution(int populationSize, int numberOfSuccesses, int sampleSize) throws NotPositiveException, NotStrictlyPositiveException, NumberIsTooLargeException",
    "methodName" : "HypergeometricDistribution",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1328() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = null;\n    hypergeometricDistribution0 = new HypergeometricDistribution(807, 807, 1880);\n}",
    "testName" : "test1328"
  },
  "test0713" : {
    "methodSignature" : "public int getSampleSize()",
    "methodName" : "getSampleSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0713() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    int int0 = hypergeometricDistribution0.getSupportUpperBound();\n    hypergeometricDistribution0.getSampleSize();\n}",
    "testName" : "test0713"
  },
  "test037" : {
    "methodSignature" : "public int getSampleSize()",
    "methodName" : "getSampleSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test037() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    double double0 = hypergeometricDistribution0.cumulativeProbability(0, 144);\n    hypergeometricDistribution0.getSampleSize();\n}",
    "testName" : "test037"
  },
  "test035" : {
    "methodSignature" : "public int getPopulationSize()",
    "methodName" : "getPopulationSize",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test035() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    double double0 = hypergeometricDistribution0.cumulativeProbability(0, 144);\n    hypergeometricDistribution0.getPopulationSize();\n}",
    "testName" : "test035"
  },
  "test036" : {
    "methodSignature" : "public double getNumericalMean()",
    "methodName" : "getNumericalMean",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test036() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1395, 0, 1395);\n    double double0 = hypergeometricDistribution0.cumulativeProbability(0, 144);\n    hypergeometricDistribution0.getNumericalMean();\n}",
    "testName" : "test036"
  },
  "test3580" : {
    "methodSignature" : "protected double calculateNumericalVariance()",
    "methodName" : "calculateNumericalVariance",
    "className" : "org.apache.commons.math3.distribution.HypergeometricDistribution",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3580() throws Throwable {\n    HypergeometricDistribution hypergeometricDistribution0 = new HypergeometricDistribution(1130, 888, 568);\n    double double0 = hypergeometricDistribution0.calculateNumericalVariance();\n}",
    "testName" : "test3580"
  }
}