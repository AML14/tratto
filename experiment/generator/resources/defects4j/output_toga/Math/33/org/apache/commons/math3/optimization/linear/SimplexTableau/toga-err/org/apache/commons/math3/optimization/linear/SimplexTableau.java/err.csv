org.apache.commons.math3.optimization.linear.SimplexTableau,@Test(timeout = 4000)
public void test033() throws Throwable {
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = 245.355668;
    doubleArray0[1] = 245.355668;
    doubleArray0[2] = 1.0;
    doubleArray0[3] = (-2593.4);
    doubleArray0[4] = (-1.0);
    doubleArray0[5] = 0.0;
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1.0));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    Relationship relationship0 = Relationship.EQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, (-1.0));
    linkedList0.offerLast(linearConstraint0);
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-2008.0));
    simplexTableau0.hashCode();
    simplexTableau0.createTableau(true);
    simplexTableau0.getRhsOffset();
    simplexTableau0.getHeight();
    simplexTableau0.getOriginalNumDecisionVariables();
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(10);
    simplexTableau0.getSolution();
    linearObjectiveFunction0.getValue((RealVector) arrayRealVector0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.optimization.linear.SimplexTableau,@Test(timeout = 4000)
public void test066() throws Throwable {
    double[] doubleArray0 = new double[5];
    doubleArray0[1] = 0.0;
    doubleArray0[2] = 1525.0300557987;
    doubleArray0[3] = 1.0;
    doubleArray0[4] = 379.0;
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-2112.0374798150333));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    Relationship relationship0 = Relationship.GEQ;
    LinearConstraint linearConstraint0 = new LinearConstraint((RealVector) null, relationship0, 1525.0300557987);
    linkedList0.add(linearConstraint0);
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, (-1), (-1));
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.optimization.linear.SimplexTableau,@Test(timeout = 4000)
public void test077() throws Throwable {
    double[] doubleArray0 = new double[6];
    doubleArray0[1] = 0.0;
    doubleArray0[2] = 2205.70153582;
    doubleArray0[3] = 2578.0;
    doubleArray0[4] = 580.40377433441;
    doubleArray0[3] = 531.9117748201945;
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 580.40377433441);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    linearObjectiveFunction0.getValue(doubleArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.optimization.linear.SimplexTableau,@Test(timeout = 4000)
public void test2323() throws Throwable {
    double[] doubleArray0 = new double[0];
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-2041.233835653));
    GoalType goalType0 = GoalType.MINIMIZE;
    int int0 = 0;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, (Collection<LinearConstraint>) null, goalType0, false, Double.POSITIVE_INFINITY, 0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    simplexTableau0.normalizeConstraints(linkedList0);
    double double0 = (-56.3216283894694);
    OpenMapRealVector openMapRealVector0 = null;
    openMapRealVector0 = new OpenMapRealVector(doubleArray0, double0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.optimization.linear.SimplexTableau,@Test(timeout = 4000)
public void test2525() throws Throwable {
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = 0.0;
    double double0 = 0.0;
    doubleArray0[1] = 0.0;
    doubleArray0[2] = 1934.74176663;
    doubleArray0[3] = 0.0;
    doubleArray0[4] = 2112.1677119392566;
    doubleArray0[5] = 0.0;
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 1.0, (-1500));
    Relationship relationship0 = Relationship.EQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, 0.0, relationship0, doubleArray0, 0.0);
    linkedList0.add(linearConstraint0);
    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);
    int int0 = 3859;
    simplexTableau0.getBasicRow(3859);
    boolean boolean0 = true;
    double double1 = 1655.21305;
    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, list0, goalType0, boolean0, double1);
    simplexTableau1.isOptimal();
    simplexTableau1.getSolution();
    simplexTableau1.getNumObjectiveFunctions();
    LinkedList<LinearConstraint> linkedList1 = new LinkedList<LinearConstraint>();
    Relationship relationship1 = Relationship.LEQ;
    LinearConstraint linearConstraint1 = null;
    linearConstraint1 = new LinearConstraint(doubleArray0, double0, relationship1, doubleArray0, doubleArray0[2]);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.optimization.linear.SimplexTableau,@Test(timeout = 4000)
public void test4040() throws Throwable {
    LinearObjectiveFunction linearObjectiveFunction0 = null;
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    Double[] doubleArray0 = new Double[0];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
    Relationship relationship0 = Relationship.LEQ;
    Relationship relationship1 = Relationship.EQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, 1.0E-12, relationship1, openMapRealVector0, 0.0);
    linkedList0.add(linearConstraint0);
    LinearConstraint linearConstraint1 = new LinearConstraint(openMapRealVector0, 1.0, relationship0, openMapRealVector0, 0.0);
    linkedList0.add(linearConstraint1);
    GoalType goalType0 = GoalType.MAXIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau((LinearObjectiveFunction) null, linkedList0, goalType0, true, 6.283185307179586);
    simplexTableau0.normalizeConstraints(linkedList0);
    GoalType goalType1 = GoalType.MINIMIZE;
    simplexTableau0.getOriginalNumDecisionVariables();
    boolean boolean0 = true;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math3.optimization.linear.SimplexTableau,@Test(timeout = 4000)
public void test5959() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-2470), (-2470), 2.0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 6.283185307179586);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    boolean boolean0 = false;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 1.0E-12);
    simplexTableau0.normalizeConstraints(linkedList0);
    double double0 = 0.0;
    int int0 = 0;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math3.optimization.linear.SimplexTableau,@Test(timeout = 4000)
public void test6262() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(1);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, (-1.0));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    LinkedList<LinearConstraint> linkedList1 = new LinkedList<LinearConstraint>(linkedList0);
    GoalType goalType0 = GoalType.MINIMIZE;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList1, goalType0, false, 1.0E-12, 3);
    Collection<LinearConstraint> collection0 = null;
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = (double) 1;
    Relationship relationship0 = Relationship.LEQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, relationship0, 1.0);
    linkedList1.offer(linearConstraint0);
    linearObjectiveFunction0.getValue(doubleArray0);
    openMapRealVector0.mapAdd((-1526.8747952501676));
    linearObjectiveFunction0.getValue(doubleArray0);
    Relationship relationship1 = Relationship.EQ;
    LinearConstraint linearConstraint1 = new LinearConstraint(doubleArray0, 377.446993396333, relationship1, doubleArray0, (-3557.566494));
    linkedList0.add(linearConstraint1);
    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints((Collection<LinearConstraint>) null);
    linkedList0.add(linearConstraint1);
    boolean boolean0 = true;
    double double0 = (-1.0);
    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, list0, goalType0, boolean0, double0);
    simplexTableau1.getSlackVariableOffset();
    simplexTableau0.dropPhase1Objective();
    linearObjectiveFunction0.getValue(doubleArray0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.optimization.linear.SimplexTableau,@Test(timeout = 4000)
public void test6464() throws Throwable {
    double[] doubleArray0 = new double[5];
    doubleArray0[0] = (-1.0);
    doubleArray0[1] = 0.0;
    doubleArray0[2] = 1525.0300557987;
    doubleArray0[3] = 1.0;
    doubleArray0[4] = 379.0;
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-2112.0374798150333));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    Relationship relationship0 = Relationship.GEQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, (-1.0), relationship0, doubleArray0, 379.0);
    linkedList0.add(linearConstraint0);
    Relationship relationship1 = Relationship.GEQ;
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 1.0);
    simplexTableau0.getOriginalNumDecisionVariables();
    LinearConstraint linearConstraint1 = new LinearConstraint((RealVector) null, relationship1, 1525.0300557987);
    linkedList0.add(linearConstraint1);
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, (-1), 0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.optimization.linear.SimplexTableau,@Test(timeout = 4000)
public void test7272() throws Throwable {
    double[] doubleArray0 = new double[6];
    doubleArray0[0] = 245.355668;
    doubleArray0[1] = 753.76440798789;
    doubleArray0[2] = 1.0;
    doubleArray0[3] = (-2593.4);
    doubleArray0[4] = (-1.0);
    doubleArray0[5] = 0.0;
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, (-1.0));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    Relationship relationship0 = Relationship.EQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, (-1.0));
    linkedList0.offerLast(linearConstraint0);
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-2008.0));
    simplexTableau0.hashCode();
    simplexTableau0.createTableau(true);
    simplexTableau0.getRhsOffset();
    simplexTableau0.getHeight();
    simplexTableau0.getOriginalNumDecisionVariables();
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(10);
    simplexTableau0.getSolution();
    linearObjectiveFunction0.getValue((RealVector) arrayRealVector0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.optimization.linear.SimplexTableau,@Test(timeout = 4000)
public void test7777() throws Throwable {
    int int0 = 4778;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(4778, (-143.17502733758));
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(arrayRealVector0, (-4069.35));
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MAXIMIZE;
    int int1 = (-3038);
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-1639.407151507), (-3038));
    List<LinearConstraint> list0 = simplexTableau0.normalizeConstraints(linkedList0);
    SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, list0, goalType0, false, (-4069.35));
    int int2 = simplexTableau1.getNumObjectiveFunctions();
    double double0 = 3294198.0;
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(int2, double0);
    Relationship relationship0 = Relationship.EQ;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.math3.optimization.linear.SimplexTableau,@Test(timeout = 4000)
public void test8282() throws Throwable {
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(1105);
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, arrayRealVector0);
    LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(arrayRealVector1, 203.653161418582);
    LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
    GoalType goalType0 = GoalType.MINIMIZE;
    arrayRealVector1.getMaxIndex();
    double[] doubleArray0 = new double[8];
    doubleArray0[0] = (-1595.31292955159);
    doubleArray0[1] = (-1595.31292955159);
    doubleArray0[2] = (-1595.31292955159);
    doubleArray0[3] = 203.653161418582;
    doubleArray0[4] = (double) 2209;
    doubleArray0[5] = (double) 1105;
    doubleArray0[6] = (double) 1105;
    doubleArray0[7] = (double) 1105;
    Relationship relationship0 = Relationship.EQ;
    LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, (-1181.95142794979), relationship0, doubleArray0, 3241.3842515652887);
    linkedList0.add(linearConstraint0);
    SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-1595.31292955159));
    simplexTableau0.getOriginalNumDecisionVariables();
    simplexTableau0.dropPhase1Objective();
    int int0 = 3686;
    simplexTableau0.getEntry(int0, int0);
    int int1 = 1086;
    simplexTableau0.getBasicRow(int1);
    int int2 = 263;
    double double0 = 0.0;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
