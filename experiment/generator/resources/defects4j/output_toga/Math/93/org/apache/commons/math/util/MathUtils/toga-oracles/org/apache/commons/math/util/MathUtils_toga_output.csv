project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.round(Float.NaN, 1354, 13);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding method.
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test0011,"public void test0011() throws Throwable {
    MathUtils.nextAfter(0.0, 0.0);
}",1,
project,0,test0022,"public void test0022() throws Throwable {
    MathUtils.indicator((short) (byte) 0);
}",0,
project,0,test0033,"public void test0033() throws Throwable {
    MathUtils.indicator(0L);
}",0,
project,0,test0044,"public void test0044() throws Throwable {
    MathUtils.indicator(1);
}",0,
project,0,test0055,"public void test0055() throws Throwable {
    MathUtils.indicator(1.0);
}",0,
project,0,test0066,"public void test0066() throws Throwable {
    MathUtils.indicator((byte) 107);
}",0,
project,0,test0077,"public void test0077() throws Throwable {
    double[] doubleArray0 = new double[6];
    double[] doubleArray1 = new double[9];
    MathUtils.equals(doubleArray0, doubleArray1);
}",0,
project,0,test0088,"public void test0088() throws Throwable {
    MathUtils.cosh((-1.0));
}",0,
project,0,test0099,"public void test0099() throws Throwable {
    MathUtils.binomialCoefficientLog(0, 0);
}",1,
project,0,test01010,"public void test01010() throws Throwable {
    MathUtils.addAndCheck(0L, (-2067L));
}",0,
project,0,test01111,"public void test01111() throws Throwable {
    MathUtils.subAndCheck(720L, 1L);
}",1,
project,0,test01212,"public void test01212() throws Throwable {
    MathUtils.subAndCheck(4718, 4718);
}",1,
project,0,test01313,"public void test01313() throws Throwable {
    MathUtils.subAndCheck(1892, 16);
}",1,
project,0,test01414,"public void test01414() throws Throwable {
    MathUtils.sinh(0.0);
}",0,
project,0,test01515,"public void test01515() throws Throwable {
    MathUtils.sinh((-1.0));
}",0,
project,0,test01616,"public void test01616() throws Throwable {
    MathUtils.scalb((-1.0), (-1614));
}",0,
project,0,test01717,"public void test01717() throws Throwable {
    MathUtils.round((float) 0, 0);
}",1,
project,0,test01818,"public void test01818() throws Throwable {
    MathUtils.round(0.0, 0, 0);
}",1,
project,0,test01919,"public void test01919() throws Throwable {
    MathUtils.round(1588.09, (int) (short) 1, (int) (byte) 0);
}",1,
project,0,test02020,"public void test02020() throws Throwable {
    MathUtils.round((double) 1L, (int) (short) 1);
}",1,
project,0,test02121,"public void test02121() throws Throwable {
    MathUtils.round((-180.6522257959), (int) (byte) (-1));
}",1,
project,0,test02222,"public void test02222() throws Throwable {
    MathUtils.normalizeAngle(113.58579447, 1);
}",0,
project,0,test02323,"public void test02323() throws Throwable {
    MathUtils.normalizeAngle((-2161.79362456336), 0);
}",0,
project,0,test02424,"public void test02424() throws Throwable {
    MathUtils.mulAndCheck(0, 0);
}",1,
project,0,test02525,"public void test02525() throws Throwable {
    MathUtils.mulAndCheck(1639, (-1057));
}",1,
project,0,test02626,"public void test02626() throws Throwable {
    MathUtils.log(544, 544);
}",0,
project,0,test02727,"public void test02727() throws Throwable {
    MathUtils.log(244.86671, 0.0);
}",0,
project,0,test02828,"public void test02828() throws Throwable {
    MathUtils.lcm(0, (-1477));
}",1,
project,0,test02929,"public void test02929() throws Throwable {
    MathUtils.hash((double[]) null);
}",0,
project,0,test03030,"public void test03030() throws Throwable {
    double[] doubleArray0 = new double[9];
    doubleArray0[1] = (double) (-1L);
    doubleArray0[6] = (double) (-1L);
    MathUtils.hash(doubleArray0);
}",0,
project,0,test03131,"public void test03131() throws Throwable {
    MathUtils.hash((double) 0);
}",0,
project,0,test03232,"public void test03232() throws Throwable {
    MathUtils.hash((double) 1);
}",0,
project,0,test03333,"public void test03333() throws Throwable {
    MathUtils.factorialLog(0);
}",1,
project,0,test03434,"public void test03434() throws Throwable {
    MathUtils.binomialCoefficientLog(351, (-1));
}",1,
project,0,test03535,"public void test03535() throws Throwable {
    MathUtils.binomialCoefficientDouble((short) 739, (-1));
}",0,
project,0,test03636,"public void test03636() throws Throwable {
    MathUtils.addAndCheck(0L, 0L);
}",0,
project,0,test03737,"public void test03737() throws Throwable {
    MathUtils.addAndCheck((long) 0, 1999L);
}",1,
project,0,test03838,"public void test03838() throws Throwable {
    MathUtils.addAndCheck(0, 0);
}",1,
project,0,test03939,"public void test03939() throws Throwable {
    MathUtils.addAndCheck((-1), 0);
}",1,
project,0,test04040,"public void test04040() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.round((double) (-1), 0, 3677);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",0,
project,0,test04141,"public void test04141() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.lcm(0, 0);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // / by zero
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test04242,"public void test04242() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.lcm(1972, 2146517618);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: mul
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test04343,"public void test04343() throws Throwable {
    // Undeclared exception!
    MathUtils.factorialLog((short) 10008);
}",1,
project,0,test04444,"public void test04444() throws Throwable {
    // Undeclared exception!
    MathUtils.factorial(2144874311);
}",1,
project,0,test04545,"public void test04545() throws Throwable {
    // Undeclared exception!
    MathUtils.binomialCoefficientLog(131810, 19);
}",1,
project,0,test04646,"public void test04646() throws Throwable {
    // Undeclared exception!
    MathUtils.binomialCoefficientDouble(1696258207, 14);
}",0,
project,0,test04747,"public void test04747() throws Throwable {
    // Undeclared exception!
    MathUtils.binomialCoefficient(846855, (-405));
}",1,
project,0,test04848,"public void test04848() throws Throwable {
    double double0 = MathUtils.nextAfter((-249.9531578), 0);
    assertEquals((-249.95315779999999), double0, 0.01);
}",0,
project,0,test04949,"public void test04949() throws Throwable {
    double double0 = MathUtils.nextAfter((-1.0), (-1.0));
    assertEquals((-1.0000000000000002), double0, 0.01);
}",0,
project,0,test05050,"public void test05050() throws Throwable {
    double double0 = MathUtils.nextAfter(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",0,
project,0,test05151,"public void test05151() throws Throwable {
    long long0 = MathUtils.mulAndCheck((-873L), (long) (short) 1);
    assertEquals((-873L), long0);
}",1,
project,0,test05252,"public void test05252() throws Throwable {
    long long0 = MathUtils.mulAndCheck((-2696L), (-2696L));
    assertEquals(7268416L, long0);
}",1,
project,0,test05353,"public void test05353() throws Throwable {
    int int0 = MathUtils.mulAndCheck(731142, 1359);
    assertEquals(993621978, int0);
}",1,
project,0,test05454,"public void test05454() throws Throwable {
    float float0 = MathUtils.indicator((float) (-1630L));
    assertEquals((-1.0F), float0, 0.01F);
}",0,
project,0,test05555,"public void test05555() throws Throwable {
    float float0 = MathUtils.indicator((float) (short) 1);
    assertEquals(1.0F, float0, 0.01F);
}",0,
project,0,test05656,"public void test05656() throws Throwable {
    int int0 = MathUtils.gcd((-1956), (-1956));
    assertEquals(1956, int0);
}",0,
project,0,test05757,"public void test05757() throws Throwable {
    double double0 = MathUtils.factorialLog(1359);
    assertEquals(8450.037750891279, double0, 0.01);
}",1,
project,0,test05858,"public void test05858() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.factorialDouble((-3253));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for n!
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test05959,"public void test05959() throws Throwable {
    double double0 = MathUtils.factorialDouble(3297);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",1,
project,0,test06060,"public void test06060() throws Throwable {
    boolean boolean0 = MathUtils.equals(0.464843750003638, 0.464843750003638);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test06161,"public void test06161() throws Throwable {
    double double0 = MathUtils.binomialCoefficientLog(1535, 15);
    assertEquals(82.07639319888865, double0, 0.01);
}",1,
project,0,test06262,"public void test06262() throws Throwable {
    double double0 = MathUtils.binomialCoefficientLog(1, 0);
    assertEquals(0.0, double0, 0.01);
}",1,
project,0,test06363,"public void test06363() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficientLog((-1800), 0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= k for binomial coefficient (n,k)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test06464,"public void test06464() throws Throwable {
    int int0 = MathUtils.subAndCheck(0, 1);
    assertEquals((-1), int0);
}",1,
project,0,test06565,"public void test06565() throws Throwable {
    short short0 = MathUtils.sign((short) (-1));
    assertEquals((short) (-1), short0);
}",0,
project,0,test06666,"public void test06666() throws Throwable {
    short short0 = MathUtils.sign((short) 0);
    assertEquals((short) 0, short0);
}",0,assertNotNull(short0)
project,0,test06767,"public void test06767() throws Throwable {
    short short0 = MathUtils.sign((short) 899);
    assertEquals((short) 1, short0);
}",0,
project,0,test06868,"public void test06868() throws Throwable {
    long long0 = MathUtils.sign((-1L));
    assertEquals((-1L), long0);
}",0,"assertEquals(0, long0)"
project,0,test06969,"public void test06969() throws Throwable {
    long long0 = MathUtils.sign(0L);
    assertEquals(0L, long0);
}",0,"assertEquals(1, long0)"
project,0,test07070,"public void test07070() throws Throwable {
    long long0 = MathUtils.sign((long) (short) 1);
    assertEquals(1L, long0);
}",0,"assertEquals(1, long0)"
project,0,test07171,"public void test07171() throws Throwable {
    int int0 = MathUtils.sign((-1593));
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test07272,"public void test07272() throws Throwable {
    int int0 = MathUtils.sign(0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test07373,"public void test07373() throws Throwable {
    int int0 = MathUtils.sign(2);
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test07474,"public void test07474() throws Throwable {
    float float0 = MathUtils.sign((-1138.658F));
    assertEquals((-1.0F), float0, 0.01F);
}",0,
project,0,test07575,"public void test07575() throws Throwable {
    float float0 = MathUtils.sign(0.0F);
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test07676,"public void test07676() throws Throwable {
    float float0 = MathUtils.sign((float) (short) 1);
    assertEquals(1.0F, float0, 0.01F);
}",0,
project,0,test07777,"public void test07777() throws Throwable {
    double double0 = MathUtils.sign((-759.6439791));
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test07878,"public void test07878() throws Throwable {
    double double0 = MathUtils.sign(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test07979,"public void test07979() throws Throwable {
    double double0 = MathUtils.sign(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test08080,"public void test08080() throws Throwable {
    double double0 = MathUtils.sign((double) 38);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test08181,"public void test08181() throws Throwable {
    byte byte0 = MathUtils.sign((byte) 31);
    assertEquals((byte) 1, byte0);
}",0,
project,0,test08282,"public void test08282() throws Throwable {
    byte byte0 = MathUtils.sign((byte) 0);
    assertEquals((byte) 0, byte0);
}",0,
project,0,test08383,"public void test08383() throws Throwable {
    byte byte0 = MathUtils.sign((byte) (-41));
    assertEquals((byte) (-1), byte0);
}",0,assertNotNull(byte0)
project,0,test08484,"public void test08484() throws Throwable {
    float float0 = MathUtils.round((float) 120, (int) (short) (-1), 5);
    assertEquals(120.0F, float0, 0.01F);
}",0,
project,0,test08585,"public void test08585() throws Throwable {
    float float0 = MathUtils.round(1.0F, 0, 0);
    assertEquals(2.0F, float0, 0.01F);
}",1,
project,0,test08686,"public void test08686() throws Throwable {
    double double0 = MathUtils.round(Double.NEGATIVE_INFINITY, 1, 570);
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",0,
project,0,test08787,"public void test08787() throws Throwable {
    double double0 = MathUtils.round(Double.NaN, (-2742), 356);
    assertEquals(Double.NaN, double0, 0.01);
}",1,
project,0,test08888,"public void test08888() throws Throwable {
    double double0 = MathUtils.scalb(1186.58, 0);
    assertEquals(1186.58, double0, 0.01);
}",1,
project,0,test08989,"public void test08989() throws Throwable {
    double double0 = MathUtils.scalb(0.0, 0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test09090,"public void test09090() throws Throwable {
    double double0 = MathUtils.nextAfter(1.0, 0.0);
    assertEquals(0.9999999999999999, double0, 0.01);
}",1,
project,0,test09191,"public void test09191() throws Throwable {
    double double0 = MathUtils.nextAfter(0L, (-1386));
    assertEquals((-4.9E-324), double0, 0.01);
}",1,
project,0,test09292,"public void test09292() throws Throwable {
    double double0 = MathUtils.nextAfter(Double.NaN, 0.0);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test09393,"public void test09393() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.mulAndCheck(4503599627370495L, 2969L);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: multiply
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test09494,"public void test09494() throws Throwable {
    long long0 = MathUtils.mulAndCheck(0L, 0L);
    assertEquals(0L, long0);
}",1,
project,0,test09595,"public void test09595() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.mulAndCheck(2432902008176640000L, (long) (-1337364193));
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: multiply
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test09696,"public void test09696() throws Throwable {
    long long0 = MathUtils.mulAndCheck((-1L), (long) 0);
    assertEquals(0L, long0);
}",1,
project,0,test09797,"public void test09797() throws Throwable {
    long long0 = MathUtils.mulAndCheck((long) 21, (-2588L));
    assertEquals((-54348L), long0);
}",1,
project,0,test09898,"public void test09898() throws Throwable {
    long long0 = MathUtils.mulAndCheck((long) 19, (long) 19);
    assertEquals(361L, long0);
}",1,
project,0,test09999,"public void test09999() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.mulAndCheck((-150), (-1046936661));
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: mul
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test100100,"public void test100100() throws Throwable {
    short short0 = MathUtils.indicator((short) 899);
    assertEquals((short) 1, short0);
}",0,assertNotNull(short0)
project,0,test101101,"public void test101101() throws Throwable {
    short short0 = MathUtils.indicator((short) (-1));
    assertEquals((short) (-1), short0);
}",0,assertNotNull(short0)
project,0,test102102,"public void test102102() throws Throwable {
    long long0 = MathUtils.indicator(517L);
    assertEquals(1L, long0);
}",0,"assertEquals(1, long0)"
project,0,test103103,"public void test103103() throws Throwable {
    long long0 = MathUtils.indicator((-455L));
    assertEquals((-1L), long0);
}",0,"assertEquals(0, long0)"
project,0,test104104,"public void test104104() throws Throwable {
    int int0 = MathUtils.indicator((int) (byte) 0);
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test105105,"public void test105105() throws Throwable {
    int int0 = MathUtils.indicator((-5480));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test106106,"public void test106106() throws Throwable {
    float float0 = MathUtils.round(784.95306F, (int) (short) 1);
    assertEquals(785.0F, float0, 0.01F);
}",1,
project,0,test107107,"public void test107107() throws Throwable {
    float float0 = MathUtils.indicator(Float.NaN);
    assertEquals(Float.NaN, float0, 0.01F);
}",0,
project,0,test108108,"public void test108108() throws Throwable {
    double double0 = MathUtils.indicator((-5235.0));
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test109109,"public void test109109() throws Throwable {
    double double0 = MathUtils.indicator(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test110110,"public void test110110() throws Throwable {
    double double0 = MathUtils.indicator((double) 0);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test111111,"public void test111111() throws Throwable {
    byte byte0 = MathUtils.indicator((byte) 0);
    assertEquals((byte) 1, byte0);
}",0,assertNotNull(byte0)
project,0,test112112,"public void test112112() throws Throwable {
    byte byte0 = MathUtils.indicator((byte) (-1));
    assertEquals((byte) (-1), byte0);
}",0,assertNotNull(byte0)
project,0,test113113,"public void test113113() throws Throwable {
    int int0 = MathUtils.gcd(2, 21);
    assertEquals(1, int0);
}",0,
project,0,test114114,"public void test114114() throws Throwable {
    int int0 = MathUtils.lcm(840, 840);
    assertEquals(840, int0);
}",1,
project,0,test115115,"public void test115115() throws Throwable {
    int int0 = MathUtils.gcd((-405), 0);
    assertEquals(405, int0);
}",0,
project,0,test116116,"public void test116116() throws Throwable {
    int int0 = MathUtils.gcd(0, 0);
    assertEquals(0, int0);
}",0,
project,0,test117117,"public void test117117() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.factorialLog((-2545));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n > 0 for n!
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test118118,"public void test118118() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.factorial((short) (-1));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for n!
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test119119,"public void test119119() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.factorial(570);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // factorial value is too large to fit in a long
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test120120,"public void test120120() throws Throwable {
    long long0 = MathUtils.factorial(0);
    assertEquals(1L, long0);
}",1,
project,0,test121121,"public void test121121() throws Throwable {
    double[] doubleArray0 = new double[6];
    double[] doubleArray1 = new double[0];
    boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test122122,"public void test122122() throws Throwable {
    boolean boolean0 = MathUtils.equals((double[]) null, (double[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test123123,"public void test123123() throws Throwable {
    double[] doubleArray0 = new double[3];
    boolean boolean0 = MathUtils.equals(doubleArray0, (double[]) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test124124,"public void test124124() throws Throwable {
    double[] doubleArray0 = new double[6];
    boolean boolean0 = MathUtils.equals((double[]) null, doubleArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test125125,"public void test125125() throws Throwable {
    boolean boolean0 = MathUtils.equals(Double.NaN, 738.67692);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test126126,"public void test126126() throws Throwable {
    double[] doubleArray0 = new double[4];
    doubleArray0[2] = Double.NaN;
    boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test127127,"public void test127127() throws Throwable {
    boolean boolean0 = MathUtils.equals(379.65915000474, 0.0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test128128,"public void test128128() throws Throwable {
    double double0 = MathUtils.binomialCoefficientLog(1638, (byte) 1);
    assertEquals(7.401231264413015, double0, 0.01);
}",1,
project,0,test129129,"public void test129129() throws Throwable {
    double double0 = MathUtils.binomialCoefficientDouble(17, 0);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test130130,"public void test130130() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficientLog((-1109), (-1109));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for binomial coefficient (n,k)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test131131,"public void test131131() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficientDouble(0, 1);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= k for binomial coefficient (n,k)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test132132,"public void test132132() throws Throwable {
    long long0 = MathUtils.binomialCoefficient(1, (-1));
    assertEquals(0L, long0);
}",1,
project,0,test133133,"public void test133133() throws Throwable {
    long long0 = MathUtils.binomialCoefficient(0, (-1));
    assertEquals(0L, long0);
}",1,
project,0,test134134,"public void test134134() throws Throwable {
    long long0 = MathUtils.binomialCoefficient(19, 0);
    assertEquals(1L, long0);
}",1,
project,0,test135135,"public void test135135() throws Throwable {
    long long0 = MathUtils.binomialCoefficient(31, 31);
    assertEquals(1L, long0);
}",1,
project,0,test136136,"public void test136136() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficient((-176), (-1207));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for binomial coefficient (n,k)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test137137,"public void test137137() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficient(7, 2826);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= k for binomial coefficient (n,k)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test138138,"public void test138138() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficient(974, 840);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // result too large to represent in a long integer
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test139139,"public void test139139() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.addAndCheck(9223372036854775807L, 9223372036854775807L);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: add
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test140140,"public void test140140() throws Throwable {
    long long0 = MathUtils.subAndCheck((long) 0, (long) 0);
    assertEquals(0L, long0);
}",0,"assertEquals(0, long0)"
project,0,test141141,"public void test141141() throws Throwable {
    long long0 = MathUtils.subAndCheck((long) 1, 517L);
    assertEquals((-516L), long0);
}",1,
project,0,test142142,"public void test142142() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.addAndCheck(2147390916, 2147390916);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: add
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test143143,"public void test143143() throws Throwable {
    int int0 = MathUtils.addAndCheck((int) (byte) 1, 0);
    assertEquals(1, int0);
}",1,
project,0,test144144,"public void test144144() throws Throwable {
    double double0 = MathUtils.log(0.9999999999999999, 1.0);
    assertEquals(-0.0, double0, 0.01);
}",0,
project,0,test145145,"public void test145145() throws Throwable {
    double double0 = MathUtils.round((double) 0, 6);
    assertEquals(0.0, double0, 0.01);
}",1,
project,0,test146146,"public void test146146() throws Throwable {
    float float0 = MathUtils.round((-717.957F), 11);
    assertEquals((-717.957F), float0, 0.01F);
}",1,
project,0,test147147,"public void test147147() throws Throwable {
    double double0 = MathUtils.normalizeAngle(0L, 2.2909552562);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test148148,"public void test148148() throws Throwable {
    double double0 = MathUtils.sinh(6);
    assertEquals(201.71315737027922, double0, 0.01);
}",0,
project,0,test149149,"public void test149149() throws Throwable {
    long long0 = MathUtils.addAndCheck((-1528L), (-1528L));
    assertEquals((-3056L), long0);
}",0,"assertEquals(1, long0)"
project,0,test150150,"public void test150150() throws Throwable {
    float float0 = MathUtils.round((float) (-1528L), (int) (short) 1, (int) (short) 1);
    assertEquals((-1527.9F), float0, 0.01F);
}",0,
project,0,test151151,"public void test151151() throws Throwable {
    double[] doubleArray0 = new double[2];
    int int0 = MathUtils.hash(doubleArray0);
    assertEquals(961, int0);
}",0,"assertEquals(0, int0)"
project,0,test152152,"public void test152152() throws Throwable {
    int int0 = MathUtils.hash((double) (-1528L));
    assertEquals((-1063788544), int0);
}",0,"assertEquals(0, int0)"
