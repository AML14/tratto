[ {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] convolve(double[] x, double[] h) throws NullArgumentException, NoDataException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0000"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] normalizeArray(double[] values, double normalizedSum) throws MathIllegalArgumentException, MathArithmeticException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0011"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equalsIncludingNaN(double[] x, double[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test0022"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equals(double[] x, double[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test0033"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equalsIncludingNaN(float[] x, float[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test0044"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equals(float[] x, float[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test0055"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double linearCombination(final double a1, final double b1, final double a2, final double b2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0066"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double safeNorm(double[] v)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0077"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double safeNorm(double[] v)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0088"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double safeNorm(double[] v)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0099"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkNonNegative(final long[][] in) throws NotPositiveException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01010"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkNonNegative(final long[] in) throws NotPositiveException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01111"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkPositive(final double[] in) throws NotStrictlyPositiveException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01212"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkRectangular(final long[][] in) throws NullArgumentException, DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01313"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkRectangular(final long[][] in) throws NullArgumentException, DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01414"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkOrder(double[] val, OrderDirection dir, boolean strict) throws NonMonotonicSequenceException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01515"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static <T extends Comparable<? super T>> boolean isMonotonic(T[] val, OrderDirection dir, boolean strict)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test01616"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static <T extends Comparable<? super T>> boolean isMonotonic(T[] val, OrderDirection dir, boolean strict)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test01717"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static int distanceInf(int[] p1, int[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test01818"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double distance(double[] p1, double[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01919"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static int distance1(int[] p1, int[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test02020"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double distance1(double[] p1, double[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02121"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] ebeDivide(double[] a, double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02222"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] ebeDivide(double[] a, double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02323"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] ebeMultiply(double[] a, double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02424"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] ebeSubtract(double[] a, double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02525"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] ebeAdd(double[] a, double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02626"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] ebeAdd(double[] a, double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02727"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void scaleInPlace(double val, final double[] arr)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02828"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] scale(double val, final double[] arr)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02929"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkOrder(double[] val, OrderDirection dir, boolean strict) throws NonMonotonicSequenceException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03030"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double linearCombination(final double[] a, final double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03131"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double linearCombination(final double a1, final double b1, final double a2, final double b2, final double a3, final double b3, final double a4, final double b4)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03232"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double linearCombination(final double a1, final double b1, final double a2, final double b2, final double a3, final double b3, final double a4, final double b4)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03333"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double linearCombination(final double a1, final double b1, final double a2, final double b2, final double a3, final double b3)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03434"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double linearCombination(final double a1, final double b1, final double a2, final double b2, final double a3, final double b3)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03535"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double linearCombination(final double a1, final double b1, final double a2, final double b2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03636"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double linearCombination(final double a1, final double b1, final double a2, final double b2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03737"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean isMonotonic(double[] val, OrderDirection dir, boolean strict)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03838"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] ebeSubtract(double[] a, double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03939"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] ebeMultiply(double[] a, double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04040"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] ebeAdd(double[] a, double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04141"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static int distanceInf(int[] p1, int[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test04242"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double distanceInf(double[] p1, double[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04343"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static int distance1(int[] p1, int[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test04445"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double distance1(double[] p1, double[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04546"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double distance(int[] p1, int[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04647"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double distance(double[] p1, double[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04748"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static int[] copyOf(int[] source, int len)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04850"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static int[] copyOf(int[] source, int len)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04951"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static int[] copyOf(int[] source)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05052"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] copyOf(double[] source, int len)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05154"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] copyOf(double[] source)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05255"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void sortInPlace(double[] x, double[]... yList) throws DimensionMismatchException, NullArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05357"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void sortInPlace(double[] x, final OrderDirection dir, double[]... yList) throws NullArgumentException, DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05458"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void scaleInPlace(double val, final double[] arr)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05559"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] scale(double val, final double[] arr)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05660"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double safeNorm(double[] v)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05761"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] normalizeArray(double[] values, double normalizedSum) throws MathIllegalArgumentException, MathArithmeticException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05862"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double linearCombination(final double[] a, final double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05963"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double linearCombination(final double[] a, final double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06064"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static <T extends Comparable<? super T>> boolean isMonotonic(T[] val, OrderDirection dir, boolean strict)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06165"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean isMonotonic(double[] val, OrderDirection dir, boolean strict)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06266"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean isMonotonic(double[] val, OrderDirection dir, boolean strict)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06367"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] ebeSubtract(double[] a, double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06468"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] ebeMultiply(double[] a, double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06569"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] ebeDivide(double[] a, double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06670"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] ebeAdd(double[] a, double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06771"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static int distanceInf(int[] p1, int[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06872"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static int distanceInf(int[] p1, int[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06973"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double distanceInf(double[] p1, double[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07074"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double distanceInf(double[] p1, double[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07175"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static int distance1(int[] p1, int[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07276"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static int distance1(int[] p1, int[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07377"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double distance1(double[] p1, double[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07478"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double distance1(double[] p1, double[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07579"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double distance(int[] p1, int[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07680"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double distance(int[] p1, int[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07781"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double distance(double[] p1, double[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07882"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double distance(double[] p1, double[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07983"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static int[] copyOf(int[] source, int len)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08084"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static int[] copyOf(int[] source)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08185"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] copyOf(double[] source, int len)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08286"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] copyOf(double[] source, int len)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08387"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] copyOf(double[] source)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08488"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] convolve(double[] x, double[] h) throws NullArgumentException, NoDataException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08589"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkRectangular(final long[][] in) throws NullArgumentException, DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08690"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkPositive(final double[] in) throws NotStrictlyPositiveException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08791"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean checkOrder(double[] val, OrderDirection dir, boolean strict, boolean abort) throws NonMonotonicSequenceException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08892"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean checkOrder(double[] val, OrderDirection dir, boolean strict, boolean abort) throws NonMonotonicSequenceException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08993"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkOrder(double[] val, OrderDirection dir, boolean strict) throws NonMonotonicSequenceException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09094"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkOrder(double[] val) throws NonMonotonicSequenceException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09195"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkOrder(double[] val) throws NonMonotonicSequenceException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09296"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkOrder(double[] val) throws NonMonotonicSequenceException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09397"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkNonNegative(final long[][] in) throws NotPositiveException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09498"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkNonNegative(final long[] in) throws NotPositiveException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09599"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static <T> T[][] buildArray(final Field<T> field, final int rows, final int columns)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test096100"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static <T> T[] buildArray(final Field<T> field, final int length)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test097101"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static <T> T[] buildArray(final Field<T> field, final int length)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test098102"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static <T> T[] buildArray(final Field<T> field, final int length)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test099103"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void sortInPlace(double[] x, final OrderDirection dir, double[]... yList) throws NullArgumentException, DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test100104"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void sortInPlace(double[] x, final OrderDirection dir, double[]... yList) throws NullArgumentException, DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test101105"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean checkOrder(double[] val, OrderDirection dir, boolean strict, boolean abort) throws NonMonotonicSequenceException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test102106"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkOrder(double[] val, OrderDirection dir, boolean strict) throws NonMonotonicSequenceException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test103107"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static int[] copyOf(int[] source, int len)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test104108"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static <T> T[] buildArray(final Field<T> field, final int length)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test105109"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double linearCombination(final double[] a, final double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test106110"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] convolve(double[] x, double[] h) throws NullArgumentException, NoDataException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test107111"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] convolve(double[] x, double[] h) throws NullArgumentException, NoDataException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test108112"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static <T> T[][] buildArray(final Field<T> field, final int rows, final int columns)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test109113"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static <T> T[][] buildArray(final Field<T> field, final int rows, final int columns)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test110114"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] normalizeArray(double[] values, double normalizedSum) throws MathIllegalArgumentException, MathArithmeticException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test111115"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] normalizeArray(double[] values, double normalizedSum) throws MathIllegalArgumentException, MathArithmeticException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test112116"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] normalizeArray(double[] values, double normalizedSum) throws MathIllegalArgumentException, MathArithmeticException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test113117"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equalsIncludingNaN(double[] x, double[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test114118"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equalsIncludingNaN(double[] x, double[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test115120"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equalsIncludingNaN(double[] x, double[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test116122"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equalsIncludingNaN(double[] x, double[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test117123"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equalsIncludingNaN(double[] x, double[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test118124"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equalsIncludingNaN(double[] x, double[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test119125"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equals(double[] x, double[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test120126"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equals(double[] x, double[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test121128"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equals(double[] x, double[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test122129"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equals(double[] x, double[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test123130"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equalsIncludingNaN(float[] x, float[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test124131"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equalsIncludingNaN(float[] x, float[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test125132"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equalsIncludingNaN(float[] x, float[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test126133"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equalsIncludingNaN(float[] x, float[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test127134"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equalsIncludingNaN(float[] x, float[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test128135"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equalsIncludingNaN(float[] x, float[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test129136"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equals(float[] x, float[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test130137"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equals(float[] x, float[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test131138"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equals(float[] x, float[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test132139"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equals(float[] x, float[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test133140"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equals(float[] x, float[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test134141"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equals(float[] x, float[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test135142"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double linearCombination(final double a1, final double b1, final double a2, final double b2, final double a3, final double b3, final double a4, final double b4)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test136143"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double linearCombination(final double a1, final double b1, final double a2, final double b2, final double a3, final double b3, final double a4, final double b4)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test137144"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double linearCombination(final double a1, final double b1, final double a2, final double b2, final double a3, final double b3)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test138145"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double linearCombination(final double a1, final double b1, final double a2, final double b2, final double a3, final double b3)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test139146"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double linearCombination(final double a1, final double b1, final double a2, final double b2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test140147"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double linearCombination(final double a1, final double b1, final double a2, final double b2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test141148"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double linearCombination(final double[] a, final double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test142149"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double linearCombination(final double[] a, final double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test143150"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double linearCombination(final double[] a, final double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test144151"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void sortInPlace(double[] x, final OrderDirection dir, double[]... yList) throws NullArgumentException, DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test145152"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void sortInPlace(double[] x, double[]... yList) throws DimensionMismatchException, NullArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test146153"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double safeNorm(double[] v)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test147154"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double safeNorm(double[] v)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test148155"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double safeNorm(double[] v)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test149156"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double safeNorm(double[] v)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test150157"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkNonNegative(final long[][] in) throws NotPositiveException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test151158"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkNonNegative(final long[] in) throws NotPositiveException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test152159"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkPositive(final double[] in) throws NotStrictlyPositiveException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test153160"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkPositive(final double[] in) throws NotStrictlyPositiveException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test154161"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkRectangular(final long[][] in) throws NullArgumentException, DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test155162"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkRectangular(final long[][] in) throws NullArgumentException, DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test156163"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean checkOrder(double[] val, OrderDirection dir, boolean strict, boolean abort) throws NonMonotonicSequenceException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test157164"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean checkOrder(double[] val, OrderDirection dir, boolean strict, boolean abort) throws NonMonotonicSequenceException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test158165"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean isMonotonic(double[] val, OrderDirection dir, boolean strict)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test159166"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean checkOrder(double[] val, OrderDirection dir, boolean strict, boolean abort) throws NonMonotonicSequenceException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test160167"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean checkOrder(double[] val, OrderDirection dir, boolean strict, boolean abort) throws NonMonotonicSequenceException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test161168"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean checkOrder(double[] val, OrderDirection dir, boolean strict, boolean abort) throws NonMonotonicSequenceException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test162169"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static <T extends Comparable<? super T>> boolean isMonotonic(T[] val, OrderDirection dir, boolean strict)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test163170"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static <T extends Comparable<? super T>> boolean isMonotonic(T[] val, OrderDirection dir, boolean strict)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test164171"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static <T extends Comparable<? super T>> boolean isMonotonic(T[] val, OrderDirection dir, boolean strict)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test165172"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static <T extends Comparable<? super T>> boolean isMonotonic(T[] val, OrderDirection dir, boolean strict)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test166173"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static <T extends Comparable<? super T>> boolean isMonotonic(T[] val, OrderDirection dir, boolean strict)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test167174"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static <T extends Comparable<? super T>> boolean isMonotonic(T[] val, OrderDirection dir, boolean strict)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test168175"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static <T extends Comparable<? super T>> boolean isMonotonic(T[] val, OrderDirection dir, boolean strict)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test169176"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double distanceInf(double[] p1, double[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test170177"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double distance(int[] p1, int[] p2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test171178"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] ebeDivide(double[] a, double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test172179"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static boolean equals(double[] x, double[] y)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test173180"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] ebeMultiply(double[] a, double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test174182"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] ebeSubtract(double[] a, double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test175183"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] ebeAdd(double[] a, double[] b) throws DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test176184"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void sortInPlace(double[] x, final OrderDirection dir, double[]... yList) throws NullArgumentException, DimensionMismatchException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test177185"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void sortInPlace(double[] x, double[]... yList) throws DimensionMismatchException, NullArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test178186"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void sortInPlace(double[] x, double[]... yList) throws DimensionMismatchException, NullArgumentException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test179187"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static int[] copyOf(int[] source)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test180188"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static <T> T[][] buildArray(final Field<T> field, final int rows, final int columns)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test181190"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static double[] copyOf(double[] source)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test182191"
}, {
  "className" : "org.apache.commons.math3.util.MathArrays",
  "methodSignature" : "public static void checkOrder(double[] val) throws NonMonotonicSequenceException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test183193"
} ]