{
  "test00" : {
    "methodSignature" : "protected PointValuePair doOptimize()",
    "methodName" : "doOptimize",
    "className" : "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00() throws Throwable {\n    SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(1426.485128383, 1426.485128383);\n    simplexOptimizer0.doOptimize();\n}",
    "testName" : "test00"
  },
  "test11" : {
    "methodSignature" : "public SimplexOptimizer(double rel, double abs)",
    "methodName" : "SimplexOptimizer",
    "className" : "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11() throws Throwable {\n    SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(1156.961, 1156.961);\n}",
    "testName" : "test11"
  },
  "test22" : {
    "methodSignature" : "public PointValuePair optimize(OptimizationData... optData)",
    "methodName" : "optimize",
    "className" : "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22() throws Throwable {\n    SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(0.0, 0.0);\n    simplexOptimizer0.optimize((OptimizationData[]) null);\n}",
    "testName" : "test22"
  },
  "test33" : {
    "methodSignature" : "protected void parseOptimizationData(OptimizationData... optData)",
    "methodName" : "parseOptimizationData",
    "className" : "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33() throws Throwable {\n    SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer((-1.1689405319304267), (-1.1689405319304267));\n    OptimizationData[] optimizationDataArray0 = new OptimizationData[0];\n    simplexOptimizer0.parseOptimizationData(optimizationDataArray0);\n}",
    "testName" : "test33"
  },
  "test44" : {
    "methodSignature" : "protected void parseOptimizationData(OptimizationData... optData)",
    "methodName" : "parseOptimizationData",
    "className" : "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44() throws Throwable {\n    MultiDirectionalSimplex multiDirectionalSimplex0 = new MultiDirectionalSimplex(8);\n    SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(8, 8);\n    OptimizationData[] optimizationDataArray0 = new OptimizationData[8];\n    optimizationDataArray0[4] = (OptimizationData) multiDirectionalSimplex0;\n    simplexOptimizer0.parseOptimizationData(optimizationDataArray0);\n}",
    "testName" : "test44"
  },
  "test55" : {
    "methodSignature" : "protected void parseOptimizationData(OptimizationData... optData)",
    "methodName" : "parseOptimizationData",
    "className" : "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test55() throws Throwable {\n    SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(90.4603367921, 90.4603367921);\n    OptimizationData[] optimizationDataArray0 = new OptimizationData[1];\n    simplexOptimizer0.parseOptimizationData(optimizationDataArray0);\n}",
    "testName" : "test55"
  },
  "test66" : {
    "methodSignature" : "protected PointValuePair doOptimize()",
    "methodName" : "doOptimize",
    "className" : "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test66() throws Throwable {\n    MultiDirectionalSimplex multiDirectionalSimplex0 = new MultiDirectionalSimplex(8);\n    SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(8, 8);\n    OptimizationData[] optimizationDataArray0 = new OptimizationData[1];\n    optimizationDataArray0[0] = (OptimizationData) multiDirectionalSimplex0;\n    simplexOptimizer0.parseOptimizationData(optimizationDataArray0);\n    simplexOptimizer0.doOptimize();\n}",
    "testName" : "test66"
  },
  "test77" : {
    "methodSignature" : "protected PointValuePair doOptimize()",
    "methodName" : "doOptimize",
    "className" : "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test77() throws Throwable {\n    SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(1426.485128383, 1426.485128383);\n    double[] doubleArray0 = new double[2];\n    doubleArray0[0] = 1426.485128383;\n    doubleArray0[1] = 1426.485128383;\n    MultiDirectionalSimplex multiDirectionalSimplex0 = new MultiDirectionalSimplex(doubleArray0, 1426.485128383, 1426.485128383);\n    InitialGuess initialGuess0 = new InitialGuess(doubleArray0);\n    OptimizationData[] optimizationDataArray0 = new OptimizationData[5];\n    optimizationDataArray0[1] = (OptimizationData) initialGuess0;\n    optimizationDataArray0[3] = (OptimizationData) multiDirectionalSimplex0;\n    simplexOptimizer0.parseOptimizationData(optimizationDataArray0);\n    simplexOptimizer0.doOptimize();\n}",
    "testName" : "test77"
  },
  "test88" : {
    "methodSignature" : "protected PointValuePair doOptimize()",
    "methodName" : "doOptimize",
    "className" : "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test88() throws Throwable {\n    SimplexOptimizer simplexOptimizer0 = new SimplexOptimizer(13, 13);\n    OptimizationData[] optimizationDataArray0 = new OptimizationData[2];\n    SimpleBounds simpleBounds0 = SimpleBounds.unbounded(13);\n    optimizationDataArray0[0] = (OptimizationData) simpleBounds0;\n    MultiDirectionalSimplex multiDirectionalSimplex0 = new MultiDirectionalSimplex(13);\n    optimizationDataArray0[1] = (OptimizationData) multiDirectionalSimplex0;\n    simplexOptimizer0.parseOptimizationData(optimizationDataArray0);\n    simplexOptimizer0.doOptimize();\n}",
    "testName" : "test88"
  }
}