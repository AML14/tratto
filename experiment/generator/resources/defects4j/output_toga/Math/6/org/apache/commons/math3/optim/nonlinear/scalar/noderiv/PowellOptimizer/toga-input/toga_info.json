{
  "test00" : {
    "methodSignature" : "protected PointValuePair doOptimize()",
    "methodName" : "doOptimize",
    "className" : "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00() throws Throwable {\n    PowellOptimizer powellOptimizer0 = new PowellOptimizer(1.0E-15, 1.0E-15, 1.0E-15, 1.0E-15);\n    powellOptimizer0.doOptimize();\n}",
    "testName" : "test00"
  },
  "test11" : {
    "methodSignature" : "public PowellOptimizer(double rel, double abs)",
    "methodName" : "PowellOptimizer",
    "className" : "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11() throws Throwable {\n    PowellOptimizer powellOptimizer0 = new PowellOptimizer((-193.6399867), (-193.6399867));\n}",
    "testName" : "test11"
  },
  "test22" : {
    "methodSignature" : "protected PointValuePair doOptimize()",
    "methodName" : "doOptimize",
    "className" : "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22() throws Throwable {\n    PowellOptimizer powellOptimizer0 = new PowellOptimizer(1.0E-15, 1.0E-15);\n    powellOptimizer0.getIterations();\n    OptimizationData[] optimizationDataArray0 = new OptimizationData[2];\n    SimpleBounds simpleBounds0 = SimpleBounds.unbounded(0);\n    optimizationDataArray0[1] = (OptimizationData) simpleBounds0;\n    powellOptimizer0.optimize(optimizationDataArray0);\n    powellOptimizer0.doOptimize();\n}",
    "testName" : "test22"
  },
  "test33" : {
    "methodSignature" : "public PowellOptimizer(double rel, double abs)",
    "methodName" : "PowellOptimizer",
    "className" : "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33() throws Throwable {\n    PowellOptimizer powellOptimizer0 = new PowellOptimizer(1.0E-15, (-2620.5297696579287));\n}",
    "testName" : "test33"
  },
  "test44" : {
    "methodSignature" : "protected PointValuePair doOptimize()",
    "methodName" : "doOptimize",
    "className" : "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44() throws Throwable {\n    OptimizationData[] optimizationDataArray0 = new OptimizationData[8];\n    double[] doubleArray0 = new double[1];\n    InitialGuess initialGuess0 = new InitialGuess(doubleArray0);\n    optimizationDataArray0[0] = (OptimizationData) initialGuess0;\n    PowellOptimizer powellOptimizer0 = new PowellOptimizer(1377.0, 1377.0);\n    powellOptimizer0.optimize(optimizationDataArray0);\n    powellOptimizer0.doOptimize();\n}",
    "testName" : "test44"
  },
  "test55" : {
    "methodSignature" : "protected PointValuePair doOptimize()",
    "methodName" : "doOptimize",
    "className" : "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test55() throws Throwable {\n    OptimizationData[] optimizationDataArray0 = new OptimizationData[1];\n    double[] doubleArray0 = new double[0];\n    InitialGuess initialGuess0 = new InitialGuess(doubleArray0);\n    optimizationDataArray0[0] = (OptimizationData) initialGuess0;\n    PowellOptimizer powellOptimizer0 = new PowellOptimizer(1377.0, 1377.0);\n    powellOptimizer0.optimize(optimizationDataArray0);\n    powellOptimizer0.doOptimize();\n}",
    "testName" : "test55"
  }
}