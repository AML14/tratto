org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test0000() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(0);
    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
    openMapRealVector0.dotProduct((RealVector) openMapRealVector1);
    openMapRealVector1.isInfinite();
    double[] doubleArray0 = new double[4];
    doubleArray0[0] = 0.0;
    RealVector realVector0 = openMapRealVector1.mapMultiplyToSelf((-641.0));
    doubleArray0[1] = 0.0;
    doubleArray0[2] = 0.0;
    RealVectorChangingVisitor realVectorChangingVisitor0 = mock(RealVectorChangingVisitor.class, new ViolatedAssumptionAnswer());
    openMapRealVector0.subtract((RealVector) openMapRealVector1);
    doubleArray0[3] = 0.0;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
    openMapRealVector1.append(0.0);
    openMapRealVector1.cosine(realVector0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test0011() throws Throwable {
    int int0 = 0;
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(0);
    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0, 0);
    openMapRealVector0.hashCode();
    OpenMapRealVector openMapRealVector2 = openMapRealVector1.append((RealVector) openMapRealVector0);
    OpenMapRealVector openMapRealVector3 = new OpenMapRealVector(0);
    RealVectorPreservingVisitor realVectorPreservingVisitor0 = mock(RealVectorPreservingVisitor.class, new ViolatedAssumptionAnswer());
    doReturn(1.0E-12).when(realVectorPreservingVisitor0).end();
    openMapRealVector3.walkInDefaultOrder(realVectorPreservingVisitor0);
    openMapRealVector1.equals(openMapRealVector3);
    openMapRealVector1.getMaxIndex();
    OpenIntToDoubleHashMap.Iterator openIntToDoubleHashMap_Iterator0 = mock(OpenIntToDoubleHashMap.Iterator.class, new ViolatedAssumptionAnswer());
    doReturn(1.0E-12).when(openIntToDoubleHashMap_Iterator0).value();
    OpenMapRealVector.OpenMapEntry openMapRealVector_OpenMapEntry0 = openMapRealVector1.new OpenMapEntry(openIntToDoubleHashMap_Iterator0);
    openMapRealVector2.mapAdd((-1));
    openMapRealVector1.mapDivideToSelf(1.0E-12);
    openMapRealVector_OpenMapEntry0.getValue();
    OpenMapRealVector openMapRealVector4 = openMapRealVector1.append(585.50939104);
    openMapRealVector4.walkInOptimizedOrder((RealVectorChangingVisitor) null);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test0044() throws Throwable {
    Double[] doubleArray0 = new Double[0];
    double double0 = 26.30591167467474;
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 26.30591167467474);
    int int0 = 31;
    Double[] doubleArray1 = new Double[0];
    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(doubleArray1, 31);
    openMapRealVector0.getLInfDistance(openMapRealVector1);
    openMapRealVector0.addToEntry(31, 26.30591167467474);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test0055() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
    OpenMapRealVector openMapRealVector1 = openMapRealVector0.mapAddToSelf(2.0);
    openMapRealVector1.getNorm();
    int int0 = 1054;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(1054, 0.0);
    openMapRealVector1.getNorm();
    arrayRealVector0.checkVectorDimensions(openMapRealVector0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test0099() throws Throwable {
    int int0 = (-1968);
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-1968), (-1968), 1731.65572417);
    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector((-1968));
    Sinc sinc0 = new Sinc(true);
    openMapRealVector1.mapToSelf(sinc0);
    openMapRealVector0.getLInfDistance(openMapRealVector1);
    double[] doubleArray0 = new double[1];
    openMapRealVector1.isDefaultValue(0.0);
    openMapRealVector0.set(982.8);
    doubleArray0[0] = 1.0E-12;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray0);
    openMapRealVector1.equals(openMapRealVector0);
    RealVectorChangingVisitor realVectorChangingVisitor0 = mock(RealVectorChangingVisitor.class, new ViolatedAssumptionAnswer());
    doReturn((-968.5766984261)).when(realVectorChangingVisitor0).end();
    openMapRealVector1.walkInOptimizedOrder(realVectorChangingVisitor0);
    arrayRealVector0.ebeMultiply(openMapRealVector0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test01111() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-442));
    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
    openMapRealVector1.equals(""c"");
    OpenMapRealVector openMapRealVector2 = openMapRealVector1.ebeMultiply(openMapRealVector0);
    RealVector realVector0 = RealVector.unmodifiableRealVector(openMapRealVector1);
    openMapRealVector1.equals("""");
    openMapRealVector0.getDistance(openMapRealVector1);
    realVector0.combineToSelf(1.0E-12, 0.0, openMapRealVector2);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test01515() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
    OpenMapRealVector.OpenMapSparseIterator openMapRealVector_OpenMapSparseIterator0 = openMapRealVector0.new OpenMapSparseIterator();
    openMapRealVector_OpenMapSparseIterator0.next();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_29b/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector/OpenMapSparseIterator.java
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test02525() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
    OpenIntToDoubleHashMap.Iterator openIntToDoubleHashMap_Iterator0 = mock(OpenIntToDoubleHashMap.Iterator.class, new ViolatedAssumptionAnswer());
    OpenMapRealVector.OpenMapEntry openMapRealVector_OpenMapEntry0 = openMapRealVector0.new OpenMapEntry(openIntToDoubleHashMap_Iterator0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_29b/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector/OpenMapEntry.java
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test02626() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-527), 3029);
    OpenIntToDoubleHashMap.Iterator openIntToDoubleHashMap_Iterator0 = mock(OpenIntToDoubleHashMap.Iterator.class, new ViolatedAssumptionAnswer());
    doReturn(0.0).when(openIntToDoubleHashMap_Iterator0).value();
    OpenMapRealVector.OpenMapEntry openMapRealVector_OpenMapEntry0 = openMapRealVector0.new OpenMapEntry(openIntToDoubleHashMap_Iterator0);
    openMapRealVector_OpenMapEntry0.getValue();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_29b/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector/OpenMapEntry.java
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test02828() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(1492);
    double[] doubleArray0 = new double[0];
    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(doubleArray0);
    openMapRealVector0.combineToSelf(1492, 1492, openMapRealVector1);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test03434() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(0);
    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
    openMapRealVector0.dotProduct((RealVector) openMapRealVector1);
    openMapRealVector1.isInfinite();
    double[] doubleArray0 = new double[4];
    doubleArray0[0] = 0.0;
    RealVector realVector0 = openMapRealVector1.mapMultiplyToSelf((-641.0));
    doubleArray0[1] = 0.0;
    doubleArray0[2] = 0.0;
    RealVectorChangingVisitor realVectorChangingVisitor0 = mock(RealVectorChangingVisitor.class, new ViolatedAssumptionAnswer());
    doReturn(0.0).when(realVectorChangingVisitor0).end();
    realVector0.walkInOptimizedOrder(realVectorChangingVisitor0);
    openMapRealVector0.subtract((RealVector) openMapRealVector1);
    doubleArray0[3] = 0.0;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
    openMapRealVector1.append(0.0);
    openMapRealVector1.cosine(realVector0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test06161() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
    OpenMapRealVector.OpenMapSparseIterator openMapRealVector_OpenMapSparseIterator0 = openMapRealVector0.new OpenMapSparseIterator();
    openMapRealVector_OpenMapSparseIterator0.remove();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_29b/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector/OpenMapSparseIterator.java
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test06666() throws Throwable {
    int int0 = (-1464);
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-1464), (-780.2));
    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0, 0);
    OpenIntToDoubleHashMap.Iterator openIntToDoubleHashMap_Iterator0 = mock(OpenIntToDoubleHashMap.Iterator.class, new ViolatedAssumptionAnswer());
    doReturn(0.0).when(openIntToDoubleHashMap_Iterator0).value();
    OpenMapRealVector.OpenMapEntry openMapRealVector_OpenMapEntry0 = openMapRealVector1.new OpenMapEntry(openIntToDoubleHashMap_Iterator0);
    openMapRealVector_OpenMapEntry0.setIndex(0);
    openMapRealVector_OpenMapEntry0.getValue();
    RealVector realVector0 = openMapRealVector1.subtract((RealVector) openMapRealVector0);
    openMapRealVector1.getDistance(realVector0);
    OpenMapRealVector openMapRealVector2 = openMapRealVector0.add(openMapRealVector1);
    OpenMapRealVector openMapRealVector3 = openMapRealVector1.ebeDivide(realVector0);
    OpenMapRealVector openMapRealVector4 = openMapRealVector3.copy();
    RealVectorPreservingVisitor realVectorPreservingVisitor0 = mock(RealVectorPreservingVisitor.class, new ViolatedAssumptionAnswer());
    doReturn(0.0).when(realVectorPreservingVisitor0).end();
    openMapRealVector4.walkInOptimizedOrder(realVectorPreservingVisitor0);
    realVector0.isNaN();
    openMapRealVector3.getLInfDistance(openMapRealVector2);
    openMapRealVector4.outerProduct(openMapRealVector2);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test06767() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-1), 1208, (-267.6035));
    OpenMapRealVector.OpenMapSparseIterator openMapRealVector_OpenMapSparseIterator0 = openMapRealVector0.new OpenMapSparseIterator();
    openMapRealVector_OpenMapSparseIterator0.hasNext();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_29b/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector/OpenMapSparseIterator.java
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test07272() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(47, 47, (-1409.046116306145));
    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(47, 32);
    openMapRealVector1.getL1Distance(openMapRealVector0);
    openMapRealVector0.dotProduct(openMapRealVector1);
    OpenMapRealVector.OpenMapSparseIterator openMapRealVector_OpenMapSparseIterator0 = openMapRealVector0.new OpenMapSparseIterator();
    openMapRealVector_OpenMapSparseIterator0.hasNext();
    openMapRealVector0.checkVectorDimensions(1);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test07373() throws Throwable {
    double[] doubleArray0 = new double[0];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-727.1219));
    RealVectorPreservingVisitor realVectorPreservingVisitor0 = mock(RealVectorPreservingVisitor.class, new ViolatedAssumptionAnswer());
    RealVector realVector0 = RealVector.unmodifiableRealVector(openMapRealVector0);
    realVector0.mapMultiply(2916.936571886845);
    openMapRealVector0.ebeDivide(realVector0);
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
    openMapRealVector0.ebeDivide(arrayRealVector0);
    openMapRealVector0.walkInOptimizedOrder(realVectorPreservingVisitor0, 3701, (-2240));
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test07676() throws Throwable {
    int int0 = 33;
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(33);
    openMapRealVector0.setEntry(26, (-1311.847594703));
    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
    OpenMapRealVector.OpenMapSparseIterator openMapRealVector_OpenMapSparseIterator0 = openMapRealVector1.new OpenMapSparseIterator();
    openMapRealVector1.getLInfDistance(openMapRealVector0);
    openMapRealVector1.iterator();
    openMapRealVector_OpenMapSparseIterator0.next();
    openMapRealVector_OpenMapSparseIterator0.remove();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_29b/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector/OpenMapSparseIterator.java
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test08181() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
    openMapRealVector0.mapDivide((-1385.918928706));
    OpenMapRealVector openMapRealVector1 = openMapRealVector0.copy();
    OpenMapRealVector openMapRealVector2 = openMapRealVector0.add(openMapRealVector1);
    openMapRealVector1.isDefaultValue((-1069.0));
    OpenMapRealVector openMapRealVector3 = openMapRealVector1.append(openMapRealVector2);
    openMapRealVector3.isDefaultValue(1.0E-12);
    openMapRealVector3.mapSubtract(0);
    openMapRealVector0.addToEntry(0, 1.0E-12);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test08484() throws Throwable {
    Double[] doubleArray0 = new Double[4];
    Double double0 = new Double(0.0);
    doubleArray0[0] = double0;
    Double double1 = new Double((-1.0));
    doubleArray0[1] = double1;
    Double double2 = new Double(0.0);
    doubleArray0[2] = double2;
    Double double3 = new Double((-1.0));
    doubleArray0[3] = double3;
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
    OpenIntToDoubleHashMap.Iterator openIntToDoubleHashMap_Iterator0 = mock(OpenIntToDoubleHashMap.Iterator.class, new ViolatedAssumptionAnswer());
    doReturn(0).when(openIntToDoubleHashMap_Iterator0).key();
    OpenMapRealVector.OpenMapEntry openMapRealVector_OpenMapEntry0 = openMapRealVector0.new OpenMapEntry(openIntToDoubleHashMap_Iterator0);
    openMapRealVector_OpenMapEntry0.getIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_29b/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector/OpenMapEntry.java
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test08989() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(610, 610);
    RealVector realVector0 = RealVector.unmodifiableRealVector(openMapRealVector0);
    openMapRealVector0.add(realVector0);
    realVector0.iterator();
    openMapRealVector0.map((UnivariateFunction) null);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test09393() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector((RealVector) openMapRealVector0);
    openMapRealVector0.getDistance(openMapRealVector1);
    openMapRealVector0.equals(openMapRealVector1);
    OpenMapRealVector openMapRealVector2 = openMapRealVector0.append(openMapRealVector1);
    RealVectorPreservingVisitor realVectorPreservingVisitor0 = mock(RealVectorPreservingVisitor.class, new ViolatedAssumptionAnswer());
    openMapRealVector2.walkInDefaultOrder(realVectorPreservingVisitor0, (-1), (-1));
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test09696() throws Throwable {
    int int0 = (-442);
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-442));
    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
    openMapRealVector1.equals(""c"");
    OpenMapRealVector openMapRealVector2 = openMapRealVector1.ebeMultiply(openMapRealVector0);
    RealVector realVector0 = RealVector.unmodifiableRealVector(openMapRealVector1);
    openMapRealVector1.equals("""");
    openMapRealVector0.getDistance(openMapRealVector1);
    realVector0.combineToSelf(Double.NaN, 0.0, openMapRealVector2);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test09999() throws Throwable {
    int int0 = (-1399);
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-1399), Double.POSITIVE_INFINITY);
    double[] doubleArray0 = new double[4];
    doubleArray0[0] = (double) (-1399);
    doubleArray0[1] = Double.POSITIVE_INFINITY;
    doubleArray0[2] = Double.POSITIVE_INFINITY;
    doubleArray0[3] = 1.0E-12;
    Double[] doubleArray1 = new Double[7];
    doubleArray1[0] = (Double) Double.POSITIVE_INFINITY;
    doubleArray1[1] = (Double) (-1399.0);
    doubleArray1[2] = (Double) Double.POSITIVE_INFINITY;
    Double double0 = new Double(Double.POSITIVE_INFINITY);
    doubleArray1[3] = double0;
    doubleArray1[4] = (Double) 1.0E-12;
    doubleArray1[5] = (Double) Double.POSITIVE_INFINITY;
    doubleArray1[6] = (Double) 1.0E-12;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray1);
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
    ArrayRealVector arrayRealVector2 = new ArrayRealVector(doubleArray0, arrayRealVector1);
    ArrayRealVector arrayRealVector3 = new ArrayRealVector(arrayRealVector2, arrayRealVector0);
    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector((-1399), 1.0E-12);
    openMapRealVector0.subtract(openMapRealVector1);
    ArrayRealVector arrayRealVector4 = null;
    arrayRealVector4 = new ArrayRealVector(openMapRealVector0, arrayRealVector3);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test109109() throws Throwable {
    double[] doubleArray0 = new double[0];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-727.1219));
    RealVectorPreservingVisitor realVectorPreservingVisitor0 = mock(RealVectorPreservingVisitor.class, new ViolatedAssumptionAnswer());
    RealVector realVector0 = RealVector.unmodifiableRealVector(openMapRealVector0);
    RealVector realVector1 = realVector0.mapMultiply(2916.936571886845);
    OpenMapRealVector openMapRealVector1 = openMapRealVector0.ebeDivide(realVector0);
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
    openMapRealVector0.ebeDivide(arrayRealVector0);
    arrayRealVector0.equals(realVector1);
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(doubleArray0, doubleArray0);
    openMapRealVector1.getL1Distance((RealVector) arrayRealVector1);
    openMapRealVector0.walkInOptimizedOrder(realVectorPreservingVisitor0, 3701, (-2240));
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test112112() throws Throwable {
    double[] doubleArray0 = new double[0];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-727.1219));
    RealVectorPreservingVisitor realVectorPreservingVisitor0 = mock(RealVectorPreservingVisitor.class, new ViolatedAssumptionAnswer());
    RealVector realVector0 = RealVector.unmodifiableRealVector(openMapRealVector0);
    realVector0.mapMultiply(2916.936571886845);
    openMapRealVector0.ebeDivide(realVector0);
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
    OpenMapRealVector openMapRealVector1 = openMapRealVector0.ebeDivide(arrayRealVector0);
    openMapRealVector0.toArray();
    openMapRealVector1.append(openMapRealVector0);
    OpenIntToDoubleHashMap.Iterator openIntToDoubleHashMap_Iterator0 = mock(OpenIntToDoubleHashMap.Iterator.class, new ViolatedAssumptionAnswer());
    doReturn(0).when(openIntToDoubleHashMap_Iterator0).key();
    OpenMapRealVector.OpenMapEntry openMapRealVector_OpenMapEntry0 = openMapRealVector1.new OpenMapEntry(openIntToDoubleHashMap_Iterator0);
    openMapRealVector_OpenMapEntry0.getIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_29b/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector/OpenMapEntry.java
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test113113() throws Throwable {
    double[] doubleArray0 = new double[3];
    doubleArray0[0] = 4111.0;
    doubleArray0[1] = 649.9224;
    doubleArray0[2] = (-763.7758205708);
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(1396, 4111.0);
    ArrayRealVector arrayRealVector1 = new ArrayRealVector(openMapRealVector0, arrayRealVector0);
    OpenMapRealVector openMapRealVector1 = openMapRealVector0.append((RealVector) arrayRealVector1);
    OpenMapRealVector openMapRealVector2 = new OpenMapRealVector(doubleArray0, (-372.3350457044207));
    openMapRealVector0.dotProduct(openMapRealVector2);
    openMapRealVector2.getL1Distance((RealVector) openMapRealVector0);
    openMapRealVector1.checkIndices(1396, (-868));
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test114114() throws Throwable {
    int int0 = 995;
    int int1 = (-728);
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(995, 995);
    openMapRealVector0.toArray();
    openMapRealVector0.mapMultiply(1132.05355);
    OpenMapRealVector openMapRealVector1 = openMapRealVector0.ebeMultiply(openMapRealVector0);
    openMapRealVector1.cosine(openMapRealVector0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test116116() throws Throwable {
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-21));
    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0, (-21));
    openMapRealVector0.hashCode();
    OpenMapRealVector openMapRealVector2 = openMapRealVector1.append((RealVector) openMapRealVector0);
    OpenMapRealVector openMapRealVector3 = new OpenMapRealVector((-21));
    RealVectorPreservingVisitor realVectorPreservingVisitor0 = mock(RealVectorPreservingVisitor.class, new ViolatedAssumptionAnswer());
    doReturn(1.0E-12).when(realVectorPreservingVisitor0).end();
    openMapRealVector3.walkInDefaultOrder(realVectorPreservingVisitor0);
    openMapRealVector1.equals(openMapRealVector3);
    openMapRealVector1.getMaxIndex();
    double double0 = 44.4735551249935;
    OpenIntToDoubleHashMap.Iterator openIntToDoubleHashMap_Iterator0 = mock(OpenIntToDoubleHashMap.Iterator.class, new ViolatedAssumptionAnswer());
    OpenMapRealVector.OpenMapEntry openMapRealVector_OpenMapEntry0 = openMapRealVector1.new OpenMapEntry(openIntToDoubleHashMap_Iterator0);
    openMapRealVector2.mapAdd((-1));
    RealVector realVector0 = openMapRealVector1.mapDivideToSelf(1.0E-12);
    realVector0.dotProduct((RealVector) openMapRealVector2);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test117117() throws Throwable {
    int int0 = 0;
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(0);
    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0, 0);
    openMapRealVector0.hashCode();
    OpenMapRealVector openMapRealVector2 = openMapRealVector1.append((RealVector) openMapRealVector0);
    OpenMapRealVector openMapRealVector3 = new OpenMapRealVector(0);
    RealVectorPreservingVisitor realVectorPreservingVisitor0 = mock(RealVectorPreservingVisitor.class, new ViolatedAssumptionAnswer());
    doReturn((-4.8402541351522003E-36)).when(realVectorPreservingVisitor0).end();
    openMapRealVector3.walkInDefaultOrder(realVectorPreservingVisitor0);
    openMapRealVector1.equals(openMapRealVector3);
    openMapRealVector1.getMaxIndex();
    OpenIntToDoubleHashMap.Iterator openIntToDoubleHashMap_Iterator0 = mock(OpenIntToDoubleHashMap.Iterator.class, new ViolatedAssumptionAnswer());
    doReturn((-4.8402541351522003E-36)).when(openIntToDoubleHashMap_Iterator0).value();
    OpenMapRealVector.OpenMapEntry openMapRealVector_OpenMapEntry0 = openMapRealVector1.new OpenMapEntry(openIntToDoubleHashMap_Iterator0);
    OpenMapRealVector openMapRealVector4 = openMapRealVector2.mapAdd((-1));
    openMapRealVector1.mapDivideToSelf(1.0E-12);
    openMapRealVector_OpenMapEntry0.getValue();
    OpenMapRealVector openMapRealVector5 = openMapRealVector1.append(585.50939104);
    openMapRealVector4.ebeMultiply(openMapRealVector0);
    openMapRealVector5.walkInOptimizedOrder((RealVectorChangingVisitor) null);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test122122() throws Throwable {
    double[] doubleArray0 = new double[0];
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-727.1219));
    RealVectorPreservingVisitor realVectorPreservingVisitor0 = mock(RealVectorPreservingVisitor.class, new ViolatedAssumptionAnswer());
    RealVector realVector0 = RealVector.unmodifiableRealVector(openMapRealVector0);
    realVector0.mapMultiply(2916.936571886845);
    openMapRealVector0.ebeDivide(realVector0);
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
    OpenMapRealVector openMapRealVector1 = openMapRealVector0.ebeDivide(arrayRealVector0);
    openMapRealVector0.toArray();
    openMapRealVector1.append(openMapRealVector0);
    openMapRealVector1.unitVector();
    OpenIntToDoubleHashMap.Iterator openIntToDoubleHashMap_Iterator0 = mock(OpenIntToDoubleHashMap.Iterator.class, new ViolatedAssumptionAnswer());
    doReturn(0).when(openIntToDoubleHashMap_Iterator0).key();
    OpenMapRealVector.OpenMapEntry openMapRealVector_OpenMapEntry0 = openMapRealVector1.new OpenMapEntry(openIntToDoubleHashMap_Iterator0);
    openMapRealVector_OpenMapEntry0.getIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_29b/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector/OpenMapEntry.java
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test125125() throws Throwable {
    int int0 = (-1968);
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-1968), (-1968), 1731.65572417);
    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector((-1968));
    Sinc sinc0 = new Sinc(true);
    openMapRealVector1.mapToSelf(sinc0);
    openMapRealVector0.getLInfDistance(openMapRealVector1);
    double[] doubleArray0 = new double[1];
    openMapRealVector1.isDefaultValue(0.0);
    openMapRealVector0.set(982.8);
    doubleArray0[0] = 1.0E-12;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray0);
    openMapRealVector1.equals(openMapRealVector0);
    RealVectorChangingVisitor realVectorChangingVisitor0 = mock(RealVectorChangingVisitor.class, new ViolatedAssumptionAnswer());
    doReturn(0.0).when(realVectorChangingVisitor0).end();
    openMapRealVector1.walkInOptimizedOrder(realVectorChangingVisitor0);
    arrayRealVector0.ebeMultiply(openMapRealVector0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test128128() throws Throwable {
    int int0 = (-1968);
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-1968), (-1968), 1731.65572417);
    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector((-1968), (-1968), (-1968));
    Sinc sinc0 = new Sinc(true);
    openMapRealVector1.mapToSelf(sinc0);
    double[] doubleArray0 = new double[1];
    openMapRealVector1.isDefaultValue(1.0E-12);
    openMapRealVector0.set(982.8);
    doubleArray0[0] = 1.0E-12;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray0);
    sinc0.value((-1968));
    openMapRealVector1.equals(openMapRealVector0);
    RealVectorChangingVisitor realVectorChangingVisitor0 = mock(RealVectorChangingVisitor.class, new ViolatedAssumptionAnswer());
    arrayRealVector0.ebeMultiply(openMapRealVector0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test135135() throws Throwable {
    int int0 = 0;
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(0);
    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0, 0);
    openMapRealVector0.hashCode();
    OpenMapRealVector openMapRealVector2 = openMapRealVector1.append((RealVector) openMapRealVector0);
    RealVectorPreservingVisitor realVectorPreservingVisitor0 = mock(RealVectorPreservingVisitor.class, new ViolatedAssumptionAnswer());
    doReturn((-185.87)).when(realVectorPreservingVisitor0).end();
    openMapRealVector1.walkInDefaultOrder(realVectorPreservingVisitor0);
    openMapRealVector1.equals(openMapRealVector1);
    openMapRealVector1.getMaxIndex();
    openMapRealVector2.mapAdd((-1));
    openMapRealVector1.mapDivideToSelf(1.0E-12);
    OpenMapRealVector openMapRealVector3 = openMapRealVector1.append(585.50939104);
    openMapRealVector3.walkInOptimizedOrder((RealVectorChangingVisitor) null);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.linear.OpenMapRealVector,@Test(timeout = 4000)
public void test139139() throws Throwable {
    int int0 = (-1968);
    OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-1968), (-1968), (-1968));
    OpenMapRealVector openMapRealVector1 = new OpenMapRealVector((-1968));
    Sinc sinc0 = new Sinc(true);
    openMapRealVector1.mapToSelf(sinc0);
    openMapRealVector0.getLInfDistance(openMapRealVector1);
    double[] doubleArray0 = new double[1];
    openMapRealVector1.isDefaultValue(0.0);
    openMapRealVector0.set(982.8);
    doubleArray0[0] = 1.0E-12;
    ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, doubleArray0);
    openMapRealVector1.equals(openMapRealVector0);
    RealVectorChangingVisitor realVectorChangingVisitor0 = mock(RealVectorChangingVisitor.class, new ViolatedAssumptionAnswer());
    doReturn((-968.5766984261)).when(realVectorChangingVisitor0).end();
    openMapRealVector1.walkInOptimizedOrder(realVectorChangingVisitor0);
    arrayRealVector0.ebeMultiply(openMapRealVector0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
