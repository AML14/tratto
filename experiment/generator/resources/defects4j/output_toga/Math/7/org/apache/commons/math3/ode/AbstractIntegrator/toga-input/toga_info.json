{
  "test1212" : {
    "methodSignature" : "public void computeDerivatives(final double t, final double[] y, final double[] yDot) throws MaxCountExceededException, DimensionMismatchException",
    "methodName" : "computeDerivatives",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    GillIntegrator gillIntegrator0 = new GillIntegrator((-450.374));\n    gillIntegrator0.setMaxEvaluations(0);\n    double[] doubleArray0 = new double[0];\n    gillIntegrator0.computeDerivatives(0, doubleArray0, doubleArray0);\n}",
    "testName" : "test1212"
  },
  "test2940" : {
    "methodSignature" : "public double getCurrentStepStart()",
    "methodName" : "getCurrentStepStart",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2940() throws Throwable {\n    GillIntegrator gillIntegrator0 = new GillIntegrator(570.4101323738074);\n    int int0 = gillIntegrator0.getMaxEvaluations();\n    gillIntegrator0.getCurrentStepStart();\n}",
    "testName" : "test2940"
  },
  "test2224" : {
    "methodSignature" : "public double integrate(final FirstOrderDifferentialEquations equations, final double t0, final double[] y0, final double t, final double[] y) throws DimensionMismatchException, NumberIsTooSmallException, MaxCountExceededException, NoBracketingException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2224() throws Throwable {\n    ThreeEighthesIntegrator threeEighthesIntegrator0 = new ThreeEighthesIntegrator(0.0);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    double[] doubleArray0 = new double[0];\n    double[] doubleArray1 = new double[6];\n    threeEighthesIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 474.0, doubleArray0, 110.2558, doubleArray1);\n}",
    "testName" : "test2224"
  },
  "test1313" : {
    "methodSignature" : "public void integrate(final ExpandableStatefulODE equations, final double t) throws NumberIsTooSmallException, DimensionMismatchException, MaxCountExceededException, NoBracketingException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    AdamsBashforthIntegrator adamsBashforthIntegrator0 = new AdamsBashforthIntegrator(3, 2632.11502318578, 3, 3, 2632.11502318578);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);\n    adamsBashforthIntegrator0.integrate(expandableStatefulODE0, 2632.11502318578);\n}",
    "testName" : "test1313"
  },
  "test2326" : {
    "methodSignature" : "public double getCurrentStepStart()",
    "methodName" : "getCurrentStepStart",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2326() throws Throwable {\n    GillIntegrator gillIntegrator0 = new GillIntegrator(570.4101323738074);\n    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());\n    doReturn(570.4101323738074, 570.4101323738074, 570.4101323738074, 570.4101323738074, (-1829.963)).when(eventHandler0).g(anyDouble(), any(double[].class));\n    gillIntegrator0.addEventHandler(eventHandler0, 570.4101323738074, 570.4101323738074, 1017);\n    gillIntegrator0.getCurrentStepStart();\n}",
    "testName" : "test2326"
  },
  "test2325" : {
    "methodSignature" : "public double getCurrentSignedStepsize()",
    "methodName" : "getCurrentSignedStepsize",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2325() throws Throwable {\n    GillIntegrator gillIntegrator0 = new GillIntegrator(570.4101323738074);\n    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());\n    doReturn(570.4101323738074, 570.4101323738074, 570.4101323738074, 570.4101323738074, (-1829.963)).when(eventHandler0).g(anyDouble(), any(double[].class));\n    gillIntegrator0.addEventHandler(eventHandler0, 570.4101323738074, 570.4101323738074, 1017);\n    gillIntegrator0.getCurrentSignedStepsize();\n}",
    "testName" : "test2325"
  },
  "test1010" : {
    "methodSignature" : "public void integrate(final ExpandableStatefulODE equations, final double t) throws NumberIsTooSmallException, DimensionMismatchException, MaxCountExceededException, NoBracketingException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(2481.1941896976573, 2481.1941896976573, 2481.1941896976573, 1.0);\n    highamHall54Integrator0.integrate((ExpandableStatefulODE) null, 2481.1941896976573);\n}",
    "testName" : "test1010"
  },
  "test2022" : {
    "methodSignature" : "public double integrate(final FirstOrderDifferentialEquations equations, final double t0, final double[] y0, final double t, final double[] y) throws DimensionMismatchException, NumberIsTooSmallException, MaxCountExceededException, NoBracketingException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2022() throws Throwable {\n    double[] doubleArray0 = new double[2];\n    GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1523.4801996885988, 1523.4801996885988, doubleArray0, doubleArray0);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(1).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 1523.4801996885988, doubleArray0, 1523.4801996885988, doubleArray0);\n}",
    "testName" : "test2022"
  },
  "test1111" : {
    "methodSignature" : "public void integrate(final ExpandableStatefulODE equations, final double t) throws NumberIsTooSmallException, DimensionMismatchException, MaxCountExceededException, NoBracketingException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    double[] doubleArray0 = new double[0];\n    GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);\n    graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.0);\n}",
    "testName" : "test1111"
  },
  "test2123" : {
    "methodSignature" : "public double integrate(final FirstOrderDifferentialEquations equations, final double t0, final double[] y0, final double t, final double[] y) throws DimensionMismatchException, NumberIsTooSmallException, MaxCountExceededException, NoBracketingException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2123() throws Throwable {\n    double[] doubleArray0 = new double[0];\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(0.0, 2260.9539330813764, doubleArray0, doubleArray0);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    // Undeclared exception!\n    dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-220.8858634), doubleArray0, 0.0, doubleArray0);\n}",
    "testName" : "test2123"
  },
  "test011" : {
    "methodSignature" : "public double integrate(final FirstOrderDifferentialEquations equations, final double t0, final double[] y0, final double t, final double[] y) throws DimensionMismatchException, NumberIsTooSmallException, MaxCountExceededException, NoBracketingException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    double[] doubleArray0 = new double[8];\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(0.0, 0.0, doubleArray0, doubleArray0);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(5).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    highamHall54Integrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 0.0, doubleArray0, 3219.24015011664, doubleArray0);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public double integrate(final FirstOrderDifferentialEquations equations, final double t0, final double[] y0, final double t, final double[] y) throws DimensionMismatchException, NumberIsTooSmallException, MaxCountExceededException, NoBracketingException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    double[] doubleArray0 = new double[0];\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-220.8858634), (-220.8858634), doubleArray0, doubleArray0);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    double double0 = dormandPrince54Integrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-220.8858634), doubleArray0, 0.0, doubleArray0);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public double getCurrentSignedStepsize()",
    "methodName" : "getCurrentSignedStepsize",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    double[] doubleArray0 = new double[6];\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator(0.0, 0.0, doubleArray0, doubleArray0);\n    double double0 = dormandPrince54Integrator0.getCurrentSignedStepsize();\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public double integrate(final FirstOrderDifferentialEquations equations, final double t0, final double[] y0, final double t, final double[] y) throws DimensionMismatchException, NumberIsTooSmallException, MaxCountExceededException, NoBracketingException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(2596.669037036749, 2596.669037036749, 0.78125, 0.0);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    highamHall54Integrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 0.0, (double[]) null, 0.0, (double[]) null);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public void integrate(final ExpandableStatefulODE equations, final double t) throws NumberIsTooSmallException, DimensionMismatchException, MaxCountExceededException, NoBracketingException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    double[] doubleArray0 = new double[4];\n    DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(0.0, (-1.0), doubleArray0, doubleArray0);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);\n    dormandPrince853Integrator0.integrate(expandableStatefulODE0, (-2848.829017));\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    double[] doubleArray0 = new double[1];\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator((-3730.0862259082087), 0.0, doubleArray0, doubleArray0);\n    FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());\n    StepNormalizer stepNormalizer0 = new StepNormalizer(0.0, fixedStepHandler0);\n    highamHall54Integrator0.addStepHandler(stepNormalizer0);\n    highamHall54Integrator0.getName();\n}",
    "testName" : "test1616"
  },
  "test1717" : {
    "methodSignature" : "public double getCurrentStepStart()",
    "methodName" : "getCurrentStepStart",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    GillIntegrator gillIntegrator0 = new GillIntegrator((-450.374));\n    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());\n    gillIntegrator0.addEventHandler(eventHandler0, 0.0, (-450.374), 0, (UnivariateSolver) null);\n    gillIntegrator0.getCurrentStepStart();\n}",
    "testName" : "test1717"
  },
  "test1718" : {
    "methodSignature" : "public double getCurrentSignedStepsize()",
    "methodName" : "getCurrentSignedStepsize",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1718() throws Throwable {\n    GillIntegrator gillIntegrator0 = new GillIntegrator((-450.374));\n    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());\n    gillIntegrator0.addEventHandler(eventHandler0, 0.0, (-450.374), 0, (UnivariateSolver) null);\n    gillIntegrator0.getCurrentSignedStepsize();\n}",
    "testName" : "test1718"
  },
  "test1414" : {
    "methodSignature" : "public void integrate(final ExpandableStatefulODE equations, final double t) throws NumberIsTooSmallException, DimensionMismatchException, MaxCountExceededException, NoBracketingException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(5, 0, 505.29965, 4.450312892752409);\n    graggBulirschStoerIntegrator0.addStepHandler((StepHandler) null);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);\n    graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (double) (-1211));\n}",
    "testName" : "test1414"
  },
  "test2327" : {
    "methodSignature" : "public double integrate(final FirstOrderDifferentialEquations equations, final double t0, final double[] y0, final double t, final double[] y) throws DimensionMismatchException, NumberIsTooSmallException, MaxCountExceededException, NoBracketingException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2327() throws Throwable {\n    GillIntegrator gillIntegrator0 = new GillIntegrator(570.4101323738074);\n    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());\n    doReturn(570.4101323738074, 570.4101323738074, 570.4101323738074, 570.4101323738074, (-1829.963)).when(eventHandler0).g(anyDouble(), any(double[].class));\n    gillIntegrator0.addEventHandler(eventHandler0, 570.4101323738074, 570.4101323738074, 1017);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    double[] doubleArray0 = new double[0];\n    double double0 = gillIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (double) 1017, doubleArray0, (-1623.58756927), doubleArray0);\n}",
    "testName" : "test2327"
  },
  "test1515" : {
    "methodSignature" : "public double getMinStep()",
    "methodName" : "getMinStep",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(5, 0, 505.29965, 4.450312892752409);\n    graggBulirschStoerIntegrator0.setMaxEvaluations((-1211));\n    graggBulirschStoerIntegrator0.getMinStep();\n}",
    "testName" : "test1515"
  },
  "test2428" : {
    "methodSignature" : "public double getCurrentStepStart()",
    "methodName" : "getCurrentStepStart",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2428() throws Throwable {\n    double[] doubleArray0 = new double[7];\n    GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, (-193.6399867), doubleArray0, doubleArray0);\n    graggBulirschStoerIntegrator0.setMaxEvaluations(58);\n    graggBulirschStoerIntegrator0.getCurrentStepStart();\n}",
    "testName" : "test2428"
  },
  "test2632" : {
    "methodSignature" : "public double getCurrentStepStart()",
    "methodName" : "getCurrentStepStart",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2632() throws Throwable {\n    GillIntegrator gillIntegrator0 = new GillIntegrator((-450.374));\n    gillIntegrator0.getName();\n    gillIntegrator0.getCurrentStepStart();\n}",
    "testName" : "test2632"
  },
  "test1820" : {
    "methodSignature" : "public double getCurrentSignedStepsize()",
    "methodName" : "getCurrentSignedStepsize",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1820() throws Throwable {\n    ClassicalRungeKuttaIntegrator classicalRungeKuttaIntegrator0 = new ClassicalRungeKuttaIntegrator((-1.1270175653862835));\n    classicalRungeKuttaIntegrator0.clearEventHandlers();\n    classicalRungeKuttaIntegrator0.getCurrentSignedStepsize();\n}",
    "testName" : "test1820"
  },
  "test2633" : {
    "methodSignature" : "public double getCurrentSignedStepsize()",
    "methodName" : "getCurrentSignedStepsize",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2633() throws Throwable {\n    GillIntegrator gillIntegrator0 = new GillIntegrator((-450.374));\n    gillIntegrator0.getName();\n    gillIntegrator0.getCurrentSignedStepsize();\n}",
    "testName" : "test2633"
  },
  "test3244" : {
    "methodSignature" : "public double getCurrentSignedStepsize()",
    "methodName" : "getCurrentSignedStepsize",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3244() throws Throwable {\n    MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator((-1062.793099660106));\n    midpointIntegrator0.clearStepHandlers();\n    midpointIntegrator0.getCurrentSignedStepsize();\n}",
    "testName" : "test3244"
  },
  "test2531" : {
    "methodSignature" : "public double getCurrentStepStart()",
    "methodName" : "getCurrentStepStart",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2531() throws Throwable {\n    EulerIntegrator eulerIntegrator0 = new EulerIntegrator(0.075);\n    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());\n    doReturn(\"5e~bUB;g\").when(eventHandler0).toString();\n    eulerIntegrator0.addEventHandler(eventHandler0, 0.0, 0.075, (-7));\n    Collection<EventHandler> collection0 = eulerIntegrator0.getEventHandlers();\n    eulerIntegrator0.getCurrentStepStart();\n}",
    "testName" : "test2531"
  },
  "test2530" : {
    "methodSignature" : "public double getCurrentSignedStepsize()",
    "methodName" : "getCurrentSignedStepsize",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2530() throws Throwable {\n    EulerIntegrator eulerIntegrator0 = new EulerIntegrator(0.075);\n    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());\n    doReturn(\"5e~bUB;g\").when(eventHandler0).toString();\n    eulerIntegrator0.addEventHandler(eventHandler0, 0.0, 0.075, (-7));\n    Collection<EventHandler> collection0 = eulerIntegrator0.getEventHandlers();\n    eulerIntegrator0.getCurrentSignedStepsize();\n}",
    "testName" : "test2530"
  },
  "test3245" : {
    "methodSignature" : "public double getCurrentStepStart()",
    "methodName" : "getCurrentStepStart",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3245() throws Throwable {\n    MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator((-1062.793099660106));\n    midpointIntegrator0.clearStepHandlers();\n    midpointIntegrator0.getCurrentStepStart();\n}",
    "testName" : "test3245"
  },
  "test000" : {
    "methodSignature" : "public double integrate(final FirstOrderDifferentialEquations equations, final double t0, final double[] y0, final double t, final double[] y) throws DimensionMismatchException, NumberIsTooSmallException, MaxCountExceededException, NoBracketingException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    double[] doubleArray0 = new double[3];\n    double[] doubleArray1 = new double[1];\n    HighamHall54Integrator highamHall54Integrator0 = new HighamHall54Integrator(0.0, 0.0, doubleArray0, doubleArray1);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    highamHall54Integrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, 0.0, doubleArray1, 0.0, doubleArray0);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public void integrate(final ExpandableStatefulODE equations, final double t) throws NumberIsTooSmallException, DimensionMismatchException, MaxCountExceededException, NoBracketingException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    GillIntegrator gillIntegrator0 = new GillIntegrator(570.4101323738074);\n    EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());\n    doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(eventHandler0).g(anyDouble(), any(double[].class));\n    gillIntegrator0.addEventHandler(eventHandler0, 570.4101323738074, 570.4101323738074, 1017);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);\n    // Undeclared exception!\n    gillIntegrator0.integrate(expandableStatefulODE0, 570.4101323738074);\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public int getMaxEvaluations()",
    "methodName" : "getMaxEvaluations",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1203.928542009299, 1203.928542009299, 1203.928542009299, Double.NaN);\n    graggBulirschStoerIntegrator0.setMaxEvaluations(0);\n    int int0 = graggBulirschStoerIntegrator0.getMaxEvaluations();\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public double integrate(final FirstOrderDifferentialEquations equations, final double t0, final double[] y0, final double t, final double[] y) throws DimensionMismatchException, NumberIsTooSmallException, MaxCountExceededException, NoBracketingException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    MidpointIntegrator midpointIntegrator0 = new MidpointIntegrator((-1062.793099660106));\n    midpointIntegrator0.setMaxEvaluations(0);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    double[] doubleArray0 = new double[0];\n    midpointIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-2884.68803), doubleArray0, 0.0, doubleArray0);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public double integrate(final FirstOrderDifferentialEquations equations, final double t0, final double[] y0, final double t, final double[] y) throws DimensionMismatchException, NumberIsTooSmallException, MaxCountExceededException, NoBracketingException",
    "methodName" : "integrate",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    double[] doubleArray0 = new double[0];\n    GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2.384185791015625E-4, (-421.461515), doubleArray0, doubleArray0);\n    SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());\n    doReturn(0).when(secondOrderDifferentialEquations0).getDimension();\n    FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);\n    graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-421.461515), doubleArray0, (-1943.57583495), doubleArray0);\n}",
    "testName" : "test088"
  },
  "test2837" : {
    "methodSignature" : "public double getCurrentStepStart()",
    "methodName" : "getCurrentStepStart",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2837() throws Throwable {\n    GillIntegrator gillIntegrator0 = new GillIntegrator(570.4101323738074);\n    double double0 = gillIntegrator0.getCurrentStepStart();\n}",
    "testName" : "test2837"
  },
  "test2939" : {
    "methodSignature" : "public double getCurrentSignedStepsize()",
    "methodName" : "getCurrentSignedStepsize",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2939() throws Throwable {\n    GillIntegrator gillIntegrator0 = new GillIntegrator(570.4101323738074);\n    int int0 = gillIntegrator0.getMaxEvaluations();\n    gillIntegrator0.getCurrentSignedStepsize();\n}",
    "testName" : "test2939"
  },
  "test2938" : {
    "methodSignature" : "public int getMaxEvaluations()",
    "methodName" : "getMaxEvaluations",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2938() throws Throwable {\n    GillIntegrator gillIntegrator0 = new GillIntegrator(570.4101323738074);\n    int int0 = gillIntegrator0.getMaxEvaluations();\n}",
    "testName" : "test2938"
  },
  "test2735" : {
    "methodSignature" : "public double getCurrentStepStart()",
    "methodName" : "getCurrentStepStart",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2735() throws Throwable {\n    GillIntegrator gillIntegrator0 = new GillIntegrator((-450.374));\n    gillIntegrator0.getStepHandlers();\n    gillIntegrator0.getCurrentStepStart();\n}",
    "testName" : "test2735"
  },
  "test1921" : {
    "methodSignature" : "public void computeDerivatives(final double t, final double[] y, final double[] yDot) throws MaxCountExceededException, DimensionMismatchException",
    "methodName" : "computeDerivatives",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1921() throws Throwable {\n    GillIntegrator gillIntegrator0 = new GillIntegrator((-450.374));\n    double[] doubleArray0 = new double[0];\n    gillIntegrator0.computeDerivatives(0, doubleArray0, doubleArray0);\n}",
    "testName" : "test1921"
  },
  "test2734" : {
    "methodSignature" : "public double getCurrentSignedStepsize()",
    "methodName" : "getCurrentSignedStepsize",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2734() throws Throwable {\n    GillIntegrator gillIntegrator0 = new GillIntegrator((-450.374));\n    gillIntegrator0.getStepHandlers();\n    gillIntegrator0.getCurrentSignedStepsize();\n}",
    "testName" : "test2734"
  },
  "test2836" : {
    "methodSignature" : "public double getCurrentSignedStepsize()",
    "methodName" : "getCurrentSignedStepsize",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2836() throws Throwable {\n    GillIntegrator gillIntegrator0 = new GillIntegrator(570.4101323738074);\n    double double0 = gillIntegrator0.getCurrentStepStart();\n    gillIntegrator0.getCurrentSignedStepsize();\n}",
    "testName" : "test2836"
  },
  "test1819" : {
    "methodSignature" : "public double getCurrentStepStart()",
    "methodName" : "getCurrentStepStart",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1819() throws Throwable {\n    ClassicalRungeKuttaIntegrator classicalRungeKuttaIntegrator0 = new ClassicalRungeKuttaIntegrator((-1.1270175653862835));\n    classicalRungeKuttaIntegrator0.clearEventHandlers();\n    classicalRungeKuttaIntegrator0.getCurrentStepStart();\n}",
    "testName" : "test1819"
  },
  "test3042" : {
    "methodSignature" : "public double getCurrentStepStart()",
    "methodName" : "getCurrentStepStart",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3042() throws Throwable {\n    GillIntegrator gillIntegrator0 = new GillIntegrator((-450.374));\n    gillIntegrator0.getEvaluations();\n    gillIntegrator0.getCurrentStepStart();\n}",
    "testName" : "test3042"
  },
  "test3041" : {
    "methodSignature" : "public double getCurrentSignedStepsize()",
    "methodName" : "getCurrentSignedStepsize",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3041() throws Throwable {\n    GillIntegrator gillIntegrator0 = new GillIntegrator((-450.374));\n    gillIntegrator0.getEvaluations();\n    gillIntegrator0.getCurrentSignedStepsize();\n}",
    "testName" : "test3041"
  },
  "test3143" : {
    "methodSignature" : "public double getCurrentSignedStepsize()",
    "methodName" : "getCurrentSignedStepsize",
    "className" : "org.apache.commons.math3.ode.AbstractIntegrator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3143() throws Throwable {\n    DormandPrince54Integrator dormandPrince54Integrator0 = new DormandPrince54Integrator((-9.147934308113573), (-9.147934308113573), (-3005.0), (-3005.0));\n    double double0 = dormandPrince54Integrator0.getCurrentSignedStepsize();\n}",
    "testName" : "test3143"
  }
}