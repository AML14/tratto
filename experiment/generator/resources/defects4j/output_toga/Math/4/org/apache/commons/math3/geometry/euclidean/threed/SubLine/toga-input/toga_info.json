{
  "test1212" : {
    "methodSignature" : "public Vector3D intersection(final SubLine subLine, final boolean includeEndPoints)",
    "methodName" : "intersection",
    "className" : "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_K;\n    Vector3D vector3D1 = new Vector3D(332.8866725, vector3D0);\n    Line line0 = new Line(vector3D1, vector3D0);\n    SubLine subLine0 = line0.wholeLine();\n    SubLine subLine1 = new SubLine(vector3D0, vector3D1);\n    Vector3D vector3D2 = subLine0.intersection(subLine1, false);\n}",
    "testName" : "test1212"
  },
  "test1313" : {
    "methodSignature" : "public Vector3D intersection(final SubLine subLine, final boolean includeEndPoints)",
    "methodName" : "intersection",
    "className" : "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_K;\n    Vector3D vector3D1 = new Vector3D(332.8866725, vector3D0);\n    Line line0 = new Line(vector3D1, vector3D0);\n    SubLine subLine0 = line0.wholeLine();\n    SubLine subLine1 = new SubLine(vector3D0, vector3D1);\n    Vector3D vector3D2 = subLine1.intersection(subLine0, false);\n}",
    "testName" : "test1313"
  },
  "test1010" : {
    "methodSignature" : "public SubLine(final Segment segment) throws MathIllegalArgumentException",
    "methodName" : "SubLine",
    "className" : "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    SubLine subLine0 = null;\n    subLine0 = new SubLine((Segment) null);\n}",
    "testName" : "test1010"
  },
  "test1111" : {
    "methodSignature" : "public SubLine(final Segment segment) throws MathIllegalArgumentException",
    "methodName" : "SubLine",
    "className" : "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Vector3D vector3D0 = Vector3D.PLUS_J;\n    Vector3D vector3D1 = Vector3D.MINUS_I;\n    Line line0 = new Line(vector3D0, vector3D1);\n    Segment segment0 = new Segment(vector3D1, vector3D0, line0);\n    SubLine subLine0 = new SubLine(segment0);\n}",
    "testName" : "test1111"
  },
  "test011" : {
    "methodSignature" : "public double getZ()",
    "methodName" : "getZ",
    "className" : "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Vector3D vector3D0 = Vector3D.PLUS_K;\n    Vector3D vector3D1 = new Vector3D(291.5, vector3D0, (-397.80643760046), vector3D0, 1.0, vector3D0);\n    Line line0 = new Line(vector3D1, vector3D0);\n    SubLine subLine0 = line0.wholeLine();\n    Vector3D vector3D2 = subLine0.intersection(subLine0, false);\n    vector3D2.getZ();\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public Vector3D intersection(final SubLine subLine, final boolean includeEndPoints)",
    "methodName" : "intersection",
    "className" : "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Vector3D vector3D0 = Vector3D.PLUS_J;\n    Vector3D vector3D1 = Vector3D.MINUS_I;\n    Line line0 = new Line(vector3D0, vector3D1);\n    SubLine subLine0 = line0.wholeLine();\n    Vector3D vector3D2 = subLine0.intersection(subLine0, true);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public Vector3D intersection(final SubLine subLine, final boolean includeEndPoints)",
    "methodName" : "intersection",
    "className" : "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Vector3D vector3D0 = Vector3D.PLUS_J;\n    Vector3D vector3D1 = Vector3D.MINUS_I;\n    Line line0 = new Line(vector3D0, vector3D1);\n    SubLine subLine0 = line0.wholeLine();\n    subLine0.intersection((SubLine) null, true);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public List<Segment> getSegments()",
    "methodName" : "getSegments",
    "className" : "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Vector3D vector3D0 = Vector3D.POSITIVE_INFINITY;\n    Plane plane0 = new Plane(vector3D0, vector3D0);\n    Line line0 = plane0.intersection(plane0);\n    IntervalsSet intervalsSet0 = new IntervalsSet((-2448.464), (-2448.464));\n    IntervalsSet intervalsSet1 = intervalsSet0.buildNew((BSPTree<Euclidean1D>) null);\n    SubLine subLine0 = new SubLine(line0, intervalsSet1);\n    subLine0.getSegments();\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public SubLine(final Vector3D start, final Vector3D end) throws MathIllegalArgumentException",
    "methodName" : "SubLine",
    "className" : "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    SubLine subLine0 = null;\n    subLine0 = new SubLine((Vector3D) null, (Vector3D) null);\n}",
    "testName" : "test099"
  },
  "test1717" : {
    "methodSignature" : "public SubLine(final Segment segment) throws MathIllegalArgumentException",
    "methodName" : "SubLine",
    "className" : "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    RotationOrder rotationOrder0 = RotationOrder.YXY;\n    Vector3D vector3D0 = rotationOrder0.getA1();\n    Segment segment0 = new Segment(vector3D0, vector3D0, (Line) null);\n    SubLine subLine0 = null;\n    subLine0 = new SubLine(segment0);\n}",
    "testName" : "test1717"
  },
  "test1414" : {
    "methodSignature" : "public Vector3D intersection(final SubLine subLine, final boolean includeEndPoints)",
    "methodName" : "intersection",
    "className" : "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_K;\n    Vector3D vector3D1 = new Vector3D(332.8866725, vector3D0);\n    Line line0 = new Line(vector3D1, vector3D0);\n    SubLine subLine0 = line0.wholeLine();\n    SubLine subLine1 = new SubLine(vector3D0, vector3D1);\n    Vector3D vector3D2 = subLine0.intersection(subLine1, true);\n}",
    "testName" : "test1414"
  },
  "test1515" : {
    "methodSignature" : "public Vector3D intersection(final SubLine subLine, final boolean includeEndPoints)",
    "methodName" : "intersection",
    "className" : "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_K;\n    Vector3D vector3D1 = new Vector3D(332.8866725, vector3D0);\n    Line line0 = new Line(vector3D1, vector3D0);\n    SubLine subLine0 = line0.wholeLine();\n    SubLine subLine1 = new SubLine(vector3D0, vector3D1);\n    Vector3D vector3D2 = subLine1.intersection(subLine0, true);\n}",
    "testName" : "test1515"
  },
  "test000" : {
    "methodSignature" : "public SubLine(final Vector3D start, final Vector3D end) throws MathIllegalArgumentException",
    "methodName" : "SubLine",
    "className" : "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Vector3D vector3D0 = Vector3D.NaN;\n    SubLine subLine0 = new SubLine(vector3D0, vector3D0);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public double getNormSq()",
    "methodName" : "getNormSq",
    "className" : "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Vector3D vector3D0 = new Vector3D(4420.3, 1.0, 4420.3);\n    Vector3D vector3D1 = Vector3D.MINUS_J;\n    Line line0 = new Line(vector3D1, vector3D0);\n    SubLine subLine0 = line0.wholeLine();\n    Vector3D vector3D2 = subLine0.intersection(subLine0, true);\n    vector3D2.getNormSq();\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public Vector3D intersection(final SubLine subLine, final boolean includeEndPoints)",
    "methodName" : "intersection",
    "className" : "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Vector3D vector3D0 = Vector3D.PLUS_J;\n    Vector3D vector3D1 = new Vector3D(0.0, vector3D0);\n    Line line0 = new Line(vector3D0, vector3D1);\n    IntervalsSet intervalsSet0 = new IntervalsSet();\n    SubLine subLine0 = new SubLine(line0, intervalsSet0);\n    Vector3D vector3D2 = subLine0.intersection(subLine0, true);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public Vector3D intersection(final SubLine subLine, final boolean includeEndPoints)",
    "methodName" : "intersection",
    "className" : "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Vector3D vector3D0 = Vector3D.PLUS_K;\n    Vector3D vector3D1 = new Vector3D(291.5, vector3D0, 291.5, vector3D0, 291.5, vector3D0);\n    Line line0 = new Line(vector3D1, vector3D0);\n    SubLine subLine0 = line0.wholeLine();\n    Vector1D vector1D0 = Vector1D.NaN;\n    OrientedPoint orientedPoint0 = new OrientedPoint(vector1D0, true);\n    IntervalsSet intervalsSet0 = orientedPoint0.wholeSpace();\n    SubOrientedPoint subOrientedPoint0 = new SubOrientedPoint(orientedPoint0, intervalsSet0);\n    BSPTree<Euclidean1D> bSPTree0 = new BSPTree<Euclidean1D>(subOrientedPoint0);\n    IntervalsSet intervalsSet1 = intervalsSet0.buildNew(bSPTree0);\n    SubLine subLine1 = new SubLine(line0, intervalsSet1);\n    subLine0.intersection(subLine1, true);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public List<Segment> getSegments()",
    "methodName" : "getSegments",
    "className" : "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Vector3D vector3D0 = Vector3D.POSITIVE_INFINITY;\n    Plane plane0 = new Plane(vector3D0, vector3D0);\n    Line line0 = plane0.intersection(plane0);\n    IntervalsSet intervalsSet0 = new IntervalsSet((-2448.464), (-2448.464));\n    BSPTree<Euclidean1D> bSPTree0 = new BSPTree<Euclidean1D>(\"n5D`yg^|E7HA\");\n    IntervalsSet intervalsSet1 = intervalsSet0.buildNew(bSPTree0);\n    SubLine subLine0 = new SubLine(line0, intervalsSet1);\n    subLine0.getSegments();\n}",
    "testName" : "test088"
  },
  "test1818" : {
    "methodSignature" : "public SubLine(final Vector3D start, final Vector3D end) throws MathIllegalArgumentException",
    "methodName" : "SubLine",
    "className" : "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    Vector3D vector3D0 = Vector3D.MINUS_I;\n    SubLine subLine0 = null;\n    subLine0 = new SubLine(vector3D0, vector3D0);\n}",
    "testName" : "test1818"
  }
}