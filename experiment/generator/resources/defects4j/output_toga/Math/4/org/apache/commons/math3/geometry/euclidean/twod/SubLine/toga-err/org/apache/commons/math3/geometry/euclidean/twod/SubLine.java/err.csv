org.apache.commons.math3.geometry.euclidean.twod.SubLine,@Test(timeout = 4000)
public void test000() throws Throwable {
    Vector2D vector2D0 = Vector2D.ZERO;
    Line line0 = new Line(vector2D0, vector2D0);
    SubLine subLine0 = line0.wholeHyperplane();
    AbstractSubHyperplane<Euclidean2D, Euclidean1D> abstractSubHyperplane0 = subLine0.copySelf();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.geometry.euclidean.twod.SubLine,@Test(timeout = 4000)
public void test033() throws Throwable {
    Vector2D vector2D0 = Vector2D.ZERO;
    SubLine subLine0 = new SubLine(vector2D0, vector2D0);
    List<Segment> list0 = subLine0.getSegments();
    list0.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Math_4b/src/main/java/java/util/List.java
org.apache.commons.math3.geometry.euclidean.twod.SubLine,@Test(timeout = 4000)
public void test044() throws Throwable {
    Vector2D vector2D0 = Vector2D.NaN;
    Line line0 = new Line(vector2D0, vector2D0);
    SubLine subLine0 = line0.wholeHyperplane();
    Vector2D vector2D1 = subLine0.intersection(subLine0, false);
    vector2D1.getNorm1();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.apache.commons.math3.geometry.euclidean.twod.SubLine,@Test(timeout = 4000)
public void test055() throws Throwable {
    Vector2D vector2D0 = Vector2D.NaN;
    Line line0 = new Line(vector2D0, vector2D0);
    SubLine subLine0 = line0.wholeHyperplane();
    Vector2D vector2D1 = subLine0.intersection(subLine0, true);
    vector2D1.equals((Object) vector2D0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
