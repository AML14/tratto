project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    float float0 = MathUtils.round(Float.NaN, 0, (int) (byte) 1);
    assertEquals(Float.NaN, float0, 0.01F);
}",0,
project,0,test0011,"public void test0011() throws Throwable {
    double double0 = MathUtils.scalb((-1.0), (-2590));
    assertEquals((-6.946121092140867E-164), double0, 0.01);
}",0,
project,0,test0022,"public void test0022() throws Throwable {
    double double0 = MathUtils.nextAfter(4.9E-324, 4.9E-324);
    assertEquals(1.0E-323, double0, 0.01);
}",0,
project,0,test0033,"public void test0033() throws Throwable {
    double double0 = MathUtils.nextAfter(0, 0);
    assertEquals(4.9E-324, double0, 0.01);
}",0,
project,0,test0044,"public void test0044() throws Throwable {
    int int0 = MathUtils.lcm(471, 471);
    assertEquals(471, int0);
}",1,
project,0,test0055,"public void test0055() throws Throwable {
    short short0 = MathUtils.indicator((short) 31);
    assertEquals((short) 1, short0);
}",0,assertNotNull(short0)
project,0,test0066,"public void test0066() throws Throwable {
    long long0 = MathUtils.indicator(0L);
    assertEquals(1L, long0);
}",0,"assertEquals(0, long0)"
project,0,test0077,"public void test0077() throws Throwable {
    int int0 = MathUtils.indicator(4036);
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test0088,"public void test0088() throws Throwable {
    double double0 = MathUtils.indicator((double) (byte) 0);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test0099,"public void test0099() throws Throwable {
    byte byte0 = MathUtils.indicator((byte) 98);
    assertEquals((byte) 1, byte0);
}",0,assertNotNull(byte0)
project,0,test01010,"public void test01010() throws Throwable {
    int int0 = MathUtils.gcd(0, (-1));
    assertEquals(1, int0);
}",0,
project,0,test01111,"public void test01111() throws Throwable {
    double double0 = MathUtils.factorialDouble(21);
    assertEquals(5.109094217170942E19, double0, 0.01);
}",1,
project,0,test01212,"public void test01212() throws Throwable {
    double double0 = MathUtils.factorialDouble((byte) 0);
    assertEquals(1.0, double0, 0.01);
}",1,
project,0,test01313,"public void test01313() throws Throwable {
    long long0 = MathUtils.factorial(20);
    assertEquals(2432902008176640000L, long0);
}",1,
project,0,test01415,"public void test01415() throws Throwable {
    double[] doubleArray0 = new double[10];
    double[] doubleArray1 = new double[4];
    boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray1);
    assertArrayEquals(new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, doubleArray0, 0.01);
}",0,
project,0,test01524,"public void test01524() throws Throwable {
    boolean boolean0 = MathUtils.equals(0.5, (-4.9E-324), 16.0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test01625,"public void test01625() throws Throwable {
    boolean boolean0 = MathUtils.equals((double) 0, (double) 1, 1.0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test01726,"public void test01726() throws Throwable {
    double double0 = MathUtils.binomialCoefficientDouble(67, (-2573));
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test01827,"public void test01827() throws Throwable {
    double double0 = MathUtils.binomialCoefficientDouble(0, 0);
    assertEquals(1.0, double0, 0.01);
}",1,
project,0,test01928,"public void test01928() throws Throwable {
    double double0 = MathUtils.binomialCoefficientLog(37, 19);
    assertEquals(23.59528305955488, double0, 0.01);
}",1,
project,0,test02029,"public void test02029() throws Throwable {
    long long0 = MathUtils.binomialCoefficient(0, 0);
    assertEquals(1L, long0);
}",1,
project,0,test02130,"public void test02130() throws Throwable {
    long long0 = MathUtils.subAndCheck(0L, 2432902008176640000L);
    assertEquals((-2432902008176640000L), long0);
}",0,"assertEquals(0, long0)"
project,0,test02231,"public void test02231() throws Throwable {
    long long0 = MathUtils.subAndCheck(0L, (-2632L));
    assertEquals(2632L, long0);
}",0,"assertEquals(1, long0)"
project,0,test02332,"public void test02332() throws Throwable {
    long long0 = MathUtils.subAndCheck((long) 471, 758L);
    assertEquals((-287L), long0);
}",1,
project,0,test02433,"public void test02433() throws Throwable {
    int int0 = MathUtils.subAndCheck(0, 0);
    assertEquals(0, int0);
}",1,
project,0,test02534,"public void test02534() throws Throwable {
    int int0 = MathUtils.subAndCheck(298, 0);
    assertEquals(298, int0);
}",1,
project,0,test02635,"public void test02635() throws Throwable {
    double double0 = MathUtils.sinh(1.0);
    assertEquals(1.1752011936438016, double0, 0.01);
}",0,
project,0,test02736,"public void test02736() throws Throwable {
    double double0 = MathUtils.sinh((-3341.17189361));
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",0,
project,0,test02837,"public void test02837() throws Throwable {
    float float0 = MathUtils.round((-3058.408F), 5, 5);
    assertEquals((-3058.408F), float0, 0.01F);
}",0,
project,0,test02938,"public void test02938() throws Throwable {
    float float0 = MathUtils.round((-3058.408F), 1);
    assertEquals((-3058.4F), float0, 0.01F);
}",1,
project,0,test03039,"public void test03039() throws Throwable {
    double double0 = MathUtils.round(0.0, 1, (int) (byte) 0);
    assertEquals(0.0, double0, 0.01);
}",1,
project,0,test03140,"public void test03140() throws Throwable {
    double double0 = MathUtils.round(1772.907094093, 31, 5);
    assertEquals(1772.907094093, double0, 0.01);
}",0,
project,0,test03241,"public void test03241() throws Throwable {
    double double0 = MathUtils.round(0.0, 67);
    assertEquals(0.0, double0, 0.01);
}",1,
project,0,test03342,"public void test03342() throws Throwable {
    double double0 = MathUtils.round((-1780.47166578776), (int) (byte) 0);
    assertEquals((-1780.0), double0, 0.01);
}",1,
project,0,test03443,"public void test03443() throws Throwable {
    double double0 = MathUtils.normalizeAngle(0.0, (byte) 1);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test03544,"public void test03544() throws Throwable {
    double double0 = MathUtils.normalizeAngle((short) 1, 1511);
    assertEquals(1508.9644737231006, double0, 0.01);
}",0,
project,0,test03645,"public void test03645() throws Throwable {
    double double0 = MathUtils.nextAfter((-4.9E-324), 1375.0);
    assertEquals(-0.0, double0, 0.01);
}",0,
project,0,test03746,"public void test03746() throws Throwable {
    int int0 = MathUtils.mulAndCheck(0, (-1656));
    assertEquals(0, int0);
}",1,
project,0,test03847,"public void test03847() throws Throwable {
    int int0 = MathUtils.mulAndCheck((int) (short) 10, 20);
    assertEquals(200, int0);
}",1,
project,0,test03948,"public void test03948() throws Throwable {
    double double0 = MathUtils.log(0.0, 758L);
    assertEquals(-0.0, double0, 0.01);
}",0,
project,0,test04049,"public void test04049() throws Throwable {
    double double0 = MathUtils.log(39916800L, 1183.3316670651523);
    assertEquals(0.4042946363416051, double0, 0.01);
}",0,
project,0,test04150,"public void test04150() throws Throwable {
    double double0 = MathUtils.log(1L, 0.0);
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",0,
project,0,test04251,"public void test04251() throws Throwable {
    int int0 = MathUtils.hash((double[]) null);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test04352,"public void test04352() throws Throwable {
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = 963.140565;
    int int0 = MathUtils.hash(doubleArray0);
    assertArrayEquals(new double[] { 963.140565 }, doubleArray0, 0.01);
}",0,
project,0,test04455,"public void test04455() throws Throwable {
    int int0 = MathUtils.hash(0.0);
    assertEquals(0, int0);
}",0,
project,0,test04556,"public void test04556() throws Throwable {
    int int0 = MathUtils.hash((-1534.27614016));
    assertEquals(82544730, int0);
}",0,"assertEquals(0, int0)"
project,0,test04657,"public void test04657() throws Throwable {
    double double0 = MathUtils.cosh(0);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test04758,"public void test04758() throws Throwable {
    long long0 = MathUtils.addAndCheck(0L, 0L);
    assertEquals(0L, long0);
}",0,"assertEquals(1, long0)"
project,0,test04859,"public void test04859() throws Throwable {
    int int0 = MathUtils.addAndCheck(0, 0);
    assertEquals(0, int0);
}",1,
project,0,test04960,"public void test04960() throws Throwable {
    int int0 = MathUtils.addAndCheck(964, (-1774));
    assertEquals((-810), int0);
}",1,
project,0,test05061,"public void test05061() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.round((double) 21, 0, 1072);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding mode
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",0,
project,0,test05162,"public void test05162() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.round((-1881.0), (-2144658010), 1);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // BigInteger would overflow supported range
        //
        verifyException(""java.math.BigInteger"", e);
    }
}",1,
project,0,test05263,"public void test05263() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.lcm((-277), (-1074790400));
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: mul
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test05364,"public void test05364() throws Throwable {
    // Undeclared exception!
    MathUtils.factorialLog(21316);
}",1,
project,0,test05465,"public void test05465() throws Throwable {
    double double0 = MathUtils.nextAfter(0, (-1032.258982));
    assertEquals((-4.9E-324), double0, 0.01);
}",0,
project,0,test05566,"public void test05566() throws Throwable {
    double double0 = MathUtils.nextAfter(0L, 10.0);
    assertEquals(4.9E-324, double0, 0.01);
}",1,
project,0,test05667,"public void test05667() throws Throwable {
    double double0 = MathUtils.nextAfter(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY);
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",0,
project,0,test05768,"public void test05768() throws Throwable {
    double double0 = MathUtils.nextAfter(Double.NaN, 0.0);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test05869,"public void test05869() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.mulAndCheck(6402373705728000L, 6402373705728000L);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: multiply
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test05970,"public void test05970() throws Throwable {
    long long0 = MathUtils.mulAndCheck((long) (short) 1, (long) (byte) 1);
    assertEquals(1L, long0);
}",0,
project,0,test06071,"public void test06071() throws Throwable {
    long long0 = MathUtils.mulAndCheck((-1133L), (-1133L));
    assertEquals(1283689L, long0);
}",0,
project,0,test06172,"public void test06172() throws Throwable {
    int int0 = MathUtils.mulAndCheck(1, (-654));
    assertEquals((-654), int0);
}",1,
project,0,test06273,"public void test06273() throws Throwable {
    float float0 = MathUtils.indicator((-1247.0F));
    assertEquals((-1.0F), float0, 0.01F);
}",0,
project,0,test06374,"public void test06374() throws Throwable {
    float float0 = MathUtils.indicator(26.5108F);
    assertEquals(1.0F, float0, 0.01F);
}",0,
project,0,test06475,"public void test06475() throws Throwable {
    int int0 = MathUtils.gcd(5, 31);
    assertEquals(1, int0);
}",0,
project,0,test06576,"public void test06576() throws Throwable {
    int int0 = MathUtils.gcd((-3914), (-3914));
    assertEquals(3914, int0);
}",0,
project,0,test06677,"public void test06677() throws Throwable {
    double double0 = MathUtils.factorialLog(899);
    assertEquals(5219.673120736014, double0, 0.01);
}",1,
project,0,test06778,"public void test06778() throws Throwable {
    boolean boolean0 = MathUtils.equals(Double.NaN, Double.NaN);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test06879,"public void test06879() throws Throwable {
    boolean boolean0 = MathUtils.equals((double) 0, (double) 0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test06980,"public void test06980() throws Throwable {
    double double0 = MathUtils.binomialCoefficientLog(1810, 16);
    assertEquals(89.2789654764673, double0, 0.01);
}",1,
project,0,test07081,"public void test07081() throws Throwable {
    double double0 = MathUtils.binomialCoefficientDouble(435, 17);
    assertEquals(1.4646012137912087E30, double0, 0.01);
}",1,
project,0,test07182,"public void test07182() throws Throwable {
    long long0 = MathUtils.binomialCoefficient(1, (-1259));
    assertEquals(1L, long0);
}",1,
project,0,test07283,"public void test07283() throws Throwable {
    int int0 = MathUtils.subAndCheck(5, 31);
    assertEquals((-26), int0);
}",1,
project,0,test07384,"public void test07384() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.subAndCheck((-1105), 2147483643);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: subtract
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test07485,"public void test07485() throws Throwable {
    short short0 = MathUtils.sign((short) (-1));
    assertEquals((short) (-1), short0);
}",0,
project,0,test07586,"public void test07586() throws Throwable {
    short short0 = MathUtils.sign((short) 0);
    assertEquals((short) 0, short0);
}",0,assertNotNull(short0)
project,0,test07687,"public void test07687() throws Throwable {
    short short0 = MathUtils.sign((short) 705);
    assertEquals((short) 1, short0);
}",0,
project,0,test07788,"public void test07788() throws Throwable {
    long long0 = MathUtils.sign((-2147483648L));
    assertEquals((-1L), long0);
}",0,"assertEquals(1, long0)"
project,0,test07889,"public void test07889() throws Throwable {
    long long0 = MathUtils.sign((long) (byte) 0);
    assertEquals(0L, long0);
}",0,"assertEquals(1, long0)"
project,0,test07990,"public void test07990() throws Throwable {
    long long0 = MathUtils.sign((long) (byte) 1);
    assertEquals(1L, long0);
}",0,"assertEquals(1, long0)"
project,0,test08091,"public void test08091() throws Throwable {
    int int0 = MathUtils.sign((-2671));
    assertEquals((-1), int0);
}",0,"assertEquals(1, int0)"
project,0,test08192,"public void test08192() throws Throwable {
    int int0 = MathUtils.sign(0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test08293,"public void test08293() throws Throwable {
    int int0 = MathUtils.sign(4402);
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test08394,"public void test08394() throws Throwable {
    float float0 = MathUtils.sign(1474.0F);
    assertEquals(1.0F, float0, 0.01F);
}",0,
project,0,test08495,"public void test08495() throws Throwable {
    float float0 = MathUtils.sign(0.0F);
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test08596,"public void test08596() throws Throwable {
    float float0 = MathUtils.sign(Float.NaN);
    assertEquals(Float.NaN, float0, 0.01F);
}",1,
project,0,test08697,"public void test08697() throws Throwable {
    float float0 = MathUtils.sign((-3141.9634F));
    assertEquals((-1.0F), float0, 0.01F);
}",0,
project,0,test08798,"public void test08798() throws Throwable {
    double double0 = MathUtils.sign((-630.973542217));
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test08899,"public void test08899() throws Throwable {
    double double0 = MathUtils.sign(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test089100,"public void test089100() throws Throwable {
    double double0 = MathUtils.sign(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test090101,"public void test090101() throws Throwable {
    double double0 = MathUtils.sign(69.6366507738);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test091102,"public void test091102() throws Throwable {
    byte byte0 = MathUtils.sign((byte) (-96));
    assertEquals((byte) (-1), byte0);
}",0,
project,0,test092103,"public void test092103() throws Throwable {
    byte byte0 = MathUtils.sign((byte) 0);
    assertEquals((byte) 0, byte0);
}",0,assertNotNull(byte0)
project,0,test093104,"public void test093104() throws Throwable {
    byte byte0 = MathUtils.sign((byte) 17);
    assertEquals((byte) 1, byte0);
}",0,
project,0,test094105,"public void test094105() throws Throwable {
    float float0 = MathUtils.round(1317.8057F, (int) (byte) 0);
    assertEquals(1318.0F, float0, 0.01F);
}",1,
project,0,test095106,"public void test095106() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.round((-1245.479F), (-885), 5319);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Invalid rounding method.
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test096107,"public void test096107() throws Throwable {
    float float0 = MathUtils.round((float) (byte) 1, (-2101), 2);
    assertEquals(Float.POSITIVE_INFINITY, float0, 0.01F);
}",0,
project,0,test097108,"public void test097108() throws Throwable {
    float float0 = MathUtils.round(1398.7898F, 0, 0);
    assertEquals(1399.0F, float0, 0.01F);
}",1,
project,0,test098109,"public void test098109() throws Throwable {
    double double0 = MathUtils.round(Double.NEGATIVE_INFINITY, (-608), (-1377));
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",0,
project,0,test099110,"public void test099110() throws Throwable {
    double double0 = MathUtils.round(Double.NaN, 684, 0);
    assertEquals(Double.NaN, double0, 0.01);
}",1,
project,0,test100111,"public void test100111() throws Throwable {
    double double0 = MathUtils.scalb(Double.NEGATIVE_INFINITY, 887);
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",0,
project,0,test101112,"public void test101112() throws Throwable {
    double double0 = MathUtils.scalb(Double.NaN, (-2087));
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test102113,"public void test102113() throws Throwable {
    double double0 = MathUtils.scalb(1714.3074792154, 1);
    assertEquals(3428.6149584308, double0, 0.01);
}",0,
project,0,test103114,"public void test103114() throws Throwable {
    double double0 = MathUtils.scalb(0, 2973);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test104115,"public void test104115() throws Throwable {
    double double0 = MathUtils.nextAfter(1.0, (-201.6));
    assertEquals(0.9999999999999999, double0, 0.01);
}",0,
project,0,test105116,"public void test105116() throws Throwable {
    float float0 = MathUtils.round((float) (byte) 0, 0, 5);
    assertEquals(-0.0F, float0, 0.01F);
}",0,
project,0,test106117,"public void test106117() throws Throwable {
    float float0 = MathUtils.round(1474.0F, 3637, 5);
    assertEquals(Float.NaN, float0, 0.01F);
}",0,
project,0,test107118,"public void test107118() throws Throwable {
    float float0 = MathUtils.round(0.0F, 0);
    assertEquals(0.0F, float0, 0.01F);
}",1,
project,0,test108119,"public void test108119() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficient(2855, 205);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: multiply
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test109120,"public void test109120() throws Throwable {
    long long0 = MathUtils.mulAndCheck((long) 0, (long) 0);
    assertEquals(0L, long0);
}",0,
project,0,test110121,"public void test110121() throws Throwable {
    long long0 = MathUtils.mulAndCheck((-2174L), 0L);
    assertEquals(0L, long0);
}",1,
project,0,test111122,"public void test111122() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.mulAndCheck((-9218868437227405313L), (-465L));
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: multiply
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",0,
project,0,test112123,"public void test112123() throws Throwable {
    long long0 = MathUtils.mulAndCheck((-1L), (-785L));
    assertEquals(785L, long0);
}",0,
project,0,test113124,"public void test113124() throws Throwable {
    long long0 = MathUtils.mulAndCheck((-2403L), 1301L);
    assertEquals((-3126303L), long0);
}",0,
project,0,test114125,"public void test114125() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.mulAndCheck(1259, 2134043785);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: mul
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test115126,"public void test115126() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.mulAndCheck(2092419964, (-1429));
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: mul
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test116127,"public void test116127() throws Throwable {
    int int0 = MathUtils.lcm(15, 0);
    assertEquals(0, int0);
}",1,
project,0,test117128,"public void test117128() throws Throwable {
    int int0 = MathUtils.lcm(0, 0);
    assertEquals(0, int0);
}",1,
project,0,test118129,"public void test118129() throws Throwable {
    short short0 = MathUtils.indicator((short) 0);
    assertEquals((short) 1, short0);
}",0,assertNotNull(short0)
project,0,test119130,"public void test119130() throws Throwable {
    short short0 = MathUtils.indicator((short) (-1));
    assertEquals((short) (-1), short0);
}",0,assertNotNull(short0)
project,0,test120131,"public void test120131() throws Throwable {
    long long0 = MathUtils.indicator(1L);
    assertEquals(1L, long0);
}",0,"assertEquals(1, long0)"
project,0,test121132,"public void test121132() throws Throwable {
    long long0 = MathUtils.indicator((-1L));
    assertEquals((-1L), long0);
}",0,"assertEquals(0, long0)"
project,0,test122133,"public void test122133() throws Throwable {
    int int0 = MathUtils.indicator(0);
    assertEquals(1, int0);
}",0,
project,0,test123134,"public void test123134() throws Throwable {
    int int0 = MathUtils.indicator((-880));
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test124135,"public void test124135() throws Throwable {
    float float0 = MathUtils.round((float) (short) (-1), (-3852), 7);
    assertEquals(Float.NaN, float0, 0.01F);
}",0,
project,0,test125136,"public void test125136() throws Throwable {
    float float0 = MathUtils.indicator(Float.NaN);
    assertEquals(Float.NaN, float0, 0.01F);
}",0,
project,0,test126137,"public void test126137() throws Throwable {
    double double0 = MathUtils.indicator((double) (-1.0F));
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test127138,"public void test127138() throws Throwable {
    double double0 = MathUtils.indicator(Double.NaN);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test128139,"public void test128139() throws Throwable {
    double double0 = MathUtils.indicator(4.9E-324);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test129140,"public void test129140() throws Throwable {
    byte byte0 = MathUtils.indicator((byte) 0);
    assertEquals((byte) 1, byte0);
}",0,assertNotNull(byte0)
project,0,test130141,"public void test130141() throws Throwable {
    byte byte0 = MathUtils.indicator((byte) (-101));
    assertEquals((byte) (-1), byte0);
}",0,assertNotNull(byte0)
project,0,test131142,"public void test131142() throws Throwable {
    int int0 = MathUtils.gcd(272, (-2049));
    assertEquals(1, int0);
}",0,
project,0,test132143,"public void test132143() throws Throwable {
    int int0 = MathUtils.gcd(6, (byte) 0);
    assertEquals(6, int0);
}",0,
project,0,test133144,"public void test133144() throws Throwable {
    int int0 = MathUtils.gcd(0, 0);
    assertEquals(0, int0);
}",0,
project,0,test134145,"public void test134145() throws Throwable {
    double double0 = MathUtils.factorialLog(0);
    assertEquals(0.0, double0, 0.01);
}",1,
project,0,test135146,"public void test135146() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.factorialLog((-2146904029));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n > 0 for n!
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test136147,"public void test136147() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.factorialDouble((-1253));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for n!
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test137148,"public void test137148() throws Throwable {
    double double0 = MathUtils.factorialDouble(668);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",1,
project,0,test138149,"public void test138149() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.factorial(2649);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // factorial value is too large to fit in a long
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test139150,"public void test139150() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.factorial((-4128));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for n!
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test140151,"public void test140151() throws Throwable {
    double[] doubleArray0 = new double[4];
    doubleArray0[0] = 3675.144998324021;
    double[] doubleArray1 = new double[4];
    boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test141152,"public void test141152() throws Throwable {
    double[] doubleArray0 = new double[4];
    double[] doubleArray1 = new double[6];
    boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test142153,"public void test142153() throws Throwable {
    boolean boolean0 = MathUtils.equals((double[]) null, (double[]) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test143154,"public void test143154() throws Throwable {
    double[] doubleArray0 = new double[4];
    boolean boolean0 = MathUtils.equals(doubleArray0, (double[]) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test144155,"public void test144155() throws Throwable {
    double[] doubleArray0 = new double[4];
    boolean boolean0 = MathUtils.equals((double[]) null, doubleArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test145156,"public void test145156() throws Throwable {
    boolean boolean0 = MathUtils.equals((double) 0, (double) (-1), 1.0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test146157,"public void test146157() throws Throwable {
    boolean boolean0 = MathUtils.equals((double) (-34), 1918.67918793, 1.3164036458569648E64);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test147158,"public void test147158() throws Throwable {
    boolean boolean0 = MathUtils.equals(2753.5, 0.0, 1676.0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test148159,"public void test148159() throws Throwable {
    boolean boolean0 = MathUtils.equals((double) (short) 1, (double) (short) 14, (-4.9E-324));
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test149160,"public void test149160() throws Throwable {
    boolean boolean0 = MathUtils.equals(1.0, (double) 1L, (double) (byte) 0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test150161,"public void test150161() throws Throwable {
    boolean boolean0 = MathUtils.equals(Double.NaN, (-3526.0));
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test151162,"public void test151162() throws Throwable {
    double[] doubleArray0 = new double[6];
    doubleArray0[1] = (double) Float.NaN;
    boolean boolean0 = MathUtils.equals(doubleArray0, doubleArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test152163,"public void test152163() throws Throwable {
    double double0 = MathUtils.binomialCoefficientLog(347, 272);
    assertEquals(178.168829537372, double0, 0.01);
}",1,
project,0,test153164,"public void test153164() throws Throwable {
    double double0 = MathUtils.binomialCoefficientLog(1030, 964);
    assertEquals(242.2023600153521, double0, 0.01);
}",1,
project,0,test154165,"public void test154165() throws Throwable {
    double double0 = MathUtils.binomialCoefficientLog(0, (-1));
    assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
}",1,
project,0,test155166,"public void test155166() throws Throwable {
    double double0 = MathUtils.binomialCoefficientLog((byte) 17, (byte) 1);
    assertEquals(2.833213344056216, double0, 0.01);
}",1,
project,0,test156167,"public void test156167() throws Throwable {
    double double0 = MathUtils.binomialCoefficientLog((short) 705, 0);
    assertEquals(0.0, double0, 0.01);
}",1,
project,0,test157168,"public void test157168() throws Throwable {
    double double0 = MathUtils.binomialCoefficientLog(0, (short) 0);
    assertEquals(0.0, double0, 0.01);
}",1,
project,0,test158169,"public void test158169() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficientLog((byte) (-1), (byte) (-1));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for binomial coefficient (n,k)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test159170,"public void test159170() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficientLog((-3349), 2860);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= k for binomial coefficient (n,k)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test160171,"public void test160171() throws Throwable {
    double double0 = MathUtils.binomialCoefficientDouble(1265, 719);
    assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
}",1,
project,0,test161172,"public void test161172() throws Throwable {
    double double0 = MathUtils.binomialCoefficientDouble(668, 1);
    assertEquals(668.0, double0, 0.01);
}",1,
project,0,test162173,"public void test162173() throws Throwable {
    double double0 = MathUtils.binomialCoefficientDouble(787, 0);
    assertEquals(1.0, double0, 0.01);
}",1,
project,0,test163174,"public void test163174() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficientDouble((-1403), (-1403));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for binomial coefficient (n,k)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test164175,"public void test164175() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficientDouble(0, 14);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= k for binomial coefficient (n,k)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test165176,"public void test165176() throws Throwable {
    double double0 = MathUtils.binomialCoefficientDouble((short) 62, 27);
    assertEquals(2.79692573246309984E17, double0, 0.01);
}",1,
project,0,test166177,"public void test166177() throws Throwable {
    long long0 = MathUtils.binomialCoefficient(381, 9);
    assertEquals(423855132163373625L, long0);
}",1,
project,0,test167178,"public void test167178() throws Throwable {
    long long0 = MathUtils.binomialCoefficient(19, 13);
    assertEquals(27132L, long0);
}",1,
project,0,test168179,"public void test168179() throws Throwable {
    long long0 = MathUtils.binomialCoefficient((short) 14, 13);
    assertEquals(14L, long0);
}",1,
project,0,test169180,"public void test169180() throws Throwable {
    long long0 = MathUtils.binomialCoefficient((byte) 5, (byte) 1);
    assertEquals(5L, long0);
}",1,
project,0,test170181,"public void test170181() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficient((-1513), (-2087));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= 0 for binomial coefficient (n,k)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test171182,"public void test171182() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.binomialCoefficient((-1774), 933);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have n >= k for binomial coefficient (n,k)
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test172183,"public void test172183() throws Throwable {
    long long0 = MathUtils.binomialCoefficient(3197, 0);
    assertEquals(1L, long0);
}",1,
project,0,test173184,"public void test173184() throws Throwable {
    long long0 = MathUtils.subAndCheck((long) 19, (long) 19);
    assertEquals(0L, long0);
}",1,
project,0,test174185,"public void test174185() throws Throwable {
    long long0 = MathUtils.addAndCheck((long) 721, (long) 1);
    assertEquals(722L, long0);
}",0,"assertEquals(1, long0)"
project,0,test175186,"public void test175186() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.addAndCheck(Integer.MAX_VALUE, (int) (short) 1);
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: add
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test176187,"public void test176187() throws Throwable {
    int int0 = MathUtils.addAndCheck(0, 1);
    assertEquals(1, int0);
}",1,
project,0,test177188,"public void test177188() throws Throwable {
    // Undeclared exception!
    try {
        MathUtils.addAndCheck((-2147483646), (-2147483646));
        fail(""Expecting exception: ArithmeticException"");
    } catch (ArithmeticException e) {
        //
        // overflow: add
        //
        verifyException(""org.apache.commons.math.util.MathUtils"", e);
    }
}",1,
project,0,test178189,"public void test178189() throws Throwable {
    double double0 = MathUtils.round(1772.907094093, 721);
    assertEquals(1772.907094093, double0, 0.01);
}",1,
project,0,test179190,"public void test179190() throws Throwable {
    double double0 = MathUtils.normalizeAngle((-5636.940604490026), 4.9E-324);
    assertEquals((-0.9233839499374881), double0, 0.01);
}",0,
project,0,test180191,"public void test180191() throws Throwable {
    double double0 = MathUtils.sinh(0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test181192,"public void test181192() throws Throwable {
    long long0 = MathUtils.addAndCheck((-2147483648L), (-1L));
    assertEquals((-2147483649L), long0);
}",0,"assertEquals(1, long0)"
project,0,test182193,"public void test182193() throws Throwable {
    double[] doubleArray0 = new double[5];
    int int0 = MathUtils.hash(doubleArray0);
    assertEquals(28629151, int0);
}",0,"assertEquals(1, int0)"
project,0,test183194,"public void test183194() throws Throwable {
    int int0 = MathUtils.hash((-2139.93606027));
    assertEquals((-2081809753), int0);
}",0,"assertEquals(1, int0)"
