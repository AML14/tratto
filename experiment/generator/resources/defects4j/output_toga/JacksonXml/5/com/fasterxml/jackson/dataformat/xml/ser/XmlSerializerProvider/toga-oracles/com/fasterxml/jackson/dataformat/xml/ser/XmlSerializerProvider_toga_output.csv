project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider((XmlRootNameLookup) null);
    QName qName0 = new QName("", new = "", ""x#z11#'7p1&DEi ?[U"", "", new = "");
    // Undeclared exception!
    try {
        xmlSerializerProvider0._startRootArray((ToXmlGenerator) null, qName0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider"", e);
    }
}",0,
project,0,test011,"public void test011() throws Throwable {
    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);
    DefaultSerializerProvider defaultSerializerProvider0 = xmlSerializerProvider0.copy();
    assertNotSame(defaultSerializerProvider0, xmlSerializerProvider0);
}",0,
project,0,test022,"public void test022() throws Throwable {
    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    ConfigOverrides configOverrides0 = new ConfigOverrides();
    SerializationConfig serializationConfig0 = new SerializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);
    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;
    XmlSerializerProvider xmlSerializerProvider1 = new XmlSerializerProvider(xmlSerializerProvider0, serializationConfig0, beanSerializerFactory0);
    JsonFactory jsonFactory0 = new JsonFactory();
    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
    SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter((XmlWriter) null, ""JSON"", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, (-3443), (-3443), (ObjectCodec) null, simpleNsStreamWriter0);
    // Undeclared exception!
    try {
        xmlSerializerProvider1.serializeValue((JsonGenerator) toXmlGenerator0, (Object) jsonFactory0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.cfg.MapperConfig"", e);
    }
}",0,
project,0,test033,"public void test033() throws Throwable {
    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);
    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;
    // Undeclared exception!
    try {
        xmlSerializerProvider0.createInstance((SerializationConfig) null, beanSerializerFactory0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.SerializerProvider"", e);
    }
}",0,
project,0,test044,"public void test044() throws Throwable {
    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
    SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter((XmlWriter) null, ""[no message for "", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 744, 744, objectMapper0, simpleNsStreamWriter0);
    // Undeclared exception!
    try {
        xmlSerializerProvider0.serializeValue((JsonGenerator) toXmlGenerator0, (Object) ""[no message for "");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider"", e);
    }
}",0,
project,0,test055,"public void test055() throws Throwable {
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider((XmlRootNameLookup) null);
    // Undeclared exception!
    try {
        xmlSerializerProvider0.serializeValue((JsonGenerator) null, (Object) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider"", e);
    }
}",0,
project,0,test066,"public void test066() throws Throwable {
    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);
    JsonFactory jsonFactory0 = new JsonFactory();
    JsonParser jsonParser0 = jsonFactory0.createParser(""JSON"");
    TokenBuffer tokenBuffer0 = new TokenBuffer(jsonParser0);
    // Undeclared exception!
    try {
        xmlSerializerProvider0.serializeValue((JsonGenerator) tokenBuffer0, (Object) jsonFactory0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.SerializerProvider"", e);
    }
}",0,
project,0,test077,"public void test077() throws Throwable {
    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);
    // Undeclared exception!
    try {
        xmlSerializerProvider0.serializeValue((JsonGenerator) null, (Object) null, (JavaType) null, xmlSerializerProvider0.DEFAULT_NULL_KEY_SERIALIZER);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider"", e);
    }
}",0,
project,0,test099,"public void test099() throws Throwable {
    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    ConfigOverrides configOverrides0 = new ConfigOverrides();
    SerializationConfig serializationConfig0 = new SerializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);
    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;
    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
    SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter((XmlWriter) null, ""JSON"", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, (-3443), (-3443), (ObjectCodec) null, simpleNsStreamWriter0);
    XmlSerializerProvider xmlSerializerProvider1 = new XmlSerializerProvider(xmlSerializerProvider0, serializationConfig0, beanSerializerFactory0);
    // Undeclared exception!
    try {
        xmlSerializerProvider1.serializeValue((JsonGenerator) toXmlGenerator0, (Object) rootNameLookup0, (JavaType) null, xmlSerializerProvider0.DEFAULT_NULL_KEY_SERIALIZER);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup"", e);
    }
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();
    JsonFactory jsonFactory0 = new JsonFactory();
    JsonParser jsonParser0 = jsonFactory0.createParser(""JSON"");
    TokenBuffer tokenBuffer0 = new TokenBuffer(jsonParser0);
    Class<JavaType> class0 = JavaType.class;
    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);
    // Undeclared exception!
    try {
        xmlSerializerProvider0.serializeValue((JsonGenerator) tokenBuffer0, (Object) xmlRootNameLookup0, (JavaType) resolvedRecursiveType0, (JsonSerializer<Object>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.databind.SerializerProvider"", e);
    }
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    ConfigOverrides configOverrides0 = new ConfigOverrides();
    SerializationConfig serializationConfig0 = new SerializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);
    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;
    XmlSerializerProvider xmlSerializerProvider1 = new XmlSerializerProvider(xmlSerializerProvider0, serializationConfig0, beanSerializerFactory0);
    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
    SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter((XmlWriter) null, ""JSON"", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, (-3443), (-3443), (ObjectCodec) null, simpleNsStreamWriter0);
    // Undeclared exception!
    try {
        xmlSerializerProvider1._serializeXmlNull(toXmlGenerator0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.ctc.wstx.sw.BaseStreamWriter"", e);
    }
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);
    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
    RootNameLookup rootNameLookup0 = new RootNameLookup();
    ConfigOverrides configOverrides0 = new ConfigOverrides();
    SerializationConfig serializationConfig0 = new SerializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);
    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;
    XmlSerializerProvider xmlSerializerProvider1 = new XmlSerializerProvider(xmlSerializerProvider0, serializationConfig0, beanSerializerFactory0);
    try {
        xmlSerializerProvider1._serializeXmlNull((JsonGenerator) null);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // [no message for java.lang.NullPointerException]
        //
        verifyException(""com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"", e);
    }
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
    SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter((XmlWriter) null, ""i{em"", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, (-216), (-216), objectMapper0, simpleNsStreamWriter0);
    QName qName0 = XmlSerializerProvider.ROOT_NAME_FOR_NULL;
    toXmlGenerator0.writeStartArray();
    xmlSerializerProvider0._initWithRootName(toXmlGenerator0, qName0);
    xmlSerializerProvider0._initWithRootName(toXmlGenerator0, qName0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test1515,"public void test1515() throws Throwable {
    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
    SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter((XmlWriter) null, ""#HTdD_f*@I=9vDb9:"", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, (-216), (-216), objectMapper0, simpleNsStreamWriter0);
    QName qName0 = new QName(""#HTdD_f*@I=9vDb9:"", ""#HTdD_f*@I=9vDb9:"");
    xmlSerializerProvider0._initWithRootName(toXmlGenerator0, qName0);
    assertTrue(toXmlGenerator0.canWriteFormattedNumbers());
}",0,assertTrue(toXmlGenerator0.canWriteFormattedNumbers())
project,0,test1616,"public void test1616() throws Throwable {
    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);
    // Undeclared exception!
    try {
        xmlSerializerProvider0.serializeValue((JsonGenerator) null, (Object) xmlRootNameLookup0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider"", e);
    }
}",0,
project,0,test1717,"public void test1717() throws Throwable {
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider((XmlRootNameLookup) null);
    SQLRecoverableException sQLRecoverableException0 = new SQLRecoverableException();
    IOException iOException0 = xmlSerializerProvider0._wrapAsIOE((JsonGenerator) null, sQLRecoverableException0);
    assertNotNull(iOException0);
}",0,
project,0,test1818,"public void test1818() throws Throwable {
    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);
    ObjectMapper objectMapper0 = new ObjectMapper();
    NullNode nullNode0 = NullNode.getInstance();
    JsonParser jsonParser0 = objectMapper0.treeAsTokens(nullNode0);
    BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
    DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
    TokenBuffer tokenBuffer0 = new TokenBuffer(jsonParser0, defaultDeserializationContext_Impl0);
    try {
        xmlSerializerProvider0.serializeValue((JsonGenerator) tokenBuffer0, (Object) xmlRootNameLookup0, (JavaType) null, xmlSerializerProvider0.DEFAULT_NULL_KEY_SERIALIZER);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Null key for a Map not allowed in JSON (use a converting NullKeySerializer?)
        //
        verifyException(""com.fasterxml.jackson.databind.JsonMappingException"", e);
    }
}",0,
project,0,test1919,"public void test1919() throws Throwable {
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider((XmlRootNameLookup) null);
    SQLDataException sQLDataException0 = new SQLDataException(""S[%OJ+1sw"", ""S[%OJ+1sw"");
    SQLRecoverableException sQLRecoverableException0 = new SQLRecoverableException(""S[%OJ+1sw"", sQLDataException0);
    SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException(""S[%OJ+1sw"", ""S[%OJ+1sw"", (-642), sQLRecoverableException0);
    SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException(""S[%OJ+1sw"", ""S[%OJ+1sw"", (-642), sQLTransientConnectionException0);
    IOException iOException0 = xmlSerializerProvider0._wrapAsIOE((JsonGenerator) null, sQLNonTransientConnectionException0);
    assertNotNull(iOException0);
}",0,
