com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider,@Test(timeout = 4000)
public void test088() throws Throwable {
    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);
    JsonFactory jsonFactory0 = new JsonFactory();
    JsonParser jsonParser0 = jsonFactory0.createParser(""JSON"");
    TokenBuffer tokenBuffer0 = new TokenBuffer(jsonParser0);
    Class<JavaType> class0 = JavaType.class;
    ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);
    BeanSerializer beanSerializer0 = BeanSerializer.createDummy(resolvedRecursiveType0);
    xmlSerializerProvider0.serializeValue((JsonGenerator) tokenBuffer0, (Object) xmlRootNameLookup0, (JavaType) resolvedRecursiveType0, (JsonSerializer<Object>) beanSerializer0);
    resolvedRecursiveType0.isAbstract();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonXml_5b/src/main/java/com/fasterxml/jackson/databind/JavaType.java
com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider,@Test(timeout = 4000)
public void test1313() throws Throwable {
    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
    SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter((XmlWriter) null, ""i{em"", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, (-216), (-216), objectMapper0, simpleNsStreamWriter0);
    QName qName0 = XmlSerializerProvider.ROOT_NAME_FOR_NULL;
    xmlSerializerProvider0._initWithRootName(toXmlGenerator0, qName0);
    xmlSerializerProvider0._initWithRootName(toXmlGenerator0, qName0);
    toXmlGenerator0.isClosed();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonXml_5b/src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java
com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider,@Test(timeout = 4000)
public void test1515() throws Throwable {
    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();
    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
    SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter((XmlWriter) null, ""#HTdD_f*@I=9vDb9:"", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, (-216), (-216), objectMapper0, simpleNsStreamWriter0);
    QName qName0 = new QName(""#HTdD_f*@I=9vDb9:"", ""#HTdD_f*@I=9vDb9:"");
    xmlSerializerProvider0._initWithRootName(toXmlGenerator0, qName0);
    toXmlGenerator0.canWriteFormattedNumbers();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
