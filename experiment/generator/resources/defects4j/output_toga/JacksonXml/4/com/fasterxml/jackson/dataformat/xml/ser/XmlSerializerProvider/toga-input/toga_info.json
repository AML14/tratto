{
  "test1212" : {
    "methodSignature" : "public void serializeValue(JsonGenerator gen, Object value, JavaType rootType, JsonSerializer<Object> ser) throws IOException",
    "methodName" : "serializeValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();\n    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    TokenBuffer tokenBuffer0 = new TokenBuffer(jsonParser0);\n    Class<ToXmlGenerator> class0 = ToXmlGenerator.class;\n    JsonSerializer<Object> jsonSerializer0 = xmlSerializerProvider0.getUnknownTypeSerializer(class0);\n    xmlSerializerProvider0.serializeValue((JsonGenerator) tokenBuffer0, (Object) class0, (JavaType) null, jsonSerializer0);\n}",
    "testName" : "test1212"
  },
  "test1010" : {
    "methodSignature" : "public void serializeValue(JsonGenerator gen, Object value, JavaType rootType, JsonSerializer<Object> ser) throws IOException",
    "methodName" : "serializeValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(pipedOutputStream0, writerConfig0, true);\n    SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, (String) null, writerConfig0);\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 0, 3, objectMapper0, simpleNsStreamWriter0);\n    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    ConfigOverrides configOverrides0 = new ConfigOverrides();\n    SerializationConfig serializationConfig0 = new SerializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);\n    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;\n    XmlSerializerProvider xmlSerializerProvider1 = new XmlSerializerProvider(xmlSerializerProvider0, serializationConfig0, beanSerializerFactory0);\n    xmlSerializerProvider1.serializeValue((JsonGenerator) toXmlGenerator0, (Object) bufferRecycler0, (JavaType) null, xmlSerializerProvider0.DEFAULT_NULL_KEY_SERIALIZER);\n}",
    "testName" : "test1010"
  },
  "test1111" : {
    "methodSignature" : "public void serializeValue(JsonGenerator gen, Object value, JavaType rootType, JsonSerializer<Object> ser) throws IOException",
    "methodName" : "serializeValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();\n    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    TokenBuffer tokenBuffer0 = new TokenBuffer(jsonParser0);\n    xmlSerializerProvider0.serializeValue((JsonGenerator) tokenBuffer0, (Object) jsonFactory0, (JavaType) null, (JsonSerializer<Object>) null);\n}",
    "testName" : "test1111"
  },
  "test011" : {
    "methodSignature" : "public DefaultSerializerProvider createInstance(SerializationConfig config, SerializerFactory jsf)",
    "methodName" : "createInstance",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();\n    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);\n    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;\n    xmlSerializerProvider0.createInstance((SerializationConfig) null, beanSerializerFactory0);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public void serializeValue(JsonGenerator gen, Object value) throws IOException",
    "methodName" : "serializeValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    TokenBuffer tokenBuffer0 = new TokenBuffer(jsonParser0);\n    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);\n    xmlSerializerProvider0.serializeValue((JsonGenerator) tokenBuffer0, (Object) tokenBuffer0);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public void serializeValue(JsonGenerator gen, Object value) throws IOException",
    "methodName" : "serializeValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(pipedOutputStream0, writerConfig0, true);\n    SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, (String) null, writerConfig0);\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 0, 3, objectMapper0, simpleNsStreamWriter0);\n    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    ConfigOverrides configOverrides0 = new ConfigOverrides();\n    SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);\n    SerializationConfig serializationConfig0 = new SerializationConfig((BaseSettings) null, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0, configOverrides0);\n    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;\n    XmlSerializerProvider xmlSerializerProvider1 = new XmlSerializerProvider(xmlSerializerProvider0, serializationConfig0, beanSerializerFactory0);\n    xmlSerializerProvider1.serializeValue((JsonGenerator) toXmlGenerator0, (Object) xmlRootNameLookup0);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public void serializeValue(JsonGenerator gen, Object value, JavaType rootType) throws IOException",
    "methodName" : "serializeValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();\n    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);\n    JsonFactory jsonFactory0 = new JsonFactory();\n    JsonParser jsonParser0 = jsonFactory0.createParser(\"JSON\");\n    TokenBuffer tokenBuffer0 = new TokenBuffer(jsonParser0);\n    xmlSerializerProvider0.serializeValue((JsonGenerator) tokenBuffer0, (Object) xmlRootNameLookup0, (JavaType) null);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public void serializeValue(JsonGenerator gen, Object value, JavaType rootType, JsonSerializer<Object> ser) throws IOException",
    "methodName" : "serializeValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();\n    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);\n    xmlSerializerProvider0.serializeValue((JsonGenerator) null, (Object) null, (JavaType) null, xmlSerializerProvider0.DEFAULT_NULL_KEY_SERIALIZER);\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "public void serializeValue(JsonGenerator gen, Object value) throws IOException",
    "methodName" : "serializeValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(pipedOutputStream0, writerConfig0, false);\n    SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(iSOLatin1XmlWriter0, (String) null, writerConfig0);\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, pipedOutputStream0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, (-3477), 0, objectMapper0, simpleNsStreamWriter0);\n    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    SerializationConfig serializationConfig0 = new SerializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, (ConfigOverrides) null);\n    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;\n    PropertyName propertyName0 = new PropertyName((String) null, \"\");\n    SerializationConfig serializationConfig1 = serializationConfig0.withRootName(propertyName0);\n    XmlSerializerProvider xmlSerializerProvider1 = new XmlSerializerProvider(xmlSerializerProvider0, serializationConfig1, beanSerializerFactory0);\n    ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.NON_FINAL;\n    ObjectMapper.DefaultTypeResolverBuilder objectMapper_DefaultTypeResolverBuilder0 = new ObjectMapper.DefaultTypeResolverBuilder(objectMapper_DefaultTyping0);\n    xmlSerializerProvider1.serializeValue((JsonGenerator) toXmlGenerator0, (Object) objectMapper_DefaultTypeResolverBuilder0);\n}",
    "testName" : "test1616"
  },
  "test1717" : {
    "methodSignature" : "public void serializeValue(JsonGenerator gen, Object value, JavaType rootType, JsonSerializer<Object> ser) throws IOException",
    "methodName" : "serializeValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();\n    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);\n    Class<NullNode> class0 = NullNode.class;\n    xmlSerializerProvider0.serializeValue((JsonGenerator) null, (Object) class0, (JavaType) null, xmlSerializerProvider0.DEFAULT_NULL_KEY_SERIALIZER);\n}",
    "testName" : "test1717"
  },
  "test1414" : {
    "methodSignature" : "public boolean inRoot()",
    "methodName" : "inRoot",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();\n    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);\n    QName qName0 = XmlSerializerProvider.ROOT_NAME_FOR_NULL;\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(pipedOutputStream0, writerConfig0, false);\n    SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, \"JSON\", writerConfig0);\n    BufferRecycler bufferRecycler0 = jsonFactory0._getBufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, jsonFactory0, false);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 0, objectMapper0, simpleNsStreamWriter0);\n    xmlSerializerProvider0._initWithRootName(toXmlGenerator0, qName0);\n    xmlSerializerProvider0._initWithRootName(toXmlGenerator0, qName0);\n    toXmlGenerator0.inRoot();\n}",
    "testName" : "test1414"
  },
  "test1515" : {
    "methodSignature" : "public void serializeValue(JsonGenerator gen, Object value) throws IOException",
    "methodName" : "serializeValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(pipedOutputStream0, writerConfig0, true);\n    SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, (String) null, writerConfig0);\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, xmlRootNameLookup0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 0, objectMapper0, simpleNsStreamWriter0);\n    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    ConfigOverrides configOverrides0 = new ConfigOverrides();\n    SerializationConfig serializationConfig0 = new SerializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);\n    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;\n    PropertyName propertyName0 = new PropertyName((String) null, \"[no message for \");\n    SerializationConfig serializationConfig1 = serializationConfig0.withRootName(propertyName0);\n    XmlSerializerProvider xmlSerializerProvider1 = new XmlSerializerProvider(xmlSerializerProvider0, serializationConfig1, beanSerializerFactory0);\n    DeserializationFeature deserializationFeature0 = DeserializationFeature.ACCEPT_FLOAT_AS_INT;\n    xmlSerializerProvider1.serializeValue((JsonGenerator) toXmlGenerator0, (Object) deserializationFeature0);\n}",
    "testName" : "test1515"
  },
  "test000" : {
    "methodSignature" : "protected void _startRootArray(ToXmlGenerator xgen, QName rootName) throws IOException",
    "methodName" : "_startRootArray",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();\n    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);\n    QName qName0 = new QName(\"\");\n    xmlSerializerProvider0._startRootArray((ToXmlGenerator) null, qName0);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public void serializeValue(JsonGenerator gen, Object value) throws IOException",
    "methodName" : "serializeValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();\n    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);\n    xmlSerializerProvider0.serializeValue((JsonGenerator) null, (Object) null);\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public void serializeValue(JsonGenerator gen, Object value) throws IOException",
    "methodName" : "serializeValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(pipedOutputStream0, writerConfig0, true);\n    SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, (String) null, writerConfig0);\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, xmlRootNameLookup0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 2, objectMapper0, simpleNsStreamWriter0);\n    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    ConfigOverrides configOverrides0 = new ConfigOverrides();\n    SerializationConfig serializationConfig0 = new SerializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);\n    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;\n    PropertyName propertyName0 = new PropertyName((String) null, (String) null);\n    SerializationConfig serializationConfig1 = serializationConfig0.withRootName(propertyName0);\n    XmlSerializerProvider xmlSerializerProvider1 = new XmlSerializerProvider(xmlSerializerProvider0, serializationConfig1, beanSerializerFactory0);\n    xmlSerializerProvider1.serializeValue((JsonGenerator) toXmlGenerator0, (Object) xmlSerializerProvider0);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public boolean inRoot()",
    "methodName" : "inRoot",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();\n    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory jsonFactory0 = new JsonFactory();\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(pipedOutputStream0, writerConfig0, true);\n    SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, \"JSON\", writerConfig0);\n    BufferRecycler bufferRecycler0 = jsonFactory0._getBufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, jsonFactory0, true);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 3, objectMapper0, simpleNsStreamWriter0);\n    xmlSerializerProvider0.serializeValue((JsonGenerator) toXmlGenerator0, (Object) null, (JavaType) null);\n    toXmlGenerator0.inRoot();\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public void serializeValue(JsonGenerator gen, Object value, JavaType rootType) throws IOException",
    "methodName" : "serializeValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    XmlRootNameLookup xmlRootNameLookup0 = new XmlRootNameLookup();\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(pipedOutputStream0, writerConfig0, false);\n    SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter(asciiXmlWriter0, (String) null, writerConfig0);\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, xmlRootNameLookup0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 0, 1, objectMapper0, simpleNsStreamWriter0);\n    XmlSerializerProvider xmlSerializerProvider0 = new XmlSerializerProvider(xmlRootNameLookup0);\n    StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();\n    RootNameLookup rootNameLookup0 = new RootNameLookup();\n    ConfigOverrides configOverrides0 = new ConfigOverrides();\n    SerializationConfig serializationConfig0 = new SerializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);\n    BeanSerializerFactory beanSerializerFactory0 = BeanSerializerFactory.instance;\n    XmlSerializerProvider xmlSerializerProvider1 = new XmlSerializerProvider(xmlSerializerProvider0, serializationConfig0, beanSerializerFactory0);\n    xmlSerializerProvider1.serializeValue((JsonGenerator) toXmlGenerator0, (Object) writerConfig0, (JavaType) null);\n}",
    "testName" : "test088"
  }
}