{
  "test08491" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08491() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[PreAndSuffixranformer('\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Xwu#g'HA\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"[PreAndSuffixranformer('\", \"Xwu#g'HA\", \"[PreAndSuffixranformer('\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.setNextIsAttribute(true);\n    toXmlGenerator0.writeNumber((double) (byte) 64);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test08491"
  },
  "test0000" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, \"\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 1898, objectMapper0, repairingNsStreamWriter0);\n    toXmlGenerator0._releaseBuffers();\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test0000"
  },
  "test05663" : {
    "methodSignature" : "public void writeRawValue(String text, int offset, int len) throws IOException",
    "methodName" : "writeRawValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05663() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"writeRaw\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"writeRaw\", writerConfig0);\n    ObjectReader objectReader0 = objectMapper0.reader((JsonNodeFactory) null);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 3, objectReader0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"writeRaw\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.setNextIsAttribute(true);\n    toXmlGenerator0.writeRawValue(\"\", 2, 3);\n}",
    "testName" : "test05663"
  },
  "test03642" : {
    "methodSignature" : "public final void writeEndObject() throws IOException",
    "methodName" : "writeEndObject",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03642() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter((XmlWriter) null, \"[PreAndSuffixTransformer('\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 3, objectMapper0, nonNsStreamWriter0);\n    toXmlGenerator0.writeEndObject();\n}",
    "testName" : "test03642"
  },
  "test06875" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06875() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\">C&'\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \">C&'\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\">C&'\", \">C&'\");\n    toXmlGenerator0._nextIsUnwrapped = true;\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    byte[] byteArray0 = new byte[0];\n    toXmlGenerator0.writeBinary(byteArray0, 57343, 0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test06875"
  },
  "test08895" : {
    "methodSignature" : "public void writeNumber(float f) throws IOException",
    "methodName" : "writeNumber",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08895() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, \"\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 3, objectMapper0, repairingNsStreamWriter0);\n    toXmlGenerator0.writeNumber((float) 0);\n}",
    "testName" : "test08895"
  },
  "test04451" : {
    "methodSignature" : "public void writeString(char[] text, int offset, int len) throws IOException",
    "methodName" : "writeString",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04451() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\".>`B'\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \".>`B'\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\".>`B'\", \".>`B'\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0._nextIsAttribute = true;\n    toXmlGenerator0.writeString((char[]) null, 1, 3);\n}",
    "testName" : "test04451"
  },
  "test07683" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07683() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Can not write END_ELEENTwithout openSTART_ELEMENT\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Can not write END_ELEENTwithout openSTART_ELEMENT\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"Can not write END_ELEENTwithout openSTART_ELEMENT\", \"Can not write END_ELEENTwithout openSTART_ELEMENT\", \"Can not write END_ELEENTwithout openSTART_ELEMENT\");\n    toXmlGenerator0._nextIsUnwrapped = true;\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.writeObject(writerConfig0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test07683"
  },
  "test01213" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01213() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    BufferRecycler bufferRecycler0 = jsonFactory0._getBufferRecycler();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(\"7r~{()clj!\");\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"7r~{()clj!\");\n    BufferingXmlWriter bufferingXmlWriter0 = new BufferingXmlWriter(mockPrintWriter0, writerConfig0, \"JSON\", false, mockFileOutputStream0, (-539));\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(bufferingXmlWriter0, \"7r~{()clj!\", writerConfig0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, nonNsStreamWriter0, false);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 0, 2, objectMapper0, nonNsStreamWriter0);\n    boolean boolean0 = toXmlGenerator0.canWriteFormattedNumbers();\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test01213"
  },
  "test01212" : {
    "methodSignature" : "public boolean canWriteFormattedNumbers()",
    "methodName" : "canWriteFormattedNumbers",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01212() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    BufferRecycler bufferRecycler0 = jsonFactory0._getBufferRecycler();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(\"7r~{()clj!\");\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"7r~{()clj!\");\n    BufferingXmlWriter bufferingXmlWriter0 = new BufferingXmlWriter(mockPrintWriter0, writerConfig0, \"JSON\", false, mockFileOutputStream0, (-539));\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(bufferingXmlWriter0, \"7r~{()clj!\", writerConfig0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, nonNsStreamWriter0, false);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 0, 2, objectMapper0, nonNsStreamWriter0);\n    boolean boolean0 = toXmlGenerator0.canWriteFormattedNumbers();\n}",
    "testName" : "test01212"
  },
  "test02428" : {
    "methodSignature" : "public final boolean isEnabled(Feature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02428() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    BufferRecycler bufferRecycler0 = jsonFactory0._getBufferRecycler();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(\"7r~{()clj!\");\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"7r~{()clj!\");\n    BufferingXmlWriter bufferingXmlWriter0 = new BufferingXmlWriter(mockPrintWriter0, writerConfig0, \"JSON\", false, mockFileOutputStream0, (-539));\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(bufferingXmlWriter0, \"7r~{()clj!\", writerConfig0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, nonNsStreamWriter0, false);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 0, 2, objectMapper0, nonNsStreamWriter0);\n    ToXmlGenerator.Feature toXmlGenerator_Feature0 = ToXmlGenerator.Feature.WRITE_XML_1_1;\n    boolean boolean0 = toXmlGenerator0.isEnabled(toXmlGenerator_Feature0);\n}",
    "testName" : "test02428"
  },
  "test03237" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03237() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockFile mockFile0 = new MockFile(\"[PreAndSuffixTransformer('\", \"[PreAndSuffixTransformer('\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"[PreAndSuffixTransformer('\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 12, 3, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"[PreAndSuffixTransformer('\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.writeStartObject();\n    toXmlGenerator0.writeRepeatedFieldName();\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test03237"
  },
  "test104111" : {
    "methodSignature" : "public void writeNumber(BigDecimal dec) throws IOException",
    "methodName" : "writeNumber",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104111() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Can not write END_ELEME>T withot ope START_E1EMENT\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Can not write END_ELEME>T withot ope START_E1EMENT\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = QName.valueOf(\"Can not write END_ELEME>T withot ope START_E1EMENT\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.writeStartObject((Object) objectMapper0);\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    toXmlGenerator0.writeNumber(bigDecimal0);\n}",
    "testName" : "test104111"
  },
  "test02427" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02427() throws Throwable {\n    JsonFactory jsonFactory0 = new JsonFactory();\n    BufferRecycler bufferRecycler0 = jsonFactory0._getBufferRecycler();\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(\"7r~{()clj!\");\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"7r~{()clj!\");\n    BufferingXmlWriter bufferingXmlWriter0 = new BufferingXmlWriter(mockPrintWriter0, writerConfig0, \"JSON\", false, mockFileOutputStream0, (-539));\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(bufferingXmlWriter0, \"7r~{()clj!\", writerConfig0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, nonNsStreamWriter0, false);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 0, 2, objectMapper0, nonNsStreamWriter0);\n    ToXmlGenerator.Feature toXmlGenerator_Feature0 = ToXmlGenerator.Feature.WRITE_XML_1_1;\n    boolean boolean0 = toXmlGenerator0.isEnabled(toXmlGenerator_Feature0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test02427"
  },
  "test01617" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01617() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, \"\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 0, objectMapper0, repairingNsStreamWriter0);\n    toXmlGenerator0.initGenerator();\n    toXmlGenerator0.initGenerator();\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test01617"
  },
  "test097104" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097104() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[\\\"eAndSuffixTrasfomer(\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"[\\\"eAndSuffixTrasfomer(\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3022, 0, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = QName.valueOf(\"[\\\"eAndSuffixTrasfomer(\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    toXmlGenerator0.writeNumber(bigDecimal0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test097104"
  },
  "test09299" : {
    "methodSignature" : "public void writeNumber(BigDecimal dec) throws IOException",
    "methodName" : "writeNumber",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09299() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Can not write END_ELEMENT without open START_ELEMENT\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Can not write END_ELEMENT without open START_ELEMENT\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    toXmlGenerator0.writeNumber(bigDecimal0);\n}",
    "testName" : "test09299"
  },
  "test08087" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08087() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[PreAndSuffixranformer('\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Xwu#g'HA\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"[PreAndSuffixranformer('\", \"Xwu#g'HA\", \"[PreAndSuffixranformer('\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.setNextIsAttribute(true);\n    toXmlGenerator0.writeNumber((long) 3);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test08087"
  },
  "test102109" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102109() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Can not write END_ELEMENT without open START_ELEMENT\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Can not write END_ELEMENT without open START_ELEMENT\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"Can not write END_ELEMENT without open START_ELEMENT\", \"Can not write END_ELEMENT without open START_ELEMENT\", \"Can not write END_ELEMENT without open START_ELEMENT\");\n    toXmlGenerator0._nextIsUnwrapped = true;\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    BigInteger bigInteger0 = BigInteger.ONE;\n    toXmlGenerator0.writeNumber(bigInteger0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test102109"
  },
  "test0011" : {
    "methodSignature" : "public void writeNumber(BigDecimal dec) throws IOException",
    "methodName" : "writeNumber",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter((XmlWriter) null, \"Underlying Stax XMLStreamWriter (of type \", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 3, objectMapper0, nonNsStreamWriter0);\n    toXmlGenerator0.writeNumber((BigDecimal) null);\n}",
    "testName" : "test0011"
  },
  "test0099" : {
    "methodSignature" : "public void writeRawValue(SerializableString text) throws IOException",
    "methodName" : "writeRawValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0099() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, \"\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 3, objectMapper0, repairingNsStreamWriter0);\n    toXmlGenerator0.writeRawValue((SerializableString) null);\n}",
    "testName" : "test0099"
  },
  "test04047" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04047() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Can not write END_ELEMENT without open START_ELEMENT\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Can not write END_ELEMENT without open START_ELEMENT\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"Can not write END_ELEMENT without open START_ELEMENT\", \"Can not write END_ELEMENT without open START_ELEMENT\");\n    toXmlGenerator0._nextIsUnwrapped = true;\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.writeObject(\"Can not write END_ELEMENT without open START_ELEMENT\");\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test04047"
  },
  "test05259" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05259() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[PreAndSuffixranformer('\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Xwu#g'HA\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"[PreAndSuffixranformer('\", \"Xwu#g'HA\", \"[PreAndSuffixranformer('\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.setNextIsAttribute(true);\n    toXmlGenerator0.writeRawValue(\"Xwu#g'HA\");\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test05259"
  },
  "test06067" : {
    "methodSignature" : "public void writeRawValue(char[] text, int offset, int len) throws IOException",
    "methodName" : "writeRawValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06067() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[PreAndSuffixranformer('\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Xwu#g'HA\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"[PreAndSuffixranformer('\", \"Xwu#g'HA\", \"[PreAndSuffixranformer('\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.setNextIsAttribute(true);\n    toXmlGenerator0.writeRawValue((char[]) null, 1, (int) (byte) 64);\n}",
    "testName" : "test06067"
  },
  "test07279" : {
    "methodSignature" : "public void writeBoolean(boolean value) throws IOException",
    "methodName" : "writeBoolean",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07279() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, \",@R^:V702P=>zRt+\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 2, objectMapper0, repairingNsStreamWriter0);\n    toXmlGenerator0.writeBoolean(true);\n}",
    "testName" : "test07279"
  },
  "test04956" : {
    "methodSignature" : "public void writeRawValue(String text) throws IOException",
    "methodName" : "writeRawValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04956() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[PreAndSuffixranformer('\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Xwu#g'HA\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    toXmlGenerator0.writeRawValue(\"Xwu#g'HA\");\n}",
    "testName" : "test04956"
  },
  "test107114" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107114() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, \"\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 2, objectMapper0, repairingNsStreamWriter0);\n    toXmlGenerator0.writeStartArray(2);\n    toXmlGenerator0.close();\n}",
    "testName" : "test107114"
  },
  "test02934" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02934() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, \"Q\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 3, objectMapper0, repairingNsStreamWriter0);\n    toXmlGenerator0.finishWrappedValue((QName) null, (QName) null);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test02934"
  },
  "test03743" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03743() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockFile mockFile0 = new MockFile(\"m\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"m\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 3, objectMapper0, nonNsStreamWriter0);\n    ToXmlGenerator toXmlGenerator1 = (ToXmlGenerator) toXmlGenerator0.useDefaultPrettyPrinter();\n    toXmlGenerator1.setNextIsAttribute(true);\n    QName qName0 = new QName(\"m\", \"m\", \"m\");\n    toXmlGenerator1.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.writeObject(writerConfig0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test03743"
  },
  "test094101" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094101() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockFile mockFile0 = new MockFile(\"[PreAndSuffixTrasfomer('\", \"[PreAndSuffixTrasfomer('\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"[PreAndSuffixTrasfomer('\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"[PreAndSuffixTrasfomer('\", \"[PreAndSuffixTrasfomer('\", \"[PreAndSuffixTrasfomer('\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0._nextIsAttribute = true;\n    BigDecimal bigDecimal0 = new BigDecimal(56320);\n    toXmlGenerator0.writeNumber(bigDecimal0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test094101"
  },
  "test08592" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08592() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\">C&'\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \">C&'\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\">C&'\", \">C&'\");\n    toXmlGenerator0._nextIsUnwrapped = true;\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.writeNumber(0.0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test08592"
  },
  "test05360" : {
    "methodSignature" : "public void writeRawValue(String text, int offset, int len) throws IOException",
    "methodName" : "writeRawValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05360() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"writeRaw\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"writeRaw\", writerConfig0);\n    ObjectReader objectReader0 = objectMapper0.reader((JsonNodeFactory) null);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 3, objectReader0, nonNsStreamWriter0);\n    toXmlGenerator0.writeRawValue(\"\", 2, 3);\n}",
    "testName" : "test05360"
  },
  "test0022" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0022() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);\n    BufferRecycler bufferRecycler0 = jsonFactory0._getBufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter((XmlWriter) null, \"JSON\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, (-1437), 1, objectMapper0, nonNsStreamWriter0);\n    toXmlGenerator0.inRoot();\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test0022"
  },
  "test07380" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07380() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockFile mockFile0 = new MockFile(\"[PreAndSuffixTrasfomer('\", \"[PreAndSuffixTrasfomer('\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"[PreAndSuffixTrasfomer('\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"[PreAndSuffixTrasfomer('\", \"[PreAndSuffixTrasfomer('\", \"[PreAndSuffixTrasfomer('\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0._nextIsAttribute = true;\n    toXmlGenerator0.writeBoolean(false);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test07380"
  },
  "test04552" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04552() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Can not write END_ELEMENT without open START_ELEMENT\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Can not write END_ELEMENT without open START_ELEMENT\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"Can not write END_ELEMENT without open START_ELEMENT\", \"Can not write END_ELEMENT without open START_ELEMENT\");\n    toXmlGenerator0._nextIsUnwrapped = true;\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    char[] charArray0 = new char[9];\n    toXmlGenerator0.writeString(charArray0, 1, 0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test04552"
  },
  "test08996" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08996() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\".>`B'\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \".>`B'\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = QName.valueOf(\".>`B'\");\n    toXmlGenerator0.setNextIsAttribute(true);\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.writeNumber((float) 0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test08996"
  },
  "test05764" : {
    "methodSignature" : "public void writeRawValue(char[] text, int offset, int len) throws IOException",
    "methodName" : "writeRawValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05764() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[PreAndSuffixranformer('\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Xwu#g'HA\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    toXmlGenerator0.writeRawValue((char[]) null, 1, (int) (byte) 64);\n}",
    "testName" : "test05764"
  },
  "test07784" : {
    "methodSignature" : "public void writeNumber(int i) throws IOException",
    "methodName" : "writeNumber",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07784() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[PreAndSuffxTransfomer('\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"[PreAndSuffxTransfomer('\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 1, objectMapper0, nonNsStreamWriter0);\n    toXmlGenerator0.writeNumber(1);\n}",
    "testName" : "test07784"
  },
  "test01314" : {
    "methodSignature" : "public void writeRawUTF8String(byte[] text, int offset, int length) throws IOException",
    "methodName" : "writeRawUTF8String",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01314() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Unexpected character \");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Unexpected character \", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    toXmlGenerator0.writeRawUTF8String((byte[]) null, 382, (-128));\n}",
    "testName" : "test01314"
  },
  "test03338" : {
    "methodSignature" : "public void writeRepeatedFieldName() throws IOException",
    "methodName" : "writeRepeatedFieldName",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03338() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockFile mockFile0 = new MockFile(\"[PreAndSuffixTransformer('\", \"[PreAndSuffixTransformer('\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"[PreAndSuffixTransformer('\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 12, 3, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"[PreAndSuffixTransformer('\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.writeRepeatedFieldName();\n}",
    "testName" : "test03338"
  },
  "test02529" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02529() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"writeRaw\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"writeRaw\", writerConfig0);\n    ObjectReader objectReader0 = objectMapper0.reader((JsonNodeFactory) null);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 3, objectReader0, nonNsStreamWriter0);\n    ToXmlGenerator.Feature toXmlGenerator_Feature0 = ToXmlGenerator.Feature.WRITE_XML_1_1;\n    toXmlGenerator0.configure(toXmlGenerator_Feature0, false);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test02529"
  },
  "test099106" : {
    "methodSignature" : "public void writeNumber(BigInteger value) throws IOException",
    "methodName" : "writeNumber",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099106() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[PreAndSuffxTransfomer('\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"[PreAndSuffxTransfomer('\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 1, objectMapper0, nonNsStreamWriter0);\n    toXmlGenerator0.writeNumber((BigInteger) null);\n}",
    "testName" : "test099106"
  },
  "test100107" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100107() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Can not write END_ELEMENT without open START_ELEMENT\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Can not write END_ELEMENT without open START_ELEMENT\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"Can not write END_ELEMENT without open START_ELEMENT\", \"Can not write END_ELEMENT without open START_ELEMENT\", \"Can not write END_ELEMENT without open START_ELEMENT\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    BigInteger bigInteger0 = BigInteger.ONE;\n    toXmlGenerator0.writeNumber(bigInteger0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test100107"
  },
  "test08188" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08188() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\">C&'\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \">C&'\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\">C&'\", \">C&'\");\n    toXmlGenerator0._nextIsUnwrapped = true;\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.writeNumber((long) 0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test08188"
  },
  "test0033" : {
    "methodSignature" : "public void writeRaw(char c) throws IOException",
    "methodName" : "writeRaw",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0033() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\">\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \">\", writerConfig0);\n    StreamWriterDelegate streamWriterDelegate0 = new StreamWriterDelegate(nonNsStreamWriter0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 0, 698, objectMapper0, streamWriterDelegate0);\n    toXmlGenerator0.writeRaw('Z');\n}",
    "testName" : "test0033"
  },
  "test04148" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04148() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Can not write END_ELEMENT without open START_ELEMENT\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Can not write END_ELEMENT without open START_ELEMENT\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"Can not write END_ELEMENT without open START_ELEMENT\", \"Can not write END_ELEMENT without open START_ELEMENT\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0._nextIsCData = true;\n    toXmlGenerator0.writeObject(nonNsStreamWriter0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test04148"
  },
  "test06168" : {
    "methodSignature" : "public void writeRaw(String text, int offset, int len) throws IOException",
    "methodName" : "writeRaw",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06168() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter((XmlWriter) null, \"S|H3;f+@@e|NUEJibj\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    toXmlGenerator0.writeRaw(\"S|H3;f+@@e|NUEJibj\", 0, 1);\n}",
    "testName" : "test06168"
  },
  "test05865" : {
    "methodSignature" : "public void writeRawValue(char[] text, int offset, int len) throws IOException",
    "methodName" : "writeRawValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05865() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[PreAndSuffxTransfomer('\");\n    ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(mockPrintStream0, writerConfig0, false);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, \",D,'\", writerConfig0);\n    StreamWriterDelegate streamWriterDelegate0 = new StreamWriterDelegate(nonNsStreamWriter0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 8000, 3, objectMapper0, streamWriterDelegate0);\n    toXmlGenerator0.writeRawValue((char[]) null, 2, 180);\n}",
    "testName" : "test05865"
  },
  "test105112" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105112() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Can not write END_ELEENTwithout openSTART_ELEMENT\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Can not write END_ELEENTwithout openSTART_ELEMENT\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 965, 2, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"Can not write END_ELEENTwithout openSTART_ELEMENT\", \"Can not write END_ELEENTwithout openSTART_ELEMENT\", \"Can not write END_ELEENTwithout openSTART_ELEMENT\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.writeObject(\"Can not write END_ELEENTwithout openSTART_ELEMENT\");\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test105112"
  },
  "test096103" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096103() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Can not write END_ELEME>T withot ope START_E1EMENT\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Can not write END_ELEME>T withot ope START_E1EMENT\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = QName.valueOf(\"Can not write END_ELEME>T withot ope START_E1EMENT\");\n    toXmlGenerator0._nextIsUnwrapped = true;\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    toXmlGenerator0.writeNumber(bigDecimal0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test096103"
  },
  "test08693" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08693() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockFile mockFile0 = new MockFile(\"Failed to setValue() for field \", \"Failed to setValue() for field \");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Failed to setValue() for field \", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 3, objectMapper0, nonNsStreamWriter0);\n    toXmlGenerator0.useDefaultPrettyPrinter();\n    QName qName0 = QName.valueOf(\"Failed to setValue() for field \");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.writeNumber((double) 56320);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test08693"
  },
  "test0044" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0044() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Can not write END_LEMENT without opeR START_E&EM:NT\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Can not write END_LEMENT without opeR START_E&EM:NT\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    toXmlGenerator0.setNextIsCData(true);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test0044"
  },
  "test04653" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04653() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Can not write END_ELEMENT without open START_ELEMENT\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Can not write END_ELEMENT without open START_ELEMENT\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"Can not write END_ELEMENT without open START_ELEMENT\", \"Can not write END_ELEMENT without open START_ELEMENT\");\n    toXmlGenerator0._nextIsUnwrapped = true;\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    char[] charArray0 = new char[9];\n    toXmlGenerator0._nextIsCData = true;\n    toXmlGenerator0.writeString(charArray0, 1, 0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test04653"
  },
  "test07885" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07885() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Can not write END_ELEMENT without open START_ELEMENT\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Can not write END_ELEMENT without open START_ELEMENT\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"Can not write END_ELEMENT without open START_ELEMENT\", \"Can not write END_ELEMENT without open START_ELEMENT\", \"Can not write END_ELEMENT without open START_ELEMENT\");\n    toXmlGenerator0._nextIsUnwrapped = true;\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.writeObject(asciiXmlWriter0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test07885"
  },
  "test02630" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02630() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[PreAndSuffixranformer('\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"[PreAndSuffixranformer('\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    ToXmlGenerator.Feature toXmlGenerator_Feature0 = ToXmlGenerator.Feature.WRITE_XML_DECLARATION;\n    toXmlGenerator0.configure(toXmlGenerator_Feature0, true);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test02630"
  },
  "test05461" : {
    "methodSignature" : "public void writeRawValue(String text, int offset, int len) throws IOException",
    "methodName" : "writeRawValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05461() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    SimpleNsStreamWriter simpleNsStreamWriter0 = new SimpleNsStreamWriter((XmlWriter) null, \"T/]lUXv_Pw\", writerConfig0);\n    StreamWriterDelegate streamWriterDelegate0 = new StreamWriterDelegate(simpleNsStreamWriter0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 4900, 3, objectMapper0, streamWriterDelegate0);\n    toXmlGenerator0.writeRawValue(\"\", 56319, 3);\n}",
    "testName" : "test05461"
  },
  "test03440" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03440() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Can not write END_ELEMENT without open START_ElEM:NT\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Can not write END_ELEMENT without open START_ElEM:NT\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = QName.valueOf(\"Can not write END_ELEMENT without open START_ElEM:NT\");\n    toXmlGenerator0.useDefaultPrettyPrinter();\n    boolean boolean0 = toXmlGenerator0.setNextNameIfMissing(qName0);\n    toXmlGenerator0.writeObject(nonNsStreamWriter0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test03440"
  },
  "test06673" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06673() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\">C&'\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \">C&'\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\">C&'\", \">C&'\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    byte[] byteArray0 = new byte[0];\n    toXmlGenerator0.writeBinary(byteArray0, 57343, 0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test06673"
  },
  "test03439" : {
    "methodSignature" : "public final boolean setNextNameIfMissing(QName name)",
    "methodName" : "setNextNameIfMissing",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03439() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Can not write END_ELEMENT without open START_ElEM:NT\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Can not write END_ELEMENT without open START_ElEM:NT\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = QName.valueOf(\"Can not write END_ELEMENT without open START_ElEM:NT\");\n    toXmlGenerator0.useDefaultPrettyPrinter();\n    boolean boolean0 = toXmlGenerator0.setNextNameIfMissing(qName0);\n}",
    "testName" : "test03439"
  },
  "test02224" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02224() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[PreAndSuff5TransfSmer('\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"[PreAndSuff5TransfSmer('\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 1, objectMapper0, nonNsStreamWriter0);\n    toXmlGenerator0.overrideFormatFeatures(1021, (-234));\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test02224"
  },
  "test108115" : {
    "methodSignature" : "public boolean inRoot()",
    "methodName" : "inRoot",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108115() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[\\\"reAndSuffixTrasfomerM\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"[\\\"reAndSuffixTrasfomerM\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = QName.valueOf(\"[\\\"reAndSuffixTrasfomerM\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.writeStartObject();\n    toXmlGenerator0.close();\n    toXmlGenerator0.inRoot();\n}",
    "testName" : "test108115"
  },
  "test04249" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04249() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Can not write END_ELEMENT without open START_ELEMENT\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Can not write END_ELEMENT without open START_ELEMENT\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"Can not write END_ELEMENT without open START_ELEMENT\", \"Can not write END_ELEMENT without open START_ELEMENT\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    char[] charArray0 = new char[9];\n    toXmlGenerator0.writeString(charArray0, 1, 0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test04249"
  },
  "test01415" : {
    "methodSignature" : "public void writeNumber(String encodedValue) throws IOException, UnsupportedOperationException",
    "methodName" : "writeNumber",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01415() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, \"\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 3, objectMapper0, repairingNsStreamWriter0);\n    toXmlGenerator0.writeNumber(\"<OV'C\\\"N\");\n}",
    "testName" : "test01415"
  },
  "test093100" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093100() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Can not write END_ELEMENT without open START_ELEMENT\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Can not write END_ELEMENT without open START_ELEMENT\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"Can not write END_ELEMENT without open START_ELEMENT\", \"Can not write END_ELEMENT without open START_ELEMENT\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\n    toXmlGenerator0.writeNumber(bigDecimal0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test093100"
  },
  "test09097" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09097() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\">C&'\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \">C&'\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\">C&'\", \">C&'\");\n    toXmlGenerator0._nextIsUnwrapped = true;\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.writeNumber((float) 56320);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test09097"
  },
  "test0055" : {
    "methodSignature" : "public final void writeStringField(String fieldName, String value) throws IOException",
    "methodName" : "writeStringField",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0055() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\".>`B'\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \".>`B'\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    toXmlGenerator0.writeStringField(\".>`B'\", \".>`B'\");\n}",
    "testName" : "test0055"
  },
  "test06269" : {
    "methodSignature" : "public void writeRaw(String text, int offset, int len) throws IOException",
    "methodName" : "writeRaw",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06269() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    SimpleModule simpleModule0 = new SimpleModule();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, simpleModule0, false);\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(pipedOutputStream0, writerConfig0, true);\n    RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(iSOLatin1XmlWriter0, \"Can not write END_ELEMENT without open START_ELEMENT\", writerConfig0);\n    StreamWriterDelegate streamWriterDelegate0 = new StreamWriterDelegate(repairingNsStreamWriter0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 0, 1, (ObjectCodec) null, streamWriterDelegate0);\n    toXmlGenerator0.writeRaw(\"]5;F`o(l_AE'+*<9eU\", 0, 2);\n}",
    "testName" : "test06269"
  },
  "test03035" : {
    "methodSignature" : "public void finishWrappedValue(QName wrapperName, QName wrappedName) throws IOException",
    "methodName" : "finishWrappedValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03035() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockFile mockFile0 = new MockFile(\"[PreAndSuffixTransformer('\", \"[PreAndSuffixTransformer('\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2897, 3, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"\", \"\", \"\");\n    toXmlGenerator0.finishWrappedValue(qName0, qName0);\n}",
    "testName" : "test03035"
  },
  "test05057" : {
    "methodSignature" : "public void writeRawValue(String text) throws IOException",
    "methodName" : "writeRawValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05057() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter((XmlWriter) null, \"C{NF$-\", writerConfig0);\n    StreamWriterDelegate streamWriterDelegate0 = new StreamWriterDelegate(nonNsStreamWriter0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1373, 0, objectMapper0, streamWriterDelegate0);\n    toXmlGenerator0.writeRawValue(\"Cvf%/Ueh1'('#)@\");\n}",
    "testName" : "test05057"
  },
  "test01010" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01010() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockFile mockFile0 = new MockFile(\"m\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"m\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 3, objectMapper0, nonNsStreamWriter0);\n    ToXmlGenerator toXmlGenerator1 = (ToXmlGenerator) toXmlGenerator0.useDefaultPrettyPrinter();\n    QName qName0 = new QName(\"m\", \"m\", \"m\");\n    toXmlGenerator1.startWrappedValue(qName0, qName0);\n    BigInteger bigInteger0 = BigInteger.ZERO;\n    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);\n    toXmlGenerator0.writeNumber(bigDecimal0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test01010"
  },
  "test08289" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08289() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockFile mockFile0 = new MockFile(\"Failed to setValue() for field \", \"Failed to setValue() for field \");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Failed to setValue() for field \", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 3, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = QName.valueOf(\"Failed to setValue() for field \");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.writeNumber((double) 56320);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test08289"
  },
  "test02732" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02732() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockFile mockFile0 = new MockFile(\"[PreAndSuffixTransformer('\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"[PreAndSuffixTransformer('\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 3, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"a\\\"HB4OP$'\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    boolean boolean0 = toXmlGenerator0.setNextNameIfMissing(qName0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test02732"
  },
  "test02731" : {
    "methodSignature" : "public final boolean setNextNameIfMissing(QName name)",
    "methodName" : "setNextNameIfMissing",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02731() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockFile mockFile0 = new MockFile(\"[PreAndSuffixTransformer('\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"[PreAndSuffixTransformer('\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 3, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"a\\\"HB4OP$'\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    boolean boolean0 = toXmlGenerator0.setNextNameIfMissing(qName0);\n}",
    "testName" : "test02731"
  },
  "test03946" : {
    "methodSignature" : "public final void _handleEndObject() throws IOException",
    "methodName" : "_handleEndObject",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03946() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter((XmlWriter) null, \"[PreAndSuffixTransformer('\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 3, objectMapper0, nonNsStreamWriter0);\n    toXmlGenerator0._handleEndObject();\n}",
    "testName" : "test03946"
  },
  "test01921" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01921() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[\\\"reAndSuffixTrasfomer(M\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"[\\\"reAndSuffixTrasfomer(M\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    toXmlGenerator0.useDefaultPrettyPrinter();\n    toXmlGenerator0.initGenerator();\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test01921"
  },
  "test05966" : {
    "methodSignature" : "public void writeRawValue(char[] text, int offset, int len) throws IOException",
    "methodName" : "writeRawValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05966() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[PreAndSuffixranformer('\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Xwu#g'HA\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"[PreAndSuffixranformer('\", \"Xwu#g'HA\", \"[PreAndSuffixranformer('\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.writeRawValue((char[]) null, 1, (int) (byte) 64);\n}",
    "testName" : "test05966"
  },
  "test098105" : {
    "methodSignature" : "public void writeNumber(BigInteger value) throws IOException",
    "methodName" : "writeNumber",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098105() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Can not write END_ELEMENT without open START_ELEMENT\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Can not write END_ELEMENT without open START_ELEMENT\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    BigInteger bigInteger0 = BigInteger.ONE;\n    toXmlGenerator0.writeNumber(bigInteger0);\n}",
    "testName" : "test098105"
  },
  "test101108" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101108() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[PreAndSuffixranformer('\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Xwu#g'HA\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"[PreAndSuffixranformer('\", \"Xwu#g'HA\", \"[PreAndSuffixranformer('\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.setNextIsAttribute(true);\n    BigInteger bigInteger0 = BigInteger.ONE;\n    toXmlGenerator0.writeNumber(bigInteger0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test101108"
  },
  "test06370" : {
    "methodSignature" : "public void writeRaw(char[] text, int offset, int len) throws IOException",
    "methodName" : "writeRaw",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06370() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    SimpleModule simpleModule0 = new SimpleModule();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, simpleModule0, false);\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(pipedOutputStream0, writerConfig0, true);\n    RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(iSOLatin1XmlWriter0, \"Can not write END_ELEMENT without open START_ELEMENT\", writerConfig0);\n    StreamWriterDelegate streamWriterDelegate0 = new StreamWriterDelegate(repairingNsStreamWriter0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 0, 1, (ObjectCodec) null, streamWriterDelegate0);\n    char[] charArray0 = new char[1];\n    toXmlGenerator0.writeRaw(charArray0, 56319, 56320);\n}",
    "testName" : "test06370"
  },
  "test0066" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0066() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[PreAndSuffxTransfomer('\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"[PreAndSuffxTransfomer('\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 1, objectMapper0, nonNsStreamWriter0);\n    toXmlGenerator0.setNextIsUnwrapped(true);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test0066"
  },
  "test08390" : {
    "methodSignature" : "public void writeNumber(double d) throws IOException",
    "methodName" : "writeNumber",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08390() throws Throwable {\n    StreamWriter2Delegate streamWriter2Delegate0 = new StreamWriter2Delegate((XMLStreamWriter2) null);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, 56319, (-1328), (ObjectCodec) null, streamWriter2Delegate0);\n    toXmlGenerator0.writeNumber((double) 56319);\n}",
    "testName" : "test08390"
  },
  "test07986" : {
    "methodSignature" : "public void writeNumber(long l) throws IOException",
    "methodName" : "writeNumber",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07986() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, \",@R^2:V702P=>@3t+\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 2, objectMapper0, repairingNsStreamWriter0);\n    toXmlGenerator0.writeNumber((long) 1);\n}",
    "testName" : "test07986"
  },
  "test03541" : {
    "methodSignature" : "public final void writeEndArray() throws IOException",
    "methodName" : "writeEndArray",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03541() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[PreAndSuffixranformer('\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"[PreAndSuffixranformer('\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    toXmlGenerator0.writeEndArray();\n}",
    "testName" : "test03541"
  },
  "test06774" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06774() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[PreAndSuffixranformer('\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Xwu#g'HA\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"[PreAndSuffixranformer('\", \"Xwu#g'HA\", \"[PreAndSuffixranformer('\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.setNextIsAttribute(true);\n    byte[] byteArray0 = new byte[3];\n    toXmlGenerator0.writeBinary(byteArray0, 0, 3);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test06774"
  },
  "test04350" : {
    "methodSignature" : "public void writeString(char[] text, int offset, int len) throws IOException",
    "methodName" : "writeString",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04350() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[PreAndSuffxTransfomer('\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"[PreAndSuffxTransfomer('\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 1, objectMapper0, nonNsStreamWriter0);\n    toXmlGenerator0.writeString((char[]) null, 2, 1);\n}",
    "testName" : "test04350"
  },
  "test08794" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08794() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\">C&'\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \">C&'\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\">C&'\", \">C&'\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.writeNumber((float) 56320);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test08794"
  },
  "test05562" : {
    "methodSignature" : "public void writeRawValue(String text, int offset, int len) throws IOException",
    "methodName" : "writeRawValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05562() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"writeRaw\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"writeRaw\", writerConfig0);\n    ObjectReader objectReader0 = objectMapper0.reader((JsonNodeFactory) null);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 3, objectReader0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"writeRaw\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.writeRawValue(\"\", 2, 3);\n}",
    "testName" : "test05562"
  },
  "test02326" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02326() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, \"\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, (-701), 0, objectMapper0, nonNsStreamWriter0);\n    ToXmlGenerator.Feature toXmlGenerator_Feature0 = ToXmlGenerator.Feature.WRITE_XML_1_1;\n    boolean boolean0 = toXmlGenerator0.isEnabled(toXmlGenerator_Feature0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test02326"
  },
  "test02325" : {
    "methodSignature" : "public final boolean isEnabled(Feature f)",
    "methodName" : "isEnabled",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02325() throws Throwable {\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    ISOLatin1XmlWriter iSOLatin1XmlWriter0 = new ISOLatin1XmlWriter(byteArrayOutputStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(iSOLatin1XmlWriter0, \"\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator((IOContext) null, (-701), 0, objectMapper0, nonNsStreamWriter0);\n    ToXmlGenerator.Feature toXmlGenerator_Feature0 = ToXmlGenerator.Feature.WRITE_XML_1_1;\n    boolean boolean0 = toXmlGenerator0.isEnabled(toXmlGenerator_Feature0);\n}",
    "testName" : "test02325"
  },
  "test106113" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106113() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, \"E~d\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 0, 3, objectMapper0, repairingNsStreamWriter0);\n    toXmlGenerator0.close();\n}",
    "testName" : "test106113"
  },
  "test095102" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095102() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockFile mockFile0 = new MockFile(\"[PreAndSuffixTransformer('\", \"[PreAndSuffixTransformer('\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2897, 3, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"\", \"\", \"\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.setNextIsAttribute(true);\n    BigDecimal bigDecimal0 = new BigDecimal(2286L);\n    toXmlGenerator0.writeNumber(bigDecimal0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test095102"
  },
  "test09198" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09198() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockFile mockFile0 = new MockFile(\"[PreAndSffixTrdnsormer'\", \"[PreAndSffixTrdnsormer'\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"[PreAndSffixTrdnsormer'\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 3, objectMapper0, nonNsStreamWriter0);\n    ToXmlGenerator toXmlGenerator1 = (ToXmlGenerator) toXmlGenerator0.useDefaultPrettyPrinter();\n    QName qName0 = QName.valueOf(\"[PreAndSffixTrdnsormer'\");\n    toXmlGenerator1.startWrappedValue(qName0, qName0);\n    toXmlGenerator1.writeNumber((float) 55296);\n    toXmlGenerator1.getFormatFeatures();\n}",
    "testName" : "test09198"
  },
  "test0077" : {
    "methodSignature" : "public void writeUTF8String(byte[] text, int offset, int length) throws IOException",
    "methodName" : "writeUTF8String",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0077() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"JsonInclude.Value(value=\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"JsonInclude.Value(value=\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);\n    toXmlGenerator0.writeUTF8String((byte[]) null, (-1043), 38);\n}",
    "testName" : "test0077"
  },
  "test05158" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05158() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[PreAndSuffixranformer('\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"Xwu#g'HA\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"[PreAndSuffixranformer('\", \"Xwu#g'HA\", \"[PreAndSuffixranformer('\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.writeRawValue(\"Xwu#g'HA\");\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test05158"
  },
  "test03136" : {
    "methodSignature" : "public void finishWrappedValue(QName wrapperName, QName wrappedName) throws IOException",
    "methodName" : "finishWrappedValue",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03136() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, \"\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 3, objectMapper0, repairingNsStreamWriter0);\n    toXmlGenerator0.useDefaultPrettyPrinter();\n    QName qName0 = new QName(\"\", \"\");\n    toXmlGenerator0.finishWrappedValue(qName0, qName0);\n}",
    "testName" : "test03136"
  },
  "test07178" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07178() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[PreAndSuffixranformer('\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"[PreAndSuffixranformer('\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"[PreAndSuffixranformer('\", \"[PreAndSuffixranformer('\", \"[PreAndSuffixranformer('\");\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    toXmlGenerator0.setNextIsAttribute(true);\n    byte[] byteArray0 = new byte[4];\n    toXmlGenerator0.writeBinary(byteArray0, (-361), (int) (byte) 0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test07178"
  },
  "test04855" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04855() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();\n    MockFile mockFile0 = new MockFile(\"[PreAndSuffixTransformer('\", \"[PreAndSuffixTransformer('\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"^3b5Cj/\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 3, objectMapper0, nonNsStreamWriter0);\n    QName qName0 = new QName(\"|duy-68?A\");\n    toXmlGenerator0._nextIsCData = true;\n    toXmlGenerator0.startWrappedValue(qName0, qName0);\n    char[] charArray0 = new char[2];\n    toXmlGenerator0.writeString(charArray0, 56319, 0);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test04855"
  },
  "test02833" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02833() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectMapper objectMapper0 = new ObjectMapper();\n    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"[\\\"eASuffixTrasfomer(\");\n    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);\n    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, \"[\\\"eASuffixTrasfomer(\", writerConfig0);\n    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);\n    toXmlGenerator0.startWrappedValue((QName) null, (QName) null);\n    toXmlGenerator0.getFormatFeatures();\n}",
    "testName" : "test02833"
  }
}