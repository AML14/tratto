com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,@Test(timeout = 4000)
public void test0088() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
    MockFile mockFile0 = new MockFile(""[PreAndSuffixTransformer('"", ""[PreAndSuffixTransformer('"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);
    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, ""[PreAndSuffixTransformer('"", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);
    QName qName0 = new QName(""[PreAndSuffixTransformer('"", ""[PreAndSuffixTransformer('"", ""[PreAndSuffixTransformer('"");
    toXmlGenerator0.startWrappedValue(qName0, qName0);
    toXmlGenerator0.writeObject(toXmlGenerator0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonXml_6b/src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,@Test(timeout = 4000)
public void test01111() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""You need to upgrade to using compliant Stax implementation like Woodstox or Aalto"");
    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);
    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, ""You need to upgrade to using compliant Stax implementation like Woodstox or Aalto"", writerConfig0);
    JsonEncoding jsonEncoding0 = JsonEncoding.UTF8;
    iOContext0.setEncoding(jsonEncoding0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);
    QName qName0 = new QName(""You need to upgrade to using compliant Stax implementation like Woodstox or Aalto"");
    toXmlGenerator0.startWrappedValue(qName0, qName0);
    toXmlGenerator0.writeObject(iOContext0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonXml_6b/src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,@Test(timeout = 4000)
public void test01516() throws Throwable {
    int int0 = ToXmlGenerator.Feature.collectDefaults();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonXml_6b/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator/Feature.java
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,@Test(timeout = 4000)
public void test01718() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
    MockPrintStream mockPrintStream0 = new MockPrintStream("">"");
    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);
    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, "">"", writerConfig0);
    StreamWriterDelegate streamWriterDelegate0 = new StreamWriterDelegate(nonNsStreamWriter0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 0, 698, objectMapper0, streamWriterDelegate0);
    toXmlGenerator0.initGenerator();
    nonNsStreamWriter0.getXmlVersion();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,@Test(timeout = 4000)
public void test01819() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
    MockPrintStream mockPrintStream0 = new MockPrintStream("">"");
    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);
    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, "">"", writerConfig0);
    StreamWriterDelegate streamWriterDelegate0 = new StreamWriterDelegate(nonNsStreamWriter0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 0, 698, objectMapper0, streamWriterDelegate0);
    toXmlGenerator0.useDefaultPrettyPrinter();
    toXmlGenerator0.initGenerator();
    nonNsStreamWriter0.getXmlVersion();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,@Test(timeout = 4000)
public void test01920() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""[\""reAndSuffixTrasfomer(M"");
    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);
    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, ""[\""reAndSuffixTrasfomer(M"", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);
    toXmlGenerator0.useDefaultPrettyPrinter();
    toXmlGenerator0.initGenerator();
    nonNsStreamWriter0.getXmlVersion();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,@Test(timeout = 4000)
public void test02022() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
    RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, """", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 2, objectMapper0, repairingNsStreamWriter0);
    JsonGenerator jsonGenerator0 = toXmlGenerator0.setPrettyPrinter((PrettyPrinter) null);
    jsonGenerator0.getFormatFeatures();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonXml_6b/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,@Test(timeout = 4000)
public void test02123() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
    RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, """", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 3, objectMapper0, repairingNsStreamWriter0);
    JsonGenerator jsonGenerator0 = toXmlGenerator0.overrideFormatFeatures(2, 2);
    jsonGenerator0.getFormatFeatures();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonXml_6b/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,@Test(timeout = 4000)
public void test03744() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
    MockFile mockFile0 = new MockFile(""m"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);
    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, ""m"", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 3, objectMapper0, nonNsStreamWriter0);
    ToXmlGenerator toXmlGenerator1 = (ToXmlGenerator) toXmlGenerator0.useDefaultPrettyPrinter();
    toXmlGenerator1.setNextIsAttribute(true);
    QName qName0 = new QName(""m"", ""m"", ""m"");
    toXmlGenerator1.startWrappedValue(qName0, qName0);
    toXmlGenerator0.writeObject(writerConfig0);
    mockFile0.length();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,@Test(timeout = 4000)
public void test04754() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Can not write END_ELEMENT without open START_E&EM:NT"");
    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);
    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, ""Can not write END_ELEMENT without open START_E&EM:NT"", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);
    QName qName0 = QName.valueOf(""Can not write END_ELEMENT without open START_E&EM:NT"");
    JsonGenerator jsonGenerator0 = toXmlGenerator0.useDefaultPrettyPrinter();
    toXmlGenerator0.startWrappedValue(qName0, qName0);
    jsonGenerator0.writeString((char[]) null, (-3424), 3);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonXml_6b/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,@Test(timeout = 4000)
public void test06471() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
    MockPrintStream mockPrintStream0 = new MockPrintStream("">C&'"");
    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);
    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, "">C&'"", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);
    byte[] byteArray0 = new byte[0];
    toXmlGenerator0.writeBinary(byteArray0, 57343, 0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonXml_6b/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,@Test(timeout = 4000)
public void test06572() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
    RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter((XmlWriter) null, """", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 2, 3, objectMapper0, repairingNsStreamWriter0);
    toXmlGenerator0.writeBinary((byte[]) null, 1897, 0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonXml_6b/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,@Test(timeout = 4000)
public void test06976() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
    CharArrayWriter charArrayWriter0 = new CharArrayWriter(3);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    BufferingXmlWriter bufferingXmlWriter0 = new BufferingXmlWriter(charArrayWriter0, writerConfig0, ""[PreAndSuff5TrasfSmer('"", false, byteArrayBuilder0, 2);
    RepairingNsStreamWriter repairingNsStreamWriter0 = new RepairingNsStreamWriter(bufferingXmlWriter0, ""[PreAndSuff5TrasfSmer('"", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 0, 0, objectMapper0, repairingNsStreamWriter0);
    toXmlGenerator0.useDefaultPrettyPrinter();
    QName qName0 = new QName(""[PreAndSuff5TrasfSmer('"");
    toXmlGenerator0.startWrappedValue(qName0, qName0);
    toXmlGenerator0.writeObject(byteArrayBuilder0);
    charArrayWriter0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonXml_6b/src/main/java/java/io/CharArrayWriter.java
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,@Test(timeout = 4000)
public void test07077() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""[PreAndSuffixranformer('"");
    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);
    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, ""Xwu#g'HA"", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 1, objectMapper0, nonNsStreamWriter0);
    QName qName0 = new QName(""[PreAndSuffixranformer('"", ""Xwu#g'HA"", ""[PreAndSuffixranformer('"");
    toXmlGenerator0.startWrappedValue(qName0, qName0);
    toXmlGenerator0.setNextIsAttribute(true);
    byte[] byteArray0 = new byte[2];
    toXmlGenerator0.writeBinary(byteArray0, 0, 3);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonXml_6b/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,@Test(timeout = 4000)
public void test07481() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createJ2MEDefaults();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Can not write END_ELEENTwithout openSTART_ELEMENT"");
    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);
    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, ""Can not write END_ELEENTwithout openSTART_ELEMENT"", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);
    QName qName0 = new QName(""Can not write END_ELEENTwithout openSTART_ELEMENT"", ""Can not write END_ELEENTwithout openSTART_ELEMENT"", ""Can not write END_ELEENTwithout openSTART_ELEMENT"");
    toXmlGenerator0._nextIsUnwrapped = true;
    toXmlGenerator0.startWrappedValue(qName0, qName0);
    toXmlGenerator0.writeObject(iOContext0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonXml_6b/src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,@Test(timeout = 4000)
public void test07582() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Can not write END_LEMENT without opeR START_E&EM:NT"");
    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, true);
    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, ""Can not write END_LEMENT without opeR START_E&EM:NT"", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 1, 1, objectMapper0, nonNsStreamWriter0);
    QName qName0 = QName.valueOf(""Can not write END_LEMENT without opeR START_E&EM:NT"");
    ToXmlGenerator toXmlGenerator1 = (ToXmlGenerator) toXmlGenerator0.useDefaultPrettyPrinter();
    toXmlGenerator1.startWrappedValue(qName0, qName0);
    toXmlGenerator1.writeObject(iOContext0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonXml_6b/src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,@Test(timeout = 4000)
public void test103110() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ObjectMapper objectMapper0 = new ObjectMapper();
    WriterConfig writerConfig0 = WriterConfig.createFullDefaults();
    MockFile mockFile0 = new MockFile(""Failed to setValue() for field "", ""Failed to setValue() for field "");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    AsciiXmlWriter asciiXmlWriter0 = new AsciiXmlWriter(mockPrintStream0, writerConfig0, false);
    NonNsStreamWriter nonNsStreamWriter0 = new NonNsStreamWriter(asciiXmlWriter0, ""Failed to setValue() for field "", writerConfig0);
    ToXmlGenerator toXmlGenerator0 = new ToXmlGenerator(iOContext0, 3, 3, objectMapper0, nonNsStreamWriter0);
    JsonGenerator jsonGenerator0 = toXmlGenerator0.useDefaultPrettyPrinter();
    QName qName0 = QName.valueOf(""Failed to setValue() for field "");
    toXmlGenerator0.startWrappedValue(qName0, qName0);
    BigInteger bigInteger0 = BigInteger.ONE;
    jsonGenerator0.writeNumber(bigInteger0);
    jsonGenerator0.getFormatFeatures();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/JacksonXml_6b/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java
