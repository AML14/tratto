org.apache.commons.collections4.trie.AbstractPatriciaTrie,@Test(timeout = 4000)
public void test0033() throws Throwable {
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
    Integer integer0 = new Integer(1314);
    AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(integer0, integer0);
    AbstractMap.SimpleImmutableEntry<Object, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, Object>(abstractMap_SimpleEntry0);
    patriciaTrie0.clear();
    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    Map.Entry.comparingByValue((Comparator<? super Object>) comparator0);
    AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<Object, Object>(abstractMap_SimpleImmutableEntry0);
    Map.Entry.comparingByValue((Comparator<? super AbstractMap.SimpleEntry<Object, Object>>) null);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Collections_28b/src/main/java/java/util/Map/Entry.java
org.apache.commons.collections4.trie.AbstractPatriciaTrie,@Test(timeout = 4000)
public void test0077() throws Throwable {
    PatriciaTrie<AbstractMap.SimpleImmutableEntry<Integer, String>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<Integer, String>>();
    Integer integer0 = new Integer(2516);
    AbstractMap.SimpleImmutableEntry<Integer, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, String>(integer0, ""^S3Vg)0eoyu?O+iiK]"");
    AbstractMap.SimpleImmutableEntry<Integer, String> abstractMap_SimpleImmutableEntry1 = new AbstractMap.SimpleImmutableEntry<Integer, String>(abstractMap_SimpleImmutableEntry0);
    patriciaTrie0.put(""^S3Vg)0eoyu?O+iiK]"", abstractMap_SimpleImmutableEntry1);
    patriciaTrie0.higherEntry(""org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry"");
    Integer integer1 = new Integer(0);
    AbstractMap.SimpleEntry<String, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, Object>(""cud!S,}(KP?MY"", ""org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry"");
    AbstractPatriciaTrie.TrieEntry<Integer, AbstractMap.SimpleEntry<String, Object>> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Integer, AbstractMap.SimpleEntry<String, Object>>(integer1, abstractMap_SimpleEntry0, 0);
    abstractPatriciaTrie_TrieEntry0.toString();
    AbstractPatriciaTrie.TrieEntry<Integer, Integer> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Integer, Integer>(integer1, integer1, (-891));
    abstractPatriciaTrie_TrieEntry1.isEmpty();
    AbstractMap.SimpleImmutableEntry<Integer, Integer> abstractMap_SimpleImmutableEntry2 = new AbstractMap.SimpleImmutableEntry<Integer, Integer>(integer1, integer1);
    AbstractPatriciaTrie.TrieEntry<Integer, AbstractMap.SimpleImmutableEntry<Integer, Integer>> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Integer, AbstractMap.SimpleImmutableEntry<Integer, Integer>>(integer1, abstractMap_SimpleImmutableEntry2, 0);
    abstractPatriciaTrie_TrieEntry2.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Collections_28b/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie/TrieEntry.java
org.apache.commons.collections4.trie.AbstractPatriciaTrie,@Test(timeout = 4000)
public void test0088() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
    doReturn((Object) null).when(biFunction0).apply(any(), any());
    patriciaTrie0.put(""ToKey is out of range: "", ""|F3EyPTp4zI*8,"");
    patriciaTrie0.put(""ToKey is out of range: "", ""ToKey is out of range: "");
    patriciaTrie0.put(""@/$<UTx@O"", ""@/$<UTx@O"");
    patriciaTrie0.computeIfPresent(""ToKey is out of range: "", biFunction0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Collections_28b/src/main/java/java/util/Map.java
org.apache.commons.collections4.trie.AbstractPatriciaTrie,@Test(timeout = 4000)
public void test01111() throws Throwable {
    Integer integer0 = new Integer((-1));
    AbstractPatriciaTrie.TrieEntry<Integer, Object> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Integer, Object>(integer0, ""-{y|?d|7DP y"", (-1));
    AbstractMap.SimpleImmutableEntry<String, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<String, String>("""", ""`-"");
    AbstractMap.SimpleEntry<String, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, Object>(abstractMap_SimpleImmutableEntry0);
    Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    Map.Entry.comparingByValue((Comparator<? super String>) comparator0);
    AbstractPatriciaTrie.TrieEntry<Comparable<Integer>, AbstractMap.SimpleEntry<String, Object>> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Comparable<Integer>, AbstractMap.SimpleEntry<String, Object>>(integer0, abstractMap_SimpleEntry0, 4764);
    Object object0 = abstractPatriciaTrie_TrieEntry1.getValue();
    abstractPatriciaTrie_TrieEntry0.value = object0;
    AbstractPatriciaTrie.TrieEntry<Integer, Object> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Integer, Object>(integer0, ""-{y|?d|7DP y"", 4764);
    Map.Entry.comparingByKey();
    abstractPatriciaTrie_TrieEntry0.parent = abstractPatriciaTrie_TrieEntry2;
    abstractPatriciaTrie_TrieEntry0.toString();
    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Collections_28b/src/main/java/org/apache/commons/collections4/trie/PatriciaTrie<java/lang/Integer>.java
org.apache.commons.collections4.trie.AbstractPatriciaTrie,@Test(timeout = 4000)
public void test02424() throws Throwable {
    PatriciaTrie<AbstractMap.SimpleEntry<Object, Object>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleEntry<Object, Object>>();
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>((String) null, (String) null, 1251);
    abstractPatriciaTrie_TrieEntry0.key = null;
    abstractPatriciaTrie_TrieEntry0.isEmpty();
    Integer integer0 = new Integer(1251);
    AbstractPatriciaTrie.TrieEntry<Object, Integer> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Object, Integer>(abstractPatriciaTrie_TrieEntry0, integer0, 1251);
    AbstractPatriciaTrie.TrieEntry<Integer, String> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Integer, String>(integer0, (String) null, 1251);
    String string0 = abstractPatriciaTrie_TrieEntry2.value;
    Integer integer1 = new Integer(1251);
    abstractPatriciaTrie_TrieEntry1.setKeyValue((Object) null, integer1);
    abstractPatriciaTrie_TrieEntry1.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Collections_28b/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie/TrieEntry.java
org.apache.commons.collections4.trie.AbstractPatriciaTrie,@Test(timeout = 4000)
public void test02626() throws Throwable {
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>(""x M27h;a$jbgubb=y"", ""x M27h;a$jbgubb=y"", 2595);
    AbstractPatriciaTrie.isValidUplink(abstractPatriciaTrie_TrieEntry0, abstractPatriciaTrie_TrieEntry0);
    AbstractPatriciaTrie.TrieEntry<Object, Object> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Object, Object>(""The offsets and lengths must be at Character boundaries"", ""i(8Q~ DzaLo8"", (-512));
    abstractPatriciaTrie_TrieEntry1.isExternalNode();
    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();
    PatriciaTrie<Integer> patriciaTrie1 = new PatriciaTrie<Integer>(patriciaTrie0);
    Integer integer0 = new Integer(1);
    patriciaTrie1.put("""", integer0);
    Integer integer1 = new Integer(0);
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(""]"", integer1, (-512));
    patriciaTrie1.previousEntry(abstractPatriciaTrie_TrieEntry2);
    PatriciaTrie<AbstractMap.SimpleEntry<Integer, String>> patriciaTrie2 = new PatriciaTrie<AbstractMap.SimpleEntry<Integer, String>>();
    patriciaTrie2.selectValue(""org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator"");
    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry3 = new AbstractPatriciaTrie.TrieEntry<String, Object>(""x M27h;a$jbgubb=y"", patriciaTrie1, (-1722));
    abstractPatriciaTrie_TrieEntry3.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Collections_28b/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie/TrieEntry.java
org.apache.commons.collections4.trie.AbstractPatriciaTrie,@Test(timeout = 4000)
public void test02929() throws Throwable {
    int int0 = 16;
    Integer integer0 = new Integer(16);
    String string0 = ""gc0FbxYswb$|}\\.:`?"";
    AbstractPatriciaTrie.TrieEntry<Integer, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Integer, String>(integer0, ""gc0FbxYswb$|}.:`?"", 16);
    Integer integer1 = new Integer(0);
    abstractPatriciaTrie_TrieEntry0.setKeyValue(integer1, ""|i4BK%/K "");
    abstractPatriciaTrie_TrieEntry0.equals((Object) null);
    abstractPatriciaTrie_TrieEntry0.toString();
    AbstractPatriciaTrie.TrieEntry<Integer, String> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.right;
    AbstractPatriciaTrie.isValidUplink((AbstractPatriciaTrie.TrieEntry<?, ?>) null, (AbstractPatriciaTrie.TrieEntry<?, ?>) null);
    HashMap<String, Object> hashMap0 = null;
    hashMap0 = new HashMap<String, Object>(0, 0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Collections_28b/src/main/java/java/util/HashMap<java/lang/String, java/lang/Object>.java
org.apache.commons.collections4.trie.AbstractPatriciaTrie,@Test(timeout = 4000)
public void test03737() throws Throwable {
    PatriciaTrie<AbstractMap.SimpleImmutableEntry<Object, String>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<Object, String>>();
    patriciaTrie0.subtree("":&E9xrZLA=R{u"", 1422, (-3));
    patriciaTrie0.getNearestEntryForKey("":&E9xrZLA=R{u"", 1422);
    patriciaTrie0.bitsPerElement();
    String string0 = ""}N1`"";
    patriciaTrie0.nextKey(""}N1`"");
    PatriciaTrie<Integer> patriciaTrie1 = null;
    patriciaTrie1 = new PatriciaTrie<Integer>((Map<? extends String, ? extends Integer>) null);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Collections_28b/src/main/java/org/apache/commons/collections4/trie/PatriciaTrie<java/lang/Integer>.java
org.apache.commons.collections4.trie.AbstractPatriciaTrie,@Test(timeout = 4000)
public void test04343() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.put(""}\n"", (String) null);
    patriciaTrie0.nextEntryInSubtree((AbstractPatriciaTrie.TrieEntry<String, String>) null, (AbstractPatriciaTrie.TrieEntry<String, String>) null);
    PatriciaTrie<Integer> patriciaTrie1 = new PatriciaTrie<Integer>();
    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>(patriciaTrie1);
    patriciaTrie1.selectValue(""I@@b3oGSe+`f<_rZwcW"");
    patriciaTrie2.headMap(""a5Ndz>84"");
    int int0 = 2316;
    patriciaTrie2.subtree("""", 2316, 2316);
    String string0 = ""\n"";
    AbstractMap.SimpleEntry<String, Integer> abstractMap_SimpleEntry0 = null;
    abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, Integer>((Map.Entry<? extends String, ? extends Integer>) null);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Collections_28b/src/main/java/java/util/AbstractMap/SimpleEntry<java/lang/String, java/lang/Integer>.java
org.apache.commons.collections4.trie.AbstractPatriciaTrie,@Test(timeout = 4000)
public void test05959() throws Throwable {
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
    patriciaTrie0.put(""g}+*-#*QOtO7"", ""g}+*-#*QOtO7"");
    patriciaTrie0.put(""MBy%"", ""MBy%"");
    patriciaTrie0.put(""g}+*-#*QOtO7"", (Object) null);
    patriciaTrie0.lengthInBits(""$e"");
    patriciaTrie0.prefixMap("""");
    patriciaTrie0.put(""?w?yKGM<B=9%9IL)CL"", ""$e"");
    patriciaTrie0.select(""T"");
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>(""T"", ""zP}!x:2m\""5Ox^\""x#4"", 32);
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.left;
    abstractPatriciaTrie_TrieEntry1.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Collections_28b/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie/TrieEntry.java
org.apache.commons.collections4.trie.AbstractPatriciaTrie,@Test(timeout = 4000)
public void test07171() throws Throwable {
    Integer integer0 = new Integer((-112));
    AbstractMap.SimpleImmutableEntry<String, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<String, Object>(""5yy6zI*arf09spp"", integer0);
    AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<String, Object>> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<String, Object>>(integer0, abstractMap_SimpleImmutableEntry0, 3247);
    AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<String, Object>> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<String, Object>>(abstractMap_SimpleImmutableEntry0, abstractMap_SimpleImmutableEntry0, 64);
    abstractPatriciaTrie_TrieEntry0.left = abstractPatriciaTrie_TrieEntry1;
    abstractPatriciaTrie_TrieEntry0.isInternalNode();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Collections_28b/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie/TrieEntry.java
org.apache.commons.collections4.trie.AbstractPatriciaTrie,@Test(timeout = 4000)
public void test07575() throws Throwable {
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
    String string0 = """";
    patriciaTrie0.put("""", """");
    patriciaTrie0.ceilingEntry(""fromKey > toKey"");
    patriciaTrie0.put("""", """");
    patriciaTrie0.put("""", """");
    patriciaTrie0.put(""R,oT3Hb5u_1VNS5"", """");
    patriciaTrie0.bitIndex(""A^#/.i.5c[-.=H"", """");
    patriciaTrie0.higherEntry("""");
    patriciaTrie0.selectValue(""delegate"");
    PatriciaTrie<Integer> patriciaTrie1 = null;
    patriciaTrie1 = new PatriciaTrie<Integer>((Map<? extends String, ? extends Integer>) null);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Collections_28b/src/main/java/org/apache/commons/collections4/trie/PatriciaTrie<java/lang/Integer>.java
org.apache.commons.collections4.trie.AbstractPatriciaTrie,@Test(timeout = 4000)
public void test07777() throws Throwable {
    HashMap<String, String> hashMap0 = new HashMap<String, String>();
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>(hashMap0);
    hashMap0.put(""W|81X$:qA"", ""W|81X$:qA"");
    patriciaTrie0.higherEntry(""Cannot determine prefix outside of Character boundaries"");
    patriciaTrie0.size();
    Object object0 = new Object();
    AbstractMap.SimpleImmutableEntry<Object, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, String>(object0, (String) null);
    AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<Object, String>> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<Object, String>>(""Cannot determine prefix outside of Character boundaries"", abstractMap_SimpleImmutableEntry0, 0);
    abstractPatriciaTrie_TrieEntry0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Collections_28b/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie/TrieEntry.java
org.apache.commons.collections4.trie.AbstractPatriciaTrie,@Test(timeout = 4000)
public void test07878() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.put("""", """");
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>(""must have a from or to!"", ""must have a from or to!"", 0);
    abstractPatriciaTrie_TrieEntry0.setValue(""must have a from or to!"");
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.predecessor;
    patriciaTrie0.nextEntryImpl(abstractPatriciaTrie_TrieEntry1, abstractPatriciaTrie_TrieEntry1, abstractPatriciaTrie_TrieEntry1);
    patriciaTrie0.incrementSize();
    Integer integer0 = new Integer((-3164));
    Integer integer1 = new Integer(1);
    AbstractMap.SimpleEntry<Integer, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, Object>(integer0, integer1);
    Integer integer2 = new Integer((-974));
    AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<Integer, Object>, Integer> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<Integer, Object>, Integer>(abstractMap_SimpleEntry0, integer2, 0);
    abstractPatriciaTrie_TrieEntry2.isExternalNode();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Collections_28b/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie/TrieEntry.java
org.apache.commons.collections4.trie.AbstractPatriciaTrie,@Test(timeout = 4000)
public void test07979() throws Throwable {
    String string0 = ""keyAnalyzer"";
    AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<String, Object>, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<String, Object>, String>((AbstractMap.SimpleEntry<String, Object>) null, ""keyAnalyzer"", (-1455));
    abstractPatriciaTrie_TrieEntry0.bitIndex = (-384);
    abstractPatriciaTrie_TrieEntry0.predecessor = null;
    abstractPatriciaTrie_TrieEntry0.toString();
    PatriciaTrie<AbstractMap.SimpleEntry<Integer, String>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleEntry<Integer, String>>();
    Integer integer0 = new Integer((-2));
    AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, String>(integer0, ""io,&I9JV-7?n@Zd2"");
    abstractPatriciaTrie_TrieEntry0.parent = null;
    AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<Integer, String>(abstractMap_SimpleEntry0);
    AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry2 = new AbstractMap.SimpleEntry<Integer, String>(integer0, ""io,&I9JV-7?n@Zd2"");
    patriciaTrie0.remove((Object) null);
    PatriciaTrie<Integer> patriciaTrie1 = new PatriciaTrie<Integer>();
    patriciaTrie1.put(""Entry(key=null [-384], value=keyAnalyzer, parent=null, left=null [-384], right=null, )"", integer0);
    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>(patriciaTrie1);
    patriciaTrie2.entrySet();
    PatriciaTrie<AbstractMap.SimpleImmutableEntry<Integer, Object>> patriciaTrie3 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<Integer, Object>>();
    AbstractMap.SimpleImmutableEntry<Object, String> abstractMap_SimpleImmutableEntry0 = null;
    abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, String>((Map.Entry<?, ? extends String>) null);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Collections_28b/src/main/java/java/util/AbstractMap/SimpleImmutableEntry<java/lang/Object, java/lang/String>.java
org.apache.commons.collections4.trie.AbstractPatriciaTrie,@Test(timeout = 4000)
public void test08080() throws Throwable {
    String string0 = ""keyAnalyzer"";
    AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<String, Object>, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<String, Object>, String>((AbstractMap.SimpleEntry<String, Object>) null, ""keyAnalyzer"", (-1455));
    abstractPatriciaTrie_TrieEntry0.bitIndex = (-384);
    abstractPatriciaTrie_TrieEntry0.predecessor = null;
    Map.Entry.comparingByKey();
    abstractPatriciaTrie_TrieEntry0.toString();
    PatriciaTrie<AbstractMap.SimpleEntry<Integer, String>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleEntry<Integer, String>>();
    Integer integer0 = new Integer((-2));
    AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, String>(integer0, ""io,&I9JV-7?n@Zd2"");
    abstractPatriciaTrie_TrieEntry0.parent = null;
    AbstractMap.SimpleEntry<Integer, String> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<Integer, String>(abstractMap_SimpleEntry0);
    patriciaTrie0.replace(""Entry(key=null [-384], value=keyAnalyzer, parent=null, left=null [-384], right=null, )"", abstractMap_SimpleEntry1);
    patriciaTrie0.remove((Object) null);
    PatriciaTrie<Integer> patriciaTrie1 = new PatriciaTrie<Integer>();
    patriciaTrie1.put(""Entry(key=null [-384], value=keyAnalyzer, parent=null, left=null [-384], right=null, )"", integer0);
    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>(patriciaTrie1);
    patriciaTrie2.entrySet();
    PatriciaTrie<AbstractMap.SimpleImmutableEntry<Integer, Object>> patriciaTrie3 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<Integer, Object>>();
    AbstractMap.SimpleImmutableEntry<Object, String> abstractMap_SimpleImmutableEntry0 = null;
    abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, String>((Map.Entry<?, ? extends String>) null);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Collections_28b/src/main/java/java/util/AbstractMap/SimpleImmutableEntry<java/lang/Object, java/lang/String>.java
org.apache.commons.collections4.trie.AbstractPatriciaTrie,@Test(timeout = 4000)
public void test08282() throws Throwable {
    PatriciaTrie<AbstractMap.SimpleImmutableEntry<Object, Object>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<Object, Object>>();
    patriciaTrie0.firstEntry();
    AbstractMap.SimpleEntry<String, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, String>(""h9E>@K"", ""h9E>@K"");
    AbstractMap.SimpleImmutableEntry<Object, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, String>(abstractMap_SimpleEntry0);
    AbstractMap.SimpleImmutableEntry<String, String> abstractMap_SimpleImmutableEntry1 = (AbstractMap.SimpleImmutableEntry<String, String>) mock(AbstractMap.SimpleImmutableEntry.class, new ViolatedAssumptionAnswer());
    doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(abstractMap_SimpleImmutableEntry1).toString();
    AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleImmutableEntry<Object, String>, AbstractMap.SimpleImmutableEntry<String, String>> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleImmutableEntry<Object, String>, AbstractMap.SimpleImmutableEntry<String, String>>(abstractMap_SimpleImmutableEntry0, abstractMap_SimpleImmutableEntry1, 0);
    Object object0 = abstractPatriciaTrie_TrieEntry0.getValue();
    AbstractMap.SimpleImmutableEntry<Object, Object> abstractMap_SimpleImmutableEntry2 = new AbstractMap.SimpleImmutableEntry<Object, Object>(object0, patriciaTrie0);
    patriciaTrie0.put(""h9E>@K"", abstractMap_SimpleImmutableEntry2);
    String string0 = """";
    int int0 = (-1);
    AbstractPatriciaTrie.TrieEntry<Integer, String> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Integer, String>((Integer) null, """", (-1));
    abstractPatriciaTrie_TrieEntry1.getKey();
    AbstractMap.SimpleImmutableEntry<Object, Object> abstractMap_SimpleImmutableEntry3 = new AbstractMap.SimpleImmutableEntry<Object, Object>(""Pa"", (Object) null);
    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    Map.Entry.comparingByKey((Comparator<? super Object>) comparator0);
    patriciaTrie0.put(""Pa"", abstractMap_SimpleImmutableEntry3);
    patriciaTrie0.ceilingEntry(""h9E>@K"");
    patriciaTrie0.lengthInBits(""h9E>@K"");
    patriciaTrie0.mapIterator();
    PatriciaTrie<Integer> patriciaTrie1 = new PatriciaTrie<Integer>();
    BiFunction<String, Object, Integer> biFunction0 = (BiFunction<String, Object, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
    doReturn((Object) null).when(biFunction0).apply(anyString(), any());
    BiFunction<Object, Object, Integer> biFunction1 = (BiFunction<Object, Object, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
    patriciaTrie1.computeIfPresent(""Pa"", biFunction1);
    patriciaTrie1.compute("""", biFunction0);
    patriciaTrie1.keySet();
    PatriciaTrie<Object> patriciaTrie2 = new PatriciaTrie<Object>(patriciaTrie0);
    Map<String, String> map0 = null;
    PatriciaTrie<String> patriciaTrie3 = null;
    patriciaTrie3 = new PatriciaTrie<String>(map0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Collections_28b/src/main/java/org/apache/commons/collections4/trie/PatriciaTrie<java/lang/String>.java
org.apache.commons.collections4.trie.AbstractPatriciaTrie,@Test(timeout = 4000)
public void test08585() throws Throwable {
    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();
    Integer integer0 = new Integer((-678));
    patriciaTrie0.put(""}\n"", integer0);
    Integer integer1 = new Integer((-380));
    patriciaTrie0.put("""", integer1);
    Integer integer2 = new Integer((-380));
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>("""", integer2, (-380));
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.right;
    patriciaTrie0.nextEntryInSubtree((AbstractPatriciaTrie.TrieEntry<String, Integer>) null, abstractPatriciaTrie_TrieEntry0);
    Integer integer3 = new Integer(0);
    AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = null;
    abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>((Map.Entry<?, ?>) null);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Collections_28b/src/main/java/java/util/AbstractMap/SimpleEntry<java/lang/Object, java/lang/Object>.java
org.apache.commons.collections4.trie.AbstractPatriciaTrie,@Test(timeout = 4000)
public void test09999() throws Throwable {
    PatriciaTrie<AbstractMap.SimpleImmutableEntry<Integer, String>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<Integer, String>>();
    Integer integer0 = new Integer(2516);
    AbstractMap.SimpleImmutableEntry<Integer, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Integer, String>(integer0, ""^S3Vg)0eoyu?O+iiK]"");
    AbstractMap.SimpleImmutableEntry<Integer, String> abstractMap_SimpleImmutableEntry1 = new AbstractMap.SimpleImmutableEntry<Integer, String>(abstractMap_SimpleImmutableEntry0);
    patriciaTrie0.incrementSize();
    patriciaTrie0.put(""^S3Vg)0eoyu?O+iiK]"", abstractMap_SimpleImmutableEntry1);
    patriciaTrie0.higherEntry(""org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry"");
    Integer integer1 = new Integer(0);
    AbstractMap.SimpleEntry<String, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, Object>(""cud!S,}(KP?MY"", ""org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry"");
    AbstractPatriciaTrie.TrieEntry<Integer, AbstractMap.SimpleEntry<String, Object>> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Integer, AbstractMap.SimpleEntry<String, Object>>(integer1, abstractMap_SimpleEntry0, 0);
    abstractPatriciaTrie_TrieEntry0.toString();
    AbstractPatriciaTrie.TrieEntry<Integer, Integer> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Integer, Integer>(integer1, integer1, (-891));
    abstractPatriciaTrie_TrieEntry1.isEmpty();
    AbstractMap.SimpleImmutableEntry<Integer, Integer> abstractMap_SimpleImmutableEntry2 = new AbstractMap.SimpleImmutableEntry<Integer, Integer>(integer1, integer1);
    AbstractPatriciaTrie.TrieEntry<Integer, AbstractMap.SimpleImmutableEntry<Integer, Integer>> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Integer, AbstractMap.SimpleImmutableEntry<Integer, Integer>>(integer1, abstractMap_SimpleImmutableEntry2, 0);
    abstractPatriciaTrie_TrieEntry2.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Collections_28b/src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie/TrieEntry.java
