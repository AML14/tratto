project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    Integer integer0 = new Integer(1);
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(""A{CEcN}(;:+"", integer0, 1);
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(""A{CEcN}(;:+"", integer0, 1);
    abstractPatriciaTrie_TrieEntry0.left = abstractPatriciaTrie_TrieEntry1;
    Integer integer1 = new Integer(1);
    abstractPatriciaTrie_TrieEntry0.setKeyValue(""A{CEcN}(;:+"", integer1);
    abstractPatriciaTrie_TrieEntry0.isExternalNode();
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.put(""A{CEcN}(;:+"", ""A{CEcN}(;:+"");
    patriciaTrie0.floorEntry(""A{CEcN}(;:+"");
    abstractPatriciaTrie_TrieEntry1.setValue((Integer) null);
    Collection<String> collection0 = patriciaTrie0.values();
    AbstractPatriciaTrie.TrieEntry<Object, Object> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Object, Object>(""A{CEcN}(;:+"", abstractPatriciaTrie_TrieEntry1, (-2426));
    abstractPatriciaTrie_TrieEntry2.isExternalNode();
    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>();
    patriciaTrie1.lowerEntry(""A{CEcN}(;:+"");
    AbstractMap.SimpleImmutableEntry<Object, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, Object>(collection0, integer0);
    patriciaTrie0.get((Object) null);
    AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<Object, Object>> abstractPatriciaTrie_TrieEntry3 = new AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<Object, Object>>(abstractPatriciaTrie_TrieEntry0, abstractMap_SimpleImmutableEntry0, (-1006));
    abstractPatriciaTrie_TrieEntry3.isInternalNode();
    // Undeclared exception!
    try {
        patriciaTrie1.lastKey();
        fail(""Expecting exception: NoSuchElementException"");
    } catch (NoSuchElementException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",1,
project,0,test0011,"public void test0011() throws Throwable {
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
    patriciaTrie0.previousKey(""="");
    patriciaTrie0.ceilingEntry(""Mwm'[Qp!|Y"");
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>();
    patriciaTrie1.higherEntry("""");
    PatriciaTrie<String> patriciaTrie2 = new PatriciaTrie<String>(patriciaTrie1);
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>(""!UZbyVBqi3D>\""G"", """", 0);
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.predecessor;
    patriciaTrie1.addEntry(abstractPatriciaTrie_TrieEntry1, 2);
    patriciaTrie1.selectKey(""="");
    PatriciaTrie<Integer> patriciaTrie3 = new PatriciaTrie<Integer>();
    Integer integer0 = new Integer((-1));
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(""!UZbyVBqi3D>\""G"", integer0, 2);
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry3 = abstractPatriciaTrie_TrieEntry2.right;
    // Undeclared exception!
    try {
        patriciaTrie3.nextEntryImpl((AbstractPatriciaTrie.TrieEntry<String, Integer>) null, (AbstractPatriciaTrie.TrieEntry<String, Integer>) null, (AbstractPatriciaTrie.TrieEntry<String, Integer>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",1,
project,0,test0022,"public void test0022() throws Throwable {
    HashMap<String, String> hashMap0 = new HashMap<String, String>();
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>(hashMap0);
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);
    String string0 = ""2p`5Ku8/LMa}l</nZpE"";
    String string1 = ""j5(~AGXZ"";
    patriciaTrie1.put(""2p`5Ku8/LMa}l</nZpE"", ""j5(~AGXZ"");
    hashMap0.put("""", ""j5(~AGXZ"");
    patriciaTrie0.clear();
    patriciaTrie1.put(""x^5*FXq[NZn6N@K,O"", ""x^5*FXq[NZn6N@K,O"");
    patriciaTrie0.floorEntry(""org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap"");
    PatriciaTrie<String> patriciaTrie2 = new PatriciaTrie<String>(patriciaTrie1);
    // Undeclared exception!
    try {
        patriciaTrie1.subtree((String) null, (-463), (-463));
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test0044,"public void test0044() throws Throwable {
    HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
    hashMap0.clone();
    Integer integer0 = new Integer(0);
    hashMap0.put(""%*Y1R'r"", integer0);
    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>(hashMap0);
    hashMap0.put(""m"", integer0);
    Integer integer1 = new Integer(1136);
    patriciaTrie0.prefixMap("""");
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(""f\""5\""p:y._D#`7>Z~0P"", integer1, 1136);
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(""f\""5\""p:y._D#`7>Z~0P"", integer1, 1136);
    abstractPatriciaTrie_TrieEntry0.value = null;
    abstractPatriciaTrie_TrieEntry0.left = abstractPatriciaTrie_TrieEntry1;
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry2 = abstractPatriciaTrie_TrieEntry0.parent;
    patriciaTrie0.nextEntry((AbstractPatriciaTrie.TrieEntry<String, Integer>) null);
    patriciaTrie0.getNearestEntryForKey((String) null, 1136);
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>();
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry3 = new AbstractPatriciaTrie.TrieEntry<String, String>("""", ""%*Y1R'r"", 0);
    abstractPatriciaTrie_TrieEntry3.setValue(""a1k["");
    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    Map.Entry.comparingByKey((Comparator<? super Integer>) comparator0);
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry4 = new AbstractPatriciaTrie.TrieEntry<String, String>(""%*Y1R'r"", ""%*Y1R'r"", 0);
    patriciaTrie1.previousEntry(abstractPatriciaTrie_TrieEntry4);
    patriciaTrie1.headMap(""m"");
    PatriciaTrie<Object> patriciaTrie2 = new PatriciaTrie<Object>();
    Integer integer2 = new Integer(0);
    // Undeclared exception!
    try {
        patriciaTrie2.getEntry(integer2);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // java.lang.Integer cannot be cast to java.lang.String
        //
        verifyException(""org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer"", e);
    }
}",0,
project,0,test0055,"public void test0055() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.put("""", ""?Z"");
    patriciaTrie0.put("" + "", "",ee)#(<d};,Q57g"");
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);
    patriciaTrie0.nextKey("""");
    patriciaTrie0.getEntry((Object) null);
    patriciaTrie1.ceilingEntry(""left="");
    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>();
    patriciaTrie1.get((Object) null);
    Integer integer0 = new Integer(116);
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>((String) null, integer0, 116);
    patriciaTrie0.incrementSize();
    Integer integer1 = new Integer((-711));
    patriciaTrie2.put(""?Z"", integer1);
    abstractPatriciaTrie_TrieEntry0.setValue(integer0);
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.predecessor;
    patriciaTrie1.isBitSet(""left="", 0, 0);
    patriciaTrie2.addEntry(abstractPatriciaTrie_TrieEntry1, 116);
    // Undeclared exception!
    try {
        patriciaTrie1.previousKey((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",0,
project,0,test0066,"public void test0066() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
    patriciaTrie0.put(""@/$<UTx@O"", ""@/$<UTx@O"");
    patriciaTrie0.computeIfPresent(""ToKey is out of range: "", biFunction0);
    patriciaTrie0.floorEntry(""org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry"");
}",0,
project,0,test0099,"public void test0099() throws Throwable {
    HashMap<String, String> hashMap0 = new HashMap<String, String>();
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>(hashMap0);
    patriciaTrie0.entrySet();
    Set<Map.Entry<String, String>> set0 = (Set<Map.Entry<String, String>>) patriciaTrie0.entrySet();
    AbstractPatriciaTrie.TrieEntry<Object, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Object, String>(set0, ""Ur>+bf"", 0);
    patriciaTrie0.values();
    AbstractPatriciaTrie.TrieEntry<Object, String> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Object, String>((Object) null, ""'tcP#JyA{:\"",n+F#HSq"", (-1));
    abstractPatriciaTrie_TrieEntry0.right = abstractPatriciaTrie_TrieEntry1;
    Integer integer0 = new Integer(0);
    patriciaTrie0.subtree(""u@;uw1LS`{,s8u`5"", 0, (-1));
    Integer integer1 = new Integer(0);
    AbstractPatriciaTrie.TrieEntry<Integer, Object> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Integer, Object>(integer0, integer1, (-55));
    hashMap0.put(""K4#n2I+47C?"", ""K4#n2I+47C?"");
    Integer integer2 = (Integer) abstractPatriciaTrie_TrieEntry2.value;
    abstractPatriciaTrie_TrieEntry0.bitIndex = 0;
    abstractPatriciaTrie_TrieEntry0.key = (Object) integer2;
    AbstractPatriciaTrie.isValidUplink(abstractPatriciaTrie_TrieEntry0, abstractPatriciaTrie_TrieEntry0);
    PatriciaTrie<Integer> patriciaTrie1 = new PatriciaTrie<Integer>();
    patriciaTrie1.entrySet();
    patriciaTrie1.ceilingEntry(""org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry"");
    patriciaTrie1.put(""K4#n2I+47C?"", integer1);
    patriciaTrie1.floorEntry(""Cannot determine prefix outside of Character boundaries"");
    PatriciaTrie<Object> patriciaTrie2 = new PatriciaTrie<Object>();
    BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
    patriciaTrie2.computeIfPresent(""org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry"", biFunction0);
    patriciaTrie2.selectKey(""Cannot determine prefix outside of Character boundaries"");
}",0,
project,0,test01010,"public void test01010() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.ceilingEntry("""");
    patriciaTrie0.put("""", """");
    patriciaTrie0.prefixMap(""j($ldQy56"");
    HashMap<String, String> hashMap0 = new HashMap<String, String>();
    PatriciaTrie<Comparable<String>> patriciaTrie1 = new PatriciaTrie<Comparable<String>>(hashMap0);
    hashMap0.put("""", """");
    patriciaTrie1.headMap("""");
}",0,
project,0,test01212,"public void test01212() throws Throwable {
    PatriciaTrie<AbstractMap.SimpleEntry<Integer, Object>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleEntry<Integer, Object>>();
    Integer integer0 = new Integer((-3));
    AbstractMap.SimpleEntry<Integer, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, Object>(integer0, (Object) null);
    // Undeclared exception!
    try {
        patriciaTrie0.put((String) null, abstractMap_SimpleEntry0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // Key cannot be null
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",1,
project,0,test01313,"public void test01313() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>(patriciaTrie0);
    patriciaTrie1.comparator();
}",0,
project,0,test01414,"public void test01414() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.put(""Cannot determine prefix outside of Character boundaries"", ""Cannot determine prefix outside of Character boundaries"");
    patriciaTrie0.modCount = (-495);
    patriciaTrie0.values();
    PatriciaTrie<AbstractMap.SimpleImmutableEntry<String, String>> patriciaTrie1 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<String, String>>();
    patriciaTrie1.keySet();
}",1,
project,0,test01515,"public void test01515() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    HashMap<String, String> hashMap0 = new HashMap<String, String>(patriciaTrie0);
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(hashMap0);
    patriciaTrie1.subMap(""(G\u0002Ohkk{/%8tCT"", ""<B"");
}",0,
project,0,test01616,"public void test01616() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    // Undeclared exception!
    try {
        patriciaTrie0.subMap(""kyYa;[.9|j|WbufZ"", "" is not an internal Entry!"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // fromKey > toKey
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap"", e);
    }
}",1,
project,0,test01717,"public void test01717() throws Throwable {
    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();
    Object object0 = new Object();
    // Undeclared exception!
    try {
        patriciaTrie0.containsKey(object0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // java.lang.Object cannot be cast to java.lang.String
        //
        verifyException(""org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer"", e);
    }
}",0,
project,0,test01818,"public void test01818() throws Throwable {
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
    patriciaTrie0.put("""", (Object) null);
    patriciaTrie0.getOrDefault((Object) null, (Object) null);
    String string0 = ""]={\n"";
    patriciaTrie0.higherEntry(""]={\n"");
    patriciaTrie0.comparator();
    Object object0 = new Object();
    // Undeclared exception!
    try {
        patriciaTrie0.remove(object0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // java.lang.Object cannot be cast to java.lang.String
        //
        verifyException(""org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer"", e);
    }
}",0,
project,0,test01919,"public void test01919() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);
    patriciaTrie1.put(""org.apache.commons.collections4.trie.PatriciaTrie"", ""org.apache.commons.collections4.trie.PatriciaTrie"");
    int int0 = 2032;
    patriciaTrie0.put(""org.apache.commons.collections4.trie.PatriciaTrie"", ""keyAnalyzer"");
    // Undeclared exception!
    try {
        patriciaTrie1.subtree(""org.apache.commons.collections4.trie.PatriciaTrie"", 0, 2032);
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test02020,"public void test02020() throws Throwable {
    PatriciaTrie<AbstractMap.SimpleImmutableEntry<String, Integer>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<String, Integer>>();
    patriciaTrie0.decrementSize();
    patriciaTrie0.decrementSize();
    String string0 = null;
    Integer integer0 = new Integer(893);
    AbstractMap.SimpleImmutableEntry<String, Integer> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<String, Integer>((String) null, integer0);
    AbstractMap.SimpleImmutableEntry<String, Integer> abstractMap_SimpleImmutableEntry1 = new AbstractMap.SimpleImmutableEntry<String, Integer>(abstractMap_SimpleImmutableEntry0);
    // Undeclared exception!
    try {
        patriciaTrie0.put((String) null, abstractMap_SimpleImmutableEntry1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // Key cannot be null
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",1,
project,0,test02121,"public void test02121() throws Throwable {
    PatriciaTrie<AbstractMap.SimpleEntry<Object, Object>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleEntry<Object, Object>>();
    Object object0 = new Object();
    AbstractPatriciaTrie.TrieEntry<Object, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Object, String>(object0, ""w"", 0);
    abstractPatriciaTrie_TrieEntry0.setValue(""w"");
    AbstractPatriciaTrie.TrieEntry<Object, String> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Object, String>(object0, ""w"", 543);
    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    Map.Entry.comparingByKey((Comparator<? super Integer>) comparator0);
    abstractPatriciaTrie_TrieEntry0.left = abstractPatriciaTrie_TrieEntry1;
    Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    Map.Entry.comparingByValue();
    abstractPatriciaTrie_TrieEntry1.bitIndex = (-2342);
    Comparator<Object> comparator2 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    Map.Entry.comparingByValue((Comparator<? super Object>) comparator2);
    abstractPatriciaTrie_TrieEntry1.parent = abstractPatriciaTrie_TrieEntry0;
    Map.Entry.comparingByValue((Comparator<? super Object>) comparator1);
    abstractPatriciaTrie_TrieEntry0.toString();
    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>();
    patriciaTrie1.keySet();
    HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>(hashMap0);
    PatriciaTrie<Integer> patriciaTrie3 = new PatriciaTrie<Integer>(patriciaTrie2);
    PatriciaTrie<Integer> patriciaTrie4 = new PatriciaTrie<Integer>(patriciaTrie3);
    PatriciaTrie<Integer> patriciaTrie5 = new PatriciaTrie<Integer>(patriciaTrie4);
    // Undeclared exception!
    try {
        patriciaTrie5.subMap(""w"", ""Cannot determine prefix outside of Character boundaries"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // fromKey > toKey
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap"", e);
    }
}",1,
project,0,test02222,"public void test02222() throws Throwable {
    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();
    String string0 = ""p1v\\kXa(&=a='<@]7\"""";
    Integer integer0 = new Integer(404);
    patriciaTrie0.put(""p1vkXa(&=a='<@]7\"""", integer0);
    int int0 = 0;
    Integer integer1 = new Integer(0);
    patriciaTrie0.put(""]={\n"", integer1);
    Integer integer2 = new Integer(0);
    patriciaTrie0.replace((String) null, integer2);
    int int1 = 1479;
    // Undeclared exception!
    try {
        patriciaTrie0.subtree("""", 1479, 1479);
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test02323,"public void test02323() throws Throwable {
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>(patriciaTrie0);
    PatriciaTrie<Object> patriciaTrie2 = new PatriciaTrie<Object>(patriciaTrie1);
    // Undeclared exception!
    try {
        patriciaTrie2.getEntry(patriciaTrie0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.apache.commons.collections4.trie.PatriciaTrie cannot be cast to java.lang.String
        //
        verifyException(""org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer"", e);
    }
}",0,
project,0,test02525,"public void test02525() throws Throwable {
    HashMap<String, String> hashMap0 = new HashMap<String, String>();
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>(hashMap0);
    patriciaTrie0.headMap("""");
}",0,
project,0,test02727,"public void test02727() throws Throwable {
    HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
    Integer integer0 = new Integer(0);
    hashMap0.put(""Tf"", integer0);
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>(hashMap0);
    hashMap0.put(""Tf"", (Integer) null);
    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry0 = patriciaTrie0.subtree(""Tf"", 0, 0);
    patriciaTrie0.selectValue("""");
    patriciaTrie0.selectKey("""");
    patriciaTrie0.clear();
    AbstractPatriciaTrie.TrieEntry<Object, String> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Object, String>(""Tf"", (String) null, 1);
    Integer integer1 = new Integer(1);
    AbstractPatriciaTrie.TrieEntry<Object, String> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Object, String>(integer1, ""Tf"", (-3825));
    abstractPatriciaTrie_TrieEntry1.parent = abstractPatriciaTrie_TrieEntry2;
    abstractPatriciaTrie_TrieEntry1.isExternalNode();
    abstractPatriciaTrie_TrieEntry0.toString();
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>();
    // Undeclared exception!
    try {
        patriciaTrie1.nextKey((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",1,
project,0,test02828,"public void test02828() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    AbstractMap.SimpleEntry<String, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, Object>(""-!d/_w$.nUCsF9i[S0"", patriciaTrie0);
    AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<String, Object>, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<String, Object>, String>(abstractMap_SimpleEntry0, """", (-1404));
    String string0 = abstractPatriciaTrie_TrieEntry0.value;
    patriciaTrie0.remove((Object) """");
    patriciaTrie0.mapIterator();
}",0,
project,0,test03030,"public void test03030() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);
    int int0 = 32768;
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>(""eN7j"", ""eN7j"", 32768);
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.right;
    // Undeclared exception!
    try {
        patriciaTrie1.followRight((AbstractPatriciaTrie.TrieEntry<String, String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",0,
project,0,test03131,"public void test03131() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.lastEntry();
}",0,
project,0,test03232,"public void test03232() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.get(""org.apache.commons.collections4.trie.PatriciaTrie"");
}",0,
project,0,test03333,"public void test03333() throws Throwable {
    PatriciaTrie<AbstractMap.SimpleEntry<String, String>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleEntry<String, String>>();
    patriciaTrie0.higherEntry("""");
}",0,
project,0,test03434,"public void test03434() throws Throwable {
    Integer integer0 = new Integer((-1204));
    AbstractPatriciaTrie.TrieEntry<Integer, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Integer, String>(integer0, ""org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry"", (-1204));
    abstractPatriciaTrie_TrieEntry0.equals((Object) null);
    abstractPatriciaTrie_TrieEntry0.isEmpty();
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, String>(""org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry"", ""org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry"", 5128);
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry2 = abstractPatriciaTrie_TrieEntry1.parent;
    // Undeclared exception!
    try {
        patriciaTrie0.nextEntryImpl((AbstractPatriciaTrie.TrieEntry<String, String>) null, (AbstractPatriciaTrie.TrieEntry<String, String>) null, abstractPatriciaTrie_TrieEntry1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",0,
project,0,test03535,"public void test03535() throws Throwable {
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>("""", """", (-52));
    AbstractPatriciaTrie.isValidUplink(abstractPatriciaTrie_TrieEntry0, abstractPatriciaTrie_TrieEntry0);
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.ceilingEntry("""");
    patriciaTrie0.size();
    Integer integer0 = new Integer(0);
    AbstractPatriciaTrie.TrieEntry<Object, Object> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Object, Object>((Object) null, integer0, (-52));
    AbstractPatriciaTrie.TrieEntry<Object, Object> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Object, Object>(integer0, """", (-1));
    abstractPatriciaTrie_TrieEntry2.value = (Object) abstractPatriciaTrie_TrieEntry1;
    AbstractPatriciaTrie.TrieEntry abstractPatriciaTrie_TrieEntry3 = (AbstractPatriciaTrie.TrieEntry) abstractPatriciaTrie_TrieEntry2.value;
    abstractPatriciaTrie_TrieEntry1.key = (Object) abstractPatriciaTrie_TrieEntry3;
    abstractPatriciaTrie_TrieEntry1.isInternalNode();
    HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
    PatriciaTrie<Integer> patriciaTrie1 = new PatriciaTrie<Integer>(hashMap0);
    patriciaTrie1.clear();
}",0,
project,0,test03636,"public void test03636() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.lowerEntry("""");
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);
    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>();
    patriciaTrie2.selectKey(""H)dRl ]}I.+mb'"");
    patriciaTrie2.toString();
    patriciaTrie2.floorEntry("""");
    Integer integer0 = new Integer(0);
    AbstractPatriciaTrie.TrieEntry<Integer, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Integer, String>(integer0, ""Trie[0]={\n}\n"", 0);
    abstractPatriciaTrie_TrieEntry0.isEmpty();
    patriciaTrie1.subMap("""", """");
}",0,
project,0,test03838,"public void test03838() throws Throwable {
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Object>((String) null, (Object) null, 0);
    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.right;
    // Undeclared exception!
    try {
        patriciaTrie0.removeEntry((AbstractPatriciaTrie.TrieEntry<String, Object>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",0,
project,0,test03939,"public void test03939() throws Throwable {
    HashMap<String, String> hashMap0 = new HashMap<String, String>();
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>(hashMap0);
    String string0 = ""M&Us"";
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>(""org.apache.commons.collections4.trie.KeyAnalyzer"", ""m2g"", 16);
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.parent;
    // Undeclared exception!
    try {
        patriciaTrie0.previousEntry((AbstractPatriciaTrie.TrieEntry<String, String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",1,
project,0,test04040,"public void test04040() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);
    PatriciaTrie<String> patriciaTrie2 = new PatriciaTrie<String>(patriciaTrie1);
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>(""fqh^ xd/<EG"", ""Buy(g/,[+"", 1052);
    patriciaTrie1.nextEntry(abstractPatriciaTrie_TrieEntry0);
    patriciaTrie2.put("""", (String) null);
    patriciaTrie2.entrySet();
}",0,
project,0,test04141,"public void test04141() throws Throwable {
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
    patriciaTrie0.previousKey(""="");
    patriciaTrie0.ceilingEntry(""Mwm'[Qp!|Y"");
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>();
    PatriciaTrie<String> patriciaTrie2 = new PatriciaTrie<String>(patriciaTrie1);
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>(""!UZbyVBqi3D>\""G"", """", 0);
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.predecessor;
    patriciaTrie1.addEntry(abstractPatriciaTrie_TrieEntry1, 2);
    PatriciaTrie<String> patriciaTrie3 = new PatriciaTrie<String>(patriciaTrie2);
    patriciaTrie3.selectKey(""="");
}",0,
project,0,test04242,"public void test04242() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);
    patriciaTrie1.firstEntry();
}",0,
project,0,test04444,"public void test04444() throws Throwable {
    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();
    patriciaTrie0.prefixMap("""");
}",0,
project,0,test04545,"public void test04545() throws Throwable {
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
    PatriciaTrie<AbstractMap.SimpleImmutableEntry<String, Integer>> patriciaTrie1 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<String, Integer>>();
    patriciaTrie1.containsKey(""lXsl]^JP'A_"");
}",0,
project,0,test04646,"public void test04646() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);
    PatriciaTrie<Object> patriciaTrie2 = new PatriciaTrie<Object>(patriciaTrie1);
    patriciaTrie2.tailMap("""");
}",0,
project,0,test04747,"public void test04747() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    int int0 = (-3847);
    Integer integer0 = new Integer((-3847));
    // Undeclared exception!
    try {
        patriciaTrie0.get(integer0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // java.lang.Integer cannot be cast to java.lang.String
        //
        verifyException(""org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer"", e);
    }
}",0,
project,0,test04848,"public void test04848() throws Throwable {
    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();
    patriciaTrie0.lowerEntry(""d"");
    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>(patriciaTrie0);
    PatriciaTrie<AbstractMap.SimpleEntry<Integer, Object>> patriciaTrie2 = new PatriciaTrie<AbstractMap.SimpleEntry<Integer, Object>>();
    patriciaTrie2.compareKeys((String) null, "";?^atJ)"");
    patriciaTrie2.floorEntry(""d"");
    PatriciaTrie<String> patriciaTrie3 = new PatriciaTrie<String>();
    PatriciaTrie<String> patriciaTrie4 = new PatriciaTrie<String>(patriciaTrie3);
    Integer integer0 = new Integer(1405);
    // Undeclared exception!
    try {
        patriciaTrie4.containsKey(integer0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // java.lang.Integer cannot be cast to java.lang.String
        //
        verifyException(""org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer"", e);
    }
}",0,
project,0,test04949,"public void test04949() throws Throwable {
    HashMap<String, String> hashMap0 = new HashMap<String, String>();
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>(hashMap0);
    patriciaTrie0.entrySet();
    Set<Map.Entry<String, String>> set0 = (Set<Map.Entry<String, String>>) patriciaTrie0.entrySet();
    AbstractPatriciaTrie.TrieEntry<Object, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Object, String>(set0, ""Ur>+bf"", 0);
    patriciaTrie0.values();
    AbstractPatriciaTrie.TrieEntry<Object, String> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Object, String>((Object) null, ""'tc#JyA{:\"",n+F#HSq"", (-1));
    abstractPatriciaTrie_TrieEntry0.right = abstractPatriciaTrie_TrieEntry1;
    Integer integer0 = new Integer(0);
    patriciaTrie0.subtree(""u@;uw1LS`{,s8u`5"", 0, (-1));
    Integer integer1 = new Integer(0);
    AbstractPatriciaTrie.TrieEntry<Integer, Object> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Integer, Object>(integer0, integer1, (-55));
    hashMap0.put(""K4#n2I+47C?"", ""K4#n2I+47C?"");
    Integer integer2 = (Integer) abstractPatriciaTrie_TrieEntry2.value;
    abstractPatriciaTrie_TrieEntry0.bitIndex = 0;
    abstractPatriciaTrie_TrieEntry0.key = (Object) integer2;
    AbstractPatriciaTrie.isValidUplink(abstractPatriciaTrie_TrieEntry0, abstractPatriciaTrie_TrieEntry0);
    PatriciaTrie<Integer> patriciaTrie1 = new PatriciaTrie<Integer>();
    patriciaTrie1.ceilingEntry(""org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry"");
    patriciaTrie1.put(""K4#n2I+47C?"", integer1);
    patriciaTrie1.floorEntry(""Cannot determine prefix outside of Character boundaries"");
    PatriciaTrie<Object> patriciaTrie2 = new PatriciaTrie<Object>();
    BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
    patriciaTrie2.computeIfPresent(""org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry"", biFunction0);
    patriciaTrie2.selectKey(""Cannot determine prefix outside of Character boundaries"");
}",0,
project,0,test05050,"public void test05050() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.put("":_;y3k{)Y64]NjJ"", ""[Mi*>9DTb%0H?K:}|"");
    patriciaTrie0.remove((Object) null);
    patriciaTrie0.modCount = 0;
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>((String) null, (String) null, 0);
    patriciaTrie1.put(""0{nL*"", "" is not an internal Entry!"");
    String string0 = abstractPatriciaTrie_TrieEntry0.value;
    patriciaTrie0.containsKey((Object) null);
    patriciaTrie0.firstEntry();
    patriciaTrie1.clear();
    patriciaTrie0.decrementSize();
    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>();
    patriciaTrie2.selectKey("""");
    PatriciaTrie<Object> patriciaTrie3 = new PatriciaTrie<Object>(patriciaTrie2);
    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, Object>(""bq h}>0_"", """", 1);
    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry2 = abstractPatriciaTrie_TrieEntry1.parent;
    // Undeclared exception!
    try {
        patriciaTrie3.followRight((AbstractPatriciaTrie.TrieEntry<String, Object>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",0,
project,0,test05151,"public void test05151() throws Throwable {
    PatriciaTrie<AbstractMap.SimpleImmutableEntry<Integer, Object>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<Integer, Object>>();
    // Undeclared exception!
    try {
        patriciaTrie0.firstKey();
        fail(""Expecting exception: NoSuchElementException"");
    } catch (NoSuchElementException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",1,
project,0,test05252,"public void test05252() throws Throwable {
    HashMap<String, String> hashMap0 = new HashMap<String, String>();
    hashMap0.put(""\n"", "" is not an internal Entry!"");
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>(hashMap0);
    patriciaTrie0.replace(""parent="", (Object) ""parent="", (Object) ""parent="");
    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>(patriciaTrie0);
    patriciaTrie1.firstKey();
}",1,
project,0,test05353,"public void test05353() throws Throwable {
    PatriciaTrie<AbstractMap.SimpleImmutableEntry<Object, Object>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<Object, Object>>();
    int int0 = (-2446);
    patriciaTrie0.getNearestEntryForKey(""+W8%!;6Y.}"", (-2446));
    // Undeclared exception!
    try {
        patriciaTrie0.firstKey();
        fail(""Expecting exception: NoSuchElementException"");
    } catch (NoSuchElementException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",1,
project,0,test05454,"public void test05454() throws Throwable {
    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();
    Integer integer0 = new Integer(541);
    patriciaTrie0.nextKey(""9S3V1f&zERN`,("");
    patriciaTrie0.put("""", integer0);
    patriciaTrie0.put(""9S3V1f&zERN`,("", integer0);
    patriciaTrie0.bitIndex((String) null, ""9S3V1f&zERN`,("");
    Integer integer1 = new Integer(541);
    patriciaTrie0.replace(""delegate"", (Integer) null, integer1);
    patriciaTrie0.getNearestEntryForKey((String) null, 1);
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>();
    patriciaTrie1.firstEntry();
}",0,
project,0,test05555,"public void test05555() throws Throwable {
    AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<Object, Object>, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<Object, Object>, String>((AbstractMap.SimpleEntry<Object, Object>) null, """", (-1));
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, Object>("""", (Object) null, 1);
    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry2 = abstractPatriciaTrie_TrieEntry1.left;
    patriciaTrie0.followLeft(abstractPatriciaTrie_TrieEntry2);
}",0,
project,0,test05656,"public void test05656() throws Throwable {
    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();
    PatriciaTrie<Integer> patriciaTrie1 = new PatriciaTrie<Integer>(patriciaTrie0);
    Integer integer0 = new Integer(1699);
    patriciaTrie1.put(""RR?y[B]/$?hq"", integer0);
    patriciaTrie1.lastKey();
}",1,
project,0,test05757,"public void test05757() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    PatriciaTrie<AbstractMap.SimpleEntry<Object, String>> patriciaTrie1 = new PatriciaTrie<AbstractMap.SimpleEntry<Object, String>>();
    Integer integer0 = new Integer(1162);
    AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, String>(integer0, """");
    patriciaTrie1.put("")4EtKa*"", abstractMap_SimpleEntry0);
    // Undeclared exception!
    try {
        patriciaTrie1.tailMap((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have a from or to!
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap"", e);
    }
}",0,
project,0,test05858,"public void test05858() throws Throwable {
    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();
    patriciaTrie0.firstEntry();
    Integer integer0 = new Integer(186);
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(""org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator"", integer0, 186);
    // Undeclared exception!
    try {
        patriciaTrie0.lastKey();
        fail(""Expecting exception: NoSuchElementException"");
    } catch (NoSuchElementException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",1,
project,0,test06060,"public void test06060() throws Throwable {
    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();
    Integer integer0 = new Integer((-1));
    Integer integer1 = new Integer((-7334));
    patriciaTrie0.put(""RX1q!2W}t}>3o"", integer1);
    patriciaTrie0.put(""org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry"", integer0);
    patriciaTrie0.put(""org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry"", integer0);
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = null;
    patriciaTrie0.nextEntry((AbstractPatriciaTrie.TrieEntry<String, Integer>) null);
    Integer integer2 = new Integer((-1));
    patriciaTrie0.put(""uSpBVc{Z,V"", integer2);
    patriciaTrie0.ceilingEntry(""uSpBVc{Z,V"");
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>();
    patriciaTrie1.select(""uSpBVc{Z,V"");
    // Undeclared exception!
    try {
        patriciaTrie1.firstKey();
        fail(""Expecting exception: NoSuchElementException"");
    } catch (NoSuchElementException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",1,
project,0,test06161,"public void test06161() throws Throwable {
    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();
    Integer integer0 = new Integer(0);
    patriciaTrie0.put("""", integer0);
    patriciaTrie0.previousKey("""");
    patriciaTrie0.nextKey(""3PeJLNRnnQK/,](_"");
    PatriciaTrie<Integer> patriciaTrie1 = new PatriciaTrie<Integer>(patriciaTrie0);
    Integer integer1 = new Integer(0);
    patriciaTrie1.putIfAbsent("""", integer1);
    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>(patriciaTrie1);
    AbstractPatriciaTrie.TrieEntry<Integer, Object> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Integer, Object>(integer1, (Object) null, 0);
    abstractPatriciaTrie_TrieEntry0.getValue();
    patriciaTrie2.getEntry((Object) null);
}",0,
project,0,test06262,"public void test06262() throws Throwable {
    Integer integer0 = new Integer((-122));
    AbstractPatriciaTrie.TrieEntry<Object, Object> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Object, Object>(integer0, integer0, (-122));
    abstractPatriciaTrie_TrieEntry0.isExternalNode();
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.comparator();
    AbstractMap.SimpleImmutableEntry<Object, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, Object>(abstractPatriciaTrie_TrieEntry0);
    abstractPatriciaTrie_TrieEntry0.bitIndex = 447;
    AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<Object, Object>> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<Object, Object>>(abstractPatriciaTrie_TrieEntry0, abstractMap_SimpleImmutableEntry0, (-122));
    abstractPatriciaTrie_TrieEntry1.isInternalNode();
    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>(patriciaTrie0);
    patriciaTrie1.selectKey(""{ffRQe%y7G."");
    String string0 = ""FromKey is out of range: "";
    patriciaTrie1.prefixMap(""FromKey is out of range: "");
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<String, String>(""`^F$;>C=8bxm)6w_FU"", ""{ffRQe%y7G."", 0);
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry3 = abstractPatriciaTrie_TrieEntry2.parent;
    // Undeclared exception!
    try {
        patriciaTrie0.followLeft((AbstractPatriciaTrie.TrieEntry<String, String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",0,
project,0,test06363,"public void test06363() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.put(""s{MX;X0n/.7C"", """");
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>(""}d5[47a"", ""}d5[47a"", 65);
    patriciaTrie0.nextEntryInSubtree(abstractPatriciaTrie_TrieEntry0, abstractPatriciaTrie_TrieEntry0);
    // Undeclared exception!
    try {
        AbstractPatriciaTrie.isValidUplink(abstractPatriciaTrie_TrieEntry0, (AbstractPatriciaTrie.TrieEntry<?, ?>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",0,
project,0,test06464,"public void test06464() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.firstEntry();
    patriciaTrie0.putIfAbsent(""ToKey is out of range: "", ""ToKey is out of range: "");
    patriciaTrie0.put(""@/$<UTx@O"", ""@/$<UTx@O"");
    patriciaTrie0.floorEntry(""org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry"");
    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>();
    patriciaTrie1.headMap(""org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry"");
}",0,
project,0,test06565,"public void test06565() throws Throwable {
    Integer integer0 = new Integer(1);
    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Object>("")D>pE/KPb:ub(d"", integer0, (-647));
    abstractPatriciaTrie_TrieEntry0.toString();
    Object object0 = abstractPatriciaTrie_TrieEntry0.setValue("")D>pE/KPb:ub(d"");
    abstractPatriciaTrie_TrieEntry0.toString();
    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();
    PatriciaTrie<Integer> patriciaTrie1 = new PatriciaTrie<Integer>(patriciaTrie0);
    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>(patriciaTrie1);
    patriciaTrie0.nextKey(""Entry(key=)D>pE/KPb:ub(d [-647], value=)D>pE/KPb:ub(d, parent=null, left=)D>pE/KPb:ub(d [-647], right=null, predecessor=)D>pE/KPb:ub(d [-647])"");
    PatriciaTrie<Integer> patriciaTrie3 = new PatriciaTrie<Integer>(patriciaTrie2);
    patriciaTrie3.decrementSize();
    abstractPatriciaTrie_TrieEntry0.value = object0;
    BiFunction<Object, Integer, Integer> biFunction0 = (BiFunction<Object, Integer, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
    patriciaTrie3.computeIfPresent(""IcqWo"", biFunction0);
    patriciaTrie3.size();
    patriciaTrie1.put(""6}%5!O?u@"", integer0);
    patriciaTrie1.prefixMap(""*DfI3?H~"");
    Integer integer1 = new Integer(1);
    AbstractPatriciaTrie.TrieEntry<Object, Object> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Object, Object>(integer1, patriciaTrie2, 1);
    abstractPatriciaTrie_TrieEntry1.isExternalNode();
    AbstractPatriciaTrie.isValidUplink(abstractPatriciaTrie_TrieEntry1, abstractPatriciaTrie_TrieEntry0);
    patriciaTrie3.clear();
}",0,
project,0,test06666,"public void test06666() throws Throwable {
    PatriciaTrie<AbstractMap.SimpleEntry<Integer, Integer>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleEntry<Integer, Integer>>();
    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>();
    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Object>("" > "", patriciaTrie0, 1092);
    Map.Entry.comparingByValue();
    patriciaTrie1.followRight(abstractPatriciaTrie_TrieEntry0);
}",0,
project,0,test06767,"public void test06767() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.decrementSize();
    // Undeclared exception!
    try {
        patriciaTrie0.firstKey();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",1,
project,0,test06868,"public void test06868() throws Throwable {
    PatriciaTrie<AbstractMap.SimpleEntry<String, String>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleEntry<String, String>>();
    String string0 = """";
    String string1 = ""  "";
    AbstractMap.SimpleEntry<String, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, String>("";\""EH e$C)$JC"", ""  "");
    int int0 = 0;
    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    Map.Entry.comparingByKey((Comparator<? super AbstractMap.SimpleEntry<String, String>>) comparator0);
    AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, String>> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, String>>("""", abstractMap_SimpleEntry0, 0);
    String string2 = ""org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry"";
    abstractPatriciaTrie_TrieEntry0.key = ""org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry"";
    Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    Map.Entry.comparingByKey((Comparator<? super AbstractMap.SimpleEntry<String, String>>) comparator1);
    patriciaTrie0.values();
    AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, String>> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.parent;
    // Undeclared exception!
    try {
        patriciaTrie0.addEntry((AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, String>>) null, 0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",1,
project,0,test06969,"public void test06969() throws Throwable {
    HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>(hashMap0);
    patriciaTrie0.nextKey("""");
    patriciaTrie0.select(""io,acXLpb#,Gs8"");
}",0,
project,0,test07070,"public void test07070() throws Throwable {
    HashMap<String, String> hashMap0 = new HashMap<String, String>();
    HashMap<String, String> hashMap1 = new HashMap<String, String>(hashMap0);
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>(hashMap1);
    hashMap1.put(""org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap"", ""org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap"");
    hashMap1.put(""org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet"", ""8;H3Ii|6^3Dqir{F1("");
    patriciaTrie0.put(""O=`KmYH5bQr"", (Object) null);
    patriciaTrie0.put(""org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet"", (Object) null);
    patriciaTrie0.lastEntry();
    PatriciaTrie<AbstractMap.SimpleEntry<String, String>> patriciaTrie1 = new PatriciaTrie<AbstractMap.SimpleEntry<String, String>>();
    // Undeclared exception!
    try {
        patriciaTrie1.firstKey();
        fail(""Expecting exception: NoSuchElementException"");
    } catch (NoSuchElementException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",1,
project,0,test07272,"public void test07272() throws Throwable {
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
    patriciaTrie0.put("", "", "", "");
    patriciaTrie0.higherEntry(""<Qe1H.+)QZ<ZjO *{X("");
    HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
    PatriciaTrie<Integer> patriciaTrie1 = new PatriciaTrie<Integer>(hashMap0);
    // Undeclared exception!
    try {
        patriciaTrie1.followLeft((AbstractPatriciaTrie.TrieEntry<String, Integer>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",0,
project,0,test07373,"public void test07373() throws Throwable {
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
    patriciaTrie0.put(""C]6DQ/ahxA"", ""C]6DQ/ahxA"");
    patriciaTrie0.nextEntry((AbstractPatriciaTrie.TrieEntry<String, Object>) null);
}",0,
project,0,test07474,"public void test07474() throws Throwable {
    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();
    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>(patriciaTrie0);
    patriciaTrie1.subMap("""", """");
    Integer integer0 = new Integer((-1));
    patriciaTrie0.put("""", integer0);
    patriciaTrie1.put("""", """");
    patriciaTrie1.headMap("""");
    patriciaTrie1.size();
    PatriciaTrie<String> patriciaTrie2 = new PatriciaTrie<String>();
    PatriciaTrie<String> patriciaTrie3 = new PatriciaTrie<String>(patriciaTrie2);
    patriciaTrie3.put("""", ""EivOMO-#cT"");
    patriciaTrie3.keySet();
    Integer integer1 = new Integer(1258);
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>("""", integer1, 1);
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.parent;
    patriciaTrie0.nextEntry((AbstractPatriciaTrie.TrieEntry<String, Integer>) null);
    patriciaTrie1.remove((Object) ""VZU4)YcLr_nAw"");
}",0,
project,0,test07676,"public void test07676() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.put("""", """");
    patriciaTrie0.put("""", (String) null);
    String string0 = null;
    // Undeclared exception!
    try {
        patriciaTrie0.headMap((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // must have a from or to!
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap"", e);
    }
}",0,
project,0,test08181,"public void test08181() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.lengthInBits("""");
    patriciaTrie0.put(""Entry("", """");
    patriciaTrie0.ceilingEntry("""");
    Integer integer0 = new Integer((-2693));
    // Undeclared exception!
    try {
        patriciaTrie0.remove((Object) integer0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // java.lang.Integer cannot be cast to java.lang.String
        //
        verifyException(""org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer"", e);
    }
}",0,
project,0,test08383,"public void test08383() throws Throwable {
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
    String string0 = """";
    patriciaTrie0.select("""");
    patriciaTrie0.put(""WW X"", ""WW X"");
    String string1 = ""9}F"";
    patriciaTrie0.prefixMap(""9}F"");
    patriciaTrie0.remove((Object) """");
    Integer integer0 = new Integer(62);
    // Undeclared exception!
    try {
        patriciaTrie0.remove((Object) integer0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // java.lang.Integer cannot be cast to java.lang.String
        //
        verifyException(""org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer"", e);
    }
}",0,
project,0,test08484,"public void test08484() throws Throwable {
    Integer integer0 = new Integer((-1422));
    int int0 = (-486);
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(""owWc<MDV>n.!*Xq%Zg^"", integer0, (-486));
    Integer integer1 = new Integer((-1422));
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(""org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator"", integer1, (-1422));
    abstractPatriciaTrie_TrieEntry0.setKeyValue(""owWc<MDV>n.!*Xq%Zg^"", integer0);
    Map.Entry.comparingByValue();
    abstractPatriciaTrie_TrieEntry0.parent = abstractPatriciaTrie_TrieEntry1;
    abstractPatriciaTrie_TrieEntry0.toString();
    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();
    patriciaTrie0.put(""owWc<MDV>n.!*Xq%Zg^"", integer0);
    Object object0 = new Object();
    // Undeclared exception!
    try {
        patriciaTrie0.remove(object0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // java.lang.Object cannot be cast to java.lang.String
        //
        verifyException(""org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer"", e);
    }
}",0,
project,0,test08686,"public void test08686() throws Throwable {
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
    patriciaTrie0.put("""", ""org.apache.commons.collections4.trie.AbstractBitwiseTrie"");
    patriciaTrie0.values();
    patriciaTrie0.containsKey("""");
}",0,
project,0,test08787,"public void test08787() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.put("""", ""?Z"");
    patriciaTrie0.put("" + "", "",ee)#(<d};,Q57g"");
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);
    patriciaTrie0.put(""7.*Cz$U"", (String) null);
    patriciaTrie0.nextKey("""");
    patriciaTrie0.getEntry((Object) null);
    patriciaTrie1.ceilingEntry(""left="");
    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>();
    patriciaTrie1.get((Object) null);
    Integer integer0 = new Integer(116);
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>((String) null, integer0, 116);
    patriciaTrie0.incrementSize();
    Integer integer1 = new Integer((-711));
    patriciaTrie2.put(""?Z"", integer1);
    abstractPatriciaTrie_TrieEntry0.setValue(integer0);
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.predecessor;
    patriciaTrie1.isBitSet(""left="", 0, 0);
    patriciaTrie2.addEntry(abstractPatriciaTrie_TrieEntry1, 116);
    // Undeclared exception!
    try {
        patriciaTrie1.previousKey((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",0,
project,0,test08888,"public void test08888() throws Throwable {
    Function<String, String> function0 = Function.identity();
    Function<Object, String> function1 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
    Function<String, String> function2 = function0.andThen((Function<? super String, ? extends String>) function1);
    function0.compose((Function<? super String, ? extends String>) function2);
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Object>((String) null, (Object) null, 0);
    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.predecessor;
    // Undeclared exception!
    try {
        patriciaTrie0.nextEntryImpl((AbstractPatriciaTrie.TrieEntry<String, Object>) null, abstractPatriciaTrie_TrieEntry1, abstractPatriciaTrie_TrieEntry1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",0,
project,0,test08989,"public void test08989() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
    doReturn((Object) null).when(biFunction0).apply(any(), any());
    patriciaTrie0.put(""ToKey is out of range: "", ""ToKey is out of range: "");
    patriciaTrie0.computeIfPresent(""ToKey is out of range: "", biFunction0);
    patriciaTrie0.floorEntry(""org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry"");
}",1,
project,0,test09090,"public void test09090() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.put(""x"", ""?Z"");
    patriciaTrie0.selectKey(""@yV1Q[6*[jT"");
    patriciaTrie0.put("" + "", "",ee)#(<d};,Q57g"");
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);
    patriciaTrie0.nextKey(""x"");
    patriciaTrie0.getEntry((Object) null);
    patriciaTrie1.ceilingEntry(""left="");
    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>();
    patriciaTrie1.get((Object) null);
    Integer integer0 = new Integer(116);
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>((String) null, integer0, 116);
    patriciaTrie0.incrementSize();
    Integer integer1 = new Integer((-711));
    patriciaTrie2.put(""?Z"", integer1);
    abstractPatriciaTrie_TrieEntry0.setValue(integer0);
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.predecessor;
    patriciaTrie1.isBitSet(""left="", 0, 0);
    patriciaTrie2.addEntry(abstractPatriciaTrie_TrieEntry1, 116);
    // Undeclared exception!
    try {
        patriciaTrie1.previousKey((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",0,
project,0,test09191,"public void test09191() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.put(""tX"", ""?Z"");
    patriciaTrie0.put("" + "", "",ee)(<d};,Q57g"");
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);
    patriciaTrie0.nextKey(""tX"");
    patriciaTrie0.getEntry((Object) null);
    patriciaTrie1.ceilingEntry(""left="");
    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>();
    patriciaTrie1.get((Object) null);
    Integer integer0 = new Integer(116);
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>((String) null, integer0, 116);
    patriciaTrie0.incrementSize();
    Integer integer1 = new Integer((-710));
    patriciaTrie2.put(""?Z"", integer1);
    abstractPatriciaTrie_TrieEntry0.setValue(integer0);
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, Integer>((String) null, integer1, (-710));
    patriciaTrie1.isBitSet(""left="", 0, 0);
    patriciaTrie2.addEntry(abstractPatriciaTrie_TrieEntry1, 116);
    // Undeclared exception!
    try {
        patriciaTrie1.previousKey((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",0,
project,0,test09292,"public void test09292() throws Throwable {
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
    patriciaTrie0.put(""g}+*-#*QOtO7"", ""g}+*-#*QOtO7"");
    patriciaTrie0.put(""MBy%"", ""MBy%"");
    // Undeclared exception!
    try {
        patriciaTrie0.subtree((String) null, 3, 381);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The offsets and lengths must be at Character boundaries
        //
        verifyException(""org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer"", e);
    }
}",0,
project,0,test09393,"public void test09393() throws Throwable {
    PatriciaTrie<AbstractMap.SimpleImmutableEntry<Integer, Object>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<Integer, Object>>();
    patriciaTrie0.values();
    patriciaTrie0.mapIterator();
    patriciaTrie0.get(""Trie["");
    patriciaTrie0.subtree(""n&dofo?X}-jz"", (-1754), 77);
    HashMap<String, String> hashMap0 = new HashMap<String, String>();
    hashMap0.put(""n&dofo?X}-jz"", """");
    hashMap0.put(""CZz"", ""n&dofo?X}-jz"");
    hashMap0.put(""n&dofo?X}-jz"", ""Trie["");
    hashMap0.put("""", ""Trie["");
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(hashMap0);
    BiConsumer<String, Object> biConsumer0 = (BiConsumer<String, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
    patriciaTrie1.forEach(biConsumer0);
    hashMap0.put(""n&dofo?X}-jz"", ""n&dofo?X}-jz"");
    hashMap0.put("""", """");
    // Undeclared exception!
    try {
        patriciaTrie1.previousKey((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",0,
project,0,test09494,"public void test09494() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    String string0 = null;
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>((String) null, (String) null, 3508);
    abstractPatriciaTrie_TrieEntry0.bitIndex = 3508;
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, String>(""#v1w([p3'!"", (String) null, 2);
    patriciaTrie0.put(""@.&<"", ""#v1w([p3'!"");
    abstractPatriciaTrie_TrieEntry1.bitIndex = 3508;
    abstractPatriciaTrie_TrieEntry0.left = abstractPatriciaTrie_TrieEntry1;
    // Undeclared exception!
    try {
        patriciaTrie0.removeEntry(abstractPatriciaTrie_TrieEntry0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.collections4.trie.AbstractPatriciaTrie"", e);
    }
}",0,
project,0,test09595,"public void test09595() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    Collection<String> collection0 = patriciaTrie0.values();
    String string0 = ""org.apache.commons.collections4.trie.KeyAnalyzer"";
    int int0 = (-1298);
    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = patriciaTrie0.getNearestEntryForKey(""org.apache.commons.collections4.trie.KeyAnalyzer"", (-1298));
    String string1 = ""qZ.OKGoE49.}Rbj}F"";
    patriciaTrie0.put(""org.apache.commons.collections4.trie.KeyAnalyzer"", ""qZ.OKGoE49.}Rbj}F"");
    patriciaTrie0.put("""", """");
    patriciaTrie0.removeEntry(abstractPatriciaTrie_TrieEntry0);
    // Undeclared exception!
    try {
        patriciaTrie0.containsKey(collection0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values cannot be cast to java.lang.String
        //
        verifyException(""org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer"", e);
    }
}",0,
project,0,test09696,"public void test09696() throws Throwable {
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.put(""@/$<UTx@O"", ""@/$<UTx@O"");
    patriciaTrie0.floorEntry("" is not an internal Entry!"");
}",0,
project,0,test09797,"public void test09797() throws Throwable {
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
    patriciaTrie0.select("""");
    patriciaTrie0.put(""WW X"", ""WW X"");
    patriciaTrie0.prefixMap("""");
    patriciaTrie0.remove((Object) """");
    Integer integer0 = new Integer(62);
    patriciaTrie0.remove((Object) ""9}F"");
    Object object0 = new Object();
    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>();
    patriciaTrie1.higherEntry(""#6~pB3"");
    patriciaTrie1.clear();
    patriciaTrie1.entrySet();
    patriciaTrie1.headMap(""9}F"");
    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Object>(""zW*SgLZ$UknaPxMw~"", (Object) null, (-797));
    abstractPatriciaTrie_TrieEntry0.bitIndex = 1;
    Integer integer1 = new Integer((-797));
    abstractPatriciaTrie_TrieEntry0.setValue(integer1);
    patriciaTrie0.headMap(""9}F"");
    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    Map.Entry.comparingByValue((Comparator<? super AbstractMap.SimpleEntry<Object, AbstractMap.SimpleImmutableEntry<String, Object>>>) comparator0);
    Map.Entry.comparingByValue();
    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, Object>("""", patriciaTrie0, (-3));
    abstractPatriciaTrie_TrieEntry0.equals((Object) null);
    abstractPatriciaTrie_TrieEntry0.parent = abstractPatriciaTrie_TrieEntry1;
    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry2 = abstractPatriciaTrie_TrieEntry0.predecessor;
    patriciaTrie0.previousEntry(abstractPatriciaTrie_TrieEntry2);
}",1,
project,0,test09898,"public void test09898() throws Throwable {
    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();
    String string0 = """";
    patriciaTrie0.select("""");
    patriciaTrie0.put("""", """");
    String string1 = ""9}F"";
    patriciaTrie0.prefixMap(""9}F"");
    patriciaTrie0.remove((Object) """");
    Integer integer0 = new Integer(62);
    // Undeclared exception!
    try {
        patriciaTrie0.remove((Object) integer0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // java.lang.Integer cannot be cast to java.lang.String
        //
        verifyException(""org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer"", e);
    }
}",0,
project,0,test100100,"public void test100100() throws Throwable {
    Integer integer0 = new Integer(1);
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(""A{CEcN}(;:+"", integer0, 1);
    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(""A{CEcN}(;:+"", integer0, 1);
    abstractPatriciaTrie_TrieEntry0.left = abstractPatriciaTrie_TrieEntry1;
    Integer integer1 = new Integer(1);
    abstractPatriciaTrie_TrieEntry0.setKeyValue(""A{CEcN}(;:+"", integer1);
    abstractPatriciaTrie_TrieEntry0.isExternalNode();
    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
    patriciaTrie0.put(""A{CEcN}(;:+"", ""A{CEcN}(;:+"");
    patriciaTrie0.floorEntry(""A{CEcN}(;:+"");
    abstractPatriciaTrie_TrieEntry1.setValue((Integer) null);
    Collection<String> collection0 = patriciaTrie0.values();
    AbstractPatriciaTrie.TrieEntry<Object, Object> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Object, Object>(""A{CEcN}(;:+"", abstractPatriciaTrie_TrieEntry1, (-2426));
    abstractPatriciaTrie_TrieEntry2.isExternalNode();
    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>();
    patriciaTrie1.put(""A{CEcN}(;:+"", integer0);
    patriciaTrie1.lowerEntry(""A{CEcN}(;:+"");
    AbstractMap.SimpleImmutableEntry<Object, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, Object>(collection0, integer0);
    patriciaTrie0.get((Object) null);
    AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<Object, Object>> abstractPatriciaTrie_TrieEntry3 = new AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<Object, Object>>(abstractPatriciaTrie_TrieEntry0, abstractMap_SimpleImmutableEntry0, (-1006));
    abstractPatriciaTrie_TrieEntry3.isInternalNode();
    patriciaTrie1.lastKey();
    patriciaTrie1.higherEntry(""QQ~u"");
    AbstractPatriciaTrie.isValidUplink(abstractPatriciaTrie_TrieEntry0, abstractPatriciaTrie_TrieEntry3);
}",0,
