{
  "test0000" : {
    "methodSignature" : "public K lastKey()",
    "methodName" : "lastKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    Integer integer0 = new Integer(1);\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(\"A{CEcN}(;:+\", integer0, 1);\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(\"A{CEcN}(;:+\", integer0, 1);\n    abstractPatriciaTrie_TrieEntry0.left = abstractPatriciaTrie_TrieEntry1;\n    Integer integer1 = new Integer(1);\n    abstractPatriciaTrie_TrieEntry0.setKeyValue(\"A{CEcN}(;:+\", integer1);\n    abstractPatriciaTrie_TrieEntry0.isExternalNode();\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.put(\"A{CEcN}(;:+\", \"A{CEcN}(;:+\");\n    patriciaTrie0.floorEntry(\"A{CEcN}(;:+\");\n    abstractPatriciaTrie_TrieEntry1.setValue((Integer) null);\n    Collection<String> collection0 = patriciaTrie0.values();\n    AbstractPatriciaTrie.TrieEntry<Object, Object> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Object, Object>(\"A{CEcN}(;:+\", abstractPatriciaTrie_TrieEntry1, (-2426));\n    abstractPatriciaTrie_TrieEntry2.isExternalNode();\n    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>();\n    patriciaTrie1.lowerEntry(\"A{CEcN}(;:+\");\n    AbstractMap.SimpleImmutableEntry<Object, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, Object>(collection0, integer0);\n    patriciaTrie0.get((Object) null);\n    AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<Object, Object>> abstractPatriciaTrie_TrieEntry3 = new AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<Object, Object>>(abstractPatriciaTrie_TrieEntry0, abstractMap_SimpleImmutableEntry0, (-1006));\n    abstractPatriciaTrie_TrieEntry3.isInternalNode();\n    patriciaTrie1.lastKey();\n}",
    "testName" : "test0000"
  },
  "test0044" : {
    "methodSignature" : "TrieEntry<K, V> getEntry(final Object k)",
    "methodName" : "getEntry",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0044() throws Throwable {\n    HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();\n    hashMap0.clone();\n    Integer integer0 = new Integer(0);\n    hashMap0.put(\"%*Y1R'r\", integer0);\n    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>(hashMap0);\n    hashMap0.put(\"m\", integer0);\n    Integer integer1 = new Integer(1136);\n    patriciaTrie0.prefixMap(\"\");\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(\"f\\\"5\\\"p:y._D#`7>Z~0P\", integer1, 1136);\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(\"f\\\"5\\\"p:y._D#`7>Z~0P\", integer1, 1136);\n    abstractPatriciaTrie_TrieEntry0.value = null;\n    abstractPatriciaTrie_TrieEntry0.left = abstractPatriciaTrie_TrieEntry1;\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry2 = abstractPatriciaTrie_TrieEntry0.parent;\n    patriciaTrie0.nextEntry((AbstractPatriciaTrie.TrieEntry<String, Integer>) null);\n    patriciaTrie0.getNearestEntryForKey((String) null, 1136);\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>();\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry3 = new AbstractPatriciaTrie.TrieEntry<String, String>(\"\", \"%*Y1R'r\", 0);\n    abstractPatriciaTrie_TrieEntry3.setValue(\"a1k[\");\n    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    Map.Entry.comparingByKey((Comparator<? super Integer>) comparator0);\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry4 = new AbstractPatriciaTrie.TrieEntry<String, String>(\"%*Y1R'r\", \"%*Y1R'r\", 0);\n    patriciaTrie1.previousEntry(abstractPatriciaTrie_TrieEntry4);\n    patriciaTrie1.headMap(\"m\");\n    PatriciaTrie<Object> patriciaTrie2 = new PatriciaTrie<Object>();\n    Integer integer2 = new Integer(0);\n    patriciaTrie2.getEntry(integer2);\n}",
    "testName" : "test0044"
  },
  "test03636" : {
    "methodSignature" : "public SortedMap<K, V> subMap(final K fromKey, final K toKey)",
    "methodName" : "subMap",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03636() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.lowerEntry(\"\");\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);\n    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>();\n    patriciaTrie2.selectKey(\"H)dRl ]}I.+mb'\");\n    patriciaTrie2.toString();\n    patriciaTrie2.floorEntry(\"\");\n    Integer integer0 = new Integer(0);\n    AbstractPatriciaTrie.TrieEntry<Integer, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Integer, String>(integer0, \"Trie[0]={\\n}\\n\", 0);\n    abstractPatriciaTrie_TrieEntry0.isEmpty();\n    patriciaTrie1.subMap(\"\", \"\");\n}",
    "testName" : "test03636"
  },
  "test05858" : {
    "methodSignature" : "public K lastKey()",
    "methodName" : "lastKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05858() throws Throwable {\n    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();\n    patriciaTrie0.firstEntry();\n    Integer integer0 = new Integer(186);\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(\"org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator\", integer0, 186);\n    patriciaTrie0.lastKey();\n}",
    "testName" : "test05858"
  },
  "test04848" : {
    "methodSignature" : "public boolean containsKey(final Object k)",
    "methodName" : "containsKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04848() throws Throwable {\n    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();\n    patriciaTrie0.lowerEntry(\"d\");\n    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>(patriciaTrie0);\n    PatriciaTrie<AbstractMap.SimpleEntry<Integer, Object>> patriciaTrie2 = new PatriciaTrie<AbstractMap.SimpleEntry<Integer, Object>>();\n    patriciaTrie2.compareKeys((String) null, \";?^atJ)\");\n    patriciaTrie2.floorEntry(\"d\");\n    PatriciaTrie<String> patriciaTrie3 = new PatriciaTrie<String>();\n    PatriciaTrie<String> patriciaTrie4 = new PatriciaTrie<String>(patriciaTrie3);\n    Integer integer0 = new Integer(1405);\n    patriciaTrie4.containsKey(integer0);\n}",
    "testName" : "test04848"
  },
  "test01212" : {
    "methodSignature" : "public V put(final K key, final V value)",
    "methodName" : "put",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01212() throws Throwable {\n    PatriciaTrie<AbstractMap.SimpleEntry<Integer, Object>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleEntry<Integer, Object>>();\n    Integer integer0 = new Integer((-3));\n    AbstractMap.SimpleEntry<Integer, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, Object>(integer0, (Object) null);\n    patriciaTrie0.put((String) null, abstractMap_SimpleEntry0);\n}",
    "testName" : "test01212"
  },
  "test03434" : {
    "methodSignature" : "TrieEntry<K, V> nextEntryImpl(final TrieEntry<K, V> start, final TrieEntry<K, V> previous, final TrieEntry<K, V> tree)",
    "methodName" : "nextEntryImpl",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03434() throws Throwable {\n    Integer integer0 = new Integer((-1204));\n    AbstractPatriciaTrie.TrieEntry<Integer, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Integer, String>(integer0, \"org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry\", (-1204));\n    abstractPatriciaTrie_TrieEntry0.equals((Object) null);\n    abstractPatriciaTrie_TrieEntry0.isEmpty();\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, String>(\"org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry\", \"org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry\", 5128);\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry2 = abstractPatriciaTrie_TrieEntry1.parent;\n    patriciaTrie0.nextEntryImpl((AbstractPatriciaTrie.TrieEntry<String, String>) null, (AbstractPatriciaTrie.TrieEntry<String, String>) null, abstractPatriciaTrie_TrieEntry1);\n}",
    "testName" : "test03434"
  },
  "test05656" : {
    "methodSignature" : "public K lastKey()",
    "methodName" : "lastKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05656() throws Throwable {\n    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();\n    PatriciaTrie<Integer> patriciaTrie1 = new PatriciaTrie<Integer>(patriciaTrie0);\n    Integer integer0 = new Integer(1699);\n    patriciaTrie1.put(\"RR?y[B]/$?hq\", integer0);\n    patriciaTrie1.lastKey();\n}",
    "testName" : "test05656"
  },
  "test04646" : {
    "methodSignature" : "public SortedMap<K, V> tailMap(final K fromKey)",
    "methodName" : "tailMap",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04646() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);\n    PatriciaTrie<Object> patriciaTrie2 = new PatriciaTrie<Object>(patriciaTrie1);\n    patriciaTrie2.tailMap(\"\");\n}",
    "testName" : "test04646"
  },
  "test01414" : {
    "methodSignature" : "public Set<K> keySet()",
    "methodName" : "keySet",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01414() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.put(\"Cannot determine prefix outside of Character boundaries\", \"Cannot determine prefix outside of Character boundaries\");\n    patriciaTrie0.modCount = (-495);\n    patriciaTrie0.values();\n    PatriciaTrie<AbstractMap.SimpleImmutableEntry<String, String>> patriciaTrie1 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<String, String>>();\n    patriciaTrie1.keySet();\n}",
    "testName" : "test01414"
  },
  "test06868" : {
    "methodSignature" : "TrieEntry<K, V> addEntry(final TrieEntry<K, V> entry, final int lengthInBits)",
    "methodName" : "addEntry",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06868() throws Throwable {\n    PatriciaTrie<AbstractMap.SimpleEntry<String, String>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleEntry<String, String>>();\n    String string0 = \"\";\n    String string1 = \"  \";\n    AbstractMap.SimpleEntry<String, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, String>(\";\\\"EH e$C)$JC\", \"  \");\n    int int0 = 0;\n    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    Map.Entry.comparingByKey((Comparator<? super AbstractMap.SimpleEntry<String, String>>) comparator0);\n    AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, String>> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, String>>(\"\", abstractMap_SimpleEntry0, 0);\n    String string2 = \"org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry\";\n    abstractPatriciaTrie_TrieEntry0.key = \"org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry\";\n    Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    Map.Entry.comparingByKey((Comparator<? super AbstractMap.SimpleEntry<String, String>>) comparator1);\n    patriciaTrie0.values();\n    AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, String>> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.parent;\n    patriciaTrie0.addEntry((AbstractPatriciaTrie.TrieEntry<String, AbstractMap.SimpleEntry<String, String>>) null, 0);\n}",
    "testName" : "test06868"
  },
  "test02828" : {
    "methodSignature" : "public OrderedMapIterator<K, V> mapIterator()",
    "methodName" : "mapIterator",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02828() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    AbstractMap.SimpleEntry<String, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, Object>(\"-!d/_w$.nUCsF9i[S0\", patriciaTrie0);\n    AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<String, Object>, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<String, Object>, String>(abstractMap_SimpleEntry0, \"\", (-1404));\n    String string0 = abstractPatriciaTrie_TrieEntry0.value;\n    patriciaTrie0.remove((Object) \"\");\n    patriciaTrie0.mapIterator();\n}",
    "testName" : "test02828"
  },
  "test01616" : {
    "methodSignature" : "public SortedMap<K, V> subMap(final K fromKey, final K toKey)",
    "methodName" : "subMap",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01616() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.subMap(\"kyYa;[.9|j|WbufZ\", \" is not an internal Entry!\");\n}",
    "testName" : "test01616"
  },
  "test03838" : {
    "methodSignature" : "V removeEntry(final TrieEntry<K, V> h)",
    "methodName" : "removeEntry",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03838() throws Throwable {\n    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();\n    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Object>((String) null, (Object) null, 0);\n    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.right;\n    patriciaTrie0.removeEntry((AbstractPatriciaTrie.TrieEntry<String, Object>) null);\n}",
    "testName" : "test03838"
  },
  "test01818" : {
    "methodSignature" : "public V remove(final Object k)",
    "methodName" : "remove",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01818() throws Throwable {\n    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();\n    patriciaTrie0.put(\"\", (Object) null);\n    patriciaTrie0.getOrDefault((Object) null, (Object) null);\n    String string0 = \"]={\\n\";\n    patriciaTrie0.higherEntry(\"]={\\n\");\n    patriciaTrie0.comparator();\n    Object object0 = new Object();\n    patriciaTrie0.remove(object0);\n}",
    "testName" : "test01818"
  },
  "test08484" : {
    "methodSignature" : "public V remove(final Object k)",
    "methodName" : "remove",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08484() throws Throwable {\n    Integer integer0 = new Integer((-1422));\n    int int0 = (-486);\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(\"owWc<MDV>n.!*Xq%Zg^\", integer0, (-486));\n    Integer integer1 = new Integer((-1422));\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(\"org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator\", integer1, (-1422));\n    abstractPatriciaTrie_TrieEntry0.setKeyValue(\"owWc<MDV>n.!*Xq%Zg^\", integer0);\n    Map.Entry.comparingByValue();\n    abstractPatriciaTrie_TrieEntry0.parent = abstractPatriciaTrie_TrieEntry1;\n    abstractPatriciaTrie_TrieEntry0.toString();\n    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();\n    patriciaTrie0.put(\"owWc<MDV>n.!*Xq%Zg^\", integer0);\n    Object object0 = new Object();\n    patriciaTrie0.remove(object0);\n}",
    "testName" : "test08484"
  },
  "test05050" : {
    "methodSignature" : "TrieEntry<K, V> followRight(TrieEntry<K, V> node)",
    "methodName" : "followRight",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05050() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.put(\":_;y3k{)Y64]NjJ\", \"[Mi*>9DTb%0H?K:}|\");\n    patriciaTrie0.remove((Object) null);\n    patriciaTrie0.modCount = 0;\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>((String) null, (String) null, 0);\n    patriciaTrie1.put(\"0{nL*\", \" is not an internal Entry!\");\n    String string0 = abstractPatriciaTrie_TrieEntry0.value;\n    patriciaTrie0.containsKey((Object) null);\n    patriciaTrie0.firstEntry();\n    patriciaTrie1.clear();\n    patriciaTrie0.decrementSize();\n    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>();\n    patriciaTrie2.selectKey(\"\");\n    PatriciaTrie<Object> patriciaTrie3 = new PatriciaTrie<Object>(patriciaTrie2);\n    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, Object>(\"bq h}>0_\", \"\", 1);\n    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry2 = abstractPatriciaTrie_TrieEntry1.parent;\n    patriciaTrie3.followRight((AbstractPatriciaTrie.TrieEntry<String, Object>) null);\n}",
    "testName" : "test05050"
  },
  "test07272" : {
    "methodSignature" : "TrieEntry<K, V> followLeft(TrieEntry<K, V> node)",
    "methodName" : "followLeft",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07272() throws Throwable {\n    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();\n    patriciaTrie0.put(\", \", \", \");\n    patriciaTrie0.higherEntry(\"<Qe1H.+)QZ<ZjO *{X(\");\n    HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();\n    PatriciaTrie<Integer> patriciaTrie1 = new PatriciaTrie<Integer>(hashMap0);\n    patriciaTrie1.followLeft((AbstractPatriciaTrie.TrieEntry<String, Integer>) null);\n}",
    "testName" : "test07272"
  },
  "test04040" : {
    "methodSignature" : "public Set<Map.Entry<K, V>> entrySet()",
    "methodName" : "entrySet",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04040() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);\n    PatriciaTrie<String> patriciaTrie2 = new PatriciaTrie<String>(patriciaTrie1);\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>(\"fqh^ xd/<EG\", \"Buy(g/,[+\", 1052);\n    patriciaTrie1.nextEntry(abstractPatriciaTrie_TrieEntry0);\n    patriciaTrie2.put(\"\", (String) null);\n    patriciaTrie2.entrySet();\n}",
    "testName" : "test04040"
  },
  "test09494" : {
    "methodSignature" : "V removeEntry(final TrieEntry<K, V> h)",
    "methodName" : "removeEntry",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09494() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    String string0 = null;\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>((String) null, (String) null, 3508);\n    abstractPatriciaTrie_TrieEntry0.bitIndex = 3508;\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, String>(\"#v1w([p3'!\", (String) null, 2);\n    patriciaTrie0.put(\"@.&<\", \"#v1w([p3'!\");\n    abstractPatriciaTrie_TrieEntry1.bitIndex = 3508;\n    abstractPatriciaTrie_TrieEntry0.left = abstractPatriciaTrie_TrieEntry1;\n    patriciaTrie0.removeEntry(abstractPatriciaTrie_TrieEntry0);\n}",
    "testName" : "test09494"
  },
  "test06262" : {
    "methodSignature" : "TrieEntry<K, V> followLeft(TrieEntry<K, V> node)",
    "methodName" : "followLeft",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06262() throws Throwable {\n    Integer integer0 = new Integer((-122));\n    AbstractPatriciaTrie.TrieEntry<Object, Object> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Object, Object>(integer0, integer0, (-122));\n    abstractPatriciaTrie_TrieEntry0.isExternalNode();\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.comparator();\n    AbstractMap.SimpleImmutableEntry<Object, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, Object>(abstractPatriciaTrie_TrieEntry0);\n    abstractPatriciaTrie_TrieEntry0.bitIndex = 447;\n    AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<Object, Object>> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<Object, Object>>(abstractPatriciaTrie_TrieEntry0, abstractMap_SimpleImmutableEntry0, (-122));\n    abstractPatriciaTrie_TrieEntry1.isInternalNode();\n    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>(patriciaTrie0);\n    patriciaTrie1.selectKey(\"{ffRQe%y7G.\");\n    String string0 = \"FromKey is out of range: \";\n    patriciaTrie1.prefixMap(\"FromKey is out of range: \");\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<String, String>(\"`^F$;>C=8bxm)6w_FU\", \"{ffRQe%y7G.\", 0);\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry3 = abstractPatriciaTrie_TrieEntry2.parent;\n    patriciaTrie0.followLeft((AbstractPatriciaTrie.TrieEntry<String, String>) null);\n}",
    "testName" : "test06262"
  },
  "test07070" : {
    "methodSignature" : "public K firstKey()",
    "methodName" : "firstKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07070() throws Throwable {\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    HashMap<String, String> hashMap1 = new HashMap<String, String>(hashMap0);\n    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>(hashMap1);\n    hashMap1.put(\"org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap\", \"org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap\");\n    hashMap1.put(\"org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet\", \"8;H3Ii|6^3Dqir{F1(\");\n    patriciaTrie0.put(\"O=`KmYH5bQr\", (Object) null);\n    patriciaTrie0.put(\"org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet\", (Object) null);\n    patriciaTrie0.lastEntry();\n    PatriciaTrie<AbstractMap.SimpleEntry<String, String>> patriciaTrie1 = new PatriciaTrie<AbstractMap.SimpleEntry<String, String>>();\n    patriciaTrie1.firstKey();\n}",
    "testName" : "test07070"
  },
  "test0011" : {
    "methodSignature" : "TrieEntry<K, V> nextEntryImpl(final TrieEntry<K, V> start, final TrieEntry<K, V> previous, final TrieEntry<K, V> tree)",
    "methodName" : "nextEntryImpl",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();\n    patriciaTrie0.previousKey(\"=\");\n    patriciaTrie0.ceilingEntry(\"Mwm'[Qp!|Y\");\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>();\n    patriciaTrie1.higherEntry(\"\");\n    PatriciaTrie<String> patriciaTrie2 = new PatriciaTrie<String>(patriciaTrie1);\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>(\"!UZbyVBqi3D>\\\"G\", \"\", 0);\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.predecessor;\n    patriciaTrie1.addEntry(abstractPatriciaTrie_TrieEntry1, 2);\n    patriciaTrie1.selectKey(\"=\");\n    PatriciaTrie<Integer> patriciaTrie3 = new PatriciaTrie<Integer>();\n    Integer integer0 = new Integer((-1));\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(\"!UZbyVBqi3D>\\\"G\", integer0, 2);\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry3 = abstractPatriciaTrie_TrieEntry2.right;\n    patriciaTrie3.nextEntryImpl((AbstractPatriciaTrie.TrieEntry<String, Integer>) null, (AbstractPatriciaTrie.TrieEntry<String, Integer>) null, (AbstractPatriciaTrie.TrieEntry<String, Integer>) null);\n}",
    "testName" : "test0011"
  },
  "test0055" : {
    "methodSignature" : "public K previousKey(final K key)",
    "methodName" : "previousKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0055() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.put(\"\", \"?Z\");\n    patriciaTrie0.put(\" + \", \",ee)#(<d};,Q57g\");\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);\n    patriciaTrie0.nextKey(\"\");\n    patriciaTrie0.getEntry((Object) null);\n    patriciaTrie1.ceilingEntry(\"left=\");\n    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>();\n    patriciaTrie1.get((Object) null);\n    Integer integer0 = new Integer(116);\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>((String) null, integer0, 116);\n    patriciaTrie0.incrementSize();\n    Integer integer1 = new Integer((-711));\n    patriciaTrie2.put(\"?Z\", integer1);\n    abstractPatriciaTrie_TrieEntry0.setValue(integer0);\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.predecessor;\n    patriciaTrie1.isBitSet(\"left=\", 0, 0);\n    patriciaTrie2.addEntry(abstractPatriciaTrie_TrieEntry1, 116);\n    patriciaTrie1.previousKey((String) null);\n}",
    "testName" : "test0055"
  },
  "test0099" : {
    "methodSignature" : "public K selectKey(final K key)",
    "methodName" : "selectKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0099() throws Throwable {\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>(hashMap0);\n    patriciaTrie0.entrySet();\n    Set<Map.Entry<String, String>> set0 = (Set<Map.Entry<String, String>>) patriciaTrie0.entrySet();\n    AbstractPatriciaTrie.TrieEntry<Object, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Object, String>(set0, \"Ur>+bf\", 0);\n    patriciaTrie0.values();\n    AbstractPatriciaTrie.TrieEntry<Object, String> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Object, String>((Object) null, \"'tcP#JyA{:\\\",n+F#HSq\", (-1));\n    abstractPatriciaTrie_TrieEntry0.right = abstractPatriciaTrie_TrieEntry1;\n    Integer integer0 = new Integer(0);\n    patriciaTrie0.subtree(\"u@;uw1LS`{,s8u`5\", 0, (-1));\n    Integer integer1 = new Integer(0);\n    AbstractPatriciaTrie.TrieEntry<Integer, Object> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Integer, Object>(integer0, integer1, (-55));\n    hashMap0.put(\"K4#n2I+47C?\", \"K4#n2I+47C?\");\n    Integer integer2 = (Integer) abstractPatriciaTrie_TrieEntry2.value;\n    abstractPatriciaTrie_TrieEntry0.bitIndex = 0;\n    abstractPatriciaTrie_TrieEntry0.key = (Object) integer2;\n    AbstractPatriciaTrie.isValidUplink(abstractPatriciaTrie_TrieEntry0, abstractPatriciaTrie_TrieEntry0);\n    PatriciaTrie<Integer> patriciaTrie1 = new PatriciaTrie<Integer>();\n    patriciaTrie1.entrySet();\n    patriciaTrie1.ceilingEntry(\"org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry\");\n    patriciaTrie1.put(\"K4#n2I+47C?\", integer1);\n    patriciaTrie1.floorEntry(\"Cannot determine prefix outside of Character boundaries\");\n    PatriciaTrie<Object> patriciaTrie2 = new PatriciaTrie<Object>();\n    BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());\n    patriciaTrie2.computeIfPresent(\"org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry\", biFunction0);\n    patriciaTrie2.selectKey(\"Cannot determine prefix outside of Character boundaries\");\n}",
    "testName" : "test0099"
  },
  "test09292" : {
    "methodSignature" : "TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits)",
    "methodName" : "subtree",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09292() throws Throwable {\n    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();\n    patriciaTrie0.put(\"g}+*-#*QOtO7\", \"g}+*-#*QOtO7\");\n    patriciaTrie0.put(\"MBy%\", \"MBy%\");\n    patriciaTrie0.subtree((String) null, 3, 381);\n}",
    "testName" : "test09292"
  },
  "test06060" : {
    "methodSignature" : "public K firstKey()",
    "methodName" : "firstKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06060() throws Throwable {\n    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();\n    Integer integer0 = new Integer((-1));\n    Integer integer1 = new Integer((-7334));\n    patriciaTrie0.put(\"RX1q!2W}t}>3o\", integer1);\n    patriciaTrie0.put(\"org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry\", integer0);\n    patriciaTrie0.put(\"org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry\", integer0);\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = null;\n    patriciaTrie0.nextEntry((AbstractPatriciaTrie.TrieEntry<String, Integer>) null);\n    Integer integer2 = new Integer((-1));\n    patriciaTrie0.put(\"uSpBVc{Z,V\", integer2);\n    patriciaTrie0.ceilingEntry(\"uSpBVc{Z,V\");\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>();\n    patriciaTrie1.select(\"uSpBVc{Z,V\");\n    patriciaTrie1.firstKey();\n}",
    "testName" : "test06060"
  },
  "test03232" : {
    "methodSignature" : "public V get(final Object k)",
    "methodName" : "get",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03232() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.get(\"org.apache.commons.collections4.trie.PatriciaTrie\");\n}",
    "testName" : "test03232"
  },
  "test08888" : {
    "methodSignature" : "TrieEntry<K, V> nextEntryImpl(final TrieEntry<K, V> start, final TrieEntry<K, V> previous, final TrieEntry<K, V> tree)",
    "methodName" : "nextEntryImpl",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08888() throws Throwable {\n    Function<String, String> function0 = Function.identity();\n    Function<Object, String> function1 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());\n    Function<String, String> function2 = function0.andThen((Function<? super String, ? extends String>) function1);\n    function0.compose((Function<? super String, ? extends String>) function2);\n    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();\n    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Object>((String) null, (Object) null, 0);\n    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.predecessor;\n    patriciaTrie0.nextEntryImpl((AbstractPatriciaTrie.TrieEntry<String, Object>) null, abstractPatriciaTrie_TrieEntry1, abstractPatriciaTrie_TrieEntry1);\n}",
    "testName" : "test08888"
  },
  "test02020" : {
    "methodSignature" : "public V put(final K key, final V value)",
    "methodName" : "put",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02020() throws Throwable {\n    PatriciaTrie<AbstractMap.SimpleImmutableEntry<String, Integer>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<String, Integer>>();\n    patriciaTrie0.decrementSize();\n    patriciaTrie0.decrementSize();\n    String string0 = null;\n    Integer integer0 = new Integer(893);\n    AbstractMap.SimpleImmutableEntry<String, Integer> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<String, Integer>((String) null, integer0);\n    AbstractMap.SimpleImmutableEntry<String, Integer> abstractMap_SimpleImmutableEntry1 = new AbstractMap.SimpleImmutableEntry<String, Integer>(abstractMap_SimpleImmutableEntry0);\n    patriciaTrie0.put((String) null, abstractMap_SimpleImmutableEntry1);\n}",
    "testName" : "test02020"
  },
  "test05454" : {
    "methodSignature" : "TrieEntry<K, V> firstEntry()",
    "methodName" : "firstEntry",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05454() throws Throwable {\n    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();\n    Integer integer0 = new Integer(541);\n    patriciaTrie0.nextKey(\"9S3V1f&zERN`,(\");\n    patriciaTrie0.put(\"\", integer0);\n    patriciaTrie0.put(\"9S3V1f&zERN`,(\", integer0);\n    patriciaTrie0.bitIndex((String) null, \"9S3V1f&zERN`,(\");\n    Integer integer1 = new Integer(541);\n    patriciaTrie0.replace(\"delegate\", (Integer) null, integer1);\n    patriciaTrie0.getNearestEntryForKey((String) null, 1);\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>();\n    patriciaTrie1.firstEntry();\n}",
    "testName" : "test05454"
  },
  "test04444" : {
    "methodSignature" : "public SortedMap<K, V> prefixMap(final K key)",
    "methodName" : "prefixMap",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04444() throws Throwable {\n    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();\n    patriciaTrie0.prefixMap(\"\");\n}",
    "testName" : "test04444"
  },
  "test07676" : {
    "methodSignature" : "public SortedMap<K, V> headMap(final K toKey)",
    "methodName" : "headMap",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07676() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.put(\"\", \"\");\n    patriciaTrie0.put(\"\", (String) null);\n    String string0 = null;\n    patriciaTrie0.headMap((String) null);\n}",
    "testName" : "test07676"
  },
  "test09898" : {
    "methodSignature" : "public V remove(final Object k)",
    "methodName" : "remove",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09898() throws Throwable {\n    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();\n    String string0 = \"\";\n    patriciaTrie0.select(\"\");\n    patriciaTrie0.put(\"\", \"\");\n    String string1 = \"9}F\";\n    patriciaTrie0.prefixMap(\"9}F\");\n    patriciaTrie0.remove((Object) \"\");\n    Integer integer0 = new Integer(62);\n    patriciaTrie0.remove((Object) integer0);\n}",
    "testName" : "test09898"
  },
  "test06666" : {
    "methodSignature" : "TrieEntry<K, V> followRight(TrieEntry<K, V> node)",
    "methodName" : "followRight",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06666() throws Throwable {\n    PatriciaTrie<AbstractMap.SimpleEntry<Integer, Integer>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleEntry<Integer, Integer>>();\n    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>();\n    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Object>(\" > \", patriciaTrie0, 1092);\n    Map.Entry.comparingByValue();\n    patriciaTrie1.followRight(abstractPatriciaTrie_TrieEntry0);\n}",
    "testName" : "test06666"
  },
  "test03030" : {
    "methodSignature" : "TrieEntry<K, V> followRight(TrieEntry<K, V> node)",
    "methodName" : "followRight",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03030() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);\n    int int0 = 32768;\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>(\"eN7j\", \"eN7j\", 32768);\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.right;\n    patriciaTrie1.followRight((AbstractPatriciaTrie.TrieEntry<String, String>) null);\n}",
    "testName" : "test03030"
  },
  "test08686" : {
    "methodSignature" : "public boolean containsKey(final Object k)",
    "methodName" : "containsKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08686() throws Throwable {\n    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();\n    patriciaTrie0.put(\"\", \"org.apache.commons.collections4.trie.AbstractBitwiseTrie\");\n    patriciaTrie0.values();\n    patriciaTrie0.containsKey(\"\");\n}",
    "testName" : "test08686"
  },
  "test02222" : {
    "methodSignature" : "TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits)",
    "methodName" : "subtree",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02222() throws Throwable {\n    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();\n    String string0 = \"p1v\\\\kXa(&=a='<@]7\\\"\";\n    Integer integer0 = new Integer(404);\n    patriciaTrie0.put(\"p1vkXa(&=a='<@]7\\\"\", integer0);\n    int int0 = 0;\n    Integer integer1 = new Integer(0);\n    patriciaTrie0.put(\"]={\\n\", integer1);\n    Integer integer2 = new Integer(0);\n    patriciaTrie0.replace((String) null, integer2);\n    int int1 = 1479;\n    patriciaTrie0.subtree(\"\", 1479, 1479);\n}",
    "testName" : "test02222"
  },
  "test05252" : {
    "methodSignature" : "public K firstKey()",
    "methodName" : "firstKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05252() throws Throwable {\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    hashMap0.put(\"\\n\", \" is not an internal Entry!\");\n    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>(hashMap0);\n    patriciaTrie0.replace(\"parent=\", (Object) \"parent=\", (Object) \"parent=\");\n    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>(patriciaTrie0);\n    patriciaTrie1.firstKey();\n}",
    "testName" : "test05252"
  },
  "test07474" : {
    "methodSignature" : "public V remove(final Object k)",
    "methodName" : "remove",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07474() throws Throwable {\n    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();\n    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>(patriciaTrie0);\n    patriciaTrie1.subMap(\"\", \"\");\n    Integer integer0 = new Integer((-1));\n    patriciaTrie0.put(\"\", integer0);\n    patriciaTrie1.put(\"\", \"\");\n    patriciaTrie1.headMap(\"\");\n    patriciaTrie1.size();\n    PatriciaTrie<String> patriciaTrie2 = new PatriciaTrie<String>();\n    PatriciaTrie<String> patriciaTrie3 = new PatriciaTrie<String>(patriciaTrie2);\n    patriciaTrie3.put(\"\", \"EivOMO-#cT\");\n    patriciaTrie3.keySet();\n    Integer integer1 = new Integer(1258);\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(\"\", integer1, 1);\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.parent;\n    patriciaTrie0.nextEntry((AbstractPatriciaTrie.TrieEntry<String, Integer>) null);\n    patriciaTrie1.remove((Object) \"VZU4)YcLr_nAw\");\n}",
    "testName" : "test07474"
  },
  "test04242" : {
    "methodSignature" : "TrieEntry<K, V> firstEntry()",
    "methodName" : "firstEntry",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04242() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);\n    patriciaTrie1.firstEntry();\n}",
    "testName" : "test04242"
  },
  "test09696" : {
    "methodSignature" : "TrieEntry<K, V> floorEntry(final K key)",
    "methodName" : "floorEntry",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09696() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.put(\"@/$<UTx@O\", \"@/$<UTx@O\");\n    patriciaTrie0.floorEntry(\" is not an internal Entry!\");\n}",
    "testName" : "test09696"
  },
  "test01010" : {
    "methodSignature" : "public SortedMap<K, V> headMap(final K toKey)",
    "methodName" : "headMap",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01010() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.ceilingEntry(\"\");\n    patriciaTrie0.put(\"\", \"\");\n    patriciaTrie0.prefixMap(\"j($ldQy56\");\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    PatriciaTrie<Comparable<String>> patriciaTrie1 = new PatriciaTrie<Comparable<String>>(hashMap0);\n    hashMap0.put(\"\", \"\");\n    patriciaTrie1.headMap(\"\");\n}",
    "testName" : "test01010"
  },
  "test06464" : {
    "methodSignature" : "public SortedMap<K, V> headMap(final K toKey)",
    "methodName" : "headMap",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06464() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.firstEntry();\n    patriciaTrie0.putIfAbsent(\"ToKey is out of range: \", \"ToKey is out of range: \");\n    patriciaTrie0.put(\"@/$<UTx@O\", \"@/$<UTx@O\");\n    patriciaTrie0.floorEntry(\"org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry\");\n    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>();\n    patriciaTrie1.headMap(\"org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry\");\n}",
    "testName" : "test06464"
  },
  "test09090" : {
    "methodSignature" : "public K previousKey(final K key)",
    "methodName" : "previousKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09090() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.put(\"x\", \"?Z\");\n    patriciaTrie0.selectKey(\"@yV1Q[6*[jT\");\n    patriciaTrie0.put(\" + \", \",ee)#(<d};,Q57g\");\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);\n    patriciaTrie0.nextKey(\"x\");\n    patriciaTrie0.getEntry((Object) null);\n    patriciaTrie1.ceilingEntry(\"left=\");\n    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>();\n    patriciaTrie1.get((Object) null);\n    Integer integer0 = new Integer(116);\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>((String) null, integer0, 116);\n    patriciaTrie0.incrementSize();\n    Integer integer1 = new Integer((-711));\n    patriciaTrie2.put(\"?Z\", integer1);\n    abstractPatriciaTrie_TrieEntry0.setValue(integer0);\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.predecessor;\n    patriciaTrie1.isBitSet(\"left=\", 0, 0);\n    patriciaTrie2.addEntry(abstractPatriciaTrie_TrieEntry1, 116);\n    patriciaTrie1.previousKey((String) null);\n}",
    "testName" : "test09090"
  },
  "test0022" : {
    "methodSignature" : "TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits)",
    "methodName" : "subtree",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0022() throws Throwable {\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>(hashMap0);\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);\n    String string0 = \"2p`5Ku8/LMa}l</nZpE\";\n    String string1 = \"j5(~AGXZ\";\n    patriciaTrie1.put(\"2p`5Ku8/LMa}l</nZpE\", \"j5(~AGXZ\");\n    hashMap0.put(\"\", \"j5(~AGXZ\");\n    patriciaTrie0.clear();\n    patriciaTrie1.put(\"x^5*FXq[NZn6N@K,O\", \"x^5*FXq[NZn6N@K,O\");\n    patriciaTrie0.floorEntry(\"org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap\");\n    PatriciaTrie<String> patriciaTrie2 = new PatriciaTrie<String>(patriciaTrie1);\n    patriciaTrie1.subtree((String) null, (-463), (-463));\n}",
    "testName" : "test0022"
  },
  "test0066" : {
    "methodSignature" : "TrieEntry<K, V> floorEntry(final K key)",
    "methodName" : "floorEntry",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0066() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());\n    patriciaTrie0.put(\"@/$<UTx@O\", \"@/$<UTx@O\");\n    patriciaTrie0.computeIfPresent(\"ToKey is out of range: \", biFunction0);\n    patriciaTrie0.floorEntry(\"org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry\");\n}",
    "testName" : "test0066"
  },
  "test04747" : {
    "methodSignature" : "public V get(final Object k)",
    "methodName" : "get",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04747() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    int int0 = (-3847);\n    Integer integer0 = new Integer((-3847));\n    patriciaTrie0.get(integer0);\n}",
    "testName" : "test04747"
  },
  "test01313" : {
    "methodSignature" : "public Comparator<? super K> comparator()",
    "methodName" : "comparator",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01313() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>(patriciaTrie0);\n    patriciaTrie1.comparator();\n}",
    "testName" : "test01313"
  },
  "test06969" : {
    "methodSignature" : "public Map.Entry<K, V> select(final K key)",
    "methodName" : "select",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06969() throws Throwable {\n    HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();\n    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>(hashMap0);\n    patriciaTrie0.nextKey(\"\");\n    patriciaTrie0.select(\"io,acXLpb#,Gs8\");\n}",
    "testName" : "test06969"
  },
  "test02323" : {
    "methodSignature" : "TrieEntry<K, V> getEntry(final Object k)",
    "methodName" : "getEntry",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02323() throws Throwable {\n    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();\n    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>(patriciaTrie0);\n    PatriciaTrie<Object> patriciaTrie2 = new PatriciaTrie<Object>(patriciaTrie1);\n    patriciaTrie2.getEntry(patriciaTrie0);\n}",
    "testName" : "test02323"
  },
  "test04545" : {
    "methodSignature" : "public boolean containsKey(final Object k)",
    "methodName" : "containsKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04545() throws Throwable {\n    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();\n    PatriciaTrie<AbstractMap.SimpleImmutableEntry<String, Integer>> patriciaTrie1 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<String, Integer>>();\n    patriciaTrie1.containsKey(\"lXsl]^JP'A_\");\n}",
    "testName" : "test04545"
  },
  "test01515" : {
    "methodSignature" : "public SortedMap<K, V> subMap(final K fromKey, final K toKey)",
    "methodName" : "subMap",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01515() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    HashMap<String, String> hashMap0 = new HashMap<String, String>(patriciaTrie0);\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(hashMap0);\n    patriciaTrie1.subMap(\"(G\\u0002Ohkk{/%8tCT\", \"<B\");\n}",
    "testName" : "test01515"
  },
  "test06767" : {
    "methodSignature" : "public K firstKey()",
    "methodName" : "firstKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06767() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.decrementSize();\n    patriciaTrie0.firstKey();\n}",
    "testName" : "test06767"
  },
  "test03535" : {
    "methodSignature" : "public void clear()",
    "methodName" : "clear",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03535() throws Throwable {\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>(\"\", \"\", (-52));\n    AbstractPatriciaTrie.isValidUplink(abstractPatriciaTrie_TrieEntry0, abstractPatriciaTrie_TrieEntry0);\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.ceilingEntry(\"\");\n    patriciaTrie0.size();\n    Integer integer0 = new Integer(0);\n    AbstractPatriciaTrie.TrieEntry<Object, Object> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Object, Object>((Object) null, integer0, (-52));\n    AbstractPatriciaTrie.TrieEntry<Object, Object> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Object, Object>(integer0, \"\", (-1));\n    abstractPatriciaTrie_TrieEntry2.value = (Object) abstractPatriciaTrie_TrieEntry1;\n    AbstractPatriciaTrie.TrieEntry abstractPatriciaTrie_TrieEntry3 = (AbstractPatriciaTrie.TrieEntry) abstractPatriciaTrie_TrieEntry2.value;\n    abstractPatriciaTrie_TrieEntry1.key = (Object) abstractPatriciaTrie_TrieEntry3;\n    abstractPatriciaTrie_TrieEntry1.isInternalNode();\n    HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();\n    PatriciaTrie<Integer> patriciaTrie1 = new PatriciaTrie<Integer>(hashMap0);\n    patriciaTrie1.clear();\n}",
    "testName" : "test03535"
  },
  "test08989" : {
    "methodSignature" : "TrieEntry<K, V> floorEntry(final K key)",
    "methodName" : "floorEntry",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08989() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());\n    doReturn((Object) null).when(biFunction0).apply(any(), any());\n    patriciaTrie0.put(\"ToKey is out of range: \", \"ToKey is out of range: \");\n    patriciaTrie0.computeIfPresent(\"ToKey is out of range: \", biFunction0);\n    patriciaTrie0.floorEntry(\"org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry\");\n}",
    "testName" : "test08989"
  },
  "test02525" : {
    "methodSignature" : "public SortedMap<K, V> headMap(final K toKey)",
    "methodName" : "headMap",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02525() throws Throwable {\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>(hashMap0);\n    patriciaTrie0.headMap(\"\");\n}",
    "testName" : "test02525"
  },
  "test05757" : {
    "methodSignature" : "public SortedMap<K, V> tailMap(final K fromKey)",
    "methodName" : "tailMap",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05757() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    PatriciaTrie<AbstractMap.SimpleEntry<Object, String>> patriciaTrie1 = new PatriciaTrie<AbstractMap.SimpleEntry<Object, String>>();\n    Integer integer0 = new Integer(1162);\n    AbstractMap.SimpleEntry<Object, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, String>(integer0, \"\");\n    patriciaTrie1.put(\")4EtKa*\", abstractMap_SimpleEntry0);\n    patriciaTrie1.tailMap((String) null);\n}",
    "testName" : "test05757"
  },
  "test01717" : {
    "methodSignature" : "public boolean containsKey(final Object k)",
    "methodName" : "containsKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01717() throws Throwable {\n    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();\n    Object object0 = new Object();\n    patriciaTrie0.containsKey(object0);\n}",
    "testName" : "test01717"
  },
  "test02727" : {
    "methodSignature" : "public K nextKey(final K key)",
    "methodName" : "nextKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02727() throws Throwable {\n    HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();\n    Integer integer0 = new Integer(0);\n    hashMap0.put(\"Tf\", integer0);\n    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>(hashMap0);\n    hashMap0.put(\"Tf\", (Integer) null);\n    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry0 = patriciaTrie0.subtree(\"Tf\", 0, 0);\n    patriciaTrie0.selectValue(\"\");\n    patriciaTrie0.selectKey(\"\");\n    patriciaTrie0.clear();\n    AbstractPatriciaTrie.TrieEntry<Object, String> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Object, String>(\"Tf\", (String) null, 1);\n    Integer integer1 = new Integer(1);\n    AbstractPatriciaTrie.TrieEntry<Object, String> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Object, String>(integer1, \"Tf\", (-3825));\n    abstractPatriciaTrie_TrieEntry1.parent = abstractPatriciaTrie_TrieEntry2;\n    abstractPatriciaTrie_TrieEntry1.isExternalNode();\n    abstractPatriciaTrie_TrieEntry0.toString();\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>();\n    patriciaTrie1.nextKey((String) null);\n}",
    "testName" : "test02727"
  },
  "test04949" : {
    "methodSignature" : "public K selectKey(final K key)",
    "methodName" : "selectKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04949() throws Throwable {\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>(hashMap0);\n    patriciaTrie0.entrySet();\n    Set<Map.Entry<String, String>> set0 = (Set<Map.Entry<String, String>>) patriciaTrie0.entrySet();\n    AbstractPatriciaTrie.TrieEntry<Object, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Object, String>(set0, \"Ur>+bf\", 0);\n    patriciaTrie0.values();\n    AbstractPatriciaTrie.TrieEntry<Object, String> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Object, String>((Object) null, \"'tc#JyA{:\\\",n+F#HSq\", (-1));\n    abstractPatriciaTrie_TrieEntry0.right = abstractPatriciaTrie_TrieEntry1;\n    Integer integer0 = new Integer(0);\n    patriciaTrie0.subtree(\"u@;uw1LS`{,s8u`5\", 0, (-1));\n    Integer integer1 = new Integer(0);\n    AbstractPatriciaTrie.TrieEntry<Integer, Object> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Integer, Object>(integer0, integer1, (-55));\n    hashMap0.put(\"K4#n2I+47C?\", \"K4#n2I+47C?\");\n    Integer integer2 = (Integer) abstractPatriciaTrie_TrieEntry2.value;\n    abstractPatriciaTrie_TrieEntry0.bitIndex = 0;\n    abstractPatriciaTrie_TrieEntry0.key = (Object) integer2;\n    AbstractPatriciaTrie.isValidUplink(abstractPatriciaTrie_TrieEntry0, abstractPatriciaTrie_TrieEntry0);\n    PatriciaTrie<Integer> patriciaTrie1 = new PatriciaTrie<Integer>();\n    patriciaTrie1.ceilingEntry(\"org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry\");\n    patriciaTrie1.put(\"K4#n2I+47C?\", integer1);\n    patriciaTrie1.floorEntry(\"Cannot determine prefix outside of Character boundaries\");\n    PatriciaTrie<Object> patriciaTrie2 = new PatriciaTrie<Object>();\n    BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());\n    patriciaTrie2.computeIfPresent(\"org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry\", biFunction0);\n    patriciaTrie2.selectKey(\"Cannot determine prefix outside of Character boundaries\");\n}",
    "testName" : "test04949"
  },
  "test01919" : {
    "methodSignature" : "TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits)",
    "methodName" : "subtree",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01919() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);\n    patriciaTrie1.put(\"org.apache.commons.collections4.trie.PatriciaTrie\", \"org.apache.commons.collections4.trie.PatriciaTrie\");\n    int int0 = 2032;\n    patriciaTrie0.put(\"org.apache.commons.collections4.trie.PatriciaTrie\", \"keyAnalyzer\");\n    patriciaTrie1.subtree(\"org.apache.commons.collections4.trie.PatriciaTrie\", 0, 2032);\n}",
    "testName" : "test01919"
  },
  "test03939" : {
    "methodSignature" : "TrieEntry<K, V> previousEntry(final TrieEntry<K, V> start)",
    "methodName" : "previousEntry",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03939() throws Throwable {\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>(hashMap0);\n    String string0 = \"M&Us\";\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>(\"org.apache.commons.collections4.trie.KeyAnalyzer\", \"m2g\", 16);\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.parent;\n    patriciaTrie0.previousEntry((AbstractPatriciaTrie.TrieEntry<String, String>) null);\n}",
    "testName" : "test03939"
  },
  "test09595" : {
    "methodSignature" : "public boolean containsKey(final Object k)",
    "methodName" : "containsKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09595() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    Collection<String> collection0 = patriciaTrie0.values();\n    String string0 = \"org.apache.commons.collections4.trie.KeyAnalyzer\";\n    int int0 = (-1298);\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = patriciaTrie0.getNearestEntryForKey(\"org.apache.commons.collections4.trie.KeyAnalyzer\", (-1298));\n    String string1 = \"qZ.OKGoE49.}Rbj}F\";\n    patriciaTrie0.put(\"org.apache.commons.collections4.trie.KeyAnalyzer\", \"qZ.OKGoE49.}Rbj}F\");\n    patriciaTrie0.put(\"\", \"\");\n    patriciaTrie0.removeEntry(abstractPatriciaTrie_TrieEntry0);\n    patriciaTrie0.containsKey(collection0);\n}",
    "testName" : "test09595"
  },
  "test06161" : {
    "methodSignature" : "TrieEntry<K, V> getEntry(final Object k)",
    "methodName" : "getEntry",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06161() throws Throwable {\n    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();\n    Integer integer0 = new Integer(0);\n    patriciaTrie0.put(\"\", integer0);\n    patriciaTrie0.previousKey(\"\");\n    patriciaTrie0.nextKey(\"3PeJLNRnnQK/,](_\");\n    PatriciaTrie<Integer> patriciaTrie1 = new PatriciaTrie<Integer>(patriciaTrie0);\n    Integer integer1 = new Integer(0);\n    patriciaTrie1.putIfAbsent(\"\", integer1);\n    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>(patriciaTrie1);\n    AbstractPatriciaTrie.TrieEntry<Integer, Object> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Integer, Object>(integer1, (Object) null, 0);\n    abstractPatriciaTrie_TrieEntry0.getValue();\n    patriciaTrie2.getEntry((Object) null);\n}",
    "testName" : "test06161"
  },
  "test08383" : {
    "methodSignature" : "public V remove(final Object k)",
    "methodName" : "remove",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08383() throws Throwable {\n    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();\n    String string0 = \"\";\n    patriciaTrie0.select(\"\");\n    patriciaTrie0.put(\"WW X\", \"WW X\");\n    String string1 = \"9}F\";\n    patriciaTrie0.prefixMap(\"9}F\");\n    patriciaTrie0.remove((Object) \"\");\n    Integer integer0 = new Integer(62);\n    patriciaTrie0.remove((Object) integer0);\n}",
    "testName" : "test08383"
  },
  "test05151" : {
    "methodSignature" : "public K firstKey()",
    "methodName" : "firstKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05151() throws Throwable {\n    PatriciaTrie<AbstractMap.SimpleImmutableEntry<Integer, Object>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<Integer, Object>>();\n    patriciaTrie0.firstKey();\n}",
    "testName" : "test05151"
  },
  "test07373" : {
    "methodSignature" : "TrieEntry<K, V> nextEntry(final TrieEntry<K, V> node)",
    "methodName" : "nextEntry",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07373() throws Throwable {\n    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();\n    patriciaTrie0.put(\"C]6DQ/ahxA\", \"C]6DQ/ahxA\");\n    patriciaTrie0.nextEntry((AbstractPatriciaTrie.TrieEntry<String, Object>) null);\n}",
    "testName" : "test07373"
  },
  "test09393" : {
    "methodSignature" : "public K previousKey(final K key)",
    "methodName" : "previousKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09393() throws Throwable {\n    PatriciaTrie<AbstractMap.SimpleImmutableEntry<Integer, Object>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<Integer, Object>>();\n    patriciaTrie0.values();\n    patriciaTrie0.mapIterator();\n    patriciaTrie0.get(\"Trie[\");\n    patriciaTrie0.subtree(\"n&dofo?X}-jz\", (-1754), 77);\n    HashMap<String, String> hashMap0 = new HashMap<String, String>();\n    hashMap0.put(\"n&dofo?X}-jz\", \"\");\n    hashMap0.put(\"CZz\", \"n&dofo?X}-jz\");\n    hashMap0.put(\"n&dofo?X}-jz\", \"Trie[\");\n    hashMap0.put(\"\", \"Trie[\");\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(hashMap0);\n    BiConsumer<String, Object> biConsumer0 = (BiConsumer<String, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());\n    patriciaTrie1.forEach(biConsumer0);\n    hashMap0.put(\"n&dofo?X}-jz\", \"n&dofo?X}-jz\");\n    hashMap0.put(\"\", \"\");\n    patriciaTrie1.previousKey((String) null);\n}",
    "testName" : "test09393"
  },
  "test08181" : {
    "methodSignature" : "public V remove(final Object k)",
    "methodName" : "remove",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08181() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.lengthInBits(\"\");\n    patriciaTrie0.put(\"Entry(\", \"\");\n    patriciaTrie0.ceilingEntry(\"\");\n    Integer integer0 = new Integer((-2693));\n    patriciaTrie0.remove((Object) integer0);\n}",
    "testName" : "test08181"
  },
  "test06565" : {
    "methodSignature" : "public void clear()",
    "methodName" : "clear",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06565() throws Throwable {\n    Integer integer0 = new Integer(1);\n    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Object>(\")D>pE/KPb:ub(d\", integer0, (-647));\n    abstractPatriciaTrie_TrieEntry0.toString();\n    Object object0 = abstractPatriciaTrie_TrieEntry0.setValue(\")D>pE/KPb:ub(d\");\n    abstractPatriciaTrie_TrieEntry0.toString();\n    PatriciaTrie<Integer> patriciaTrie0 = new PatriciaTrie<Integer>();\n    PatriciaTrie<Integer> patriciaTrie1 = new PatriciaTrie<Integer>(patriciaTrie0);\n    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>(patriciaTrie1);\n    patriciaTrie0.nextKey(\"Entry(key=)D>pE/KPb:ub(d [-647], value=)D>pE/KPb:ub(d, parent=null, left=)D>pE/KPb:ub(d [-647], right=null, predecessor=)D>pE/KPb:ub(d [-647])\");\n    PatriciaTrie<Integer> patriciaTrie3 = new PatriciaTrie<Integer>(patriciaTrie2);\n    patriciaTrie3.decrementSize();\n    abstractPatriciaTrie_TrieEntry0.value = object0;\n    BiFunction<Object, Integer, Integer> biFunction0 = (BiFunction<Object, Integer, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());\n    patriciaTrie3.computeIfPresent(\"IcqWo\", biFunction0);\n    patriciaTrie3.size();\n    patriciaTrie1.put(\"6}%5!O?u@\", integer0);\n    patriciaTrie1.prefixMap(\"*DfI3?H~\");\n    Integer integer1 = new Integer(1);\n    AbstractPatriciaTrie.TrieEntry<Object, Object> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Object, Object>(integer1, patriciaTrie2, 1);\n    abstractPatriciaTrie_TrieEntry1.isExternalNode();\n    AbstractPatriciaTrie.isValidUplink(abstractPatriciaTrie_TrieEntry1, abstractPatriciaTrie_TrieEntry0);\n    patriciaTrie3.clear();\n}",
    "testName" : "test06565"
  },
  "test03333" : {
    "methodSignature" : "TrieEntry<K, V> higherEntry(final K key)",
    "methodName" : "higherEntry",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03333() throws Throwable {\n    PatriciaTrie<AbstractMap.SimpleEntry<String, String>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleEntry<String, String>>();\n    patriciaTrie0.higherEntry(\"\");\n}",
    "testName" : "test03333"
  },
  "test08787" : {
    "methodSignature" : "public K previousKey(final K key)",
    "methodName" : "previousKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08787() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.put(\"\", \"?Z\");\n    patriciaTrie0.put(\" + \", \",ee)#(<d};,Q57g\");\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);\n    patriciaTrie0.put(\"7.*Cz$U\", (String) null);\n    patriciaTrie0.nextKey(\"\");\n    patriciaTrie0.getEntry((Object) null);\n    patriciaTrie1.ceilingEntry(\"left=\");\n    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>();\n    patriciaTrie1.get((Object) null);\n    Integer integer0 = new Integer(116);\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>((String) null, integer0, 116);\n    patriciaTrie0.incrementSize();\n    Integer integer1 = new Integer((-711));\n    patriciaTrie2.put(\"?Z\", integer1);\n    abstractPatriciaTrie_TrieEntry0.setValue(integer0);\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.predecessor;\n    patriciaTrie1.isBitSet(\"left=\", 0, 0);\n    patriciaTrie2.addEntry(abstractPatriciaTrie_TrieEntry1, 116);\n    patriciaTrie1.previousKey((String) null);\n}",
    "testName" : "test08787"
  },
  "test05555" : {
    "methodSignature" : "TrieEntry<K, V> followLeft(TrieEntry<K, V> node)",
    "methodName" : "followLeft",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05555() throws Throwable {\n    AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<Object, Object>, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<AbstractMap.SimpleEntry<Object, Object>, String>((AbstractMap.SimpleEntry<Object, Object>) null, \"\", (-1));\n    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();\n    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, Object>(\"\", (Object) null, 1);\n    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry2 = abstractPatriciaTrie_TrieEntry1.left;\n    patriciaTrie0.followLeft(abstractPatriciaTrie_TrieEntry2);\n}",
    "testName" : "test05555"
  },
  "test100100" : {
    "methodSignature" : "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)",
    "methodName" : "isValidUplink",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100100() throws Throwable {\n    Integer integer0 = new Integer(1);\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(\"A{CEcN}(;:+\", integer0, 1);\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, Integer>(\"A{CEcN}(;:+\", integer0, 1);\n    abstractPatriciaTrie_TrieEntry0.left = abstractPatriciaTrie_TrieEntry1;\n    Integer integer1 = new Integer(1);\n    abstractPatriciaTrie_TrieEntry0.setKeyValue(\"A{CEcN}(;:+\", integer1);\n    abstractPatriciaTrie_TrieEntry0.isExternalNode();\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.put(\"A{CEcN}(;:+\", \"A{CEcN}(;:+\");\n    patriciaTrie0.floorEntry(\"A{CEcN}(;:+\");\n    abstractPatriciaTrie_TrieEntry1.setValue((Integer) null);\n    Collection<String> collection0 = patriciaTrie0.values();\n    AbstractPatriciaTrie.TrieEntry<Object, Object> abstractPatriciaTrie_TrieEntry2 = new AbstractPatriciaTrie.TrieEntry<Object, Object>(\"A{CEcN}(;:+\", abstractPatriciaTrie_TrieEntry1, (-2426));\n    abstractPatriciaTrie_TrieEntry2.isExternalNode();\n    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>();\n    patriciaTrie1.put(\"A{CEcN}(;:+\", integer0);\n    patriciaTrie1.lowerEntry(\"A{CEcN}(;:+\");\n    AbstractMap.SimpleImmutableEntry<Object, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, Object>(collection0, integer0);\n    patriciaTrie0.get((Object) null);\n    AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<Object, Object>> abstractPatriciaTrie_TrieEntry3 = new AbstractPatriciaTrie.TrieEntry<Object, AbstractMap.SimpleImmutableEntry<Object, Object>>(abstractPatriciaTrie_TrieEntry0, abstractMap_SimpleImmutableEntry0, (-1006));\n    abstractPatriciaTrie_TrieEntry3.isInternalNode();\n    patriciaTrie1.lastKey();\n    patriciaTrie1.higherEntry(\"QQ~u\");\n    AbstractPatriciaTrie.isValidUplink(abstractPatriciaTrie_TrieEntry0, abstractPatriciaTrie_TrieEntry3);\n}",
    "testName" : "test100100"
  },
  "test04141" : {
    "methodSignature" : "public K selectKey(final K key)",
    "methodName" : "selectKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04141() throws Throwable {\n    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();\n    patriciaTrie0.previousKey(\"=\");\n    patriciaTrie0.ceilingEntry(\"Mwm'[Qp!|Y\");\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>();\n    PatriciaTrie<String> patriciaTrie2 = new PatriciaTrie<String>(patriciaTrie1);\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>(\"!UZbyVBqi3D>\\\"G\", \"\", 0);\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry1 = abstractPatriciaTrie_TrieEntry0.predecessor;\n    patriciaTrie1.addEntry(abstractPatriciaTrie_TrieEntry1, 2);\n    PatriciaTrie<String> patriciaTrie3 = new PatriciaTrie<String>(patriciaTrie2);\n    patriciaTrie3.selectKey(\"=\");\n}",
    "testName" : "test04141"
  },
  "test09797" : {
    "methodSignature" : "TrieEntry<K, V> previousEntry(final TrieEntry<K, V> start)",
    "methodName" : "previousEntry",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09797() throws Throwable {\n    PatriciaTrie<Object> patriciaTrie0 = new PatriciaTrie<Object>();\n    patriciaTrie0.select(\"\");\n    patriciaTrie0.put(\"WW X\", \"WW X\");\n    patriciaTrie0.prefixMap(\"\");\n    patriciaTrie0.remove((Object) \"\");\n    Integer integer0 = new Integer(62);\n    patriciaTrie0.remove((Object) \"9}F\");\n    Object object0 = new Object();\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>();\n    patriciaTrie1.higherEntry(\"#6~pB3\");\n    patriciaTrie1.clear();\n    patriciaTrie1.entrySet();\n    patriciaTrie1.headMap(\"9}F\");\n    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Object>(\"zW*SgLZ$UknaPxMw~\", (Object) null, (-797));\n    abstractPatriciaTrie_TrieEntry0.bitIndex = 1;\n    Integer integer1 = new Integer((-797));\n    abstractPatriciaTrie_TrieEntry0.setValue(integer1);\n    patriciaTrie0.headMap(\"9}F\");\n    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    Map.Entry.comparingByValue((Comparator<? super AbstractMap.SimpleEntry<Object, AbstractMap.SimpleImmutableEntry<String, Object>>>) comparator0);\n    Map.Entry.comparingByValue();\n    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, Object>(\"\", patriciaTrie0, (-3));\n    abstractPatriciaTrie_TrieEntry0.equals((Object) null);\n    abstractPatriciaTrie_TrieEntry0.parent = abstractPatriciaTrie_TrieEntry1;\n    AbstractPatriciaTrie.TrieEntry<String, Object> abstractPatriciaTrie_TrieEntry2 = abstractPatriciaTrie_TrieEntry0.predecessor;\n    patriciaTrie0.previousEntry(abstractPatriciaTrie_TrieEntry2);\n}",
    "testName" : "test09797"
  },
  "test06363" : {
    "methodSignature" : "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)",
    "methodName" : "isValidUplink",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06363() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.put(\"s{MX;X0n/.7C\", \"\");\n    AbstractPatriciaTrie.TrieEntry<String, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, String>(\"}d5[47a\", \"}d5[47a\", 65);\n    patriciaTrie0.nextEntryInSubtree(abstractPatriciaTrie_TrieEntry0, abstractPatriciaTrie_TrieEntry0);\n    AbstractPatriciaTrie.isValidUplink(abstractPatriciaTrie_TrieEntry0, (AbstractPatriciaTrie.TrieEntry<?, ?>) null);\n}",
    "testName" : "test06363"
  },
  "test03131" : {
    "methodSignature" : "TrieEntry<K, V> lastEntry()",
    "methodName" : "lastEntry",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03131() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.lastEntry();\n}",
    "testName" : "test03131"
  },
  "test02121" : {
    "methodSignature" : "public SortedMap<K, V> subMap(final K fromKey, final K toKey)",
    "methodName" : "subMap",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02121() throws Throwable {\n    PatriciaTrie<AbstractMap.SimpleEntry<Object, Object>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleEntry<Object, Object>>();\n    Object object0 = new Object();\n    AbstractPatriciaTrie.TrieEntry<Object, String> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<Object, String>(object0, \"w\", 0);\n    abstractPatriciaTrie_TrieEntry0.setValue(\"w\");\n    AbstractPatriciaTrie.TrieEntry<Object, String> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<Object, String>(object0, \"w\", 543);\n    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    Map.Entry.comparingByKey((Comparator<? super Integer>) comparator0);\n    abstractPatriciaTrie_TrieEntry0.left = abstractPatriciaTrie_TrieEntry1;\n    Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    Map.Entry.comparingByValue();\n    abstractPatriciaTrie_TrieEntry1.bitIndex = (-2342);\n    Comparator<Object> comparator2 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    Map.Entry.comparingByValue((Comparator<? super Object>) comparator2);\n    abstractPatriciaTrie_TrieEntry1.parent = abstractPatriciaTrie_TrieEntry0;\n    Map.Entry.comparingByValue((Comparator<? super Object>) comparator1);\n    abstractPatriciaTrie_TrieEntry0.toString();\n    PatriciaTrie<Object> patriciaTrie1 = new PatriciaTrie<Object>();\n    patriciaTrie1.keySet();\n    HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();\n    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>(hashMap0);\n    PatriciaTrie<Integer> patriciaTrie3 = new PatriciaTrie<Integer>(patriciaTrie2);\n    PatriciaTrie<Integer> patriciaTrie4 = new PatriciaTrie<Integer>(patriciaTrie3);\n    PatriciaTrie<Integer> patriciaTrie5 = new PatriciaTrie<Integer>(patriciaTrie4);\n    patriciaTrie5.subMap(\"w\", \"Cannot determine prefix outside of Character boundaries\");\n}",
    "testName" : "test02121"
  },
  "test05353" : {
    "methodSignature" : "public K firstKey()",
    "methodName" : "firstKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05353() throws Throwable {\n    PatriciaTrie<AbstractMap.SimpleImmutableEntry<Object, Object>> patriciaTrie0 = new PatriciaTrie<AbstractMap.SimpleImmutableEntry<Object, Object>>();\n    int int0 = (-2446);\n    patriciaTrie0.getNearestEntryForKey(\"+W8%!;6Y.}\", (-2446));\n    patriciaTrie0.firstKey();\n}",
    "testName" : "test05353"
  },
  "test09191" : {
    "methodSignature" : "public K previousKey(final K key)",
    "methodName" : "previousKey",
    "className" : "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09191() throws Throwable {\n    PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();\n    patriciaTrie0.put(\"tX\", \"?Z\");\n    patriciaTrie0.put(\" + \", \",ee)(<d};,Q57g\");\n    PatriciaTrie<String> patriciaTrie1 = new PatriciaTrie<String>(patriciaTrie0);\n    patriciaTrie0.nextKey(\"tX\");\n    patriciaTrie0.getEntry((Object) null);\n    patriciaTrie1.ceilingEntry(\"left=\");\n    PatriciaTrie<Integer> patriciaTrie2 = new PatriciaTrie<Integer>();\n    patriciaTrie1.get((Object) null);\n    Integer integer0 = new Integer(116);\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry0 = new AbstractPatriciaTrie.TrieEntry<String, Integer>((String) null, integer0, 116);\n    patriciaTrie0.incrementSize();\n    Integer integer1 = new Integer((-710));\n    patriciaTrie2.put(\"?Z\", integer1);\n    abstractPatriciaTrie_TrieEntry0.setValue(integer0);\n    AbstractPatriciaTrie.TrieEntry<String, Integer> abstractPatriciaTrie_TrieEntry1 = new AbstractPatriciaTrie.TrieEntry<String, Integer>((String) null, integer1, (-710));\n    patriciaTrie1.isBitSet(\"left=\", 0, 0);\n    patriciaTrie2.addEntry(abstractPatriciaTrie_TrieEntry1, 116);\n    patriciaTrie1.previousKey((String) null);\n}",
    "testName" : "test09191"
  }
}