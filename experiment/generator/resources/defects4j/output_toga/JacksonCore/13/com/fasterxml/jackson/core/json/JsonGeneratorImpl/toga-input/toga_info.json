{
  "test1113" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1113() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);\n    DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);\n    byte[] byteArray0 = new byte[6];\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, dataOutputStream0, byteArray0, (byte) (-1), false);\n    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.WRITE_NUMBERS_AS_STRINGS;\n    JsonGenerator jsonGenerator0 = uTF8JsonGenerator0.enable(jsonGenerator_Feature0);\n    jsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test1113"
  },
  "test2225" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2225() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, pushbackInputStream0, true);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"com.fasterxml.jackson.core.json.JsonGeneratorImpl\");\n    byte[] byteArray0 = new byte[6];\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);\n    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;\n    JsonGenerator jsonGenerator0 = uTF8JsonGenerator0.setRootValueSeparator(serializedString0);\n    jsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test2225"
  },
  "test1214" : {
    "methodSignature" : "public void writeStringField(String fieldName, String value) throws IOException",
    "methodName" : "writeStringField",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1214() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"Illegal white space character (code 0x\");\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 192, (ObjectCodec) null, mockFileOutputStream0);\n    uTF8JsonGenerator0.close();\n    uTF8JsonGenerator0.writeStringField(\"FAIL_ON_SYMBOL_HASH_OVERFLOW\", \"\\\":zA~\");\n}",
    "testName" : "test1214"
  },
  "test2326" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2326() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-6), (ObjectCodec) null, (Writer) null);\n    int int0 = writerBasedJsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test2326"
  },
  "test2023" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2023() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringWriter stringWriter0 = new StringWriter();\n    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, stringWriter0);\n    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.QUOTE_FIELD_NAMES;\n    JsonGenerator jsonGenerator0 = writerBasedJsonGenerator0.enable(jsonGenerator_Feature0);\n    jsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test2023"
  },
  "test1012" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1012() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);\n    BigInteger bigInteger0 = BigInteger.ONE;\n    writerBasedJsonGenerator0.writeNumber(bigInteger0);\n    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN;\n    JsonGenerator jsonGenerator0 = writerBasedJsonGenerator0.enable(jsonGenerator_Feature0);\n    jsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test1012"
  },
  "test2124" : {
    "methodSignature" : "public void writeStringField(String fieldName, String value) throws IOException",
    "methodName" : "writeStringField",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2124() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, pushbackInputStream0, true);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"com.fasterxml.jackson.core.JsonParseException\");\n    byte[] byteArray0 = new byte[6];\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);\n    // Undeclared exception!\n    uTF8JsonGenerator0.writeStringField(\"com.fasterxml.jackson.core.JsonParseException\", \"com.fasterxml.jackson.core.JsonParseException\");\n}",
    "testName" : "test2124"
  },
  "test011" : {
    "methodSignature" : "public int getOutputBuffered()",
    "methodName" : "getOutputBuffered",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"Illegal white space character (code 0x\");\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 192, (ObjectCodec) null, mockFileOutputStream0);\n    uTF8JsonGenerator0.writeStringField(\"FAIL_ON_SYMBOL_HASH_OVERFLOW\", \"\\\":zA~\");\n    uTF8JsonGenerator0.getOutputBuffered();\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringWriter stringWriter0 = new StringWriter();\n    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (byte) 32, (ObjectCodec) null, stringWriter0);\n    writerBasedJsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test033"
  },
  "test1517" : {
    "methodSignature" : "public JsonGenerator enable(Feature f)",
    "methodName" : "enable",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1517() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringWriter stringWriter0 = new StringWriter();\n    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, stringWriter0);\n    writerBasedJsonGenerator0.enable((JsonGenerator.Feature) null);\n}",
    "testName" : "test1517"
  },
  "test034" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringWriter stringWriter0 = new StringWriter();\n    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (byte) 32, (ObjectCodec) null, stringWriter0);\n    JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.ESCAPE_NON_ASCII;\n    writerBasedJsonGenerator0.enable(jsonGenerator_Feature0);\n    SerializedString serializedString0 = new SerializedString(\" 9dmd).a*8{w:S!;\");\n    JsonGenerator jsonGenerator0 = writerBasedJsonGenerator0.setRootValueSeparator(serializedString0);\n    jsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test034"
  },
  "test056" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, (-10));\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4534, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, (-166), true);\n    uTF8JsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test056"
  },
  "test1618" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1618() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"Illegal white space character (code 0x\");\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 156, (ObjectCodec) null, mockFileOutputStream0);\n    uTF8JsonGenerator0.setHighestNonEscapedChar(1);\n    uTF8JsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test1618"
  },
  "test1315" : {
    "methodSignature" : "public void writeStringField(String fieldName, String value) throws IOException",
    "methodName" : "writeStringField",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1315() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"Illegal white space character (code 0x\", false);\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 205, (ObjectCodec) null, mockFileOutputStream0);\n    int[] intArray0 = new int[1];\n    uTF8JsonGenerator0._outputEscapes = intArray0;\n    uTF8JsonGenerator0.writeStringField(\"Illegal white space character (code 0x\", \"Illegal white space character (code 0x\");\n}",
    "testName" : "test1315"
  },
  "test2427" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2427() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, pushbackInputStream0, true);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Eiu4\");\n    byte[] byteArray0 = new byte[3];\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);\n    uTF8JsonGenerator0.getCharacterEscapes();\n    uTF8JsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test2427"
  },
  "test1416" : {
    "methodSignature" : "public void writeStringField(String fieldName, String value) throws IOException",
    "methodName" : "writeStringField",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1416() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"Illegal white space character (code 0x\");\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 192, (ObjectCodec) null, mockFileOutputStream0);\n    byte[] byteArray0 = new byte[7];\n    uTF8JsonGenerator0.writeBinaryField(\"Illegal white space character (code 0x\", byteArray0);\n    uTF8JsonGenerator0.writeStringField(\"FAIL_ON_SYMBOL_HASH_O|ERFLOW\", \"\\\":zA~\");\n}",
    "testName" : "test1416"
  },
  "test2528" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2528() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-6), (ObjectCodec) null, (Writer) null);\n    writerBasedJsonGenerator0.version();\n    writerBasedJsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test2528"
  },
  "test068" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    byte[] byteArray0 = new byte[9];\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, (OutputStream) null, byteArray0, (-123), true);\n    JsonGenerator jsonGenerator0 = uTF8JsonGenerator0.setCharacterEscapes((CharacterEscapes) null);\n    jsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test068"
  },
  "test1720" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1720() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-6), (ObjectCodec) null, (Writer) null);\n    writerBasedJsonGenerator0.setHighestNonEscapedChar((-6));\n    writerBasedJsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test1720"
  },
  "test000" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, pushbackInputStream0, true);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Z*h*ISf,#n(</\\\"a]x,\");\n    byte[] byteArray0 = new byte[3];\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);\n    int[] intArray0 = new int[0];\n    uTF8JsonGenerator0._outputEscapes = intArray0;\n    JsonGenerator jsonGenerator0 = uTF8JsonGenerator0.setCharacterEscapes((CharacterEscapes) null);\n    jsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, Integer.MIN_VALUE, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, (-3225), true);\n    JsonGenerator jsonGenerator0 = uTF8JsonGenerator0.setRootValueSeparator((SerializableString) null);\n    jsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test022"
  },
  "test045" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test045() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"Illegal white space character (code 0x\");\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 156, (ObjectCodec) null, mockFileOutputStream0);\n    uTF8JsonGenerator0.writeNumber(\"}R|Y7@5O\");\n    uTF8JsonGenerator0.setHighestNonEscapedChar(1);\n    uTF8JsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test045"
  },
  "test1821" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1821() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, pushbackInputStream0, true);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Eiu4\");\n    byte[] byteArray0 = new byte[3];\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);\n    uTF8JsonGenerator0._checkStdFeatureChanges(0, (-1));\n    uTF8JsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test1821"
  },
  "test0810" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0810() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);\n    int int0 = writerBasedJsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test0810"
  },
  "test1922" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1922() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, pushbackInputStream0, true);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"com.fasterxml.jackson.core.json.JsonGeneratorImpl\");\n    byte[] byteArray0 = new byte[6];\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);\n    JsonGenerator jsonGenerator0 = uTF8JsonGenerator0.overrideStdFeatures(57343, (byte) 41);\n    jsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test1922"
  },
  "test0911" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0911() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"yH]er\", true);\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0);\n    uTF8JsonGenerator0._maximumNonEscapedChar = (-467);\n    int int0 = uTF8JsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test0911"
  },
  "test1719" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1719() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-6), (ObjectCodec) null, (Writer) null);\n    writerBasedJsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test1719"
  },
  "test057" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test057() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, (-10));\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4534, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, (-166), true);\n    JsonGenerator jsonGenerator0 = uTF8JsonGenerator0.setHighestNonEscapedChar(0);\n    jsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test057"
  },
  "test079" : {
    "methodSignature" : "public int getHighestEscapedChar()",
    "methodName" : "getHighestEscapedChar",
    "className" : "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"3lcKV4OkIt)N]_\");\n    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, mockPrintStream0);\n    JsonGenerator jsonGenerator0 = uTF8JsonGenerator0.setCharacterEscapes((CharacterEscapes) null);\n    jsonGenerator0.getHighestEscapedChar();\n}",
    "testName" : "test079"
  }
}