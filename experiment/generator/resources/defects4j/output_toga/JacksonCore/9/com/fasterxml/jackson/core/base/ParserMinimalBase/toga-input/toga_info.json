{
  "test1212" : {
    "methodSignature" : "public int getValueAsInt(int defValue) throws IOException",
    "methodName" : "getValueAsInt",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, dataInputStream0, true);\n    byte[] byteArray0 = new byte[3];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-929), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2805, 154, false);\n    int int0 = uTF8StreamJsonParser0.getValueAsInt((-1214));\n}",
    "testName" : "test1212"
  },
  "test4646" : {
    "methodSignature" : "public boolean hasTokenId(int id)",
    "methodName" : "hasTokenId",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4646() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, dataInputStream0, true);\n    StringReader stringReader0 = new StringReader(\"n4T 6o#NP @\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 31, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    boolean boolean0 = readerBasedJsonParser0.hasTokenId(0);\n}",
    "testName" : "test4646"
  },
  "test3434" : {
    "methodSignature" : "public final String getValueAsString() throws IOException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"' (code \");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[8];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 1130, 2, false);\n    String string0 = readerBasedJsonParser0.getValueAsString();\n}",
    "testName" : "test3434"
  },
  "test2424" : {
    "methodSignature" : "public JsonToken nextValue() throws IOException",
    "methodName" : "nextValue",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    byte[] byteArray0 = iOContext0.allocReadIOBuffer(2);\n    MockFile mockFile0 = new MockFile(\"d ppfPQKc~cCoP'31}F\");\n    File file0 = MockFile.createTempFile(\"d ppfPQKc~cCoP'31}F\", \"=fS/>*3)!w\", (File) mockFile0);\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, mockFileInputStream0, objectCodec0, (ByteQuadsCanonicalizer) null, byteArray0, 11, 3, false);\n    uTF8StreamJsonParser0.nextValue();\n}",
    "testName" : "test2424"
  },
  "test1010" : {
    "methodSignature" : "public long getValueAsLong(long defaultValue) throws IOException",
    "methodName" : "getValueAsLong",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    PipedInputStream pipedInputStream0 = new PipedInputStream(3);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[4];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3839, 0, false);\n    long long0 = uTF8StreamJsonParser0.getValueAsLong((-474L));\n}",
    "testName" : "test1010"
  },
  "test4444" : {
    "methodSignature" : "public final boolean hasToken(JsonToken t)",
    "methodName" : "hasToken",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4444() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    byte[] byteArray0 = new byte[8];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, (byte) (-28), 2365, false);\n    JsonToken jsonToken0 = JsonToken.FIELD_NAME;\n    boolean boolean0 = uTF8StreamJsonParser0.hasToken(jsonToken0);\n}",
    "testName" : "test4444"
  },
  "test3232" : {
    "methodSignature" : "protected static byte[] _asciiBytes(String str)",
    "methodName" : "_asciiBytes",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    byte[] byteArray0 = ParserMinimalBase._asciiBytes(\": \");\n}",
    "testName" : "test3232"
  },
  "test2222" : {
    "methodSignature" : "protected static byte[] _asciiBytes(String str)",
    "methodName" : "_asciiBytes",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    byte[] byteArray0 = ParserMinimalBase._asciiBytes(\"\");\n}",
    "testName" : "test2222"
  },
  "test033" : {
    "methodSignature" : "public int getTokenLineNr()",
    "methodName" : "getTokenLineNr",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\" of 4-char base64 unit: padding only legal as 3rd or 4th character\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[4];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2408, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 3, (-541), true);\n    ReaderBasedJsonParser readerBasedJsonParser1 = (ReaderBasedJsonParser) readerBasedJsonParser0.skipChildren();\n    readerBasedJsonParser1.getTokenLineNr();\n}",
    "testName" : "test033"
  },
  "test077" : {
    "methodSignature" : "public String getValueAsString(String defValue) throws IOException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Short short0 = new Short((short) 774);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, short0, false);\n    PipedInputStream pipedInputStream0 = new PipedInputStream(3434);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[6];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (short) 774, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 1243, (-1867), false);\n    String string0 = uTF8StreamJsonParser0.getValueAsString(\"HV!E|@^;:4a\");\n}",
    "testName" : "test077"
  },
  "test1616" : {
    "methodSignature" : "public final int getTextOffset() throws IOException",
    "methodName" : "getTextOffset",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1774, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    int int0 = readerBasedJsonParser0.getTextOffset();\n}",
    "testName" : "test1616"
  },
  "test3838" : {
    "methodSignature" : "public boolean getValueAsBoolean(boolean defaultValue) throws IOException",
    "methodName" : "getValueAsBoolean",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3838() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Byte byte0 = new Byte((byte) 92);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, byte0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    boolean boolean0 = readerBasedJsonParser0.getValueAsBoolean(true);\n}",
    "testName" : "test3838"
  },
  "test2828" : {
    "methodSignature" : "public byte[] getBinaryValue(Base64Variant b64variant) throws IOException",
    "methodName" : "getBinaryValue",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Byte byte0 = new Byte((byte) 92);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, byte0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.getBinaryValue((Base64Variant) null);\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public double getValueAsDouble(double defaultValue) throws IOException",
    "methodName" : "getValueAsDouble",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"' (code \");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[8];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 1130, 2, false);\n    double double0 = readerBasedJsonParser0.getValueAsDouble((-1765.601919391));\n}",
    "testName" : "test1414"
  },
  "test4848" : {
    "methodSignature" : "public final int getCurrentTokenId()",
    "methodName" : "getCurrentTokenId",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4848() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, dataInputStream0, true);\n    StringReader stringReader0 = new StringReader(\"n4T 6o#NP @\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 31, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    int int0 = readerBasedJsonParser0.getCurrentTokenId();\n}",
    "testName" : "test4848"
  },
  "test3636" : {
    "methodSignature" : "public long getValueAsLong() throws IOException",
    "methodName" : "getValueAsLong",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3636() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Byte byte0 = new Byte((byte) 92);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, byte0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    long long0 = readerBasedJsonParser0.getValueAsLong();\n}",
    "testName" : "test3636"
  },
  "test2626" : {
    "methodSignature" : "public JsonToken nextValue() throws IOException",
    "methodName" : "nextValue",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"9!o$Q\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[9];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2378, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 3, 0, false);\n    readerBasedJsonParser0.nextValue();\n}",
    "testName" : "test2626"
  },
  "test4242" : {
    "methodSignature" : "public boolean isExpectedStartObjectToken()",
    "methodName" : "isExpectedStartObjectToken",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4242() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"'\\u0529' (code 1321 / 0x529)\", false);\n    StringReader stringReader0 = new StringReader(\"'\\u0529' (code 1321 / 0x529)\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, 8000, 33, true);\n    boolean boolean0 = readerBasedJsonParser0.isExpectedStartObjectToken();\n}",
    "testName" : "test4242"
  },
  "test3030" : {
    "methodSignature" : "public long getValueAsLong(long defaultValue) throws IOException",
    "methodName" : "getValueAsLong",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Boolean boolean0 = Boolean.FALSE;\n    IOContext iOContext0 = new IOContext(bufferRecycler0, boolean0, false);\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    byte[] byteArray0 = new byte[9];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, mockFileInputStream0, objectCodec0, (ByteQuadsCanonicalizer) null, byteArray0, 42, 42, false);\n    long long0 = uTF8StreamJsonParser0.getValueAsLong((long) (byte) 5);\n}",
    "testName" : "test3030"
  },
  "test5252" : {
    "methodSignature" : "protected static String _ascii(byte[] b)",
    "methodName" : "_ascii",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5252() throws Throwable {\n    ParserMinimalBase._ascii((byte[]) null);\n}",
    "testName" : "test5252"
  },
  "test2020" : {
    "methodSignature" : "public abstract String getCurrentName()",
    "methodName" : "getCurrentName",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Double double0 = new Double(2);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, double0, false);\n    StringReader stringReader0 = new StringReader(\"Illegal character '\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2517, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    JsonStreamContext jsonStreamContext0 = readerBasedJsonParser0.getParsingContext();\n    jsonStreamContext0.getCurrentName();\n}",
    "testName" : "test2020"
  },
  "test4040" : {
    "methodSignature" : "public boolean requiresCustomCodec()",
    "methodName" : "requiresCustomCodec",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4040() throws Throwable {\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, sequenceInputStream0, false);\n    StringReader stringReader0 = new StringReader(\"'\");\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1521), stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    JsonParser jsonParser0 = readerBasedJsonParser0.skipChildren();\n    jsonParser0.requiresCustomCodec();\n}",
    "testName" : "test4040"
  },
  "test5050" : {
    "methodSignature" : "public Boolean nextBooleanValue() throws IOException",
    "methodName" : "nextBooleanValue",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5050() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", true);\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[1];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3, pipedInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 0, 3, true);\n    uTF8StreamJsonParser0.nextBooleanValue();\n}",
    "testName" : "test5050"
  },
  "test022" : {
    "methodSignature" : "public boolean canReadTypeId()",
    "methodName" : "canReadTypeId",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"fXZVY_3`\\n:xMp:O3\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.overrideCurrentName(\"Unexpected end-of-String in base64 content\");\n    readerBasedJsonParser0.canReadTypeId();\n}",
    "testName" : "test022"
  },
  "test066" : {
    "methodSignature" : "public final String getValueAsString(String defValue) throws IOException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[6];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 58, (Reader) null, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, (-1), true);\n    String string0 = readerBasedJsonParser0.getValueAsString((String) null);\n}",
    "testName" : "test066"
  },
  "test1818" : {
    "methodSignature" : "public final char[] getTextCharacters() throws IOException",
    "methodName" : "getTextCharacters",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"OmsjU;A*2A$S\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[1];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 629, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 1, (-86), false);\n    char[] charArray1 = readerBasedJsonParser0.getTextCharacters();\n}",
    "testName" : "test1818"
  },
  "test2323" : {
    "methodSignature" : "protected static String _ascii(byte[] b)",
    "methodName" : "_ascii",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    byte[] byteArray0 = new byte[5];\n    String string0 = ParserMinimalBase._ascii(byteArray0);\n}",
    "testName" : "test2323"
  },
  "test1313" : {
    "methodSignature" : "public double getValueAsDouble(double defaultValue) throws IOException",
    "methodName" : "getValueAsDouble",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Short short0 = new Short((short) 8);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, short0, false);\n    StringReader stringReader0 = new StringReader(\"Expected space separating root-level values\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    double double0 = readerBasedJsonParser0.getValueAsDouble((double) 3);\n}",
    "testName" : "test1313"
  },
  "test4545" : {
    "methodSignature" : "public boolean hasTokenId(int id)",
    "methodName" : "hasTokenId",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4545() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[4];\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Long long0 = new Long((-1336L));\n    IOContext iOContext0 = new IOContext(bufferRecycler0, long0, false);\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, 46, true);\n    boolean boolean0 = uTF8StreamJsonParser0.hasTokenId(2);\n}",
    "testName" : "test4545"
  },
  "test3535" : {
    "methodSignature" : "public double getValueAsDouble(double defaultValue) throws IOException",
    "methodName" : "getValueAsDouble",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Double double0 = new Double(0.0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, double0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[0];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 101, true);\n    double double1 = uTF8StreamJsonParser0.getValueAsDouble(0.0);\n}",
    "testName" : "test3535"
  },
  "test2121" : {
    "methodSignature" : "public String getCurrentName() throws IOException",
    "methodName" : "getCurrentName",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Double double0 = new Double(0.0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, double0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[0];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 101, true);\n    String string0 = uTF8StreamJsonParser0.getCurrentName();\n}",
    "testName" : "test2121"
  },
  "test1111" : {
    "methodSignature" : "public int getValueAsInt(int defaultValue) throws IOException",
    "methodName" : "getValueAsInt",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[1];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 37, (Reader) null, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, 37, false);\n    int int0 = readerBasedJsonParser0.getValueAsInt(37);\n}",
    "testName" : "test1111"
  },
  "test4343" : {
    "methodSignature" : "public boolean isExpectedStartArrayToken()",
    "methodName" : "isExpectedStartArrayToken",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4343() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, dataInputStream0, true);\n    byte[] byteArray0 = new byte[3];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-929), byteArrayInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 2805, 154, false);\n    boolean boolean0 = uTF8StreamJsonParser0.isExpectedStartArrayToken();\n}",
    "testName" : "test4343"
  },
  "test3333" : {
    "methodSignature" : "protected final static String _getCharDesc(int ch)",
    "methodName" : "_getCharDesc",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    String string0 = ParserMinimalBase._getCharDesc(1321);\n}",
    "testName" : "test3333"
  },
  "test011" : {
    "methodSignature" : "public int getTokenLineNr()",
    "methodName" : "getTokenLineNr",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"pnb\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 5, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.close();\n    readerBasedJsonParser0.getTokenLineNr();\n}",
    "testName" : "test011"
  },
  "test055" : {
    "methodSignature" : "public boolean hasTextCharacters()",
    "methodName" : "hasTextCharacters",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"Failed to decode VALUE_STRING as base64 (\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[7];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1666), stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-2235), 0, true);\n    boolean boolean0 = readerBasedJsonParser0.hasTextCharacters();\n}",
    "testName" : "test055"
  },
  "test099" : {
    "methodSignature" : "public long getValueAsLong(long defaultValue) throws IOException",
    "methodName" : "getValueAsLong",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Double double0 = new Double(0.0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, double0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[0];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 101, true);\n    long long0 = uTF8StreamJsonParser0.getValueAsLong((long) 0);\n}",
    "testName" : "test099"
  },
  "test2727" : {
    "methodSignature" : "public final JsonToken nextToken() throws IOException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"=fS/>*3)!w\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextToken();\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "public int getTextLength() throws IOException",
    "methodName" : "getTextLength",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Double double0 = new Double(0.0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, double0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[0];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 3, 101, true);\n    int int0 = uTF8StreamJsonParser0.getTextLength();\n}",
    "testName" : "test1717"
  },
  "test4949" : {
    "methodSignature" : "public JsonToken getCurrentToken()",
    "methodName" : "getCurrentToken",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4949() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, dataInputStream0, true);\n    StringReader stringReader0 = new StringReader(\">-oENL`\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.getCurrentToken();\n}",
    "testName" : "test4949"
  },
  "test3939" : {
    "methodSignature" : "public boolean isExpectedStartArrayToken()",
    "methodName" : "isExpectedStartArrayToken",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3939() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Long long0 = new Long(3);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, long0, false);\n    StringReader stringReader0 = new StringReader(\"N\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.clearCurrentToken();\n    readerBasedJsonParser0.isExpectedStartArrayToken();\n}",
    "testName" : "test3939"
  },
  "test2525" : {
    "methodSignature" : "public JsonToken nextValue() throws IOException",
    "methodName" : "nextValue",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Double double0 = new Double(1);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, double0, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 33, mockFileInputStream0, objectCodec0, byteQuadsCanonicalizer0, byteArray0, 110, 33, false);\n    uTF8StreamJsonParser0.nextValue();\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public boolean getValueAsBoolean(boolean defaultValue) throws IOException",
    "methodName" : "getValueAsBoolean",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[5];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 39, 0, false);\n    boolean boolean0 = readerBasedJsonParser0.getValueAsBoolean(false);\n}",
    "testName" : "test1515"
  },
  "test4747" : {
    "methodSignature" : "public boolean hasCurrentToken()",
    "methodName" : "hasCurrentToken",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4747() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Byte byte0 = new Byte((byte) 92);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, byte0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    boolean boolean0 = readerBasedJsonParser0.hasCurrentToken();\n}",
    "testName" : "test4747"
  },
  "test3737" : {
    "methodSignature" : "public int getValueAsInt() throws IOException",
    "methodName" : "getValueAsInt",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3737() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"=fS/>*3)!w\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    int int0 = readerBasedJsonParser0.getValueAsInt();\n}",
    "testName" : "test3737"
  },
  "test4141" : {
    "methodSignature" : "public JsonToken nextValue() throws IOException",
    "methodName" : "nextValue",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4141() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[4];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, (Reader) null, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 1, false);\n    readerBasedJsonParser0.nextValue();\n}",
    "testName" : "test4141"
  },
  "test3131" : {
    "methodSignature" : "public int getValueAsInt(int defaultValue) throws IOException",
    "methodName" : "getValueAsInt",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[4];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, (Reader) null, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 1, false);\n    int int0 = readerBasedJsonParser0.getValueAsInt(0);\n}",
    "testName" : "test3131"
  },
  "test5151" : {
    "methodSignature" : "public JsonToken getLastClearedToken()",
    "methodName" : "getLastClearedToken",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5151() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"=fS/>*3)!w\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.getLastClearedToken();\n}",
    "testName" : "test5151"
  },
  "test000" : {
    "methodSignature" : "public boolean hasTokenId(int id)",
    "methodName" : "hasTokenId",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (byte) (-18), (Reader) null, objectCodec0, charsToNameCanonicalizer0);\n    boolean boolean0 = readerBasedJsonParser0.hasTokenId((byte) (-18));\n}",
    "testName" : "test000"
  },
  "test044" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"US-ASCII\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    boolean boolean0 = readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test044"
  },
  "test088" : {
    "methodSignature" : "public final String getValueAsString(String defValue) throws IOException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"zthxQl\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[4];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 33, 255, true);\n    String string0 = readerBasedJsonParser0.getValueAsString(\"\");\n}",
    "testName" : "test088"
  },
  "test2929" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);\n    StringReader stringReader0 = new StringReader(\"Ck\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[4];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 32, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 0, 0, true);\n    readerBasedJsonParser0.close();\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public final String getText() throws IOException",
    "methodName" : "getText",
    "className" : "com.fasterxml.jackson.core.base.ParserMinimalBase",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Long long0 = new Long(3);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, long0, false);\n    StringReader stringReader0 = new StringReader(\"N\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    String string0 = readerBasedJsonParser0.getText();\n}",
    "testName" : "test1919"
  }
}