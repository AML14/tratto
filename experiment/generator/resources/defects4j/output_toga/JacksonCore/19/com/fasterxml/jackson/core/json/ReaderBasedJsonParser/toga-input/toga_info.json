{
  "test06470" : {
    "methodSignature" : "protected JsonToken _handleApos() throws IOException",
    "methodName" : "_handleApos",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06470() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    stringReader0.close();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-18), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._handleApos();\n}",
    "testName" : "test06470"
  },
  "test121137" : {
    "methodSignature" : "public final String getValueAsString() throws IOException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121137() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    String string0 = readerBasedJsonParser0.getValueAsString();\n}",
    "testName" : "test121137"
  },
  "test115130" : {
    "methodSignature" : "public final int getTextOffset() throws IOException",
    "methodName" : "getTextOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115130() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\")f\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-643), stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, 2000, 76, true);\n    int int0 = readerBasedJsonParser0.getTextOffset();\n}",
    "testName" : "test115130"
  },
  "test0000" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart, String msg) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[2];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 2181, (-2966), false);\n    readerBasedJsonParser0._reportInvalidToken(\"\", \"\");\n}",
    "testName" : "test0000"
  },
  "test0088" : {
    "methodSignature" : "public int getTokenLineNr()",
    "methodName" : "getTokenLineNr",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0088() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"E4&OL`r@\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-2095), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._closeInput();\n    readerBasedJsonParser0.getTokenLineNr();\n}",
    "testName" : "test0088"
  },
  "test08093" : {
    "methodSignature" : "protected char _decodeEscaped() throws IOException",
    "methodName" : "_decodeEscaped",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08093() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"com.fasterxml.jackson.core.util.BufferRecycler\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, stringReader0, false);\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 93, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    boolean boolean0 = readerBasedJsonParser0.loadMore();\n    char char0 = readerBasedJsonParser0._decodeEscaped();\n}",
    "testName" : "test08093"
  },
  "test03642" : {
    "methodSignature" : "protected char getNextChar(String eofMsg) throws IOException",
    "methodName" : "getNextChar",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03642() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[1];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, (Reader) null, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 80, false);\n    readerBasedJsonParser0.getNextChar(\"^/w6!AHT|_?9\\\"HS\");\n}",
    "testName" : "test03642"
  },
  "test07688" : {
    "methodSignature" : "protected final void _matchToken(String matchStr, int i) throws IOException",
    "methodName" : "_matchToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07688() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"c4M`oY=\", true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[4];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 262144, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 50, (-1628), false);\n    readerBasedJsonParser0._matchToken(\"\", 3);\n}",
    "testName" : "test07688"
  },
  "test04450" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04450() throws Throwable {\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"com.fasterxml.jackson.core.util.ByteArrayBuilder\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1), stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-4584), (-3406), false);\n    readerBasedJsonParser0._reportInvalidToken(\"\");\n}",
    "testName" : "test04450"
  },
  "test088101" : {
    "methodSignature" : "protected final void _finishString() throws IOException",
    "methodName" : "_finishString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088101() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"No native support for writing Object Ids\", false);\n    StringReader stringReader0 = new StringReader(\"No native support for writing Object Ids\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, 2, 42, false);\n    readerBasedJsonParser0._finishString();\n}",
    "testName" : "test088101"
  },
  "test104119" : {
    "methodSignature" : "public boolean hasTextCharacters()",
    "methodName" : "hasTextCharacters",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104119() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[7];\n    charArray0[0] = '\\\"';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, 33, true);\n    SerializedString serializedString0 = new SerializedString(\"8=c|A'\");\n    readerBasedJsonParser0.nextFieldName((SerializableString) serializedString0);\n    readerBasedJsonParser0.hasTextCharacters();\n}",
    "testName" : "test104119"
  },
  "test02430" : {
    "methodSignature" : "public final long nextLongValue(long defaultValue) throws IOException",
    "methodName" : "nextLongValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02430() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"Numeric value (\");\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"Numeric value (\", false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 200, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._releaseBuffers();\n    readerBasedJsonParser0.nextLongValue(1);\n}",
    "testName" : "test02430"
  },
  "test05662" : {
    "methodSignature" : "protected final void _matchToken(String matchStr, int i) throws IOException",
    "methodName" : "_matchToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05662() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Object object0 = new Object();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    StringReader stringReader0 = new StringReader(\"Leading zeroes not allowed\");\n    char[] charArray0 = new char[4];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-250), stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, (-1049), 1359, true);\n    readerBasedJsonParser0._matchToken(\"Leading zeroes not allowed\", 91);\n}",
    "testName" : "test05662"
  },
  "test08497" : {
    "methodSignature" : "protected final void _skipCR() throws IOException",
    "methodName" : "_skipCR",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08497() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"CGJH~jCSix\\\"<\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[0];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-2751), 226, false);\n    readerBasedJsonParser0._skipCR();\n}",
    "testName" : "test08497"
  },
  "test110125" : {
    "methodSignature" : "public final JsonToken nextToken() throws IOException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110125() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"JF,RkA_3PQ}d65nKt6B\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[2];\n    charArray0[0] = '-';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, 33, true);\n    readerBasedJsonParser0.nextToken();\n}",
    "testName" : "test110125"
  },
  "test01212" : {
    "methodSignature" : "public final String getValueAsString(String defValue) throws IOException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01212() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\\\"Na [AVw_`e-v 6If\", true);\n    StringReader stringReader0 = new StringReader(\"m2g\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[2];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, 2, true);\n    String string0 = readerBasedJsonParser0.getValueAsString((String) null);\n}",
    "testName" : "test01212"
  },
  "test02026" : {
    "methodSignature" : "public final JsonToken nextToken() throws IOException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02026() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"No native support for writing Object Ids\", true);\n    StringReader stringReader0 = new StringReader(\"No native support for writing Object Ids\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, 2, 42, false);\n    readerBasedJsonParser0.nextToken();\n}",
    "testName" : "test02026"
  },
  "test126142" : {
    "methodSignature" : "protected char getNextChar(String eofMsg) throws IOException",
    "methodName" : "getNextChar",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test126142() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"No native support for writing Object Ids\", true);\n    StringReader stringReader0 = new StringReader(\"No native support for writing Object Ids\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, 2, 42, false);\n    readerBasedJsonParser0.getNextChar(\":tJlpjcwY!cYj.ZQG\");\n}",
    "testName" : "test126142"
  },
  "test03238" : {
    "methodSignature" : "public final Boolean nextBooleanValue() throws IOException",
    "methodName" : "nextBooleanValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03238() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"No native support for writing Object Ids\", true);\n    StringReader stringReader0 = new StringReader(\"No native support for writing Object Ids\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, 2, 42, false);\n    readerBasedJsonParser0.nextBooleanValue();\n}",
    "testName" : "test03238"
  },
  "test109124" : {
    "methodSignature" : "public final Boolean nextBooleanValue() throws IOException",
    "methodName" : "nextBooleanValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109124() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"0aT|;,\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, charsToNameCanonicalizer0, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 33, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextBooleanValue();\n}",
    "testName" : "test109124"
  },
  "test08092" : {
    "methodSignature" : "protected abstract boolean loadMore() throws IOException",
    "methodName" : "loadMore",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08092() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"com.fasterxml.jackson.core.util.BufferRecycler\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, stringReader0, false);\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 93, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    boolean boolean0 = readerBasedJsonParser0.loadMore();\n}",
    "testName" : "test08092"
  },
  "test01616" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01616() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1089), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextTextValue();\n    readerBasedJsonParser0.getInputSource();\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test01616"
  },
  "test0011" : {
    "methodSignature" : "public boolean canReadObjectId()",
    "methodName" : "canReadObjectId",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"p_t+Z5.\", false);\n    StringReader stringReader0 = new StringReader(\"N9v\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 53, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._skipCR();\n    readerBasedJsonParser0.canReadObjectId();\n}",
    "testName" : "test0011"
  },
  "test0099" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0099() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"{SPa0Upf-4=\\\"dp'\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[5];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 3, 1, false);\n    readerBasedJsonParser0._handleApos();\n    readerBasedJsonParser0.nextFieldName((SerializableString) null);\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test0099"
  },
  "test04046" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart, String msg) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04046() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"Expected space separating root-level values\");\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1628), stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._reportInvalidToken((String) null, \"Expected space separating root-level values\");\n}",
    "testName" : "test04046"
  },
  "test05258" : {
    "methodSignature" : "protected final String _parseName() throws IOException",
    "methodName" : "_parseName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05258() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"Unrecognized token '\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[0];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 2, 2, false);\n    readerBasedJsonParser0._parseName();\n}",
    "testName" : "test05258"
  },
  "test06066" : {
    "methodSignature" : "protected String _handleOddName(int i) throws IOException",
    "methodName" : "_handleOddName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06066() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"Pbyz7~!Ld0!\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    char[] charArray0 = new char[2];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-707), stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 5, 1092, true);\n    readerBasedJsonParser0._handleOddName((-3366));\n}",
    "testName" : "test06066"
  },
  "test07278" : {
    "methodSignature" : "public ObjectCodec getCodec()",
    "methodName" : "getCodec",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07278() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    doReturn((String) null).when(objectCodec0).toString();\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 224, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    ObjectCodec objectCodec1 = readerBasedJsonParser0.getCodec();\n}",
    "testName" : "test07278"
  },
  "test01720" : {
    "methodSignature" : "public int getLineNr()",
    "methodName" : "getLineNr",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01720() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"exM*tBz6;Ush\", false);\n    StringReader stringReader0 = new StringReader(\"cg5J<\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, 2, 33, false);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getLineNr();\n}",
    "testName" : "test01720"
  },
  "test099112" : {
    "methodSignature" : "protected final JsonToken _parsePosNumber(int ch) throws IOException",
    "methodName" : "_parsePosNumber",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099112() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[2];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1165, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 33, 1, true);\n    readerBasedJsonParser0._parsePosNumber(3);\n}",
    "testName" : "test099112"
  },
  "test02935" : {
    "methodSignature" : "public boolean nextFieldName(SerializableString sstr) throws IOException",
    "methodName" : "nextFieldName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02935() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"{SPa0Upf-4=\\\"dp'\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[5];\n    iOContext0.allocTokenBuffer((-831));\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 3, 1, true);\n    readerBasedJsonParser0._handleApos();\n    readerBasedJsonParser0.nextFieldName((SerializableString) null);\n}",
    "testName" : "test02935"
  },
  "test130146" : {
    "methodSignature" : "public int releaseBuffered(Writer w) throws IOException",
    "methodName" : "releaseBuffered",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test130146() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[7];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, 33, true);\n    StringWriter stringWriter0 = new StringWriter(33);\n    readerBasedJsonParser0.releaseBuffered((Writer) stringWriter0);\n}",
    "testName" : "test130146"
  },
  "test03743" : {
    "methodSignature" : "protected final void _skipString() throws IOException",
    "methodName" : "_skipString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03743() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Object object0 = new Object();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, object0, false);\n    StringReader stringReader0 = new StringReader(\"$g2F .-q-\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._releaseBuffers();\n    readerBasedJsonParser0._skipString();\n}",
    "testName" : "test03743"
  },
  "test04955" : {
    "methodSignature" : "protected final JsonToken _parseNegNumber() throws IOException",
    "methodName" : "_parseNegNumber",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04955() throws Throwable {\n    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());\n    doReturn((char[]) null).when(iOContext0).allocTokenBuffer();\n    doReturn((TextBuffer) null).when(iOContext0).constructTextBuffer();\n    StringReader stringReader0 = new StringReader(\"': expected '\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 612, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._parseNegNumber();\n}",
    "testName" : "test04955"
  },
  "test094107" : {
    "methodSignature" : "protected String _parseAposName() throws IOException",
    "methodName" : "_parseAposName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094107() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"8t9z*>z]*\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    char[] charArray0 = new char[6];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 51, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 3, 2, true);\n    readerBasedJsonParser0._parseAposName();\n}",
    "testName" : "test094107"
  },
  "test07382" : {
    "methodSignature" : "public long getByteOffset()",
    "methodName" : "getByteOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07382() throws Throwable {\n    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());\n    doReturn((char[]) null).when(iOContext0).allocTokenBuffer();\n    doReturn((TextBuffer) null).when(iOContext0).constructTextBuffer();\n    doReturn((Object) null).when(iOContext0).getSourceReference();\n    StringReader stringReader0 = new StringReader(\"[Euail03_c\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getByteOffset();\n}",
    "testName" : "test07382"
  },
  "test06571" : {
    "methodSignature" : "protected void _finishString2() throws IOException",
    "methodName" : "_finishString2",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06571() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"NaN\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, 3, 1491, false);\n    readerBasedJsonParser0._finishString2();\n}",
    "testName" : "test06571"
  },
  "test08194" : {
    "methodSignature" : "public String nextFieldName() throws IOException",
    "methodName" : "nextFieldName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08194() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    char[] charArray0 = new char[6];\n    charArray0[0] = ' ';\n    charArray0[1] = 'T';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2843, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, 2843, false);\n    readerBasedJsonParser0.nextFieldName();\n}",
    "testName" : "test08194"
  },
  "test0022" : {
    "methodSignature" : "protected JsonToken _handleApos() throws IOException",
    "methodName" : "_handleApos",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0022() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"was expecting a colon to separate field name and value\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[5];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 3, 1, true);\n    readerBasedJsonParser0._handleApos();\n}",
    "testName" : "test0022"
  },
  "test07381" : {
    "methodSignature" : "public long getCharOffset()",
    "methodName" : "getCharOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07381() throws Throwable {\n    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());\n    doReturn((char[]) null).when(iOContext0).allocTokenBuffer();\n    doReturn((TextBuffer) null).when(iOContext0).constructTextBuffer();\n    doReturn((Object) null).when(iOContext0).getSourceReference();\n    StringReader stringReader0 = new StringReader(\"[Euail03_c\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getCharOffset();\n}",
    "testName" : "test07381"
  },
  "test07380" : {
    "methodSignature" : "public int getColumnNr()",
    "methodName" : "getColumnNr",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07380() throws Throwable {\n    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());\n    doReturn((char[]) null).when(iOContext0).allocTokenBuffer();\n    doReturn((TextBuffer) null).when(iOContext0).constructTextBuffer();\n    doReturn((Object) null).when(iOContext0).getSourceReference();\n    StringReader stringReader0 = new StringReader(\"[Euail03_c\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getColumnNr();\n}",
    "testName" : "test07380"
  },
  "test05763" : {
    "methodSignature" : "protected final void _matchToken(String matchStr, int i) throws IOException",
    "methodName" : "_matchToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05763() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[4];\n    stringReader0.close();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 2, (-651), true);\n    readerBasedJsonParser0._matchToken(\"\", (-1628));\n}",
    "testName" : "test05763"
  },
  "test07789" : {
    "methodSignature" : "protected char _decodeEscaped() throws IOException",
    "methodName" : "_decodeEscaped",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07789() throws Throwable {\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[8];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2345, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 1583, (-1072), false);\n    readerBasedJsonParser0._decodeEscaped();\n}",
    "testName" : "test07789"
  },
  "test134150" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test134150() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, (Reader) null, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._reportInvalidToken(\"\");\n}",
    "testName" : "test134150"
  },
  "test02531" : {
    "methodSignature" : "public final long nextLongValue(long defaultValue) throws IOException",
    "methodName" : "nextLongValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02531() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"END_OBJECT\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1077, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextLongValue((-767L));\n}",
    "testName" : "test02531"
  },
  "test08598" : {
    "methodSignature" : "protected final void _skipString() throws IOException",
    "methodName" : "_skipString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08598() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Object object0 = new Object();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);\n    StringReader stringReader0 = new StringReader(\"Leading zeroes not allowed\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._skipString();\n}",
    "testName" : "test08598"
  },
  "test102117" : {
    "methodSignature" : "public final int nextIntValue(int defaultValue) throws IOException",
    "methodName" : "nextIntValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102117() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 984, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    int int0 = readerBasedJsonParser0.nextIntValue(2760);\n}",
    "testName" : "test102117"
  },
  "test04551" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04551() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"Sr@Z0NMVAHrq!5$\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    stringReader0.close();\n    readerBasedJsonParser0._reportInvalidToken(\"Sr@Z0NMVAHrq!5$\");\n}",
    "testName" : "test04551"
  },
  "test102116" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102116() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 984, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    int int0 = readerBasedJsonParser0.nextIntValue(2760);\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test102116"
  },
  "test03339" : {
    "methodSignature" : "public final Boolean nextBooleanValue() throws IOException",
    "methodName" : "nextBooleanValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03339() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\">\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[5];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 52, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-3451), 3434, true);\n    readerBasedJsonParser0.nextBooleanValue();\n}",
    "testName" : "test03339"
  },
  "test01313" : {
    "methodSignature" : "public final String getValueAsString(String defValue) throws IOException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01313() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\": was expecting closing '\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    String string0 = readerBasedJsonParser0.getValueAsString(\"\");\n}",
    "testName" : "test01313"
  },
  "test02127" : {
    "methodSignature" : "public final JsonToken nextToken() throws IOException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02127() throws Throwable {\n    StringReader stringReader0 = new StringReader(\"C\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    char[] charArray0 = new char[0];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 97, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-1658), 33, false);\n    readerBasedJsonParser0.nextToken();\n}",
    "testName" : "test02127"
  },
  "test05359" : {
    "methodSignature" : "protected String _parseAposName() throws IOException",
    "methodName" : "_parseAposName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05359() throws Throwable {\n    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());\n    doReturn((char[]) null).when(iOContext0).allocTokenBuffer();\n    doReturn((TextBuffer) null).when(iOContext0).constructTextBuffer();\n    StringReader stringReader0 = new StringReader(\"[Euail03_c\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._parseAposName();\n}",
    "testName" : "test05359"
  },
  "test107122" : {
    "methodSignature" : "public long getTokenCharacterOffset()",
    "methodName" : "getTokenCharacterOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107122() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"{SPa0Upf-4=\\\"dp'\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[5];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 3, 1, true);\n    readerBasedJsonParser0.nextFieldName((SerializableString) null);\n    readerBasedJsonParser0.getTokenCharacterOffset();\n}",
    "testName" : "test107122"
  },
  "test01718" : {
    "methodSignature" : "public long getCharOffset()",
    "methodName" : "getCharOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01718() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"exM*tBz6;Ush\", false);\n    StringReader stringReader0 = new StringReader(\"cg5J<\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, 2, 33, false);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getCharOffset();\n}",
    "testName" : "test01718"
  },
  "test01717" : {
    "methodSignature" : "public int getColumnNr()",
    "methodName" : "getColumnNr",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01717() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"exM*tBz6;Ush\", false);\n    StringReader stringReader0 = new StringReader(\"cg5J<\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, 2, 33, false);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getColumnNr();\n}",
    "testName" : "test01717"
  },
  "test124140" : {
    "methodSignature" : "protected void _finishString2() throws IOException",
    "methodName" : "_finishString2",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test124140() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"[Euail03_c\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    char[] charArray0 = new char[5];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 2900, 33, true);\n    readerBasedJsonParser0._finishString2();\n}",
    "testName" : "test124140"
  },
  "test091104" : {
    "methodSignature" : "protected String _handleOddName(int i) throws IOException",
    "methodName" : "_handleOddName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test091104() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1089), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._handleOddName(33);\n}",
    "testName" : "test091104"
  },
  "test01719" : {
    "methodSignature" : "public long getByteOffset()",
    "methodName" : "getByteOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01719() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"exM*tBz6;Ush\", false);\n    StringReader stringReader0 = new StringReader(\"cg5J<\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, 2, 33, false);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getByteOffset();\n}",
    "testName" : "test01719"
  },
  "test07890" : {
    "methodSignature" : "protected char _decodeEscaped() throws IOException",
    "methodName" : "_decodeEscaped",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07890() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"fIQW_s\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    char char0 = readerBasedJsonParser0._decodeEscaped();\n}",
    "testName" : "test07890"
  },
  "test118133" : {
    "methodSignature" : "protected final String _getText2(JsonToken t)",
    "methodName" : "_getText2",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118133() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[7];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, 33, true);\n    JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_FLOAT;\n    String string0 = readerBasedJsonParser0._getText2(jsonToken0);\n}",
    "testName" : "test118133"
  },
  "test0033" : {
    "methodSignature" : "protected String _handleOddName(int i) throws IOException",
    "methodName" : "_handleOddName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0033() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"#{JavKs!AIJv(cvN\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 114, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._handleOddName(1718);\n}",
    "testName" : "test0033"
  },
  "test07379" : {
    "methodSignature" : "public int getLineNr()",
    "methodName" : "getLineNr",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07379() throws Throwable {\n    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());\n    doReturn((char[]) null).when(iOContext0).allocTokenBuffer();\n    doReturn((TextBuffer) null).when(iOContext0).constructTextBuffer();\n    doReturn((Object) null).when(iOContext0).getSourceReference();\n    StringReader stringReader0 = new StringReader(\"[Euail03_c\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getLineNr();\n}",
    "testName" : "test07379"
  },
  "test04147" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart, String msg) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04147() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\") in base64 content\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[9];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, (-1833), 3, false);\n    readerBasedJsonParser0._reportInvalidToken(\") in base64 content\", \") in base64 content\");\n}",
    "testName" : "test04147"
  },
  "test06167" : {
    "methodSignature" : "protected JsonToken _handleInvalidNumberStart(int ch, boolean negative) throws IOException",
    "methodName" : "_handleInvalidNumberStart",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06167() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"}\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 278, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._handleInvalidNumberStart(0, false);\n}",
    "testName" : "test06167"
  },
  "test02632" : {
    "methodSignature" : "public final int nextIntValue(int defaultValue) throws IOException",
    "methodName" : "nextIntValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02632() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"Numeric value (\");\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"Numeric value (\", false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 200, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._releaseBuffers();\n    readerBasedJsonParser0.nextIntValue((-93));\n}",
    "testName" : "test02632"
  },
  "test132148" : {
    "methodSignature" : "public boolean hasTextCharacters()",
    "methodName" : "hasTextCharacters",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test132148() throws Throwable {\n    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());\n    doReturn((char[]) null).when(iOContext0).allocTokenBuffer();\n    doReturn((TextBuffer) null).when(iOContext0).constructTextBuffer();\n    StringReader stringReader0 = new StringReader(\"[Euail03_c\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    ObjectCodec objectCodec1 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    readerBasedJsonParser0.setCodec(objectCodec1);\n    readerBasedJsonParser0.hasTextCharacters();\n}",
    "testName" : "test132148"
  },
  "test01824" : {
    "methodSignature" : "public int getColumnNr()",
    "methodName" : "getColumnNr",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01824() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2907, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-464), (-1354), true);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getColumnNr();\n}",
    "testName" : "test01824"
  },
  "test01823" : {
    "methodSignature" : "public int getLineNr()",
    "methodName" : "getLineNr",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01823() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2907, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-464), (-1354), true);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getLineNr();\n}",
    "testName" : "test01823"
  },
  "test129145" : {
    "methodSignature" : "public int releaseBuffered(Writer w) throws IOException",
    "methodName" : "releaseBuffered",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test129145() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1089), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    StringWriter stringWriter0 = new StringWriter(268);\n    int int0 = readerBasedJsonParser0.releaseBuffered((Writer) stringWriter0);\n}",
    "testName" : "test129145"
  },
  "test01822" : {
    "methodSignature" : "public long getByteOffset()",
    "methodName" : "getByteOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01822() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2907, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-464), (-1354), true);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getByteOffset();\n}",
    "testName" : "test01822"
  },
  "test01821" : {
    "methodSignature" : "public long getCharOffset()",
    "methodName" : "getCharOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01821() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2907, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-464), (-1354), true);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getCharOffset();\n}",
    "testName" : "test01821"
  },
  "test03844" : {
    "methodSignature" : "protected final void _skipString() throws IOException",
    "methodName" : "_skipString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03844() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    char[] charArray0 = new char[9];\n    charArray0[2] = 'Z';\n    charArray0[3] = 'o';\n    charArray0[4] = 'M';\n    charArray0[5] = '^';\n    charArray0[6] = 'u';\n    charArray0[7] = 'y';\n    charArray0[8] = '~';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, (Reader) null, objectCodec0, charsToNameCanonicalizer0, charArray0, 2, 102, true);\n    readerBasedJsonParser0._skipString();\n}",
    "testName" : "test03844"
  },
  "test096109" : {
    "methodSignature" : "protected final String _parseName() throws IOException",
    "methodName" : "_parseName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096109() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1100, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-2323), 0, true);\n    readerBasedJsonParser0._parseName();\n}",
    "testName" : "test096109"
  },
  "test113128" : {
    "methodSignature" : "public int readBinaryValue(OutputStream out) throws IOException",
    "methodName" : "readBinaryValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113128() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();\n    readerBasedJsonParser0.readBinaryValue((OutputStream) byteArrayBuilder0);\n}",
    "testName" : "test113128"
  },
  "test119134" : {
    "methodSignature" : "protected final String _getText2(JsonToken t)",
    "methodName" : "_getText2",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119134() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, (Reader) null, objectCodec0, charsToNameCanonicalizer0);\n    JsonToken jsonToken0 = JsonToken.VALUE_EMBEDDED_OBJECT;\n    String string0 = readerBasedJsonParser0._getText2(jsonToken0);\n}",
    "testName" : "test119134"
  },
  "test05460" : {
    "methodSignature" : "protected String _parseAposName() throws IOException",
    "methodName" : "_parseAposName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05460() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"com.fasterxml.jackson.core.json.ReaderBasedJsonParser\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[0];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 2774, 2, true);\n    readerBasedJsonParser0._parseAposName();\n}",
    "testName" : "test05460"
  },
  "test07484" : {
    "methodSignature" : "public long getCharOffset()",
    "methodName" : "getCharOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07484() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"Numeric value (\");\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"Numeric value (\", false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 200, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getTokenLocation();\n    jsonLocation0.getCharOffset();\n}",
    "testName" : "test07484"
  },
  "test08295" : {
    "methodSignature" : "public String nextFieldName() throws IOException",
    "methodName" : "nextFieldName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08295() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    char[] charArray0 = new char[6];\n    charArray0[0] = ' ';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2843, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, 2843, false);\n    readerBasedJsonParser0.nextFieldName();\n}",
    "testName" : "test08295"
  },
  "test07483" : {
    "methodSignature" : "public long getByteOffset()",
    "methodName" : "getByteOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07483() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"Numeric value (\");\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"Numeric value (\", false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 200, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getTokenLocation();\n    jsonLocation0.getByteOffset();\n}",
    "testName" : "test07483"
  },
  "test0044" : {
    "methodSignature" : "protected final String _parseName() throws IOException",
    "methodName" : "_parseName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0044() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"x|R!R5YnYXU%cz3uk \");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._parseName();\n}",
    "testName" : "test0044"
  },
  "test04652" : {
    "methodSignature" : "protected void _releaseBuffers() throws IOException",
    "methodName" : "_releaseBuffers",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04652() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[7];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, 33, true);\n    readerBasedJsonParser0._releaseBuffers();\n}",
    "testName" : "test04652"
  },
  "test05864" : {
    "methodSignature" : "protected final void _matchToken(String matchStr, int i) throws IOException",
    "methodName" : "_matchToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05864() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"c4M`oY=\", true);\n    StringReader stringReader0 = new StringReader(\"Unexpected end-of-input within/between \");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[4];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 262111, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 50, (-1628), false);\n    readerBasedJsonParser0._matchToken(\"Unexpected end-of-input within/between \", 3);\n}",
    "testName" : "test05864"
  },
  "test08699" : {
    "methodSignature" : "protected final void _finishString() throws IOException",
    "methodName" : "_finishString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08699() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\": 3Pu}b<Sk2:aXr\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 5, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._finishString();\n}",
    "testName" : "test08699"
  },
  "test06672" : {
    "methodSignature" : "protected final void _finishString() throws IOException",
    "methodName" : "_finishString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06672() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[9];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 4306, 3471, true);\n    readerBasedJsonParser0._finishString();\n}",
    "testName" : "test06672"
  },
  "test07486" : {
    "methodSignature" : "public int getLineNr()",
    "methodName" : "getLineNr",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07486() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"Numeric value (\");\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"Numeric value (\", false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 200, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getTokenLocation();\n    jsonLocation0.getLineNr();\n}",
    "testName" : "test07486"
  },
  "test07485" : {
    "methodSignature" : "public int getColumnNr()",
    "methodName" : "getColumnNr",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07485() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"Numeric value (\");\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"Numeric value (\", false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 200, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getTokenLocation();\n    jsonLocation0.getColumnNr();\n}",
    "testName" : "test07485"
  },
  "test100113" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100113() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-2371), (Reader) null, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextBooleanValue();\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test100113"
  },
  "test03440" : {
    "methodSignature" : "public final Boolean nextBooleanValue() throws IOException",
    "methodName" : "nextBooleanValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03440() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"0aT|;,\");\n    stringReader0.close();\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, charsToNameCanonicalizer0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 33, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextBooleanValue();\n}",
    "testName" : "test03440"
  },
  "test105120" : {
    "methodSignature" : "protected boolean _isNextTokenNameMaybe(int i, String nameToMatch) throws IOException",
    "methodName" : "_isNextTokenNameMaybe",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105120() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1089), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._isNextTokenNameMaybe((-1089), (String) null);\n}",
    "testName" : "test105120"
  },
  "test098111" : {
    "methodSignature" : "protected final JsonToken _parsePosNumber(int ch) throws IOException",
    "methodName" : "_parsePosNumber",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098111() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[7];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, 33, true);\n    readerBasedJsonParser0._parsePosNumber(33);\n}",
    "testName" : "test098111"
  },
  "test131147" : {
    "methodSignature" : "public final String nextTextValue() throws IOException",
    "methodName" : "nextTextValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test131147() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"u0SEW x@'eK&^kn\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2230, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextTextValue();\n}",
    "testName" : "test131147"
  },
  "test04248" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart, String msg) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04248() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \" entries\", true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    stringReader0.close();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._reportInvalidToken(\" entries\", \" entries\");\n}",
    "testName" : "test04248"
  },
  "test01414" : {
    "methodSignature" : "protected char getNextChar(String eofMsg) throws IOException",
    "methodName" : "getNextChar",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01414() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"%eq=-#$> K%q5\", false);\n    StringReader stringReader0 = new StringReader(\"%eq=-#$> K%q5\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 108, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    char char0 = readerBasedJsonParser0.getNextChar((String) null);\n}",
    "testName" : "test01414"
  },
  "test02228" : {
    "methodSignature" : "public final String nextTextValue() throws IOException",
    "methodName" : "nextTextValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02228() throws Throwable {\n    TextBuffer textBuffer0 = mock(TextBuffer.class, new ViolatedAssumptionAnswer());\n    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());\n    doReturn((char[]) null).when(iOContext0).allocTokenBuffer();\n    doReturn(textBuffer0).when(iOContext0).constructTextBuffer();\n    StringReader stringReader0 = new StringReader(\"d-Ab, s&(&\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 4, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextTextValue();\n}",
    "testName" : "test02228"
  },
  "test093106" : {
    "methodSignature" : "protected String _parseAposName() throws IOException",
    "methodName" : "_parseAposName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093106() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\": was expecting closing '\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    String string0 = readerBasedJsonParser0._parseAposName();\n}",
    "testName" : "test093106"
  },
  "test114129" : {
    "methodSignature" : "public byte[] getBinaryValue(Base64Variant b64variant) throws IOException",
    "methodName" : "getBinaryValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test114129() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Object object0 = new Object();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, object0, false);\n    StringReader stringReader0 = new StringReader(\"$g2F .-q-\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.getBinaryValue((Base64Variant) null);\n}",
    "testName" : "test114129"
  },
  "test116131" : {
    "methodSignature" : "public final int getTextLength() throws IOException",
    "methodName" : "getTextLength",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test116131() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"%eq=-#$> K%q5\", false);\n    StringReader stringReader0 = new StringReader(\"%eq=-#$> K%q5\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 108, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    int int0 = readerBasedJsonParser0.getTextLength();\n}",
    "testName" : "test116131"
  },
  "test122138" : {
    "methodSignature" : "public final String getText() throws IOException",
    "methodName" : "getText",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test122138() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Object object0 = new Object();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);\n    StringReader stringReader0 = new StringReader(\"]LaKF/X[ 7ir8a|h\\\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[0];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-791), stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, (-2395), true);\n    String string0 = readerBasedJsonParser0.getText();\n}",
    "testName" : "test122138"
  },
  "test0055" : {
    "methodSignature" : "protected final String _parseName() throws IOException",
    "methodName" : "_parseName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0055() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    char[] charArray0 = new char[6];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2863, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 1629, 3, false);\n    readerBasedJsonParser0._parseName();\n}",
    "testName" : "test0055"
  },
  "test06268" : {
    "methodSignature" : "protected JsonToken _handleApos() throws IOException",
    "methodName" : "_handleApos",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06268() throws Throwable {\n    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());\n    doReturn((char[]) null).when(iOContext0).allocTokenBuffer();\n    doReturn((TextBuffer) null).when(iOContext0).constructTextBuffer();\n    StringReader stringReader0 = new StringReader(\"[Euail03_c\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._handleApos();\n}",
    "testName" : "test06268"
  },
  "test03036" : {
    "methodSignature" : "public boolean nextFieldName(SerializableString sstr) throws IOException",
    "methodName" : "nextFieldName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03036() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"ucw1hC>t\");\n    stringReader0.close();\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    SerializedString serializedString0 = new SerializedString(\"ALLOW_UNQUOTED_FIELD_NAMES\");\n    readerBasedJsonParser0.nextFieldName((SerializableString) serializedString0);\n}",
    "testName" : "test03036"
  },
  "test087100" : {
    "methodSignature" : "protected final void _finishString() throws IOException",
    "methodName" : "_finishString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test087100() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"f.5):l?YuDHA~\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-2091), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.getNextChar(\"Non-standard token 'Infinity': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow\");\n    readerBasedJsonParser0._finishString();\n}",
    "testName" : "test087100"
  },
  "test103118" : {
    "methodSignature" : "public boolean nextFieldName(SerializableString sstr) throws IOException",
    "methodName" : "nextFieldName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103118() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"8w1h>t\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    SerializedString serializedString0 = new SerializedString(\"ALLOW_UNQUOTED_FIELD_NAMES\");\n    readerBasedJsonParser0.nextFieldName((SerializableString) serializedString0);\n}",
    "testName" : "test103118"
  },
  "test07991" : {
    "methodSignature" : "protected char _decodeEscaped() throws IOException",
    "methodName" : "_decodeEscaped",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07991() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"l}pT@=^i#iE7\\\"4(ELY\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, (-1705), (-1705), false);\n    readerBasedJsonParser0._decodeEscaped();\n}",
    "testName" : "test07991"
  },
  "test01010" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01010() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"S\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[6];\n    byte[] byteArray0 = new byte[4];\n    ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);\n    CharBuffer charBuffer0 = byteBuffer0.asCharBuffer();\n    stringReader0.read(charBuffer0);\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1818, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, (-2001), false);\n    readerBasedJsonParser0.nextLongValue(0);\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test01010"
  },
  "test05056" : {
    "methodSignature" : "protected final JsonToken _parseNegNumber() throws IOException",
    "methodName" : "_parseNegNumber",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05056() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[2];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-1677), 33, false);\n    readerBasedJsonParser0._parseNegNumber();\n}",
    "testName" : "test05056"
  },
  "test02733" : {
    "methodSignature" : "public final int nextIntValue(int defaultValue) throws IOException",
    "methodName" : "nextIntValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02733() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"PUbu!sgUHcd,\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    JsonToken jsonToken0 = JsonToken.FIELD_NAME;\n    IOContext iOContext0 = new IOContext(bufferRecycler0, jsonToken0, true);\n    char[] charArray0 = new char[1];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-3089), 33, true);\n    readerBasedJsonParser0.nextIntValue((-1507));\n}",
    "testName" : "test02733"
  },
  "test03945" : {
    "methodSignature" : "protected final void _skipCR() throws IOException",
    "methodName" : "_skipCR",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03945() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"Unexpected end-of-input within/between \");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[0];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 37, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 37, 0, true);\n    readerBasedJsonParser0._skipCR();\n}",
    "testName" : "test03945"
  },
  "test05965" : {
    "methodSignature" : "protected JsonToken _handleOddValue(int i) throws IOException",
    "methodName" : "_handleOddValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05965() throws Throwable {\n    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());\n    doReturn((TextBuffer) null).when(iOContext0).constructTextBuffer();\n    doReturn((Object) null).when(iOContext0).getSourceReference();\n    StringReader stringReader0 = new StringReader(\": expected close marker for \");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[7];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 52, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, (-488), true);\n    readerBasedJsonParser0._handleOddValue(2);\n}",
    "testName" : "test05965"
  },
  "test127143" : {
    "methodSignature" : "public final int nextIntValue(int defaultValue) throws IOException",
    "methodName" : "nextIntValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test127143() throws Throwable {\n    char[] charArray0 = new char[0];\n    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());\n    doReturn(charArray0).when(iOContext0).allocTokenBuffer();\n    doReturn((TextBuffer) null).when(iOContext0).constructTextBuffer();\n    doReturn(false).when(iOContext0).isResourceManaged();\n    StringReader stringReader0 = new StringReader(\"[Euail03_c\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextIntValue(3);\n}",
    "testName" : "test127143"
  },
  "test108123" : {
    "methodSignature" : "public final Boolean nextBooleanValue() throws IOException",
    "methodName" : "nextBooleanValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108123() throws Throwable {\n    StringReader stringReader0 = new StringReader(\"fIQW_s\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1382), stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextBooleanValue();\n}",
    "testName" : "test108123"
  },
  "test01925" : {
    "methodSignature" : "protected final String _getText2(JsonToken t)",
    "methodName" : "_getText2",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01925() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"Illegal character '\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    JsonToken jsonToken0 = JsonToken.START_OBJECT;\n    String string0 = readerBasedJsonParser0._getText2(jsonToken0);\n}",
    "testName" : "test01925"
  },
  "test090103" : {
    "methodSignature" : "public String nextFieldName() throws IOException",
    "methodName" : "nextFieldName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090103() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"ItgL7&BPR'If\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2282, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextFieldName();\n}",
    "testName" : "test090103"
  },
  "test111126" : {
    "methodSignature" : "public boolean hasTextCharacters()",
    "methodName" : "hasTextCharacters",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111126() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[7];\n    charArray0[0] = '\\\"';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, 33, true);\n    readerBasedJsonParser0.nextToken();\n    readerBasedJsonParser0.hasTextCharacters();\n}",
    "testName" : "test111126"
  },
  "test08396" : {
    "methodSignature" : "public String nextFieldName() throws IOException",
    "methodName" : "nextFieldName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08396() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    char[] charArray0 = new char[6];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2843, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, 2843, false);\n    readerBasedJsonParser0.nextFieldName();\n}",
    "testName" : "test08396"
  },
  "test123139" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test123139() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[1];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 10, (Reader) null, objectCodec0, charsToNameCanonicalizer0, charArray0, 51, 0, false);\n    readerBasedJsonParser0.nextFieldName();\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test123139"
  },
  "test117132" : {
    "methodSignature" : "public final char[] getTextCharacters() throws IOException",
    "methodName" : "getTextCharacters",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test117132() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[7];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, 33, true);\n    char[] charArray1 = readerBasedJsonParser0.getTextCharacters();\n}",
    "testName" : "test117132"
  },
  "test0066" : {
    "methodSignature" : "protected final JsonToken _parseNegNumber() throws IOException",
    "methodName" : "_parseNegNumber",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0066() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"No digit following minus sign\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[8];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 410, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 98, 0, false);\n    readerBasedJsonParser0._parseNegNumber();\n}",
    "testName" : "test0066"
  },
  "test03541" : {
    "methodSignature" : "protected abstract boolean loadMore() throws IOException",
    "methodName" : "loadMore",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03541() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\")f\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-643), stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, 2000, 76, true);\n    readerBasedJsonParser0.loadMore();\n}",
    "testName" : "test03541"
  },
  "test04753" : {
    "methodSignature" : "protected void _releaseBuffers() throws IOException",
    "methodName" : "_releaseBuffers",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04753() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Object object0 = new Object();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);\n    StringReader stringReader0 = new StringReader(\"]LaKF/X[ 7ir8a|h\\\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    iOContext0.allocTokenBuffer();\n    char[] charArray0 = new char[0];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-791), stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, (-2395), true);\n    readerBasedJsonParser0._releaseBuffers();\n}",
    "testName" : "test04753"
  },
  "test05561" : {
    "methodSignature" : "protected final void _matchToken(String matchStr, int i) throws IOException",
    "methodName" : "_matchToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05561() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"No native support for writing Object Ids\", true);\n    StringReader stringReader0 = new StringReader(\"No native support for writing Object Ids\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, 123, 1583, true);\n    readerBasedJsonParser0._matchToken(\"No native support for writing Object Ids\", 1);\n}",
    "testName" : "test05561"
  },
  "test06773" : {
    "methodSignature" : "protected final void _finishString() throws IOException",
    "methodName" : "_finishString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06773() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"u0SEW x@'eK&^kn\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    stringReader0.close();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._finishString();\n}",
    "testName" : "test06773"
  },
  "test07587" : {
    "methodSignature" : "protected final void _matchToken(String matchStr, int i) throws IOException",
    "methodName" : "_matchToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07587() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"JSON\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 8, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._matchToken(\"\", 7);\n}",
    "testName" : "test07587"
  },
  "test133149" : {
    "methodSignature" : "public Object getInputSource()",
    "methodName" : "getInputSource",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test133149() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"No native support for writing Object Ids\", false);\n    StringReader stringReader0 = new StringReader(\"No native support for writing Object Ids\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, 2, 42, false);\n    Object object0 = readerBasedJsonParser0.getInputSource();\n}",
    "testName" : "test133149"
  },
  "test03137" : {
    "methodSignature" : "public String nextFieldName() throws IOException",
    "methodName" : "nextFieldName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03137() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[2];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 44, (Reader) null, objectCodec0, charsToNameCanonicalizer0, charArray0, 241, 3, true);\n    readerBasedJsonParser0.nextFieldName();\n}",
    "testName" : "test03137"
  },
  "test01515" : {
    "methodSignature" : "protected char getNextChar(String eofMsg) throws IOException",
    "methodName" : "getNextChar",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01515() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"0123456789ABCDEF\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[4];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 57, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 39, 0, false);\n    char char0 = readerBasedJsonParser0.getNextChar(\"0123456789ABCDEF\");\n}",
    "testName" : "test01515"
  },
  "test02329" : {
    "methodSignature" : "public final String nextTextValue() throws IOException",
    "methodName" : "nextTextValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02329() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Object object0 = new Object();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, object0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[6];\n    stringReader0.close();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, 0, false);\n    readerBasedJsonParser0.nextTextValue();\n}",
    "testName" : "test02329"
  },
  "test128144" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test128144() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1089), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextTextValue();\n    readerBasedJsonParser0._releaseBuffers();\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test128144"
  },
  "test04349" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04349() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, 2, 33, true);\n    readerBasedJsonParser0._reportInvalidToken(\"AGA>WK6e]DB\");\n}",
    "testName" : "test04349"
  },
  "test095108" : {
    "methodSignature" : "protected final String _parseName() throws IOException",
    "methodName" : "_parseName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095108() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"Malformed numeric value '\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-4066), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.loadMore();\n    readerBasedJsonParser0._parseName();\n}",
    "testName" : "test095108"
  },
  "test112127" : {
    "methodSignature" : "protected int _readBinary(Base64Variant b64variant, OutputStream out, byte[] buffer) throws IOException",
    "methodName" : "_readBinary",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112127() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"Decimal point not followed by a digit\", true);\n    StringReader stringReader0 = new StringReader(\"Leading zeroes not allowed\");\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 40, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);\n    readerBasedJsonParser0._readBinary((Base64Variant) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES);\n}",
    "testName" : "test112127"
  },
  "test120135" : {
    "methodSignature" : "public final String getValueAsString(String defValue) throws IOException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test120135() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"E4&OL`r@\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-2095), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    String string0 = readerBasedJsonParser0.getValueAsString(\"q\");\n}",
    "testName" : "test120135"
  },
  "test0077" : {
    "methodSignature" : "public String nextFieldName() throws IOException",
    "methodName" : "nextFieldName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0077() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"x|R!R5YnYXU%cz3uk \");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextFieldName();\n}",
    "testName" : "test0077"
  },
  "test05157" : {
    "methodSignature" : "protected final String _parseName() throws IOException",
    "methodName" : "_parseName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05157() throws Throwable {\n    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());\n    doReturn((char[]) null).when(iOContext0).allocTokenBuffer();\n    doReturn((TextBuffer) null).when(iOContext0).constructTextBuffer();\n    StringReader stringReader0 = new StringReader(\"9SxjiGjL){%\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._parseName();\n}",
    "testName" : "test05157"
  },
  "test06369" : {
    "methodSignature" : "protected JsonToken _handleApos() throws IOException",
    "methodName" : "_handleApos",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06369() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"LONG\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1659, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-2), 3, true);\n    readerBasedJsonParser0._handleApos();\n}",
    "testName" : "test06369"
  },
  "test101115" : {
    "methodSignature" : "public final long nextLongValue(long defaultValue) throws IOException",
    "methodName" : "nextLongValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101115() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1089), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    long long0 = readerBasedJsonParser0.nextLongValue(33);\n}",
    "testName" : "test101115"
  },
  "test01111" : {
    "methodSignature" : "protected abstract boolean loadMore() throws IOException",
    "methodName" : "loadMore",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01111() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[8];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, (Reader) null, objectCodec0, charsToNameCanonicalizer0, charArray0, 3, (-1664), false);\n    boolean boolean0 = readerBasedJsonParser0.loadMore();\n}",
    "testName" : "test01111"
  },
  "test07177" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07177() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-2371), (Reader) null, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextToken();\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test07177"
  },
  "test089102" : {
    "methodSignature" : "public final JsonToken nextToken() throws IOException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089102() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\": was expecting closing '\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextToken();\n}",
    "testName" : "test089102"
  },
  "test101114" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101114() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1089), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    long long0 = readerBasedJsonParser0.nextLongValue(33);\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test101114"
  },
  "test097110" : {
    "methodSignature" : "public final JsonToken nextToken() throws IOException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097110() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"JF,RkA_3PQ}d65nKt6B\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[2];\n    charArray0[0] = '-';\n    charArray0[1] = '{';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, 33, true);\n    readerBasedJsonParser0.nextToken();\n}",
    "testName" : "test097110"
  },
  "test04854" : {
    "methodSignature" : "protected final JsonToken _parsePosNumber(int ch) throws IOException",
    "methodName" : "_parsePosNumber",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04854() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"ALLOW_UNQUOTED_CONTROL_CHARS\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 8, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._parsePosNumber(2574);\n}",
    "testName" : "test04854"
  },
  "test02834" : {
    "methodSignature" : "public final int nextIntValue(int defaultValue) throws IOException",
    "methodName" : "nextIntValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02834() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"com.fasterxml.jackson.core.util.BufferRecycler\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, stringReader0, false);\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 93, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextIntValue(0);\n}",
    "testName" : "test02834"
  },
  "test106121" : {
    "methodSignature" : "public boolean nextFieldName(SerializableString sstr) throws IOException",
    "methodName" : "nextFieldName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106121() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"{SPa0Upf-4=\\\"dp'\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[5];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 3, 1, true);\n    readerBasedJsonParser0._handleApos();\n    readerBasedJsonParser0.nextFieldName((SerializableString) null);\n}",
    "testName" : "test106121"
  },
  "test092105" : {
    "methodSignature" : "protected boolean _isNextTokenNameMaybe(int i, String nameToMatch) throws IOException",
    "methodName" : "_isNextTokenNameMaybe",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092105() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1089), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._isNextTokenNameMaybe(39, \"\");\n}",
    "testName" : "test092105"
  },
  "test125141" : {
    "methodSignature" : "protected final JsonToken _parseNegNumber() throws IOException",
    "methodName" : "_parseNegNumber",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test125141() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"': expected '\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 612, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._parseNegNumber();\n}",
    "testName" : "test125141"
  }
}