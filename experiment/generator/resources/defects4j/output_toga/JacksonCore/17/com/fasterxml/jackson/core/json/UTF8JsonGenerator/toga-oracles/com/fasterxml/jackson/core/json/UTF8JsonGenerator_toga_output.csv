project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, (OutputStream) null);
    byte[] byteArray0 = new byte[7];
    byteArray0[2] = (byte) (-110);
    uTF8JsonGenerator0.writeBinaryField(""t"", byteArray0);
}",0,
project,0,test011,"public void test011() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""TGLGp,{$mug!SI"", true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-183), (ObjectCodec) null, (OutputStream) null);
    byte[] byteArray0 = new byte[2];
    byteArray0[0] = (byte) (-7);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeBinary(byteArray0, 0, 89);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 2
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",0,
project,0,test022,"public void test022() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""ECzWuWEu~l"", true);
    byte[] byteArray0 = new byte[20];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 13, false);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeUTF8String(byteArray0, (byte) 94, 0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",1,
project,0,test033,"public void test033() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0._flushBuffer();
}",0,
project,0,test044,"public void test044() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayBuilder0);
    uTF8JsonGenerator0._verifyValueWrite("">CRnB(3fP^4NS.#r^_j"");
}",1,
project,0,test066,"public void test066() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.writeNumber(1926);
}",0,
project,0,test077,"public void test077() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
    PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 2);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.writeString(""~$N!z}q\""Q"");
    uTF8JsonGenerator0.getOutputBuffered();
}",0,
project,0,test088,"public void test088() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""ECzWuWEu~l"", true);
    byte[] byteArray0 = new byte[6];
    mockFileOutputStream0.close();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 13, false);
    try {
        uTF8JsonGenerator0.writeUTF8String(byteArray0, (byte) 94, 0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.evosuite.runtime.mock.java.io.MockFileOutputStream"", e);
    }
}",0,
project,0,test099,"public void test099() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = iOContext0.allocReadIOBuffer(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 104, (ObjectCodec) null, (OutputStream) null, byteArray0, (byte) (-14), true);
    char[] charArray0 = new char[2];
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeString(charArray0, (int) (byte) (-115), 762);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -14
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",1,
project,0,test1010,"public void test1010() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""n)E"", false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1000, (ObjectCodec) null, mockFileOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    try {
        uTF8JsonGenerator0.writeString(""n)E"");
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Can not write a string, expecting field name
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",1,
project,0,test1111,"public void test1111() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockFile mockFile0 = new MockFile("">vnr|Tq33:"");
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
    byte[] byteArray0 = new byte[1];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockFileOutputStream0, byteArray0, (-788), true);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeStartObject();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -788
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",1,
project,0,test1212,"public void test1212() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
    PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 2);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, (OutputStream) null);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeRawValue((SerializableString) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",1,
project,0,test1313,"public void test1313() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""Unrecognized token '"");
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, mockFileOutputStream0);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeRaw("""", 2, (int) (byte) 101);
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    BigInteger bigInteger0 = BigInteger.ZERO;
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 33, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.close();
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",0,
project,0,test1717,"public void test1717() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, (OutputStream) null, byteArray0, 0, true);
    BigInteger bigInteger0 = BigInteger.ZERO;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.flush();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",0,
project,0,test1818,"public void test1818() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""Unrecognized token '"");
    mockFileOutputStream0.close();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, mockFileOutputStream0);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    try {
        uTF8JsonGenerator0.flush();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.evosuite.runtime.mock.java.io.MockFileOutputStream"", e);
    }
}",0,
project,0,test1919,"public void test1919() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""Unrecognized token '"");
    mockFileOutputStream0.close();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, mockFileOutputStream0);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    try {
        uTF8JsonGenerator0.close();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.evosuite.runtime.mock.java.io.MockFileOutputStream"", e);
    }
}",0,
project,0,test2020,"public void test2020() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
    PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 2);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, (OutputStream) null);
    try {
        uTF8JsonGenerator0._outputSurrogates(91, 33);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Incomplete surrogate pair: first char 0x5b, second 0x21
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",0,
project,0,test2121,"public void test2121() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(7);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 1000, true);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0._flushBuffer();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",0,
project,0,test2626,"public void test2626() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
    PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 2);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.writeString(""~$N!z}q\""Q"");
    uTF8JsonGenerator0.writeNumber((short) 0);
}",0,
project,0,test2727,"public void test2727() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockFile mockFile0 = new MockFile(""}q"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    uTF8JsonGenerator0.writeBoolean(false);
}",1,
project,0,test2828,"public void test2828() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(2070);
    MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayBuilder0, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 48, (ObjectCodec) null, mockPrintStream0);
    uTF8JsonGenerator0.writeRaw(""write a boolean value"", 2, 3);
}",0,
project,0,test2929,"public void test2929() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-1133), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, (-55), false);
    // Undeclared exception!
    uTF8JsonGenerator0.writeFieldName(""com.fasterxml.jackson.core.type.ResolvedType"");
}",0,
project,0,test3030,"public void test3030() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""Unrecognized token '"");
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, mockFileOutputStream0);
    uTF8JsonGenerator0.writeRaw("""");
}",0,
project,0,test3131,"public void test3131() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[8];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-236), (ObjectCodec) null, (OutputStream) null, byteArray0, 1, false);
    uTF8JsonGenerator0._releaseBuffers();
}",0,
project,0,test3232,"public void test3232() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""Unrecognized token '"");
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, mockFileOutputStream0);
    uTF8JsonGenerator0.close();
}",0,
project,0,test3333,"public void test3333() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""n)E"");
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 982, (ObjectCodec) null, mockFileOutputStream0);
    uTF8JsonGenerator0.flush();
}",0,
project,0,test3434,"public void test3434() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(2070);
    MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayBuilder0, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 48, (ObjectCodec) null, mockPrintStream0);
    uTF8JsonGenerator0.flush();
}",0,
project,0,test3535,"public void test3535() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 170, (ObjectCodec) null, (OutputStream) null, byteArray0, (-1385), false);
    uTF8JsonGenerator0.flush();
}",0,
project,0,test3737,"public void test3737() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""n)E"", false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1000, (ObjectCodec) null, mockFileOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    uTF8JsonGenerator0.writeBooleanField(""n)E"", false);
}",1,
project,0,test3838,"public void test3838() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, (OutputStream) null);
    byte[] byteArray0 = new byte[24];
    uTF8JsonGenerator0.writeBinaryField(""t"", byteArray0);
    BigInteger bigInteger0 = BigInteger.TEN;
    uTF8JsonGenerator0.writeNumber(bigInteger0);
}",0,
project,0,test3939,"public void test3939() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""Unrecognized token '"");
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, mockFileOutputStream0);
    uTF8JsonGenerator0.writeBoolean(true);
}",0,
project,0,test4040,"public void test4040() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[7];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, (OutputStream) null, byteArray0, 3, false);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeBoolean(false);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",1,
project,0,test4141,"public void test4141() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
    PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, pipedInputStream0, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, pipedOutputStream0);
    uTF8JsonGenerator0.writeNumber(""ROOT"");
}",0,
project,0,test4242,"public void test4242() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
    PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 2);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, (OutputStream) null);
    BigDecimal bigDecimal0 = new BigDecimal(0.0);
    uTF8JsonGenerator0.writeNumber(bigDecimal0);
}",0,
project,0,test4343,"public void test4343() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
    PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, pipedInputStream0, true);
    byte[] byteArray0 = new byte[2];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 135, (ObjectCodec) null, pipedOutputStream0, byteArray0, 1, true);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeNumber((BigDecimal) null);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",0,
project,0,test4444,"public void test4444() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((double) 3);
}",0,
project,0,test4545,"public void test4545() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
    PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 2);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.writeNumber(0.0);
}",0,
project,0,test4646,"public void test4646() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.writeNumber((BigInteger) null);
}",0,
project,0,test4747,"public void test4747() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""Unrecognized token '"");
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, mockFileOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 1);
}",0,
project,0,test4848,"public void test4848() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeNumber((long) 0);
}",0,
project,0,test4949,"public void test4949() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 34, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.writeNumber(46);
}",1,
project,0,test5050,"public void test5050() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0, 1);
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, bufferedOutputStream0, byteArray0, (byte) (-118), false);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeNumber((int) (byte) 109);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -118
        //
        verifyException(""com.fasterxml.jackson.core.io.NumberOutput"", e);
    }
}",0,
project,0,test5151,"public void test5151() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""ECzWuWEu~l"", true);
    byte[] byteArray0 = new byte[6];
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 48, (ObjectCodec) null, mockFileOutputStream0, byteArray0, (byte) (-35), false);
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(""ECzWuWEu~l"");
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeBinary((Base64Variant) null, (InputStream) mockFileInputStream0, 101);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -35
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",0,
project,0,test5252,"public void test5252() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""ECzWuWEu~l"", true);
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 13, false);
    uTF8JsonGenerator0.writeNumber(82.04442F);
}",0,
project,0,test5353,"public void test5353() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    byte[] byteArray0 = new byte[5];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, (OutputStream) null, byteArray0, 2, true);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeRaw('S');
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",0,
project,0,test5454,"public void test5454() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""n)E"", false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1000, (ObjectCodec) null, mockFileOutputStream0);
    uTF8JsonGenerator0.writeRaw('k');
}",0,
project,0,test5555,"public void test5555() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-1133), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, (-55), false);
    char[] charArray0 = new char[3];
    uTF8JsonGenerator0.writeRaw(charArray0, 0, (-2433));
}",0,
project,0,test5656,"public void test5656() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""ECzWuWEu~l"", true);
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 13, false);
    char[] charArray0 = new char[1];
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeRaw(charArray0, (int) (byte) 94, 2);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 94
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",0,
project,0,test5757,"public void test5757() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(byteArrayBuilder0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-2171), (ObjectCodec) null, objectOutputStream0, byteArrayBuilder0.NO_BYTES, 14, true);
    BigInteger bigInteger0 = BigInteger.ONE;
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.io.ObjectOutputStream"", e);
    }
}",0,
project,0,test5858,"public void test5858() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""Unrecognized token '"");
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, mockFileOutputStream0);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
}",1,
project,0,test6060,"public void test6060() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""ECzWuWEu~l"", true);
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 13, false);
    uTF8JsonGenerator0.writeUTF8String(byteArray0, (byte) 0, 0);
}",1,
project,0,test6161,"public void test6161() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringReader stringReader0 = new StringReader("""");
    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 42, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);
    ByteArrayBuilder byteArrayBuilder0 = readerBasedJsonParser0._getByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeUTF8String(byteArrayBuilder0.NO_BYTES, 0, 1781);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 0
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",1,
project,0,test6262,"public void test6262() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    PipedInputStream pipedInputStream0 = new PipedInputStream(2);
    IOContext iOContext0 = new IOContext(bufferRecycler0, pipedInputStream0, false);
    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-181), (ObjectCodec) null, pipedOutputStream0);
    byte[] byteArray0 = new byte[4];
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 0, 482);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",0,
project,0,test6565,"public void test6565() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(2070);
    MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayBuilder0, true);
    char[] charArray0 = iOContext0.allocTokenBuffer((-1431));
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 48, (ObjectCodec) null, mockPrintStream0);
    uTF8JsonGenerator0.writeString(charArray0, 49, 48);
}",1,
project,0,test6666,"public void test6666() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""ECzWuWEu~l"", true);
    byte[] byteArray0 = new byte[6];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 13, false);
    char[] charArray0 = new char[0];
    // Undeclared exception!
    uTF8JsonGenerator0.writeString(charArray0, 255, 1);
}",1,
project,0,test6767,"public void test6767() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""Unrecognized token '"");
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, mockFileOutputStream0);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeString((char[]) null, 86, 6);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",1,
project,0,test6868,"public void test6868() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, true);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeString(""start an array"");
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",1,
project,0,test6969,"public void test6969() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    byte[] byteArray0 = new byte[9];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, (OutputStream) null, byteArray0, 719, false);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    // Undeclared exception!
    try {
        uTF8JsonGenerator0._writePPFieldName(serializedString0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",0,
project,0,test7070,"public void test7070() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    MockFile mockFile0 = new MockFile(""ROOT"", """");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0._writePPFieldName("""");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",0,
project,0,test7171,"public void test7171() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
    PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 2048);
    IOContext iOContext0 = new IOContext(bufferRecycler0, pipedInputStream0, true);
    byte[] byteArray0 = new byte[9];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, pipedOutputStream0, byteArray0, 0, true);
    try {
        uTF8JsonGenerator0.writeEndObject();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Current context not an object but ROOT
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",0,
project,0,test7272,"public void test7272() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""n)E"", false);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1000, (ObjectCodec) null, mockFileOutputStream0);
    uTF8JsonGenerator0.writeStartObject();
    try {
        uTF8JsonGenerator0.writeNumber((short) 49);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Can not write a number, expecting field name
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",1,
project,0,test7373,"public void test7373() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, (OutputStream) null);
    try {
        uTF8JsonGenerator0.writeEndArray();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Current context not an ARRAY but ROOT
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",0,
project,0,test7474,"public void test7474() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    MockFile mockFile0 = new MockFile(""ROOT"", """");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0);
    int[] intArray0 = new int[6];
    uTF8JsonGenerator0.writeArray(intArray0, 948, 0);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0._writePPFieldName("""");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",0,
project,0,test7575,"public void test7575() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    uTF8JsonGenerator0.writeStartArray();
    byte[] byteArray0 = new byte[5];
    uTF8JsonGenerator0.writeBooleanField(""eTG^V"", true);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeBinary((Base64Variant) null, byteArray0, 0, 0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",0,
project,0,test7676,"public void test7676() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
    PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 2);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.writeString(""~$N!z}q\""Q"");
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    assertEquals(16, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test7878,"public void test7878() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""Unrecognized token '"");
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, mockFileOutputStream0);
    SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    try {
        uTF8JsonGenerator0._writePPFieldName(serializedString0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Can not write a field name, expecting a value
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",0,
project,0,test7979,"public void test7979() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringReader stringReader0 = new StringReader("""");
    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
    char[] charArray0 = new char[1];
    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 0, 3, false);
    ByteArrayBuilder byteArrayBuilder0 = readerBasedJsonParser0._getByteArrayBuilder();
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-771), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeFieldName("""");
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",0,
project,0,test8080,"public void test8080() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    char[] charArray0 = new char[0];
    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());
    doReturn(charArray0).when(iOContext0).allocConcatBuffer();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, true);
    Object object0 = uTF8JsonGenerator0.getOutputTarget();
    assertNotNull(object0);
}",1,
project,0,test8081,"public void test8081() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    char[] charArray0 = new char[0];
    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());
    doReturn(charArray0).when(iOContext0).allocConcatBuffer();
    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, true);
    Object object0 = uTF8JsonGenerator0.getOutputTarget();
    assertEquals(2, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test8182,"public void test8182() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, (OutputStream) null);
    uTF8JsonGenerator0.writeNull();
    assertEquals(4, uTF8JsonGenerator0.getOutputBuffered());
}",0,
project,0,test8283,"public void test8283() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    byte[] byteArray0 = new byte[3];
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, (OutputStream) null, byteArray0, (-3840), true);
    // Undeclared exception!
    try {
        uTF8JsonGenerator0.writeNumber(0.0F);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -3840
        //
        verifyException(""com.fasterxml.jackson.core.json.UTF8JsonGenerator"", e);
    }
}",0,
project,0,test8384,"public void test8384() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
    PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 2);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, (OutputStream) null);
    int int0 = uTF8JsonGenerator0.getOutputBuffered();
    assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar())"
project,0,test8385,"public void test8385() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
    PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 2);
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 2);
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, (OutputStream) null);
    int int0 = uTF8JsonGenerator0.getOutputBuffered();
    assertEquals(0, int0);
}",0,
