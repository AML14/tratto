{
  "test06470" : {
    "methodSignature" : "protected Name _handleOddName(int ch) throws IOException",
    "methodName" : "_handleOddName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06470() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[7];\n    Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream0);\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 829, pushbackInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 97, 123, true);\n    uTF8StreamJsonParser0._handleOddName((byte) 97);\n}",
    "testName" : "test06470"
  },
  "test08495" : {
    "methodSignature" : "public int readBinaryValue(Base64Variant b64variant, OutputStream out) throws IOException, JsonParseException",
    "methodName" : "readBinaryValue",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08495() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[9];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 197, sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 0, 0, false);\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"FLOAT\", false);\n    ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);\n    uTF8StreamJsonParser0.readBinaryValue((Base64Variant) null, (OutputStream) objectOutputStream0);\n}",
    "testName" : "test08495"
  },
  "test0088" : {
    "methodSignature" : "public long getByteOffset()",
    "methodName" : "getByteOffset",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0088() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    byte[] byteArray0 = new byte[8];\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 80, (InputStream) null, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, 0, 92, true);\n    JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getCurrentLocation();\n    jsonLocation0.getByteOffset();\n}",
    "testName" : "test0088"
  },
  "test0089" : {
    "methodSignature" : "public long getCharOffset()",
    "methodName" : "getCharOffset",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0089() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    byte[] byteArray0 = new byte[8];\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 80, (InputStream) null, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, 0, 92, true);\n    JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getCurrentLocation();\n    jsonLocation0.getCharOffset();\n}",
    "testName" : "test0089"
  },
  "test06874" : {
    "methodSignature" : "protected Name parseEscapedName(int[] quads, int qlen, int currQuad, int ch, int currQuadBytes) throws IOException",
    "methodName" : "parseEscapedName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06874() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    PipedInputStream pipedInputStream0 = new PipedInputStream(2000);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[5];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, pipedInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 7, (-1600), false);\n    int[] intArray0 = new int[2];\n    uTF8StreamJsonParser0.parseEscapedName(intArray0, 283, 0, (byte) 91, (byte) 7);\n}",
    "testName" : "test06874"
  },
  "test08899" : {
    "methodSignature" : "protected final String _getText2(JsonToken t)",
    "methodName" : "_getText2",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08899() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    byte[] byteArray0 = new byte[4];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 940);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) (-44), (-2074), false);\n    JsonToken jsonToken0 = JsonToken.VALUE_STRING;\n    String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);\n}",
    "testName" : "test08899"
  },
  "test07685" : {
    "methodSignature" : "public final int getCurrentTokenId()",
    "methodName" : "getCurrentTokenId",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07685() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    byte[] byteArray0 = new byte[8];\n    byteArray0[5] = (byte) 56;\n    byteArray0[6] = (byte) 9;\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 3, 45);\n    DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);\n    dataInputStream0.readShort();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, dataInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 0, (byte) (-107), true);\n    long long0 = uTF8StreamJsonParser0.nextLongValue(2230L);\n    uTF8StreamJsonParser0.getCurrentTokenId();\n}",
    "testName" : "test07685"
  },
  "test07686" : {
    "methodSignature" : "public long nextLongValue(long defaultValue) throws IOException, JsonParseException",
    "methodName" : "nextLongValue",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07686() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    byte[] byteArray0 = new byte[8];\n    byteArray0[5] = (byte) 56;\n    byteArray0[6] = (byte) 9;\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 3, 45);\n    DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);\n    dataInputStream0.readShort();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, dataInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 0, (byte) (-107), true);\n    long long0 = uTF8StreamJsonParser0.nextLongValue(2230L);\n}",
    "testName" : "test07686"
  },
  "test05662" : {
    "methodSignature" : "protected void _skipString() throws IOException",
    "methodName" : "_skipString",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05662() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    byte[] byteArray0 = new byte[4];\n    byteArray0[0] = (byte) 32;\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 940);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) (-44), (-2074), false);\n    uTF8StreamJsonParser0._skipString();\n}",
    "testName" : "test05662"
  },
  "test104117" : {
    "methodSignature" : "protected void _reportInvalidOther(int mask) throws JsonParseException",
    "methodName" : "_reportInvalidOther",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104117() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, (byte[]) null, 2000, 102, false);\n    uTF8StreamJsonParser0._reportInvalidOther(0);\n}",
    "testName" : "test104117"
  },
  "test01215" : {
    "methodSignature" : "protected Name parseMediumName(int q2, final int[] codes) throws IOException",
    "methodName" : "parseMediumName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01215() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    PipedInputStream pipedInputStream0 = new PipedInputStream(2000);\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    byte[] byteArray0 = new byte[7];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, sequenceInputStream0, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, (byte) (-16), (byte) (-44), true);\n    int[] intArray0 = new int[9];\n    uTF8StreamJsonParser0.parseMediumName((-643), intArray0);\n}",
    "testName" : "test01215"
  },
  "test03639" : {
    "methodSignature" : "public UTF8StreamJsonParser(IOContext ctxt, int features, InputStream in, ObjectCodec codec, BytesToNameCanonicalizer sym, byte[] inputBuffer, int start, int end, boolean bufferRecyclable)",
    "methodName" : "UTF8StreamJsonParser",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03639() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[1];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = null;\n    uTF8StreamJsonParser0 = new UTF8StreamJsonParser((IOContext) null, (-2), pipedInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) (-124), (-2), true);\n}",
    "testName" : "test03639"
  },
  "test110123" : {
    "methodSignature" : "public ObjectCodec getCodec()",
    "methodName" : "getCodec",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110123() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    doReturn((String) null).when(objectCodec0).toString();\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[9];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 3511, (byte) 0, true);\n    ObjectCodec objectCodec1 = uTF8StreamJsonParser0.getCodec();\n}",
    "testName" : "test110123"
  },
  "test109122" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109122() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    byte[] byteArray0 = new byte[4];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2074), mockFileInputStream0, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, (byte) 92, (byte) 0, false);\n    uTF8StreamJsonParser0._reportInvalidToken(\"\");\n}",
    "testName" : "test109122"
  },
  "test02427" : {
    "methodSignature" : "protected abstract boolean loadMore() throws IOException",
    "methodName" : "loadMore",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02427() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[2];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, mockFileInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 123, (-32768), false);\n    uTF8StreamJsonParser0.loadMore();\n}",
    "testName" : "test02427"
  },
  "test01619" : {
    "methodSignature" : "public int nextIntValue(int defaultValue) throws IOException, JsonParseException",
    "methodName" : "nextIntValue",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01619() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    byte[] byteArray0 = new byte[2];\n    byteArray0[0] = (byte) (-34);\n    byteArray0[1] = (byte) (-76);\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1000, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 513, (-88), true);\n    uTF8StreamJsonParser0.nextIntValue((-32768));\n}",
    "testName" : "test01619"
  },
  "test08091" : {
    "methodSignature" : "public boolean nextFieldName(SerializableString str) throws IOException, JsonParseException",
    "methodName" : "nextFieldName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08091() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[4];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 33, (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 1248, 2000, true);\n    uTF8StreamJsonParser0.nextFieldName((SerializableString) null);\n}",
    "testName" : "test08091"
  },
  "test097109" : {
    "methodSignature" : "protected final boolean _loadToHaveAtLeast(int minAvailable) throws IOException",
    "methodName" : "_loadToHaveAtLeast",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097109() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[5];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, mockFileInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 2, (byte) 34, true);\n    uTF8StreamJsonParser0._loadToHaveAtLeast(1202);\n}",
    "testName" : "test097109"
  },
  "test0011" : {
    "methodSignature" : "protected void _matchToken(String matchStr, int i) throws IOException",
    "methodName" : "_matchToken",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false, false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, 4);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[5];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-416), sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 101, (byte) 101, false);\n    uTF8StreamJsonParser0._matchToken(\"\", (-1907));\n}",
    "testName" : "test0011"
  },
  "test04046" : {
    "methodSignature" : "public int getLineNr()",
    "methodName" : "getLineNr",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04046() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1455), (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 15, Integer.MIN_VALUE, false);\n    JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getCurrentLocation();\n    jsonLocation0.getLineNr();\n}",
    "testName" : "test04046"
  },
  "test03235" : {
    "methodSignature" : "protected JsonToken _parseNumber(int c) throws IOException, JsonParseException",
    "methodName" : "_parseNumber",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03235() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(dataInputStream0, dataInputStream0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[6];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 10, sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 0, (byte) (-17), false);\n    uTF8StreamJsonParser0._parseNumber((byte) (-114));\n}",
    "testName" : "test03235"
  },
  "test05258" : {
    "methodSignature" : "protected JsonToken _handleInvalidNumberStart(int ch, boolean neg) throws IOException",
    "methodName" : "_handleInvalidNumberStart",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05258() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"com.fasterxml.jackson.core.JsonLocation\", true);\n    byte[] byteArray0 = new byte[0];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-603), (-1667));\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (-642), (-603), true);\n    uTF8StreamJsonParser0._handleInvalidNumberStart(603, false);\n}",
    "testName" : "test05258"
  },
  "test04043" : {
    "methodSignature" : "public int getColumnNr()",
    "methodName" : "getColumnNr",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04043() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1455), (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 15, Integer.MIN_VALUE, false);\n    JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getCurrentLocation();\n    jsonLocation0.getColumnNr();\n}",
    "testName" : "test04043"
  },
  "test06066" : {
    "methodSignature" : "protected void _finishString() throws IOException",
    "methodName" : "_finishString",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06066() throws Throwable {\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, \"ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER\", false);\n    PipedInputStream pipedInputStream0 = new PipedInputStream(32);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[8];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 18, pipedInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 117, 16, false);\n    uTF8StreamJsonParser0._finishString();\n}",
    "testName" : "test06066"
  },
  "test02023" : {
    "methodSignature" : "public Boolean nextBooleanValue() throws IOException, JsonParseException",
    "methodName" : "nextBooleanValue",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02023() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1455), (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 15, Integer.MIN_VALUE, false);\n    uTF8StreamJsonParser0.nextBooleanValue();\n}",
    "testName" : "test02023"
  },
  "test04044" : {
    "methodSignature" : "public long getCharOffset()",
    "methodName" : "getCharOffset",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04044() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1455), (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 15, Integer.MIN_VALUE, false);\n    JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getCurrentLocation();\n    jsonLocation0.getCharOffset();\n}",
    "testName" : "test04044"
  },
  "test04045" : {
    "methodSignature" : "public long getByteOffset()",
    "methodName" : "getByteOffset",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04045() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1455), (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 15, Integer.MIN_VALUE, false);\n    JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getCurrentLocation();\n    jsonLocation0.getByteOffset();\n}",
    "testName" : "test04045"
  },
  "test07278" : {
    "methodSignature" : "protected Name parseLongName(int q) throws IOException",
    "methodName" : "parseLongName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07278() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"~z'\", true);\n    byte[] byteArray0 = new byte[2];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1776, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 56, 57, true);\n    uTF8StreamJsonParser0.parseLongName(57);\n}",
    "testName" : "test07278"
  },
  "test01720" : {
    "methodSignature" : "public int nextIntValue(int defaultValue) throws IOException, JsonParseException",
    "methodName" : "nextIntValue",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01720() throws Throwable {\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);\n    Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2281), sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) (-123), 283, true);\n    uTF8StreamJsonParser0.nextIntValue((byte) 0);\n}",
    "testName" : "test01720"
  },
  "test099112" : {
    "methodSignature" : "protected final boolean _loadToHaveAtLeast(int minAvailable) throws IOException",
    "methodName" : "_loadToHaveAtLeast",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099112() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    byte[] byteArray0 = new byte[8];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, (byte) 6, (byte) 57, true);\n    boolean boolean0 = uTF8StreamJsonParser0._loadToHaveAtLeast((-3095));\n}",
    "testName" : "test099112"
  },
  "test02932" : {
    "methodSignature" : "protected void _releaseBuffers() throws IOException",
    "methodName" : "_releaseBuffers",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02932() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    byte[] byteArray0 = new byte[8];\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) (-69), pipedInputStream0, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, 1619, (byte) (-18), false);\n    uTF8StreamJsonParser0._releaseBuffers();\n}",
    "testName" : "test02932"
  },
  "test04955" : {
    "methodSignature" : "public long nextLongValue(long defaultValue) throws IOException, JsonParseException",
    "methodName" : "nextLongValue",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04955() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    byte[] byteArray0 = new byte[8];\n    byteArray0[6] = (byte) 9;\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 45);\n    DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);\n    dataInputStream0.readShort();\n    dataInputStream0.readFloat();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, dataInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 0, (byte) (-107), true);\n    uTF8StreamJsonParser0.nextLongValue(2230L);\n}",
    "testName" : "test04955"
  },
  "test094105" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094105() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    byte[] byteArray0 = new byte[2];\n    byteArray0[0] = (byte) (-34);\n    byteArray0[1] = (byte) (-76);\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1000, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 513, (-88), false);\n    int int0 = uTF8StreamJsonParser0.nextIntValue((-32768));\n    uTF8StreamJsonParser0.isClosed();\n}",
    "testName" : "test094105"
  },
  "test00912" : {
    "methodSignature" : "protected int _decodeCharForError(int firstByte) throws IOException",
    "methodName" : "_decodeCharForError",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00912() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[1];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 746, sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (-211), (-2541), false);\n    int int0 = uTF8StreamJsonParser0._decodeCharForError(0);\n}",
    "testName" : "test00912"
  },
  "test094106" : {
    "methodSignature" : "public int nextIntValue(int defaultValue) throws IOException, JsonParseException",
    "methodName" : "nextIntValue",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094106() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    byte[] byteArray0 = new byte[2];\n    byteArray0[0] = (byte) (-34);\n    byteArray0[1] = (byte) (-76);\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1000, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 513, (-88), false);\n    int int0 = uTF8StreamJsonParser0.nextIntValue((-32768));\n}",
    "testName" : "test094106"
  },
  "test06571" : {
    "methodSignature" : "protected Name _parseName(int i) throws IOException",
    "methodName" : "_parseName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06571() throws Throwable {\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, \"8n5D`yg^|E7HA]\", true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[4];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1021, (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 0, (-3276), true);\n    uTF8StreamJsonParser0._parseName(0);\n}",
    "testName" : "test06571"
  },
  "test0022" : {
    "methodSignature" : "protected JsonToken _handleInvalidNumberStart(int ch, boolean neg) throws IOException",
    "methodName" : "_handleInvalidNumberStart",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0022() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(\"w0D$s#tbs~rzH\");\n    FileSystemHandling.appendStringToFile(evoSuiteFile0, \"i6v`DKm}=d@=iFwr\");\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    MockFile mockFile0 = new MockFile(\"w0D$s#tbs~rzH\");\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(mockFile0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[6];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1867, mockFileInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 116, (byte) 0, true);\n    uTF8StreamJsonParser0._handleInvalidNumberStart((byte) 6, true);\n}",
    "testName" : "test0022"
  },
  "test08192" : {
    "methodSignature" : "public long nextLongValue(long defaultValue) throws IOException, JsonParseException",
    "methodName" : "nextLongValue",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08192() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    byte[] byteArray0 = new byte[8];\n    byteArray0[5] = (byte) 56;\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 3, 45);\n    DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);\n    dataInputStream0.readShort();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, dataInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 0, (byte) (-107), true);\n    uTF8StreamJsonParser0.nextLongValue(2230L);\n}",
    "testName" : "test08192"
  },
  "test05763" : {
    "methodSignature" : "protected void _skipString() throws IOException",
    "methodName" : "_skipString",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05763() throws Throwable {\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, sequenceInputStream0, true);\n    DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[5];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1558), dataInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (-1558), 0, true);\n    uTF8StreamJsonParser0._skipString();\n}",
    "testName" : "test05763"
  },
  "test07788" : {
    "methodSignature" : "public long nextLongValue(long defaultValue) throws IOException, JsonParseException",
    "methodName" : "nextLongValue",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07788() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1455), (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 15, Integer.MIN_VALUE, false);\n    long long0 = uTF8StreamJsonParser0.nextLongValue((byte) 43);\n}",
    "testName" : "test07788"
  },
  "test06975" : {
    "methodSignature" : "protected Name slowParseName() throws IOException",
    "methodName" : "slowParseName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06975() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    byte[] byteArray0 = new byte[2];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 53, (byte) 0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 128, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 0, (-3760), false);\n    uTF8StreamJsonParser0.slowParseName();\n}",
    "testName" : "test06975"
  },
  "test07787" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07787() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1455), (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 15, Integer.MIN_VALUE, false);\n    long long0 = uTF8StreamJsonParser0.nextLongValue((byte) 43);\n    uTF8StreamJsonParser0.isClosed();\n}",
    "testName" : "test07787"
  },
  "test08596" : {
    "methodSignature" : "public int getTextOffset() throws IOException, JsonParseException",
    "methodName" : "getTextOffset",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08596() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, pipedInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (-1), (byte) (-21), false);\n    int int0 = uTF8StreamJsonParser0.getTextOffset();\n}",
    "testName" : "test08596"
  },
  "test102115" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart, String msg) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102115() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, dataInputStream0, false);\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    byte[] byteArray0 = new byte[5];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 240, 8, false);\n    uTF8StreamJsonParser0._reportInvalidToken(\"N/A\", \"N/A\");\n}",
    "testName" : "test102115"
  },
  "test04551" : {
    "methodSignature" : "protected final void _skipCR() throws IOException",
    "methodName" : "_skipCR",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04551() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    byte[] byteArray0 = new byte[9];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, (InputStream) null, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, (-256), 0, true);\n    uTF8StreamJsonParser0._skipCR();\n}",
    "testName" : "test04551"
  },
  "test02528" : {
    "methodSignature" : "protected final void _skipCR() throws IOException",
    "methodName" : "_skipCR",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02528() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Object object0 = new Object();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 2085);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[2];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2085, pushbackInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 2085, (-593), true);\n    uTF8StreamJsonParser0._skipCR();\n}",
    "testName" : "test02528"
  },
  "test03336" : {
    "methodSignature" : "protected Name _parseName(int i) throws IOException",
    "methodName" : "_parseName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03336() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[9];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2398, dataInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 65, 48, false);\n    uTF8StreamJsonParser0._parseName(881);\n}",
    "testName" : "test03336"
  },
  "test05359" : {
    "methodSignature" : "protected JsonToken _handleApos() throws IOException",
    "methodName" : "_handleApos",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05359() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, mockFileInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, (byte) 73, (byte) 73, true);\n    uTF8StreamJsonParser0._handleApos();\n}",
    "testName" : "test05359"
  },
  "test107120" : {
    "methodSignature" : "public long getCharOffset()",
    "methodName" : "getCharOffset",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107120() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    byte[] byteArray0 = new byte[4];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, byteArrayInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 1000, (-4204), true);\n    JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getTokenLocation();\n    jsonLocation0.getCharOffset();\n}",
    "testName" : "test107120"
  },
  "test01316" : {
    "methodSignature" : "protected Name parseEscapedName(int[] quads, int qlen, int currQuad, int ch, int currQuadBytes) throws IOException",
    "methodName" : "parseEscapedName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01316() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, pipedInputStream0, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[2];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1660), pipedInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 102, (byte) 102, false);\n    int[] intArray0 = new int[4];\n    uTF8StreamJsonParser0.parseEscapedName(intArray0, (byte) (-56), (byte) 102, 73, (-1660));\n}",
    "testName" : "test01316"
  },
  "test091102" : {
    "methodSignature" : "public String getValueAsString(String defValue) throws IOException, JsonParseException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test091102() throws Throwable {\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, \"ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER\", false);\n    PipedInputStream pipedInputStream0 = new PipedInputStream(32);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[8];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 18, pipedInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 117, 16, false);\n    String string0 = uTF8StreamJsonParser0.getValueAsString(\"ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER\");\n}",
    "testName" : "test091102"
  },
  "test0033" : {
    "methodSignature" : "protected final boolean _loadToHaveAtLeast(int minAvailable) throws IOException",
    "methodName" : "_loadToHaveAtLeast",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0033() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    byte[] byteArray0 = new byte[3];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1951, 0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 0, 8, true);\n    boolean boolean0 = uTF8StreamJsonParser0._loadToHaveAtLeast(102);\n}",
    "testName" : "test0033"
  },
  "test07379" : {
    "methodSignature" : "protected Name parseLongName(int q) throws IOException",
    "methodName" : "parseLongName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07379() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    byte[] byteArray0 = new byte[8];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, (byte) 6, (byte) 57, true);\n    uTF8StreamJsonParser0.parseLongName(633);\n}",
    "testName" : "test07379"
  },
  "test02124" : {
    "methodSignature" : "public Boolean nextBooleanValue() throws IOException, JsonParseException",
    "methodName" : "nextBooleanValue",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02124() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    byte[] byteArray0 = new byte[8];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, (byte) (-34), (byte) 57, true);\n    uTF8StreamJsonParser0.nextBooleanValue();\n}",
    "testName" : "test02124"
  },
  "test06167" : {
    "methodSignature" : "protected void _finishString() throws IOException",
    "methodName" : "_finishString",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06167() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"KeQ>8\", true);\n    byte[] byteArray0 = new byte[0];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (-1402), 27, true);\n    uTF8StreamJsonParser0._finishString();\n}",
    "testName" : "test06167"
  },
  "test105118" : {
    "methodSignature" : "public Object getInputSource()",
    "methodName" : "getInputSource",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105118() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 9, (byte) 0, false);\n    Object object0 = uTF8StreamJsonParser0.getInputSource();\n}",
    "testName" : "test105118"
  },
  "test03841" : {
    "methodSignature" : "public JsonToken nextToken() throws IOException, JsonParseException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03841() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Object object0 = new Object();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, object0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, (InputStream) null, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, (byte) 56, (-3309), false);\n    uTF8StreamJsonParser0.nextToken();\n}",
    "testName" : "test03841"
  },
  "test07889" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07889() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[0];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 2000, (-1511), false);\n    uTF8StreamJsonParser0.nextTextValue();\n    uTF8StreamJsonParser0.isClosed();\n}",
    "testName" : "test07889"
  },
  "test01821" : {
    "methodSignature" : "public int nextIntValue(int defaultValue) throws IOException, JsonParseException",
    "methodName" : "nextIntValue",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01821() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[9];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, dataInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (-1398), (-3085), false);\n    uTF8StreamJsonParser0.nextIntValue((-327));\n}",
    "testName" : "test01821"
  },
  "test096108" : {
    "methodSignature" : "protected final boolean _loadToHaveAtLeast(int minAvailable) throws IOException",
    "methodName" : "_loadToHaveAtLeast",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096108() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    PipedInputStream pipedInputStream0 = new PipedInputStream(2000);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[5];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, pipedInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 7, (-1600), false);\n    boolean boolean0 = uTF8StreamJsonParser0._loadToHaveAtLeast((-2397));\n}",
    "testName" : "test096108"
  },
  "test05460" : {
    "methodSignature" : "protected JsonToken _handleUnexpectedValue(int c) throws IOException",
    "methodName" : "_handleUnexpectedValue",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05460() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, dataInputStream0, false);\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-256), (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) (-5), (byte) (-5), true);\n    uTF8StreamJsonParser0._handleUnexpectedValue(0);\n}",
    "testName" : "test05460"
  },
  "test08293" : {
    "methodSignature" : "public JsonToken nextToken() throws IOException, JsonParseException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08293() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    byte[] byteArray0 = new byte[8];\n    byteArray0[2] = (byte) 107;\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 45);\n    DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);\n    dataInputStream0.readShort();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, dataInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 0, (byte) (-107), true);\n    uTF8StreamJsonParser0.nextToken();\n}",
    "testName" : "test08293"
  },
  "test0044" : {
    "methodSignature" : "protected final boolean _loadToHaveAtLeast(int minAvailable) throws IOException",
    "methodName" : "_loadToHaveAtLeast",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0044() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[6];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) (-119), (byte) (-119), false);\n    boolean boolean0 = uTF8StreamJsonParser0._loadToHaveAtLeast((-2714));\n}",
    "testName" : "test0044"
  },
  "test07480" : {
    "methodSignature" : "protected Name _parseName(int i) throws IOException",
    "methodName" : "_parseName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07480() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[9];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2398, dataInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 65, 48, false);\n    uTF8StreamJsonParser0._parseName(200);\n}",
    "testName" : "test07480"
  },
  "test04652" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04652() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[9];\n    byteArray0[7] = (byte) (-61);\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 7, 2000, true);\n    uTF8StreamJsonParser0._reportInvalidToken(\"fL_?Qx<(wwxMQ\");\n}",
    "testName" : "test04652"
  },
  "test05864" : {
    "methodSignature" : "protected void _finishString() throws IOException",
    "methodName" : "_finishString",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05864() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    byte[] byteArray0 = new byte[8];\n    byteArray0[2] = (byte) 120;\n    byteArray0[3] = (byte) (-101);\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 45);\n    DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);\n    dataInputStream0.readShort();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, dataInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 0, (byte) (-107), true);\n    uTF8StreamJsonParser0._finishString();\n}",
    "testName" : "test05864"
  },
  "test06672" : {
    "methodSignature" : "protected Name _handleOddName(int ch) throws IOException",
    "methodName" : "_handleOddName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06672() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[4];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 0, 0, true);\n    uTF8StreamJsonParser0._handleOddName((-4592));\n}",
    "testName" : "test06672"
  },
  "test08697" : {
    "methodSignature" : "public int getTextLength() throws IOException, JsonParseException",
    "methodName" : "getTextLength",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08697() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    byte[] byteArray0 = new byte[8];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, (byte) 6, (byte) 57, true);\n    int int0 = uTF8StreamJsonParser0.getTextLength();\n}",
    "testName" : "test08697"
  },
  "test100113" : {
    "methodSignature" : "protected final boolean _loadToHaveAtLeast(int minAvailable) throws IOException",
    "methodName" : "_loadToHaveAtLeast",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100113() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    PipedInputStream pipedInputStream0 = new PipedInputStream(1517);\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[2];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 45, pushbackInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (-2592), 262145, true);\n    uTF8StreamJsonParser0._loadToHaveAtLeast(2401);\n}",
    "testName" : "test100113"
  },
  "test02225" : {
    "methodSignature" : "public Boolean nextBooleanValue() throws IOException, JsonParseException",
    "methodName" : "nextBooleanValue",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02225() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);\n    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0, 2000);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[5];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, bufferedInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (-4577), (-4577), false);\n    uTF8StreamJsonParser0.nextBooleanValue();\n}",
    "testName" : "test02225"
  },
  "test098111" : {
    "methodSignature" : "protected final boolean _loadToHaveAtLeast(int minAvailable) throws IOException",
    "methodName" : "_loadToHaveAtLeast",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098111() throws Throwable {\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);\n    byte[] byteArray0 = new byte[3];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (-2), (-2139), false);\n    boolean boolean0 = uTF8StreamJsonParser0._loadToHaveAtLeast(270);\n}",
    "testName" : "test098111"
  },
  "test01417" : {
    "methodSignature" : "public JsonToken nextToken() throws IOException, JsonParseException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01417() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[5];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 127, bufferedInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 0, (byte) (-114), false);\n    uTF8StreamJsonParser0.nextToken();\n}",
    "testName" : "test01417"
  },
  "test04248" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04248() throws Throwable {\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);\n    byte[] byteArray0 = new byte[3];\n    byteArray0[1] = (byte) 43;\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (-2), (-2139), false);\n    uTF8StreamJsonParser0._reportInvalidToken(\"\");\n}",
    "testName" : "test04248"
  },
  "test03437" : {
    "methodSignature" : "protected Name _parseAposName() throws IOException",
    "methodName" : "_parseAposName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03437() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, bufferedInputStream0, objectCodec0, bytesToNameCanonicalizer0, (byte[]) null, 0, 2000, true);\n    uTF8StreamJsonParser0._parseAposName();\n}",
    "testName" : "test03437"
  },
  "test093104" : {
    "methodSignature" : "public String getText() throws IOException, JsonParseException",
    "methodName" : "getText",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093104() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1455), (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 15, Integer.MIN_VALUE, false);\n    String string0 = uTF8StreamJsonParser0.getText();\n}",
    "testName" : "test093104"
  },
  "test02629" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart, String msg) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02629() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    byte[] byteArray0 = new byte[8];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-64), (InputStream) null, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, (byte) (-89), (byte) 39, false);\n    uTF8StreamJsonParser0._reportInvalidToken(\"2t%xAJX$\", \"Q,EfRq_?o(iQp9\\\"b\");\n}",
    "testName" : "test02629"
  },
  "test07990" : {
    "methodSignature" : "public String nextTextValue() throws IOException, JsonParseException",
    "methodName" : "nextTextValue",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07990() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[9];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 61, 1316, false);\n    uTF8StreamJsonParser0.nextTextValue();\n}",
    "testName" : "test07990"
  },
  "test07076" : {
    "methodSignature" : "protected Name slowParseName() throws IOException",
    "methodName" : "slowParseName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07076() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false, true).when(enumeration0).hasMoreElements();\n    doReturn((Object) null).when(enumeration0).nextElement();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 2000, 2000, true);\n    uTF8StreamJsonParser0.slowParseName();\n}",
    "testName" : "test07076"
  },
  "test0055" : {
    "methodSignature" : "public int getTokenColumnNr()",
    "methodName" : "getTokenColumnNr",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0055() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[6];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, pipedInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, (byte) (-98), 2000, false);\n    uTF8StreamJsonParser0._releaseBuffers();\n    uTF8StreamJsonParser0.getTokenColumnNr();\n}",
    "testName" : "test0055"
  },
  "test06268" : {
    "methodSignature" : "protected Name _parseAposName() throws IOException",
    "methodName" : "_parseAposName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06268() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    PipedInputStream pipedInputStream0 = new PipedInputStream(2000);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[5];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 3216, pipedInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 4304, (byte) 0, true);\n    uTF8StreamJsonParser0._parseAposName();\n}",
    "testName" : "test06268"
  },
  "test01013" : {
    "methodSignature" : "protected int _decodeCharForError(int firstByte) throws IOException",
    "methodName" : "_decodeCharForError",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01013() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[9];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 7, 2000, true);\n    int int0 = uTF8StreamJsonParser0._decodeCharForError(2000);\n}",
    "testName" : "test01013"
  },
  "test103116" : {
    "methodSignature" : "protected void _reportInvalidOther(int mask, int ptr) throws JsonParseException",
    "methodName" : "_reportInvalidOther",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103116() throws Throwable {\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);\n    byte[] byteArray0 = new byte[3];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1808), pushbackInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 0, (byte) 0, true);\n    uTF8StreamJsonParser0._reportInvalidOther((byte) 0, 40);\n}",
    "testName" : "test103116"
  },
  "test03033" : {
    "methodSignature" : "protected void _releaseBuffers() throws IOException",
    "methodName" : "_releaseBuffers",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03033() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[9];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 3511, (byte) 0, true);\n    uTF8StreamJsonParser0._releaseBuffers();\n}",
    "testName" : "test03033"
  },
  "test05056" : {
    "methodSignature" : "protected void _matchToken(String matchStr, int i) throws IOException",
    "methodName" : "_matchToken",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05056() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[0];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 287, 273, false);\n    uTF8StreamJsonParser0._matchToken(\"}ToZN/#\\\"Hzslw/Ey>g\", 287);\n}",
    "testName" : "test05056"
  },
  "test02730" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart, String msg) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02730() throws Throwable {\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[6];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-101), mockFileInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 125, (byte) (-73), false);\n    uTF8StreamJsonParser0._reportInvalidToken(\"'S+v)i\", \"1z#,5m\");\n}",
    "testName" : "test02730"
  },
  "test05965" : {
    "methodSignature" : "protected void _finishString() throws IOException",
    "methodName" : "_finishString",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05965() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    byte[] byteArray0 = new byte[8];\n    byteArray0[2] = (byte) 120;\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 45);\n    DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);\n    dataInputStream0.readShort();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, dataInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 0, (byte) (-107), true);\n    uTF8StreamJsonParser0._finishString();\n}",
    "testName" : "test05965"
  },
  "test108121" : {
    "methodSignature" : "public boolean canReadTypeId()",
    "methodName" : "canReadTypeId",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108121() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[8];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-319), mockFileInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 0, (-2784), true);\n    uTF8StreamJsonParser0.setCodec((ObjectCodec) null);\n    uTF8StreamJsonParser0.canReadTypeId();\n}",
    "testName" : "test108121"
  },
  "test01922" : {
    "methodSignature" : "public boolean nextFieldName(SerializableString str) throws IOException, JsonParseException",
    "methodName" : "nextFieldName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01922() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"') as character #\", false);\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    byte[] byteArray0 = new byte[5];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, mockFileInputStream0, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, 706, 0, false);\n    SerializedString serializedString0 = new SerializedString(\"\");\n    uTF8StreamJsonParser0.nextFieldName(serializedString0);\n}",
    "testName" : "test01922"
  },
  "test03942" : {
    "methodSignature" : "public byte[] getBinaryValue(Base64Variant b64variant) throws IOException, JsonParseException",
    "methodName" : "getBinaryValue",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03942() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    byte[] byteArray0 = new byte[5];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-8), 0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 0, (byte) (-77), true);\n    uTF8StreamJsonParser0.getBinaryValue((Base64Variant) null);\n}",
    "testName" : "test03942"
  },
  "test090101" : {
    "methodSignature" : "protected final String _getText2(JsonToken t)",
    "methodName" : "_getText2",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090101() throws Throwable {\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    byte[] byteArray0 = new byte[8];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 17, pipedInputStream0, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, 91, 64, true);\n    JsonToken jsonToken0 = JsonToken.START_ARRAY;\n    String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);\n}",
    "testName" : "test090101"
  },
  "test07581" : {
    "methodSignature" : "public int getColumnNr()",
    "methodName" : "getColumnNr",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07581() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1455), (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 15, Integer.MIN_VALUE, false);\n    uTF8StreamJsonParser0._parseNumber((-3126));\n    JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getCurrentLocation();\n    jsonLocation0.getColumnNr();\n}",
    "testName" : "test07581"
  },
  "test07583" : {
    "methodSignature" : "public int getLineNr()",
    "methodName" : "getLineNr",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07583() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1455), (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 15, Integer.MIN_VALUE, false);\n    uTF8StreamJsonParser0._parseNumber((-3126));\n    JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getCurrentLocation();\n    jsonLocation0.getLineNr();\n}",
    "testName" : "test07583"
  },
  "test08394" : {
    "methodSignature" : "protected int _readBinary(Base64Variant b64variant, OutputStream out, byte[] buffer) throws IOException, JsonParseException",
    "methodName" : "_readBinary",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08394() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0, 911);\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[1];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pushbackInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, 2000, 254, true);\n    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);\n    uTF8StreamJsonParser0._readBinary((Base64Variant) null, byteArrayBuilder0, byteArray0);\n}",
    "testName" : "test08394"
  },
  "test07582" : {
    "methodSignature" : "public long getCharOffset()",
    "methodName" : "getCharOffset",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07582() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1455), (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 15, Integer.MIN_VALUE, false);\n    uTF8StreamJsonParser0._parseNumber((-3126));\n    JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getCurrentLocation();\n    jsonLocation0.getCharOffset();\n}",
    "testName" : "test07582"
  },
  "test0066" : {
    "methodSignature" : "public String getValueAsString(String defValue) throws IOException, JsonParseException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0066() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[7];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-3085), dataInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 84, 2000, false);\n    String string0 = uTF8StreamJsonParser0.getValueAsString((String) null);\n}",
    "testName" : "test0066"
  },
  "test106119" : {
    "methodSignature" : "protected void _reportInvalidChar(int c) throws JsonParseException",
    "methodName" : "_reportInvalidChar",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106119() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, pipedInputStream0, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, (byte) (-120), (byte) (-120), true);\n    uTF8StreamJsonParser0._reportInvalidChar(365);\n}",
    "testName" : "test106119"
  },
  "test08798" : {
    "methodSignature" : "public char[] getTextCharacters() throws IOException, JsonParseException",
    "methodName" : "getTextCharacters",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08798() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    byte[] byteArray0 = new byte[6];\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2110), (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (-683), (byte) 0, true);\n    char[] charArray0 = uTF8StreamJsonParser0.getTextCharacters();\n}",
    "testName" : "test08798"
  },
  "test04753" : {
    "methodSignature" : "public long nextLongValue(long defaultValue) throws IOException, JsonParseException",
    "methodName" : "nextLongValue",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04753() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    byte[] byteArray0 = new byte[8];\n    byteArray0[2] = (byte) 107;\n    byteArray0[3] = (byte) (-101);\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 45);\n    DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);\n    dataInputStream0.readShort();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, dataInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 0, (byte) (-107), true);\n    uTF8StreamJsonParser0.nextLongValue(2230L);\n}",
    "testName" : "test04753"
  },
  "test05561" : {
    "methodSignature" : "protected void _skipString() throws IOException",
    "methodName" : "_skipString",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05561() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    byte[] byteArray0 = new byte[4];\n    byteArray0[0] = (byte) (-5);\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, pushbackInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 0, (-2218), true);\n    uTF8StreamJsonParser0._skipString();\n}",
    "testName" : "test05561"
  },
  "test07584" : {
    "methodSignature" : "public long getByteOffset()",
    "methodName" : "getByteOffset",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07584() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1455), (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 15, Integer.MIN_VALUE, false);\n    uTF8StreamJsonParser0._parseNumber((-3126));\n    JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getCurrentLocation();\n    jsonLocation0.getByteOffset();\n}",
    "testName" : "test07584"
  },
  "test06773" : {
    "methodSignature" : "protected Name parseEscapedName(int[] quads, int qlen, int currQuad, int ch, int currQuadBytes) throws IOException",
    "methodName" : "parseEscapedName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06773() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1455), (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 15, Integer.MIN_VALUE, false);\n    int[] intArray0 = new int[5];\n    uTF8StreamJsonParser0.parseEscapedName(intArray0, (-1455), (-1455), (byte) 43, (-238));\n}",
    "testName" : "test06773"
  },
  "test02326" : {
    "methodSignature" : "public Boolean nextBooleanValue() throws IOException, JsonParseException",
    "methodName" : "nextBooleanValue",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02326() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    byte[] byteArray0 = new byte[8];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, (InputStream) null, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, (byte) 6, (byte) 57, true);\n    uTF8StreamJsonParser0.nextBooleanValue();\n}",
    "testName" : "test02326"
  },
  "test03538" : {
    "methodSignature" : "protected Name _handleOddName(int ch) throws IOException",
    "methodName" : "_handleOddName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03538() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, \"6 +\\\"B+R>u?l~\", false);\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 73, mockFileInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 7, 7, false);\n    uTF8StreamJsonParser0._handleOddName(73);\n}",
    "testName" : "test03538"
  },
  "test01114" : {
    "methodSignature" : "protected Name slowParseName() throws IOException",
    "methodName" : "slowParseName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01114() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    byte[] byteArray0 = new byte[5];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1241), mockFileInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 1, (byte) 1, true);\n    uTF8StreamJsonParser0.slowParseName();\n}",
    "testName" : "test01114"
  },
  "test04349" : {
    "methodSignature" : "public int getFeatureMask()",
    "methodName" : "getFeatureMask",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04349() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[1];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 255, 191, true);\n    uTF8StreamJsonParser0._skipCR();\n    uTF8StreamJsonParser0.getFeatureMask();\n}",
    "testName" : "test04349"
  },
  "test01518" : {
    "methodSignature" : "public long nextLongValue(long defaultValue) throws IOException, JsonParseException",
    "methodName" : "nextLongValue",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01518() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    byte[] byteArray0 = new byte[8];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 45);\n    DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    dataInputStream0.read(byteArray0);\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, dataInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) (-101), (byte) (-107), true);\n    uTF8StreamJsonParser0.nextLongValue(2230L);\n}",
    "testName" : "test01518"
  },
  "test095107" : {
    "methodSignature" : "public boolean hasTextCharacters()",
    "methodName" : "hasTextCharacters",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095107() throws Throwable {\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    byte[] byteArray0 = new byte[8];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 17, pipedInputStream0, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, 91, 64, true);\n    uTF8StreamJsonParser0._closeInput();\n    uTF8StreamJsonParser0.hasTextCharacters();\n}",
    "testName" : "test095107"
  },
  "test0077" : {
    "methodSignature" : "public String getValueAsString(String defValue) throws IOException, JsonParseException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0077() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    byte[] byteArray0 = new byte[7];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 256, 97);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 333, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 1057, 192, false);\n    String string0 = uTF8StreamJsonParser0.getValueAsString(\"\");\n}",
    "testName" : "test0077"
  },
  "test03134" : {
    "methodSignature" : "protected JsonToken _parseNumber(int c) throws IOException, JsonParseException",
    "methodName" : "_parseNumber",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03134() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    byte[] byteArray0 = new byte[8];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 0, 377);\n    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, bufferedInputStream0);\n    DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, dataInputStream0, (ObjectCodec) null, bytesToNameCanonicalizer0, byteArray0, (-103), (byte) 0, true);\n    uTF8StreamJsonParser0._parseNumber((byte) 3);\n}",
    "testName" : "test03134"
  },
  "test05157" : {
    "methodSignature" : "protected void _matchToken(String matchStr, int i) throws IOException",
    "methodName" : "_matchToken",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05157() throws Throwable {\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);\n    byte[] byteArray0 = new byte[8];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 514, (-1623));\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 500, byteArrayInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (-1273), (byte) (-54), true);\n    uTF8StreamJsonParser0._matchToken(\"com.fasterxml.jackson.core.json.UTF8StreamJsonParser\", 98);\n}",
    "testName" : "test05157"
  },
  "test06369" : {
    "methodSignature" : "protected Name _parseAposName() throws IOException",
    "methodName" : "_parseAposName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06369() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);\n    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0, 2000);\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, pipedInputStream0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[4];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 0, (byte) 18, true);\n    uTF8StreamJsonParser0._parseAposName();\n}",
    "testName" : "test06369"
  },
  "test089100" : {
    "methodSignature" : "protected final String _getText2(JsonToken t)",
    "methodName" : "_getText2",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089100() throws Throwable {\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[7];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, (InputStream) null, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 19, (byte) 0, false);\n    JsonToken jsonToken0 = JsonToken.FIELD_NAME;\n    String string0 = uTF8StreamJsonParser0._getText2(jsonToken0);\n}",
    "testName" : "test089100"
  },
  "test07177" : {
    "methodSignature" : "protected Name slowParseName() throws IOException",
    "methodName" : "slowParseName",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07177() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    PipedInputStream pipedInputStream0 = new PipedInputStream(2000);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    byte[] byteArray0 = new byte[0];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, pipedInputStream0, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, 993, 2000, true);\n    uTF8StreamJsonParser0.slowParseName();\n}",
    "testName" : "test07177"
  },
  "test101114" : {
    "methodSignature" : "public Boolean nextBooleanValue() throws IOException, JsonParseException",
    "methodName" : "nextBooleanValue",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101114() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false, false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[9];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 0, sequenceInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 3511, (byte) 0, true);\n    uTF8StreamJsonParser0.nextBooleanValue();\n}",
    "testName" : "test101114"
  },
  "test02831" : {
    "methodSignature" : "protected void _reportInvalidInitial(int mask) throws JsonParseException",
    "methodName" : "_reportInvalidInitial",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02831() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    File file0 = MockFile.createTempFile(\"Unexpected character (\", \"Unexpected character (\");\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[3];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-2684), mockFileInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 772, (byte) 0, true);\n    uTF8StreamJsonParser0._reportInvalidInitial((byte) (-36));\n}",
    "testName" : "test02831"
  },
  "test00811" : {
    "methodSignature" : "public int getLineNr()",
    "methodName" : "getLineNr",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00811() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    byte[] byteArray0 = new byte[8];\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 80, (InputStream) null, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, 0, 92, true);\n    JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getCurrentLocation();\n    jsonLocation0.getLineNr();\n}",
    "testName" : "test00811"
  },
  "test04854" : {
    "methodSignature" : "protected char _decodeEscaped() throws IOException",
    "methodName" : "_decodeEscaped",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04854() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[2];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 2000, mockFileInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, 73, (byte) 33, false);\n    uTF8StreamJsonParser0._decodeEscaped();\n}",
    "testName" : "test04854"
  },
  "test00810" : {
    "methodSignature" : "public int getColumnNr()",
    "methodName" : "getColumnNr",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00810() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    byte[] byteArray0 = new byte[8];\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 80, (InputStream) null, objectCodec0, (BytesToNameCanonicalizer) null, byteArray0, 0, 92, true);\n    JsonLocation jsonLocation0 = uTF8StreamJsonParser0.getCurrentLocation();\n    jsonLocation0.getColumnNr();\n}",
    "testName" : "test00810"
  },
  "test092103" : {
    "methodSignature" : "public String getValueAsString() throws IOException, JsonParseException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092103() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    BytesToNameCanonicalizer bytesToNameCanonicalizer0 = BytesToNameCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[7];\n    Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (byte) 39, dataInputStream0, objectCodec0, bytesToNameCanonicalizer0, byteArray0, (byte) 34, 152, true);\n    String string0 = uTF8StreamJsonParser0.getValueAsString();\n}",
    "testName" : "test092103"
  }
}