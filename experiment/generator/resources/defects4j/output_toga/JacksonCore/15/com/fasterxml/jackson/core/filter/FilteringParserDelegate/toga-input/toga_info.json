{
  "test07680" : {
    "methodSignature" : "public final boolean hasToken(JsonToken t)",
    "methodName" : "hasToken",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07680() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    JsonToken jsonToken0 = filteringParserDelegate0.nextValue();\n    boolean boolean0 = filteringParserDelegate0.hasToken(jsonToken0);\n}",
    "testName" : "test07680"
  },
  "test08491" : {
    "methodSignature" : "public final int getCurrentTokenId()",
    "methodName" : "getCurrentTokenId",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08491() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    int int0 = filteringParserDelegate0.getCurrentTokenId();\n}",
    "testName" : "test08491"
  },
  "test118125" : {
    "methodSignature" : "public float getFloatValue() throws IOException",
    "methodName" : "getFloatValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118125() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"Can not currently override name during filtering read\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[6];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-303), stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 0, 1072, true);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(readerBasedJsonParser0, readerBasedJsonParser0);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParserSequence0, tokenFilter0, true, true);\n    filteringParserDelegate0.getFloatValue();\n}",
    "testName" : "test118125"
  },
  "test0000" : {
    "methodSignature" : "public JsonToken getLastClearedToken()",
    "methodName" : "getLastClearedToken",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    filteringParserDelegate0.getLastClearedToken();\n}",
    "testName" : "test0000"
  },
  "test0088" : {
    "methodSignature" : "public long getValueAsLong() throws IOException",
    "methodName" : "getValueAsLong",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0088() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    long long0 = filteringParserDelegate0.getValueAsLong();\n}",
    "testName" : "test0088"
  },
  "test08490" : {
    "methodSignature" : "public boolean hasCurrentToken()",
    "methodName" : "hasCurrentToken",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08490() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    int int0 = filteringParserDelegate0.getCurrentTokenId();\n    filteringParserDelegate0.hasCurrentToken();\n}",
    "testName" : "test08490"
  },
  "test06870" : {
    "methodSignature" : "public boolean hasCurrentToken()",
    "methodName" : "hasCurrentToken",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06870() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, true);\n    filteringParserDelegate0._nextToken2();\n    filteringParserDelegate0.nextToken();\n    filteringParserDelegate0.hasCurrentToken();\n}",
    "testName" : "test06870"
  },
  "test08895" : {
    "methodSignature" : "public byte[] getBinaryValue(Base64Variant b64variant) throws IOException",
    "methodName" : "getBinaryValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08895() throws Throwable {\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);\n    filteringParserDelegate0.getBinaryValue((Base64Variant) null);\n}",
    "testName" : "test08895"
  },
  "test02425" : {
    "methodSignature" : "public long getLongValue() throws IOException",
    "methodName" : "getLongValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02425() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    long long0 = filteringParserDelegate0.getLongValue();\n}",
    "testName" : "test02425"
  },
  "test03637" : {
    "methodSignature" : "public JsonToken nextValue() throws IOException",
    "methodName" : "nextValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03637() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    stringReader0.close();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n}",
    "testName" : "test03637"
  },
  "test01212" : {
    "methodSignature" : "public double getValueAsDouble() throws IOException",
    "methodName" : "getValueAsDouble",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01212() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    double double0 = filteringParserDelegate0.getValueAsDouble();\n}",
    "testName" : "test01212"
  },
  "test04849" : {
    "methodSignature" : "public boolean getValueAsBoolean() throws IOException",
    "methodName" : "getValueAsBoolean",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04849() throws Throwable {\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, true);\n    filteringParserDelegate0.getValueAsBoolean();\n}",
    "testName" : "test04849"
  },
  "test05657" : {
    "methodSignature" : "public float getFloatValue() throws IOException",
    "methodName" : "getFloatValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05657() throws Throwable {\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, false);\n    filteringParserDelegate0.getFloatValue();\n}",
    "testName" : "test05657"
  },
  "test104111" : {
    "methodSignature" : "public int getTextOffset() throws IOException",
    "methodName" : "getTextOffset",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104111() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, sequenceInputStream0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 605, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, (char[]) null, 605, 2044, false);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, false);\n    int int0 = filteringParserDelegate0.getTextOffset();\n}",
    "testName" : "test104111"
  },
  "test06869" : {
    "methodSignature" : "public boolean hasCurrentToken()",
    "methodName" : "hasCurrentToken",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06869() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, true);\n    filteringParserDelegate0._nextToken2();\n    filteringParserDelegate0.hasCurrentToken();\n}",
    "testName" : "test06869"
  },
  "test02829" : {
    "methodSignature" : "public final int id()",
    "methodName" : "id",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02829() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    JsonToken jsonToken0 = filteringParserDelegate0.getCurrentToken();\n    jsonToken0.id();\n}",
    "testName" : "test02829"
  },
  "test01616" : {
    "methodSignature" : "public int getTextLength() throws IOException",
    "methodName" : "getTextLength",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01616() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, sequenceInputStream0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 605, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, (char[]) null, 605, 2044, false);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, false);\n    int int0 = filteringParserDelegate0.getTextLength();\n}",
    "testName" : "test01616"
  },
  "test097104" : {
    "methodSignature" : "public NumberType getNumberType() throws IOException",
    "methodName" : "getNumberType",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097104() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, sequenceInputStream0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 605, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, (char[]) null, 605, 2044, false);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, false);\n    filteringParserDelegate0.getNumberType();\n}",
    "testName" : "test097104"
  },
  "test09299" : {
    "methodSignature" : "public long getLongValue() throws IOException",
    "methodName" : "getLongValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09299() throws Throwable {\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);\n    filteringParserDelegate0.getLongValue();\n}",
    "testName" : "test09299"
  },
  "test04041" : {
    "methodSignature" : "public String getValueAsString(String defaultValue) throws IOException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04041() throws Throwable {\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, false);\n    filteringParserDelegate0.getValueAsString(\"\");\n}",
    "testName" : "test04041"
  },
  "test07274" : {
    "methodSignature" : "protected final JsonToken _nextToken2() throws IOException",
    "methodName" : "_nextToken2",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07274() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-2589), stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, false);\n    filteringParserDelegate0._nextToken2();\n}",
    "testName" : "test07274"
  },
  "test102109" : {
    "methodSignature" : "public int getMatchCount()",
    "methodName" : "getMatchCount",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102109() throws Throwable {\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);\n    int int0 = filteringParserDelegate0.getMatchCount();\n}",
    "testName" : "test102109"
  },
  "test08084" : {
    "methodSignature" : "public boolean hasCurrentToken()",
    "methodName" : "hasCurrentToken",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08084() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextIntValue(1330);\n    boolean boolean0 = filteringParserDelegate0.hasTokenId((-3480));\n    filteringParserDelegate0.hasCurrentToken();\n}",
    "testName" : "test08084"
  },
  "test08085" : {
    "methodSignature" : "public boolean hasTokenId(int id)",
    "methodName" : "hasTokenId",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08085() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextIntValue(1330);\n    boolean boolean0 = filteringParserDelegate0.hasTokenId((-3480));\n}",
    "testName" : "test08085"
  },
  "test0011" : {
    "methodSignature" : "public String getCurrentName() throws IOException",
    "methodName" : "getCurrentName",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    String string0 = filteringParserDelegate0.getCurrentName();\n}",
    "testName" : "test0011"
  },
  "test0099" : {
    "methodSignature" : "public int getValueAsInt(int defaultValue) throws IOException",
    "methodName" : "getValueAsInt",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0099() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    int int0 = filteringParserDelegate0.getValueAsInt((-3480));\n}",
    "testName" : "test0099"
  },
  "test06061" : {
    "methodSignature" : "public JsonLocation getCurrentLocation()",
    "methodName" : "getCurrentLocation",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06061() throws Throwable {\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, false);\n    filteringParserDelegate0.getCurrentLocation();\n}",
    "testName" : "test06061"
  },
  "test115122" : {
    "methodSignature" : "public double getDoubleValue() throws IOException",
    "methodName" : "getDoubleValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115122() throws Throwable {\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened((JsonParser) null, (JsonParser) null);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParserSequence0, tokenFilter0, true, true);\n    filteringParserDelegate0.getDoubleValue();\n}",
    "testName" : "test115122"
  },
  "test02020" : {
    "methodSignature" : "public String getText() throws IOException",
    "methodName" : "getText",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02020() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    String string0 = filteringParserDelegate0.getText();\n}",
    "testName" : "test02020"
  },
  "test07679" : {
    "methodSignature" : "public boolean hasCurrentToken()",
    "methodName" : "hasCurrentToken",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07679() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    JsonToken jsonToken0 = filteringParserDelegate0.nextValue();\n    boolean boolean0 = filteringParserDelegate0.hasToken(jsonToken0);\n    filteringParserDelegate0.hasCurrentToken();\n}",
    "testName" : "test07679"
  },
  "test04445" : {
    "methodSignature" : "public int getValueAsInt() throws IOException",
    "methodName" : "getValueAsInt",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04445() throws Throwable {\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, (TokenFilter) null, true, true);\n    filteringParserDelegate0.getValueAsInt();\n}",
    "testName" : "test04445"
  },
  "test05253" : {
    "methodSignature" : "public short getShortValue() throws IOException",
    "methodName" : "getShortValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05253() throws Throwable {\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);\n    filteringParserDelegate0.getShortValue();\n}",
    "testName" : "test05253"
  },
  "test06465" : {
    "methodSignature" : "protected final JsonToken _nextTokenWithBuffering(final TokenFilterContext buffRoot) throws IOException",
    "methodName" : "_nextTokenWithBuffering",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06465() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();\n    byte[] byteArray0 = new byte[9];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, dataInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 0, (byte) 71, true);\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(uTF8StreamJsonParser0, (TokenFilter) null, true, true);\n    filteringParserDelegate0._nextTokenWithBuffering((TokenFilterContext) null);\n}",
    "testName" : "test06465"
  },
  "test02930" : {
    "methodSignature" : "public int getColumnNr()",
    "methodName" : "getColumnNr",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02930() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(readerBasedJsonParser0, readerBasedJsonParser0);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParserSequence0, tokenFilter0, false, false);\n    JsonLocation jsonLocation0 = filteringParserDelegate0.getCurrentLocation();\n    jsonLocation0.getColumnNr();\n}",
    "testName" : "test02930"
  },
  "test107114" : {
    "methodSignature" : "public boolean hasTextCharacters()",
    "methodName" : "hasTextCharacters",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107114() throws Throwable {\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, true);\n    filteringParserDelegate0.hasTextCharacters();\n}",
    "testName" : "test107114"
  },
  "test094101" : {
    "methodSignature" : "public TokenFilter getFilter()",
    "methodName" : "getFilter",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094101() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, (Reader) null, (ObjectCodec) null, charsToNameCanonicalizer0, (char[]) null, 33, 2, true);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    TokenFilter tokenFilter1 = filteringParserDelegate0.getFilter();\n}",
    "testName" : "test094101"
  },
  "test110117" : {
    "methodSignature" : "public String getText() throws IOException",
    "methodName" : "getText",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110117() throws Throwable {\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, true);\n    filteringParserDelegate0.getText();\n}",
    "testName" : "test110117"
  },
  "test07781" : {
    "methodSignature" : "public final boolean hasToken(JsonToken t)",
    "methodName" : "hasToken",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07781() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(readerBasedJsonParser0, readerBasedJsonParser0);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParserSequence0, tokenFilter0, false, false);\n    JsonToken jsonToken0 = JsonToken.VALUE_NULL;\n    boolean boolean0 = filteringParserDelegate0.hasToken(jsonToken0);\n}",
    "testName" : "test07781"
  },
  "test08592" : {
    "methodSignature" : "public double getValueAsDouble(double defaultValue) throws IOException",
    "methodName" : "getValueAsDouble",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08592() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, true);\n    double double0 = filteringParserDelegate0.getValueAsDouble((double) 0);\n}",
    "testName" : "test08592"
  },
  "test116123" : {
    "methodSignature" : "public JsonToken getCurrentToken()",
    "methodName" : "getCurrentToken",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test116123() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, pipedInputStream0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, (TokenFilter) null, false, false);\n    filteringParserDelegate0.getCurrentToken();\n}",
    "testName" : "test116123"
  },
  "test0022" : {
    "methodSignature" : "public boolean isExpectedStartObjectToken()",
    "methodName" : "isExpectedStartObjectToken",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0022() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, true);\n    filteringParserDelegate0._nextToken2();\n    boolean boolean0 = filteringParserDelegate0.isExpectedStartObjectToken();\n}",
    "testName" : "test0022"
  },
  "test04950" : {
    "methodSignature" : "public JsonLocation getTokenLocation()",
    "methodName" : "getTokenLocation",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04950() throws Throwable {\n    JsonParserDelegate jsonParserDelegate0 = new JsonParserDelegate((JsonParser) null);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParserDelegate0, tokenFilter0, true, true);\n    filteringParserDelegate0.getTokenLocation();\n}",
    "testName" : "test04950"
  },
  "test08996" : {
    "methodSignature" : "public short getShortValue() throws IOException",
    "methodName" : "getShortValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08996() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    byte[] byteArray0 = new byte[5];\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-1094), pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray0, 3, (byte) (-117), false);\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(uTF8StreamJsonParser0, tokenFilter0, true, true);\n    filteringParserDelegate0.getShortValue();\n}",
    "testName" : "test08996"
  },
  "test06971" : {
    "methodSignature" : "public final int getCurrentTokenId()",
    "methodName" : "getCurrentTokenId",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06971() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextToken();\n    filteringParserDelegate0.getCurrentTokenId();\n}",
    "testName" : "test06971"
  },
  "test01313" : {
    "methodSignature" : "public boolean getValueAsBoolean(boolean defaultValue) throws IOException",
    "methodName" : "getValueAsBoolean",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01313() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, true);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    boolean boolean0 = filteringParserDelegate0.getValueAsBoolean(true);\n}",
    "testName" : "test01313"
  },
  "test111118" : {
    "methodSignature" : "public long getValueAsLong() throws IOException",
    "methodName" : "getValueAsLong",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111118() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    long long0 = filteringParserDelegate0.getValueAsLong();\n}",
    "testName" : "test111118"
  },
  "test03738" : {
    "methodSignature" : "public JsonToken nextValue() throws IOException",
    "methodName" : "nextValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03738() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"#(\", false);\n    StringReader stringReader0 = new StringReader(\"#(\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n}",
    "testName" : "test03738"
  },
  "test04546" : {
    "methodSignature" : "public double getValueAsDouble(double defaultValue) throws IOException",
    "methodName" : "getValueAsDouble",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04546() throws Throwable {\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);\n    filteringParserDelegate0.getValueAsDouble(Double.NEGATIVE_INFINITY);\n}",
    "testName" : "test04546"
  },
  "test02526" : {
    "methodSignature" : "public float getFloatValue() throws IOException",
    "methodName" : "getFloatValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02526() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, true);\n    filteringParserDelegate0._nextToken2();\n    float float0 = filteringParserDelegate0.getFloatValue();\n}",
    "testName" : "test02526"
  },
  "test05758" : {
    "methodSignature" : "public Object getEmbeddedObject() throws IOException",
    "methodName" : "getEmbeddedObject",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05758() throws Throwable {\n    JsonParserDelegate jsonParserDelegate0 = new JsonParserDelegate((JsonParser) null);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParserDelegate0, tokenFilter0, true, false);\n    filteringParserDelegate0.getEmbeddedObject();\n}",
    "testName" : "test05758"
  },
  "test01717" : {
    "methodSignature" : "public int getTextLength() throws IOException",
    "methodName" : "getTextLength",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01717() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    int int0 = filteringParserDelegate0.getTextLength();\n}",
    "testName" : "test01717"
  },
  "test099106" : {
    "methodSignature" : "public int getLineNr()",
    "methodName" : "getLineNr",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099106() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, sequenceInputStream0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 605, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, (char[]) null, 605, 2044, false);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, false);\n    JsonLocation jsonLocation0 = filteringParserDelegate0.getTokenLocation();\n    jsonLocation0.getLineNr();\n}",
    "testName" : "test099106"
  },
  "test06162" : {
    "methodSignature" : "public byte getByteValue() throws IOException",
    "methodName" : "getByteValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06162() throws Throwable {\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);\n    filteringParserDelegate0.getByteValue();\n}",
    "testName" : "test06162"
  },
  "test08187" : {
    "methodSignature" : "public boolean hasCurrentToken()",
    "methodName" : "hasCurrentToken",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08187() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    boolean boolean0 = filteringParserDelegate0.hasCurrentToken();\n}",
    "testName" : "test08187"
  },
  "test100107" : {
    "methodSignature" : "public BigInteger getBigIntegerValue() throws IOException",
    "methodName" : "getBigIntegerValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100107() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, sequenceInputStream0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 605, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, (char[]) null, 605, 2044, false);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, false);\n    filteringParserDelegate0.getBigIntegerValue();\n}",
    "testName" : "test100107"
  },
  "test08186" : {
    "methodSignature" : "public final int getCurrentTokenId()",
    "methodName" : "getCurrentTokenId",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08186() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    boolean boolean0 = filteringParserDelegate0.hasCurrentToken();\n    filteringParserDelegate0.getCurrentTokenId();\n}",
    "testName" : "test08186"
  },
  "test0033" : {
    "methodSignature" : "public boolean isExpectedStartArrayToken()",
    "methodName" : "isExpectedStartArrayToken",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0033() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    boolean boolean0 = filteringParserDelegate0.isExpectedStartArrayToken();\n}",
    "testName" : "test0033"
  },
  "test113120" : {
    "methodSignature" : "public Object getEmbeddedObject() throws IOException",
    "methodName" : "getEmbeddedObject",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113120() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    Object object0 = filteringParserDelegate0.getEmbeddedObject();\n}",
    "testName" : "test113120"
  },
  "test06566" : {
    "methodSignature" : "protected final JsonToken _nextToken2() throws IOException",
    "methodName" : "_nextToken2",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06566() throws Throwable {\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);\n    filteringParserDelegate0._nextToken2();\n}",
    "testName" : "test06566"
  },
  "test03334" : {
    "methodSignature" : "public final int getCurrentTokenId()",
    "methodName" : "getCurrentTokenId",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03334() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    filteringParserDelegate0._filterContext();\n    filteringParserDelegate0.getCurrentTokenId();\n}",
    "testName" : "test03334"
  },
  "test04142" : {
    "methodSignature" : "public String getValueAsString() throws IOException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04142() throws Throwable {\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened((JsonParser) null, (JsonParser) null);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParserSequence0, tokenFilter0, false, false);\n    filteringParserDelegate0.getValueAsString();\n}",
    "testName" : "test04142"
  },
  "test07375" : {
    "methodSignature" : "public boolean hasCurrentToken()",
    "methodName" : "hasCurrentToken",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07375() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0._nextToken2();\n    filteringParserDelegate0._nextTokenWithBuffering((TokenFilterContext) null);\n    filteringParserDelegate0.hasCurrentToken();\n}",
    "testName" : "test07375"
  },
  "test05354" : {
    "methodSignature" : "public Number getNumberValue() throws IOException",
    "methodName" : "getNumberValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05354() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-2589), stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, false);\n    filteringParserDelegate0.getNumberValue();\n}",
    "testName" : "test05354"
  },
  "test02121" : {
    "methodSignature" : "public short getShortValue() throws IOException",
    "methodName" : "getShortValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02121() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    short short0 = filteringParserDelegate0.getShortValue();\n}",
    "testName" : "test02121"
  },
  "test105112" : {
    "methodSignature" : "public void overrideCurrentName(String name)",
    "methodName" : "overrideCurrentName",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105112() throws Throwable {\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, (TokenFilter) null, false, true);\n    filteringParserDelegate0.overrideCurrentName(\"M]O\");\n}",
    "testName" : "test105112"
  },
  "test096103" : {
    "methodSignature" : "public long getCharOffset()",
    "methodName" : "getCharOffset",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096103() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, sequenceInputStream0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 605, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, (char[]) null, 605, 2044, false);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, false);\n    JsonLocation jsonLocation0 = filteringParserDelegate0.getCurrentLocation();\n    jsonLocation0.getCharOffset();\n}",
    "testName" : "test096103"
  },
  "test08693" : {
    "methodSignature" : "public long getValueAsLong(long defaultValue) throws IOException",
    "methodName" : "getValueAsLong",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08693() throws Throwable {\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);\n    filteringParserDelegate0.getValueAsLong(0L);\n}",
    "testName" : "test08693"
  },
  "test0044" : {
    "methodSignature" : "public boolean hasTokenId(int id)",
    "methodName" : "hasTokenId",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0044() throws Throwable {\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, (TokenFilter) null, false, true);\n    boolean boolean0 = filteringParserDelegate0.hasTokenId(847);\n}",
    "testName" : "test0044"
  },
  "test114121" : {
    "methodSignature" : "public byte getByteValue() throws IOException",
    "methodName" : "getByteValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test114121() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(readerBasedJsonParser0, readerBasedJsonParser0);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParserSequence0, tokenFilter0, false, false);\n    filteringParserDelegate0.getByteValue();\n}",
    "testName" : "test114121"
  },
  "test120127" : {
    "methodSignature" : "public Number getNumberValue() throws IOException",
    "methodName" : "getNumberValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test120127() throws Throwable {\n    JsonParserDelegate jsonParserDelegate0 = new JsonParserDelegate((JsonParser) null);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParserDelegate0, tokenFilter0, true, true);\n    filteringParserDelegate0.getNumberValue();\n}",
    "testName" : "test120127"
  },
  "test07882" : {
    "methodSignature" : "public boolean hasTokenId(int id)",
    "methodName" : "hasTokenId",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07882() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, true);\n    boolean boolean0 = filteringParserDelegate0.hasTokenId(0);\n}",
    "testName" : "test07882"
  },
  "test05859" : {
    "methodSignature" : "public double getDoubleValue() throws IOException",
    "methodName" : "getDoubleValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05859() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, (Reader) null, (ObjectCodec) null, charsToNameCanonicalizer0, (char[]) null, 33, 2, true);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.getDoubleValue();\n}",
    "testName" : "test05859"
  },
  "test108115" : {
    "methodSignature" : "public boolean getValueAsBoolean(boolean defaultValue) throws IOException",
    "methodName" : "getValueAsBoolean",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108115() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    boolean boolean0 = filteringParserDelegate0.getValueAsBoolean(false);\n}",
    "testName" : "test108115"
  },
  "test02627" : {
    "methodSignature" : "public double getDoubleValue() throws IOException",
    "methodName" : "getDoubleValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02627() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, true);\n    filteringParserDelegate0._nextToken2();\n    double double0 = filteringParserDelegate0.getDoubleValue();\n}",
    "testName" : "test02627"
  },
  "test03435" : {
    "methodSignature" : "public final boolean inArray()",
    "methodName" : "inArray",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03435() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    JsonStreamContext jsonStreamContext0 = filteringParserDelegate0._filterContext();\n    jsonStreamContext0.inArray();\n}",
    "testName" : "test03435"
  },
  "test01414" : {
    "methodSignature" : "public boolean getValueAsBoolean() throws IOException",
    "methodName" : "getValueAsBoolean",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01414() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    boolean boolean0 = filteringParserDelegate0.getValueAsBoolean();\n}",
    "testName" : "test01414"
  },
  "test04647" : {
    "methodSignature" : "public double getValueAsDouble() throws IOException",
    "methodName" : "getValueAsDouble",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04647() throws Throwable {\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);\n    filteringParserDelegate0.getValueAsDouble();\n}",
    "testName" : "test04647"
  },
  "test03839" : {
    "methodSignature" : "public JsonToken nextToken() throws IOException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03839() throws Throwable {\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);\n    filteringParserDelegate0.nextToken();\n}",
    "testName" : "test03839"
  },
  "test093100" : {
    "methodSignature" : "public boolean getValueAsBoolean() throws IOException",
    "methodName" : "getValueAsBoolean",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093100() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, sequenceInputStream0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 605, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, (char[]) null, 605, 2044, false);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, false);\n    boolean boolean0 = filteringParserDelegate0.getValueAsBoolean();\n}",
    "testName" : "test093100"
  },
  "test01818" : {
    "methodSignature" : "public char[] getTextCharacters() throws IOException",
    "methodName" : "getTextCharacters",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01818() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    char[] charArray1 = filteringParserDelegate0.getTextCharacters();\n}",
    "testName" : "test01818"
  },
  "test05051" : {
    "methodSignature" : "public int getTextOffset() throws IOException",
    "methodName" : "getTextOffset",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05051() throws Throwable {\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);\n    filteringParserDelegate0.getTextOffset();\n}",
    "testName" : "test05051"
  },
  "test06263" : {
    "methodSignature" : "public boolean getBooleanValue() throws IOException",
    "methodName" : "getBooleanValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06263() throws Throwable {\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, (TokenFilter) null, false, true);\n    filteringParserDelegate0.getBooleanValue();\n}",
    "testName" : "test06263"
  },
  "test09097" : {
    "methodSignature" : "public int getTextLength() throws IOException",
    "methodName" : "getTextLength",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09097() throws Throwable {\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened((JsonParser) null, (JsonParser) null);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParserSequence0, tokenFilter0, true, true);\n    filteringParserDelegate0.getTextLength();\n}",
    "testName" : "test09097"
  },
  "test119126" : {
    "methodSignature" : "public String getValueAsString() throws IOException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119126() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    String string0 = filteringParserDelegate0.getValueAsString();\n}",
    "testName" : "test119126"
  },
  "test0055" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0055() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, (Reader) null, (ObjectCodec) null, charsToNameCanonicalizer0, (char[]) null, 33, 2, true);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.skipChildren();\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test0055"
  },
  "test07072" : {
    "methodSignature" : "public JsonToken nextToken() throws IOException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07072() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextToken();\n}",
    "testName" : "test07072"
  },
  "test05455" : {
    "methodSignature" : "public NumberType getNumberType() throws IOException",
    "methodName" : "getNumberType",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05455() throws Throwable {\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);\n    filteringParserDelegate0.getNumberType();\n}",
    "testName" : "test05455"
  },
  "test06667" : {
    "methodSignature" : "protected final JsonToken _nextToken2() throws IOException",
    "methodName" : "_nextToken2",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06667() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"|\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1996), stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, (-78), 55296, true);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, true);\n    filteringParserDelegate0._nextToken2();\n}",
    "testName" : "test06667"
  },
  "test02223" : {
    "methodSignature" : "public final int getEntryCount()",
    "methodName" : "getEntryCount",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02223() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, true);\n    filteringParserDelegate0._nextToken2();\n    JsonStreamContext jsonStreamContext0 = filteringParserDelegate0.getParsingContext();\n    jsonStreamContext0.getEntryCount();\n}",
    "testName" : "test02223"
  },
  "test02222" : {
    "methodSignature" : "public JsonStreamContext getParsingContext()",
    "methodName" : "getParsingContext",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02222() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, true);\n    filteringParserDelegate0._nextToken2();\n    JsonStreamContext jsonStreamContext0 = filteringParserDelegate0.getParsingContext();\n}",
    "testName" : "test02222"
  },
  "test03031" : {
    "methodSignature" : "public int getColumnNr()",
    "methodName" : "getColumnNr",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03031() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[1];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, (-3068), (-1235), false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, true);\n    JsonLocation jsonLocation0 = filteringParserDelegate0.getCurrentLocation();\n    jsonLocation0.getColumnNr();\n}",
    "testName" : "test03031"
  },
  "test07477" : {
    "methodSignature" : "public boolean hasCurrentToken()",
    "methodName" : "hasCurrentToken",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07477() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    filteringParserDelegate0.nextValue();\n    filteringParserDelegate0.hasCurrentToken();\n}",
    "testName" : "test07477"
  },
  "test08288" : {
    "methodSignature" : "public boolean hasCurrentToken()",
    "methodName" : "hasCurrentToken",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08288() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"': expected '\", false);\n    StringReader stringReader0 = new StringReader(\"Unexpected problem: chain of filtered context broken\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 32768, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, true);\n    boolean boolean0 = filteringParserDelegate0.hasCurrentToken();\n}",
    "testName" : "test08288"
  },
  "test01010" : {
    "methodSignature" : "public double getValueAsDouble(double defaultValue) throws IOException",
    "methodName" : "getValueAsDouble",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01010() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, sequenceInputStream0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 605, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, (char[]) null, 605, 2044, false);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, false);\n    double double0 = filteringParserDelegate0.getValueAsDouble((double) 2);\n}",
    "testName" : "test01010"
  },
  "test04243" : {
    "methodSignature" : "public long getValueAsLong() throws IOException",
    "methodName" : "getValueAsLong",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04243() throws Throwable {\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, (TokenFilter) null, true, true);\n    filteringParserDelegate0.getValueAsLong();\n}",
    "testName" : "test04243"
  },
  "test07476" : {
    "methodSignature" : "public boolean hasCurrentToken()",
    "methodName" : "hasCurrentToken",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07476() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    filteringParserDelegate0.hasCurrentToken();\n}",
    "testName" : "test07476"
  },
  "test03940" : {
    "methodSignature" : "public JsonToken nextToken() throws IOException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03940() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    TokenFilter tokenFilter0 = new TokenFilter();\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 12000, false);\n    JsonParserDelegate jsonParserDelegate0 = new JsonParserDelegate(readerBasedJsonParser0);\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParserDelegate0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextToken();\n}",
    "testName" : "test03940"
  },
  "test103110" : {
    "methodSignature" : "public int getValueAsInt(int defaultValue) throws IOException",
    "methodName" : "getValueAsInt",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103110() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(readerBasedJsonParser0, readerBasedJsonParser0);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParserSequence0, tokenFilter0, false, false);\n    int int0 = filteringParserDelegate0.getValueAsInt(3);\n}",
    "testName" : "test103110"
  },
  "test098105" : {
    "methodSignature" : "public double getValueAsDouble() throws IOException",
    "methodName" : "getValueAsDouble",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098105() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    double double0 = filteringParserDelegate0.getValueAsDouble();\n}",
    "testName" : "test098105"
  },
  "test101108" : {
    "methodSignature" : "public boolean getBooleanValue() throws IOException",
    "methodName" : "getBooleanValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101108() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, sequenceInputStream0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 605, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, (char[]) null, 605, 2044, false);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, false);\n    filteringParserDelegate0.getBooleanValue();\n}",
    "testName" : "test101108"
  },
  "test0066" : {
    "methodSignature" : "public boolean hasTextCharacters()",
    "methodName" : "hasTextCharacters",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0066() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(readerBasedJsonParser0, readerBasedJsonParser0);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParserSequence0, tokenFilter0, false, false);\n    boolean boolean0 = filteringParserDelegate0.hasTextCharacters();\n}",
    "testName" : "test0066"
  },
  "test05960" : {
    "methodSignature" : "public BigDecimal getDecimalValue() throws IOException",
    "methodName" : "getDecimalValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05960() throws Throwable {\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, false);\n    filteringParserDelegate0.getDecimalValue();\n}",
    "testName" : "test05960"
  },
  "test07983" : {
    "methodSignature" : "public boolean hasTokenId(int id)",
    "methodName" : "hasTokenId",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07983() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    boolean boolean0 = filteringParserDelegate0.hasTokenId((-3480));\n}",
    "testName" : "test07983"
  },
  "test08794" : {
    "methodSignature" : "public int getValueAsInt() throws IOException",
    "methodName" : "getValueAsInt",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08794() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(readerBasedJsonParser0, readerBasedJsonParser0);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParserSequence0, tokenFilter0, false, false);\n    int int0 = filteringParserDelegate0.getValueAsInt();\n}",
    "testName" : "test08794"
  },
  "test04748" : {
    "methodSignature" : "public boolean getValueAsBoolean(boolean defaultValue) throws IOException",
    "methodName" : "getValueAsBoolean",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04748() throws Throwable {\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);\n    filteringParserDelegate0.getValueAsBoolean(false);\n}",
    "testName" : "test04748"
  },
  "test02324" : {
    "methodSignature" : "public Number getNumberValue() throws IOException",
    "methodName" : "getNumberValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02324() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    Number number0 = filteringParserDelegate0.getNumberValue();\n}",
    "testName" : "test02324"
  },
  "test106113" : {
    "methodSignature" : "public int getIntValue() throws IOException",
    "methodName" : "getIntValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106113() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, sequenceInputStream0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 605, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, (char[]) null, 605, 2044, false);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, false);\n    filteringParserDelegate0.getIntValue();\n}",
    "testName" : "test106113"
  },
  "test06768" : {
    "methodSignature" : "protected final JsonToken _nextToken2() throws IOException",
    "methodName" : "_nextToken2",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06768() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    StringReader stringReader0 = new StringReader(\"|:,RxlnVjmas= \");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, true);\n    filteringParserDelegate0._nextToken2();\n}",
    "testName" : "test06768"
  },
  "test01515" : {
    "methodSignature" : "public long getByteOffset()",
    "methodName" : "getByteOffset",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01515() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    JsonLocation jsonLocation0 = filteringParserDelegate0.getTokenLocation();\n    jsonLocation0.getByteOffset();\n}",
    "testName" : "test01515"
  },
  "test03536" : {
    "methodSignature" : "public JsonToken nextValue() throws IOException",
    "methodName" : "nextValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03536() throws Throwable {\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);\n    filteringParserDelegate0.nextValue();\n}",
    "testName" : "test03536"
  },
  "test095102" : {
    "methodSignature" : "public char[] getTextCharacters() throws IOException",
    "methodName" : "getTextCharacters",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095102() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, sequenceInputStream0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 605, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, (char[]) null, 605, 2044, false);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, false);\n    char[] charArray0 = filteringParserDelegate0.getTextCharacters();\n}",
    "testName" : "test095102"
  },
  "test01919" : {
    "methodSignature" : "public String getText() throws IOException",
    "methodName" : "getText",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01919() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, sequenceInputStream0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 605, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, (char[]) null, 605, 2044, false);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, false);\n    String string0 = filteringParserDelegate0.getText();\n}",
    "testName" : "test01919"
  },
  "test07173" : {
    "methodSignature" : "protected final JsonToken _nextTokenWithBuffering(final TokenFilterContext buffRoot) throws IOException",
    "methodName" : "_nextTokenWithBuffering",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07173() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0._nextTokenWithBuffering((TokenFilterContext) null);\n}",
    "testName" : "test07173"
  },
  "test05152" : {
    "methodSignature" : "public char[] getTextCharacters() throws IOException",
    "methodName" : "getTextCharacters",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05152() throws Throwable {\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, true);\n    filteringParserDelegate0.getTextCharacters();\n}",
    "testName" : "test05152"
  },
  "test09198" : {
    "methodSignature" : "public int readBinaryValue(OutputStream out) throws IOException",
    "methodName" : "readBinaryValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09198() throws Throwable {\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);\n    filteringParserDelegate0.readBinaryValue((OutputStream) byteArrayBuilder0);\n}",
    "testName" : "test09198"
  },
  "test117124" : {
    "methodSignature" : "public String getValueAsString(String defaultValue) throws IOException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test117124() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    char[] charArray0 = new char[3];\n    TokenFilter tokenFilter0 = new TokenFilter();\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 12000, false);\n    JsonParserDelegate jsonParserDelegate0 = new JsonParserDelegate(readerBasedJsonParser0);\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParserDelegate0, tokenFilter0, false, false);\n    String string0 = filteringParserDelegate0.getValueAsString(\"7o%ASk\");\n}",
    "testName" : "test117124"
  },
  "test0077" : {
    "methodSignature" : "public String getValueAsString() throws IOException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0077() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    String string0 = filteringParserDelegate0.getValueAsString();\n}",
    "testName" : "test0077"
  },
  "test07578" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07578() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(readerBasedJsonParser0, readerBasedJsonParser0);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParserSequence0, tokenFilter0, false, false);\n    filteringParserDelegate0.clearCurrentToken();\n    filteringParserDelegate0.getFormatFeatures();\n}",
    "testName" : "test07578"
  },
  "test04344" : {
    "methodSignature" : "public int getValueAsInt(int defaultValue) throws IOException",
    "methodName" : "getValueAsInt",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04344() throws Throwable {\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, true, true);\n    filteringParserDelegate0.getValueAsInt((-155));\n}",
    "testName" : "test04344"
  },
  "test05556" : {
    "methodSignature" : "public int getIntValue() throws IOException",
    "methodName" : "getIntValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05556() throws Throwable {\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);\n    filteringParserDelegate0.getIntValue();\n}",
    "testName" : "test05556"
  },
  "test06364" : {
    "methodSignature" : "public BigInteger getBigIntegerValue() throws IOException",
    "methodName" : "getBigIntegerValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06364() throws Throwable {\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, true);\n    filteringParserDelegate0.getBigIntegerValue();\n}",
    "testName" : "test06364"
  },
  "test08389" : {
    "methodSignature" : "public final int getCurrentTokenId()",
    "methodName" : "getCurrentTokenId",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08389() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(readerBasedJsonParser0, readerBasedJsonParser0);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParserSequence0, tokenFilter0, false, false);\n    int int0 = filteringParserDelegate0.getCurrentTokenId();\n}",
    "testName" : "test08389"
  },
  "test01111" : {
    "methodSignature" : "public double getValueAsDouble(double defaultValue) throws IOException",
    "methodName" : "getValueAsDouble",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01111() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"': expected '\", false);\n    StringReader stringReader0 = new StringReader(\"Unexpected problem: chain of filtered context broken\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 32768, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, true);\n    double double0 = filteringParserDelegate0.getValueAsDouble((double) (byte) (-1));\n}",
    "testName" : "test01111"
  },
  "test03132" : {
    "methodSignature" : "public byte getByteValue() throws IOException",
    "methodName" : "getByteValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03132() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    charArray0[2] = '7';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 3, false);\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, false, false);\n    filteringParserDelegate0.nextValue();\n    byte byte0 = filteringParserDelegate0.getByteValue();\n}",
    "testName" : "test03132"
  },
  "test112119" : {
    "methodSignature" : "public final boolean inArray()",
    "methodName" : "inArray",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112119() throws Throwable {\n    TokenFilter tokenFilter0 = new TokenFilter();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, true);\n    JsonStreamContext jsonStreamContext0 = filteringParserDelegate0.getParsingContext();\n    jsonStreamContext0.inArray();\n}",
    "testName" : "test112119"
  },
  "test109116" : {
    "methodSignature" : "public BigDecimal getDecimalValue() throws IOException",
    "methodName" : "getDecimalValue",
    "className" : "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109116() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, sequenceInputStream0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 605, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, (char[]) null, 605, 2044, false);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter0, true, false);\n    filteringParserDelegate0.getDecimalValue();\n}",
    "testName" : "test109116"
  }
}