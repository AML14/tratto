{
  "test1212" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2125, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextTextValue();\n    readerBasedJsonParser0.getInputSource();\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test1212"
  },
  "test5656" : {
    "methodSignature" : "protected void _finishString() throws IOException",
    "methodName" : "_finishString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5656() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"^4?cg'r[S.j2Nq\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._decodeEscaped();\n    readerBasedJsonParser0._finishString();\n}",
    "testName" : "test5656"
  },
  "test2424" : {
    "methodSignature" : "protected char getNextChar(String eofMsg) throws IOException, JsonParseException",
    "methodName" : "getNextChar",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"VR(-V!p`-L^+z4`+}#v\", false);\n    StringReader stringReader0 = new StringReader(\"VR(-V!p`-L^+z4`+}#v\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    stringReader0.close();\n    readerBasedJsonParser0.getNextChar(\"uUW7Cq]lCp-\");\n}",
    "testName" : "test2424"
  },
  "test4444" : {
    "methodSignature" : "protected byte[] _decodeBase64(Base64Variant b64variant) throws IOException",
    "methodName" : "_decodeBase64",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4444() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"=Bo9qZ`J}ywF\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 73, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._decodeBase64((Base64Variant) null);\n}",
    "testName" : "test4444"
  },
  "test7679" : {
    "methodSignature" : "public JsonToken nextToken() throws IOException, JsonParseException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7679() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"|\", false);\n    StringReader stringReader0 = new StringReader(\"nz>U&\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1884, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextToken();\n}",
    "testName" : "test7679"
  },
  "test3232" : {
    "methodSignature" : "protected String _handleOddName(int i) throws IOException",
    "methodName" : "_handleOddName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"5F+:E_0INvqf81dB;\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-2099), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._handleOddName((-2099));\n}",
    "testName" : "test3232"
  },
  "test077" : {
    "methodSignature" : "protected abstract boolean loadMore() throws IOException",
    "methodName" : "loadMore",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1104, (Reader) null, objectCodec0, charsToNameCanonicalizer0);\n    boolean boolean0 = readerBasedJsonParser0.loadMore();\n}",
    "testName" : "test077"
  },
  "test1616" : {
    "methodSignature" : "public JsonToken nextToken() throws IOException, JsonParseException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"NaN\", true);\n    StringReader stringReader0 = new StringReader(\"4Z6yB)PM{?>1Dj:\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._releaseBuffers();\n    readerBasedJsonParser0.nextToken();\n}",
    "testName" : "test1616"
  },
  "test2828" : {
    "methodSignature" : "protected JsonToken _parseNumber(int ch) throws IOException",
    "methodName" : "_parseNumber",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextIntValue(593);\n    readerBasedJsonParser0._parseNumber(660);\n}",
    "testName" : "test2828"
  },
  "test4848" : {
    "methodSignature" : "public long nextLongValue(long defaultValue) throws IOException, JsonParseException",
    "methodName" : "nextLongValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4848() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    BufferRecycler.CharBufferType bufferRecycler_CharBufferType0 = BufferRecycler.CharBufferType.CONCAT_BUFFER;\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler_CharBufferType0, false);\n    StringReader stringReader0 = new StringReader(\"/\");\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2122, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextLongValue((-1408L));\n}",
    "testName" : "test4848"
  },
  "test3636" : {
    "methodSignature" : "protected char _decodeEscaped() throws IOException",
    "methodName" : "_decodeEscaped",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3636() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"^4?cg'r[S.j2Nq\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._releaseBuffers();\n    readerBasedJsonParser0._decodeEscaped();\n}",
    "testName" : "test3636"
  },
  "test9296" : {
    "methodSignature" : "protected char getNextChar(String eofMsg) throws IOException, JsonParseException",
    "methodName" : "getNextChar",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test9296() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-967), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.getNextChar(\"TLK .xCO$m\");\n}",
    "testName" : "test9296"
  },
  "test96102" : {
    "methodSignature" : "public int releaseBuffered(Writer w) throws IOException",
    "methodName" : "releaseBuffered",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test96102() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"^4?cg'r[S.j2Nq\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._decodeEscaped();\n    StringWriter stringWriter0 = new StringWriter((byte) 92);\n    int int0 = readerBasedJsonParser0.releaseBuffered((Writer) stringWriter0);\n}",
    "testName" : "test96102"
  },
  "test6061" : {
    "methodSignature" : "public Boolean nextBooleanValue() throws IOException, JsonParseException",
    "methodName" : "nextBooleanValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6061() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \":Uhxdjbv\", true);\n    StringReader stringReader0 = new StringReader(\":Uhxdjbv\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    stringReader0.read();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextBooleanValue();\n}",
    "testName" : "test6061"
  },
  "test8084" : {
    "methodSignature" : "public String nextTextValue() throws IOException, JsonParseException",
    "methodName" : "nextTextValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8084() throws Throwable {\n    StringReader stringReader0 = new StringReader(\"0e\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, objectCodec0, true);\n    ObjectCodec objectCodec1 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 58, stringReader0, objectCodec1, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextTextValue();\n}",
    "testName" : "test8084"
  },
  "test6465" : {
    "methodSignature" : "protected String _handleOddName(int i) throws IOException",
    "methodName" : "_handleOddName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6465() throws Throwable {\n    FileSystemHandling fileSystemHandling0 = new FileSystemHandling();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, fileSystemHandling0, false);\n    StringReader stringReader0 = new StringReader(\"FgC\\u0005Av:t|iJJRE*~@\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 8, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._handleOddName(50);\n}",
    "testName" : "test6465"
  },
  "test8488" : {
    "methodSignature" : "public char[] getTextCharacters() throws IOException, JsonParseException",
    "methodName" : "getTextCharacters",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8488() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"BPH+jQOno],+t:3\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    char[] charArray0 = readerBasedJsonParser0.getTextCharacters();\n}",
    "testName" : "test8488"
  },
  "test5252" : {
    "methodSignature" : "protected char _decodeEscaped() throws IOException",
    "methodName" : "_decodeEscaped",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5252() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Object object0 = new Object();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);\n    StringReader stringReader0 = new StringReader(\"com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._skipCR();\n    char char0 = readerBasedJsonParser0._decodeEscaped();\n}",
    "testName" : "test5252"
  },
  "test2020" : {
    "methodSignature" : "public Boolean nextBooleanValue() throws IOException, JsonParseException",
    "methodName" : "nextBooleanValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1104, (Reader) null, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextBooleanValue();\n}",
    "testName" : "test2020"
  },
  "test4040" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4040() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, Integer.MAX_VALUE, (Reader) null, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextToken();\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test4040"
  },
  "test7274" : {
    "methodSignature" : "public String nextTextValue() throws IOException, JsonParseException",
    "methodName" : "nextTextValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7274() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"+WbrY,WVp0pa,'b\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2125, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextTextValue();\n}",
    "testName" : "test7274"
  },
  "test066" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"Failed to decode VALUE_STRING as bas,64 (\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(2000);\n    CharBuffer charBuffer0 = byteBuffer0.asCharBuffer();\n    stringReader0.read(charBuffer0);\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-2848), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextLongValue(0L);\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test066"
  },
  "test6870" : {
    "methodSignature" : "protected String _handleOddName(int i) throws IOException",
    "methodName" : "_handleOddName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6870() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 85, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._handleOddName(39);\n}",
    "testName" : "test6870"
  },
  "test8892" : {
    "methodSignature" : "protected String _getText2(JsonToken t)",
    "methodName" : "_getText2",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8892() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"l9\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    JsonToken jsonToken0 = JsonToken.START_ARRAY;\n    String string0 = readerBasedJsonParser0._getText2(jsonToken0);\n}",
    "testName" : "test8892"
  },
  "test2323" : {
    "methodSignature" : "protected char getNextChar(String eofMsg) throws IOException, JsonParseException",
    "methodName" : "getNextChar",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"i8z2/__\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 296, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._releaseBuffers();\n    readerBasedJsonParser0.getNextChar(\"i8z2/__\");\n}",
    "testName" : "test2323"
  },
  "test6769" : {
    "methodSignature" : "protected String _handleOddName(int i) throws IOException",
    "methodName" : "_handleOddName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6769() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\") not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 126, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    String string0 = readerBasedJsonParser0._handleOddName(2000);\n}",
    "testName" : "test6769"
  },
  "test3535" : {
    "methodSignature" : "protected void _finishString2() throws IOException",
    "methodName" : "_finishString2",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"VR(-V!p`-L^+z4`+}#v\", false);\n    StringReader stringReader0 = new StringReader(\"VR(-V!p`-L^+z4`+}#v\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._finishString2();\n}",
    "testName" : "test3535"
  },
  "test5555" : {
    "methodSignature" : "protected void _finishString() throws IOException",
    "methodName" : "_finishString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5555() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"i8z2/__\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 296, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._finishString();\n}",
    "testName" : "test5555"
  },
  "test1111" : {
    "methodSignature" : "protected char getNextChar(String eofMsg) throws IOException, JsonParseException",
    "methodName" : "getNextChar",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    StringReader stringReader0 = new StringReader(\"0ew#\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, objectCodec0, true);\n    ObjectCodec objectCodec1 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 58, stringReader0, objectCodec1, charsToNameCanonicalizer0);\n    char char0 = readerBasedJsonParser0.getNextChar(\"0ew#\");\n}",
    "testName" : "test1111"
  },
  "test4343" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4343() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"O\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._reportInvalidToken(\"\");\n}",
    "testName" : "test4343"
  },
  "test7578" : {
    "methodSignature" : "public long nextLongValue(long defaultValue) throws IOException, JsonParseException",
    "methodName" : "nextLongValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7578() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    long long0 = readerBasedJsonParser0.nextLongValue(33);\n}",
    "testName" : "test7578"
  },
  "test7577" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7577() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    long long0 = readerBasedJsonParser0.nextLongValue(33);\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test7577"
  },
  "test011" : {
    "methodSignature" : "protected void _skipString() throws IOException",
    "methodName" : "_skipString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"': was expecting \");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._skipString();\n}",
    "testName" : "test011"
  },
  "test099" : {
    "methodSignature" : "public String getValueAsString(String defValue) throws IOException, JsonParseException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    String string0 = readerBasedJsonParser0.getValueAsString(\"\");\n}",
    "testName" : "test099"
  },
  "test2727" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart, String msg) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    StringReader stringReader0 = new StringReader(\"$h$\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 102, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._reportInvalidToken(\"_Idvf k\", \"$h$\");\n}",
    "testName" : "test2727"
  },
  "test1515" : {
    "methodSignature" : "protected char _decodeEscaped() throws IOException",
    "methodName" : "_decodeEscaped",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"^4?cg'r[S.j2Nq\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._decodeEscaped();\n    char char0 = readerBasedJsonParser0._decodeEscaped();\n}",
    "testName" : "test1515"
  },
  "test4747" : {
    "methodSignature" : "protected char _decodeEscaped() throws IOException",
    "methodName" : "_decodeEscaped",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4747() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._decodeEscaped();\n}",
    "testName" : "test4747"
  },
  "test98104" : {
    "methodSignature" : "public Object getInputSource()",
    "methodName" : "getInputSource",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test98104() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"i8z2/__\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 296, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    Object object0 = readerBasedJsonParser0.getInputSource();\n}",
    "testName" : "test98104"
  },
  "test3131" : {
    "methodSignature" : "protected void _matchToken(String matchStr, int i) throws IOException",
    "methodName" : "_matchToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"Infinity\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._matchToken((String) null, 2000);\n}",
    "testName" : "test3131"
  },
  "test6364" : {
    "methodSignature" : "public long nextLongValue(long defaultValue) throws IOException, JsonParseException",
    "methodName" : "nextLongValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6364() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"': was expecting \");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextLongValue(33);\n}",
    "testName" : "test6364"
  },
  "test8387" : {
    "methodSignature" : "public int getTextLength() throws IOException, JsonParseException",
    "methodName" : "getTextLength",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8387() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0.DEFAULT_WRITE_CONCAT_BUFFER_LEN, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 134, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    int int0 = readerBasedJsonParser0.getTextLength();\n}",
    "testName" : "test8387"
  },
  "test5151" : {
    "methodSignature" : "public long getTokenCharacterOffset()",
    "methodName" : "getTokenCharacterOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5151() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, (Reader) null, (ObjectCodec) null, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._skipCR();\n    readerBasedJsonParser0.getTokenCharacterOffset();\n}",
    "testName" : "test5151"
  },
  "test9195" : {
    "methodSignature" : "public String getText() throws IOException, JsonParseException",
    "methodName" : "getText",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test9195() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"VR(-V!p`-L^+z4`+}#v\", false);\n    StringReader stringReader0 = new StringReader(\"VR(-V!p`-L^+z4`+}#v\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    String string0 = readerBasedJsonParser0.getText();\n}",
    "testName" : "test9195"
  },
  "test7173" : {
    "methodSignature" : "protected String _parseName(int i) throws IOException",
    "methodName" : "_parseName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7173() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"5F+:E_0INvqf81dB;\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 127, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._parseName((-2411));\n}",
    "testName" : "test7173"
  },
  "test5960" : {
    "methodSignature" : "protected JsonToken _handleApos() throws IOException",
    "methodName" : "_handleApos",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5960() throws Throwable {\n    FileSystemHandling fileSystemHandling0 = new FileSystemHandling();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, fileSystemHandling0, false);\n    StringReader stringReader0 = new StringReader(\"FgC\\u0005Av:t|iJJRE*~@\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 8, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._handleApos();\n}",
    "testName" : "test5960"
  },
  "test000" : {
    "methodSignature" : "protected JsonToken _handleOddValue(int i) throws IOException",
    "methodName" : "_handleOddValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"Illegal character (code 0x\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 73, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._handleOddValue(73);\n}",
    "testName" : "test000"
  },
  "test088" : {
    "methodSignature" : "public String getValueAsString(String defValue) throws IOException, JsonParseException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"l9\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    String string0 = readerBasedJsonParser0.getValueAsString((String) null);\n}",
    "testName" : "test088"
  },
  "test95100" : {
    "methodSignature" : "public int releaseBuffered(Writer w) throws IOException",
    "methodName" : "releaseBuffered",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test95100() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Object object0 = new Object();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, object0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    StringWriter stringWriter0 = new StringWriter(2000);\n    int int0 = readerBasedJsonParser0.releaseBuffered((Writer) stringWriter0);\n}",
    "testName" : "test95100"
  },
  "test1919" : {
    "methodSignature" : "public int nextIntValue(int defaultValue) throws IOException, JsonParseException",
    "methodName" : "nextIntValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"g(nZ&kh(h0-QI=\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextIntValue(9);\n}",
    "testName" : "test1919"
  },
  "test7983" : {
    "methodSignature" : "public String nextTextValue() throws IOException, JsonParseException",
    "methodName" : "nextTextValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7983() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"i\", false);\n    StringReader stringReader0 = new StringReader(\"](-`)=,c{yd!\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 841, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextTextValue();\n}",
    "testName" : "test7983"
  },
  "test8791" : {
    "methodSignature" : "protected String _getText2(JsonToken t)",
    "methodName" : "_getText2",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8791() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0.DEFAULT_WRITE_CONCAT_BUFFER_LEN, true);\n    StringReader stringReader0 = new StringReader(\"*c;zq<Fj8JUO)\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    JsonToken jsonToken0 = JsonToken.FIELD_NAME;\n    String string0 = readerBasedJsonParser0._getText2(jsonToken0);\n}",
    "testName" : "test8791"
  },
  "test4646" : {
    "methodSignature" : "protected void _matchToken(String matchStr, int i) throws IOException",
    "methodName" : "_matchToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4646() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Object object0 = new Object();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);\n    StringReader stringReader0 = new StringReader(\"km,-HymY7xiqJagA7\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 774, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._matchToken(\"km,-HymY7xiqJagA7\", 11);\n}",
    "testName" : "test4646"
  },
  "test3434" : {
    "methodSignature" : "protected JsonToken _handleInvalidNumberStart(int ch, boolean negative) throws IOException",
    "methodName" : "_handleInvalidNumberStart",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"FLOAT\", false);\n    StringReader stringReader0 = new StringReader(\"{EuF,\");\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._handleInvalidNumberStart(43, true);\n}",
    "testName" : "test3434"
  },
  "test6668" : {
    "methodSignature" : "protected String _handleOddName(int i) throws IOException",
    "methodName" : "_handleOddName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6668() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"): only regular white space (\\r, \\n, \\t) is allowed between tokens\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-918), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._handleOddName(4);\n}",
    "testName" : "test6668"
  },
  "test1010" : {
    "methodSignature" : "protected char getNextChar(String eofMsg) throws IOException, JsonParseException",
    "methodName" : "getNextChar",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\" zZBACc*\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-2600), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    char char0 = readerBasedJsonParser0.getNextChar(\" zZBACc*\");\n}",
    "testName" : "test1010"
  },
  "test5454" : {
    "methodSignature" : "public long getTokenCharacterOffset()",
    "methodName" : "getTokenCharacterOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5454() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"maybe a (non-standard) comment? (not recognized as one since Feature 'A\\\"LOW_COMMENTS' not enabled for parser)\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-2105), stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._finishString();\n    readerBasedJsonParser0.getTokenCharacterOffset();\n}",
    "testName" : "test5454"
  },
  "test2222" : {
    "methodSignature" : "protected abstract boolean loadMore() throws IOException",
    "methodName" : "loadMore",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"m/Fby#QZC/nFa.Hvj_\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    stringReader0.close();\n    readerBasedJsonParser0.loadMore();\n}",
    "testName" : "test2222"
  },
  "test033" : {
    "methodSignature" : "protected String _parseAposName() throws IOException",
    "methodName" : "_parseAposName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"M%>[y:*%H\", false);\n    StringReader stringReader0 = new StringReader(\"M%>[y:*%H\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._parseAposName();\n}",
    "testName" : "test033"
  },
  "test1414" : {
    "methodSignature" : "protected String _parseAposName() throws IOException",
    "methodName" : "_parseAposName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"Non-standard token 'NaN': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 126, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    String string0 = readerBasedJsonParser0._parseAposName();\n}",
    "testName" : "test1414"
  },
  "test2626" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart, String msg) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"rt?jlWqx_x_~\", true);\n    StringReader stringReader0 = new StringReader(\"rt?jlWqx_x_~\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._reportInvalidToken((String) null, \"rt?jlWqx_x_~\");\n}",
    "testName" : "test2626"
  },
  "test5859" : {
    "methodSignature" : "protected JsonToken _handleApos() throws IOException",
    "methodName" : "_handleApos",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5859() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"^4?cg'r[S.j2Nq\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    JsonToken jsonToken0 = readerBasedJsonParser0._handleApos();\n}",
    "testName" : "test5859"
  },
  "test7072" : {
    "methodSignature" : "protected String _parseAposName() throws IOException",
    "methodName" : "_parseAposName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7072() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"'~-9&2qjj)vGY\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 126, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    String string0 = readerBasedJsonParser0._parseAposName();\n}",
    "testName" : "test7072"
  },
  "test9498" : {
    "methodSignature" : "protected abstract boolean loadMore() throws IOException",
    "methodName" : "loadMore",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test9498() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"TU<]{!@.9<s7G\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    boolean boolean0 = readerBasedJsonParser0.loadMore();\n}",
    "testName" : "test9498"
  },
  "test9499" : {
    "methodSignature" : "protected char getNextChar(String eofMsg) throws IOException, JsonParseException",
    "methodName" : "getNextChar",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test9499() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"TU<]{!@.9<s7G\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    boolean boolean0 = readerBasedJsonParser0.loadMore();\n    char char0 = readerBasedJsonParser0.getNextChar(\"j^6[mJ*#^:MF/I*<Irb\");\n}",
    "testName" : "test9499"
  },
  "test4242" : {
    "methodSignature" : "public boolean hasCurrentToken()",
    "methodName" : "hasCurrentToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4242() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Object object0 = new Object();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, object0, false);\n    StringReader stringReader0 = new StringReader(\"WRITE_CONCAT_BUFFER\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.close();\n    readerBasedJsonParser0.hasCurrentToken();\n}",
    "testName" : "test4242"
  },
  "test3030" : {
    "methodSignature" : "protected String _parseAposName() throws IOException",
    "methodName" : "_parseAposName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"+brY,WVp0pa,'b\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2125, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._releaseBuffers();\n    readerBasedJsonParser0._parseAposName();\n}",
    "testName" : "test3030"
  },
  "test7476" : {
    "methodSignature" : "protected JsonToken _parseNumber(int ch) throws IOException",
    "methodName" : "_parseNumber",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7476() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._parseNumber(660);\n}",
    "testName" : "test7476"
  },
  "test9094" : {
    "methodSignature" : "public String getValueAsString() throws IOException, JsonParseException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test9094() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"+brY,WVp0pa,'b\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2125, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    String string0 = readerBasedJsonParser0.getValueAsString();\n}",
    "testName" : "test9094"
  },
  "test6263" : {
    "methodSignature" : "public Boolean nextBooleanValue() throws IOException, JsonParseException",
    "methodName" : "nextBooleanValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6263() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"Invalid input: JSON Pointer expression must start with '/': \\\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 300, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextBooleanValue();\n}",
    "testName" : "test6263"
  },
  "test8286" : {
    "methodSignature" : "public int getTextOffset() throws IOException, JsonParseException",
    "methodName" : "getTextOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8286() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \":Uhxdjbv\", false);\n    StringReader stringReader0 = new StringReader(\":Uhxdjbv\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    int int0 = readerBasedJsonParser0.getTextOffset();\n}",
    "testName" : "test8286"
  },
  "test5050" : {
    "methodSignature" : "public String nextTextValue() throws IOException, JsonParseException",
    "methodName" : "nextTextValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5050() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    StringReader stringReader0 = new StringReader(\"/\");\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 33, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextTextValue();\n}",
    "testName" : "test5050"
  },
  "test022" : {
    "methodSignature" : "protected JsonToken _handleApos() throws IOException",
    "methodName" : "_handleApos",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"VR(-V!p`-L^+z4`+}#v\", false);\n    StringReader stringReader0 = new StringReader(\"VR(-V!p`-L^+z4`+}#v\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._handleApos();\n}",
    "testName" : "test022"
  },
  "test8690" : {
    "methodSignature" : "protected String _getText2(JsonToken t)",
    "methodName" : "_getText2",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8690() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    JsonToken jsonToken0 = JsonToken.VALUE_STRING;\n    String string0 = readerBasedJsonParser0._getText2(jsonToken0);\n}",
    "testName" : "test8690"
  },
  "test97103" : {
    "methodSignature" : "public boolean hasCurrentToken()",
    "methodName" : "hasCurrentToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test97103() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"i8z2/__\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 296, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    ObjectCodec objectCodec1 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    readerBasedJsonParser0.setCodec(objectCodec1);\n    readerBasedJsonParser0.hasCurrentToken();\n}",
    "testName" : "test97103"
  },
  "test1818" : {
    "methodSignature" : "public int nextIntValue(int defaultValue) throws IOException, JsonParseException",
    "methodName" : "nextIntValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"com.fasterxml.jackson.core.TreeCodec\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._releaseBuffers();\n    readerBasedJsonParser0.nextIntValue((-1659));\n}",
    "testName" : "test1818"
  },
  "test7882" : {
    "methodSignature" : "public int nextIntValue(int defaultValue) throws IOException, JsonParseException",
    "methodName" : "nextIntValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7882() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"1Gu@F/3z&}v\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    int int0 = readerBasedJsonParser0.nextIntValue(8);\n}",
    "testName" : "test7882"
  },
  "test7881" : {
    "methodSignature" : "public boolean hasCurrentToken()",
    "methodName" : "hasCurrentToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7881() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"1Gu@F/3z&}v\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    int int0 = readerBasedJsonParser0.nextIntValue(8);\n    readerBasedJsonParser0.hasCurrentToken();\n}",
    "testName" : "test7881"
  },
  "test5757" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5757() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"HE\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 127, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    String string0 = readerBasedJsonParser0._handleOddName(127);\n    charsToNameCanonicalizer0.size();\n}",
    "testName" : "test5757"
  },
  "test5758" : {
    "methodSignature" : "protected String _handleOddName(int i) throws IOException",
    "methodName" : "_handleOddName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5758() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"HE\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 127, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    String string0 = readerBasedJsonParser0._handleOddName(127);\n}",
    "testName" : "test5758"
  },
  "test1313" : {
    "methodSignature" : "public boolean isNumeric()",
    "methodName" : "isNumeric",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"VR(-V!p`-L^+z4`+}#v\", false);\n    StringReader stringReader0 = new StringReader(\"VR(-V!p`-L^+z4`+}#v\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.getNextChar(\"uUW7Cq]lCp-\");\n    JsonToken jsonToken0 = readerBasedJsonParser0._parseNumber(33);\n    jsonToken0.isNumeric();\n}",
    "testName" : "test1313"
  },
  "test4545" : {
    "methodSignature" : "protected void _matchToken(String matchStr, int i) throws IOException",
    "methodName" : "_matchToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4545() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \": was expecting closing '\", false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-140), (Reader) null, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._matchToken(\"vu\", 10);\n}",
    "testName" : "test4545"
  },
  "test2121" : {
    "methodSignature" : "protected abstract boolean loadMore() throws IOException",
    "methodName" : "loadMore",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \":Uhxdjbv\", false);\n    StringReader stringReader0 = new StringReader(\":Uhxdjbv\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._releaseBuffers();\n    readerBasedJsonParser0.loadMore();\n}",
    "testName" : "test2121"
  },
  "test6567" : {
    "methodSignature" : "protected String _handleOddName(int i) throws IOException",
    "methodName" : "_handleOddName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6567() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"5F+:E_0INvqf81dB;\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 127, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    String string0 = readerBasedJsonParser0._handleOddName(127);\n}",
    "testName" : "test6567"
  },
  "test6566" : {
    "methodSignature" : "public boolean maybeDirty()",
    "methodName" : "maybeDirty",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6566() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"5F+:E_0INvqf81dB;\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 127, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    String string0 = readerBasedJsonParser0._handleOddName(127);\n    charsToNameCanonicalizer0.maybeDirty();\n}",
    "testName" : "test6566"
  },
  "test3333" : {
    "methodSignature" : "protected String _handleOddName(int i) throws IOException",
    "methodName" : "_handleOddName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"5F+:E_0INvqf81dB;\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    stringReader0.close();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 127, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._handleOddName(127);\n}",
    "testName" : "test3333"
  },
  "test8589" : {
    "methodSignature" : "protected String _getText2(JsonToken t)",
    "methodName" : "_getText2",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8589() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0.DEFAULT_WRITE_CONCAT_BUFFER_LEN, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 134, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_FLOAT;\n    String string0 = readerBasedJsonParser0._getText2(jsonToken0);\n}",
    "testName" : "test8589"
  },
  "test055" : {
    "methodSignature" : "public String getCurrentName() throws IOException, JsonParseException",
    "methodName" : "getCurrentName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"OBJECT\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._closeInput();\n    readerBasedJsonParser0.getCurrentName();\n}",
    "testName" : "test055"
  },
  "test1717" : {
    "methodSignature" : "public long nextLongValue(long defaultValue) throws IOException, JsonParseException",
    "methodName" : "nextLongValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"': was expecting \");\n    stringReader0.close();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextLongValue(33);\n}",
    "testName" : "test1717"
  },
  "test4949" : {
    "methodSignature" : "public String nextTextValue() throws IOException, JsonParseException",
    "methodName" : "nextTextValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4949() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\" #L[{\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextTextValue();\n}",
    "testName" : "test4949"
  },
  "test2525" : {
    "methodSignature" : "protected void _skipString() throws IOException",
    "methodName" : "_skipString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"i8z2/__\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 296, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._releaseBuffers();\n    readerBasedJsonParser0._skipString();\n}",
    "testName" : "test2525"
  },
  "test3737" : {
    "methodSignature" : "protected char _decodeEscaped() throws IOException",
    "methodName" : "_decodeEscaped",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3737() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"BPH+jQOno],+t:3\");\n    stringReader0.close();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._decodeEscaped();\n}",
    "testName" : "test3737"
  },
  "test9397" : {
    "methodSignature" : "public boolean hasTextCharacters()",
    "methodName" : "hasTextCharacters",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test9397() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"VR(-V!p`-L^+z4`+}#v\", false);\n    StringReader stringReader0 = new StringReader(\"VR(-V!p`-L^+z4`+}#v\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.getNextChar(\"uUW7Cq]lCp-\");\n    readerBasedJsonParser0._skipCR();\n    readerBasedJsonParser0.hasTextCharacters();\n}",
    "testName" : "test9397"
  },
  "test5353" : {
    "methodSignature" : "protected void _skipString() throws IOException",
    "methodName" : "_skipString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5353() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"VR(-V!p`-L^+z4`+}#v\", false);\n    StringReader stringReader0 = new StringReader(\"VR(-V!p`-L^+z4`+}#v\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._skipString();\n}",
    "testName" : "test5353"
  },
  "test4141" : {
    "methodSignature" : "public ObjectCodec getCodec()",
    "methodName" : "getCodec",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4141() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"Non-standard token 'NaN': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    doReturn((String) null).when(objectCodec0).toString();\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 126, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    ObjectCodec objectCodec1 = readerBasedJsonParser0.getCodec();\n}",
    "testName" : "test4141"
  },
  "test7375" : {
    "methodSignature" : "public String nextTextValue() throws IOException, JsonParseException",
    "methodName" : "nextTextValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7375() throws Throwable {\n    StringReader stringReader0 = new StringReader(\"0ew#\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, objectCodec0, true);\n    ObjectCodec objectCodec1 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 58, stringReader0, objectCodec1, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextTextValue();\n}",
    "testName" : "test7375"
  },
  "test6162" : {
    "methodSignature" : "public JsonToken nextToken() throws IOException, JsonParseException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6162() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"N|%O\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextToken();\n}",
    "testName" : "test6162"
  },
  "test8185" : {
    "methodSignature" : "public int readBinaryValue(Base64Variant b64variant, OutputStream out) throws IOException, JsonParseException",
    "methodName" : "readBinaryValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8185() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, (Reader) null, objectCodec0, charsToNameCanonicalizer0);\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"g0*hk7HSCqb\");\n    readerBasedJsonParser0.readBinaryValue((Base64Variant) null, (OutputStream) mockFileOutputStream0);\n}",
    "testName" : "test8185"
  },
  "test044" : {
    "methodSignature" : "public long nextLongValue(long defaultValue) throws IOException, JsonParseException",
    "methodName" : "nextLongValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \":Uhxdjbv\", true);\n    StringReader stringReader0 = new StringReader(\":Uhxdjbv\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    stringReader0.read();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    char[] charArray0 = new char[7];\n    stringReader0.read(charArray0);\n    readerBasedJsonParser0.nextLongValue(777L);\n}",
    "testName" : "test044"
  },
  "test99105" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test99105() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"N|%O\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 33, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._reportInvalidToken((String) null);\n}",
    "testName" : "test99105"
  },
  "test2929" : {
    "methodSignature" : "protected String _parseName(int i) throws IOException",
    "methodName" : "_parseName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"maybe a (non-standard) comment? (not recognized as one since Feature 'ALLOW_COMMENTS' not enabled for parser)\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-2105), stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._parseName(2000);\n}",
    "testName" : "test2929"
  },
  "test6971" : {
    "methodSignature" : "protected String _handleOddName(int i) throws IOException",
    "methodName" : "_handleOddName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6971() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"5F+:E_0INvqf81dB;\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 39, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._handleOddName(39);\n}",
    "testName" : "test6971"
  },
  "test8993" : {
    "methodSignature" : "public String getValueAsString(String defValue) throws IOException, JsonParseException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8993() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"5F+:E_0INvqf81dB;\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 127, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    String string0 = readerBasedJsonParser0.getValueAsString(\"5F+:E_0INvqf81dB;\");\n}",
    "testName" : "test8993"
  },
  "test7780" : {
    "methodSignature" : "public int getTokenColumnNr()",
    "methodName" : "getTokenColumnNr",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7780() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"^4?cg'r[S.j2Nq\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2000, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._decodeEscaped();\n    readerBasedJsonParser0.nextBooleanValue();\n    readerBasedJsonParser0.getTokenColumnNr();\n}",
    "testName" : "test7780"
  }
}