{
  "test08495" : {
    "methodSignature" : "public final long nextLongValue(long defaultValue) throws IOException",
    "methodName" : "nextLongValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08495() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"tE!Y9p\\\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 56, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextLongValue(3);\n}",
    "testName" : "test08495"
  },
  "test06070" : {
    "methodSignature" : "public int getTokenColumnNr()",
    "methodName" : "getTokenColumnNr",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06070() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\">*3)!w\\\"55|[vs-x\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[6];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-592), stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 32, (-1751), false);\n    readerBasedJsonParser0._skipCR();\n    readerBasedJsonParser0.getTokenColumnNr();\n}",
    "testName" : "test06070"
  },
  "test0000" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart, String msg) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[2];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 2181, (-2966), false);\n    readerBasedJsonParser0._reportInvalidToken(\"\", \"\");\n}",
    "testName" : "test0000"
  },
  "test0088" : {
    "methodSignature" : "public boolean hasTextCharacters()",
    "methodName" : "hasTextCharacters",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0088() throws Throwable {\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"): \");\n    char[] charArray0 = new char[6];\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-2399), stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-2399), 22, false);\n    readerBasedJsonParser0._closeInput();\n    readerBasedJsonParser0.hasTextCharacters();\n}",
    "testName" : "test0088"
  },
  "test07282" : {
    "methodSignature" : "protected final JsonToken _parseNegNumber() throws IOException",
    "methodName" : "_parseNegNumber",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07282() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"ItgL7&BPR'If\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2282, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._parseNegNumber();\n}",
    "testName" : "test07282"
  },
  "test05664" : {
    "methodSignature" : "public int getColumnNr()",
    "methodName" : "getColumnNr",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05664() throws Throwable {\n    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());\n    doReturn((char[]) null).when(iOContext0).allocTokenBuffer();\n    doReturn((TextBuffer) null).when(iOContext0).constructTextBuffer();\n    doReturn((Object) null).when(iOContext0).getSourceReference();\n    StringReader stringReader0 = new StringReader(\"[Euail03_c\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getColumnNr();\n}",
    "testName" : "test05664"
  },
  "test08899" : {
    "methodSignature" : "public int readBinaryValue(OutputStream out) throws IOException",
    "methodName" : "readBinaryValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08899() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();\n    readerBasedJsonParser0.readBinaryValue((OutputStream) byteArrayBuilder0);\n}",
    "testName" : "test08899"
  },
  "test05663" : {
    "methodSignature" : "public long getByteOffset()",
    "methodName" : "getByteOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05663() throws Throwable {\n    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());\n    doReturn((char[]) null).when(iOContext0).allocTokenBuffer();\n    doReturn((TextBuffer) null).when(iOContext0).constructTextBuffer();\n    doReturn((Object) null).when(iOContext0).getSourceReference();\n    StringReader stringReader0 = new StringReader(\"[Euail03_c\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getByteOffset();\n}",
    "testName" : "test05663"
  },
  "test05666" : {
    "methodSignature" : "public int getLineNr()",
    "methodName" : "getLineNr",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05666() throws Throwable {\n    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());\n    doReturn((char[]) null).when(iOContext0).allocTokenBuffer();\n    doReturn((TextBuffer) null).when(iOContext0).constructTextBuffer();\n    doReturn((Object) null).when(iOContext0).getSourceReference();\n    StringReader stringReader0 = new StringReader(\"[Euail03_c\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getLineNr();\n}",
    "testName" : "test05666"
  },
  "test07687" : {
    "methodSignature" : "public final int nextIntValue(int defaultValue) throws IOException",
    "methodName" : "nextIntValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07687() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 984, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    int int0 = readerBasedJsonParser0.nextIntValue(2760);\n}",
    "testName" : "test07687"
  },
  "test05665" : {
    "methodSignature" : "public long getCharOffset()",
    "methodName" : "getCharOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05665() throws Throwable {\n    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());\n    doReturn((char[]) null).when(iOContext0).allocTokenBuffer();\n    doReturn((TextBuffer) null).when(iOContext0).constructTextBuffer();\n    doReturn((Object) null).when(iOContext0).getSourceReference();\n    StringReader stringReader0 = new StringReader(\"[Euail03_c\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getCharOffset();\n}",
    "testName" : "test05665"
  },
  "test06474" : {
    "methodSignature" : "protected final void _finishString() throws IOException",
    "methodName" : "_finishString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06474() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"eID^@[)4Y169\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._finishString();\n}",
    "testName" : "test06474"
  },
  "test02431" : {
    "methodSignature" : "public final int nextIntValue(int defaultValue) throws IOException",
    "methodName" : "nextIntValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02431() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Object object0 = new Object();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, object0, false);\n    StringReader stringReader0 = new StringReader(\"$g2F .-q-\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._releaseBuffers();\n    readerBasedJsonParser0.nextIntValue(43);\n}",
    "testName" : "test02431"
  },
  "test07686" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07686() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 984, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    int int0 = readerBasedJsonParser0.nextIntValue(2760);\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test07686"
  },
  "test04451" : {
    "methodSignature" : "protected JsonToken _handleInvalidNumberStart(int ch, boolean negative) throws IOException",
    "methodName" : "_handleInvalidNumberStart",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04451() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"}\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 278, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._handleInvalidNumberStart(0, false);\n}",
    "testName" : "test04451"
  },
  "test104117" : {
    "methodSignature" : "protected final void _skipString() throws IOException",
    "methodName" : "_skipString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104117() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"v{[OvNK0^d8z\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[0];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 111, 2, false);\n    readerBasedJsonParser0._skipString();\n}",
    "testName" : "test104117"
  },
  "test02027" : {
    "methodSignature" : "public final String nextTextValue() throws IOException",
    "methodName" : "nextTextValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02027() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[4];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 43, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 48, 56, false);\n    readerBasedJsonParser0.nextTextValue();\n}",
    "testName" : "test02027"
  },
  "test01212" : {
    "methodSignature" : "public final String getValueAsString(String defValue) throws IOException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01212() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\\\"Na [AVw_`e-v 6If\", true);\n    StringReader stringReader0 = new StringReader(\"m2g\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[2];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, 2, true);\n    String string0 = readerBasedJsonParser0.getValueAsString((String) null);\n}",
    "testName" : "test01212"
  },
  "test110123" : {
    "methodSignature" : "public boolean hasCurrentToken()",
    "methodName" : "hasCurrentToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110123() throws Throwable {\n    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());\n    doReturn((char[]) null).when(iOContext0).allocTokenBuffer();\n    doReturn((TextBuffer) null).when(iOContext0).constructTextBuffer();\n    StringReader stringReader0 = new StringReader(\"[Euail03_c\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    ObjectCodec objectCodec1 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    readerBasedJsonParser0.setCodec(objectCodec1);\n    readerBasedJsonParser0.hasCurrentToken();\n}",
    "testName" : "test110123"
  },
  "test109122" : {
    "methodSignature" : "public String nextFieldName() throws IOException",
    "methodName" : "nextFieldName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109122() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"ItgL7&BPR'If\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2282, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextFieldName();\n}",
    "testName" : "test109122"
  },
  "test03239" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart, String msg) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03239() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._reportInvalidToken((String) null, (String) null);\n}",
    "testName" : "test03239"
  },
  "test08091" : {
    "methodSignature" : "public int getCurrentTokenId()",
    "methodName" : "getCurrentTokenId",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08091() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"[\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 700, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextFieldName();\n    readerBasedJsonParser0.getCurrentTokenId();\n}",
    "testName" : "test08091"
  },
  "test097109" : {
    "methodSignature" : "public final String getValueAsString() throws IOException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097109() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    String string0 = readerBasedJsonParser0.getValueAsString();\n}",
    "testName" : "test097109"
  },
  "test01617" : {
    "methodSignature" : "protected char getNextChar(String eofMsg) throws IOException",
    "methodName" : "getNextChar",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01617() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"f.5):l?YuDHA~\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-2091), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    char char0 = readerBasedJsonParser0.getNextChar(\"Non-standard token 'Infinity': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow\");\n}",
    "testName" : "test01617"
  },
  "test0011" : {
    "methodSignature" : "protected final void _skipString() throws IOException",
    "methodName" : "_skipString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\": was expecting closing '\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._skipString();\n}",
    "testName" : "test0011"
  },
  "test0099" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0099() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"S\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[6];\n    byte[] byteArray0 = new byte[4];\n    ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);\n    CharBuffer charBuffer0 = byteBuffer0.asCharBuffer();\n    stringReader0.read(charBuffer0);\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1818, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, (-2001), false);\n    readerBasedJsonParser0.nextLongValue(0);\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test0099"
  },
  "test04047" : {
    "methodSignature" : "protected String _parseAposName() throws IOException",
    "methodName" : "_parseAposName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04047() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"com.fasterxml.jackson.core.json.ReaderBasedJsonParser\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[0];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 2774, 2, true);\n    readerBasedJsonParser0._parseAposName();\n}",
    "testName" : "test04047"
  },
  "test01721" : {
    "methodSignature" : "public long getCharOffset()",
    "methodName" : "getCharOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01721() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"v{[OvNK0^d8z\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[0];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 111, 2, false);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getCharOffset();\n}",
    "testName" : "test01721"
  },
  "test04956" : {
    "methodSignature" : "protected char _decodeEscaped() throws IOException",
    "methodName" : "_decodeEscaped",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04956() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\" bytes\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[0];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 178, (-637), true);\n    readerBasedJsonParser0._decodeEscaped();\n}",
    "testName" : "test04956"
  },
  "test01720" : {
    "methodSignature" : "public int getColumnNr()",
    "methodName" : "getColumnNr",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01720() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"v{[OvNK0^d8z\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[0];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 111, 2, false);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getColumnNr();\n}",
    "testName" : "test01720"
  },
  "test02532" : {
    "methodSignature" : "public String nextFieldName() throws IOException",
    "methodName" : "nextFieldName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02532() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[2];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 44, (Reader) null, objectCodec0, charsToNameCanonicalizer0, charArray0, 241, 3, true);\n    readerBasedJsonParser0.nextFieldName();\n}",
    "testName" : "test02532"
  },
  "test05767" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart, String msg) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05767() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"AUTO_CLOSE_SOURCE\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._reportInvalidToken(\"AUTO_CLOSE_SOURCE\", \"}-)Y`s:\");\n}",
    "testName" : "test05767"
  },
  "test099111" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099111() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[1];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 10, (Reader) null, objectCodec0, charsToNameCanonicalizer0, charArray0, 51, 0, false);\n    readerBasedJsonParser0.nextFieldName();\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test099111"
  },
  "test03744" : {
    "methodSignature" : "protected void _releaseBuffers() throws IOException",
    "methodName" : "_releaseBuffers",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03744() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"CM,F*,8W?\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[1];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 2, 2, true);\n    readerBasedJsonParser0._releaseBuffers();\n}",
    "testName" : "test03744"
  },
  "test06979" : {
    "methodSignature" : "protected final String _parseName() throws IOException",
    "methodName" : "_parseName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06979() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"x|R!R5YnYXU%cz3uk \");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._parseName();\n}",
    "testName" : "test06979"
  },
  "test094105" : {
    "methodSignature" : "protected final String _getText2(JsonToken t)",
    "methodName" : "_getText2",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094105() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[7];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, 33, true);\n    JsonToken jsonToken0 = JsonToken.VALUE_STRING;\n    String string0 = readerBasedJsonParser0._getText2(jsonToken0);\n}",
    "testName" : "test094105"
  },
  "test02936" : {
    "methodSignature" : "protected final void _skipString() throws IOException",
    "methodName" : "_skipString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02936() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    char[] charArray0 = new char[9];\n    charArray0[2] = 'Z';\n    charArray0[3] = 'o';\n    charArray0[4] = 'M';\n    charArray0[5] = '^';\n    charArray0[6] = 'u';\n    charArray0[7] = 'y';\n    charArray0[8] = '~';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, (Reader) null, objectCodec0, charsToNameCanonicalizer0, charArray0, 2, 102, true);\n    readerBasedJsonParser0._skipString();\n}",
    "testName" : "test02936"
  },
  "test07383" : {
    "methodSignature" : "protected final JsonToken _parsePosNumber(int ch) throws IOException",
    "methodName" : "_parsePosNumber",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07383() throws Throwable {\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, \"\", true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[0];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1583, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-2838), 1583, true);\n    readerBasedJsonParser0._parsePosNumber((-2838));\n}",
    "testName" : "test07383"
  },
  "test05360" : {
    "methodSignature" : "public final JsonToken nextToken() throws IOException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05360() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"JF,RkA_3PQ}d65nKt6B\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[2];\n    charArray0[0] = '-';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, 33, true);\n    readerBasedJsonParser0.nextToken();\n}",
    "testName" : "test05360"
  },
  "test0022" : {
    "methodSignature" : "public final boolean isStructStart()",
    "methodName" : "isStructStart",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0022() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\": was expecting closing '\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1764), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    JsonToken jsonToken0 = readerBasedJsonParser0._handleApos();\n    jsonToken0.isStructStart();\n}",
    "testName" : "test0022"
  },
  "test06171" : {
    "methodSignature" : "public int getTokenColumnNr()",
    "methodName" : "getTokenColumnNr",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06171() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-969), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._skipCR();\n    readerBasedJsonParser0.getTokenColumnNr();\n}",
    "testName" : "test06171"
  },
  "test08192" : {
    "methodSignature" : "protected boolean _isNextTokenNameMaybe(int i, String nameToMatch) throws IOException",
    "methodName" : "_isNextTokenNameMaybe",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08192() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"('true', 'false' or 'null')\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._isNextTokenNameMaybe(0, \"Exponent indicator not followed by a digit\");\n}",
    "testName" : "test08192"
  },
  "test04552" : {
    "methodSignature" : "protected JsonToken _handleApos() throws IOException",
    "methodName" : "_handleApos",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04552() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"Null String illegal for SerializedString\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1659, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-2), 3, true);\n    readerBasedJsonParser0._handleApos();\n}",
    "testName" : "test04552"
  },
  "test07788" : {
    "methodSignature" : "public final int nextIntValue(int defaultValue) throws IOException",
    "methodName" : "nextIntValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07788() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\" of 4-char base64 unit: can only used between units\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 8, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextIntValue(78);\n}",
    "testName" : "test07788"
  },
  "test03340" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart, String msg) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03340() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"Duplicate field '\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[9];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, (-1833), 3, false);\n    readerBasedJsonParser0._reportInvalidToken(\"Duplicate field '\", \"Duplicate field '\");\n}",
    "testName" : "test03340"
  },
  "test06575" : {
    "methodSignature" : "protected JsonToken _handleOddValue(int i) throws IOException",
    "methodName" : "_handleOddValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06575() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\" of 4-char base64 unit: can only used between units\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \" of 4-char base64 unit: can only used between units\", true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._handleOddValue(78);\n}",
    "testName" : "test06575"
  },
  "test08596" : {
    "methodSignature" : "public final Boolean nextBooleanValue() throws IOException",
    "methodName" : "nextBooleanValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08596() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    StringReader stringReader0 = new StringReader(\"-Infinity\");\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 4208, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextBooleanValue();\n}",
    "testName" : "test08596"
  },
  "test102115" : {
    "methodSignature" : "protected final JsonToken _parseNegNumber() throws IOException",
    "methodName" : "_parseNegNumber",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102115() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"[\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[1];\n    stringReader0.read(charArray0);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 1, 0, false);\n    readerBasedJsonParser0._parseNegNumber();\n}",
    "testName" : "test102115"
  },
  "test02128" : {
    "methodSignature" : "public final String nextTextValue() throws IOException",
    "methodName" : "nextTextValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02128() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Object object0 = new Object();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, object0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[6];\n    stringReader0.close();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, 0, false);\n    readerBasedJsonParser0.nextTextValue();\n}",
    "testName" : "test02128"
  },
  "test01313" : {
    "methodSignature" : "public final String getValueAsString(String defValue) throws IOException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01313() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\": was expecting closing '\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    String string0 = readerBasedJsonParser0.getValueAsString(\"\");\n}",
    "testName" : "test01313"
  },
  "test107120" : {
    "methodSignature" : "public int releaseBuffered(Writer w) throws IOException",
    "methodName" : "releaseBuffered",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107120() throws Throwable {\n    Object object0 = new Object();\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, object0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[1];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 40, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 32, 40, true);\n    StringWriter stringWriter0 = new StringWriter();\n    readerBasedJsonParser0.releaseBuffered((Writer) stringWriter0);\n}",
    "testName" : "test107120"
  },
  "test01718" : {
    "methodSignature" : "public long getByteOffset()",
    "methodName" : "getByteOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01718() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"v{[OvNK0^d8z\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[0];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 111, 2, false);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getByteOffset();\n}",
    "testName" : "test01718"
  },
  "test091102" : {
    "methodSignature" : "public final int getTextLength() throws IOException",
    "methodName" : "getTextLength",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test091102() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    int int0 = readerBasedJsonParser0.getTextLength();\n}",
    "testName" : "test091102"
  },
  "test01719" : {
    "methodSignature" : "public int getLineNr()",
    "methodName" : "getLineNr",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01719() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"v{[OvNK0^d8z\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[0];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 111, 2, false);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getLineNr();\n}",
    "testName" : "test01719"
  },
  "test0033" : {
    "methodSignature" : "protected String _parseAposName() throws IOException",
    "methodName" : "_parseAposName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0033() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"a1w*Z\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._parseAposName();\n}",
    "testName" : "test0033"
  },
  "test04148" : {
    "methodSignature" : "protected final void _matchToken(String matchStr, int i) throws IOException",
    "methodName" : "_matchToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04148() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"R?y[B]/$?hq`4h\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, (-3464), 748, true);\n    readerBasedJsonParser0._matchToken(\"Wa(&/bk*f ^\", 291);\n}",
    "testName" : "test04148"
  },
  "test105118" : {
    "methodSignature" : "protected void _finishString2() throws IOException",
    "methodName" : "_finishString2",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105118() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"[Euail03_c\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    char[] charArray0 = new char[5];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 2900, 33, true);\n    readerBasedJsonParser0._finishString2();\n}",
    "testName" : "test105118"
  },
  "test03845" : {
    "methodSignature" : "protected final String _parseName() throws IOException",
    "methodName" : "_parseName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03845() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1100, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-2323), 0, true);\n    readerBasedJsonParser0._parseName();\n}",
    "testName" : "test03845"
  },
  "test02633" : {
    "methodSignature" : "public String nextFieldName() throws IOException",
    "methodName" : "nextFieldName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02633() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"A@RA;dKa*x5P8\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    char[] charArray0 = new char[9];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 33, 2046, false);\n    readerBasedJsonParser0.nextFieldName();\n}",
    "testName" : "test02633"
  },
  "test01824" : {
    "methodSignature" : "public int getLineNr()",
    "methodName" : "getLineNr",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01824() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2907, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-464), (-1354), true);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getLineNr();\n}",
    "testName" : "test01824"
  },
  "test01823" : {
    "methodSignature" : "public long getCharOffset()",
    "methodName" : "getCharOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01823() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2907, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-464), (-1354), true);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getCharOffset();\n}",
    "testName" : "test01823"
  },
  "test01822" : {
    "methodSignature" : "public int getColumnNr()",
    "methodName" : "getColumnNr",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01822() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2907, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-464), (-1354), true);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getColumnNr();\n}",
    "testName" : "test01822"
  },
  "test05868" : {
    "methodSignature" : "protected final void _matchToken(String matchStr, int i) throws IOException",
    "methodName" : "_matchToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05868() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"c4M`oY=\", true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[4];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 262144, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 50, (-1628), false);\n    readerBasedJsonParser0._matchToken(\"\", 3);\n}",
    "testName" : "test05868"
  },
  "test07889" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07889() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1089), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextTextValue();\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test07889"
  },
  "test01825" : {
    "methodSignature" : "public long getByteOffset()",
    "methodName" : "getByteOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01825() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[3];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2907, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-464), (-1354), true);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getCurrentLocation();\n    jsonLocation0.getByteOffset();\n}",
    "testName" : "test01825"
  },
  "test096107" : {
    "methodSignature" : "public final String getValueAsString(String defValue) throws IOException",
    "methodName" : "getValueAsString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096107() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"[\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 700, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    String string0 = readerBasedJsonParser0.getValueAsString(\"[\");\n}",
    "testName" : "test096107"
  },
  "test113126" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113126() throws Throwable {\n    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());\n    doReturn((TextBuffer) null).when(iOContext0).constructTextBuffer();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[6];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, (Reader) null, objectCodec0, charsToNameCanonicalizer0, charArray0, 127, 677, true);\n    readerBasedJsonParser0._reportInvalidToken(\"\");\n}",
    "testName" : "test113126"
  },
  "test06272" : {
    "methodSignature" : "protected final void _skipCR() throws IOException",
    "methodName" : "_skipCR",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06272() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"CGJH~jCSix\\\"<\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[0];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-2751), 226, false);\n    readerBasedJsonParser0._skipCR();\n}",
    "testName" : "test06272"
  },
  "test07484" : {
    "methodSignature" : "protected final JsonToken _parsePosNumber(int ch) throws IOException",
    "methodName" : "_parsePosNumber",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07484() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"0aT|;,\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"0aT|;,\", false);\n    char[] charArray0 = new char[6];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 32, 2, false);\n    readerBasedJsonParser0._parsePosNumber('T');\n}",
    "testName" : "test07484"
  },
  "test08293" : {
    "methodSignature" : "public boolean nextFieldName(SerializableString sstr) throws IOException",
    "methodName" : "nextFieldName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08293() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"{SPa0Upf-4=\\\"dp'\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[5];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 3, 1, true);\n    readerBasedJsonParser0._handleApos();\n    readerBasedJsonParser0.nextFieldName((SerializableString) null);\n}",
    "testName" : "test08293"
  },
  "test0044" : {
    "methodSignature" : "protected final JsonToken _parseNegNumber() throws IOException",
    "methodName" : "_parseNegNumber",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0044() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"_r,Ji8EW^9@/\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._parseNegNumber();\n}",
    "testName" : "test0044"
  },
  "test03441" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart, String msg) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03441() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \" entries\", true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    stringReader0.close();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._reportInvalidToken(\" entries\", \" entries\");\n}",
    "testName" : "test03441"
  },
  "test06676" : {
    "methodSignature" : "public boolean hasCurrentToken()",
    "methodName" : "hasCurrentToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06676() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"US-ASCII\", true);\n    StringReader stringReader0 = new StringReader(\"'null', 'true', 'false' or NaN\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 571, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextFieldName();\n    readerBasedJsonParser0.hasCurrentToken();\n}",
    "testName" : "test06676"
  },
  "test04653" : {
    "methodSignature" : "protected void _finishString2() throws IOException",
    "methodName" : "_finishString2",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04653() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"NaN\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, 3, 1491, false);\n    readerBasedJsonParser0._finishString2();\n}",
    "testName" : "test04653"
  },
  "test100112" : {
    "methodSignature" : "protected JsonToken _handleApos() throws IOException",
    "methodName" : "_handleApos",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100112() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    StringReader stringReader0 = new StringReader(\"-Infinity\");\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 4231, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._handleApos();\n}",
    "testName" : "test100112"
  },
  "test08697" : {
    "methodSignature" : "public final String nextTextValue() throws IOException",
    "methodName" : "nextTextValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08697() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"],)+]A:i ~]{WiMRK\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[2];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 2905, 1918, false);\n    readerBasedJsonParser0.nextTextValue();\n}",
    "testName" : "test08697"
  },
  "test05461" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05461() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-2371), (Reader) null, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextToken();\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test05461"
  },
  "test098110" : {
    "methodSignature" : "public final String getText() throws IOException",
    "methodName" : "getText",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098110() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"eID^@[)4Y169\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[8];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-1480), 1, true);\n    String string0 = readerBasedJsonParser0.getText();\n}",
    "testName" : "test098110"
  },
  "test04249" : {
    "methodSignature" : "protected final void _matchToken(String matchStr, int i) throws IOException",
    "methodName" : "_matchToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04249() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 44, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._matchToken(\"\", 0);\n}",
    "testName" : "test04249"
  },
  "test02229" : {
    "methodSignature" : "public final long nextLongValue(long defaultValue) throws IOException",
    "methodName" : "nextLongValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02229() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[7];\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, Integer.MAX_VALUE, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 799, 3, true);\n    readerBasedJsonParser0.nextLongValue(0);\n}",
    "testName" : "test02229"
  },
  "test01414" : {
    "methodSignature" : "protected char getNextChar(String eofMsg) throws IOException",
    "methodName" : "getNextChar",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01414() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"': expected '\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[4];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 57, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 39, 0, false);\n    char char0 = readerBasedJsonParser0.getNextChar(\"': expected '\");\n}",
    "testName" : "test01414"
  },
  "test093104" : {
    "methodSignature" : "protected final String _getText2(JsonToken t)",
    "methodName" : "_getText2",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093104() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[8];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 33, 97, true);\n    JsonToken jsonToken0 = JsonToken.VALUE_EMBEDDED_OBJECT;\n    String string0 = readerBasedJsonParser0._getText2(jsonToken0);\n}",
    "testName" : "test093104"
  },
  "test07080" : {
    "methodSignature" : "protected final String _parseName() throws IOException",
    "methodName" : "_parseName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07080() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"VALUE_FALSE\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2047, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._decodeEscaped();\n    readerBasedJsonParser0._parseName();\n}",
    "testName" : "test07080"
  },
  "test07990" : {
    "methodSignature" : "public int getCurrentTokenId()",
    "methodName" : "getCurrentTokenId",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07990() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"cJc,om$/?\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[9];\n    charArray0[2] = '{';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 2, 3, true);\n    SerializedString serializedString0 = new SerializedString(\"\");\n    readerBasedJsonParser0.nextFieldName((SerializableString) serializedString0);\n    readerBasedJsonParser0.getCurrentTokenId();\n}",
    "testName" : "test07990"
  },
  "test0055" : {
    "methodSignature" : "protected final JsonToken _parsePosNumber(int ch) throws IOException",
    "methodName" : "_parsePosNumber",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0055() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\" of 4-char base64 unit: can only used between units\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 8, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._parsePosNumber(2574);\n}",
    "testName" : "test0055"
  },
  "test03037" : {
    "methodSignature" : "protected final void _skipCR() throws IOException",
    "methodName" : "_skipCR",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03037() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Object object0 = new Object();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, object0, false);\n    StringReader stringReader0 = new StringReader(\"$g2F .-q-\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._releaseBuffers();\n    readerBasedJsonParser0._skipCR();\n}",
    "testName" : "test03037"
  },
  "test103116" : {
    "methodSignature" : "protected char getNextChar(String eofMsg) throws IOException",
    "methodName" : "getNextChar",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103116() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[1];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, (Reader) null, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 2, 80, false);\n    readerBasedJsonParser0.getNextChar(\"^/w6!AHT|_?9\\\"HS\");\n}",
    "testName" : "test103116"
  },
  "test01010" : {
    "methodSignature" : "protected abstract boolean loadMore() throws IOException",
    "methodName" : "loadMore",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01010() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"3^lQb/y<.b,KILVa3i8\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1445), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    boolean boolean0 = readerBasedJsonParser0.loadMore();\n}",
    "testName" : "test01010"
  },
  "test05969" : {
    "methodSignature" : "protected char _decodeEscaped() throws IOException",
    "methodName" : "_decodeEscaped",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05969() throws Throwable {\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[8];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2345, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 1583, (-1072), false);\n    readerBasedJsonParser0._decodeEscaped();\n}",
    "testName" : "test05969"
  },
  "test03946" : {
    "methodSignature" : "protected final String _parseName() throws IOException",
    "methodName" : "_parseName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03946() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"Unrecognized token '\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[0];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 2, 2, false);\n    readerBasedJsonParser0._parseName();\n}",
    "testName" : "test03946"
  },
  "test04754" : {
    "methodSignature" : "protected final void _finishString() throws IOException",
    "methodName" : "_finishString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04754() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[9];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 4306, 3471, true);\n    readerBasedJsonParser0._finishString();\n}",
    "testName" : "test04754"
  },
  "test108121" : {
    "methodSignature" : "public long getByteOffset()",
    "methodName" : "getByteOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108121() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"exM*tBz6;Ush\", false);\n    StringReader stringReader0 = new StringReader(\"cg5J<\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, 2, 33, false);\n    JsonLocation jsonLocation0 = readerBasedJsonParser0.getTokenLocation();\n    jsonLocation0.getByteOffset();\n}",
    "testName" : "test108121"
  },
  "test02734" : {
    "methodSignature" : "public final Boolean nextBooleanValue() throws IOException",
    "methodName" : "nextBooleanValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02734() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\">\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[5];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 52, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, (-3451), 3434, true);\n    readerBasedJsonParser0.nextBooleanValue();\n}",
    "testName" : "test02734"
  },
  "test01926" : {
    "methodSignature" : "protected final String _getText2(JsonToken t)",
    "methodName" : "_getText2",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01926() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"ALLOW_NUMERIC_LEADING_ZEROS\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    JsonToken jsonToken0 = JsonToken.START_OBJECT;\n    String string0 = readerBasedJsonParser0._getText2(jsonToken0);\n}",
    "testName" : "test01926"
  },
  "test111124" : {
    "methodSignature" : "public Object getInputSource()",
    "methodName" : "getInputSource",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111124() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"Unexpected end-of-input within/between \");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[0];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 37, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 37, 0, true);\n    Object object0 = readerBasedJsonParser0.getInputSource();\n}",
    "testName" : "test111124"
  },
  "test090101" : {
    "methodSignature" : "public final int getTextOffset() throws IOException",
    "methodName" : "getTextOffset",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090101() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Object object0 = new Object();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);\n    StringReader stringReader0 = new StringReader(\"com.fasterxml.jackson.core.type.ResolvedType\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[2];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 8, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 33, 2928, true);\n    int int0 = readerBasedJsonParser0.getTextOffset();\n}",
    "testName" : "test090101"
  },
  "test06373" : {
    "methodSignature" : "protected final void _skipString() throws IOException",
    "methodName" : "_skipString",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06373() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"!G0Sa781E$\", false);\n    StringReader stringReader0 = new StringReader(\"!G0Sa781E$\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._skipString();\n}",
    "testName" : "test06373"
  },
  "test08394" : {
    "methodSignature" : "public boolean nextFieldName(SerializableString sstr) throws IOException",
    "methodName" : "nextFieldName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08394() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"0aT|;,\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"0aT|;,\", false);\n    char[] charArray0 = new char[6];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 32, 2, false);\n    SerializedString serializedString0 = new SerializedString(\"\");\n    readerBasedJsonParser0.nextFieldName((SerializableString) serializedString0);\n}",
    "testName" : "test08394"
  },
  "test07181" : {
    "methodSignature" : "protected final JsonToken _parseNegNumber() throws IOException",
    "methodName" : "_parseNegNumber",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07181() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"Infinity\", false);\n    StringReader stringReader0 = new StringReader(\"): has to be escaped using backslash to be included in \");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._parseNegNumber();\n}",
    "testName" : "test07181"
  },
  "test0066" : {
    "methodSignature" : "protected boolean _isNextTokenNameMaybe(int i, String nameToMatch) throws IOException",
    "methodName" : "_isNextTokenNameMaybe",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0066() throws Throwable {\n    IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"}N1`\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[6];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 49, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 33, 33, false);\n    readerBasedJsonParser0._isNextTokenNameMaybe(49, \"HO4[<GGgGVmK\");\n}",
    "testName" : "test0066"
  },
  "test106119" : {
    "methodSignature" : "public int releaseBuffered(Writer w) throws IOException",
    "methodName" : "releaseBuffered",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106119() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\" of 4-char base64 unit: can only used between units\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 8, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    StringWriter stringWriter0 = new StringWriter(3);\n    int int0 = readerBasedJsonParser0.releaseBuffered((Writer) stringWriter0);\n}",
    "testName" : "test106119"
  },
  "test03542" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03542() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", true);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, 2, 33, true);\n    readerBasedJsonParser0._reportInvalidToken(\"AGA>WK6e]DB\");\n}",
    "testName" : "test03542"
  },
  "test06777" : {
    "methodSignature" : "protected String _handleOddName(int i) throws IOException",
    "methodName" : "_handleOddName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06777() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"[\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 700, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._handleOddName(33);\n}",
    "testName" : "test06777"
  },
  "test08798" : {
    "methodSignature" : "public final JsonToken nextToken() throws IOException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08798() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\": was expecting closing '\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextToken();\n}",
    "testName" : "test08798"
  },
  "test04350" : {
    "methodSignature" : "protected String _handleOddName(int i) throws IOException",
    "methodName" : "_handleOddName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04350() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"Pbyz7~!Ld0!\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    char[] charArray0 = new char[2];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-707), stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 5, 1092, true);\n    readerBasedJsonParser0._handleOddName((-3366));\n}",
    "testName" : "test04350"
  },
  "test07585" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07585() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-2371), (Reader) null, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextBooleanValue();\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test07585"
  },
  "test02330" : {
    "methodSignature" : "public final long nextLongValue(long defaultValue) throws IOException",
    "methodName" : "nextLongValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02330() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    Object object0 = new Object();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, object0, true);\n    StringReader stringReader0 = new StringReader(\"com.fasterxml.jackson.core.type.ResolvedType\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[2];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 8, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 33, 2928, true);\n    readerBasedJsonParser0.nextLongValue(0);\n}",
    "testName" : "test02330"
  },
  "test05562" : {
    "methodSignature" : "public ObjectCodec getCodec()",
    "methodName" : "getCodec",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05562() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"}\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    doReturn((String) null).when(objectCodec0).toString();\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 278, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    ObjectCodec objectCodec1 = readerBasedJsonParser0.getCodec();\n}",
    "testName" : "test05562"
  },
  "test01515" : {
    "methodSignature" : "protected char getNextChar(String eofMsg) throws IOException",
    "methodName" : "getNextChar",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01515() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"3(SI299\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[8];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, (-2173), true);\n    char char0 = readerBasedJsonParser0.getNextChar(\"\");\n}",
    "testName" : "test01515"
  },
  "test03138" : {
    "methodSignature" : "protected final void _skipCR() throws IOException",
    "methodName" : "_skipCR",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03138() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"Unexpected end-of-input within/between \");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[0];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 37, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 37, 0, true);\n    readerBasedJsonParser0._skipCR();\n}",
    "testName" : "test03138"
  },
  "test095106" : {
    "methodSignature" : "protected final String _getText2(JsonToken t)",
    "methodName" : "_getText2",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095106() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    StringReader stringReader0 = new StringReader(\"0aT|;,\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"0aT|;,\", false);\n    char[] charArray0 = new char[6];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 32, 2, false);\n    JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_FLOAT;\n    String string0 = readerBasedJsonParser0._getText2(jsonToken0);\n}",
    "testName" : "test095106"
  },
  "test112125" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112125() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, (Reader) null, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0._reportInvalidToken(\"\");\n}",
    "testName" : "test112125"
  },
  "test0077" : {
    "methodSignature" : "public String nextFieldName() throws IOException",
    "methodName" : "nextFieldName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0077() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"u0SEW d@'eK&^kn\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextFieldName();\n}",
    "testName" : "test0077"
  },
  "test101113" : {
    "methodSignature" : "public boolean isClosed()",
    "methodName" : "isClosed",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101113() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    long long0 = readerBasedJsonParser0.nextLongValue(2);\n    readerBasedJsonParser0.isClosed();\n}",
    "testName" : "test101113"
  },
  "test089100" : {
    "methodSignature" : "public byte[] getBinaryValue(Base64Variant b64variant) throws IOException",
    "methodName" : "getBinaryValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089100() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"US-ASCII\", true);\n    StringReader stringReader0 = new StringReader(\"'null', 'true', 'false' or NaN\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[4];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1431, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 1414, (-2808), true);\n    readerBasedJsonParser0.getBinaryValue((Base64Variant) null);\n}",
    "testName" : "test089100"
  },
  "test01111" : {
    "methodSignature" : "protected abstract boolean loadMore() throws IOException",
    "methodName" : "loadMore",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01111() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[8];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, (Reader) null, objectCodec0, charsToNameCanonicalizer0, charArray0, 3, (-1664), false);\n    boolean boolean0 = readerBasedJsonParser0.loadMore();\n}",
    "testName" : "test01111"
  },
  "test101114" : {
    "methodSignature" : "public final long nextLongValue(long defaultValue) throws IOException",
    "methodName" : "nextLongValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101114() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    long long0 = readerBasedJsonParser0.nextLongValue(2);\n}",
    "testName" : "test101114"
  },
  "test03643" : {
    "methodSignature" : "protected void _reportInvalidToken(String matchedPart) throws IOException",
    "methodName" : "_reportInvalidToken",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03643() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"Sr@Z0NMVAHrq!5$\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    stringReader0.close();\n    readerBasedJsonParser0._reportInvalidToken(\"Sr@Z0NMVAHrq!5$\");\n}",
    "testName" : "test03643"
  },
  "test06878" : {
    "methodSignature" : "protected String _parseAposName() throws IOException",
    "methodName" : "_parseAposName",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06878() throws Throwable {\n    TextBuffer textBuffer0 = mock(TextBuffer.class, new ViolatedAssumptionAnswer());\n    doReturn((char[]) null).when(textBuffer0).getCurrentSegment();\n    doReturn(0).when(textBuffer0).getCurrentSegmentSize();\n    doReturn((char[]) null).when(textBuffer0).getTextBuffer();\n    doReturn(0).when(textBuffer0).getTextOffset();\n    doReturn(0).when(textBuffer0).size();\n    IOContext iOContext0 = mock(IOContext.class, new ViolatedAssumptionAnswer());\n    doReturn(textBuffer0).when(iOContext0).constructTextBuffer();\n    StringReader stringReader0 = new StringReader(\"': expected '\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[7];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 52, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, (-488), true);\n    String string0 = readerBasedJsonParser0._parseAposName();\n}",
    "testName" : "test06878"
  },
  "test02835" : {
    "methodSignature" : "public final Boolean nextBooleanValue() throws IOException",
    "methodName" : "nextBooleanValue",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02835() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"QiSON~eFIdi]WTwsEb\");\n    stringReader0.close();\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    readerBasedJsonParser0.nextBooleanValue();\n}",
    "testName" : "test02835"
  },
  "test04855" : {
    "methodSignature" : "protected char _decodeEscaped() throws IOException",
    "methodName" : "_decodeEscaped",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04855() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);\n    StringReader stringReader0 = new StringReader(\"l}pT@=^i#iE7\\\"4(ELY\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, (char[]) null, (-1705), (-1705), false);\n    readerBasedJsonParser0._decodeEscaped();\n}",
    "testName" : "test04855"
  },
  "test092103" : {
    "methodSignature" : "public final char[] getTextCharacters() throws IOException",
    "methodName" : "getTextCharacters",
    "className" : "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092103() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, \"\", false);\n    StringReader stringReader0 = new StringReader(\"\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[7];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 1, stringReader0, objectCodec0, charsToNameCanonicalizer0, charArray0, 0, 33, true);\n    char[] charArray1 = readerBasedJsonParser0.getTextCharacters();\n}",
    "testName" : "test092103"
  }
}