{
  "test1114" : {
    "methodSignature" : "public JsonToken nextToken() throws IOException, JsonParseException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1114() throws Throwable {\n    OutputStream outputStream0 = null;\n    JsonParser[] jsonParserArray0 = new JsonParser[4];\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"com.fasterxml.jackson.core.util.JsonParserSequence\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[8];\n    charArray0[0] = '}';\n    charArray0[1] = '9';\n    charArray0[2] = 'T';\n    charArray0[3] = 'i';\n    charArray0[4] = '3';\n    charArray0[5] = '+';\n    charArray0[6] = '';\n    charArray0[7] = 'R';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 1, 1, false);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_UNQUOTED_CONTROL_CHARS;\n    JsonParser jsonParser0 = readerBasedJsonParser0.enable(jsonParser_Feature0);\n    jsonParserArray0[0] = jsonParser0;\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    TokenFilter tokenFilter1 = tokenFilter0.filterStartObject();\n    TokenFilter tokenFilter2 = tokenFilter1.includeRootValue(0);\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, tokenFilter2, false, false);\n    jsonParserArray0[1] = (JsonParser) filteringParserDelegate0;\n    JsonParser.Feature jsonParser_Feature1 = JsonParser.Feature.AUTO_CLOSE_SOURCE;\n    JsonParser jsonParser1 = readerBasedJsonParser0.disable(jsonParser_Feature1);\n    jsonParserArray0[2] = jsonParser1;\n    JsonParser jsonParser2 = readerBasedJsonParser0.overrideStdFeatures((-2326), 50);\n    jsonParserArray0[3] = jsonParser2;\n    JsonParserSequence jsonParserSequence0 = new JsonParserSequence(jsonParserArray0);\n    jsonParserSequence0.nextToken();\n}",
    "testName" : "test1114"
  },
  "test1215" : {
    "methodSignature" : "public JsonToken nextToken() throws IOException, JsonParseException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1215() throws Throwable {\n    JsonParser[] jsonParserArray0 = new JsonParser[1];\n    JsonParserSequence jsonParserSequence0 = new JsonParserSequence(jsonParserArray0);\n    LinkedList<JsonParser> linkedList0 = new LinkedList<JsonParser>();\n    jsonParserSequence0.nextToken();\n}",
    "testName" : "test1215"
  },
  "test1013" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1013() throws Throwable {\n    System.setCurrentTimeMillis(1663L);\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false, false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);\n    byte[] byteArray0 = new byte[4];\n    byteArray0[0] = (byte) (-1);\n    byteArray0[1] = (byte) 80;\n    byteArray0[2] = (byte) 1;\n    byteArray0[3] = (byte) 25;\n    bufferedInputStream0.read(byteArray0);\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();\n    byte[] byteArray1 = new byte[0];\n    UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, (-791), bufferedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, byteArray1, 0, 2, true);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(uTF8StreamJsonParser0, uTF8StreamJsonParser0);\n    jsonParserSequence0.switchToNext();\n    jsonParserSequence0.containedParsersCount();\n    jsonParserSequence0.containedParsersCount();\n    jsonParserSequence0.getCurrentToken();\n    LinkedList<JsonParser> linkedList0 = new LinkedList<JsonParser>();\n    linkedList0.offer(jsonParserSequence0);\n    linkedList0.add((JsonParser) uTF8StreamJsonParser0);\n    jsonParserSequence0.addFlattenedActiveParsers(linkedList0);\n    jsonParserSequence0.containedParsersCount();\n    System.setCurrentTimeMillis(2);\n    jsonParserSequence0.close();\n}",
    "testName" : "test1013"
  },
  "test000" : {
    "methodSignature" : "public JsonToken nextToken() throws IOException, JsonParseException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    byte[] byteArray0 = new byte[8];\n    byteArray0[0] = (byte) 63;\n    byteArray0[1] = (byte) (-103);\n    byteArray0[2] = (byte) 111;\n    byteArray0[3] = (byte) 116;\n    byteArray0[4] = (byte) (-88);\n    byteArray0[5] = (byte) 0;\n    byteArray0[6] = (byte) 69;\n    byteArray0[7] = (byte) 118;\n    FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);\n    System.setCurrentTimeMillis((-980L));\n    System.setCurrentTimeMillis((-980L));\n    System.setCurrentTimeMillis(25L);\n    System.setCurrentTimeMillis((byte) (-88));\n    System.setCurrentTimeMillis(1L);\n    System.setCurrentTimeMillis((byte) 118);\n    JsonParser[] jsonParserArray0 = new JsonParser[6];\n    BufferRecycler bufferRecycler0 = new BufferRecycler((byte) 0, 46);\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    JsonEncoding jsonEncoding0 = JsonEncoding.UTF16_LE;\n    IOContext iOContext1 = iOContext0.withEncoding(jsonEncoding0);\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2232), 3);\n    DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);\n    StringReader stringReader0 = new StringReader(\"j0~<eDz\");\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (byte) (-88), stringReader0, objectCodec0, charsToNameCanonicalizer0);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(readerBasedJsonParser0, readerBasedJsonParser0);\n    ObjectCodec objectCodec1 = jsonParserSequence0.getCodec();\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();\n    UTF8DataInputJsonParser uTF8DataInputJsonParser0 = new UTF8DataInputJsonParser(iOContext1, (byte) (-88), dataInputStream0, objectCodec1, byteQuadsCanonicalizer0, 224);\n    jsonParserArray0[0] = (JsonParser) uTF8DataInputJsonParser0;\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_MISSING_VALUES;\n    JsonParser jsonParser0 = jsonParserSequence0.configure(jsonParser_Feature0, false);\n    jsonParserArray0[1] = jsonParser0;\n    JsonParser jsonParser1 = jsonParserSequence0.overrideStdFeatures((byte) 69, 4096);\n    jsonParserArray0[2] = jsonParser1;\n    JsonParser jsonParser2 = readerBasedJsonParser0.skipChildren();\n    jsonParserArray0[3] = jsonParser2;\n    JsonParser jsonParser3 = jsonParserSequence0.enable(jsonParser_Feature0);\n    jsonParserArray0[4] = jsonParser3;\n    DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);\n    UTF8DataInputJsonParser uTF8DataInputJsonParser1 = new UTF8DataInputJsonParser(iOContext0, (byte) 118, dataInputStream1, objectCodec1, byteQuadsCanonicalizer0, 1);\n    jsonParserArray0[5] = (JsonParser) uTF8DataInputJsonParser1;\n    JsonParserSequence jsonParserSequence1 = new JsonParserSequence(jsonParserArray0);\n    jsonParserSequence1.nextToken();\n}",
    "testName" : "test000"
  },
  "test011" : {
    "methodSignature" : "public JsonToken nextToken() throws IOException, JsonParseException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"/\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    char[] charArray0 = new char[1];\n    charArray0[0] = '3';\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0, charArray0, 3, 3, true);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.STRICT_DUPLICATE_DETECTION;\n    JsonParser jsonParser0 = readerBasedJsonParser0.enable(jsonParser_Feature0);\n    JsonParserDelegate jsonParserDelegate0 = new JsonParserDelegate(jsonParser0);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(jsonParserDelegate0, readerBasedJsonParser0);\n    jsonParserSequence0.nextToken();\n}",
    "testName" : "test011"
  },
  "test022" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    JsonParser[] jsonParserArray0 = new JsonParser[1];\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"Qm_^`doOo\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(readerBasedJsonParser0, readerBasedJsonParser0);\n    JsonParserSequence jsonParserSequence1 = JsonParserSequence.createFlattened(jsonParserSequence0, jsonParserSequence0);\n    jsonParserSequence1._nextParser = (-1559);\n    jsonParserArray0[0] = (JsonParser) jsonParserSequence1;\n    JsonParserSequence jsonParserSequence2 = new JsonParserSequence(jsonParserArray0);\n    jsonParserSequence2.close();\n}",
    "testName" : "test022"
  },
  "test033" : {
    "methodSignature" : "public static JsonParserSequence createFlattened(JsonParser first, JsonParser second)",
    "methodName" : "createFlattened",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    JsonParser[] jsonParserArray0 = new JsonParser[1];\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"Qm_^`doOo\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(readerBasedJsonParser0, readerBasedJsonParser0);\n    JsonParserSequence jsonParserSequence1 = JsonParserSequence.createFlattened(jsonParserSequence0, jsonParserSequence0);\n    jsonParserArray0[0] = (JsonParser) jsonParserSequence1;\n    stringReader0.reset();\n    jsonParserSequence1._nextParser = 81;\n    JsonParserSequence jsonParserSequence2 = new JsonParserSequence(jsonParserArray0);\n    jsonParserSequence2.close();\n    jsonParserSequence0.nextToken();\n    JsonParserSequence.createFlattened(jsonParserSequence2, jsonParserArray0[0]);\n}",
    "testName" : "test033"
  },
  "test044" : {
    "methodSignature" : "public static JsonParserSequence createFlattened(JsonParser first, JsonParser second)",
    "methodName" : "createFlattened",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    byteArray0[0] = (byte) (-86);\n    byteArray0[1] = (byte) 1;\n    byteArray0[2] = (byte) 75;\n    byteArray0[3] = (byte) 25;\n    byteArray0[4] = (byte) 50;\n    byteArray0[5] = (byte) (-1);\n    byteArray0[6] = (byte) (-122);\n    FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);\n    JsonParser[] jsonParserArray0 = new JsonParser[1];\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"Qm_^`doOo\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(readerBasedJsonParser0, readerBasedJsonParser0);\n    JsonParserSequence jsonParserSequence1 = (JsonParserSequence) jsonParserSequence0.skipChildren();\n    jsonParserSequence1._nextParser = (-2023);\n    jsonParserArray0[0] = (JsonParser) jsonParserSequence1;\n    JsonParserSequence.createFlattened(jsonParserSequence0, jsonParserArray0[0]);\n}",
    "testName" : "test044"
  },
  "test055" : {
    "methodSignature" : "public int containedParsersCount()",
    "methodName" : "containedParsersCount",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    System.setCurrentTimeMillis((-2288L));\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(filteringParserDelegate0, (JsonParser) null);\n    jsonParserSequence0._nextParser = 4710;\n    JsonParserSequence jsonParserSequence1 = JsonParserSequence.createFlattened(jsonParserSequence0, filteringParserDelegate0);\n    JsonParserSequence jsonParserSequence2 = JsonParserSequence.createFlattened(filteringParserDelegate0, jsonParserSequence1);\n    jsonParserSequence1.containedParsersCount();\n}",
    "testName" : "test055"
  },
  "test0912" : {
    "methodSignature" : "public JsonToken nextToken() throws IOException, JsonParseException",
    "methodName" : "nextToken",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0912() throws Throwable {\n    LinkedList<JsonParser> linkedList0 = new LinkedList<JsonParser>();\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"k-T<%\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    CharsToNameCanonicalizer charsToNameCanonicalizer1 = charsToNameCanonicalizer0.makeChild(20);\n    char[] charArray0 = new char[0];\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1658), stringReader0, (ObjectCodec) null, charsToNameCanonicalizer1, charArray0, 1, 1, false);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(readerBasedJsonParser0, (JsonParser) null);\n    jsonParserSequence0.nextToken();\n}",
    "testName" : "test0912"
  },
  "test056" : {
    "methodSignature" : "public int containedParsersCount()",
    "methodName" : "containedParsersCount",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056() throws Throwable {\n    System.setCurrentTimeMillis((-2288L));\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter0, false, false);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(filteringParserDelegate0, (JsonParser) null);\n    jsonParserSequence0._nextParser = 4710;\n    JsonParserSequence jsonParserSequence1 = JsonParserSequence.createFlattened(jsonParserSequence0, filteringParserDelegate0);\n    JsonParserSequence jsonParserSequence2 = JsonParserSequence.createFlattened(filteringParserDelegate0, jsonParserSequence1);\n    jsonParserSequence2.containedParsersCount();\n}",
    "testName" : "test056"
  },
  "test067" : {
    "methodSignature" : "public int containedParsersCount()",
    "methodName" : "containedParsersCount",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067() throws Throwable {\n    JsonParser[] jsonParserArray0 = new JsonParser[1];\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"Qm_^`doOo\");\n    stringReader0.reset();\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(readerBasedJsonParser0, readerBasedJsonParser0);\n    JsonParser jsonParser0 = jsonParserSequence0.skipChildren();\n    jsonParserArray0[0] = jsonParser0;\n    JsonParserSequence jsonParserSequence1 = JsonParserSequence.createFlattened(jsonParserSequence0, jsonParserArray0[0]);\n    jsonParserSequence1.close();\n    jsonParserSequence0.nextToken();\n    JsonParserSequence jsonParserSequence2 = JsonParserSequence.createFlattened(jsonParserSequence0, jsonParserSequence1);\n    jsonParserSequence1.containedParsersCount();\n}",
    "testName" : "test067"
  },
  "test1518" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1518() throws Throwable {\n    JsonParser jsonParser0 = null;\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened((JsonParser) null, (JsonParser) null);\n    jsonParserSequence0.close();\n}",
    "testName" : "test1518"
  },
  "test1821" : {
    "methodSignature" : "public int getFeatureMask()",
    "methodName" : "getFeatureMask",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1821() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"Js#\");\n    JsonParser[] jsonParserArray0 = new JsonParser[3];\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    CharsToNameCanonicalizer charsToNameCanonicalizer1 = charsToNameCanonicalizer0.makeChild(0);\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1391), stringReader0, objectCodec0, charsToNameCanonicalizer1, (char[]) null, 33, 53, true);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    TokenFilter tokenFilter1 = tokenFilter0.filterStartArray();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter1, true, true);\n    jsonParserArray0[0] = (JsonParser) filteringParserDelegate0;\n    ObjectCodec objectCodec1 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ReaderBasedJsonParser readerBasedJsonParser1 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec1, charsToNameCanonicalizer0, (char[]) null, 45, 53, true);\n    jsonParserArray0[1] = (JsonParser) readerBasedJsonParser1;\n    byte[] byteArray0 = new byte[3];\n    byteArray0[0] = (byte) 45;\n    byteArray0[1] = (byte) 0;\n    byteArray0[2] = (byte) 0;\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);\n    ObjectCodec objectCodec2 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(1);\n    UTF8DataInputJsonParser uTF8DataInputJsonParser0 = new UTF8DataInputJsonParser(iOContext0, 0, dataInputStream0, objectCodec2, byteQuadsCanonicalizer1, 3);\n    jsonParserArray0[2] = (JsonParser) uTF8DataInputJsonParser0;\n    JsonParserSequence jsonParserSequence0 = new JsonParserSequence(jsonParserArray0);\n    ObjectCodec objectCodec3 = jsonParserSequence0.getCodec();\n    CharsToNameCanonicalizer charsToNameCanonicalizer2 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser2 = new ReaderBasedJsonParser(iOContext0, (-2810), stringReader0, objectCodec3, charsToNameCanonicalizer2);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_YAML_COMMENTS;\n    JsonParser jsonParser0 = readerBasedJsonParser2.disable(jsonParser_Feature0);\n    JsonParserSequence jsonParserSequence1 = JsonParserSequence.createFlattened(jsonParser0, readerBasedJsonParser0);\n    JsonParserSequence jsonParserSequence2 = JsonParserSequence.createFlattened(jsonParserSequence1, readerBasedJsonParser1);\n    jsonParserSequence1.getFeatureMask();\n}",
    "testName" : "test1821"
  },
  "test0810" : {
    "methodSignature" : "protected boolean switchToNext()",
    "methodName" : "switchToNext",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0810() throws Throwable {\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    TokenFilter tokenFilter1 = tokenFilter0.filterStartArray();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter1, false, false);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(filteringParserDelegate0, filteringParserDelegate0);\n    boolean boolean0 = jsonParserSequence0.switchToNext();\n}",
    "testName" : "test0810"
  },
  "test1316" : {
    "methodSignature" : "public int nextIntValue(int defaultValue) throws IOException",
    "methodName" : "nextIntValue",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1316() throws Throwable {\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened((JsonParser) null, (JsonParser) null);\n    Class<ReaderBasedJsonParser> class0 = ReaderBasedJsonParser.class;\n    RequestPayload requestPayload0 = null;\n    jsonParserSequence0.nextIntValue((-1134));\n}",
    "testName" : "test1316"
  },
  "test1822" : {
    "methodSignature" : "public int containedParsersCount()",
    "methodName" : "containedParsersCount",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1822() throws Throwable {\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    StringReader stringReader0 = new StringReader(\"Js#\");\n    JsonParser[] jsonParserArray0 = new JsonParser[3];\n    ObjectCodec objectCodec0 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    CharsToNameCanonicalizer charsToNameCanonicalizer1 = charsToNameCanonicalizer0.makeChild(0);\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, (-1391), stringReader0, objectCodec0, charsToNameCanonicalizer1, (char[]) null, 33, 53, true);\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    TokenFilter tokenFilter1 = tokenFilter0.filterStartArray();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(readerBasedJsonParser0, tokenFilter1, true, true);\n    jsonParserArray0[0] = (JsonParser) filteringParserDelegate0;\n    ObjectCodec objectCodec1 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ReaderBasedJsonParser readerBasedJsonParser1 = new ReaderBasedJsonParser(iOContext0, 3, stringReader0, objectCodec1, charsToNameCanonicalizer0, (char[]) null, 45, 53, true);\n    jsonParserArray0[1] = (JsonParser) readerBasedJsonParser1;\n    byte[] byteArray0 = new byte[3];\n    byteArray0[0] = (byte) 45;\n    byteArray0[1] = (byte) 0;\n    byteArray0[2] = (byte) 0;\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);\n    ObjectCodec objectCodec2 = mock(ObjectCodec.class, new ViolatedAssumptionAnswer());\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();\n    ByteQuadsCanonicalizer byteQuadsCanonicalizer1 = byteQuadsCanonicalizer0.makeChild(1);\n    UTF8DataInputJsonParser uTF8DataInputJsonParser0 = new UTF8DataInputJsonParser(iOContext0, 0, dataInputStream0, objectCodec2, byteQuadsCanonicalizer1, 3);\n    jsonParserArray0[2] = (JsonParser) uTF8DataInputJsonParser0;\n    JsonParserSequence jsonParserSequence0 = new JsonParserSequence(jsonParserArray0);\n    ObjectCodec objectCodec3 = jsonParserSequence0.getCodec();\n    CharsToNameCanonicalizer charsToNameCanonicalizer2 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser2 = new ReaderBasedJsonParser(iOContext0, (-2810), stringReader0, objectCodec3, charsToNameCanonicalizer2);\n    JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_YAML_COMMENTS;\n    JsonParser jsonParser0 = readerBasedJsonParser2.disable(jsonParser_Feature0);\n    JsonParserSequence jsonParserSequence1 = JsonParserSequence.createFlattened(jsonParser0, readerBasedJsonParser0);\n    JsonParserSequence jsonParserSequence2 = JsonParserSequence.createFlattened(jsonParserSequence1, readerBasedJsonParser1);\n    jsonParserSequence2.containedParsersCount();\n}",
    "testName" : "test1822"
  },
  "test2327" : {
    "methodSignature" : "public int containedParsersCount()",
    "methodName" : "containedParsersCount",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2327() throws Throwable {\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened((JsonParser) null, (JsonParser) null);\n    int int0 = jsonParserSequence0.containedParsersCount();\n}",
    "testName" : "test2327"
  },
  "test0811" : {
    "methodSignature" : "protected boolean switchToNext()",
    "methodName" : "switchToNext",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0811() throws Throwable {\n    TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;\n    TokenFilter tokenFilter1 = tokenFilter0.filterStartArray();\n    FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate((JsonParser) null, tokenFilter1, false, false);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(filteringParserDelegate0, filteringParserDelegate0);\n    boolean boolean0 = jsonParserSequence0.switchToNext();\n    boolean boolean1 = jsonParserSequence0.switchToNext();\n}",
    "testName" : "test0811"
  },
  "test1417" : {
    "methodSignature" : "protected void addFlattenedActiveParsers(List<JsonParser> result)",
    "methodName" : "addFlattenedActiveParsers",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1417() throws Throwable {\n    JsonParser jsonParser0 = null;\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened((JsonParser) null, (JsonParser) null);\n    Class<FilteringParserDelegate> class0 = FilteringParserDelegate.class;\n    jsonParserSequence0.addFlattenedActiveParsers((List<JsonParser>) null);\n}",
    "testName" : "test1417"
  },
  "test1923" : {
    "methodSignature" : "public ObjectCodec getCodec()",
    "methodName" : "getCodec",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1923() throws Throwable {\n    JsonParser[] jsonParserArray0 = new JsonParser[5];\n    int int0 = 0;\n    BufferRecycler bufferRecycler0 = new BufferRecycler(0, 0);\n    boolean boolean0 = true;\n    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);\n    JsonEncoding jsonEncoding0 = JsonEncoding.UTF16_BE;\n    iOContext0.withEncoding(jsonEncoding0);\n    Reader reader0 = null;\n    JsonParserSequence jsonParserSequence0 = new JsonParserSequence(jsonParserArray0);\n    JsonParserSequence jsonParserSequence1 = JsonParserSequence.createFlattened(jsonParserSequence0, jsonParserSequence0);\n    jsonParserSequence1.getCodec();\n}",
    "testName" : "test1923"
  },
  "test2428" : {
    "methodSignature" : "public int containedParsersCount()",
    "methodName" : "containedParsersCount",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2428() throws Throwable {\n    JsonParser[] jsonParserArray0 = new JsonParser[1];\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"Qm_^`doOo\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 9, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(readerBasedJsonParser0, readerBasedJsonParser0);\n    JsonParserSequence jsonParserSequence1 = JsonParserSequence.createFlattened(jsonParserSequence0, jsonParserSequence0);\n    jsonParserArray0[0] = (JsonParser) jsonParserSequence0;\n    JsonParserSequence jsonParserSequence2 = new JsonParserSequence(jsonParserArray0);\n    jsonParserSequence2.close();\n    jsonParserSequence0.nextToken();\n    JsonParserSequence.createFlattened(jsonParserSequence2, readerBasedJsonParser0);\n    JsonParserSequence jsonParserSequence3 = JsonParserSequence.createFlattened(readerBasedJsonParser0, jsonParserSequence1);\n    jsonParserSequence3.nextToken();\n    int int0 = jsonParserSequence2.containedParsersCount();\n}",
    "testName" : "test2428"
  },
  "test068" : {
    "methodSignature" : "public int containedParsersCount()",
    "methodName" : "containedParsersCount",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068() throws Throwable {\n    JsonParser[] jsonParserArray0 = new JsonParser[1];\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"Qm_^`doOo\");\n    stringReader0.reset();\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(readerBasedJsonParser0, readerBasedJsonParser0);\n    JsonParser jsonParser0 = jsonParserSequence0.skipChildren();\n    jsonParserArray0[0] = jsonParser0;\n    JsonParserSequence jsonParserSequence1 = JsonParserSequence.createFlattened(jsonParserSequence0, jsonParserArray0[0]);\n    jsonParserSequence1.close();\n    jsonParserSequence0.nextToken();\n    JsonParserSequence jsonParserSequence2 = JsonParserSequence.createFlattened(jsonParserSequence0, jsonParserSequence1);\n    jsonParserSequence2.containedParsersCount();\n}",
    "testName" : "test068"
  },
  "test079" : {
    "methodSignature" : "public int getFormatFeatures()",
    "methodName" : "getFormatFeatures",
    "className" : "com.fasterxml.jackson.core.util.JsonParserSequence",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079() throws Throwable {\n    JsonParser[] jsonParserArray0 = new JsonParser[1];\n    BufferRecycler bufferRecycler0 = new BufferRecycler();\n    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);\n    StringReader stringReader0 = new StringReader(\"Qm_^`doOo\");\n    CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();\n    ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, stringReader0, (ObjectCodec) null, charsToNameCanonicalizer0);\n    JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(readerBasedJsonParser0, readerBasedJsonParser0);\n    JsonParser jsonParser0 = jsonParserSequence0.skipChildren();\n    jsonParserArray0[0] = jsonParser0;\n    JsonParserSequence jsonParserSequence1 = new JsonParserSequence(jsonParserArray0);\n    jsonParserSequence1.close();\n    jsonParserSequence1.getFormatFeatures();\n}",
    "testName" : "test079"
  }
}