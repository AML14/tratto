{
  "test1010" : {
    "methodSignature" : "public Iterator iterate(EvalContext context)",
    "methodName" : "iterate",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Expression[] expressionArray0 = new Expression[0];\n    CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);\n    CoreOperationDivide coreOperationDivide0 = new CoreOperationDivide(coreOperationAnd0, coreOperationAnd0);\n    CoreOperationMultiply coreOperationMultiply0 = new CoreOperationMultiply(coreOperationDivide0, coreOperationAnd0);\n    CoreOperationLessThan coreOperationLessThan0 = new CoreOperationLessThan(coreOperationMultiply0, coreOperationDivide0);\n    CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(coreOperationAnd0, coreOperationLessThan0);\n    CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual0 = new CoreOperationGreaterThanOrEqual(coreOperationGreaterThan0, coreOperationDivide0);\n    Iterator iterator0 = coreOperationGreaterThanOrEqual0.iterate((EvalContext) null);\n}",
    "testName" : "test1010"
  },
  "test011" : {
    "methodSignature" : "protected final int getPrecedence()",
    "methodName" : "getPrecedence",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Constant constant0 = new Constant((Number) null);\n    CoreOperationSubtract coreOperationSubtract0 = new CoreOperationSubtract(constant0, constant0);\n    CoreOperationMultiply coreOperationMultiply0 = new CoreOperationMultiply(coreOperationSubtract0, coreOperationSubtract0);\n    CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(coreOperationMultiply0, coreOperationMultiply0);\n    int int0 = coreOperationGreaterThan0.getPrecedence();\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public final Object computeValue(EvalContext context)",
    "methodName" : "computeValue",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((JXPathContext) null, (Object) \".1Ak)=pVPJ;z|U+dod\");\n    BasicVariables basicVariables0 = new BasicVariables();\n    Expression[] expressionArray0 = new Expression[3];\n    CoreFunction coreFunction0 = new CoreFunction(22, expressionArray0);\n    CoreOperationMultiply coreOperationMultiply0 = new CoreOperationMultiply(coreFunction0, coreFunction0);\n    expressionArray0[0] = (Expression) coreOperationMultiply0;\n    NodeTypeTest nodeTypeTest0 = new NodeTypeTest(22);\n    QName qName0 = new QName(\"jsO\\u0002X209)EB\");\n    CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);\n    CoreOperationLessThan coreOperationLessThan0 = new CoreOperationLessThan(coreOperationOr0, expressionArray0[1]);\n    VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);\n    BeanPointer beanPointer0 = (BeanPointer) NodePointer.newChildNodePointer(variablePointer0, qName0, expressionArray0[0]);\n    RootContext rootContext0 = new RootContext(jXPathContextReferenceImpl0, beanPointer0);\n    SelfContext selfContext0 = new SelfContext(rootContext0, nodeTypeTest0);\n    coreOperationLessThan0.computeValue(selfContext0);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public final Object computeValue(EvalContext context)",
    "methodName" : "computeValue",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Expression[] expressionArray0 = new Expression[0];\n    CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);\n    CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual0 = new CoreOperationGreaterThanOrEqual(coreOperationAdd0, coreOperationAdd0);\n    coreOperationGreaterThanOrEqual0.args = expressionArray0;\n    CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(coreOperationGreaterThanOrEqual0, coreOperationGreaterThanOrEqual0);\n    coreOperationGreaterThan0.computeValue((EvalContext) null);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public final Object computeValue(EvalContext context)",
    "methodName" : "computeValue",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    QName qName0 = new QName(\"org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression\");\n    VariableReference variableReference0 = new VariableReference(qName0);\n    CoreOperationLessThan coreOperationLessThan0 = new CoreOperationLessThan(variableReference0, variableReference0);\n    SelfContext selfContext0 = new SelfContext((EvalContext) null, (NodeTest) null);\n    JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) selfContext0);\n    InitialContext initialContext0 = (InitialContext) jXPathContextReferenceImpl0.getAbsoluteRootContext();\n    RootContext rootContext0 = initialContext0.getRootContext();\n    Boolean boolean0 = (Boolean) coreOperationLessThan0.computeValue(rootContext0);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public final Object computeValue(EvalContext context)",
    "methodName" : "computeValue",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Expression[] expressionArray0 = new Expression[0];\n    CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);\n    CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual(coreOperationAdd0, coreOperationAdd0);\n    Object object0 = coreOperationLessThanOrEqual0.computeValue((EvalContext) null);\n}",
    "testName" : "test099"
  },
  "test000" : {
    "methodSignature" : "protected final boolean isSymmetric()",
    "methodName" : "isSymmetric",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual((Expression) null, (Expression) null);\n    CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual0 = new CoreOperationGreaterThanOrEqual(coreOperationNotEqual0, coreOperationNotEqual0);\n    boolean boolean0 = coreOperationGreaterThanOrEqual0.isSymmetric();\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public final Object computeValue(EvalContext context)",
    "methodName" : "computeValue",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Expression[] expressionArray0 = new Expression[4];\n    CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);\n    expressionArray0[0] = (Expression) coreOperationAnd0;\n    CoreOperationMultiply coreOperationMultiply0 = new CoreOperationMultiply(expressionArray0[0], coreOperationAnd0);\n    CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(coreOperationAnd0, coreOperationMultiply0);\n    // Undeclared exception!\n    coreOperationGreaterThan0.computeValue((EvalContext) null);\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public final Object computeValue(EvalContext context)",
    "methodName" : "computeValue",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual0 = new CoreOperationGreaterThanOrEqual((Expression) null, (Expression) null);\n    QName qName0 = new QName(\"W\");\n    NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);\n    AncestorContext ancestorContext0 = new AncestorContext((EvalContext) null, true, nodeNameTest0);\n    coreOperationGreaterThanOrEqual0.computeValue(ancestorContext0);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public final Object computeValue(EvalContext context)",
    "methodName" : "computeValue",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Constant constant0 = new Constant(\"org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression\");\n    CoreOperationMod coreOperationMod0 = new CoreOperationMod(constant0, constant0);\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreOperationMod0, coreOperationMod0);\n    CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual(coreOperationNotEqual0, coreOperationMod0);\n    coreOperationLessThanOrEqual0.computeValue((EvalContext) null);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public Object selectSingleNode(String xpath)",
    "methodName" : "selectSingleNode",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    JXPathContext jXPathContext0 = JXPathContext.newContext((JXPathContext) null, (Object) \".1Ak)=pVPJ;z|U+dod\");\n    Object object0 = jXPathContext0.selectSingleNode(\"/>g\");\n}",
    "testName" : "test088"
  }
}