{
  "test1212" : {
    "methodSignature" : "public Iterator iteratePointers(EvalContext context)",
    "methodName" : "iteratePointers",
    "className" : "org.apache.commons.jxpath.ri.compiler.Expression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Double double0 = new Double(1.0);\n    Constant constant0 = new Constant(double0);\n    constant0.iteratePointers((EvalContext) null);\n}",
    "testName" : "test1212"
  },
  "test1313" : {
    "methodSignature" : "public boolean isContextDependent()",
    "methodName" : "isContextDependent",
    "className" : "org.apache.commons.jxpath.ri.compiler.Expression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Constant constant0 = new Constant(\"\");\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(constant0, constant0);\n    boolean boolean0 = coreOperationNotEqual0.isContextDependent();\n    boolean boolean1 = coreOperationNotEqual0.isContextDependent();\n}",
    "testName" : "test1313"
  },
  "test1010" : {
    "methodSignature" : "public boolean computeContextDependent()",
    "methodName" : "computeContextDependent",
    "className" : "org.apache.commons.jxpath.ri.compiler.Expression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Expression[] expressionArray0 = new Expression[6];\n    Constant constant0 = new Constant(\"org.apache.commons.jxpath.ri.compiler.Expression$ValueIterator\");\n    CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);\n    CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual(coreOperationUnion0, constant0);\n    coreOperationEqual0.computeContextDependent();\n}",
    "testName" : "test1010"
  },
  "test1111" : {
    "methodSignature" : "public Object compute(EvalContext context)",
    "methodName" : "compute",
    "className" : "org.apache.commons.jxpath.ri.compiler.Expression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual0 = new CoreOperationGreaterThanOrEqual((Expression) null, (Expression) null);\n    AttributeContext attributeContext0 = new AttributeContext((EvalContext) null, (NodeTest) null);\n    coreOperationGreaterThanOrEqual0.compute(attributeContext0);\n}",
    "testName" : "test1111"
  },
  "test022" : {
    "methodSignature" : "public boolean isContextDependent()",
    "methodName" : "isContextDependent",
    "className" : "org.apache.commons.jxpath.ri.compiler.Expression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Float float0 = new Float(2250.7079);\n    Constant constant0 = new Constant(float0);\n    NameAttributeTest nameAttributeTest0 = new NameAttributeTest(constant0, constant0);\n    boolean boolean0 = nameAttributeTest0.isContextDependent();\n}",
    "testName" : "test022"
  },
  "test033" : {
    "methodSignature" : "public abstract boolean computeContextDependent()",
    "methodName" : "computeContextDependent",
    "className" : "org.apache.commons.jxpath.ri.compiler.Expression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Expression[] expressionArray0 = new Expression[7];\n    QName qName0 = new QName(\"\", \"\");\n    ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);\n    expressionArray0[1] = (Expression) extensionFunction0;\n    boolean boolean0 = expressionArray0[1].computeContextDependent();\n}",
    "testName" : "test033"
  },
  "test044" : {
    "methodSignature" : "public abstract boolean computeContextDependent()",
    "methodName" : "computeContextDependent",
    "className" : "org.apache.commons.jxpath.ri.compiler.Expression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Expression[] expressionArray0 = new Expression[6];\n    Short short0 = new Short((short) 46);\n    Constant constant0 = new Constant(short0);\n    expressionArray0[0] = (Expression) constant0;\n    boolean boolean0 = expressionArray0[0].computeContextDependent();\n}",
    "testName" : "test044"
  },
  "test055" : {
    "methodSignature" : "public abstract Object compute(EvalContext context)",
    "methodName" : "compute",
    "className" : "org.apache.commons.jxpath.ri.compiler.Expression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Expression[] expressionArray0 = new Expression[4];\n    CoreFunction coreFunction0 = new CoreFunction((-571), expressionArray0);\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreFunction0, coreFunction0);\n    CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual(coreOperationNotEqual0, coreOperationNotEqual0);\n    expressionArray0[3] = (Expression) coreOperationEqual0;\n    Object object0 = expressionArray0[3].compute((EvalContext) null);\n}",
    "testName" : "test055"
  },
  "test066" : {
    "methodSignature" : "public Iterator iteratePointers(EvalContext context)",
    "methodName" : "iteratePointers",
    "className" : "org.apache.commons.jxpath.ri.compiler.Expression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Expression[] expressionArray0 = new Expression[1];\n    QName qName0 = new QName(\"No such function: \");\n    ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);\n    CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual(extensionFunction0, extensionFunction0);\n    expressionArray0[0] = (Expression) coreOperationLessThanOrEqual0;\n    coreOperationLessThanOrEqual0.iteratePointers((EvalContext) null);\n}",
    "testName" : "test066"
  },
  "test077" : {
    "methodSignature" : "public Iterator iterate(EvalContext context)",
    "methodName" : "iterate",
    "className" : "org.apache.commons.jxpath.ri.compiler.Expression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    CoreOperationOr coreOperationOr0 = new CoreOperationOr((Expression[]) null);\n    NodeTypeTest nodeTypeTest0 = new NodeTypeTest(0);\n    AncestorContext ancestorContext0 = new AncestorContext((EvalContext) null, true, nodeTypeTest0);\n    coreOperationOr0.iterate(ancestorContext0);\n}",
    "testName" : "test077"
  },
  "test088" : {
    "methodSignature" : "public boolean isContextDependent()",
    "methodName" : "isContextDependent",
    "className" : "org.apache.commons.jxpath.ri.compiler.Expression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan((Expression) null, (Expression) null);\n    coreOperationGreaterThan0.isContextDependent();\n}",
    "testName" : "test088"
  },
  "test099" : {
    "methodSignature" : "public abstract Object computeValue(EvalContext context)",
    "methodName" : "computeValue",
    "className" : "org.apache.commons.jxpath.ri.compiler.Expression",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Expression[] expressionArray0 = new Expression[2];\n    CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);\n    expressionArray0[1] = (Expression) coreOperationAnd0;\n    EvalContext evalContext0 = null;\n    expressionArray0[1].computeValue(evalContext0);\n}",
    "testName" : "test099"
  }
}