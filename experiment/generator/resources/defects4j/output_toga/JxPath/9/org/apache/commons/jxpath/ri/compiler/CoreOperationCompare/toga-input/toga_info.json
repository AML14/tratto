{
  "test2324" : {
    "methodSignature" : "public int getPosition()",
    "methodName" : "getPosition",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2324() throws Throwable {\n    Expression[] expressionArray0 = new Expression[4];\n    CoreFunction coreFunction0 = new CoreFunction((-2134), expressionArray0);\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreFunction0, coreFunction0);\n    CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);\n    expressionArray0[3] = (Expression) coreOperationUnion0;\n    CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);\n    NameAttributeTest nameAttributeTest0 = new NameAttributeTest(coreOperationAnd0, coreOperationNotEqual0);\n    JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, expressionArray0[3], (Pointer) null);\n    EvalContext evalContext0 = jXPathContextReferenceImpl0.getAbsoluteRootContext();\n    Object object0 = new Object();\n    nameAttributeTest0.contains(evalContext0, object0);\n    InitialContext initialContext0 = new InitialContext(evalContext0);\n    evalContext0.getPosition();\n}",
    "testName" : "test2324"
  },
  "test1213" : {
    "methodSignature" : "protected boolean equal(Object l, Object r)",
    "methodName" : "equal",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1213() throws Throwable {\n    Expression[] expressionArray0 = new Expression[9];\n    Constant constant0 = new Constant(\"i%P\");\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(constant0, constant0);\n    CoreFunction coreFunction0 = new CoreFunction(0, expressionArray0);\n    expressionArray0[2] = (Expression) coreFunction0;\n    CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);\n    NameAttributeTest nameAttributeTest0 = new NameAttributeTest(coreOperationUnion0, coreOperationNotEqual0);\n    // Undeclared exception!\n    nameAttributeTest0.equal(coreFunction0, \"i%P\");\n}",
    "testName" : "test1213"
  },
  "test1314" : {
    "methodSignature" : "protected boolean equal(Object l, Object r)",
    "methodName" : "equal",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1314() throws Throwable {\n    Double double0 = Expression.ZERO;\n    Constant constant0 = new Constant(double0);\n    CoreOperationDivide coreOperationDivide0 = new CoreOperationDivide(constant0, constant0);\n    CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual0 = new CoreOperationGreaterThanOrEqual(coreOperationDivide0, coreOperationDivide0);\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreOperationGreaterThanOrEqual0, coreOperationDivide0);\n    Short short0 = new Short((short) 2596);\n    JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) short0);\n    QName qName0 = new QName(\"2cU\", \"5Q&/~w{EeY +x&I\");\n    Locale locale0 = Locale.GERMANY;\n    BeanPointer beanPointer0 = (BeanPointer) NodePointer.newNodePointer(qName0, \"5Q&/~w{EeY +x&I\", locale0);\n    RootContext rootContext0 = new RootContext(jXPathContextReferenceImpl0, beanPointer0);\n    coreOperationNotEqual0.equal(rootContext0, double0);\n}",
    "testName" : "test1314"
  },
  "test2325" : {
    "methodSignature" : "protected boolean findMatch(Iterator lit, Iterator rit)",
    "methodName" : "findMatch",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2325() throws Throwable {\n    Expression[] expressionArray0 = new Expression[4];\n    CoreFunction coreFunction0 = new CoreFunction((-2134), expressionArray0);\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreFunction0, coreFunction0);\n    CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);\n    expressionArray0[3] = (Expression) coreOperationUnion0;\n    CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);\n    NameAttributeTest nameAttributeTest0 = new NameAttributeTest(coreOperationAnd0, coreOperationNotEqual0);\n    JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, expressionArray0[3], (Pointer) null);\n    EvalContext evalContext0 = jXPathContextReferenceImpl0.getAbsoluteRootContext();\n    Object object0 = new Object();\n    nameAttributeTest0.contains(evalContext0, object0);\n    InitialContext initialContext0 = new InitialContext(evalContext0);\n    boolean boolean0 = coreOperationNotEqual0.findMatch(evalContext0, initialContext0);\n}",
    "testName" : "test2325"
  },
  "test2122" : {
    "methodSignature" : "public Object computeValue(org.apache.commons.jxpath.ri.EvalContext context)",
    "methodName" : "computeValue",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2122() throws Throwable {\n    Expression[] expressionArray0 = new Expression[6];\n    CoreFunction coreFunction0 = new CoreFunction(0, expressionArray0);\n    expressionArray0[0] = (Expression) coreFunction0;\n    CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual0 = new CoreOperationGreaterThanOrEqual(expressionArray0[0], expressionArray0[0]);\n    expressionArray0[1] = (Expression) coreOperationGreaterThanOrEqual0;\n    CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);\n    CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);\n    NameAttributeTest nameAttributeTest0 = new NameAttributeTest(coreOperationOr0, coreOperationAnd0);\n    Object object0 = nameAttributeTest0.computeValue((EvalContext) null);\n}",
    "testName" : "test2122"
  },
  "test1011" : {
    "methodSignature" : "protected boolean equal(EvalContext context, Expression left, Expression right)",
    "methodName" : "equal",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1011() throws Throwable {\n    Expression[] expressionArray0 = new Expression[0];\n    CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);\n    CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual(coreOperationAnd0, coreOperationAnd0);\n    Constant constant0 = new Constant(\"org.apache.commons.jxpath.ri.compiler.CoreOperationCompare\");\n    CoreOperationMod coreOperationMod0 = new CoreOperationMod(constant0, coreOperationAnd0);\n    coreOperationEqual0.equal((EvalContext) null, coreOperationAnd0, coreOperationMod0);\n}",
    "testName" : "test1011"
  },
  "test2223" : {
    "methodSignature" : "protected boolean equal(Object l, Object r)",
    "methodName" : "equal",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2223() throws Throwable {\n    QName qName0 = new QName(\"G8;4l0Xqg\");\n    VariableReference variableReference0 = new VariableReference(qName0);\n    NameAttributeTest nameAttributeTest0 = new NameAttributeTest(variableReference0, variableReference0);\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(nameAttributeTest0, variableReference0);\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, coreOperationNotEqual0, locale0);\n    JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, (Object) null, nodePointer0);\n    RootContext rootContext0 = new RootContext(jXPathContextReferenceImpl0, nodePointer0);\n    Object object0 = variableReference0.compute(rootContext0);\n    BasicVariables basicVariables0 = new BasicVariables();\n    VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);\n    coreOperationNotEqual0.equal(object0, variablePointer0);\n}",
    "testName" : "test2223"
  },
  "test1112" : {
    "methodSignature" : "protected boolean equal(Object l, Object r)",
    "methodName" : "equal",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1112() throws Throwable {\n    Byte byte0 = new Byte((byte) 119);\n    Constant constant0 = new Constant(byte0);\n    NameAttributeTest nameAttributeTest0 = new NameAttributeTest(constant0, constant0);\n    QName qName0 = new QName(\"k|0.EZ[#$czYu\", \"k|0.EZ[#$czYu\");\n    VariablePointer variablePointer0 = new VariablePointer(qName0);\n    nameAttributeTest0.equal(byte0, variablePointer0);\n}",
    "testName" : "test1112"
  },
  "test011" : {
    "methodSignature" : "protected boolean isSymmetric()",
    "methodName" : "isSymmetric",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Constant constant0 = new Constant((String) null);\n    CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual(constant0, constant0);\n    CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(coreOperationLessThanOrEqual0, coreOperationLessThanOrEqual0);\n    CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual(coreOperationGreaterThan0, constant0);\n    boolean boolean0 = coreOperationEqual0.isSymmetric();\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "protected boolean equal(Object l, Object r)",
    "methodName" : "equal",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    NameAttributeTest nameAttributeTest0 = new NameAttributeTest((Expression) null, (Expression) null);\n    boolean boolean0 = nameAttributeTest0.equal((Object) null, (Object) null);\n}",
    "testName" : "test033"
  },
  "test2629" : {
    "methodSignature" : "public Object compute(EvalContext context)",
    "methodName" : "compute",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2629() throws Throwable {\n    QName qName0 = new QName(\"G8;4l0Xqg\");\n    VariableReference variableReference0 = new VariableReference(qName0);\n    NameAttributeTest nameAttributeTest0 = new NameAttributeTest(variableReference0, variableReference0);\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(nameAttributeTest0, variableReference0);\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, coreOperationNotEqual0, locale0);\n    JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, (Object) null, nodePointer0);\n    RootContext rootContext0 = new RootContext(jXPathContextReferenceImpl0, nodePointer0);\n    Object object0 = coreOperationNotEqual0.compute(rootContext0);\n}",
    "testName" : "test2629"
  },
  "test056" : {
    "methodSignature" : "protected boolean findMatch(Iterator lit, Iterator rit)",
    "methodName" : "findMatch",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056() throws Throwable {\n    Expression[] expressionArray0 = new Expression[4];\n    CoreFunction coreFunction0 = new CoreFunction((-2134), expressionArray0);\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreFunction0, coreFunction0);\n    RootContext rootContext0 = new RootContext((JXPathContextReferenceImpl) null, (NodePointer) null);\n    JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, expressionArray0[3], (Pointer) null);\n    EvalContext evalContext0 = jXPathContextReferenceImpl0.getAbsoluteRootContext();\n    coreOperationNotEqual0.findMatch(evalContext0, rootContext0);\n}",
    "testName" : "test056"
  },
  "test078" : {
    "methodSignature" : "protected boolean equal(EvalContext context, Expression left, Expression right)",
    "methodName" : "equal",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078() throws Throwable {\n    Expression[] expressionArray0 = new Expression[0];\n    CoreFunction coreFunction0 = new CoreFunction(13, expressionArray0);\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreFunction0, coreFunction0);\n    NameAttributeTest nameAttributeTest0 = new NameAttributeTest(coreOperationNotEqual0, coreFunction0);\n    Step[] stepArray0 = new Step[7];\n    NodeTypeTest nodeTypeTest0 = new NodeTypeTest(2);\n    ExpressionPath expressionPath0 = new ExpressionPath(coreFunction0, expressionArray0, stepArray0);\n    SelfContext selfContext0 = new SelfContext((EvalContext) null, nodeTypeTest0);\n    EvalContext evalContext0 = expressionPath0.createContextForStep(selfContext0, 2, nodeTypeTest0);\n    coreOperationNotEqual0.equal(evalContext0, coreFunction0, nameAttributeTest0);\n}",
    "testName" : "test078"
  },
  "test1617" : {
    "methodSignature" : "protected boolean contains(Iterator it, Object value)",
    "methodName" : "contains",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1617() throws Throwable {\n    CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual0 = new CoreOperationGreaterThanOrEqual((Expression) null, (Expression) null);\n    Expression[] expressionArray0 = new Expression[2];\n    Step[] stepArray0 = new Step[6];\n    ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(\"org.apache.commons.jxpath.ri.compiler.CoreOperationLessThan\");\n    ExpressionPath expressionPath0 = new ExpressionPath(coreOperationGreaterThanOrEqual0, expressionArray0, stepArray0);\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(expressionPath0, expressionArray0[0]);\n    JXPathContextReferenceImpl jXPathContextReferenceImpl0 = (JXPathContextReferenceImpl) JXPathContext.newContext((Object) \"org.apache.commons.jxpath.ri.compiler.CoreOperationLessThan\");\n    RootContext rootContext0 = new RootContext(jXPathContextReferenceImpl0, (NodePointer) null);\n    ChildContext childContext0 = new ChildContext(rootContext0, processingInstructionTest0, true, true);\n    coreOperationNotEqual0.contains(childContext0, jXPathContextReferenceImpl0);\n}",
    "testName" : "test1617"
  },
  "test1718" : {
    "methodSignature" : "protected boolean contains(Iterator it, Object value)",
    "methodName" : "contains",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1718() throws Throwable {\n    Constant constant0 = new Constant(\"W.<9sEY^59\\\"n!r\");\n    CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual(constant0, constant0);\n    NameAttributeTest nameAttributeTest0 = new NameAttributeTest(coreOperationEqual0, coreOperationEqual0);\n    QName qName0 = new QName(\"'W.<9sEY^59\\\"n!r'\", \"org.apache.commons.jxpath.ri.compiler.CoreOperationCompare\");\n    NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, \"'W.<9sEY^59\\\"n!r'\");\n    SelfContext selfContext0 = new SelfContext((EvalContext) null, nodeNameTest0);\n    AncestorContext ancestorContext0 = new AncestorContext((EvalContext) null, true, nodeNameTest0);\n    PredicateContext predicateContext0 = new PredicateContext(ancestorContext0, nameAttributeTest0);\n    coreOperationEqual0.contains(selfContext0, predicateContext0);\n}",
    "testName" : "test1718"
  },
  "test2427" : {
    "methodSignature" : "protected boolean findMatch(Iterator lit, Iterator rit)",
    "methodName" : "findMatch",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2427() throws Throwable {\n    Expression[] expressionArray0 = new Expression[4];\n    CoreFunction coreFunction0 = new CoreFunction((-2134), expressionArray0);\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreFunction0, coreFunction0);\n    CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);\n    expressionArray0[3] = (Expression) coreOperationUnion0;\n    JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, expressionArray0[3], (Pointer) null);\n    EvalContext evalContext0 = jXPathContextReferenceImpl0.getAbsoluteRootContext();\n    InitialContext initialContext0 = new InitialContext(evalContext0);\n    boolean boolean0 = coreOperationNotEqual0.findMatch(evalContext0, initialContext0);\n}",
    "testName" : "test2427"
  },
  "test1415" : {
    "methodSignature" : "protected boolean equal(Object l, Object r)",
    "methodName" : "equal",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1415() throws Throwable {\n    Expression[] expressionArray0 = new Expression[5];\n    Step[] stepArray0 = new Step[5];\n    NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1815));\n    Step step0 = new Step(2533, nodeTypeTest0, expressionArray0);\n    stepArray0[0] = step0;\n    stepArray0[2] = stepArray0[0];\n    LocationPath locationPath0 = new LocationPath(true, stepArray0);\n    expressionArray0[0] = (Expression) locationPath0;\n    CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);\n    NameAttributeTest nameAttributeTest0 = new NameAttributeTest(coreOperationAdd0, expressionArray0[0]);\n    nameAttributeTest0.equal(\"i%P\", stepArray0[2]);\n}",
    "testName" : "test1415"
  },
  "test2426" : {
    "methodSignature" : "public int getPosition()",
    "methodName" : "getPosition",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2426() throws Throwable {\n    Expression[] expressionArray0 = new Expression[4];\n    CoreFunction coreFunction0 = new CoreFunction((-2134), expressionArray0);\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreFunction0, coreFunction0);\n    CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);\n    expressionArray0[3] = (Expression) coreOperationUnion0;\n    JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, expressionArray0[3], (Pointer) null);\n    EvalContext evalContext0 = jXPathContextReferenceImpl0.getAbsoluteRootContext();\n    InitialContext initialContext0 = new InitialContext(evalContext0);\n    boolean boolean0 = coreOperationNotEqual0.findMatch(evalContext0, initialContext0);\n    initialContext0.getPosition();\n}",
    "testName" : "test2426"
  },
  "test2528" : {
    "methodSignature" : "protected boolean equal(EvalContext context, Expression left, Expression right)",
    "methodName" : "equal",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2528() throws Throwable {\n    QName qName0 = new QName(\"G8;4l0Xqg\");\n    VariableReference variableReference0 = new VariableReference(qName0);\n    NameAttributeTest nameAttributeTest0 = new NameAttributeTest(variableReference0, variableReference0);\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(nameAttributeTest0, variableReference0);\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, coreOperationNotEqual0, locale0);\n    JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, (Object) null, nodePointer0);\n    RootContext rootContext0 = new RootContext(jXPathContextReferenceImpl0, nodePointer0);\n    InitialContext initialContext0 = (InitialContext) variableReference0.compute(rootContext0);\n    boolean boolean0 = coreOperationNotEqual0.equal(initialContext0, variableReference0, nameAttributeTest0);\n}",
    "testName" : "test2528"
  },
  "test1516" : {
    "methodSignature" : "protected boolean equal(Object l, Object r)",
    "methodName" : "equal",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1516() throws Throwable {\n    Expression[] expressionArray0 = new Expression[9];\n    Constant constant0 = new Constant(\"i%P\");\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(constant0, constant0);\n    CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);\n    expressionArray0[1] = (Expression) coreOperationAdd0;\n    CoreFunction coreFunction0 = new CoreFunction(0, expressionArray0);\n    CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);\n    NameAttributeTest nameAttributeTest0 = new NameAttributeTest(coreOperationUnion0, coreOperationNotEqual0);\n    nameAttributeTest0.equal(coreFunction0, \"i%P\");\n}",
    "testName" : "test1516"
  },
  "test2021" : {
    "methodSignature" : "protected boolean equal(Object l, Object r)",
    "methodName" : "equal",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2021() throws Throwable {\n    Expression[] expressionArray0 = new Expression[4];\n    CoreFunction coreFunction0 = new CoreFunction((-2134), expressionArray0);\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreFunction0, coreFunction0);\n    JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, expressionArray0[3], (Pointer) null);\n    Float float0 = new Float(1426.0F);\n    boolean boolean0 = coreOperationNotEqual0.equal(jXPathContextReferenceImpl0, float0);\n}",
    "testName" : "test2021"
  },
  "test2730" : {
    "methodSignature" : "protected boolean equal(EvalContext context, Expression left, Expression right)",
    "methodName" : "equal",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2730() throws Throwable {\n    Constant constant0 = new Constant(\"W.<9sEY^59\\\"n!r\");\n    CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual(constant0, constant0);\n    NameAttributeTest nameAttributeTest0 = new NameAttributeTest(coreOperationEqual0, coreOperationEqual0);\n    boolean boolean0 = coreOperationEqual0.equal((EvalContext) null, constant0, nameAttributeTest0);\n}",
    "testName" : "test2730"
  },
  "test2831" : {
    "methodSignature" : "public Object computeValue(org.apache.commons.jxpath.ri.EvalContext context)",
    "methodName" : "computeValue",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2831() throws Throwable {\n    Constant constant0 = new Constant(\"\");\n    CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual(constant0, constant0);\n    CoreOperationNegate coreOperationNegate0 = new CoreOperationNegate(coreOperationEqual0);\n    NameAttributeTest nameAttributeTest0 = new NameAttributeTest(coreOperationNegate0, constant0);\n    Expression[] expressionArray0 = new Expression[5];\n    Step[] stepArray0 = new Step[9];\n    ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(\"org.apache.commons.jxpath.JXPathContextFactory\");\n    ExpressionPath expressionPath0 = new ExpressionPath(nameAttributeTest0, expressionArray0, stepArray0);\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(nameAttributeTest0, expressionPath0);\n    AncestorContext ancestorContext0 = new AncestorContext((EvalContext) null, true, processingInstructionTest0);\n    EvalContext[] evalContextArray0 = new EvalContext[9];\n    UnionContext unionContext0 = new UnionContext(ancestorContext0, evalContextArray0);\n    coreOperationNotEqual0.computeValue(unionContext0);\n}",
    "testName" : "test2831"
  },
  "test000" : {
    "methodSignature" : "protected boolean equal(Object l, Object r)",
    "methodName" : "equal",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    QName qName0 = new QName(\"\");\n    VariableReference variableReference0 = new VariableReference(qName0);\n    NameAttributeTest nameAttributeTest0 = new NameAttributeTest(variableReference0, variableReference0);\n    Float float0 = new Float(937.38);\n    boolean boolean0 = nameAttributeTest0.equal(float0, \"\");\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "protected int getPrecedence()",
    "methodName" : "getPrecedence",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Constant constant0 = new Constant((String) null);\n    CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual(constant0, constant0);\n    CoreOperationGreaterThan coreOperationGreaterThan0 = new CoreOperationGreaterThan(coreOperationLessThanOrEqual0, coreOperationLessThanOrEqual0);\n    CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual(coreOperationGreaterThan0, constant0);\n    int int0 = coreOperationEqual0.getPrecedence();\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public int getPosition()",
    "methodName" : "getPosition",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Expression[] expressionArray0 = new Expression[4];\n    CoreFunction coreFunction0 = new CoreFunction((-2134), expressionArray0);\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreFunction0, coreFunction0);\n    CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);\n    expressionArray0[3] = (Expression) coreOperationUnion0;\n    JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, expressionArray0[3], (Pointer) null);\n    EvalContext evalContext0 = jXPathContextReferenceImpl0.getAbsoluteRootContext();\n    boolean boolean0 = coreOperationNotEqual0.contains(evalContext0, expressionArray0[3]);\n    evalContext0.getPosition();\n}",
    "testName" : "test044"
  },
  "test045" : {
    "methodSignature" : "protected boolean contains(Iterator it, Object value)",
    "methodName" : "contains",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test045() throws Throwable {\n    Expression[] expressionArray0 = new Expression[4];\n    CoreFunction coreFunction0 = new CoreFunction((-2134), expressionArray0);\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreFunction0, coreFunction0);\n    CoreOperationUnion coreOperationUnion0 = new CoreOperationUnion(expressionArray0);\n    expressionArray0[3] = (Expression) coreOperationUnion0;\n    JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, expressionArray0[3], (Pointer) null);\n    EvalContext evalContext0 = jXPathContextReferenceImpl0.getAbsoluteRootContext();\n    boolean boolean0 = coreOperationNotEqual0.contains(evalContext0, expressionArray0[3]);\n}",
    "testName" : "test045"
  },
  "test067" : {
    "methodSignature" : "protected boolean findMatch(Iterator lit, Iterator rit)",
    "methodName" : "findMatch",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067() throws Throwable {\n    Expression[] expressionArray0 = new Expression[2];\n    QName qName0 = new QName(\"Ouu(;\");\n    ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);\n    CoreOperationMod coreOperationMod0 = new CoreOperationMod(extensionFunction0, extensionFunction0);\n    CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual(coreOperationMod0, coreOperationMod0);\n    NameAttributeTest nameAttributeTest0 = new NameAttributeTest(coreOperationLessThanOrEqual0, extensionFunction0);\n    ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest(\"B4\");\n    PrecedingOrFollowingContext precedingOrFollowingContext0 = new PrecedingOrFollowingContext((EvalContext) null, processingInstructionTest0, false);\n    nameAttributeTest0.findMatch(precedingOrFollowingContext0, (Iterator) null);\n}",
    "testName" : "test067"
  },
  "test089" : {
    "methodSignature" : "protected boolean equal(EvalContext context, Expression left, Expression right)",
    "methodName" : "equal",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089() throws Throwable {\n    Step[] stepArray0 = new Step[6];\n    QName qName0 = new QName(\"y.]1r55=Tq>J<Z)HU\", \"\");\n    NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);\n    Expression[] expressionArray0 = new Expression[3];\n    LocationPath locationPath0 = new LocationPath(true, stepArray0);\n    CoreOperationMultiply coreOperationMultiply0 = new CoreOperationMultiply(locationPath0, expressionArray0[1]);\n    CoreOperationNotEqual coreOperationNotEqual0 = new CoreOperationNotEqual(coreOperationMultiply0, expressionArray0[2]);\n    CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual(coreOperationNotEqual0, locationPath0);\n    ParentContext parentContext0 = new ParentContext((EvalContext) null, nodeNameTest0);\n    AttributeContext attributeContext0 = new AttributeContext(parentContext0, nodeNameTest0);\n    coreOperationEqual0.equal(attributeContext0, expressionArray0[1], expressionArray0[0]);\n}",
    "testName" : "test089"
  },
  "test1920" : {
    "methodSignature" : "protected boolean equal(EvalContext context, Expression left, Expression right)",
    "methodName" : "equal",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1920() throws Throwable {\n    Expression[] expressionArray0 = new Expression[6];\n    CoreFunction coreFunction0 = new CoreFunction(0, expressionArray0);\n    CoreOperationOr coreOperationOr0 = new CoreOperationOr(expressionArray0);\n    Constant constant0 = new Constant(\"bf7}>\");\n    CoreOperationAnd coreOperationAnd0 = new CoreOperationAnd(expressionArray0);\n    NameAttributeTest nameAttributeTest0 = new NameAttributeTest(coreOperationOr0, coreOperationAnd0);\n    boolean boolean0 = nameAttributeTest0.equal((EvalContext) null, constant0, coreFunction0);\n}",
    "testName" : "test1920"
  },
  "test0910" : {
    "methodSignature" : "protected boolean equal(EvalContext context, Expression left, Expression right)",
    "methodName" : "equal",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0910() throws Throwable {\n    Expression[] expressionArray0 = new Expression[0];\n    CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);\n    CoreOperationLessThanOrEqual coreOperationLessThanOrEqual0 = new CoreOperationLessThanOrEqual(coreOperationAdd0, coreOperationAdd0);\n    coreOperationLessThanOrEqual0.args = expressionArray0;\n    CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual(coreOperationLessThanOrEqual0, coreOperationLessThanOrEqual0);\n    QName qName0 = new QName(\"\");\n    NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);\n    AncestorContext ancestorContext0 = new AncestorContext((EvalContext) null, false, nodeNameTest0);\n    SelfContext selfContext0 = new SelfContext(ancestorContext0, nodeNameTest0);\n    coreOperationEqual0.equal(selfContext0, coreOperationLessThanOrEqual0, coreOperationAdd0);\n}",
    "testName" : "test0910"
  },
  "test1819" : {
    "methodSignature" : "protected boolean equal(Object l, Object r)",
    "methodName" : "equal",
    "className" : "org.apache.commons.jxpath.ri.compiler.CoreOperationCompare",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1819() throws Throwable {\n    CoreOperationEqual coreOperationEqual0 = new CoreOperationEqual((Expression) null, (Expression) null);\n    Object object0 = new Object();\n    boolean boolean0 = coreOperationEqual0.equal((Object) null, object0);\n}",
    "testName" : "test1819"
  }
}