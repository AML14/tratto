focal_method,test_prefix,docstring
"public NodePointer getNodePointer() {
    if (position == 0) {
        if (!setPosition(1)) {
            return null;
        }
        position = 0;
    }
    int index = position - 1;
    if (index < 0) {
        index = 0;
    }
    return new DOMAttributePointer(parent, (Attr) attributes.get(index));
}","public void test000() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(""*"");
    QName qName0 = new QName("""", ""*"");
    iIOMetadataNode0.setAttribute(""*"", ""*"");
    iIOMetadataNode0.setAttribute("":\"""", ""xmlns"");
    Locale locale0 = Locale.KOREAN;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    NodePointer nodePointer1 = dOMAttributeIterator0.getNodePointer();
    assertNotNull(nodePointer1);
}",""
"public int getPosition() {
    return position;
}","public void test001() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(""*"");
    QName qName0 = new QName("""", ""*"");
    iIOMetadataNode0.setAttribute(""*"", ""*"");
    iIOMetadataNode0.setAttribute("":\"""", ""xmlns"");
    Locale locale0 = Locale.KOREAN;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    NodePointer nodePointer1 = dOMAttributeIterator0.getNodePointer();
    assertEquals(0, dOMAttributeIterator0.getPosition());
}",""
"public int getPosition() {
    return position;
}","public void test012() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(""*"");
    QName qName0 = new QName(""xmlns"", ""*"");
    iIOMetadataNode0.setAttribute(""*"", ""*"");
    Locale locale0 = Locale.KOREAN;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    assertEquals(0, dOMAttributeIterator0.getPosition());
}",""
"public int getPosition() {
    return position;
}","public void test023() throws Throwable {
    BasicVariables basicVariables0 = new BasicVariables();
    QName qName0 = new QName("">.Y{GXqZPc3'h>0"", "">.Y{GXqZPc3'h>0"");
    VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "">.Y{GXqZPc3'h>0"");
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode((String) null);
    NodePointer nodePointer0 = variablePointer0.createPath(jXPathContext0, (Object) iIOMetadataNode0);
    NodePointer nodePointer1 = nodePointer0.getImmediateValuePointer();
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer1, qName0);
    dOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
    int int0 = dOMAttributeIterator0.getPosition();
    assertEquals(Integer.MIN_VALUE, int0);
}",""
"public DOMAttributeIterator(NodePointer parent, QName name) {
    this.parent = parent;
    this.name = name;
    attributes = new ArrayList();
    Node node = (Node) parent.getNode();
    if (node.getNodeType() == Node.ELEMENT_NODE) {
        String lname = name.getName();
        if (!lname.equals(""*"")) {
            Attr attr = getAttribute((Element) node, name);
            if (attr != null) {
                attributes.add(attr);
            }
        } else {
            NamedNodeMap map = node.getAttributes();
            int count = map.getLength();
            for (int i = 0; i < count; i++) {
                Attr attr = (Attr) map.item(i);
                if (testAttr(attr, name)) {
                    attributes.add(attr);
                }
            }
        }
    }
}","public void test034() throws Throwable {
    QName qName0 = new QName(""\""u8"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    DOMAttributeIterator dOMAttributeIterator0 = null;
    try {
        dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, qName0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // Undefined variable: \""u8
        //
        verifyException(""org.apache.commons.jxpath.ri.model.VariablePointer$1"", e);
    }
}",""
"public DOMAttributeIterator(NodePointer parent, QName name) {
    this.parent = parent;
    this.name = name;
    attributes = new ArrayList();
    Node node = (Node) parent.getNode();
    if (node.getNodeType() == Node.ELEMENT_NODE) {
        String lname = name.getName();
        if (!lname.equals(""*"")) {
            Attr attr = getAttribute((Element) node, name);
            if (attr != null) {
                attributes.add(attr);
            }
        } else {
            NamedNodeMap map = node.getAttributes();
            int count = map.getLength();
            for (int i = 0; i < count; i++) {
                Attr attr = (Attr) map.item(i);
                if (testAttr(attr, name)) {
                    attributes.add(attr);
                }
            }
        }
    }
}","public void test045() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    QName qName0 = new QName(""*"", ""*"");
    iIOMetadataNode0.appendChild(iIOMetadataNode0);
    iIOMetadataNode0.setAttribute("":\"""", "":\"""");
    Locale locale0 = Locale.KOREAN;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
}",""
"public DOMAttributeIterator(NodePointer parent, QName name) {
    this.parent = parent;
    this.name = name;
    attributes = new ArrayList();
    Node node = (Node) parent.getNode();
    if (node.getNodeType() == Node.ELEMENT_NODE) {
        String lname = name.getName();
        if (!lname.equals(""*"")) {
            Attr attr = getAttribute((Element) node, name);
            if (attr != null) {
                attributes.add(attr);
            }
        } else {
            NamedNodeMap map = node.getAttributes();
            int count = map.getLength();
            for (int i = 0; i < count; i++) {
                Attr attr = (Attr) map.item(i);
                if (testAttr(attr, name)) {
                    attributes.add(attr);
                }
            }
        }
    }
}","public void test056() throws Throwable {
    DOMAttributeIterator dOMAttributeIterator0 = null;
    try {
        dOMAttributeIterator0 = new DOMAttributeIterator((NodePointer) null, (QName) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator"", e);
    }
}",""
"public DOMAttributeIterator(NodePointer parent, QName name) {
    this.parent = parent;
    this.name = name;
    attributes = new ArrayList();
    Node node = (Node) parent.getNode();
    if (node.getNodeType() == Node.ELEMENT_NODE) {
        String lname = name.getName();
        if (!lname.equals(""*"")) {
            Attr attr = getAttribute((Element) node, name);
            if (attr != null) {
                attributes.add(attr);
            }
        } else {
            NamedNodeMap map = node.getAttributes();
            int count = map.getLength();
            for (int i = 0; i < count; i++) {
                Attr attr = (Attr) map.item(i);
                if (testAttr(attr, name)) {
                    attributes.add(attr);
                }
            }
        }
    }
}","public void test067() throws Throwable {
    BasicVariables basicVariables0 = new BasicVariables();
    QName qName0 = new QName(""^|E"");
    VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    DOMAttributeIterator dOMAttributeIterator0 = null;
    try {
        dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, qName0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // No such variable: '^|E'
        //
        verifyException(""org.apache.commons.jxpath.BasicVariables"", e);
    }
}",""
"public DOMAttributeIterator(NodePointer parent, QName name) {
    this.parent = parent;
    this.name = name;
    attributes = new ArrayList();
    Node node = (Node) parent.getNode();
    if (node.getNodeType() == Node.ELEMENT_NODE) {
        String lname = name.getName();
        if (!lname.equals(""*"")) {
            Attr attr = getAttribute((Element) node, name);
            if (attr != null) {
                attributes.add(attr);
            }
        } else {
            NamedNodeMap map = node.getAttributes();
            int count = map.getLength();
            for (int i = 0; i < count; i++) {
                Attr attr = (Attr) map.item(i);
                if (testAttr(attr, name)) {
                    attributes.add(attr);
                }
            }
        }
    }
}","public void test078() throws Throwable {
    QName qName0 = new QName(""&3QFSsY$M\nn`("");
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    Locale locale0 = Locale.US;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    NodePointer nodePointer1 = NodePointer.newNodePointer(qName0, nodePointer0, locale0);
    DOMAttributeIterator dOMAttributeIterator0 = null;
    try {
        dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer1, qName0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.apache.commons.jxpath.ri.model.dom.DOMNodePointer cannot be cast to org.w3c.dom.Node
        //
        verifyException(""org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator"", e);
    }
}",""
"public int getPosition() {
    return position;
}","public void test089() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(""*"");
    QName qName0 = new QName(""xmlns"", ""xmlns"");
    Locale locale0 = Locale.KOREAN;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    dOMAttributeIterator0.setPosition(66);
    int int0 = dOMAttributeIterator0.getPosition();
    assertEquals(66, int0);
}",""
"public NodePointer getNodePointer() {
    if (position == 0) {
        if (!setPosition(1)) {
            return null;
        }
        position = 0;
    }
    int index = position - 1;
    if (index < 0) {
        index = 0;
    }
    return new DOMAttributePointer(parent, (Attr) attributes.get(index));
}","public void test0910() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(""*"");
    QName qName0 = new QName(""xmlns"", ""xmlns"");
    Locale locale0 = Locale.KOREAN;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    dOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
    // Undeclared exception!
    try {
        dOMAttributeIterator0.getNodePointer();
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 2147483647, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",""
"public int getPosition() {
    return position;
}","public void test1011() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(""xmlns"");
    QName qName0 = new QName(""xmlns"", ""xmlns"");
    iIOMetadataNode0.setAttribute(""xmlns"", ""xmlns"");
    Locale locale0 = Locale.ITALIAN;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    assertEquals(0, dOMAttributeIterator0.getPosition());
}",""
"public int getPosition() {
    return position;
}","public void test1112() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    QName qName0 = new QName("""", ""*"");
    iIOMetadataNode0.setAttribute("":\"""", """");
    Locale locale0 = Locale.KOREAN;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    NodePointer nodePointer1 = dOMAttributeIterator0.getNodePointer();
    assertEquals(0, dOMAttributeIterator0.getPosition());
}",""
"public NodePointer getNodePointer() {
    if (position == 0) {
        if (!setPosition(1)) {
            return null;
        }
        position = 0;
    }
    int index = position - 1;
    if (index < 0) {
        index = 0;
    }
    return new DOMAttributePointer(parent, (Attr) attributes.get(index));
}","public void test1113() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    QName qName0 = new QName("""", ""*"");
    iIOMetadataNode0.setAttribute("":\"""", """");
    Locale locale0 = Locale.KOREAN;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    NodePointer nodePointer1 = dOMAttributeIterator0.getNodePointer();
    assertNotNull(nodePointer1);
}",""
"public NodePointer createAttribute(JXPathContext context, QName name) {
    throw new JXPathException(""Cannot create an attribute for path "" + asPath() + ""/@"" + name + "", operation is not allowed for this type of node"");
}","public void test1214() throws Throwable {
    QName qName0 = new QName(""xmlns"", ""xmlns"");
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    Locale locale0 = Locale.UK;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    Object object0 = new Object();
    iIOMetadataNode0.setAttributeNS(""http://www.w3.org/XML/1998/namespace"", ""^jCqp"", ""http://www.w3.org/XML/1998/namespace"");
    JXPathContext jXPathContext0 = JXPathContext.newContext(object0);
    // Undeclared exception!
    try {
        nodePointer0.createAttribute(jXPathContext0, qName0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}","/**
 * Called to create a non-existing attribute
 */"
"public int getPosition() {
    return position;
}","public void test1315() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(""*"");
    QName qName0 = new QName(""*"");
    iIOMetadataNode0.setAttribute("":\"""", "":\"""");
    Locale locale0 = Locale.KOREAN;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    assertEquals(0, dOMAttributeIterator0.getPosition());
}",""
"public int getPosition() {
    return position;
}","public void test1416() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    QName qName0 = new QName(""*"");
    iIOMetadataNode0.setAttribute(""xmlns"", ""xmlns"");
    Locale locale0 = Locale.KOREAN;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    assertEquals(0, dOMAttributeIterator0.getPosition());
}",""
"public int getPosition() {
    return position;
}","public void test1517() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(""*"");
    QName qName0 = new QName(""*"");
    iIOMetadataNode0.setAttribute(""*"", ""*"");
    Locale locale0 = Locale.KOREAN;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    boolean boolean0 = dOMAttributeIterator0.setPosition(1);
    assertEquals(1, dOMAttributeIterator0.getPosition());
}",""
"public boolean setPosition(int position) {
    this.position = position;
    return position >= 1 && position <= attributes.size();
}","public void test1518() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(""*"");
    QName qName0 = new QName(""*"");
    iIOMetadataNode0.setAttribute(""*"", ""*"");
    Locale locale0 = Locale.KOREAN;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    boolean boolean0 = dOMAttributeIterator0.setPosition(1);
    assertTrue(boolean0);
}",""
"public int getPosition() {
    return position;
}","public void test1619() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(""*"");
    QName qName0 = new QName(""xmlns"", "","");
    Locale locale0 = Locale.UK;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    assertEquals(0, dOMAttributeIterator0.getPosition());
}",""
"public int getPosition() {
    return position;
}","public void test1620() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(""*"");
    QName qName0 = new QName(""xmlns"", "","");
    Locale locale0 = Locale.UK;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    dOMAttributeIterator0.getNodePointer();
    assertEquals(1, dOMAttributeIterator0.getPosition());
}",""
"public NodePointer createAttribute(JXPathContext context, QName name) {
    throw new JXPathException(""Cannot create an attribute for path "" + asPath() + ""/@"" + name + "", operation is not allowed for this type of node"");
}","public void test1721() throws Throwable {
    QName qName0 = new QName(""&3QFSsY$M\nn`("");
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    Locale locale0 = Locale.US;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    JXPathContext jXPathContext0 = JXPathContext.newContext((Object) iIOMetadataNode0);
    NodePointer nodePointer1 = nodePointer0.createAttribute(jXPathContext0, qName0);
    assertNotNull(nodePointer1);
}","/**
 * Called to create a non-existing attribute
 */"
"public int getPosition() {
    return position;
}","public void test1722() throws Throwable {
    QName qName0 = new QName(""&3QFSsY$M\nn`("");
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    Locale locale0 = Locale.US;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    JXPathContext jXPathContext0 = JXPathContext.newContext((Object) iIOMetadataNode0);
    NodePointer nodePointer1 = nodePointer0.createAttribute(jXPathContext0, qName0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer1, qName0);
    assertEquals(0, dOMAttributeIterator0.getPosition());
}",""
"public int getPosition() {
    return position;
}","public void test1823() throws Throwable {
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(""*"");
    QName qName0 = new QName(""*"");
    Locale locale0 = Locale.KOREAN;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    int int0 = dOMAttributeIterator0.getPosition();
    assertEquals(0, int0);
}",""
