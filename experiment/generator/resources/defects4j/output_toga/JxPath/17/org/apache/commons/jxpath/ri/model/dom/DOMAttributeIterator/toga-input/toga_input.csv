focal_method,test_prefix,docstring
"public NodePointer getNodePointer() {
    if (position == 0) {
        if (!setPosition(1)) {
            return null;
        }
        position = 0;
    }
    int index = position - 1;
    if (index < 0) {
        index = 0;
    }
    return new DOMAttributePointer(parent, (Attr) attributes.get(index));
}","public void test000() throws Throwable {
    BasicVariables basicVariables0 = new BasicVariables();
    QName qName0 = new QName("""");
    VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("""");
    NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, iIOMetadataNode0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    dOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
    // Undeclared exception!
    try {
        dOMAttributeIterator0.getNodePointer();
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 2147483647, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",""
"public int getPosition() {
    return position;
}","public void test011() throws Throwable {
    BasicVariables basicVariables0 = new BasicVariables();
    QName qName0 = new QName(""0zl*|z99ab=YJ"");
    VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(""JXPath: found system property"");
    JXPathContext jXPathContext0 = JXPathContext.newContext((Object) iIOMetadataNode0);
    variablePointer0.createPath(jXPathContext0, (Object) iIOMetadataNode0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, qName0);
    assertEquals(0, dOMAttributeIterator0.getPosition());
}",""
"public int getPosition() {
    return position;
}","public void test012() throws Throwable {
    BasicVariables basicVariables0 = new BasicVariables();
    QName qName0 = new QName(""0zl*|z99ab=YJ"");
    VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(""JXPath: found system property"");
    JXPathContext jXPathContext0 = JXPathContext.newContext((Object) iIOMetadataNode0);
    variablePointer0.createPath(jXPathContext0, (Object) iIOMetadataNode0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, qName0);
    dOMAttributeIterator0.getNodePointer();
    int int0 = dOMAttributeIterator0.getPosition();
    assertEquals(1, int0);
}",""
"public int getPosition() {
    return position;
}","public void test023() throws Throwable {
    QName qName0 = new QName("">.Y{GXqZPc3'h>0"");
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("">.Y{GXqZPc3'h>0"");
    Locale locale0 = Locale.FRENCH;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    dOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
    int int0 = dOMAttributeIterator0.getPosition();
    assertEquals(Integer.MIN_VALUE, int0);
}",""
"public DOMAttributeIterator(NodePointer parent, QName name) {
    this.parent = parent;
    this.name = name;
    attributes = new ArrayList();
    Node node = (Node) parent.getNode();
    if (node.getNodeType() == Node.ELEMENT_NODE) {
        String lname = name.getName();
        if (!lname.equals(""*"")) {
            Attr attr = getAttribute((Element) node, name);
            if (attr != null) {
                attributes.add(attr);
            }
        } else {
            NamedNodeMap map = node.getAttributes();
            int count = map.getLength();
            for (int i = 0; i < count; i++) {
                Attr attr = (Attr) map.item(i);
                if (testAttr(attr)) {
                    attributes.add(attr);
                }
            }
        }
    }
}","public void test034() throws Throwable {
    QName qName0 = new QName(""\""u8"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    DOMAttributeIterator dOMAttributeIterator0 = null;
    try {
        dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, qName0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // Undefined variable: \""u8
        //
        verifyException(""org.apache.commons.jxpath.ri.model.VariablePointer$1"", e);
    }
}",""
"public DOMAttributeIterator(NodePointer parent, QName name) {
    this.parent = parent;
    this.name = name;
    attributes = new ArrayList();
    Node node = (Node) parent.getNode();
    if (node.getNodeType() == Node.ELEMENT_NODE) {
        String lname = name.getName();
        if (!lname.equals(""*"")) {
            Attr attr = getAttribute((Element) node, name);
            if (attr != null) {
                attributes.add(attr);
            }
        } else {
            NamedNodeMap map = node.getAttributes();
            int count = map.getLength();
            for (int i = 0; i < count; i++) {
                Attr attr = (Attr) map.item(i);
                if (testAttr(attr)) {
                    attributes.add(attr);
                }
            }
        }
    }
}","public void test045() throws Throwable {
    QName qName0 = new QName(""*"", ""*"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    iIOMetadataNode0.insertBefore(iIOMetadataNode0, iIOMetadataNode0);
    iIOMetadataNode0.setAttributeNS(""<<unknown namespace>>"", ""<<unknown namespace>>"", ""*"");
    NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, (QName) null, iIOMetadataNode0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
}",""
"public DOMAttributeIterator(NodePointer parent, QName name) {
    this.parent = parent;
    this.name = name;
    attributes = new ArrayList();
    Node node = (Node) parent.getNode();
    if (node.getNodeType() == Node.ELEMENT_NODE) {
        String lname = name.getName();
        if (!lname.equals(""*"")) {
            Attr attr = getAttribute((Element) node, name);
            if (attr != null) {
                attributes.add(attr);
            }
        } else {
            NamedNodeMap map = node.getAttributes();
            int count = map.getLength();
            for (int i = 0; i < count; i++) {
                Attr attr = (Attr) map.item(i);
                if (testAttr(attr)) {
                    attributes.add(attr);
                }
            }
        }
    }
}","public void test056() throws Throwable {
    DOMAttributeIterator dOMAttributeIterator0 = null;
    try {
        dOMAttributeIterator0 = new DOMAttributeIterator((NodePointer) null, (QName) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator"", e);
    }
}",""
"public DOMAttributeIterator(NodePointer parent, QName name) {
    this.parent = parent;
    this.name = name;
    attributes = new ArrayList();
    Node node = (Node) parent.getNode();
    if (node.getNodeType() == Node.ELEMENT_NODE) {
        String lname = name.getName();
        if (!lname.equals(""*"")) {
            Attr attr = getAttribute((Element) node, name);
            if (attr != null) {
                attributes.add(attr);
            }
        } else {
            NamedNodeMap map = node.getAttributes();
            int count = map.getLength();
            for (int i = 0; i < count; i++) {
                Attr attr = (Attr) map.item(i);
                if (testAttr(attr)) {
                    attributes.add(attr);
                }
            }
        }
    }
}","public void test067() throws Throwable {
    BasicVariables basicVariables0 = new BasicVariables();
    QName qName0 = new QName(""^|E"");
    VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    DOMAttributeIterator dOMAttributeIterator0 = null;
    try {
        dOMAttributeIterator0 = new DOMAttributeIterator(variablePointer0, qName0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // No such variable: '^|E'
        //
        verifyException(""org.apache.commons.jxpath.BasicVariables"", e);
    }
}",""
"public DOMAttributeIterator(NodePointer parent, QName name) {
    this.parent = parent;
    this.name = name;
    attributes = new ArrayList();
    Node node = (Node) parent.getNode();
    if (node.getNodeType() == Node.ELEMENT_NODE) {
        String lname = name.getName();
        if (!lname.equals(""*"")) {
            Attr attr = getAttribute((Element) node, name);
            if (attr != null) {
                attributes.add(attr);
            }
        } else {
            NamedNodeMap map = node.getAttributes();
            int count = map.getLength();
            for (int i = 0; i < count; i++) {
                Attr attr = (Attr) map.item(i);
                if (testAttr(attr)) {
                    attributes.add(attr);
                }
            }
        }
    }
}","public void test078() throws Throwable {
    QName qName0 = new QName(""Bvu"");
    Object object0 = new Object();
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, object0, (Locale) null);
    DOMAttributeIterator dOMAttributeIterator0 = null;
    try {
        dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // java.lang.Object cannot be cast to org.w3c.dom.Node
        //
        verifyException(""org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator"", e);
    }
}",""
"public int getPosition() {
    return position;
}","public void test089() throws Throwable {
    QName qName0 = new QName(""*"");
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, (Locale) null);
    JXPathContext jXPathContext0 = JXPathContext.newContext((Object) ""*"");
    nodePointer0.createAttribute(jXPathContext0, qName0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    assertEquals(0, dOMAttributeIterator0.getPosition());
}",""
"public boolean setPosition(int position) {
    this.position = position;
    return position >= 1 && position <= attributes.size();
}","public void test0810() throws Throwable {
    QName qName0 = new QName(""*"");
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, (Locale) null);
    JXPathContext jXPathContext0 = JXPathContext.newContext((Object) ""*"");
    nodePointer0.createAttribute(jXPathContext0, qName0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    boolean boolean0 = dOMAttributeIterator0.setPosition(1);
    assertTrue(boolean0);
}",""
"public NodePointer getNodePointer() {
    if (position == 0) {
        if (!setPosition(1)) {
            return null;
        }
        position = 0;
    }
    int index = position - 1;
    if (index < 0) {
        index = 0;
    }
    return new DOMAttributePointer(parent, (Attr) attributes.get(index));
}","public void test0911() throws Throwable {
    BasicVariables basicVariables0 = new BasicVariables();
    QName qName0 = new QName("""");
    VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("""");
    NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, iIOMetadataNode0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    dOMAttributeIterator0.setPosition(1354);
    // Undeclared exception!
    try {
        dOMAttributeIterator0.getNodePointer();
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 1353, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",""
"public int getPosition() {
    return position;
}","public void test1012() throws Throwable {
    QName qName0 = new QName(""*"");
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(""*"");
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, (Locale) null);
    iIOMetadataNode0.setAttributeNS(""http://www.w3.org/2000/xmlns/"", ""http://www.w3.org/XML/1998/namespace"", ""http://www.w3.org/XML/1998/namespace"");
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    NodePointer nodePointer1 = dOMAttributeIterator0.getNodePointer();
    assertEquals(0, dOMAttributeIterator0.getPosition());
}",""
"public NodePointer getNodePointer() {
    if (position == 0) {
        if (!setPosition(1)) {
            return null;
        }
        position = 0;
    }
    int index = position - 1;
    if (index < 0) {
        index = 0;
    }
    return new DOMAttributePointer(parent, (Attr) attributes.get(index));
}","public void test1013() throws Throwable {
    QName qName0 = new QName(""*"");
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(""*"");
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, (Locale) null);
    iIOMetadataNode0.setAttributeNS(""http://www.w3.org/2000/xmlns/"", ""http://www.w3.org/XML/1998/namespace"", ""http://www.w3.org/XML/1998/namespace"");
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    NodePointer nodePointer1 = dOMAttributeIterator0.getNodePointer();
    assertNotNull(nodePointer1);
}",""
"public int getPosition() {
    return position;
}","public void test1114() throws Throwable {
    QName qName0 = new QName(""xmlns"", ""xmlns"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    iIOMetadataNode0.setAttributeNS(""<<unknown namespace>>"", ""xmlns"", ""<<unknown namespace>>"");
    NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, iIOMetadataNode0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    assertEquals(0, dOMAttributeIterator0.getPosition());
}",""
"public int getPosition() {
    return position;
}","public void test1215() throws Throwable {
    QName qName0 = new QName(""*"", ""*"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    iIOMetadataNode0.setAttributeNS(""<<unknown namespace>>"", ""<<unknown namespace>>"", ""*"");
    NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, iIOMetadataNode0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    assertEquals(0, dOMAttributeIterator0.getPosition());
}",""
"public int getPosition() {
    return position;
}","public void test1316() throws Throwable {
    QName qName0 = new QName(""xml"", ""xml"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    iIOMetadataNode0.setAttributeNS(""<<unknown namespace>>"", ""<<unknown namespace>>"", ""<<unknown namespace>>"");
    NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, iIOMetadataNode0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    assertEquals(0, dOMAttributeIterator0.getPosition());
}",""
"public NodePointer createAttribute(JXPathContext context, QName name) {
    throw new JXPathException(""Cannot create an attribute for path "" + asPath() + ""/@"" + name + "", operation is not allowed for this type of node"");
}","public void test1417() throws Throwable {
    QName qName0 = new QName(""xmlns"", ""xmlns"");
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(""xmlns"");
    Locale locale0 = Locale.ITALIAN;
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, locale0);
    JXPathContext jXPathContext0 = JXPathContext.newContext((Object) locale0);
    // Undeclared exception!
    try {
        nodePointer0.createAttribute(jXPathContext0, qName0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}","/**
 * Called to create a non-existing attribute
 * @param context the owning JXPathCOntext
 * @param name the QName at which an attribute should be created
 * @return created NodePointer
 */"
"public boolean isActual() {
    return index == WHOLE_COLLECTION || index >= 0 && index < getLength();
}","public void test1518() throws Throwable {
    QName qName0 = new QName(""*"");
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(""*"");
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, (Locale) null);
    iIOMetadataNode0.setAttributeNS(""http://www.w3.org/2000/xmlns/"", ""http://www.w3.org/XML/1998/namespace"", ""http://www.w3.org/XML/1998/namespace"");
    JXPathContext jXPathContext0 = JXPathContext.newContext((Object) ""<<unknown namespace>>"");
    NodePointer nodePointer1 = nodePointer0.createAttribute(jXPathContext0, qName0);
    assertTrue(nodePointer1.isActual());
}","/**
 * An actual pointer points to an existing part of an object graph, even
 * if it is null. A non-actual pointer represents a part that does not exist
 * at all.
 * For instance consider the pointer ""/address/street"".
 * If both <em>address</em> and <em>street</em> are not null,
 * the pointer is actual.
 * If <em>address</em> is not null, but <em>street</em> is null,
 * the pointer is still actual.
 * If <em>address</em> is null, the pointer is not actual.
 * (In JavaBeans) if <em>address</em> is not a property of the root bean,
 * a Pointer for this path cannot be obtained at all - actual or otherwise.
 */"
"public int getPosition() {
    return position;
}","public void test1619() throws Throwable {
    QName qName0 = new QName(""*"", ""*"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    iIOMetadataNode0.setAttribute(""xmlns"", ""<<unknown namespace>>"");
    NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, iIOMetadataNode0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    assertEquals(0, dOMAttributeIterator0.getPosition());
}",""
"public NodePointer createAttribute(JXPathContext context, QName name) {
    throw new JXPathException(""Cannot create an attribute for path "" + asPath() + ""/@"" + name + "", operation is not allowed for this type of node"");
}","public void test1720() throws Throwable {
    QName qName0 = new QName(""9|w3d1qEt7rbnZ"");
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(""9|w3d1qEt7rbnZ"");
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, (Locale) null);
    JXPathContext jXPathContext0 = JXPathContext.newContext((Object) ""9|w3d1qEt7rbnZ"");
    NodePointer nodePointer1 = nodePointer0.createAttribute(jXPathContext0, qName0);
    assertNotNull(nodePointer1);
}","/**
 * Called to create a non-existing attribute
 * @param context the owning JXPathCOntext
 * @param name the QName at which an attribute should be created
 * @return created NodePointer
 */"
"public int getPosition() {
    return position;
}","public void test1721() throws Throwable {
    QName qName0 = new QName(""9|w3d1qEt7rbnZ"");
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(""9|w3d1qEt7rbnZ"");
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, iIOMetadataNode0, (Locale) null);
    JXPathContext jXPathContext0 = JXPathContext.newContext((Object) ""9|w3d1qEt7rbnZ"");
    NodePointer nodePointer1 = nodePointer0.createAttribute(jXPathContext0, qName0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer1, qName0);
    assertEquals(0, dOMAttributeIterator0.getPosition());
}",""
"public int getPosition() {
    return position;
}","public void test1822() throws Throwable {
    QName qName0 = new QName(""xmlns"", ""xmlns"");
    VariablePointer variablePointer0 = new VariablePointer(qName0);
    IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
    NodePointer nodePointer0 = NodePointer.newChildNodePointer(variablePointer0, qName0, iIOMetadataNode0);
    DOMAttributeIterator dOMAttributeIterator0 = new DOMAttributeIterator(nodePointer0, qName0);
    int int0 = dOMAttributeIterator0.getPosition();
    assertEquals(0, int0);
}",""
