focal_method,test_prefix,docstring
"public int getPosition() {
    return position;
}","public void test000() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, (Object) null, locale0);
    JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, (QName) null);
    jDOMAttributeIterator0.getPosition();
}",""
"public boolean setPosition(int position) {
    if (attributes == null) {
        return false;
    }
    this.position = position;
    return position >= 1 && position <= attributes.size();
}","public void test011() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, (Object) null, locale0);
    JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, (QName) null);
    jDOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
}",""
"public NodePointer getNodePointer() {
    if (position == 0) {
        if (!setPosition(1)) {
            return null;
        }
        position = 0;
    }
    int index = position - 1;
    if (index < 0) {
        index = 0;
    }
    return new JDOMAttributePointer(parent, (Attribute) attributes.get(index));
}","public void test022() throws Throwable {
    Locale locale0 = Locale.JAPAN;
    NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, (Object) null, locale0);
    JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, (QName) null);
    jDOMAttributeIterator0.getNodePointer();
}",""
"public JDOMAttributeIterator(NodePointer parent, QName name) {
    this.parent = parent;
    if (parent.getNode() instanceof Element) {
        Element element = (Element) parent.getNode();
        String prefix = name.getPrefix();
        Namespace ns = null;
        if (prefix != null) {
            if (prefix.equals(""xml"")) {
                ns = Namespace.XML_NAMESPACE;
            } else {
                String uri = parent.getNamespaceResolver().getNamespaceURI(prefix);
                if (uri != null) {
                    ns = Namespace.getNamespace(prefix, uri);
                }
                if (ns == null) {
                    // TBD: no attributes
                    attributes = Collections.EMPTY_LIST;
                    return;
                }
            }
        } else {
            ns = Namespace.NO_NAMESPACE;
        }
        String lname = name.getName();
        if (!lname.equals(""*"")) {
            attributes = new ArrayList();
            if (ns != null) {
                Attribute attr = element.getAttribute(lname, ns);
                if (attr != null) {
                    attributes.add(attr);
                }
            }
        } else {
            attributes = new ArrayList();
            List allAttributes = element.getAttributes();
            for (int i = 0; i < allAttributes.size(); i++) {
                Attribute attr = (Attribute) allAttributes.get(i);
                if (attr.getNamespace().equals(ns)) {
                    attributes.add(attr);
                }
            }
        }
    }
}","public void test033() throws Throwable {
    Locale locale0 = Locale.JAPANESE;
    Element element0 = new Element(""me"", ""me"", ""me"");
    NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, element0, locale0);
    JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, (QName) null);
}",""
"public JDOMAttributeIterator(NodePointer parent, QName name) {
    this.parent = parent;
    if (parent.getNode() instanceof Element) {
        Element element = (Element) parent.getNode();
        String prefix = name.getPrefix();
        Namespace ns = null;
        if (prefix != null) {
            if (prefix.equals(""xml"")) {
                ns = Namespace.XML_NAMESPACE;
            } else {
                String uri = parent.getNamespaceResolver().getNamespaceURI(prefix);
                if (uri != null) {
                    ns = Namespace.getNamespace(prefix, uri);
                }
                if (ns == null) {
                    // TBD: no attributes
                    attributes = Collections.EMPTY_LIST;
                    return;
                }
            }
        } else {
            ns = Namespace.NO_NAMESPACE;
        }
        String lname = name.getName();
        if (!lname.equals(""*"")) {
            attributes = new ArrayList();
            if (ns != null) {
                Attribute attr = element.getAttribute(lname, ns);
                if (attr != null) {
                    attributes.add(attr);
                }
            }
        } else {
            attributes = new ArrayList();
            List allAttributes = element.getAttributes();
            for (int i = 0; i < allAttributes.size(); i++) {
                Attribute attr = (Attribute) allAttributes.get(i);
                if (attr.getNamespace().equals(ns)) {
                    attributes.add(attr);
                }
            }
        }
    }
}","public void test044() throws Throwable {
    Locale locale0 = Locale.KOREA;
    Element element0 = new Element(""vy"");
    QName qName0 = new QName(""vy"");
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
    JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
}",""
"public NodePointer getNodePointer() {
    if (position == 0) {
        if (!setPosition(1)) {
            return null;
        }
        position = 0;
    }
    int index = position - 1;
    if (index < 0) {
        index = 0;
    }
    return new JDOMAttributePointer(parent, (Attribute) attributes.get(index));
}","public void test055() throws Throwable {
    Locale locale0 = Locale.CHINESE;
    Element element0 = new Element(""vme"");
    NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, element0, locale0);
    QName qName0 = new QName(""<<unknown namespace>>"");
    JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
    jDOMAttributeIterator0.getNodePointer();
}",""
"public JDOMAttributeIterator(NodePointer parent, QName name) {
    this.parent = parent;
    if (parent.getNode() instanceof Element) {
        Element element = (Element) parent.getNode();
        String prefix = name.getPrefix();
        Namespace ns = null;
        if (prefix != null) {
            if (prefix.equals(""xml"")) {
                ns = Namespace.XML_NAMESPACE;
            } else {
                String uri = parent.getNamespaceResolver().getNamespaceURI(prefix);
                if (uri != null) {
                    ns = Namespace.getNamespace(prefix, uri);
                }
                if (ns == null) {
                    // TBD: no attributes
                    attributes = Collections.EMPTY_LIST;
                    return;
                }
            }
        } else {
            ns = Namespace.NO_NAMESPACE;
        }
        String lname = name.getName();
        if (!lname.equals(""*"")) {
            attributes = new ArrayList();
            if (ns != null) {
                Attribute attr = element.getAttribute(lname, ns);
                if (attr != null) {
                    attributes.add(attr);
                }
            }
        } else {
            attributes = new ArrayList();
            List allAttributes = element.getAttributes();
            for (int i = 0; i < allAttributes.size(); i++) {
                Attribute attr = (Attribute) allAttributes.get(i);
                if (attr.getNamespace().equals(ns)) {
                    attributes.add(attr);
                }
            }
        }
    }
}","public void test066() throws Throwable {
    Locale locale0 = Locale.PRC;
    Element element0 = new Element(""vy"");
    QName qName0 = new QName(""vy"", ""vy"");
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
    JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
}",""
"public boolean setPosition(int position) {
    if (attributes == null) {
        return false;
    }
    this.position = position;
    return position >= 1 && position <= attributes.size();
}","public void test077() throws Throwable {
    Locale locale0 = Locale.JAPANESE;
    Element element0 = new Element(""vme"", ""vme"", ""vme"");
    NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, element0, locale0);
    QName qName0 = new QName(""<<unknown namespace>>"");
    JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
    jDOMAttributeIterator0.setPosition(Integer.MIN_VALUE);
}",""
"public NodePointer getNodePointer() {
    if (position == 0) {
        if (!setPosition(1)) {
            return null;
        }
        position = 0;
    }
    int index = position - 1;
    if (index < 0) {
        index = 0;
    }
    return new JDOMAttributePointer(parent, (Attribute) attributes.get(index));
}","public void test088() throws Throwable {
    Locale locale0 = Locale.CANADA_FRENCH;
    Namespace namespace0 = Namespace.NO_NAMESPACE;
    Element element0 = new Element(""vq"", namespace0);
    QName qName0 = new QName(""vq"");
    Element element1 = element0.setAttribute(""vq"", ""vq"", namespace0);
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element1, locale0);
    JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
    jDOMAttributeIterator0.getNodePointer();
}",""
"public NodePointer createAttribute(JXPathContext context, QName name) {
    throw new JXPathException(""Cannot create an attribute for path "" + asPath() + ""/@"" + name + "", operation is not allowed for this type of node"");
}","public void test099() throws Throwable {
    Locale locale0 = Locale.JAPANESE;
    Element element0 = new Element(""vme"", ""vme"");
    NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, element0, locale0);
    QName qName0 = new QName(""vme"");
    nodePointer0.createAttribute((JXPathContext) null, qName0);
}","/**
 * Called to create a non-existing attribute
 * @param context the owning JXPathCOntext
 * @param name the QName at which an attribute should be created
 * @return created NodePointer
 */"
"public JDOMAttributeIterator(NodePointer parent, QName name) {
    this.parent = parent;
    if (parent.getNode() instanceof Element) {
        Element element = (Element) parent.getNode();
        String prefix = name.getPrefix();
        Namespace ns = null;
        if (prefix != null) {
            if (prefix.equals(""xml"")) {
                ns = Namespace.XML_NAMESPACE;
            } else {
                String uri = parent.getNamespaceResolver().getNamespaceURI(prefix);
                if (uri != null) {
                    ns = Namespace.getNamespace(prefix, uri);
                }
                if (ns == null) {
                    // TBD: no attributes
                    attributes = Collections.EMPTY_LIST;
                    return;
                }
            }
        } else {
            ns = Namespace.NO_NAMESPACE;
        }
        String lname = name.getName();
        if (!lname.equals(""*"")) {
            attributes = new ArrayList();
            if (ns != null) {
                Attribute attr = element.getAttribute(lname, ns);
                if (attr != null) {
                    attributes.add(attr);
                }
            }
        } else {
            attributes = new ArrayList();
            List allAttributes = element.getAttributes();
            for (int i = 0; i < allAttributes.size(); i++) {
                Attribute attr = (Attribute) allAttributes.get(i);
                if (attr.getNamespace().equals(ns)) {
                    attributes.add(attr);
                }
            }
        }
    }
}","public void test1010() throws Throwable {
    Locale locale0 = Locale.CHINESE;
    Element element0 = new Element(""vme"");
    NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, element0, locale0);
    QName qName0 = new QName(""*"");
    JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
}",""
"public JDOMAttributeIterator(NodePointer parent, QName name) {
    this.parent = parent;
    if (parent.getNode() instanceof Element) {
        Element element = (Element) parent.getNode();
        String prefix = name.getPrefix();
        Namespace ns = null;
        if (prefix != null) {
            if (prefix.equals(""xml"")) {
                ns = Namespace.XML_NAMESPACE;
            } else {
                String uri = parent.getNamespaceResolver().getNamespaceURI(prefix);
                if (uri != null) {
                    ns = Namespace.getNamespace(prefix, uri);
                }
                if (ns == null) {
                    // TBD: no attributes
                    attributes = Collections.EMPTY_LIST;
                    return;
                }
            }
        } else {
            ns = Namespace.NO_NAMESPACE;
        }
        String lname = name.getName();
        if (!lname.equals(""*"")) {
            attributes = new ArrayList();
            if (ns != null) {
                Attribute attr = element.getAttribute(lname, ns);
                if (attr != null) {
                    attributes.add(attr);
                }
            }
        } else {
            attributes = new ArrayList();
            List allAttributes = element.getAttributes();
            for (int i = 0; i < allAttributes.size(); i++) {
                Attribute attr = (Attribute) allAttributes.get(i);
                if (attr.getNamespace().equals(ns)) {
                    attributes.add(attr);
                }
            }
        }
    }
}","public void test1111() throws Throwable {
    Locale locale0 = Locale.KOREA;
    Element element0 = new Element(""vy"", ""vy"", ""vy"");
    QName qName0 = new QName(""vy"", ""vy"");
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element0, locale0);
    JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
}",""
"public JDOMAttributeIterator(NodePointer parent, QName name) {
    this.parent = parent;
    if (parent.getNode() instanceof Element) {
        Element element = (Element) parent.getNode();
        String prefix = name.getPrefix();
        Namespace ns = null;
        if (prefix != null) {
            if (prefix.equals(""xml"")) {
                ns = Namespace.XML_NAMESPACE;
            } else {
                String uri = parent.getNamespaceResolver().getNamespaceURI(prefix);
                if (uri != null) {
                    ns = Namespace.getNamespace(prefix, uri);
                }
                if (ns == null) {
                    // TBD: no attributes
                    attributes = Collections.EMPTY_LIST;
                    return;
                }
            }
        } else {
            ns = Namespace.NO_NAMESPACE;
        }
        String lname = name.getName();
        if (!lname.equals(""*"")) {
            attributes = new ArrayList();
            if (ns != null) {
                Attribute attr = element.getAttribute(lname, ns);
                if (attr != null) {
                    attributes.add(attr);
                }
            }
        } else {
            attributes = new ArrayList();
            List allAttributes = element.getAttributes();
            for (int i = 0; i < allAttributes.size(); i++) {
                Attribute attr = (Attribute) allAttributes.get(i);
                if (attr.getNamespace().equals(ns)) {
                    attributes.add(attr);
                }
            }
        }
    }
}","public void test1212() throws Throwable {
    Locale locale0 = Locale.ITALY;
    Element element0 = new Element(""xml"");
    NodePointer nodePointer0 = NodePointer.newNodePointer((QName) null, element0, locale0);
    QName qName0 = new QName(""xml"", ""http://www.w3.org/2000/xmlns/"");
    JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
}",""
"public JDOMAttributeIterator(NodePointer parent, QName name) {
    this.parent = parent;
    if (parent.getNode() instanceof Element) {
        Element element = (Element) parent.getNode();
        String prefix = name.getPrefix();
        Namespace ns = null;
        if (prefix != null) {
            if (prefix.equals(""xml"")) {
                ns = Namespace.XML_NAMESPACE;
            } else {
                String uri = parent.getNamespaceResolver().getNamespaceURI(prefix);
                if (uri != null) {
                    ns = Namespace.getNamespace(prefix, uri);
                }
                if (ns == null) {
                    // TBD: no attributes
                    attributes = Collections.EMPTY_LIST;
                    return;
                }
            }
        } else {
            ns = Namespace.NO_NAMESPACE;
        }
        String lname = name.getName();
        if (!lname.equals(""*"")) {
            attributes = new ArrayList();
            if (ns != null) {
                Attribute attr = element.getAttribute(lname, ns);
                if (attr != null) {
                    attributes.add(attr);
                }
            }
        } else {
            attributes = new ArrayList();
            List allAttributes = element.getAttributes();
            for (int i = 0; i < allAttributes.size(); i++) {
                Attribute attr = (Attribute) allAttributes.get(i);
                if (attr.getNamespace().equals(ns)) {
                    attributes.add(attr);
                }
            }
        }
    }
}","public void test1313() throws Throwable {
    Locale locale0 = Locale.CANADA_FRENCH;
    Namespace namespace0 = Namespace.XML_NAMESPACE;
    Element element0 = new Element(""vqm5e"", namespace0);
    QName qName0 = new QName(""*"");
    Element element1 = element0.setAttribute(""vqm5e"", ""*"", namespace0);
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element1, locale0);
    JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
}",""
"public JDOMAttributeIterator(NodePointer parent, QName name) {
    this.parent = parent;
    if (parent.getNode() instanceof Element) {
        Element element = (Element) parent.getNode();
        String prefix = name.getPrefix();
        Namespace ns = null;
        if (prefix != null) {
            if (prefix.equals(""xml"")) {
                ns = Namespace.XML_NAMESPACE;
            } else {
                String uri = parent.getNamespaceResolver().getNamespaceURI(prefix);
                if (uri != null) {
                    ns = Namespace.getNamespace(prefix, uri);
                }
                if (ns == null) {
                    // TBD: no attributes
                    attributes = Collections.EMPTY_LIST;
                    return;
                }
            }
        } else {
            ns = Namespace.NO_NAMESPACE;
        }
        String lname = name.getName();
        if (!lname.equals(""*"")) {
            attributes = new ArrayList();
            if (ns != null) {
                Attribute attr = element.getAttribute(lname, ns);
                if (attr != null) {
                    attributes.add(attr);
                }
            }
        } else {
            attributes = new ArrayList();
            List allAttributes = element.getAttributes();
            for (int i = 0; i < allAttributes.size(); i++) {
                Attribute attr = (Attribute) allAttributes.get(i);
                if (attr.getNamespace().equals(ns)) {
                    attributes.add(attr);
                }
            }
        }
    }
}","public void test1414() throws Throwable {
    Locale locale0 = Locale.CANADA_FRENCH;
    Namespace namespace0 = Namespace.NO_NAMESPACE;
    Element element0 = new Element(""vq"", namespace0);
    QName qName0 = new QName(""*"");
    Element element1 = element0.setAttribute(""vq"", ""*"", namespace0);
    NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, element1, locale0);
    JDOMAttributeIterator jDOMAttributeIterator0 = new JDOMAttributeIterator(nodePointer0, qName0);
}",""
