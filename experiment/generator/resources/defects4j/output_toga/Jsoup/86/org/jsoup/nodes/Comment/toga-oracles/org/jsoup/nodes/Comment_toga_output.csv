project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test011,"public void test011() throws Throwable {
    Comment comment0 = new Comment((String) null);
    comment0.getData();
    assertEquals(""#comment"", comment0.nodeName());
}",0,
project,0,test022,"public void test022() throws Throwable {
    Comment comment0 = new Comment("""", ""iframe"");
    comment0.getData();
    assertEquals(""#comment"", comment0.nodeName());
}",0,
project,0,test033,"public void test033() throws Throwable {
    Comment comment0 = new Comment("";ZMy"", "";ZMy"");
    XmlDeclaration xmlDeclaration0 = comment0.asXmlDeclaration();
    assertNotNull(xmlDeclaration0);
}",0,
project,0,test034,"public void test034() throws Throwable {
    Comment comment0 = new Comment("";ZMy"", "";ZMy"");
    XmlDeclaration xmlDeclaration0 = comment0.asXmlDeclaration();
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test045,"public void test045() throws Throwable {
    Comment comment0 = new Comment(""j7)*@new9&DAC-ekb8W"", ""j7)*@new9&DAC-ekb8W"");
    comment0.reparentChild(comment0);
    // Undeclared exception!
    comment0.toString();
}",0,
project,0,test056,"public void test056() throws Throwable {
    Comment comment0 = new Comment(""?EF'5F+\"""", ""comment"");
    Object object0 = new Object();
    comment0.value = object0;
    // Undeclared exception!
    try {
        comment0.toString();
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // java.lang.Object cannot be cast to java.lang.String
        //
        verifyException(""org.jsoup.nodes.LeafNode"", e);
    }
}",0,
project,0,test067,"public void test067() throws Throwable {
    Comment comment0 = new Comment("";ZMy"", "";ZMy"");
    Parser parser0 = Parser.xmlParser();
    Document document0 = parser0.parseInput(""+!_]D7gjO9H]'9|"", ""+!_]D7gjO9H]'9|"");
    comment0.setParentNode(document0);
    comment0.siblingIndex = (-923);
    // Undeclared exception!
    try {
        comment0.toString();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test078,"public void test078() throws Throwable {
    Comment comment0 = new Comment(""comment"", ""em"");
    StringWriter stringWriter0 = new StringWriter();
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    document_OutputSettings0.indentAmount(35);
    // Undeclared exception!
    comment0.outerHtmlHead(stringWriter0, 958, document_OutputSettings0);
}",0,
project,0,test089,"public void test089() throws Throwable {
    Comment comment0 = new Comment(""org.jsoup.SerializationException"");
    CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) ""#comment"");
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        comment0.outerHtmlHead(charBuffer0, 27, document_OutputSettings0);
        fail(""Expecting exception: ReadOnlyBufferException"");
    } catch (ReadOnlyBufferException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.nio.StringCharBuffer"", e);
    }
}",0,
project,0,test0910,"public void test0910() throws Throwable {
    Comment comment0 = new Comment("""");
    char[] charArray0 = new char[6];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        comment0.outerHtmlHead(charBuffer0, 1, document_OutputSettings0);
        fail(""Expecting exception: BufferOverflowException"");
    } catch (BufferOverflowException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.nio.CharBuffer"", e);
    }
}",0,
project,0,test1011,"public void test1011() throws Throwable {
    Comment comment0 = new Comment(""org.jsoup.nodes.Comment"");
    // Undeclared exception!
    try {
        comment0.outerHtmlHead((Appendable) null, 3720, (Document.OutputSettings) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Comment"", e);
    }
}",0,
project,0,test1112,"public void test1112() throws Throwable {
    Comment comment0 = new Comment(""GXy}3"", ""GXy}3"");
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    StringBuilder stringBuilder0 = new StringBuilder(1);
    // Undeclared exception!
    try {
        comment0.outerHtmlHead(stringBuilder0, (-20569767), document_OutputSettings0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // width must be > 0
        //
        verifyException(""org.jsoup.internal.StringUtil"", e);
    }
}",0,
project,0,test1213,"public void test1213() throws Throwable {
    Comment comment0 = new Comment("""", ""!>206&d5"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(""!>206&d5"");
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    comment0.value = (Object) document_OutputSettings0;
    // Undeclared exception!
    try {
        comment0.outerHtmlHead(mockPrintStream0, 79, document_OutputSettings0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.jsoup.nodes.Document$OutputSettings cannot be cast to java.lang.String
        //
        verifyException(""org.jsoup.nodes.LeafNode"", e);
    }
}",0,
project,0,test1314,"public void test1314() throws Throwable {
    Comment comment0 = new Comment("">206&d5"", "">206&d5"");
    PipedWriter pipedWriter0 = new PipedWriter();
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    try {
        comment0.outerHtmlHead(pipedWriter0, 26, document_OutputSettings0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Pipe not connected
        //
        verifyException(""java.io.PipedWriter"", e);
    }
}",0,
project,0,test1415,"public void test1415() throws Throwable {
    Comment comment0 = new Comment((String) null);
    // Undeclared exception!
    try {
        comment0.isXmlDeclaration();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Comment"", e);
    }
}",0,
project,0,test1516,"public void test1516() throws Throwable {
    Comment comment0 = new Comment("""");
    Object object0 = new Object();
    comment0.value = object0;
    // Undeclared exception!
    try {
        comment0.isXmlDeclaration();
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // java.lang.Object cannot be cast to java.lang.String
        //
        verifyException(""org.jsoup.nodes.LeafNode"", e);
    }
}",0,
project,0,test1617,"public void test1617() throws Throwable {
    Comment comment0 = new Comment(""?EF'5F+\"""", ""comment"");
    Object object0 = new Object();
    comment0.value = object0;
    // Undeclared exception!
    try {
        comment0.getData();
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // java.lang.Object cannot be cast to java.lang.String
        //
        verifyException(""org.jsoup.nodes.LeafNode"", e);
    }
}",0,
project,0,test1718,"public void test1718() throws Throwable {
    Comment comment0 = new Comment("""", """");
    // Undeclared exception!
    try {
        comment0.asXmlDeclaration();
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test1819,"public void test1819() throws Throwable {
    Comment comment0 = new Comment((String) null);
    // Undeclared exception!
    try {
        comment0.asXmlDeclaration();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Comment"", e);
    }
}",0,
project,0,test1920,"public void test1920() throws Throwable {
    Comment comment0 = new Comment(""!stZ9RYK_*dt!B:`e8h"", ""^4pj{Mp:,@&"");
    Tag tag0 = Tag.valueOf(""<"");
    Attributes attributes0 = new Attributes();
    PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ""G"", attributes0);
    comment0.value = (Object) pseudoTextElement0;
    // Undeclared exception!
    try {
        comment0.asXmlDeclaration();
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.jsoup.nodes.PseudoTextElement cannot be cast to java.lang.String
        //
        verifyException(""org.jsoup.nodes.LeafNode"", e);
    }
}",0,
project,0,test2021,"public void test2021() throws Throwable {
    Comment comment0 = new Comment(""?NV^SU^"", """");
    boolean boolean0 = comment0.isXmlDeclaration();
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test2022,"public void test2022() throws Throwable {
    Comment comment0 = new Comment(""?NV^SU^"", """");
    boolean boolean0 = comment0.isXmlDeclaration();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2123,"public void test2123() throws Throwable {
    Comment comment0 = new Comment(""comment"", ""em"");
    comment0.getData();
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test2224,"public void test2224() throws Throwable {
    Comment comment0 = new Comment(""org.jsoup.SerializationException"");
    String string0 = comment0.nodeName();
    assertEquals(""#comment"", string0);
}",0,
project,0,test2325,"public void test2325() throws Throwable {
    Comment comment0 = new Comment(""m/i4B(xa"", ""m/i4B(xa"");
    XmlDeclaration xmlDeclaration0 = comment0.asXmlDeclaration();
    assertNull(xmlDeclaration0);
}",0,
project,0,test2326,"public void test2326() throws Throwable {
    Comment comment0 = new Comment(""m/i4B(xa"", ""m/i4B(xa"");
    XmlDeclaration xmlDeclaration0 = comment0.asXmlDeclaration();
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test2427,"public void test2427() throws Throwable {
    Comment comment0 = new Comment(""m?j49`a"");
    // Undeclared exception!
    try {
        comment0.asXmlDeclaration();
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test2528,"public void test2528() throws Throwable {
    Comment comment0 = new Comment(""GXy}3"", ""GXy}3"");
    boolean boolean0 = comment0.isXmlDeclaration();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2529,"public void test2529() throws Throwable {
    Comment comment0 = new Comment(""GXy}3"", ""GXy}3"");
    boolean boolean0 = comment0.isXmlDeclaration();
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test2630,"public void test2630() throws Throwable {
    Comment comment0 = new Comment("""", ""!>206&d5"");
    boolean boolean0 = comment0.isXmlDeclaration();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2631,"public void test2631() throws Throwable {
    Comment comment0 = new Comment("""", ""!>206&d5"");
    boolean boolean0 = comment0.isXmlDeclaration();
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test2732,"public void test2732() throws Throwable {
    Comment comment0 = new Comment("";ZMy"", "";ZMy"");
    String string0 = comment0.toString();
    assertEquals(""#comment"", comment0.nodeName());
}",0,
project,0,test2733,"public void test2733() throws Throwable {
    Comment comment0 = new Comment("";ZMy"", "";ZMy"");
    String string0 = comment0.toString();
    assertEquals(""\n<!--;ZMy-->"", string0);
}",0,assertNotNull(string0)
project,0,test2834,"public void test2834() throws Throwable {
    Comment comment0 = new Comment("""", ""!>206&d5"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(""!>206&d5"");
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
    comment0.outerHtmlHead(mockPrintStream0, 79, document_OutputSettings1);
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test2935,"public void test2935() throws Throwable {
    Comment comment0 = new Comment(""!+PV"");
    boolean boolean0 = comment0.isXmlDeclaration();
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test2936,"public void test2936() throws Throwable {
    Comment comment0 = new Comment(""!+PV"");
    boolean boolean0 = comment0.isXmlDeclaration();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
