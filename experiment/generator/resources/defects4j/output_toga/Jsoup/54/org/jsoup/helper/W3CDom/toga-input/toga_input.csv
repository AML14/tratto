focal_method,test_prefix,docstring
"public Document fromJsoup(org.jsoup.nodes.Document in) {
    Validate.notNull(in);
    DocumentBuilder builder;
    try {
        //set the factory to be namespace-aware
        factory.setNamespaceAware(true);
        builder = factory.newDocumentBuilder();
        Document out = builder.newDocument();
        convert(in, out);
        return out;
    } catch (ParserConfigurationException e) {
        throw new IllegalStateException(e);
    }
}","public void test033() throws Throwable {
    W3CDom w3CDom0 = new W3CDom();
    Document document0 = new Document(""xmlns:class"");
    document0.appendElement(""xmlns:class"");
    // Undeclared exception!
    try {
        w3CDom0.fromJsoup(document0);
        fail(""Expecting exception: DOMException"");
    } catch (DOMException e) {
    }
}","/**
 * Convert a jsoup Document to a W3C Document.
 * @param in jsoup doc
 * @return w3c doc
 */"
"public Document fromJsoup(org.jsoup.nodes.Document in) {
    Validate.notNull(in);
    DocumentBuilder builder;
    try {
        //set the factory to be namespace-aware
        factory.setNamespaceAware(true);
        builder = factory.newDocumentBuilder();
        Document out = builder.newDocument();
        convert(in, out);
        return out;
    } catch (ParserConfigurationException e) {
        throw new IllegalStateException(e);
    }
}","public void test044() throws Throwable {
    W3CDom w3CDom0 = new W3CDom();
    Document document0 = new Document(""org.jsoup.select.Evaluator$IndexEvaluator"");
    w3CDom0.factory = null;
    // Undeclared exception!
    try {
        w3CDom0.fromJsoup(document0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.helper.W3CDom"", e);
    }
}","/**
 * Convert a jsoup Document to a W3C Document.
 * @param in jsoup doc
 * @return w3c doc
 */"
"public Document fromJsoup(org.jsoup.nodes.Document in) {
    Validate.notNull(in);
    DocumentBuilder builder;
    try {
        //set the factory to be namespace-aware
        factory.setNamespaceAware(true);
        builder = factory.newDocumentBuilder();
        Document out = builder.newDocument();
        convert(in, out);
        return out;
    } catch (ParserConfigurationException e) {
        throw new IllegalStateException(e);
    }
}","public void test055() throws Throwable {
    W3CDom w3CDom0 = new W3CDom();
    Document document0 = new Document("""");
    // Undeclared exception!
    try {
        w3CDom0.fromJsoup(document0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}","/**
 * Convert a jsoup Document to a W3C Document.
 * @param in jsoup doc
 * @return w3c doc
 */"
"public Document fromJsoup(org.jsoup.nodes.Document in) {
    Validate.notNull(in);
    DocumentBuilder builder;
    try {
        //set the factory to be namespace-aware
        factory.setNamespaceAware(true);
        builder = factory.newDocumentBuilder();
        Document out = builder.newDocument();
        convert(in, out);
        return out;
    } catch (ParserConfigurationException e) {
        throw new IllegalStateException(e);
    }
}","public void test066() throws Throwable {
    W3CDom w3CDom0 = new W3CDom();
    // Undeclared exception!
    try {
        w3CDom0.fromJsoup((Document) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}","/**
 * Convert a jsoup Document to a W3C Document.
 * @param in jsoup doc
 * @return w3c doc
 */"
"public void convert(org.jsoup.nodes.Document in, Document out) {
    if (!StringUtil.isBlank(in.location()))
        out.setDocumentURI(in.location());
    // skip the #root node
    org.jsoup.nodes.Element rootEl = in.child(0);
    NodeTraversor traversor = new NodeTraversor(new W3CBuilder(out));
    traversor.traverse(rootEl);
}","public void test077() throws Throwable {
    W3CDom w3CDom0 = new W3CDom();
    // Undeclared exception!
    try {
        w3CDom0.convert((Document) null, (org.w3c.dom.Document) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.helper.W3CDom"", e);
    }
}","/**
 * Converts a jsoup document into the provided W3C Document. If required, you can set options on the output document
 * before converting.
 * @param in jsoup doc
 * @param out w3c doc
 * @see org.jsoup.helper.W3CDom#fromJsoup(org.jsoup.nodes.Document)
 */"
"public Document fromJsoup(org.jsoup.nodes.Document in) {
    Validate.notNull(in);
    DocumentBuilder builder;
    try {
        //set the factory to be namespace-aware
        factory.setNamespaceAware(true);
        builder = factory.newDocumentBuilder();
        Document out = builder.newDocument();
        convert(in, out);
        return out;
    } catch (ParserConfigurationException e) {
        throw new IllegalStateException(e);
    }
}","public void test088() throws Throwable {
    W3CDom w3CDom0 = new W3CDom();
    Document document0 = Document.createShell("""");
    Charset charset0 = Charset.defaultCharset();
    document0.charset(charset0);
    org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
    assertNotNull(document1);
}","/**
 * Convert a jsoup Document to a W3C Document.
 * @param in jsoup doc
 * @return w3c doc
 */"
"public void convert(org.jsoup.nodes.Document in, Document out) {
    if (!StringUtil.isBlank(in.location()))
        out.setDocumentURI(in.location());
    // skip the #root node
    org.jsoup.nodes.Element rootEl = in.child(0);
    NodeTraversor traversor = new NodeTraversor(new W3CBuilder(out));
    traversor.traverse(rootEl);
}","public void test099() throws Throwable {
    W3CDom w3CDom0 = new W3CDom();
    Document document0 = Document.createShell("""");
    org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
    // Undeclared exception!
    try {
        w3CDom0.convert(document0, document1);
        fail(""Expecting exception: DOMException"");
    } catch (DOMException e) {
    }
}","/**
 * Converts a jsoup document into the provided W3C Document. If required, you can set options on the output document
 * before converting.
 * @param in jsoup doc
 * @param out w3c doc
 * @see org.jsoup.helper.W3CDom#fromJsoup(org.jsoup.nodes.Document)
 */"
"public Document fromJsoup(org.jsoup.nodes.Document in) {
    Validate.notNull(in);
    DocumentBuilder builder;
    try {
        //set the factory to be namespace-aware
        factory.setNamespaceAware(true);
        builder = factory.newDocumentBuilder();
        Document out = builder.newDocument();
        convert(in, out);
        return out;
    } catch (ParserConfigurationException e) {
        throw new IllegalStateException(e);
    }
}","public void test1414() throws Throwable {
    Document document0 = Document.createShell(""U=Eo(Gz'NrC%:"");
    W3CDom w3CDom0 = new W3CDom();
    document0.title(""U=Eo(Gz'NrC%:"");
    org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
    assertNotNull(document1);
}","/**
 * Convert a jsoup Document to a W3C Document.
 * @param in jsoup doc
 * @return w3c doc
 */"
"public void convert(org.jsoup.nodes.Document in, Document out) {
    if (!StringUtil.isBlank(in.location()))
        out.setDocumentURI(in.location());
    // skip the #root node
    org.jsoup.nodes.Element rootEl = in.child(0);
    NodeTraversor traversor = new NodeTraversor(new W3CBuilder(out));
    traversor.traverse(rootEl);
}","public void test1616() throws Throwable {
    W3CDom w3CDom0 = new W3CDom();
    Document document0 = Document.createShell("""");
    org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
    Document document2 = new Document(""org.jsoup.select.Evaluator$Attribute"");
    // Undeclared exception!
    try {
        w3CDom0.convert(document2, document1);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}","/**
 * Converts a jsoup document into the provided W3C Document. If required, you can set options on the output document
 * before converting.
 * @param in jsoup doc
 * @param out w3c doc
 * @see org.jsoup.helper.W3CDom#fromJsoup(org.jsoup.nodes.Document)
 */"
"public String asString(Document doc) {
    try {
        DOMSource domSource = new DOMSource(doc);
        StringWriter writer = new StringWriter();
        StreamResult result = new StreamResult(writer);
        TransformerFactory tf = TransformerFactory.newInstance();
        Transformer transformer = tf.newTransformer();
        transformer.transform(domSource, result);
        return writer.toString();
    } catch (TransformerException e) {
        throw new IllegalStateException(e);
    }
}","public void test1717() throws Throwable {
    W3CDom w3CDom0 = new W3CDom();
    Document document0 = Document.createShell("":"");
    org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
    String string0 = w3CDom0.asString(document1);
    assertEquals(""<html>\n<head>\n<META http-equiv=\""Content-Type\"" content=\""text/html; charset=UTF-8\"">\n</head>\n<body></body>\n</html>\n"", string0);
}","/**
 * Serialize a W3C document to a String.
 * @param doc Document
 * @return Document as string
 */"
