project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
    tokeniser0.createTempBuffer();
}",0,
project,0,test011,"public void test011() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""kVab&Ox"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    tokeniser0.emitDoctypePending();
}",0,
project,0,test022,"public void test022() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
    tokeniser0.acknowledgeSelfClosingFlag();
}",0,
project,0,test033,"public void test033() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    CharacterReader characterReader0 = new CharacterReader(""numeric reference with no numerals"");
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    tokeniser0.createCommentPending();
}",0,
project,0,test044,"public void test044() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    CharacterReader characterReader0 = new CharacterReader(""W<PM!,iwmAb;P>/2${["");
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Token token0 = tokeniser0.read();
    assertEquals(14, characterReader0.pos());
}",0,"assertEquals(0, characterReader0.pos())"
project,0,test056,"public void test056() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    CharacterReader characterReader0 = new CharacterReader(""#hrB&;CEfG91dq-"");
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    tokeniser0.read();
}",0,
project,0,test067,"public void test067() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""kVab&Ox"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    tokeniser0.emitCommentPending();
}",0,
project,0,test078,"public void test078() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
    boolean boolean0 = tokeniser0.currentNodeInHtmlNS();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test089,"public void test089() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
    tokeniser0.createDoctypePending();
}",0,
project,0,test0910,"public void test0910() throws Throwable {
    StringReader stringReader0 = new StringReader(""kVab&Ox"");
    CharacterReader characterReader0 = new CharacterReader(stringReader0);
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    tokeniser0.getState();
}",0,
project,0,test1011,"public void test1011() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    CharacterReader characterReader0 = new CharacterReader(""KD`%\""&#579gRO"");
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    char[] charArray0 = new char[0];
    tokeniser0.emit(charArray0);
    assertArrayEquals(new char[] {}, charArray0);
}",0,
project,0,test1520,"public void test1520() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    CharacterReader characterReader0 = new CharacterReader(""[&gg;"");
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    TokeniserState tokeniserState0 = TokeniserState.AttributeValue_unquoted;
    tokeniser0.advanceTransition(tokeniserState0);
    // Undeclared exception!
    try {
        tokeniser0.read();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TokeniserState$40"", e);
    }
}",0,
project,0,test1621,"public void test1621() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    CharacterReader characterReader0 = new CharacterReader(""K\""&#3MgPFO"");
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Character character0 = new Character('K');
    int[] intArray0 = tokeniser0.consumeCharacterReference(character0, false);
    assertNull(intArray0);
}",0,
project,0,test2129,"public void test2129() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Ny,&gt-"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    String string0 = tokeniser0.unescapeEntities(true);
    assertTrue(characterReader0.isEmpty());
}",0,assertTrue(characterReader0.isEmpty())
project,0,test2130,"public void test2130() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Ny,&gt-"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    String string0 = tokeniser0.unescapeEntities(true);
    assertEquals(""Ny,&gt-"", string0);
}",0,
project,0,test2535,"public void test2535() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
    Token.Tag token_Tag0 = tokeniser0.createTagPending(false);
    assertNotNull(token_Tag0);
}",0,assertNotNull(token_Tag0)
project,0,test2636,"public void test2636() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
    boolean boolean0 = tokeniser0.isAppropriateEndTagToken();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2737,"public void test2737() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""kVab&Ox"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Attributes attributes0 = new Attributes();
    tokeniser0.tagPending = (Token.Tag) token_StartTag0;
    token_StartTag0.nameAttr(""kVab&Ox"", attributes0);
    tokeniser0.emit(token_StartTag0);
    token_StartTag0.appendTagName(""kVab&Ox"");
    boolean boolean0 = tokeniser0.isAppropriateEndTagToken();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2838,"public void test2838() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""kVab&Ox"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Attributes attributes0 = new Attributes();
    tokeniser0.tagPending = (Token.Tag) token_StartTag0;
    token_StartTag0.nameAttr(""kVab&Ox"", attributes0);
    tokeniser0.emit(token_StartTag0);
    boolean boolean0 = tokeniser0.isAppropriateEndTagToken();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2939,"public void test2939() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""kVab&Ox"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Attributes attributes0 = new Attributes();
    token_StartTag0.nameAttr(""kVab&Ox"", attributes0);
    tokeniser0.emit(token_StartTag0);
    String string0 = tokeniser0.appropriateEndTagName();
    assertEquals(""kVab&Ox"", string0);
}",0,assertNotNull(string0)
project,0,test3040,"public void test3040() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(5);
    Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
    String string0 = tokeniser0.appropriateEndTagName();
    assertNull(string0);
}",0,
project,0,test3651,"public void test3651() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    CharacterReader characterReader0 = new CharacterReader(""&gt;"");
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    String string0 = tokeniser0.unescapeEntities(true);
    assertTrue(characterReader0.isEmpty());
}",0,assertTrue(characterReader0.isEmpty())
project,0,test3652,"public void test3652() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    CharacterReader characterReader0 = new CharacterReader(""&gt;"");
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    String string0 = tokeniser0.unescapeEntities(true);
    assertEquals("">"", string0);
}",0,assertNotNull(string0)
