project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse("""", ""aside"");
    Document document1 = document0.clone();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.replaceActiveFormattingElement(document1, document0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test0011,"public void test0011() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    String[] stringArray0 = new String[1];
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inScope(stringArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test0022,"public void test0022() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse("""", """");
    assertEquals(1, document0.childNodeSize());
}",0,"assertEquals(1, document0.childNodeSize())"
project,0,test0023,"public void test0023() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse("""", """");
    boolean boolean0 = htmlTreeBuilder0.inScope(""textarea"", htmlTreeBuilder0.TagsSearchInScope);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0034,"public void test0034() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    Element element0 = document0.head();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.replaceOnStack(document0, element0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test0045,"public void test0045() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""TreeBuilder{currentToken=org.jsoup.parser.Token$EOF@13, state=InBody, currentElement=<body>\n _\n</body>}"", ""aV"");
    Document document1 = document0.clone();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertOnStackAfter(document1, document0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test0056,"public void test0056() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""F"", ""F"", (ParseErrorList) null);
    htmlTreeBuilder0.insertInFosterParent(document0);
    assertEquals(2, document0.siblingIndex());
}",0,"assertEquals(0, document0.siblingIndex())"
project,0,test0078,"public void test0078() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""sGCm Tw\""jt+7rNsfGIS"", ""sGCm Tw\""jt+7rNsfGIS"", (ParseErrorList) null);
    htmlTreeBuilder0.insert(document0);
    assertEquals(1, document0.siblingIndex());
}",0,"assertEquals(0, document0.siblingIndex())"
project,0,test0079,"public void test0079() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""sGCm Tw\""jt+7rNsfGIS"", ""sGCm Tw\""jt+7rNsfGIS"", (ParseErrorList) null);
    htmlTreeBuilder0.insert(document0);
    assertEquals(1, document0.childNodeSize());
}",0,"assertEquals(0, document0.childNodeSize())"
project,0,test00810,"public void test00810() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterAfterFrameset;
    htmlTreeBuilder0.transition(htmlTreeBuilderState0);
}",0,
project,0,test00911,"public void test00911() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse("""", """");
    htmlTreeBuilder0.setHeadElement(document0);
    assertEquals(1, document0.childNodeSize());
}",0,"assertEquals(0, document0.childNodeSize())"
project,0,test01012,"public void test01012() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.reconstructFormattingElements();
}",0,
project,0,test01113,"public void test01113() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
    htmlTreeBuilder0.replaceActiveFormattingElement((Element) null, (Element) null);
}",0,
project,0,test01214,"public void test01214() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    Attributes attributes0 = new Attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""h6"", attributes0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertEmpty(token_StartTag1);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test01315,"public void test01315() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    htmlTreeBuilder0.clearStackToTableRowContext();
}",0,
project,0,test01416,"public void test01416() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    htmlTreeBuilder0.clearStackToTableBodyContext();
}",0,
project,0,test01517,"public void test01517() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse("""", """");
    String string0 = htmlTreeBuilder0.toString();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test01618,"public void test01618() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    htmlTreeBuilder0.state();
}",0,
project,0,test01719,"public void test01719() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    htmlTreeBuilder0.parse(""body"", ""uS\""c%)-V"", parseErrorList0);
    CharacterReader characterReader0 = htmlTreeBuilder0.reader;
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Token.Comment token_Comment0 = tokeniser0.commentPending;
    boolean boolean0 = htmlTreeBuilder0.process(token_Comment0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test01820,"public void test01820() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    htmlTreeBuilder0.parse(""body"", ""uS\""c%)-V"", parseErrorList0);
    Element element0 = htmlTreeBuilder0.pop();
    assertEquals(""uS\""c%)-V"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test01821,"public void test01821() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    htmlTreeBuilder0.parse(""body"", ""uS\""c%)-V"", parseErrorList0);
    Element element0 = htmlTreeBuilder0.pop();
    assertEquals(1, element0.siblingIndex());
}",0,
project,0,test01822,"public void test01822() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    htmlTreeBuilder0.parse(""body"", ""uS\""c%)-V"", parseErrorList0);
    Element element0 = htmlTreeBuilder0.pop();
    boolean boolean0 = htmlTreeBuilder0.inSelectScope(""'TjF"");
    assertFalse(boolean0);
}",0,
project,0,test01923,"public void test01923() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""Q[{btCo,W<8"", ""Q[{btCo,W<8"");
    Element element0 = document0.head();
    boolean boolean0 = htmlTreeBuilder0.isSpecial(element0);
    assertEquals(0, element0.siblingIndex());
}",0,"assertEquals(0, element0.siblingIndex())"
project,0,test01924,"public void test01924() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""Q[{btCo,W<8"", ""Q[{btCo,W<8"");
    Element element0 = document0.head();
    boolean boolean0 = htmlTreeBuilder0.isSpecial(element0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test02025,"public void test02025() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""colgroup"");
    boolean boolean0 = htmlTreeBuilder0.isSpecial(document0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02126,"public void test02126() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    boolean boolean0 = htmlTreeBuilder0.isFosterInserts();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02227,"public void test02227() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse("""", """");
    Element element0 = htmlTreeBuilder0.insertStartTag(""style"");
    assertEquals(0, element0.siblingIndex());
}",0,"assertEquals(0, element0.siblingIndex())"
project,0,test02328,"public void test02328() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""Vl};:e"", ""progress"");
    CharacterReader characterReader0 = new CharacterReader(""noscript"");
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, (ParseErrorList) null);
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Attributes attributes0 = new Attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""RKjuL-3TR3)%"", attributes0);
    Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
    assertEquals(1, element0.siblingIndex());
}",0,"assertEquals(0, element0.siblingIndex())"
project,0,test02329,"public void test02329() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""Vl};:e"", ""progress"");
    CharacterReader characterReader0 = new CharacterReader(""noscript"");
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, (ParseErrorList) null);
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Attributes attributes0 = new Attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""RKjuL-3TR3)%"", attributes0);
    Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
    assertEquals(""progress"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test02430,"public void test02430() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""thead"", "" > "");
    assertEquals(1, document0.childNodeSize());
}",0,"assertEquals(1, document0.childNodeSize())"
project,0,test02431,"public void test02431() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""thead"", "" > "");
    assertEquals("">"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test02432,"public void test02432() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""thead"", "" > "");
    boolean boolean0 = htmlTreeBuilder0.inTableScope(""EgTf$"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02533,"public void test02533() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Document document0 = htmlTreeBuilder0.parse(""body"", ""uS\""c%)-V"", parseErrorList0);
    assertEquals(""uS\""c%)-V"", document0.location());
}",0,assertNotNull(document0.location())
project,0,test02534,"public void test02534() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Document document0 = htmlTreeBuilder0.parse(""body"", ""uS\""c%)-V"", parseErrorList0);
    assertEquals(1, document0.childNodeSize());
}",0,"assertEquals(0, document0.childNodeSize())"
project,0,test02535,"public void test02535() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Document document0 = htmlTreeBuilder0.parse(""body"", ""uS\""c%)-V"", parseErrorList0);
    boolean boolean0 = htmlTreeBuilder0.inScope(""body"", htmlTreeBuilder0.TagsSearchInScope);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test02636,"public void test02636() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
    assertNull(arrayList0);
}",0,assertNotNull(arrayList0)
project,0,test02838,"public void test02838() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    htmlTreeBuilder0.parse(""body"", ""uS\""c%)-V"", parseErrorList0);
    Element element0 = htmlTreeBuilder0.getHeadElement();
    assertEquals(0, element0.siblingIndex());
}",0,"assertEquals(0, element0.siblingIndex())"
project,0,test02839,"public void test02839() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    htmlTreeBuilder0.parse(""body"", ""uS\""c%)-V"", parseErrorList0);
    Element element0 = htmlTreeBuilder0.getHeadElement();
    assertEquals(""uS\""c%)-V"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test02840,"public void test02840() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    htmlTreeBuilder0.parse(""body"", ""uS\""c%)-V"", parseErrorList0);
    Element element0 = htmlTreeBuilder0.getHeadElement();
    assertEquals(0, element0.childNodeSize());
}",0,"assertEquals(0, element0.childNodeSize())"
project,0,test02941,"public void test02941() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse("""", """");
    Element element0 = htmlTreeBuilder0.getFromStack(""TreeBuilder{currentToken=org.jsoup.parser.Token$EOF@13, state=InBody, currentElement=<body />}"");
    assertNull(element0);
}",0,assertNotNull(element0)
project,0,test03042,"public void test03042() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.initialiseParse(""Ca"", ""'jF"", (ParseErrorList) null);
    Document document0 = htmlTreeBuilder0.getDocument();
    assertEquals(""'jF"", document0.location());
}",0,assertNotNull(document0.location())
project,0,test03143,"public void test03143() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""F"", ""F"", (ParseErrorList) null);
    Document document0 = htmlTreeBuilder0.getDocument();
    assertEquals(1, document0.childNodeSize());
}",0,"assertEquals(0, document0.childNodeSize())"
project,0,test03244,"public void test03244() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse("""", """");
    String string0 = htmlTreeBuilder0.getBaseUri();
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test03345,"public void test03345() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    boolean boolean0 = htmlTreeBuilder0.framesetOk();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test03447,"public void test03447() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Document document0 = htmlTreeBuilder0.parse(""body"", ""uS\""c%)-V"", parseErrorList0);
    assertEquals(""uS\""c%)-V"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test03448,"public void test03448() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Document document0 = htmlTreeBuilder0.parse(""body"", ""uS\""c%)-V"", parseErrorList0);
    boolean boolean0 = htmlTreeBuilder0.framesetOk();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test03549,"public void test03549() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.resetInsertionMode();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test03650,"public void test03650() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.replaceOnStack((Element) null, (Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test03751,"public void test03751() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""WyEI]'7rN"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.removeFromStack(document0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test03852,"public void test03852() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.push((Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test03953,"public void test03953() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterAfterFrameset;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.process((Token) null, htmlTreeBuilderState0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilderState$22"", e);
    }
}",0,
project,0,test04054,"public void test04054() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    CharacterReader characterReader0 = new CharacterReader(""pre"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(1223);
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Token.Tag token_Tag0 = tokeniser0.createTagPending(true);
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InHeadNoscript;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test04155,"public void test04155() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    CharacterReader characterReader0 = new CharacterReader(""table"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Token.Doctype token_Doctype0 = tokeniser0.doctypePending;
    Token.TokenType token_TokenType0 = Token.TokenType.Character;
    token_Doctype0.type = token_TokenType0;
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.BeforeHead;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.process(token_Doctype0, htmlTreeBuilderState0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.jsoup.parser.Token$Doctype cannot be cast to org.jsoup.parser.Token$Character
        //
        verifyException(""org.jsoup.parser.Token"", e);
    }
}",0,
project,0,test04256,"public void test04256() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    CharacterReader characterReader0 = new CharacterReader(""f2*BS>:okK]H<=p([+:"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Token.Doctype token_Doctype0 = tokeniser0.doctypePending;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.process(token_Doctype0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test04357,"public void test04357() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""center"", ""center"");
    Token.StartTag token_StartTag0 = new Token.StartTag();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.process(token_StartTag0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test04458,"public void test04458() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.popStackToClose(""5"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test04559,"public void test04559() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.popStackToBefore((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test04660,"public void test04660() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.pop();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test04761,"public void test04761() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking((-684));
    // Undeclared exception!
    try {
        htmlTreeBuilder0.parseFragment((String) null, document0, ""utf"", parseErrorList0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String input must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test04862,"public void test04862() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(1186);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.parse(""StartTag"", (String) null, parseErrorList0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // BaseURI must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test04963,"public void test04963() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.onStack((Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05064,"public void test05064() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.maybeSetBaseUri((Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05165,"public void test05165() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertStartTag("""");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test05266,"public void test05266() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Tag tag0 = Tag.valueOf(""3y8r]MK("");
    TextNode textNode0 = TextNode.createFromEncoded(""sQ+V0KT4wmmv6.e=t"", ""sQ+V0KT4wmmv6.e=t"");
    Attributes attributes0 = textNode0.attributes();
    Element element0 = new Element(tag0, ""sQ+V0KT4wmmv6.e=t"", attributes0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertOnStackAfter(element0, element0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05367,"public void test05367() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertInFosterParent((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05468,"public void test05468() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    String[] stringArray0 = new String[2];
    stringArray0[0] = ""Q[{bt1CoW<8"";
    stringArray0[1] = ""Q[{bt1CoW<8"";
    htmlTreeBuilder0.popStackToClose(stringArray0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertInFosterParent(document0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test05569,"public void test05569() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertForm((Token.StartTag) null, false);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05670,"public void test05670() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    CharacterReader characterReader0 = new CharacterReader("""");
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, (ParseErrorList) null);
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertForm(token_StartTag0, false);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test05771,"public void test05771() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertEmpty((Token.StartTag) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05872,"public void test05872() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert((Token.StartTag) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05973,"public void test05973() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert((Token.Comment) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test06074,"public void test06074() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert((Token.Character) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TreeBuilder"", e);
    }
}",0,
project,0,test06175,"public void test06175() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert((Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test06276,"public void test06276() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    String[] stringArray0 = new String[2];
    stringArray0[0] = ""Q[{bt1CoW<8"";
    stringArray0[1] = ""Q[{bt1CoW<8"";
    htmlTreeBuilder0.popStackToClose(stringArray0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inTableScope(""Q[{bt1CoW<8"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Should not be reachable
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test06377,"public void test06377() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inSelectScope((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test06478,"public void test06478() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse("""", """");
    htmlTreeBuilder0.popStackToClose(""AfterDoctypeSystemIdentifier"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inScope(""textarea"", htmlTreeBuilder0.TagsSearchInScope);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Should not be reachable
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test06579,"public void test06579() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.getFromStack((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test06680,"public void test06680() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.generateImpliedEndTags("""");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TreeBuilder"", e);
    }
}",0,
project,0,test06781,"public void test06781() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterFrameset;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.error(htmlTreeBuilderState0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test06882,"public void test06882() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.aboveOnStack((Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test06983,"public void test06983() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.clearFormattingElementsToLastMarker();
}",0,
project,0,test07084,"public void test07084() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = new ParseErrorList(19, (-1444061932));
    htmlTreeBuilder0.parse(""TreeBuilder{currentToken=org.jsoup.parser.Token$EOF@13, state=InBody, currentElement=<body />}"", ""body"", parseErrorList0);
    htmlTreeBuilder0.generateImpliedEndTags(""TreeBuilder{currentToken=org.jsoup.parser.Token$EOF@13, state=InBody, currentElement=<body />}"");
}",0,
project,0,test07185,"public void test07185() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Document document0 = htmlTreeBuilder0.parse(""body"", ""uS\""c%)-V"", parseErrorList0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.aboveOnStack(document0);
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test07286,"public void test07286() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    htmlTreeBuilder0.popStackToBefore("" N/A6$h"");
}",0,
project,0,test07387,"public void test07387() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    TextNode textNode0 = new TextNode(""uS\""c%)-V"", ""Q[{bt1CoW<8"");
    Attributes attributes0 = textNode0.attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""style"", attributes0);
    FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag1, false);
    assertEquals(1, formElement0.siblingIndex());
}",0,"assertEquals(1, formElement0.siblingIndex())"
project,0,test07488,"public void test07488() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Tag tag0 = Tag.valueOf(""BZ(%L.wD^u+"");
    TextNode textNode0 = TextNode.createFromEncoded(""BZ(%L.wD^u+"", ""2 =`hrBUh16cL="");
    Attributes attributes0 = textNode0.attributes();
    FormElement formElement0 = new FormElement(tag0, ""BZ(%L.wD^u+"", attributes0);
    htmlTreeBuilder0.maybeSetBaseUri(formElement0);
    assertEquals(0, formElement0.childNodeSize());
}",0,"assertEquals(1, formElement0.childNodeSize())"
project,0,test07589,"public void test07589() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inListItemScope(""Q[{bt1CoW<8"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test07690,"public void test07690() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.newPendingTableCharacters();
}",0,
project,0,test07791,"public void test07791() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.setFormElement((FormElement) null);
}",0,
project,0,test07892,"public void test07892() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.getDocument();
    assertNull(document0);
}",0,assertNotNull(document0)
project,0,test07993,"public void test07993() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    String string0 = htmlTreeBuilder0.getBaseUri();
    assertNull(string0);
}",0,
project,0,test08094,"public void test08094() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
    Element element0 = htmlTreeBuilder0.getActiveFormattingElement(""7Sy~(C-Jv"");
    assertNull(element0);
}",0,assertNotNull(element0)
project,0,test08195,"public void test08195() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Element element0 = htmlTreeBuilder0.getActiveFormattingElement(""%>vDE"");
    assertNull(element0);
}",0,assertNotNull(element0)
project,0,test08296,"public void test08296() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.removeFromActiveFormattingElements((Element) null);
}",0,
project,0,test08397,"public void test08397() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
    assertNull(element0);
}",0,
project,0,test08498,"public void test08498() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
    Element element0 = htmlTreeBuilder0.lastFormattingElement();
    assertNull(element0);
}",0,assertNotNull(element0)
project,0,test08599,"public void test08599() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Document document0 = htmlTreeBuilder0.parse(""body"", ""body"", parseErrorList0);
    assertEquals(1, document0.childNodeSize());
}",0,
project,0,test085100,"public void test085100() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Document document0 = htmlTreeBuilder0.parse(""body"", ""body"", parseErrorList0);
    boolean boolean0 = htmlTreeBuilder0.inSelectScope(""body"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test086101,"public void test086101() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    htmlTreeBuilder0.parse(""body"", ""uS\""c%)-V"", parseErrorList0);
    htmlTreeBuilder0.popStackToClose(""sGCm 3w\""jt+7rNsfIS"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inSelectScope(""'QjF"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Should not be reachable
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test087104,"public void test087104() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Document document0 = htmlTreeBuilder0.parse(""body"", ""uS\""c%)-V"", parseErrorList0);
    boolean boolean0 = htmlTreeBuilder0.inButtonScope(""Qu.e9l!"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test088107,"public void test088107() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Document document0 = htmlTreeBuilder0.parse(""body"", ""uS\""c%)-V"", parseErrorList0);
    boolean boolean0 = htmlTreeBuilder0.inButtonScope(""body"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test089108,"public void test089108() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""thead"", "" > "");
    htmlTreeBuilder0.push(document0);
    htmlTreeBuilder0.resetInsertionMode();
}",0,
project,0,test090109,"public void test090109() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    Element element0 = document0.head();
    ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""Q[{bt1CoW<8"", element0, ""Q[{bt1CoW<8"", parseErrorList0);
    assertEquals(0, element0.siblingIndex());
}",0,"assertEquals(0, element0.siblingIndex())"
project,0,test090110,"public void test090110() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    Element element0 = document0.head();
    ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""Q[{bt1CoW<8"", element0, ""Q[{bt1CoW<8"", parseErrorList0);
    assertEquals(0, element0.childNodeSize());
}",0,"assertEquals(1, element0.childNodeSize())"
project,0,test091112,"public void test091112() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    htmlTreeBuilder0.push(document0);
    htmlTreeBuilder0.replaceOnStack(document0, document0);
    assertEquals(1, document0.childNodeSize());
}",0,"assertEquals(1, document0.childNodeSize())"
project,0,test092113,"public void test092113() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    htmlTreeBuilder0.clearStackToTableContext();
}",0,
project,0,test093114,"public void test093114() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    htmlTreeBuilder0.popStackToBefore(""html"");
}",0,
project,0,test094115,"public void test094115() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    htmlTreeBuilder0.popStackToClose(htmlTreeBuilder0.TagsSearchInScope);
}",0,
project,0,test095116,"public void test095116() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    String[] stringArray0 = new String[2];
    stringArray0[0] = ""Q[{bt1CoW<8"";
    stringArray0[1] = ""Q[{bt1CoW<8"";
    htmlTreeBuilder0.popStackToClose(stringArray0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inScope(""Q[{bt1CoW<8"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Should not be reachable
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test096117,"public void test096117() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Document document0 = htmlTreeBuilder0.parse(""body"", ""uS\""c%)-V"", parseErrorList0);
    boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test096118,"public void test096118() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Document document0 = htmlTreeBuilder0.parse(""body"", ""uS\""c%)-V"", parseErrorList0);
    boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
    assertEquals(""uS\""c%)-V"", document0.location());
}",0,assertNotNull(document0.location())
project,0,test096119,"public void test096119() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Document document0 = htmlTreeBuilder0.parse(""body"", ""uS\""c%)-V"", parseErrorList0);
    boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
    assertEquals(1, document0.childNodeSize());
}",0,"assertEquals(0, document0.childNodeSize())"
project,0,test097120,"public void test097120() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    htmlTreeBuilder0.parse(""body"", ""body"", parseErrorList0);
    Element element0 = htmlTreeBuilder0.getFromStack(""body"");
    assertNotNull(element0);
}",0,assertNotNull(element0)
project,0,test097121,"public void test097121() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    htmlTreeBuilder0.parse(""body"", ""body"", parseErrorList0);
    Element element0 = htmlTreeBuilder0.getFromStack(""body"");
    assertEquals(1, element0.siblingIndex());
}",0,"assertEquals(0, element0.siblingIndex())"
project,0,test098122,"public void test098122() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    Element element0 = htmlTreeBuilder0.currentElement();
    boolean boolean0 = htmlTreeBuilder0.onStack(element0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test098123,"public void test098123() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    Element element0 = htmlTreeBuilder0.currentElement();
    boolean boolean0 = htmlTreeBuilder0.onStack(element0);
    assertEquals(1, element0.siblingIndex());
}",0,"assertEquals(1, element0.siblingIndex())"
project,0,test099124,"public void test099124() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    Element element0 = htmlTreeBuilder0.insertStartTag(""input"");
    assertEquals(1, element0.siblingIndex());
}",0,"assertEquals(0, element0.siblingIndex())"
project,0,test100125,"public void test100125() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""Q[{btCo,W<8"", ""Q[{btCo,W<8"");
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.Comment token_Comment0 = tokeniser0.commentPending;
    htmlTreeBuilder0.insert(token_Comment0);
}",0,
project,0,test101126,"public void test101126() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse("""", """");
    htmlTreeBuilder0.setFosterInserts(true);
    Element element0 = htmlTreeBuilder0.insertStartTag(""systemId"");
    assertEquals(2, element0.siblingIndex());
}",0,"assertEquals(0, element0.siblingIndex())"
project,0,test102127,"public void test102127() throws Throwable {
    Token.StartTag token_StartTag0 = new Token.StartTag();
    token_StartTag0.selfClosing = true;
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert(token_StartTag0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test103129,"public void test103129() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = new ParseErrorList(512, 512);
    Document document0 = htmlTreeBuilder0.parse(""TreeBuilder{currentToken=org.jsoup.parser.Token$EOF@13, state=InBody, currentElement=<body />}"", ""TreeBuilder{currentToken=org.jsoup.parser.Token$EOF@13, state=InBody, currentElement=<body />}"", parseErrorList0);
    assertEquals(1, document0.childNodeSize());
}",0,"assertEquals(1, document0.childNodeSize())"
project,0,test104130,"public void test104130() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""thead"", "" > "");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(1302);
    htmlTreeBuilder0.parseFragment(""thead"", document0, ""-(<(LWqCI8<W5Pk"", parseErrorList0);
    boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test106132,"public void test106132() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.clearStackToTableContext();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test107133,"public void test107133() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.originalState();
}",0,
project,0,test108134,"public void test108134() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inTableScope(""Q[{bt1CoW<8"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test109135,"public void test109135() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Token.Comment token_Comment0 = new Token.Comment();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert(token_Comment0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test110136,"public void test110136() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.isSpecial((Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test111137,"public void test111137() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    htmlTreeBuilder0.push(document0);
    boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test111138,"public void test111138() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    htmlTreeBuilder0.push(document0);
    boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
    assertEquals(1, document0.childNodeSize());
}",0,
project,0,test112139,"public void test112139() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.setFosterInserts(true);
    boolean boolean0 = htmlTreeBuilder0.isFosterInserts();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test113140,"public void test113140() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test114141,"public void test114141() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    boolean boolean0 = htmlTreeBuilder0.onStack(document0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test114142,"public void test114142() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""Q[{bt1CoW<8"", ""Q[{bt1CoW<8"");
    boolean boolean0 = htmlTreeBuilder0.onStack(document0);
    assertEquals(1, document0.childNodeSize());
}",0,"assertEquals(0, document0.childNodeSize())"
project,0,test116144,"public void test116144() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inScope(""n7{>J#A%Cur/S3{A="");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test118146,"public void test118146() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.state();
}",0,
project,0,test119147,"public void test119147() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.clearStackToTableRowContext();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test120148,"public void test120148() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    FormElement formElement0 = htmlTreeBuilder0.getFormElement();
    assertNull(formElement0);
}",0,assertNotNull(formElement0)
project,0,test121149,"public void test121149() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.insertMarkerToFormattingElements();
    htmlTreeBuilder0.clearFormattingElementsToLastMarker();
}",0,
project,0,test122150,"public void test122150() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.generateImpliedEndTags();
}",0,
project,0,test123151,"public void test123151() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.markInsertionMode();
}",0,
project,0,test124152,"public void test124152() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Token.EOF token_EOF0 = new Token.EOF();
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterAfterFrameset;
    boolean boolean0 = htmlTreeBuilder0.process(token_EOF0, htmlTreeBuilderState0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test125153,"public void test125153() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.toString();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TreeBuilder"", e);
    }
}",0,
project,0,test126154,"public void test126154() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.clearStackToTableBodyContext();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test127155,"public void test127155() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Element element0 = htmlTreeBuilder0.getHeadElement();
    assertNull(element0);
}",0,
