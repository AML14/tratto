project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Document document0 = Document.createShell(""{~ HodE"");
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration("""", """", false);
    Element element0 = document0.appendChild(xmlDeclaration0);
    element0.prependElement(""xhArr"");
    xmlDeclaration0.previousSibling();
}",0,
project,0,test011,"public void test011() throws Throwable {
    Comment comment0 = new Comment(""F,9VdJTEq#"", ""Dj<7o=#"");
    TextNode textNode0 = TextNode.createFromEncoded(""t<*hB:-f3ha"", ""F,9VdJTEq#"");
    comment0.parentNode = (Node) textNode0;
    comment0.toString();
}",0,
project,0,test022,"public void test022() throws Throwable {
    Document document0 = Document.createShell(""empty"");
    Node[] nodeArray0 = new Node[9];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    nodeArray0[8] = (Node) document0;
    document0.addChildren(nodeArray0);
    nodeArray0[1].siblingNodes();
}",0,
project,0,test033,"public void test033() throws Throwable {
    Document document0 = new Document(""m9e"");
    Document document1 = document0.normalise();
    document0.setParentNode(document1);
    document0.removeChild(document0);
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test044,"public void test044() throws Throwable {
    Document document0 = new Document("""");
    StringBuilder stringBuilder0 = new StringBuilder((CharSequence) """");
    document0.outerHtml(stringBuilder0);
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test055,"public void test055() throws Throwable {
    DataNode dataNode0 = new DataNode(""Xfr"", "",\u0000Twq9"");
    Node[] nodeArray0 = new Node[4];
    nodeArray0[0] = (Node) dataNode0;
    nodeArray0[1] = (Node) dataNode0;
    nodeArray0[2] = (Node) dataNode0;
    nodeArray0[3] = (Node) dataNode0;
    dataNode0.addChildren(0, nodeArray0);
    assertEquals("",\u0000Twq9"", dataNode0.baseUri());
}",0,
project,0,test066,"public void test066() throws Throwable {
    Document document0 = new Document("""");
    document0.setSiblingIndex(31);
    assertEquals(31, (int) document0.siblingIndex());
}",0,
project,0,test077,"public void test077() throws Throwable {
    Document document0 = Document.createShell(""\u0007"");
    Element element0 = document0.empty();
    String string0 = element0.toString();
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test088,"public void test088() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""n"", ""Ropf"");
    Node node0 = textNode0.removeAttr(""8N"");
    assertSame(node0, textNode0);
}",0,
project,0,test099,"public void test099() throws Throwable {
    TextNode textNode0 = new TextNode("""", """");
    String string0 = textNode0.outerHtml();
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test1010,"public void test1010() throws Throwable {
    Document document0 = new Document(""93nFD{n"");
    String string0 = document0.nodeName();
    assertEquals(""#document"", string0);
}",0,assertNotNull(string0)
project,0,test1111,"public void test1111() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""`?d^=c@jraB?~;tI"", ""#text"", true);
    Node node0 = xmlDeclaration0.doClone(xmlDeclaration0);
    assertNotSame(node0, xmlDeclaration0);
}",0,
project,0,test1112,"public void test1112() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""`?d^=c@jraB?~;tI"", ""#text"", true);
    Node node0 = xmlDeclaration0.doClone(xmlDeclaration0);
    assertEquals(0, (int) node0.siblingIndex());
}",0,
project,0,test1213,"public void test1213() throws Throwable {
    Document document0 = Document.createShell("""");
    Node[] nodeArray0 = document0.childNodesAsArray();
    assertEquals(1, nodeArray0.length);
}",0,
project,0,test1314,"public void test1314() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration("""", """", false);
    Node[] nodeArray0 = xmlDeclaration0.childNodesAsArray();
    assertEquals(0, nodeArray0.length);
}",0,
project,0,test1415,"public void test1415() throws Throwable {
    Document document0 = new Document(""}n(Ukq@WGXV$h5ie"");
    Comment comment0 = new Comment("";&W!X{SVUl>Kh,s=rC("", "";&W!X{SVUl>Kh,s=rC("");
    // Undeclared exception!
    try {
        comment0.replaceChild((Node) null, document0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Node"", e);
    }
}",0,
project,0,test1516,"public void test1516() throws Throwable {
    Document document0 = Document.createShell(""3mZ"");
    document0.appendChild(document0);
    // Undeclared exception!
    try {
        document0.replaceChild(document0, document0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 1
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test1617,"public void test1617() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""M6\""5q`Y"", ""WPd2<)?~t`{2\"""");
    // Undeclared exception!
    try {
        dataNode0.removeChild((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Node"", e);
    }
}",1,
project,0,test1718,"public void test1718() throws Throwable {
    Document document0 = Document.createShell(""abs:trie"");
    // Undeclared exception!
    try {
        document0.previousSibling();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Node"", e);
    }
}",0,
project,0,test1819,"public void test1819() throws Throwable {
    Document document0 = Document.createShell(""(.s>>e"");
    // Undeclared exception!
    try {
        document0.indent((StringBuilder) null, 0, (Document.OutputSettings) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test1920,"public void test1920() throws Throwable {
    Document document0 = Document.createShell(""vf?Qd*`9`KeVb_@7"");
    StringBuilder stringBuilder0 = new StringBuilder();
    Document.OutputSettings document_OutputSettings0 = document0.new OutputSettings();
    // Undeclared exception!
    try {
        document0.indent(stringBuilder0, (-2322), document_OutputSettings0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // width must be > 0
        //
        verifyException(""org.jsoup.helper.StringUtil"", e);
    }
}",0,
project,0,test2021,"public void test2021() throws Throwable {
    Document document0 = new Document(""abs:"");
    // Undeclared exception!
    try {
        document0.childNode((-138728127));
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test2122,"public void test2122() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""`?d^=c@jraB?~;tI"", ""#text"", true);
    // Undeclared exception!
    try {
        xmlDeclaration0.attr("""", ""#text"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test2223,"public void test2223() throws Throwable {
    Document document0 = new Document(""planck"");
    // Undeclared exception!
    try {
        document0.attr((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test2324,"public void test2324() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded("""", ""\n"");
    Node[] nodeArray0 = new Node[5];
    nodeArray0[0] = (Node) textNode0;
    // Undeclared exception!
    try {
        textNode0.addChildren(nodeArray0);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.AbstractList"", e);
    }
}",0,
project,0,test2425,"public void test2425() throws Throwable {
    Document document0 = new Document(""4>3"");
    Node[] nodeArray0 = new Node[2];
    // Undeclared exception!
    try {
        document0.addChildren(nodeArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Node"", e);
    }
}",0,
project,0,test2526,"public void test2526() throws Throwable {
    Document document0 = Document.createShell(""fszc/xF-2"");
    TextNode textNode0 = TextNode.createFromEncoded(""#comment"", ""fszc/xF-2"");
    Node[] nodeArray0 = new Node[4];
    nodeArray0[0] = (Node) textNode0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) textNode0;
    // Undeclared exception!
    try {
        textNode0.addChildren(0, nodeArray0);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.AbstractList"", e);
    }
}",1,
project,0,test2627,"public void test2627() throws Throwable {
    Document document0 = new Document(""abs:{y7)^b@^jfpkq]$ g"");
    Node[] nodeArray0 = new Node[9];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    TextNode textNode0 = new TextNode(""Colon"", "" km"");
    nodeArray0[5] = (Node) textNode0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    nodeArray0[8] = (Node) document0;
    // Undeclared exception!
    try {
        document0.addChildren((-2217), nodeArray0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: -2217, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",1,
project,0,test2728,"public void test2728() throws Throwable {
    Document document0 = new Document(""abs:"");
    Node[] nodeArray0 = new Node[4];
    // Undeclared exception!
    try {
        document0.addChildren((-264984309), nodeArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array must not contain any null objects
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test2829,"public void test2829() throws Throwable {
    Document document0 = new Document(""{y7)^B@^JfPkQ]$ g"");
    // Undeclared exception!
    try {
        document0.absUrl("""");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test2930,"public void test2930() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = document0.clone();
    assertEquals(0, (int) document1.siblingIndex());
}",0,
project,0,test2931,"public void test2931() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = document0.clone();
    assertNotSame(document1, document0);
}",0,
project,0,test3032,"public void test3032() throws Throwable {
    Comment comment0 = new Comment(""k&vJVbj"", ""k&vJVbj"");
    comment0.hashCode();
}",0,
project,0,test3133,"public void test3133() throws Throwable {
    Comment comment0 = new Comment("""", ""e\""9(GQMW*:PsQsP|6"");
    boolean boolean0 = comment0.equals(""e\""9(GQMW*:PsQsP|6"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3234,"public void test3234() throws Throwable {
    Document document0 = new Document(""{~ HodE"");
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration("""", """", false);
    Element element0 = document0.appendChild(xmlDeclaration0);
    Element element1 = element0.prependElement(""xhArr"");
    element1.parentNode.parentNode = (Node) element0;
    element1.parentNode.parentNode.nextSibling();
    assertEquals(1, (int) xmlDeclaration0.siblingIndex());
}",0,
project,0,test3335,"public void test3335() throws Throwable {
    Document document0 = Document.createShell("",#$0(65,'V',^MFM\"""");
    Node node0 = document0.nextSibling();
    assertNull(node0);
}",0,
project,0,test3436,"public void test3436() throws Throwable {
    Document document0 = Document.createShell(""#com"");
    Element element0 = document0.appendElement(""#com"");
    Node node0 = element0.nextSibling();
    assertNull(node0);
}",0,
project,0,test3437,"public void test3437() throws Throwable {
    Document document0 = Document.createShell(""#com"");
    Element element0 = document0.appendElement(""#com"");
    Node node0 = element0.nextSibling();
    assertEquals(1, (int) element0.siblingIndex());
}",0,
project,0,test3538,"public void test3538() throws Throwable {
    TextNode textNode0 = new TextNode(""=\"""", ""=\"""");
    Document document0 = textNode0.ownerDocument();
    assertNull(document0);
}",0,
project,0,test3639,"public void test3639() throws Throwable {
    Document document0 = Document.createShell("""");
    Element element0 = document0.appendElement(""Ufr"");
    element0.ownerDocument();
    assertEquals(1, (int) element0.siblingIndex());
}",0,
project,0,test3740,"public void test3740() throws Throwable {
    Document document0 = Document.createShell(""abs:q`"");
    Document document1 = document0.ownerDocument();
    assertEquals(""abs:q`"", document1.baseUri());
}",0,assertNotNull(document1.baseUri())
project,0,test3841,"public void test3841() throws Throwable {
    Comment comment0 = new Comment(""F,9VdJTEq#"", ""Dj<7o=#"");
    String string0 = comment0.absUrl(""Dj<7o=#"");
    assertEquals("""", string0);
}",0,
project,0,test3942,"public void test3942() throws Throwable {
    Document document0 = Document.createShell(""abs:q`"");
    String string0 = document0.attr(""@u"");
    assertEquals("""", string0);
}",1,
project,0,test4144,"public void test4144() throws Throwable {
    Document document0 = new Document(""abs:q`"");
    Integer integer0 = document0.siblingIndex();
    assertEquals(0, (int) integer0);
}",0,
project,0,test4245,"public void test4245() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""t<*hB:-f3ha"", ""F,9VdJTEq#"");
    String string0 = textNode0.outerHtml();
    assertEquals(""t&lt;*hB:-f3ha"", string0);
}",0,assertNotNull(string0)
project,0,test4346,"public void test4346() throws Throwable {
    Comment comment0 = new Comment("""", ""e\""9(GQMW*:PsQsP|6"");
    // Undeclared exception!
    try {
        comment0.outerHtml((StringBuilder) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test4447,"public void test4447() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""swnwar"", ""swnwar"");
    Node node0 = textNode0.clone();
    assertEquals(0, (int) node0.siblingIndex());
}",0,
project,0,test4448,"public void test4448() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""swnwar"", ""swnwar"");
    Node node0 = textNode0.clone();
    assertNotSame(node0, textNode0);
}",0,
project,0,test4549,"public void test4549() throws Throwable {
    Document document0 = Document.createShell("""");
    // Undeclared exception!
    try {
        document0.removeAttr("""");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test4650,"public void test4650() throws Throwable {
    DataNode dataNode0 = new DataNode(""mgg;c"", ""e"");
    String string0 = dataNode0.baseUri();
    assertEquals(""e"", string0);
}",0,assertNotNull(string0)
project,0,test4751,"public void test4751() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""aB:"", ""aB:"", true);
    Node node0 = xmlDeclaration0.parent();
    assertNull(node0);
}",0,assertNotNull(node0)
project,0,test4852,"public void test4852() throws Throwable {
    Document document0 = Document.createShell(""abs:"");
    // Undeclared exception!
    try {
        document0.childNode(228);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 228, Size: 1
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test4953,"public void test4953() throws Throwable {
    Document document0 = new Document(""sA9Xq:+rC}_al#b@D)"");
    Attributes attributes0 = document0.attributes();
    assertNotNull(attributes0);
}",0,assertNotNull(attributes0)
project,0,test5054,"public void test5054() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""`?d^=c@jraB?~;tI"", ""#text"", true);
    Node node0 = xmlDeclaration0.attr(""#text"", ""#text"");
    assertEquals(""#declaration"", node0.nodeName());
}",0,assertNotNull(node0.nodeName())
project,0,test5155,"public void test5155() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration("""", """", false);
    boolean boolean0 = xmlDeclaration0.hasAttr(""kr8s2"");
    assertFalse(boolean0);
}",1,
project,0,test5256,"public void test5256() throws Throwable {
    Document document0 = new Document(""abs:"");
    document0.html(""abs:"");
    String string0 = document0.toString();
    assertEquals(""abs:"", string0);
}",0,
project,0,test5357,"public void test5357() throws Throwable {
    TextNode textNode0 = new TextNode(""abs:/.d"", ""abs:/.d"");
    textNode0.hashCode();
}",0,
project,0,test5458,"public void test5458() throws Throwable {
    Document document0 = new Document(""{y7)^B@^JfPkQ]$ g"");
    Document document1 = document0.clone();
    document0.parentNode = (Node) document1;
    document0.hashCode();
}",0,
project,0,test5559,"public void test5559() throws Throwable {
    Document document0 = new Document(""{~ HodE"");
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration("""", """", false);
    document0.appendChild(xmlDeclaration0);
    Node node0 = xmlDeclaration0.previousSibling();
    assertNull(node0);
}",0,assertNotNull(node0)
project,0,test5660,"public void test5660() throws Throwable {
    Document document0 = new Document(""m9e"");
    // Undeclared exception!
    try {
        document0.removeChild(document0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test5761,"public void test5761() throws Throwable {
    Document document0 = new Document(""{~ HodE"");
    Element element0 = document0.prependElement(""xhArr"");
    element0.parentNode.parentNode = (Node) document0;
    // Undeclared exception!
    try {
        element0.replaceWith(document0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",1,
project,0,test5862,"public void test5862() throws Throwable {
    Document document0 = new Document(""{~ HodE"");
    Element element0 = document0.prependElement(""xhArr"");
    element0.replaceWith(document0);
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test5963,"public void test5963() throws Throwable {
    Document document0 = new Document(""\u0007"");
    // Undeclared exception!
    try {
        document0.replaceChild(document0, document0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test6064,"public void test6064() throws Throwable {
    Document document0 = Document.createShell(""org.jsoup.nodes.Node$OuterHtmlVisitor"");
    Element element0 = document0.appendElement(""org.jsoup.nodes.Node$OuterHtmlVisitor"");
    element0.setParentNode(document0);
    assertEquals(1, (int) element0.siblingIndex());
}",0,
project,0,test6165,"public void test6165() throws Throwable {
    Document document0 = new Document(""abs:"");
    String string0 = document0.attr(""abs:trie"");
    assertEquals("""", string0);
}",1,
project,0,test6266,"public void test6266() throws Throwable {
    Document document0 = new Document(""m9e"");
    Element element0 = document0.attr(""m9e"", ""m9e"");
    Elements elements0 = element0.getElementsByAttributeValueContaining(""m9e"", ""m9e"");
    assertEquals(1, elements0.size());
}",0,"assertEquals(0, elements0.size())"
project,0,test6367,"public void test6367() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""aB:"", ""aB:"", true);
    // Undeclared exception!
    try {
        xmlDeclaration0.remove();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test6468,"public void test6468() throws Throwable {
    DataNode dataNode0 = new DataNode(""@LNr`+O6Q$"", ""@LNr`+O6Q$"");
    // Undeclared exception!
    try {
        dataNode0.siblingNodes();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Node"", e);
    }
}",0,
project,0,test6569,"public void test6569() throws Throwable {
    Document document0 = Document.createShell(""&26/x&<_x`RJmtmiH"");
    // Undeclared exception!
    try {
        document0.replaceWith(document0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test6670,"public void test6670() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""A#)Clg8&#"", """", false);
    xmlDeclaration0.setBaseUri("""");
    assertEquals("""", xmlDeclaration0.baseUri());
}",0,assertNotNull(xmlDeclaration0.baseUri())
