project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""org.jsoup.parser.htmltreebuilder"", ""org.jsoup.parser.htmltreebuilder"");
    String string0 = attributes0.html();
    assertEquals("" org.jsoup.parser.htmltreebuilder=\""org.jsoup.parser.htmltreebuilder\"""", string0);
}",0,
project,0,test011,"public void test011() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""org.jsoup.parser.htmltreebuilder"", ""org.jsoup.parser.htmltreebuilder"");
    String string0 = attributes0.getIgnoreCase(""org.jsoup.parser.htmltreebuilder"");
    assertEquals(""org.jsoup.parser.htmltreebuilder"", string0);
}",1,
project,0,test022,"public void test022() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""LP"", "";6:"");
    attributes0.put(""<pJ7;,4h;6"", ""org.jsoup.nodes.Attributes"");
    // Undeclared exception!
    try {
        attributes0.removeIgnoreCase(""LP"");
        fail(""Expecting exception: ConcurrentModificationException"");
    } catch (ConcurrentModificationException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.LinkedHashMap$LinkedHashIterator"", e);
    }
}",0,
project,0,test033,"public void test033() throws Throwable {
    Attributes attributes0 = new Attributes();
    // Undeclared exception!
    try {
        attributes0.removeIgnoreCase((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test044,"public void test044() throws Throwable {
    Attributes attributes0 = new Attributes();
    // Undeclared exception!
    try {
        attributes0.remove("""");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test055,"public void test055() throws Throwable {
    Attributes attributes0 = new Attributes();
    // Undeclared exception!
    try {
        attributes0.put((Attribute) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test066,"public void test066() throws Throwable {
    Attributes attributes0 = new Attributes();
    // Undeclared exception!
    try {
        attributes0.put("""", false);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test077,"public void test077() throws Throwable {
    Attributes attributes0 = new Attributes();
    // Undeclared exception!
    try {
        attributes0.put("""", ""Vd26x-!(v:1Spc"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test088,"public void test088() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""~"", ""~"");
    CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) ""~"");
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        attributes0.html((Appendable) charBuffer0, document_OutputSettings0);
        fail(""Expecting exception: ReadOnlyBufferException"");
    } catch (ReadOnlyBufferException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.nio.CharBuffer"", e);
    }
}",0,
project,0,test099,"public void test099() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""JSNv)K f="", ""JSNv)K f="");
    char[] charArray0 = new char[7];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 1, 1);
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        attributes0.html((Appendable) charBuffer0, document_OutputSettings0);
        fail(""Expecting exception: BufferOverflowException"");
    } catch (BufferOverflowException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.nio.CharBuffer"", e);
    }
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    Attributes attributes0 = new Attributes();
    // Undeclared exception!
    try {
        attributes0.getIgnoreCase((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    Attributes attributes0 = new Attributes();
    // Undeclared exception!
    try {
        attributes0.get("""");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    Attributes attributes0 = new Attributes();
    // Undeclared exception!
    try {
        attributes0.addAll((Attributes) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Attributes"", e);
    }
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = Attribute.createFromEncoded(""c95j|260*~ B)Z"", ""c95j|260*~ B)Z"");
    attributes0.put(attribute0);
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        attributes0.html((Appendable) null, document_OutputSettings0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Attributes"", e);
    }
}",0,
project,0,test1515,"public void test1515() throws Throwable {
    Attributes attributes0 = new Attributes();
    MockFile mockFile0 = new MockFile(""jpp`nwG"");
    MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0, false);
    attributes0.html((Appendable) mockFileWriter0, (Document.OutputSettings) null);
}",0,
project,0,test1616,"public void test1616() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.dataset();
    Iterator<Attribute> iterator0 = attributes0.iterator();
    assertNotNull(iterator0);
}",0,assertNotNull(iterator0)
project,0,test1717,"public void test1717() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.remove(""P5ppK0A%uxd+qh]ONc"");
}",1,
project,0,test1818,"public void test1818() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = Attribute.createFromEncoded(""My?K}U1Qxkb*%"", """");
    attributes0.put(attribute0);
    int int0 = attributes0.size();
    assertEquals(1, int0);
}",0,
project,0,test1919,"public void test1919() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.dataset();
    Attribute attribute0 = new Attribute(""\""JVE@`"", """");
    attributes0.put(attribute0);
    assertEquals(""\""JVE@`"", attribute0.getKey());
}",0,assertNotNull(attribute0.getKey())
project,0,test2121,"public void test2121() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""inert"", ""y|"");
    attributes0.hashCode();
}",0,
project,0,test2222,"public void test2222() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.hashCode();
}",0,
project,0,test2323,"public void test2323() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.clone();
    attributes1.dataset();
    boolean boolean0 = attributes0.equals(attributes1);
    assertFalse(attributes1.equals((Object) attributes0));
}",0,
project,0,test2324,"public void test2324() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.clone();
    attributes1.dataset();
    boolean boolean0 = attributes0.equals(attributes1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2425,"public void test2425() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.clone();
    attributes0.put(""FSNv)KVf="", ""FSNv)KVf="");
    boolean boolean0 = attributes0.equals(attributes1);
    assertFalse(attributes1.equals((Object) attributes0));
}",0,
project,0,test2426,"public void test2426() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.clone();
    attributes0.put(""FSNv)KVf="", ""FSNv)KVf="");
    boolean boolean0 = attributes0.equals(attributes1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2527,"public void test2527() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""inert"", ""y|"");
    Attributes attributes1 = attributes0.clone();
    boolean boolean0 = attributes1.equals(attributes0);
    assertNotSame(attributes1, attributes0);
}",0,
project,0,test2629,"public void test2629() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.clone();
    boolean boolean0 = attributes1.equals(attributes0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2730,"public void test2730() throws Throwable {
    Attributes attributes0 = new Attributes();
    boolean boolean0 = attributes0.equals(attributes0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2831,"public void test2831() throws Throwable {
    Attributes attributes0 = new Attributes();
    boolean boolean0 = attributes0.equals(""Mg%Sh%.LJOm@^"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2932,"public void test2932() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""inert"", ""y|"");
    String string0 = attributes0.toString();
    assertEquals("" inert=\""y|\"""", string0);
}",0,assertNotNull(string0)
project,0,test3235,"public void test3235() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""inert"", ""y|"");
    Iterator<Attribute> iterator0 = attributes0.iterator();
    assertNotNull(iterator0);
}",0,assertNotNull(iterator0)
project,0,test3336,"public void test3336() throws Throwable {
    Attributes attributes0 = new Attributes();
    Iterator<Attribute> iterator0 = attributes0.iterator();
    assertNotNull(iterator0);
}",0,assertNotNull(iterator0)
project,0,test3437,"public void test3437() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = new Attributes();
    attributes0.put(""(7z< exM"", true);
    assertFalse(attributes0.equals((Object) attributes1));
}",0,
project,0,test3438,"public void test3438() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = new Attributes();
    attributes0.put(""(7z< exM"", true);
    attributes1.addAll(attributes0);
    assertTrue(attributes0.equals((Object) attributes1));
}",0,
project,0,test3539,"public void test3539() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.addAll(attributes0);
}",0,
project,0,test3640,"public void test3640() throws Throwable {
    Attributes attributes0 = new Attributes();
    int int0 = attributes0.size();
    assertEquals(0, int0);
}",0,
project,0,test3741,"public void test3741() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""W\""!ryb\"""", ""W\""!ryb\"""");
    attributes0.addAll(attributes0);
}",0,
project,0,test3842,"public void test3842() throws Throwable {
    Attributes attributes0 = new Attributes();
    boolean boolean0 = attributes0.hasKeyIgnoreCase(""FSNv)KVf="");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3943,"public void test3943() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""W\""!ryb\"""", ""W\""!ryb\"""");
    boolean boolean0 = attributes0.hasKeyIgnoreCase("" "");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4044,"public void test4044() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""CommentStartDash"", ""CommentStartDash"");
    boolean boolean0 = attributes0.hasKey(""CommentStartDash"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4145,"public void test4145() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""W\""!ryb\"""", ""W\""!ryb\"""");
    boolean boolean0 = attributes0.hasKey(""J9/iSo/u(:j8s"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4246,"public void test4246() throws Throwable {
    Attributes attributes0 = new Attributes();
    boolean boolean0 = attributes0.hasKey(""CommentStartDash"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4347,"public void test4347() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""W\""!ryb\"""", ""W\""!ryb\"""");
    attributes0.removeIgnoreCase("" "");
}",0,
project,0,test4448,"public void test4448() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.removeIgnoreCase("" "");
}",0,
project,0,test4549,"public void test4549() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""FSNv)KVf="", ""FSNv)KVf="");
    attributes0.remove(""FSNv)KVf="");
}",0,
project,0,test4650,"public void test4650() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""entities-full.propert-es"", true);
    String string0 = attributes0.getIgnoreCase(""entities-full.propert-es"");
    assertEquals("""", string0);
}",1,
project,0,test4751,"public void test4751() throws Throwable {
    Attributes attributes0 = new Attributes();
    String string0 = attributes0.getIgnoreCase(""FSNv)KVf="");
    assertEquals("""", string0);
}",0,
project,0,test4852,"public void test4852() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""W\""!ryb\"""", ""W\""!ryb\"""");
    String string0 = attributes0.getIgnoreCase("" "");
    assertEquals("""", string0);
}",0,
project,0,test4953,"public void test4953() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""FSNv)KVf="", ""FSNv)KVf="");
    String string0 = attributes0.get(""FSNv)KVf="");
    assertEquals(""FSNv)KVf="", string0);
}",0,assertNotNull(string0)
project,0,test5054,"public void test5054() throws Throwable {
    Attributes attributes0 = new Attributes();
    String string0 = attributes0.get(""entities-full.propert-es"");
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test5155,"public void test5155() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""entities-full.properties"", true);
    String string0 = attributes0.get("" "");
    assertEquals("""", string0);
}",0,
project,0,test5256,"public void test5256() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""inert"", ""y|"");
    boolean boolean0 = attributes0.hasKeyIgnoreCase(""inert"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test5357,"public void test5357() throws Throwable {
    Attributes attributes0 = new Attributes();
    String string0 = attributes0.toString();
    assertEquals("""", string0);
}",0,
project,0,test5458,"public void test5458() throws Throwable {
    Attributes attributes0 = new Attributes();
    String string0 = attributes0.html();
    assertEquals("""", string0);
}",0,
