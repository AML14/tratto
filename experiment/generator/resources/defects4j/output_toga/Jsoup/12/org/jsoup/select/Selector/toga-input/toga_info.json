{
  "test1212" : {
    "methodSignature" : "public static Elements select(String query, Element root)",
    "methodName" : "select",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Document document0 = new Document(\"Kq.)gNG^9HEwi/w7LcC\");\n    Selector.select(\":matchesOwn(\", (Element) document0);\n}",
    "testName" : "test1212"
  },
  "test2323" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    Document document0 = Document.createShell(\":has(el) subselect must not be empty\");\n    Elements elements0 = Selector.select(\":has(el) subselect must not be empty\", (Element) document0);\n    elements0.size();\n}",
    "testName" : "test2323"
  },
  "test1313" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Document document0 = Document.createShell(\"gX8b[tzFGEbA,#.*%Qe\");\n    Elements elements0 = Selector.select(\":matches(regex) query must not be empty\", (Element) document0);\n    elements0.size();\n}",
    "testName" : "test1313"
  },
  "test2424" : {
    "methodSignature" : "public static Elements select(String query, Element root)",
    "methodName" : "select",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    Document document0 = Document.createShell(\"MENU\");\n    Selector.select(\"J*B#4v:'[~\\\"M_* <F\", (Element) document0);\n}",
    "testName" : "test2424"
  },
  "test1010" : {
    "methodSignature" : "public static Elements select(String query, Element root)",
    "methodName" : "select",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Document document0 = Document.createShell(\":has(el) subselect must not be empty\");\n    Selector.select(\"wu[sx=\", (Element) document0);\n}",
    "testName" : "test1010"
  },
  "test2121" : {
    "methodSignature" : "public static Elements select(String query, Element root)",
    "methodName" : "select",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    Document document0 = new Document(\"?+b\");\n    Selector.select(\"~.y6V@Ai4w].gnH|M8\", (Element) document0);\n}",
    "testName" : "test2121"
  },
  "test1111" : {
    "methodSignature" : "public static Elements select(String query, Element root)",
    "methodName" : "select",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Document document0 = Document.createShell(\"MENU\");\n    Selector.select(\"F7|(2,|H>|~Rnbe!9`\", (Element) document0);\n}",
    "testName" : "test1111"
  },
  "test2222" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    Document document0 = new Document(\":not(selector) subselect must not be empty\");\n    Elements elements0 = Selector.select(\":not(selector) subselect must not be empty\", (Element) document0);\n    elements0.size();\n}",
    "testName" : "test2222"
  },
  "test011" : {
    "methodSignature" : "public static Elements select(String query, Iterable<Element> roots)",
    "methodName" : "select",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"A9\");\n    Element element0 = new Element(tag0, \"A9\");\n    Pattern pattern0 = Pattern.compile(\"^\", 32);\n    Elements elements0 = element0.getElementsMatchingText(pattern0);\n    Elements elements1 = Selector.select(\"A9\", (Iterable<Element>) elements0);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public static Elements select(String query, Element root)",
    "methodName" : "select",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Document document0 = Document.createShell(\"O=(3KH.9.)(>0P*\");\n    Element element0 = document0.prependChild(document0);\n    // Undeclared exception!\n    Selector.select(\"NOSCRIPT\", element0);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public static Elements select(String query, Iterable<Element> roots)",
    "methodName" : "select",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Document document0 = Document.createShell(\":M.\");\n    Element element0 = document0.text(\",!iyHx;LGjoGE\");\n    Pattern pattern0 = Pattern.compile(\",!iyHx;LGjoGE\", 856);\n    Elements elements0 = element0.getElementsMatchingText(pattern0);\n    LinkedList<Element> linkedList0 = new LinkedList<Element>(elements0);\n    Selector.select(\",!iyHx;LGjoGE\", (Iterable<Element>) linkedList0);\n}",
    "testName" : "test055"
  },
  "test099" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Document document0 = Document.createShell(\"O=(3KH.9.)(>0P*\");\n    Elements elements0 = Selector.select(\"N~SCRIPT\", (Element) document0);\n    elements0.size();\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "public static Elements select(String query, Element root)",
    "methodName" : "select",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    Document document0 = new Document(\"*EG>~.\");\n    Selector.select(\",\", (Element) document0);\n}",
    "testName" : "test1616"
  },
  "test1717" : {
    "methodSignature" : "public boolean isEmpty()",
    "methodName" : "isEmpty",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    Document document0 = Document.createShell(\"pxNv!/^A}@6hHb\");\n    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n    PriorityQueue<Element> priorityQueue0 = new PriorityQueue<Element>(8770, comparator0);\n    priorityQueue0.add(document0);\n    Elements elements0 = Selector.select(\"+DfL\", (Iterable<Element>) priorityQueue0);\n    elements0.isEmpty();\n}",
    "testName" : "test1717"
  },
  "test1414" : {
    "methodSignature" : "public static Elements select(String query, Iterable<Element> roots)",
    "methodName" : "select",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    Document document0 = Document.createShell(\"O=(3KH.9.)(>0P*\");\n    Elements elements0 = document0.getAllElements();\n    Selector.select(\":contains(\", (Iterable<Element>) elements0);\n}",
    "testName" : "test1414"
  },
  "test1515" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    Document document0 = new Document(\"?+b\");\n    Elements elements0 = Selector.select(\"BAS[5\", (Element) document0);\n    elements0.size();\n}",
    "testName" : "test1515"
  },
  "test2020" : {
    "methodSignature" : "public static Elements select(String query, Element root)",
    "methodName" : "select",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"`Y2\");\n    Attributes attributes0 = new Attributes();\n    Element element0 = new Element(tag0, \"^(z,C2REO^.q8>\\\"G\", attributes0);\n    Selector.select(\":lt(\", element0);\n}",
    "testName" : "test2020"
  },
  "test000" : {
    "methodSignature" : "public boolean isEmpty()",
    "methodName" : "isEmpty",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Document document0 = new Document(\"PARAM\");\n    Element element0 = document0.createElement(\"PARAM\");\n    Elements elements0 = Selector.select(\"PARAM\", element0);\n    elements0.isEmpty();\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Document document0 = Document.createShell(\"MENU\");\n    Elements elements0 = document0.getElementsByAttributeValueNot(\"1V}\\\"VycY\", \"1V}\\\"VycY\");\n    Elements elements1 = Selector.select(\"MENU\", (Iterable<Element>) elements0);\n    Elements elements2 = Selector.filterOut(elements0, elements1);\n    elements2.size();\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public static Elements select(String query, Iterable<Element> roots)",
    "methodName" : "select",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Document document0 = new Document(\"?+b\");\n    Elements elements0 = document0.getAllElements();\n    Selector.select(\"?+b\", (Iterable<Element>) elements0);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "static Elements filterOut(Collection<Element> elements, Collection<Element> outs)",
    "methodName" : "filterOut",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Selector.filterOut((Collection<Element>) null, (Collection<Element>) null);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public int size()",
    "methodName" : "size",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Document document0 = Document.createShell(\"O=(3KH.9.)(>0P*\");\n    Elements elements0 = document0.getAllElements();\n    Elements elements1 = Selector.filterOut(elements0, elements0);\n    elements1.size();\n}",
    "testName" : "test088"
  },
  "test1818" : {
    "methodSignature" : "public boolean isEmpty()",
    "methodName" : "isEmpty",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    Document document0 = Document.createShell(\"O=(3KH.9.)(>0P*\");\n    Elements elements0 = Selector.select(\"G,M>XM Lx0]Dj%3Fy\", (Element) document0);\n    elements0.isEmpty();\n}",
    "testName" : "test1818"
  },
  "test1919" : {
    "methodSignature" : "public static Elements select(String query, Iterable<Element> roots)",
    "methodName" : "select",
    "className" : "org.jsoup.select.Selector",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    Document document0 = Document.createShell(\"MENU\");\n    Elements elements0 = document0.getElementsByAttributeValueNot(\"1V}\\\"VycY\", \"ObiSSF:$%RX*\");\n    Selector.select(\":gt(%d)\", (Iterable<Element>) elements0);\n}",
    "testName" : "test1919"
  }
}