project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Document document0 = xmlTreeBuilder0.parse(""^"", ""^"");
    xmlTreeBuilder0.processStartTag(""^"");
    Elements elements0 = document0.getElementsByTag(""^"");
    xmlTreeBuilder0.stack = (ArrayList<Element>) elements0;
    boolean boolean0 = xmlTreeBuilder0.processEndTag(""^"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test011,"public void test011() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    xmlTreeBuilder0.parseFragment("""", """", parseErrorList0, (ParseSettings) null);
    Token.Character token_Character0 = new Token.Character();
    xmlTreeBuilder0.insert(token_Character0);
}",0,
project,0,test033,"public void test033() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""6`=!;_v"");
    CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
    ParseErrorList parseErrorList0 = new ParseErrorList(0, 67);
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    xmlTreeBuilder0.parse(stringReader0, ""6`=!;_v"");
    Token.Doctype token_Doctype0 = tokeniser0.doctypePending;
    boolean boolean0 = xmlTreeBuilder0.process(token_Doctype0);
    assertTrue(boolean0);
}",0,
project,0,test055,"public void test055() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    StringReader stringReader0 = new StringReader("""");
    Document document0 = xmlTreeBuilder0.parse(stringReader0, """");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test066,"public void test066() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    xmlTreeBuilder0.parse(""<h5xDRirQxe&hfA."", ""<h5xDRirQxe&hfA."");
    Tokeniser tokeniser0 = xmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Element element0 = xmlTreeBuilder0.insert(token_StartTag0);
    assertEquals(""<h5xDRirQxe&hfA."", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test077,"public void test077() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.process(token_StartTag0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test088,"public void test088() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.CData token_CData0 = new Token.CData(""<!--"");
    Token.TokenType token_TokenType0 = Token.TokenType.Doctype;
    token_CData0.type = token_TokenType0;
    // Undeclared exception!
    try {
        xmlTreeBuilder0.process(token_CData0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$Doctype
        //
        verifyException(""org.jsoup.parser.Token"", e);
    }
}",0,
project,0,test099,"public void test099() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = new ParseSettings(true, false);
    // Undeclared exception!
    try {
        xmlTreeBuilder0.parseFragment((String) null, "">"", parseErrorList0, parseSettings0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.io.StringReader"", e);
    }
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    // Undeclared exception!
    try {
        xmlTreeBuilder0.parseFragment("";"", (String) null, (ParseErrorList) null, parseSettings0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // BaseURI must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.parse((String) null, ""@tlf$1"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.io.StringReader"", e);
    }
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.parse(""cD@LCr`-tuV?;1L@Y"", (String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // BaseURI must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""6`=!;_v"");
    stringReader0.close();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.parse(stringReader0, ""6`=!;_v"");
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // java.io.IOException: Stream closed
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    CDataNode cDataNode0 = new CDataNode(""i#IWVpcB''hy7"");
    Attributes attributes0 = cDataNode0.attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""i#IWVpcB''hy7"", attributes0);
    // Undeclared exception!
    try {
        xmlTreeBuilder0.insert(token_StartTag1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.Tag"", e);
    }
}",0,
project,0,test1515,"public void test1515() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.insert(token_StartTag0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test1616,"public void test1616() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.Doctype token_Doctype0 = new Token.Doctype();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.insert(token_Doctype0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.XmlTreeBuilder"", e);
    }
}",0,
project,0,test1717,"public void test1717() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.Comment token_Comment0 = new Token.Comment();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.insert(token_Comment0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TreeBuilder"", e);
    }
}",0,
project,0,test1818,"public void test1818() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.CData token_CData0 = new Token.CData(""~"");
    // Undeclared exception!
    try {
        xmlTreeBuilder0.insert(token_CData0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TreeBuilder"", e);
    }
}",0,
project,0,test1919,"public void test1919() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    // Undeclared exception!
    try {
        xmlTreeBuilder0.initialiseParse((Reader) null, (String) null, (ParseErrorList) null, parseSettings0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String input must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test2020,"public void test2020() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    xmlTreeBuilder0.parse(""_"", ""_"");
    xmlTreeBuilder0.processStartTag(""_"");
    xmlTreeBuilder0.processStartTag(""a"");
    boolean boolean0 = xmlTreeBuilder0.processEndTag(""_"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2121,"public void test2121() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    xmlTreeBuilder0.parse(""y:u,=jJZmotx%"", ""y:u,=jJZmotx%"");
    boolean boolean0 = xmlTreeBuilder0.processEndTag(""y:u,=jJZmotx%"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2222,"public void test2222() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.CData token_CData0 = new Token.CData(""x3`?~O_#o@Y{XT"");
    // Undeclared exception!
    try {
        xmlTreeBuilder0.process(token_CData0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TreeBuilder"", e);
    }
}",0,
project,0,test2323,"public void test2323() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.tracking((-1943));
    ParseSettings parseSettings0 = xmlTreeBuilder0.defaultSettings();
    xmlTreeBuilder0.parseFragment(""sflFb)p>v"", ""sflFb)p>v"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = xmlTreeBuilder0.tokeniser;
    Token.Comment token_Comment0 = tokeniser0.commentPending;
    token_Comment0.bogus = true;
    xmlTreeBuilder0.insert(token_Comment0);
}",0,
project,0,test2424,"public void test2424() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""li"");
    CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
    ParseErrorList parseErrorList0 = new ParseErrorList(0, 0);
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    xmlTreeBuilder0.parse(stringReader0, ""li"");
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    CDataNode cDataNode0 = new CDataNode(""li"");
    Attributes attributes0 = cDataNode0.attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""li"", attributes0);
    token_StartTag1.selfClosing = true;
    Element element0 = xmlTreeBuilder0.insert(token_StartTag1);
    assertTrue(element0.hasParent());
}",0,assertTrue(element0.hasParent())
project,0,test2525,"public void test2525() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""6`=!;_v"");
    CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, (ParseErrorList) null);
    xmlTreeBuilder0.parse(stringReader0, ""6`=!;_v"");
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    CDataNode cDataNode0 = new CDataNode(""6`=!;_v"");
    Attributes attributes0 = cDataNode0.attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""6`=!;_v"", attributes0);
    token_StartTag1.selfClosing = true;
    Element element0 = xmlTreeBuilder0.insert(token_StartTag1);
    assertFalse(element0.isBlock());
}",0,assertFalse(element0.isBlock())
project,0,test2626,"public void test2626() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    PipedWriter pipedWriter0 = new PipedWriter();
    PipedReader pipedReader0 = new PipedReader(pipedWriter0);
    // Undeclared exception!
    try {
        xmlTreeBuilder0.parse(pipedReader0, "">cz@9R"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test2727,"public void test2727() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.tracking((-1943));
    ParseSettings parseSettings0 = xmlTreeBuilder0.defaultSettings();
    xmlTreeBuilder0.parseFragment(""sflFb)p>v"", ""sflFb)p>v"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = xmlTreeBuilder0.tokeniser;
    Token.Comment token_Comment0 = tokeniser0.commentPending;
    xmlTreeBuilder0.process(token_Comment0);
}",0,
