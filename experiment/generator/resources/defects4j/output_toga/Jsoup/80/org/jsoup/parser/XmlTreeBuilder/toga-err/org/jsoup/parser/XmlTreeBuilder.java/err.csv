org.jsoup.parser.XmlTreeBuilder,@Test(timeout = 4000)
public void test000() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Document document0 = xmlTreeBuilder0.parse(""^"", ""^"");
    xmlTreeBuilder0.processStartTag(""^"");
    Elements elements0 = document0.getElementsByTag(""^"");
    xmlTreeBuilder0.stack = (ArrayList<Element>) elements0;
    boolean boolean0 = xmlTreeBuilder0.processEndTag(""^"");
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jsoup.parser.XmlTreeBuilder,@Test(timeout = 4000)
public void test022() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    StringReader stringReader0 = new StringReader("""");
    ParseErrorList parseErrorList0 = new ParseErrorList(3, 12);
    ParseSettings parseSettings0 = ParseSettings.htmlDefault;
    xmlTreeBuilder0.initialiseParse(stringReader0, """", parseErrorList0, parseSettings0);
    parseErrorList0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Jsoup_80b/src/main/java/java/util/ArrayList.java
org.jsoup.parser.XmlTreeBuilder,@Test(timeout = 4000)
public void test044() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""6`=!;_v"");
    CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
    ParseErrorList parseErrorList0 = new ParseErrorList(0, 67);
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    xmlTreeBuilder0.parse(stringReader0, ""6`=!;_v"");
    Token.Doctype token_Doctype0 = tokeniser0.doctypePending;
    xmlTreeBuilder0.insert(token_Doctype0);
    token_Doctype0.isForceQuirks();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Jsoup_80b/src/main/java/org/jsoup/parser/Token/Doctype.java
org.jsoup.parser.XmlTreeBuilder,@Test(timeout = 4000)
public void test055() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    StringReader stringReader0 = new StringReader("""");
    Document document0 = xmlTreeBuilder0.parse(stringReader0, """");
    document0.nodeName();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jsoup.parser.XmlTreeBuilder,@Test(timeout = 4000)
public void test066() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    xmlTreeBuilder0.parse(""<h5xDRirQxe&hfA."", ""<h5xDRirQxe&hfA."");
    Tokeniser tokeniser0 = xmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Element element0 = xmlTreeBuilder0.insert(token_StartTag0);
    element0.baseUri();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jsoup.parser.XmlTreeBuilder,@Test(timeout = 4000)
public void test2020() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    xmlTreeBuilder0.parse(""_"", ""_"");
    xmlTreeBuilder0.processStartTag(""_"");
    xmlTreeBuilder0.processStartTag(""a"");
    boolean boolean0 = xmlTreeBuilder0.processEndTag(""_"");
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jsoup.parser.XmlTreeBuilder,@Test(timeout = 4000)
public void test2121() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    xmlTreeBuilder0.parse(""y:u,=jJZmotx%"", ""y:u,=jJZmotx%"");
    boolean boolean0 = xmlTreeBuilder0.processEndTag(""y:u,=jJZmotx%"");
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jsoup.parser.XmlTreeBuilder,@Test(timeout = 4000)
public void test2424() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""li"");
    CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
    ParseErrorList parseErrorList0 = new ParseErrorList(0, 0);
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    xmlTreeBuilder0.parse(stringReader0, ""li"");
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    CDataNode cDataNode0 = new CDataNode(""li"");
    Attributes attributes0 = cDataNode0.attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""li"", attributes0);
    token_StartTag1.selfClosing = true;
    Element element0 = xmlTreeBuilder0.insert(token_StartTag1);
    element0.hasParent();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
org.jsoup.parser.XmlTreeBuilder,@Test(timeout = 4000)
public void test2525() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""6`=!;_v"");
    CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, (ParseErrorList) null);
    xmlTreeBuilder0.parse(stringReader0, ""6`=!;_v"");
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    CDataNode cDataNode0 = new CDataNode(""6`=!;_v"");
    Attributes attributes0 = cDataNode0.attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""6`=!;_v"", attributes0);
    token_StartTag1.selfClosing = true;
    Element element0 = xmlTreeBuilder0.insert(token_StartTag1);
    element0.isBlock();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
