project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test011,"public void test011() throws Throwable {
    Tag tag0 = Tag.valueOf(""String must not be empty"");
    Attributes attributes0 = new Attributes();
    FormElement formElement0 = new FormElement(tag0, ""java.lang.string@0000000055"", attributes0);
    Elements elements0 = formElement0.elements();
    Element element0 = formElement0.insertChildren(0, elements0);
    assertSame(formElement0, element0);
}",1,
project,0,test022,"public void test022() throws Throwable {
    Document document0 = new Document(""output"");
    String string0 = document0.toString();
    assertEquals("""", string0);
}",0,
project,0,test033,"public void test033() throws Throwable {
    Document document0 = new Document(""+h"");
    document0.tagName(""g*yh>x?:wx=)VJ"");
    assertEquals(""g*yh>x?:wx=)vj"", document0.tagName());
}",0,assertNotNull(document0.tagName())
project,0,test044,"public void test044() throws Throwable {
    Tag tag0 = Tag.valueOf(""br"");
    Attributes attributes0 = new Attributes();
    FormElement formElement0 = new FormElement(tag0, ""body"", attributes0);
    Tag tag1 = formElement0.tag();
    assertFalse(tag1.isData());
}",0,assertFalse(tag1.isData())
project,0,test055,"public void test055() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    TextNode textNode0 = TextNode.createFromEncoded(""body"", ""formnovalidate"");
    Attributes attributes0 = textNode0.attributes();
    FormElement formElement0 = new FormElement(tag0, ""body"", attributes0);
    Element element0 = formElement0.prepend(""1co_b"");
    assertTrue(element0.isBlock());
}",0,
project,0,test066,"public void test066() throws Throwable {
    Document document0 = new Document("""");
    Element element0 = document0.prepend("""");
    assertSame(document0, element0);
}",0,
project,0,test077,"public void test077() throws Throwable {
    Tag tag0 = Tag.valueOf(""#ja@KT#73XC"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, ""#ja@KT#73XC"", attributes0);
    Element element1 = element0.prependChild(element0);
    Element element2 = element1.parent();
    assertEquals(0, element2.siblingIndex());
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    Tag tag0 = Tag.valueOf(""html"");
    Element element0 = new Element(tag0, ""html"");
    Element element1 = element0.clone();
    assertTrue(element1.equals((Object) element0));
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    Document document0 = new Document("""");
    Element element0 = document0.clone();
    assertNotSame(element0, document0);
}",0,
project,0,test1515,"public void test1515() throws Throwable {
    Document document0 = new Document(""class"");
    Locale locale0 = Locale.ENGLISH;
    Set<String> set0 = locale0.getUnicodeLocaleAttributes();
    Element element0 = document0.classNames(set0);
    assertFalse(element0.isBlock());
}",0,
project,0,test1717,"public void test1717() throws Throwable {
    Tag tag0 = Tag.valueOf(""[jyKV>"");
    Attributes attributes0 = new Attributes();
    FormElement formElement0 = new FormElement(tag0, ""[jyKV>"", attributes0);
    Element element0 = formElement0.toggleClass(""[jyKV>"");
    String string0 = element0.className();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test1818,"public void test1818() throws Throwable {
    Tag tag0 = Tag.valueOf(""Children collection to be inserted must not be null."");
    Attributes attributes0 = new Attributes();
    FormElement formElement0 = new FormElement(tag0, ""DEa1gj:Z;G "", attributes0);
    Element element0 = formElement0.appendElement(""body"");
    assertEquals(""body"", element0.nodeName());
}",0,assertNotNull(element0.nodeName())
project,0,test1819,"public void test1819() throws Throwable {
    Tag tag0 = Tag.valueOf(""Children collection to be inserted must not be null."");
    Attributes attributes0 = new Attributes();
    FormElement formElement0 = new FormElement(tag0, ""DEa1gj:Z;G "", attributes0);
    Element element0 = formElement0.appendElement(""body"");
    assertEquals(0, element0.siblingIndex());
}",0,"assertEquals(0, element0.siblingIndex())"
project,0,test1920,"public void test1920() throws Throwable {
    Document document0 = new Document(""String must not be empty"");
    Element element0 = document0.append("""");
    assertEquals(0, element0.childNodeSize());
}",0,"assertEquals(0, element0.childNodeSize())"
project,0,test2021,"public void test2021() throws Throwable {
    Tag tag0 = Tag.valueOf("":nth-child(%d)"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, "":nth-child(%d)"", attributes0);
    // Undeclared exception!
    try {
        element0.wrap(""2aU(8*wN9L"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Node"", e);
    }
}",0,
project,0,test2122,"public void test2122() throws Throwable {
    Tag tag0 = Tag.valueOf(""org.jsoup.select.Evaluator$Tag"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, ""k:{zgh;sv!gwxui>g"", attributes0);
    // Undeclared exception!
    try {
        element0.toggleClass((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test2223,"public void test2223() throws Throwable {
    Tag tag0 = Tag.valueOf(""E6v,kRS9z"");
    Attributes attributes0 = new Attributes();
    FormElement formElement0 = new FormElement(tag0, ""E6v,kRS9z"", attributes0);
    // Undeclared exception!
    try {
        formElement0.select(""E6v,kRS9z"");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Could not parse query 'kRS9z': unexpected token at '9z'
        //
        verifyException(""org.jsoup.select.QueryParser"", e);
    }
}",0,
project,0,test2324,"public void test2324() throws Throwable {
    Document document0 = new Document(""String must not be empty"");
    // Undeclared exception!
    try {
        document0.select("""");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test2425,"public void test2425() throws Throwable {
    Tag tag0 = Tag.valueOf(""W<5#u?{W"");
    TextNode textNode0 = new TextNode(""W<5#u?{W"", ""W<5#u?{W"");
    Attributes attributes0 = textNode0.attributes();
    FormElement formElement0 = new FormElement(tag0, ""W<5#u?{W"", attributes0);
    // Undeclared exception!
    try {
        formElement0.removeClass((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test2526,"public void test2526() throws Throwable {
    Tag tag0 = Tag.valueOf(""M:it7!U*"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, ""hw[}g|+GD8|0>X"", attributes0);
    // Undeclared exception!
    try {
        element0.prependChild((Node) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test2627,"public void test2627() throws Throwable {
    Document document0 = new Document(""InFrameset"");
    // Undeclared exception!
    try {
        document0.prepend((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test2728,"public void test2728() throws Throwable {
    Tag tag0 = Tag.valueOf(""vFXBBE*jjl[oJ94wZ"");
    TextNode textNode0 = TextNode.createFromEncoded(""Insert position out of bounds."", ""vFXBBE*jjl[oJ94wZ"");
    Attributes attributes0 = textNode0.attributes();
    FormElement formElement0 = new FormElement(tag0, ""5@"", attributes0);
    // Undeclared exception!
    try {
        formElement0.getElementsMatchingOwnText((Pattern) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.select.Evaluator$MatchesOwn"", e);
    }
}",0,
project,0,test2829,"public void test2829() throws Throwable {
    Document document0 = new Document(""Xrh"");
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    document0.childNodes = (List<Node>) linkedList0;
    linkedList0.add((Node) document0);
    // Undeclared exception!
    document0.getElementsByIndexEquals(22);
}",0,
project,0,test2930,"public void test2930() throws Throwable {
    Tag tag0 = Tag.valueOf(""yRt2'T"");
    Element element0 = new Element(tag0, """");
    // Undeclared exception!
    try {
        element0.getElementsByAttributeValueNot(""yRt2'T"", """");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test3031,"public void test3031() throws Throwable {
    Document document0 = new Document(""org.jsoup.select.Evaluator"");
    // Undeclared exception!
    try {
        document0.getElementsByAttributeValueMatching((String) null, (Pattern) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.select.Evaluator$AttributeWithValueMatching"", e);
    }
}",0,
project,0,test3132,"public void test3132() throws Throwable {
    Document document0 = new Document(""@Qn(k@"");
    // Undeclared exception!
    try {
        document0.getElementsByAttributeValueEnding(""@Qn(k@"", """");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test3233,"public void test3233() throws Throwable {
    Document document0 = new Document("""");
    // Undeclared exception!
    try {
        document0.getElementsByAttributeValue("""", """");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test3334,"public void test3334() throws Throwable {
    Document document0 = new Document(""DpoM-as|6AmfaJ[$`'"");
    // Undeclared exception!
    try {
        document0.getElementsByAttribute("""");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test3435,"public void test3435() throws Throwable {
    Document document0 = new Document(""dfn"");
    // Undeclared exception!
    try {
        document0.firstElementSibling();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Element"", e);
    }
}",0,
project,0,test3536,"public void test3536() throws Throwable {
    Document document0 = new Document("""");
    // Undeclared exception!
    try {
        document0.child(35);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 35, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",1,
project,0,test3637,"public void test3637() throws Throwable {
    Document document0 = new Document(""P"");
    // Undeclared exception!
    try {
        document0.child((-1117));
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test3738,"public void test3738() throws Throwable {
    Tag tag0 = Tag.valueOf(""%|r<"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, ""%|r<"", attributes0);
    // Undeclared exception!
    try {
        element0.before("""");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test3839,"public void test3839() throws Throwable {
    Document document0 = new Document(""+x4RH@Amv\u00079P&"");
    // Undeclared exception!
    try {
        document0.attr(""+x4RH@Amv\u00079P&"", (String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test3940,"public void test3940() throws Throwable {
    Tag tag0 = Tag.valueOf(""br"");
    TextNode textNode0 = TextNode.createFromEncoded(""p3m##Y#<5_6P62Ku3N"", ""&y2/ql|slJ"");
    Attributes attributes0 = textNode0.attributes();
    FormElement formElement0 = new FormElement(tag0, ""k_A"", attributes0);
    // Undeclared exception!
    try {
        formElement0.append((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test4041,"public void test4041() throws Throwable {
    Tag tag0 = Tag.valueOf(""itemscope"");
    Element element0 = null;
    try {
        element0 = new Element(tag0, ""itemscope"", (Attributes) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test4142,"public void test4142() throws Throwable {
    Element element0 = null;
    try {
        element0 = new Element((Tag) null, ""B#H2Cf1%+I/(e"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test4243,"public void test4243() throws Throwable {
    Document document0 = new Document("""");
    String string0 = document0.html();
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test4344,"public void test4344() throws Throwable {
    Document document0 = new Document(""#=Q_1K'KenM!,"");
    Element element0 = document0.val(""#=Q_1K'KenM!,"");
    assertEquals(0, element0.childNodeSize());
}",0,"assertEquals(0, element0.childNodeSize())"
project,0,test4445,"public void test4445() throws Throwable {
    Document document0 = new Document(""XPg)rWY^Nm.b5+/"");
    String string0 = document0.val();
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test4546,"public void test4546() throws Throwable {
    Document document0 = new Document("""");
    Integer integer0 = document0.elementSiblingIndex();
    assertEquals(0, (int) integer0);
}",0,
project,0,test4647,"public void test4647() throws Throwable {
    Document document0 = new Document(""pEqpZb${bEh%!a*"");
    String string0 = document0.cssSelector();
    assertEquals(""#root"", string0);
}",0,assertNotNull(string0)
project,0,test4748,"public void test4748() throws Throwable {
    Document document0 = new Document(""+h"");
    LinkedList<Comment> linkedList0 = new LinkedList<Comment>();
    // Undeclared exception!
    try {
        document0.insertChildren(65536, linkedList0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Insert position out of bounds.
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test5253,"public void test5253() throws Throwable {
    Document document0 = new Document("""");
    boolean boolean0 = document0.isBlock();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test5556,"public void test5556() throws Throwable {
    Tag tag0 = Tag.valueOf(""(XL7["");
    Attributes attributes0 = new Attributes();
    FormElement formElement0 = new FormElement(tag0, ""(XL7["", attributes0);
    Element element0 = formElement0.empty();
    assertSame(element0, formElement0);
}",0,
project,0,test5657,"public void test5657() throws Throwable {
    Document document0 = new Document(""C}ffUrV~rm4dY"");
    // Undeclared exception!
    try {
        document0.tagName((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Tag name must not be empty.
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test5859,"public void test5859() throws Throwable {
    Document document0 = new Document(""#=Q_1K'KenM!,"");
    // Undeclared exception!
    try {
        document0.getElementsMatchingOwnText(""5NN[k2"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Pattern syntax error: 5NN[k2
        //
        verifyException(""org.jsoup.nodes.Element"", e);
    }
}",0,
project,0,test5960,"public void test5960() throws Throwable {
    Tag tag0 = Tag.valueOf(""[jyKV>"");
    Attributes attributes0 = new Attributes();
    FormElement formElement0 = new FormElement(tag0, ""[jyKV>"", attributes0);
    String string0 = formElement0.nodeName();
    assertEquals(""[jykv>"", string0);
}",0,assertNotNull(string0)
project,0,test6465,"public void test6465() throws Throwable {
    TextNode textNode0 = new TextNode(""cite"", ""cite"");
    boolean boolean0 = Element.preserveWhitespace(textNode0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test6566,"public void test6566() throws Throwable {
    Document document0 = new Document(""P"");
    Element element0 = document0.previousElementSibling();
    assertNull(element0);
}",0,assertNotNull(element0)
project,0,test6667,"public void test6667() throws Throwable {
    Tag tag0 = Tag.valueOf(""[jyKV>"");
    Attributes attributes0 = new Attributes();
    FormElement formElement0 = new FormElement(tag0, ""[jyKV>"", attributes0);
    formElement0.toggleClass(""[jyKV>"");
    String string0 = formElement0.cssSelector();
    assertNotNull(string0);
}",0,
project,0,test6768,"public void test6768() throws Throwable {
    Tag tag0 = Tag.valueOf(""[jyKV>"");
    Attributes attributes0 = new Attributes();
    FormElement formElement0 = new FormElement(tag0, ""[jyKV>"", attributes0);
    Elements elements0 = formElement0.elements();
    // Undeclared exception!
    try {
        formElement0.insertChildren((-3), elements0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Insert position out of bounds.
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test6869,"public void test6869() throws Throwable {
    Tag tag0 = Tag.valueOf(""[jyKV>"");
    Attributes attributes0 = new Attributes();
    FormElement formElement0 = new FormElement(tag0, ""[jyKV>"", attributes0);
    Elements elements0 = formElement0.getElementsByAttributeStarting(""RWM0zO.\""z$c2 "");
    Element element0 = formElement0.insertChildren((-1), elements0);
    assertSame(formElement0, element0);
}",0,
project,0,test7071,"public void test7071() throws Throwable {
    Tag tag0 = Tag.valueOf(""l"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, """", attributes0);
    // Undeclared exception!
    try {
        element0.after((Node) element0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test7374,"public void test7374() throws Throwable {
    Tag tag0 = Tag.valueOf(""[jyKV>"");
    Attributes attributes0 = new Attributes();
    FormElement formElement0 = new FormElement(tag0, ""[jyKV>"", attributes0);
    // Undeclared exception!
    try {
        formElement0.after(""RWM0zO.\""z$c2 "");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test7576,"public void test7576() throws Throwable {
    Tag tag0 = Tag.valueOf(""l"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, """", attributes0);
    Element element1 = element0.prependText(""9"");
    assertEquals(""l"", element1.tagName());
}",0,assertNotNull(element1.tagName())
project,0,test7677,"public void test7677() throws Throwable {
    Document document0 = new Document(""A;7c}W35$8 Oo<n"");
    // Undeclared exception!
    try {
        document0.normalise();
        //  fail(""Expecting exception: NoSuchElementException"");
        // Unstable assertion
    } catch (NoSuchElementException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.LinkedList"", e);
    }
}",0,
project,0,test7778,"public void test7778() throws Throwable {
    // Undeclared exception!
    try {
        Document.createShell("""");
        //  fail(""Expecting exception: NoSuchElementException"");
        // Unstable assertion
    } catch (NoSuchElementException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.LinkedList"", e);
    }
}",0,
