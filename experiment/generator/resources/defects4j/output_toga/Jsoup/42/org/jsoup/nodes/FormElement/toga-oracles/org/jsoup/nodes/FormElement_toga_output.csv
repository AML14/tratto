project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Tag tag0 = Tag.valueOf(""http:/"");
    Attributes attributes0 = new Attributes();
    FormElement formElement0 = new FormElement(tag0, ""http:/"", attributes0);
    Connection connection0 = formElement0.submit();
    assertNotNull(connection0);
}",0,assertNotNull(connection0)
project,0,test011,"public void test011() throws Throwable {
    Tag tag0 = Tag.valueOf(""Could not determine a form action URL for submit. Ensure you set a base URI when parsing."");
    TextNode textNode0 = TextNode.createFromEncoded("")aD/-"", "")aD/-"");
    Attributes attributes0 = textNode0.attributes();
    FormElement formElement0 = new FormElement(tag0, ""-^vMGVN['dp[8"", attributes0);
    boolean boolean0 = formElement0.equals(formElement0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test033,"public void test033() throws Throwable {
    Tag tag0 = Tag.valueOf(""#af<!=,@-"");
    Attributes attributes0 = new Attributes();
    FormElement formElement0 = new FormElement(tag0, ""#af<!=,@-"", attributes0);
    FormElement formElement1 = (FormElement) formElement0.append(""#af<!=,@-"");
    Node[] nodeArray0 = new Node[1];
    nodeArray0[0] = (Node) formElement1;
    formElement1.addChildren(nodeArray0);
    FormElement formElement2 = formElement0.addElement(formElement1);
    assertSame(formElement0, formElement2);
}",1,
project,0,test044,"public void test044() throws Throwable {
    Tag tag0 = Tag.valueOf(""select"");
    TextNode textNode0 = new TextNode("""", ""checked"");
    Attributes attributes0 = textNode0.attributes();
    FormElement formElement0 = new FormElement(tag0, ""checked"", attributes0);
    Document document0 = new Document(""select"");
    formElement0.setSiblingIndex((-1));
    FormElement formElement1 = formElement0.addElement(document0);
    assertFalse(formElement1.isBlock());
}",0,assertFalse(formElement1.isBlock())
project,0,test055,"public void test055() throws Throwable {
    Tag tag0 = Tag.valueOf(""aside"");
    TextNode textNode0 = TextNode.createFromEncoded(""Twzz%y<+s,,Q)F/'-["", ""aside"");
    Attributes attributes0 = textNode0.attributes();
    FormElement formElement0 = new FormElement(tag0, ""aside"", attributes0);
    Document document0 = new Document(""Twzz%y<+s,,Q)F/'-["");
    FormElement formElement1 = formElement0.addElement(document0);
    assertEquals(0, formElement1.siblingIndex());
}",0,
project,0,test066,"public void test066() throws Throwable {
    Tag tag0 = Tag.valueOf(""tHS B Z'&;V0%"");
    FormElement formElement0 = null;
    try {
        formElement0 = new FormElement(tag0, ""tHS B Z'&;V0%"", (Attributes) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test099,"public void test099() throws Throwable {
    Tag tag0 = Tag.valueOf(""POST"");
    Attributes attributes0 = new Attributes();
    FormElement formElement0 = new FormElement(tag0, ""POST"", attributes0);
    Attribute attribute0 = new Attribute(""METHOD"", ""POST"");
    attributes0.put(attribute0);
    // Undeclared exception!
    try {
        formElement0.submit();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Malformed URL: POST
        //
        verifyException(""org.jsoup.helper.HttpConnection"", e);
    }
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = Attribute.createFromEncoded(""action"", ""action"");
    attributes0.put(attribute0);
    Tag tag0 = Tag.valueOf(""action"");
    FormElement formElement0 = new FormElement(tag0, ""action"", attributes0);
    // Undeclared exception!
    try {
        formElement0.submit();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Could not determine a form action URL for submit. Ensure you set a base URI when parsing.
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    Tag tag0 = Tag.valueOf(""selecT"");
    Attributes attributes0 = new Attributes();
    FormElement formElement0 = new FormElement(tag0, ""selecT"", attributes0);
    Object object0 = new Object();
    boolean boolean0 = formElement0.equals(object0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1313,"public void test1313() throws Throwable {
    Tag tag0 = Tag.valueOf(""8"");
    TextNode textNode0 = TextNode.createFromEncoded(""8"", ""8"");
    Attributes attributes0 = textNode0.attributes();
    FormElement formElement0 = new FormElement(tag0, ""8"", attributes0);
    formElement0.addElement((Element) null);
    // Undeclared exception!
    try {
        formElement0.formData();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.FormElement"", e);
    }
}",0,
