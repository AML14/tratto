project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""org.jsoup.parser.Token"", ""String input must not be null"");
    assertEquals(""String input must not be null"", document0.location());
}",0,assertNotNull(document0.location())
project,0,test022,"public void test022() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""`d5SKewn)}|*|6[2)"", ""`d5SKewn)}|*|6[2)"");
    TextNode textNode0 = new TextNode(""Fr18Oh%b@WmW"", """");
    Attributes attributes0 = textNode0.attributes();
    boolean boolean0 = htmlTreeBuilder0.processStartTag(""Fr18Oh%b@WmW"", attributes0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test033,"public void test033() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    xmlTreeBuilder0.initialiseParse("""", ""J"", parseErrorList0);
    boolean boolean0 = xmlTreeBuilder0.processEndTag(""Fr18Oh%b@WmW["");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test044,"public void test044() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""WU7f.m28pkei"", ""WU7f.m28pkei"");
    boolean boolean0 = htmlTreeBuilder0.processEndTag(""4FMiqOHG=h!Jy"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test055,"public void test055() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.tracking((-521));
    Document document0 = xmlTreeBuilder0.parse("""", """", parseErrorList0);
    assertFalse(document0.updateMetaCharsetElement());
}",0,assertFalse(document0.updateMetaCharsetElement())
project,0,test066,"public void test066() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    ParseErrorList parseErrorList0 = new ParseErrorList(440, 0);
    xmlTreeBuilder0.parse(""DoctypeName"", """", parseErrorList0);
    boolean boolean0 = xmlTreeBuilder0.processStartTag(""Hy22Pi3($^nL:uM.7"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test077,"public void test077() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Document document0 = xmlTreeBuilder0.parse("""", """");
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test088,"public void test088() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.parse(""6ANBx.#6E"", ""6ANBx.#6E"");
    htmlTreeBuilder0.popStackToClose(""6ANBx.#6E"");
    Element element0 = htmlTreeBuilder0.currentElement();
    assertNull(element0);
}",0,assertNotNull(element0)
project,0,test099,"public void test099() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    xmlTreeBuilder0.parseFragment("""", ""String input must not be null"", parseErrorList0);
    Element element0 = xmlTreeBuilder0.currentElement();
    assertEquals(""String input must not be null"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test1010,"public void test1010() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.runParser();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TreeBuilder"", e);
    }
}",1,
project,0,test1111,"public void test1111() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = new ParseErrorList(0, 0);
    htmlTreeBuilder0.parse("""", """", parseErrorList0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.processStartTag((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.processEndTag(""4FMiqOHG=h!Jy"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.processEndTag("""");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.parse(""<2km"", ""<2km"", (ParseErrorList) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.Tokeniser"", e);
    }
}",0,
project,0,test1515,"public void test1515() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(0);
    // Undeclared exception!
    try {
        xmlTreeBuilder0.parse((String) null, (String) null, parseErrorList0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String input must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test1616,"public void test1616() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.parse((String) null, (String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String input must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test1717,"public void test1717() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.initialiseParse((String) null, (String) null, parseErrorList0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String input must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test1818,"public void test1818() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.currentElement();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TreeBuilder"", e);
    }
}",0,
project,0,test1919,"public void test1919() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.processStartTag((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test2020,"public void test2020() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    TextNode textNode0 = new TextNode(""Fr18Oh%b@WmW["", ""Fr18Oh%b@WmW["");
    Attributes attributes0 = textNode0.attributes();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.processStartTag(""Fr18Oh%b@WmW["", attributes0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test2121,"public void test2121() throws Throwable {
    Attributes attributes0 = new Attributes();
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.processStartTag("""", attributes0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test2222,"public void test2222() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.parse(""<p>]C"", ""<p>]C"");
    assertEquals(1, document0.childNodeSize());
}",0,
