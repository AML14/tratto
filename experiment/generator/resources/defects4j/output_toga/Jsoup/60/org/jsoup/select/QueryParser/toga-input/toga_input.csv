focal_method,test_prefix,docstring
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test000() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse("":eq("");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Index must be numeric
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test011() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""*Z+Uz6ADXo"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test022() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse("":containsData("");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // :containsData(text) query must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test033() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse("":lt("");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Index must be numeric
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test044() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse(""# "");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test055() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse("":gt("");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Index must be numeric
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test066() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse("":has("");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // :has(el) subselect must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test077() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse("".`J%x'$V$M"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test088() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse("":not(selector) subselect must not be empty"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test099() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse("",lr|A7,l"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test1010() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""z[k[$=]"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test1111() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""*|Z+Uz6ADXo"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test1212() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""zq>[Q@2k3R"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test1313() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse(""~DaU+"");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Could not parse query '': unexpected token at ''
        //
        verifyException(""org.jsoup.select.QueryParser"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test1414() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse(""r+:nth-child(9\""v1u"");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // No match found
        //
        verifyException(""java.util.regex.Matcher"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test1515() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse("":contains(text) query must not be empty"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test1616() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse("":containsOwn(%s)"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test1717() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse("":matches(regex) query must not be empty"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test1818() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse("":matcHesOwn(%s)"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test1919() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse("":nth-last-child("");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Could not parse nth-index '': unexpected format
        //
        verifyException(""org.jsoup.select.QueryParser"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test2020() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse("":nth-of-type("");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Could not parse nth-index '': unexpected format
        //
        verifyException(""org.jsoup.select.QueryParser"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test2121() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse("":nth-last-of-type("");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Could not parse nth-index '': unexpected format
        //
        verifyException(""org.jsoup.select.QueryParser"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test3030() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""[^%s]"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test3131() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""[%s^q=%s]"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test3232() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""[%s!=%s]"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test3333() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""[%s^=%s]"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test3434() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""[%s~=%s]"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test3535() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""[%^*=%s]"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    QueryParser p = new QueryParser(query);
    return p.parse();
}","public void test3636() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse("":nth-child(N)"");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // No match found
        //
        verifyException(""java.util.regex.Matcher"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
