/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 31 04:05:46 GMT 2023
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.Node;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Token;
import org.jsoup.parser.XmlTreeBuilder;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class XmlTreeBuilder_ESTest extends XmlTreeBuilder_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        Parser parser0 = Parser.htmlParser();
        xmlTreeBuilder0.parseFragment("k`FVihJ<?hz", (Element) null, "k`FVihJ<?hz", parser0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        Token.Doctype token_Doctype0 = new Token.Doctype();
        xmlTreeBuilder0.process(token_Doctype0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        PipedReader pipedReader0 = new PipedReader();
        xmlTreeBuilder0.parse(pipedReader0, "org.jsoup.parser.XmlTreeBuilder");
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        xmlTreeBuilder0.parse("k`FVKhJ<?hz", "k`FVKhJ<?hz");
        Token.StartTag token_StartTag0 = new Token.StartTag();
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("k`FVKhJ<?hz", attributes0);
        token_StartTag1.selfClosing = true;
        Element element0 = xmlTreeBuilder0.insert(token_StartTag0);
        element0.tagName();
        assertNotNull(element0.tagName());
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        xmlTreeBuilder0.parse("k`FVKhJ<?hz", "k`FVKhJ<?hz");
        Token.StartTag token_StartTag0 = new Token.StartTag();
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("k`FVKhJ<?hz", attributes0);
        token_StartTag1.selfClosing = true;
        token_StartTag0.nameAttr("u", attributes0);
        Element element0 = xmlTreeBuilder0.insert(token_StartTag1);
        element0.baseUri();
        assertNotNull(element0.baseUri());
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        Token.Comment token_Comment0 = new Token.Comment();
        xmlTreeBuilder0.process(token_Comment0);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        List<Node> list0 = Parser.parseXmlFragment("<![CDAA[", "<![CDAA[");
        list0.size();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        Document document0 = xmlTreeBuilder0.parse("k`-Vh7c[<?z", "k`-Vh7c[<?z");
        document0.baseUri();
        assertNotNull(document0.baseUri());
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        List<Node> list0 = Parser.parseXmlFragment("<![CDATA[", "<![CDATA[");
        list0.size();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        xmlTreeBuilder0.parse("org.jsoup.parser.XmlTreeBuilder$1", "org.jsoup.parser.XmlTreeBuilder$1");
        boolean boolean0 = xmlTreeBuilder0.processEndTag("org.jsoup.parser.XmlTreeBuilder$1");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        xmlTreeBuilder0.parse("k`FVKhJ<?hz", "k`FVKhJ<?hz");
        xmlTreeBuilder0.processStartTag("k`FVKhJ<?hz");
        boolean boolean0 = xmlTreeBuilder0.processEndTag("k`FVKhJ<?hz");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        xmlTreeBuilder0.parse("Scrpz2IDat/nYTYgOpTn", "Scrpz2IDat/nYTYgOpTn");
        xmlTreeBuilder0.processStartTag("Scrpz2IDat/nYTYgOpTn");
        boolean boolean0 = xmlTreeBuilder0.processEndTag("#document");
        assertTrue(boolean0);
    }
}
