{
  "test2324" : {
    "methodSignature" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2324() throws Throwable {\n    URI uRI0 = MockURI.aFileURI;\n    MockFile mockFile0 = new MockFile(uRI0);\n    DataUtil.load((File) mockFile0, (String) null, \".|?W8Nmlf.>\\\"5Zl\");\n}",
    "testName" : "test2324"
  },
  "test1213" : {
    "methodSignature" : "static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser)",
    "methodName" : "parseByteData",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1213() throws Throwable {\n    Parser parser0 = Parser.htmlParser();\n    DataUtil.parseByteData((ByteBuffer) null, \"\", \"\", parser0);\n}",
    "testName" : "test1213"
  },
  "test2425" : {
    "methodSignature" : "static void crossStreams(final InputStream in, final OutputStream out) throws IOException",
    "methodName" : "crossStreams",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2425() throws Throwable {\n    DataUtil.crossStreams((InputStream) null, (OutputStream) null);\n}",
    "testName" : "test2425"
  },
  "test1314" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1314() throws Throwable {\n    byte[] byteArray0 = new byte[1];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 66, (byte) 66);\n    Parser parser0 = Parser.xmlParser();\n    DataUtil.load((InputStream) byteArrayInputStream0, \"ps\", \"\", parser0);\n}",
    "testName" : "test1314"
  },
  "test3436" : {
    "methodSignature" : "static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser)",
    "methodName" : "parseByteData",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3436() throws Throwable {\n    byte[] byteArray0 = new byte[4];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);\n    ByteBuffer byteBuffer0 = DataUtil.readToByteBuffer(sequenceInputStream0, (byte) 34);\n    Parser parser0 = Parser.xmlParser();\n    DataUtil.parseByteData(byteBuffer0, \"K3b\", \"K3b\", parser0);\n}",
    "testName" : "test3436"
  },
  "test2122" : {
    "methodSignature" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2122() throws Throwable {\n    String string0 = \"O\\\\uHYC<!SsdX>DIw+\";\n    File file0 = MockFile.createTempFile(string0, \"\");\n    DataUtil.load(file0, string0, \"\");\n}",
    "testName" : "test2122"
  },
  "test3233" : {
    "methodSignature" : "public String baseUri()",
    "methodName" : "baseUri",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3233() throws Throwable {\n    EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(\"}]Jv;K9z\");\n    FileSystemHandling.appendStringToFile(evoSuiteFile0, \"u<AGuDMJ\");\n    MockFile mockFile0 = new MockFile((String) null, \"}]Jv;K9z\");\n    Document document0 = DataUtil.load((File) mockFile0, (String) null, \"keygen\");\n    document0.baseUri();\n}",
    "testName" : "test3233"
  },
  "test4246" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4246() throws Throwable {\n    Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    DataUtil.load((InputStream) sequenceInputStream0, \"content\", \"--------------------------------\");\n}",
    "testName" : "test4246"
  },
  "test1011" : {
    "methodSignature" : "static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser)",
    "methodName" : "parseByteData",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1011() throws Throwable {\n    Parser parser0 = Parser.htmlParser();\n    DataUtil.parseByteData((ByteBuffer) null, \"U\\\"(.s>>e#=*>\", \"U\\\"(.s>>e#=*>\", parser0);\n}",
    "testName" : "test1011"
  },
  "test2223" : {
    "methodSignature" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2223() throws Throwable {\n    File file0 = MockFile.createTempFile(\"xbw\", \"xbw\");\n    DataUtil.load(file0, \"\", \"\");\n}",
    "testName" : "test2223"
  },
  "test1112" : {
    "methodSignature" : "static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser)",
    "methodName" : "parseByteData",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1112() throws Throwable {\n    DataUtil.parseByteData((ByteBuffer) null, (String) null, \";\", (Parser) null);\n}",
    "testName" : "test1112"
  },
  "test011" : {
    "methodSignature" : "public final int childNodeSize()",
    "methodName" : "childNodeSize",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);\n    Parser parser0 = Parser.xmlParser();\n    Document document0 = DataUtil.parseByteData(byteBuffer0, (String) null, \"v*y(\", parser0);\n    document0.childNodeSize();\n}",
    "testName" : "test011"
  },
  "test2728" : {
    "methodSignature" : "static String mimeBoundary()",
    "methodName" : "mimeBoundary",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2728() throws Throwable {\n    String string0 = DataUtil.mimeBoundary();\n}",
    "testName" : "test2728"
  },
  "test012" : {
    "methodSignature" : "public String baseUri()",
    "methodName" : "baseUri",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test012() throws Throwable {\n    ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);\n    Parser parser0 = Parser.xmlParser();\n    Document document0 = DataUtil.parseByteData(byteBuffer0, (String) null, \"v*y(\", parser0);\n    document0.baseUri();\n}",
    "testName" : "test012"
  },
  "test034" : {
    "methodSignature" : "static ByteBuffer readToByteBuffer(InputStream inStream, int maxSize) throws IOException",
    "methodName" : "readToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    DataUtil.readToByteBuffer((InputStream) null, 65279);\n}",
    "testName" : "test034"
  },
  "test056" : {
    "methodSignature" : "static ByteBuffer readToByteBuffer(InputStream inStream) throws IOException",
    "methodName" : "readToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056() throws Throwable {\n    DataUtil.readToByteBuffer((InputStream) null);\n}",
    "testName" : "test056"
  },
  "test078" : {
    "methodSignature" : "static ByteBuffer readFileToByteBuffer(File file) throws IOException",
    "methodName" : "readFileToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078() throws Throwable {\n    DataUtil.readFileToByteBuffer((File) null);\n}",
    "testName" : "test078"
  },
  "test1617" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1617() throws Throwable {\n    byte[] byteArray0 = new byte[3];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1327, (byte) 0);\n    DataUtil.load((InputStream) byteArrayInputStream0, \"O|uk\", \"track\");\n}",
    "testName" : "test1617"
  },
  "test3739" : {
    "methodSignature" : "public String baseUri()",
    "methodName" : "baseUri",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3739() throws Throwable {\n    byte[] byteArray0 = new byte[8];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    Document document0 = DataUtil.load((InputStream) byteArrayInputStream0, (String) null, \"ll\");\n    document0.baseUri();\n}",
    "testName" : "test3739"
  },
  "test2829" : {
    "methodSignature" : "static String getCharsetFromContentType(String contentType)",
    "methodName" : "getCharsetFromContentType",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2829() throws Throwable {\n    String string0 = DataUtil.getCharsetFromContentType(\"charset=\");\n}",
    "testName" : "test2829"
  },
  "test1718" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1718() throws Throwable {\n    DataUtil.load((InputStream) null, \",ewW_Cekp\\u0001;<T\", \",ewW_Cekp\\u0001;<T\");\n}",
    "testName" : "test1718"
  },
  "test2526" : {
    "methodSignature" : "static void crossStreams(final InputStream in, final OutputStream out) throws IOException",
    "methodName" : "crossStreams",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2526() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-188), 32);\n    MockFile mockFile0 = new MockFile(\"T59|}~l+$*9vp\");\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);\n    DataUtil.crossStreams(byteArrayInputStream0, mockFileOutputStream0);\n}",
    "testName" : "test2526"
  },
  "test1415" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1415() throws Throwable {\n    Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    Parser parser0 = Parser.xmlParser();\n    DataUtil.load((InputStream) sequenceInputStream0, \"HA$xqe}&@\", \"+93d?}\", parser0);\n}",
    "testName" : "test1415"
  },
  "test3537" : {
    "methodSignature" : "static ByteBuffer readToByteBuffer(InputStream inStream, int maxSize) throws IOException",
    "methodName" : "readToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3537() throws Throwable {\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);\n    DataUtil.readToByteBuffer(pipedInputStream0, (-3022));\n}",
    "testName" : "test3537"
  },
  "test2627" : {
    "methodSignature" : "static void crossStreams(final InputStream in, final OutputStream out) throws IOException",
    "methodName" : "crossStreams",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2627() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream0);\n    DataUtil.crossStreams(pushbackInputStream0, (OutputStream) null);\n}",
    "testName" : "test2627"
  },
  "test1516" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1516() throws Throwable {\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    Parser parser0 = Parser.xmlParser();\n    DataUtil.load((InputStream) mockFileInputStream0, \"\", \"?6k\", parser0);\n}",
    "testName" : "test1516"
  },
  "test3638" : {
    "methodSignature" : "public final int childNodeSize()",
    "methodName" : "childNodeSize",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3638() throws Throwable {\n    byte[] byteArray0 = new byte[8];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    Parser parser0 = Parser.htmlParser();\n    Document document0 = DataUtil.load((InputStream) byteArrayInputStream0, \"UTF-8\", \"UTF-8\", parser0);\n    document0.childNodeSize();\n}",
    "testName" : "test3638"
  },
  "test3031" : {
    "methodSignature" : "static String getCharsetFromContentType(String contentType)",
    "methodName" : "getCharsetFromContentType",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3031() throws Throwable {\n    String string0 = DataUtil.getCharsetFromContentType(\"}]Jv;K9z\");\n}",
    "testName" : "test3031"
  },
  "test4144" : {
    "methodSignature" : "public String location()",
    "methodName" : "location",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4144() throws Throwable {\n    ByteBuffer byteBuffer0 = DataUtil.emptyByteBuffer();\n    Parser parser0 = Parser.htmlParser();\n    Document document0 = DataUtil.parseByteData(byteBuffer0, (String) null, \"\", parser0);\n    document0.location();\n}",
    "testName" : "test4144"
  },
  "test2021" : {
    "methodSignature" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2021() throws Throwable {\n    File file0 = MockFile.createTempFile(\"9al^:|}8b\", \"link\", (File) null);\n    DataUtil.load(file0, \"link\", \"\");\n}",
    "testName" : "test2021"
  },
  "test3132" : {
    "methodSignature" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3132() throws Throwable {\n    DataUtil.load((File) null, \"\", \"org.jsoup.helper.DataUtil\");\n}",
    "testName" : "test3132"
  },
  "test4043" : {
    "methodSignature" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4043() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\", \"\");\n    DataUtil.load((File) mockFile0, \"\", \"@3RgtH}IKUE3Bd\");\n}",
    "testName" : "test4043"
  },
  "test3841" : {
    "methodSignature" : "public String location()",
    "methodName" : "location",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3841() throws Throwable {\n    byte[] byteArray0 = new byte[8];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    DataUtil.crossStreams(byteArrayInputStream0, byteArrayOutputStream0);\n    Document document0 = DataUtil.load((InputStream) byteArrayInputStream0, (String) null, \"ll\");\n    document0.location();\n}",
    "testName" : "test3841"
  },
  "test2930" : {
    "methodSignature" : "static String getCharsetFromContentType(String contentType)",
    "methodName" : "getCharsetFromContentType",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2930() throws Throwable {\n    String string0 = DataUtil.getCharsetFromContentType((String) null);\n}",
    "testName" : "test2930"
  },
  "test3942" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3942() throws Throwable {\n    DataUtil.load((InputStream) null, \"\", \"\", (Parser) null);\n}",
    "testName" : "test3942"
  },
  "test045" : {
    "methodSignature" : "static ByteBuffer readToByteBuffer(InputStream inStream, int maxSize) throws IOException",
    "methodName" : "readToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test045() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream(67);\n    DataUtil.readToByteBuffer(pipedInputStream0, 0);\n}",
    "testName" : "test045"
  },
  "test067" : {
    "methodSignature" : "static ByteBuffer readToByteBuffer(InputStream inStream) throws IOException",
    "methodName" : "readToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream(64);\n    DataUtil.readToByteBuffer(pipedInputStream0);\n}",
    "testName" : "test067"
  },
  "test089" : {
    "methodSignature" : "static ByteBuffer readFileToByteBuffer(File file) throws IOException",
    "methodName" : "readFileToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089() throws Throwable {\n    MockFile mockFile0 = new MockFile((File) null, \"\");\n    DataUtil.readFileToByteBuffer(mockFile0);\n}",
    "testName" : "test089"
  },
  "test1920" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1920() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    DataUtil.load((InputStream) pipedInputStream0, \"{H$gLRs'Ti^7lA'`1\", \"{H$gLRs'Ti^7lA'`1\");\n}",
    "testName" : "test1920"
  },
  "test0910" : {
    "methodSignature" : "static ByteBuffer readFileToByteBuffer(File file) throws IOException",
    "methodName" : "readFileToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0910() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"--------------------------------\", \"--------------------------------\");\n    DataUtil.readFileToByteBuffer(mockFile0);\n}",
    "testName" : "test0910"
  },
  "test1819" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1819() throws Throwable {\n    byte[] byteArray0 = new byte[8];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    DataUtil.load((InputStream) byteArrayInputStream0, \"\", \"--------------------------------\");\n}",
    "testName" : "test1819"
  }
}