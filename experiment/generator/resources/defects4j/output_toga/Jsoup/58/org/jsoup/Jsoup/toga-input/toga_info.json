{
  "test1212" : {
    "methodSignature" : "public static Document parse(String html, String baseUri, Parser parser)",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Parser parser0 = Parser.htmlParser();\n    Jsoup.parse((String) null, \"%1M\", parser0);\n}",
    "testName" : "test1212"
  },
  "test4646" : {
    "methodSignature" : "public static boolean isValid(String bodyHtml, Whitelist whitelist)",
    "methodName" : "isValid",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4646() throws Throwable {\n    Whitelist whitelist0 = new Whitelist();\n    boolean boolean0 = Jsoup.isValid(\"l<9s,:\", whitelist0);\n}",
    "testName" : "test4646"
  },
  "test3434" : {
    "methodSignature" : "public static boolean isValid(String bodyHtml, Whitelist whitelist)",
    "methodName" : "isValid",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    Jsoup.isValid(\"org.jsoup.Jsoup\", (Whitelist) null);\n}",
    "testName" : "test3434"
  },
  "test2424" : {
    "methodSignature" : "public static Document parse(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"org.jsoup.nodes.Entities\", \"org.jsoup.nodes.Entities\");\n    File file0 = MockFile.createTempFile(\"org.jsoup.nodes.Entities\", \"CWU\", (File) mockFile0);\n    Jsoup.parse(file0, \"org.jsoup.nodes.Entities\", \"org.jsoup.nodes.Entities\");\n}",
    "testName" : "test2424"
  },
  "test1010" : {
    "methodSignature" : "public static Document parse(URL url, int timeoutMillis) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Jsoup.parse((URL) null, 0);\n}",
    "testName" : "test1010"
  },
  "test4444" : {
    "methodSignature" : "public static Document parse(URL url, int timeoutMillis) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4444() throws Throwable {\n    URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());\n    URL uRL0 = MockURL.URL(\"K&ro\", \"device\", 0, \"Nq@+@<E{eZ\\\" A#&`0'\", uRLStreamHandler0);\n    Jsoup.parse(uRL0, 76);\n}",
    "testName" : "test4444"
  },
  "test3232" : {
    "methodSignature" : "public static Document parse(File in, String charsetName) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    File file0 = MockFile.createTempFile(\"CUdWjy8=xhB\", \"\");\n    Jsoup.parse(file0, \"\");\n}",
    "testName" : "test3232"
  },
  "test2222" : {
    "methodSignature" : "public static Document parse(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    byte[] byteArray0 = new byte[5];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), (byte) 32);\n    Jsoup.parse((InputStream) byteArrayInputStream0, \"4/2c(3#k&&nCC+?>E\", \"\");\n}",
    "testName" : "test2222"
  },
  "test033" : {
    "methodSignature" : "public static String clean(String bodyHtml, Whitelist whitelist)",
    "methodName" : "clean",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Whitelist whitelist0 = new Whitelist();\n    String string0 = Jsoup.clean(\"\", whitelist0);\n}",
    "testName" : "test033"
  },
  "test077" : {
    "methodSignature" : "public static Document parseBodyFragment(String bodyHtml)",
    "methodName" : "parseBodyFragment",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Jsoup.parseBodyFragment((String) null);\n}",
    "testName" : "test077"
  },
  "test1616" : {
    "methodSignature" : "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    byte[] byteArray0 = new byte[1];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);\n    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, (byte) 60);\n    Parser parser0 = Parser.htmlParser();\n    Jsoup.parse((InputStream) bufferedInputStream0, \"6#a2:S}/xzy\", \"\\\";v|8)]e]*v2X\", parser0);\n}",
    "testName" : "test1616"
  },
  "test3838" : {
    "methodSignature" : "public static String clean(String bodyHtml, String baseUri, Whitelist whitelist)",
    "methodName" : "clean",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3838() throws Throwable {\n    Whitelist whitelist0 = Whitelist.basicWithImages();\n    Jsoup.clean(\"\", (String) null, whitelist0);\n}",
    "testName" : "test3838"
  },
  "test2828" : {
    "methodSignature" : "public static Document parse(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"90?$?`.+m]aLt!(9v\", \"90?$?`.+m]aLt!(9v\");\n    Jsoup.parse((File) mockFile0, \"90?$?`.+m]aLt!(9v\", \"90?$?`.+m]aLt!(9v\");\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public static Document parse(String html)",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    Jsoup.parse((String) null);\n}",
    "testName" : "test1414"
  },
  "test4848" : {
    "methodSignature" : "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4848() throws Throwable {\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);\n    Parser parser0 = Parser.xmlParser();\n    Jsoup.parse((InputStream) bufferedInputStream0, \"\", \"\", parser0);\n}",
    "testName" : "test4848"
  },
  "test3636" : {
    "methodSignature" : "public static String clean(String bodyHtml, String baseUri, Whitelist whitelist, Document.OutputSettings outputSettings)",
    "methodName" : "clean",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3636() throws Throwable {\n    Whitelist whitelist0 = Whitelist.simpleText();\n    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();\n    Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.charset((Charset) null);\n    Jsoup.clean(\"del\", \"CP[C?$# G#AT WV\", whitelist0, document_OutputSettings1);\n}",
    "testName" : "test3636"
  },
  "test2626" : {
    "methodSignature" : "public static Document parse(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    File file0 = MockFile.createTempFile(\"sq3{\", \"dXoV'?\", (File) mockFile0);\n    Jsoup.parse(file0, \"\", \"P\");\n}",
    "testName" : "test2626"
  },
  "test4242" : {
    "methodSignature" : "public static Connection connect(String url)",
    "methodName" : "connect",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4242() throws Throwable {\n    Jsoup.connect((String) null);\n}",
    "testName" : "test4242"
  },
  "test3030" : {
    "methodSignature" : "public static Document parse(File in, String charsetName) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    File file0 = MockFile.createTempFile(\"gMi-n,VrJ$e@BZ];s2\", \"k&k#\");\n    Jsoup.parse(file0, \"k&k#\");\n}",
    "testName" : "test3030"
  },
  "test5252" : {
    "methodSignature" : "public String location()",
    "methodName" : "location",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5252() throws Throwable {\n    Document document0 = Jsoup.parse(\"<yA\", \"\");\n    document0.location();\n}",
    "testName" : "test5252"
  },
  "test2020" : {
    "methodSignature" : "public static Document parse(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    Jsoup.parse((InputStream) null, \"_ktI9=zg\", \"_ktI9=zg\");\n}",
    "testName" : "test2020"
  },
  "test4040" : {
    "methodSignature" : "public String location()",
    "methodName" : "location",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4040() throws Throwable {\n    Document document0 = Jsoup.parseBodyFragment(\"\", \"Axn(5sbLt,JWd'}\");\n    document0.location();\n}",
    "testName" : "test4040"
  },
  "test5050" : {
    "methodSignature" : "public boolean updateMetaCharsetElement()",
    "methodName" : "updateMetaCharsetElement",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5050() throws Throwable {\n    Document document0 = Jsoup.parse(\"6^2aU(8*wN9L|W@\");\n    document0.updateMetaCharsetElement();\n}",
    "testName" : "test5050"
  },
  "test022" : {
    "methodSignature" : "public boolean isBlock()",
    "methodName" : "isBlock",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    File file0 = MockFile.createTempFile(\"kBD)ja10p;\", \"fzcm~2`q ^lEDP:#\", (File) null);\n    Document document0 = Jsoup.parse(file0, (String) null);\n    document0.isBlock();\n}",
    "testName" : "test022"
  },
  "test066" : {
    "methodSignature" : "public static Document parseBodyFragment(String bodyHtml, String baseUri)",
    "methodName" : "parseBodyFragment",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Jsoup.parseBodyFragment((String) null, \"\");\n}",
    "testName" : "test066"
  },
  "test1818" : {
    "methodSignature" : "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    Parser parser0 = Parser.htmlParser();\n    Jsoup.parse((InputStream) pipedInputStream0, \"FVKr<;C$I7D<\\\"wbw&\", \"DBu~|Rs=Hwp)o=F@tr\", parser0);\n}",
    "testName" : "test1818"
  },
  "test2323" : {
    "methodSignature" : "public static Document parse(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream(48);\n    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 3124);\n    Jsoup.parse((InputStream) bufferedInputStream0, \"Cahr1Cm/{Vt[FG\", \"Cahr1Cm/{Vt[FG\");\n}",
    "testName" : "test2323"
  },
  "test1313" : {
    "methodSignature" : "public static Document parse(String html, String baseUri)",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Jsoup.parse(\"\", (String) null);\n}",
    "testName" : "test1313"
  },
  "test4545" : {
    "methodSignature" : "public static Document parse(File in, String charsetName) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4545() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    Jsoup.parse((File) mockFile0, \"\");\n}",
    "testName" : "test4545"
  },
  "test3535" : {
    "methodSignature" : "public static String clean(String bodyHtml, Whitelist whitelist)",
    "methodName" : "clean",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    Jsoup.clean(\"\", (Whitelist) null);\n}",
    "testName" : "test3535"
  },
  "test2121" : {
    "methodSignature" : "public static Document parse(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    Jsoup.parse((InputStream) sequenceInputStream0, \"\", \")Y`s:\");\n}",
    "testName" : "test2121"
  },
  "test1111" : {
    "methodSignature" : "public static Document parse(String html, String baseUri, Parser parser)",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Jsoup.parse(\"*\", \"*\", (Parser) null);\n}",
    "testName" : "test1111"
  },
  "test4343" : {
    "methodSignature" : "public String nodeName()",
    "methodName" : "nodeName",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4343() throws Throwable {\n    Parser parser0 = Parser.htmlParser();\n    Document document0 = Jsoup.parse(\"\", \"\", parser0);\n    document0.nodeName();\n}",
    "testName" : "test4343"
  },
  "test3333" : {
    "methodSignature" : "public static Document parse(File in, String charsetName) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"pf1?dV6\", \"entities-xhtml.properties\");\n    Jsoup.parse((File) mockFile0, \"pf1?dV6\");\n}",
    "testName" : "test3333"
  },
  "test011" : {
    "methodSignature" : "public String tagName()",
    "methodName" : "tagName",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    byte[] byteArray0 = new byte[3];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    Parser parser0 = Parser.htmlParser();\n    Document document0 = Jsoup.parse((InputStream) byteArrayInputStream0, (String) null, \"org.jsoup.safety.Whitelist$Protocol\", parser0);\n    document0.tagName();\n}",
    "testName" : "test011"
  },
  "test055" : {
    "methodSignature" : "public static String clean(String bodyHtml, String baseUri, Whitelist whitelist)",
    "methodName" : "clean",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Whitelist whitelist0 = Whitelist.none();\n    String string0 = Jsoup.clean(\"\", \"liJ'o%$>WujP\", whitelist0);\n}",
    "testName" : "test055"
  },
  "test099" : {
    "methodSignature" : "public static Document parse(URL url, int timeoutMillis) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    URL uRL0 = MockURL.getHttpExample();\n    URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());\n    URL uRL1 = MockURL.URL(uRL0, \"9Xg43p9YL{[NQM\", uRLStreamHandler0);\n    Jsoup.parse(uRL1, 2211);\n}",
    "testName" : "test099"
  },
  "test2727" : {
    "methodSignature" : "public static Document parse(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    Jsoup.parse((File) mockFile0, \"\", \"\");\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    Parser parser0 = Parser.htmlParser();\n    Jsoup.parse((InputStream) null, \"cA16d=Fg5ry\", \"cA16d=Fg5ry\", parser0);\n}",
    "testName" : "test1717"
  },
  "test4949" : {
    "methodSignature" : "public static String clean(String bodyHtml, String baseUri, Whitelist whitelist, Document.OutputSettings outputSettings)",
    "methodName" : "clean",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4949() throws Throwable {\n    Whitelist whitelist0 = Whitelist.simpleText();\n    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();\n    String string0 = Jsoup.clean(\"del\", \"CP[C?$# G#AT WV\", whitelist0, document_OutputSettings0);\n}",
    "testName" : "test4949"
  },
  "test3939" : {
    "methodSignature" : "public static String clean(String bodyHtml, String baseUri, Whitelist whitelist)",
    "methodName" : "clean",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3939() throws Throwable {\n    Whitelist whitelist0 = Whitelist.none();\n    String string0 = Jsoup.clean(\"u}E3,4vQN,%\", \"lOuDBz&e lv:\\\"W\", whitelist0);\n}",
    "testName" : "test3939"
  },
  "test2525" : {
    "methodSignature" : "public static Document parse(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    Jsoup.parse((File) null, \"bY9!MMj+93d?}aW`\", \"bY9!MMj+93d?}aW`\");\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    byte[] byteArray0 = new byte[9];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);\n    DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);\n    Parser parser0 = Parser.htmlParser();\n    Jsoup.parse((InputStream) dataInputStream0, \"object\", \"<#[OOjOz\", parser0);\n}",
    "testName" : "test1515"
  },
  "test4747" : {
    "methodSignature" : "public static Document parse(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4747() throws Throwable {\n    File file0 = MockFile.createTempFile(\"T]bUjnNE,o[*.xh3\", \"!8?_uN:{9\");\n    Jsoup.parse(file0, \"'DgO6![}VK]5#a-w:_\", \"'DgO6![}VK]5#a-w:_\");\n}",
    "testName" : "test4747"
  },
  "test3737" : {
    "methodSignature" : "public static String clean(String bodyHtml, String baseUri, Whitelist whitelist, Document.OutputSettings outputSettings)",
    "methodName" : "clean",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3737() throws Throwable {\n    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();\n    Jsoup.clean(\"\", \"\", (Whitelist) null, document_OutputSettings0);\n}",
    "testName" : "test3737"
  },
  "test5353" : {
    "methodSignature" : "public static Document parseBodyFragment(String bodyHtml)",
    "methodName" : "parseBodyFragment",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5353() throws Throwable {\n    Jsoup.parseBodyFragment(\"del\");\n}",
    "testName" : "test5353"
  },
  "test4141" : {
    "methodSignature" : "public static Document parse(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4141() throws Throwable {\n    EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(\"<yA\");\n    FileSystemHandling.appendStringToFile(evoSuiteFile0, \"\");\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(\"<yA\");\n    Jsoup.parse((InputStream) mockFileInputStream0, \"<yA\", (String) null);\n}",
    "testName" : "test4141"
  },
  "test3131" : {
    "methodSignature" : "public static Document parse(File in, String charsetName) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    Jsoup.parse((File) null, \"\");\n}",
    "testName" : "test3131"
  },
  "test5151" : {
    "methodSignature" : "public static String clean(String bodyHtml, Whitelist whitelist)",
    "methodName" : "clean",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5151() throws Throwable {\n    Whitelist whitelist0 = Whitelist.simpleText();\n    String string0 = Jsoup.clean(\"HD.,HZm?C$GDU3I\", whitelist0);\n}",
    "testName" : "test5151"
  },
  "test000" : {
    "methodSignature" : "public boolean isBlock()",
    "methodName" : "isBlock",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Parser parser0 = Parser.xmlParser();\n    Document document0 = Jsoup.parse(\"\", \"\", parser0);\n    document0.isBlock();\n}",
    "testName" : "test000"
  },
  "test044" : {
    "methodSignature" : "public static String clean(String bodyHtml, String baseUri, Whitelist whitelist, Document.OutputSettings outputSettings)",
    "methodName" : "clean",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Whitelist whitelist0 = Whitelist.basicWithImages();\n    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();\n    String string0 = Jsoup.clean(\"\", \"\", whitelist0, document_OutputSettings0);\n}",
    "testName" : "test044"
  },
  "test088" : {
    "methodSignature" : "public static Document parse(URL url, int timeoutMillis) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    URL uRL0 = MockURL.getHttpExample();\n    Jsoup.parse(uRL0, 0);\n}",
    "testName" : "test088"
  },
  "test2929" : {
    "methodSignature" : "public static Document parse(File in, String charsetName) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    File file0 = MockFile.createTempFile(\"code\", \"code\");\n    Jsoup.parse(file0, \"code\");\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public static Document parse(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "parse",
    "className" : "org.jsoup.Jsoup",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    byte[] byteArray0 = new byte[9];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 14, 233);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);\n    Jsoup.parse((InputStream) pushbackInputStream0, \"z\", \"vagq'Rp\");\n}",
    "testName" : "test1919"
  }
}