{
  "test23" : {
    "methodSignature" : "public boolean isValid(Document dirtyDocument)",
    "methodName" : "isValid",
    "className" : "org.jsoup.safety.Cleaner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test23() throws Throwable {\n    Whitelist whitelist0 = Whitelist.none();\n    Whitelist whitelist1 = whitelist0.addEnforcedAttribute(\"body\", \"body\", \"body\");\n    Document document0 = Document.createShell(\"body\");\n    Cleaner cleaner0 = new Cleaner(whitelist1);\n    Document document1 = cleaner0.clean(document0);\n    whitelist0.addEnforcedAttribute(\"body\", \"body\", \"open\");\n    boolean boolean0 = cleaner0.isValid(document1);\n}",
    "testName" : "test23"
  },
  "test34" : {
    "methodSignature" : "public boolean isValid(Document dirtyDocument)",
    "methodName" : "isValid",
    "className" : "org.jsoup.safety.Cleaner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34() throws Throwable {\n    Whitelist whitelist0 = Whitelist.basic();\n    Cleaner cleaner0 = new Cleaner(whitelist0);\n    Document document0 = Document.createShell(\"PbfK}e`)6OKd(YBn\");\n    document0.text(\"PbfK}e`)6OKd(YBn\");\n    boolean boolean0 = cleaner0.isValid(document0);\n}",
    "testName" : "test34"
  },
  "test45" : {
    "methodSignature" : "public boolean isValid(Document dirtyDocument)",
    "methodName" : "isValid",
    "className" : "org.jsoup.safety.Cleaner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test45() throws Throwable {\n    Whitelist whitelist0 = Whitelist.basic();\n    Whitelist whitelist1 = whitelist0.addEnforcedAttribute(\"body\", \"body\", \"body\");\n    Document document0 = Document.createShell(\"body\");\n    Whitelist whitelist2 = Whitelist.basicWithImages();\n    Cleaner cleaner0 = new Cleaner(whitelist2);\n    Cleaner cleaner1 = new Cleaner(whitelist1);\n    Document document1 = cleaner1.clean(document0);\n    boolean boolean0 = cleaner0.isValid(document1);\n}",
    "testName" : "test45"
  },
  "test00" : {
    "methodSignature" : "public final int childNodeSize()",
    "methodName" : "childNodeSize",
    "className" : "org.jsoup.safety.Cleaner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00() throws Throwable {\n    Whitelist whitelist0 = Whitelist.basic();\n    Cleaner cleaner0 = new Cleaner(whitelist0);\n    Document document0 = new Document(\"\");\n    Document document1 = cleaner0.clean(document0);\n    document1.childNodeSize();\n}",
    "testName" : "test00"
  },
  "test11" : {
    "methodSignature" : "public boolean isValid(Document dirtyDocument)",
    "methodName" : "isValid",
    "className" : "org.jsoup.safety.Cleaner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11() throws Throwable {\n    Whitelist whitelist0 = Whitelist.basic();\n    Whitelist whitelist1 = whitelist0.addEnforcedAttribute(\"body\", \"body\", \"body\");\n    Document document0 = Document.createShell(\"body\");\n    Cleaner cleaner0 = new Cleaner(whitelist1);\n    Document document1 = cleaner0.clean(document0);\n    boolean boolean0 = cleaner0.isValid(document1);\n}",
    "testName" : "test11"
  }
}