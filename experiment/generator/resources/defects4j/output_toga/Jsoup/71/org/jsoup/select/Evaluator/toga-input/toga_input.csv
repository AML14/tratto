focal_method,test_prefix,docstring
"public abstract boolean matches(Element root, Element element);","public void test04646() throws Throwable {
    Evaluator[] evaluatorArray0 = new Evaluator[6];
    CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
    ArrayList<Evaluator> arrayList0 = combiningEvaluator_And0.evaluators;
    CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(arrayList0);
    evaluatorArray0[2] = (Evaluator) combiningEvaluator_Or0;
    Document document0 = Document.createShell("""");
    // Undeclared exception!
    try {
        evaluatorArray0[2].matches(document0, (Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.select.CombiningEvaluator$Or"", e);
    }
}","/**
 * Test if the element meets the evaluator's requirements.
 *
 * @param root    Root of the matching subtree
 * @param element tested element
 * @return Returns <tt>true</tt> if the requirements are met or
 * <tt>false</tt> otherwise
 */"
"public abstract boolean matches(Element root, Element element);","public void test04747() throws Throwable {
    Document document0 = new Document(""Cf4Y{[G-<3_+gtH"");
    Evaluator[] evaluatorArray0 = new Evaluator[8];
    Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
    evaluatorArray0[7] = (Evaluator) evaluator_IsRoot0;
    // Undeclared exception!
    try {
        evaluatorArray0[7].matches(document0, document0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}","/**
 * Test if the element meets the evaluator's requirements.
 *
 * @param root    Root of the matching subtree
 * @param element tested element
 * @return Returns <tt>true</tt> if the requirements are met or
 * <tt>false</tt> otherwise
 */"
"public Elements getElementsByAttributeValueEnding(String key, String valueSuffix) {
    return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), this);
}","public void test07373() throws Throwable {
    Document document0 = Document.createShell("":p6ev%s"");
    // Undeclared exception!
    try {
        document0.getElementsByAttributeValueEnding(""\"""", ""\"""");
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}","/**
 * Find elements that have attributes that end with the value suffix. Case insensitive.
 *
 * @param key name of the attribute
 * @param valueSuffix end of the attribute value
 * @return elements that have attributes that end with the value suffix
 */"
