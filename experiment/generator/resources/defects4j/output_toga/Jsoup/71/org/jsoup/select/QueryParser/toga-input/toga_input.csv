focal_method,test_prefix,docstring
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test000() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse("":eq(%d)"");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Index must be numeric
        //
        verifyException(""org.jsoup.select.QueryParser"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test011() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""Ya~pm*"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test022() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse("":containsData("");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Did not find balanced marker at ''
        //
        verifyException(""org.jsoup.select.QueryParser"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test033() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse("":lt("");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Index must be numeric
        //
        verifyException(""org.jsoup.select.QueryParser"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test044() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse("">D.P0,4#-Us>+M%r`_"");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Could not parse query '4#-Us': unexpected token at 'Us'
        //
        verifyException(""org.jsoup.select.QueryParser"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test055() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse("":gt("");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Index must be numeric
        //
        verifyException(""org.jsoup.select.QueryParser"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test066() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse("":has(el) subselect must not be empty"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test077() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse("":not(selector) subselect must not be empty"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test088() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse("":contains(texI)qWerymust not be emty"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test099() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse("",DU k~PbAFo>5L7,WsGd"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test1010() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""ygv+o-Stn,qOPl"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test1111() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse(""hy~u~:nth-child(n)"");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // No match found
        //
        verifyException(""java.util.regex.Matcher"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test1212() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse(""Znv,Qda@[{Zs"");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Did not find balanced marker at '{Zs'
        //
        verifyException(""org.jsoup.select.QueryParser"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test1313() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""*|~pre"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test1414() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""[%s~=%s]"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test1515() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse("":containsOwn(%s)"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test1616() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse("":matches(regex) query must not be empty"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test1717() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse("":matchesOwn(%s)"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test1818() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse("":nth-last-child("");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Could not parse nth-index '': unexpected format
        //
        verifyException(""org.jsoup.select.QueryParser"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test1919() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse("":nth-of-type("");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Could not parse nth-index '': unexpected format
        //
        verifyException(""org.jsoup.select.QueryParser"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test2020() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse("":nth-last-of-type("");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Could not parse nth-index '': unexpected format
        //
        verifyException(""org.jsoup.select.QueryParser"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test2929() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""r|"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test3030() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""[^-a-zA-Z0-9_:.]"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test3131() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""option[selected]"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test3232() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""[%s=%s]"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test3333() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""[%s!=%s]"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test3434() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""[%s^=%s]"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test3535() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""[%s$=%s]"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test3636() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""[%s*=%s]"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test3737() throws Throwable {
    Evaluator evaluator0 = QueryParser.parse(""8 t>:nth-child(eVEn)"");
    assertNotNull(evaluator0);
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
"public static Evaluator parse(String query) {
    try {
        QueryParser p = new QueryParser(query);
        return p.parse();
    } catch (IllegalArgumentException e) {
        throw new Selector.SelectorParseException(e.getMessage());
    }
}","public void test3838() throws Throwable {
    // Undeclared exception!
    try {
        QueryParser.parse("">:nth-child(0)"");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // No match found
        //
        verifyException(""java.util.regex.Matcher"", e);
    }
}","/**
 * Parse a CSS query into an Evaluator.
 * @param query CSS query
 * @return Evaluator
 */"
