{
  "test1212" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    DataUtil.load((InputStream) pipedInputStream0, \"[a-zA-Z_:][-a-zA-Z0-9_:.]*\", \"data-\");\n}",
    "testName" : "test1212"
  },
  "test2323" : {
    "methodSignature" : "static String getCharsetFromContentType(String contentType)",
    "methodName" : "getCharsetFromContentType",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    String string0 = DataUtil.getCharsetFromContentType(\"itemscope\");\n}",
    "testName" : "test2323"
  },
  "test3434" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);\n    DataUtil.load((InputStream) pushbackInputStream0, (String) null, (String) null);\n}",
    "testName" : "test3434"
  },
  "test1313" : {
    "methodSignature" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    DataUtil.load((File) null, \"94>fy;nV'Dg\", \"]5#a-w:_'P#\");\n}",
    "testName" : "test1313"
  },
  "test2424" : {
    "methodSignature" : "static ByteBuffer readFileToByteBuffer(File file) throws IOException",
    "methodName" : "readFileToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\\\"R^k6^2aU(8*wN9L|W@\", \"\\\"R^k6^2aU(8*wN9L|W@\");\n    MockFile.createTempFile(\"\\\"R^k6^2aU(8*wN9L|W@\", \"big\", (File) mockFile0);\n    DataUtil.readFileToByteBuffer(mockFile0);\n}",
    "testName" : "test2424"
  },
  "test3535" : {
    "methodSignature" : "static ByteBuffer readToByteBuffer(InputStream inStream) throws IOException",
    "methodName" : "readToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    DataUtil.readToByteBuffer((InputStream) null);\n}",
    "testName" : "test3535"
  },
  "test1010" : {
    "methodSignature" : "static Document parseInputStream(InputStream input, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "parseInputStream",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    Parser parser0 = Parser.htmlParser();\n    DataUtil.parseInputStream(pipedInputStream0, \"+S!kJb\\\".lQy^5q;$Fb\", \"\", parser0);\n}",
    "testName" : "test1010"
  },
  "test2121" : {
    "methodSignature" : "static String mimeBoundary()",
    "methodName" : "mimeBoundary",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    String string0 = DataUtil.mimeBoundary();\n}",
    "testName" : "test2121"
  },
  "test3232" : {
    "methodSignature" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    File file0 = MockFile.createTempFile(\"charset=\", \"charset=\");\n    DataUtil.load(file0, \"\", \"#i:]hA:a#%yP\");\n}",
    "testName" : "test3232"
  },
  "test1111" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Parser parser0 = Parser.xmlParser();\n    DataUtil.load((InputStream) null, \"(?i)\\bcharset=s*(?:[\\\"'])?([^s,;\\\"']*)\", (String) null, parser0);\n}",
    "testName" : "test1111"
  },
  "test2222" : {
    "methodSignature" : "static String getCharsetFromContentType(String contentType)",
    "methodName" : "getCharsetFromContentType",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    String string0 = DataUtil.getCharsetFromContentType((String) null);\n}",
    "testName" : "test2222"
  },
  "test011" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    byte[] byteArray0 = new byte[8];\n    byteArray0[0] = (byte) 112;\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    DataUtil.load((InputStream) byteArrayInputStream0, \"%_clm,4}]Jv;K9zqq\", \"@1vv1[=Jo#+;\");\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public String location()",
    "methodName" : "location",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Parser parser0 = Parser.xmlParser();\n    Document document0 = DataUtil.parseInputStream((InputStream) null, \"\", \"#i:]hA:a#%yP\", parser0);\n    document0.location();\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public String location()",
    "methodName" : "location",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false, false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    Document document0 = DataUtil.load((InputStream) sequenceInputStream0, (String) null, \"--------------------------------\");\n    document0.location();\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "static ByteBuffer readFileToByteBuffer(File file) throws IOException",
    "methodName" : "readFileToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"r)AwX|D\", \"meta[http-equiv=content-type], meta[charset]\");\n    DataUtil.readFileToByteBuffer(mockFile0);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "static Document parseInputStream(InputStream input, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "parseInputStream",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    Parser parser0 = Parser.xmlParser();\n    DataUtil.parseInputStream(sequenceInputStream0, \"A=<;<sy1]3)K X_D~)i\", (String) null, parser0);\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    DataUtil.load((File) mockFile0, \"\", \"\");\n}",
    "testName" : "test1616"
  },
  "test2727" : {
    "methodSignature" : "public static ByteBuffer readToByteBuffer(InputStream inStream, int maxSize) throws IOException",
    "methodName" : "readToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    DataUtil.readToByteBuffer((InputStream) null, (-1805));\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "static void crossStreams(final InputStream in, final OutputStream out) throws IOException",
    "methodName" : "crossStreams",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    byte[] byteArray0 = new byte[2];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2), (byte) 59);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"small\");\n    DataUtil.crossStreams(byteArrayInputStream0, mockPrintStream0);\n}",
    "testName" : "test1717"
  },
  "test2828" : {
    "methodSignature" : "public String location()",
    "methodName" : "location",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    File file0 = MockFile.createTempFile(\"[+{'k\", \"\");\n    Document document0 = DataUtil.load(file0, \"UTF-32\", \"UTF-32\");\n    document0.location();\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    File file0 = MockFile.createTempFile(\"G-.tO$:e\", \"\");\n    DataUtil.load(file0, \"G-.tO$:e\", \"\");\n}",
    "testName" : "test1414"
  },
  "test2525" : {
    "methodSignature" : "static ByteBuffer readFileToByteBuffer(File file) throws IOException",
    "methodName" : "readFileToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    DataUtil.readFileToByteBuffer((File) null);\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    File file0 = MockFile.createTempFile(\"org.jsoup.helper.DataUtil$BomCharset\", \"\", (File) mockFile0);\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    DataUtil.load(file0, \"\", \"\");\n}",
    "testName" : "test1515"
  },
  "test2020" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    byte[] byteArray0 = new byte[8];\n    byteArray0[0] = (byte) (-76);\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    DataUtil.load((InputStream) byteArrayInputStream0, \"charset=\", \"charset=\");\n}",
    "testName" : "test2020"
  },
  "test3131" : {
    "methodSignature" : "public String location()",
    "methodName" : "location",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    Parser parser0 = Parser.xmlParser();\n    Document document0 = DataUtil.load((InputStream) null, (String) null, \"\", parser0);\n    document0.location();\n}",
    "testName" : "test3131"
  },
  "test000" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    byte[] byteArray0 = new byte[9];\n    byteArray0[2] = (byte) (-69);\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);\n    Parser parser0 = Parser.htmlParser();\n    DataUtil.load((InputStream) pushbackInputStream0, \"[EHkIT\", \"org.jsoup.helper.DataUtil\", parser0);\n}",
    "testName" : "test000"
  },
  "test044" : {
    "methodSignature" : "public String location()",
    "methodName" : "location",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Document document0 = DataUtil.load((InputStream) null, \"(?i)\\bcharset=s*(?:[\\\"'])?([^s,;\\\"']*)\", \"(?i)\\bcharset=s*(?:[\\\"'])?([^s,;\\\"']*)\");\n    document0.location();\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public static ByteBuffer readToByteBuffer(InputStream inStream, int maxSize) throws IOException",
    "methodName" : "readToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    DataUtil.readToByteBuffer((InputStream) null, 0);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "static Document parseInputStream(InputStream input, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "parseInputStream",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    byte[] byteArray0 = new byte[3];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1055, (byte) 0);\n    Parser parser0 = Parser.xmlParser();\n    DataUtil.parseInputStream(byteArrayInputStream0, \"\", \"<\", parser0);\n}",
    "testName" : "test088"
  },
  "test2929" : {
    "methodSignature" : "static void crossStreams(final InputStream in, final OutputStream out) throws IOException",
    "methodName" : "crossStreams",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);\n    byte[] byteArray0 = new byte[5];\n    pipedOutputStream0.write(byteArray0);\n    // Undeclared exception!\n    DataUtil.crossStreams(pipedInputStream0, pipedOutputStream0);\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    byteArray0[1] = (byte) 4;\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    DataUtil.load((InputStream) byteArrayInputStream0, \"f:KS`9Mq|~h#YN\", \"f:KS`9Mq|~h#YN\");\n}",
    "testName" : "test1919"
  }
}