project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    TokenQueue.unescape(""X-kXc[-oD(+(y?l!"");
}",0,
project,0,test011,"public void test011() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeElementSelector();
    tokenQueue0.chompBalanced('#', '#');
}",0,
project,0,test022,"public void test022() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue did not match expected sequence"");
    tokenQueue0.addFirst(""Queue did not match expected sequence"");
    tokenQueue0.consumeWord();
    tokenQueue0.chompTo(""Queue did not match expected sequence"");
}",0,
project,0,test033,"public void test033() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-^1"");
    tokenQueue0.consume(""-^1"");
}",1,
project,0,test044,"public void test044() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""p`DL^"");
    tokenQueue0.matchesStartTag();
}",0,
project,0,test055,"public void test055() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    tokenQueue0.matchesStartTag();
}",0,
project,0,test066,"public void test066() throws Throwable {
    TokenQueue.unescape("""");
}",0,
project,0,test077,"public void test077() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    tokenQueue0.chompBalanced('/', '/');
    tokenQueue0.consumeWord();
    tokenQueue0.toString();
}",0,
project,0,test088,"public void test088() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.remainder();
}",0,
project,0,test099,"public void test099() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    tokenQueue0.chompBalanced('*', 'C');
    tokenQueue0.peek();
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""MunxBE4TmJ$O6brhQZ6"");
    tokenQueue0.consumeWord();
    tokenQueue0.matchesCS(""MunxBE4TmJ"");
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ET1.K7YMPRyV"");
    tokenQueue0.matches(""i`g%R6{fv:n"");
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.consumeWord();
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    tokenQueue0.consumeAttributeKey();
    tokenQueue0.consumeTo(""C-c}Cvo"");
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    tokenQueue0.consumeElementSelector();
    tokenQueue0.consumeAttributeKey();
    assertEquals(""["", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test1515,"public void test1515() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    tokenQueue0.consumeTagName();
    tokenQueue0.consume();
    char char0 = tokenQueue0.consume();
    assertEquals('>', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test1516,"public void test1516() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    tokenQueue0.consumeTagName();
    tokenQueue0.consume();
    char char0 = tokenQueue0.consume();
    assertEquals('1', char0);
}",0,assertNotNull(char0)
project,0,test1617,"public void test1617() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.chompToIgnoreCase(""ZPENtVIS-1O4V"");
    assertEquals('#', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test1718,"public void test1718() throws Throwable {
    // Undeclared exception!
    try {
        TokenQueue.unescape((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test1819,"public void test1819() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    // Undeclared exception!
    try {
        tokenQueue0.matchesCS((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
    }
}",0,
project,0,test1920,"public void test1920() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""zV}gOohc<nl"");
    // Undeclared exception!
    try {
        tokenQueue0.matchesAny((char[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test2021,"public void test2021() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue did not match expected sequence"");
    // Undeclared exception!
    try {
        tokenQueue0.matches((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test2122,"public void test2122() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    // Undeclared exception!
    try {
        tokenQueue0.matchChomp((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test2223,"public void test2223() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    // Undeclared exception!
    try {
        tokenQueue0.consumeToIgnoreCase("""");
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test2324,"public void test2324() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""1^=$YvJ?!Czi]S{%s"");
    // Undeclared exception!
    try {
        tokenQueue0.consumeToIgnoreCase((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test2425,"public void test2425() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""WPI"");
    // Undeclared exception!
    try {
        tokenQueue0.consumeToAny((String[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test2526,"public void test2526() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    // Undeclared exception!
    try {
        tokenQueue0.consumeTo((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test2627,"public void test2627() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""7LS<jn2]+9v"");
    // Undeclared exception!
    try {
        tokenQueue0.consume((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test2728,"public void test2728() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    // Undeclared exception!
    try {
        tokenQueue0.consume();
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",1,
project,0,test2829,"public void test2829() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    // Undeclared exception!
    try {
        tokenQueue0.chompToIgnoreCase("""");
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test2930,"public void test2930() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""foma::+6g|fqwm}a"");
    // Undeclared exception!
    try {
        tokenQueue0.chompToIgnoreCase((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test3031,"public void test3031() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    // Undeclared exception!
    try {
        tokenQueue0.chompTo((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test3132,"public void test3132() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    // Undeclared exception!
    try {
        tokenQueue0.addFirst((Character) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test3233,"public void test3233() throws Throwable {
    TokenQueue tokenQueue0 = null;
    try {
        tokenQueue0 = new TokenQueue((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test3334,"public void test3334() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""_U\u0006"");
    tokenQueue0.chompBalanced('_', 'c');
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test3435,"public void test3435() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""\""xiJ&`M[0Y_* x"");
    tokenQueue0.consumeToIgnoreCase(""*`l@X17Z["");
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test3536,"public void test3536() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$t/2XW"");
    tokenQueue0.consumeToIgnoreCase(""$t/2XW"");
    assertEquals('$', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test3637,"public void test3637() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    tokenQueue0.consumeWord();
    tokenQueue0.consumeTo(""PsQsP"");
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test3738,"public void test3738() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    tokenQueue0.consumeTo("""");
    assertEquals(""8rVVhr["", tokenQueue0.toString());
}",0,
project,0,test3839,"public void test3839() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    boolean boolean0 = tokenQueue0.matchesWord();
    assertEquals(""#f"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test3840,"public void test3840() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    boolean boolean0 = tokenQueue0.matchesWord();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3941,"public void test3941() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue did not match expected sequence"");
    tokenQueue0.chompToIgnoreCase(""(@#fgg0X"");
    boolean boolean0 = tokenQueue0.matchesWord();
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test3942,"public void test3942() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue did not match expected sequence"");
    tokenQueue0.chompToIgnoreCase(""(@#fgg0X"");
    boolean boolean0 = tokenQueue0.matchesWord();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4043,"public void test4043() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    boolean boolean0 = tokenQueue0.matchesWord();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4144,"public void test4144() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue did not match expected sequence"");
    tokenQueue0.consumeWord();
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertEquals("" did not match expected sequence"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test4145,"public void test4145() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue did not match expected sequence"");
    tokenQueue0.consumeWord();
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4246,"public void test4246() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4247,"public void test4247() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test4348,"public void test4348() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    Character character0 = Character.valueOf('u');
    tokenQueue0.addFirst(character0);
    boolean boolean0 = tokenQueue0.matchChomp(""PsQsP"");
    assertEquals('u', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test4349,"public void test4349() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    Character character0 = Character.valueOf('u');
    tokenQueue0.addFirst(character0);
    boolean boolean0 = tokenQueue0.matchChomp(""PsQsP"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4450,"public void test4450() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    boolean boolean0 = tokenQueue0.matchChomp("""");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test4451,"public void test4451() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    boolean boolean0 = tokenQueue0.matchChomp("""");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4552,"public void test4552() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    char[] charArray0 = new char[6];
    charArray0[0] = '!';
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertEquals(""!"", tokenQueue0.toString());
}",0,
project,0,test4553,"public void test4553() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    char[] charArray0 = new char[6];
    charArray0[0] = '!';
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4654,"public void test4654() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    char[] charArray0 = new char[6];
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertEquals(""!"", tokenQueue0.toString());
}",0,
project,0,test4655,"public void test4655() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    char[] charArray0 = new char[6];
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4756,"public void test4756() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    String[] stringArray0 = new String[8];
    stringArray0[0] = """";
    boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4857,"public void test4857() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""MKf2*BS>:okK]H<"");
    String[] stringArray0 = new String[1];
    stringArray0[0] = ""y9?Q{4"";
    boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4958,"public void test4958() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    String[] stringArray0 = new String[8];
    // Undeclared exception!
    try {
        tokenQueue0.matchesAny(stringArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test5059,"public void test5059() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s@zD6]"");
    Character character0 = new Character('L');
    tokenQueue0.addFirst(character0);
    tokenQueue0.chompBalanced('L', 'L');
    boolean boolean0 = tokenQueue0.isEmpty();
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test5060,"public void test5060() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s@zD6]"");
    Character character0 = new Character('L');
    tokenQueue0.addFirst(character0);
    tokenQueue0.chompBalanced('L', 'L');
    boolean boolean0 = tokenQueue0.isEmpty();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test5161,"public void test5161() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    boolean boolean0 = tokenQueue0.isEmpty();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test5262,"public void test5262() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s@zD6]"");
    String string0 = tokenQueue0.remainder();
    assertEquals(""s@zD6]"", string0);
}",0,assertNotNull(string0)
project,0,test5363,"public void test5363() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s@zD6]"");
    boolean boolean0 = tokenQueue0.matches(""s@zD6]"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test5464,"public void test5464() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    tokenQueue0.chompBalanced('/', '/');
    tokenQueue0.consumeAttributeKey();
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test5565,"public void test5565() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""0Z-T~R7~7 izo"");
    tokenQueue0.consumeCssIdentifier();
    assertEquals('~', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test5666,"public void test5666() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue did not match expected sequence"");
    tokenQueue0.consume();
    tokenQueue0.consumeToIgnoreCase(""Queue did not match expected sequence"");
    tokenQueue0.consumeCssIdentifier();
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test5767,"public void test5767() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    tokenQueue0.consumeElementSelector();
    assertEquals('$', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test5868,"public void test5868() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    tokenQueue0.chompBalanced('/', '/');
    tokenQueue0.consumeElementSelector();
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test5969,"public void test5969() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""I:xt}ChItIVC=~!{"");
    tokenQueue0.consumeTagName();
    assertEquals(""}ChItIVC=~!{"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test6070,"public void test6070() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    tokenQueue0.consumeTagName();
    tokenQueue0.chompToIgnoreCase(""X"");
    tokenQueue0.consumeTagName();
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test6171,"public void test6171() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""_U\u0006"");
    tokenQueue0.chompBalanced('c', '_');
    assertTrue(tokenQueue0.matchesWord());
}",0,assertFalse(tokenQueue0.matchesWord())
project,0,test6272,"public void test6272() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""String must not be empty"");
    tokenQueue0.advance();
    String[] stringArray0 = new String[7];
    stringArray0[0] = ""String must not be empty"";
    stringArray0[1] = ""String must not be empty"";
    stringArray0[2] = ""]NF"";
    stringArray0[3] = ""String must not be empty"";
    stringArray0[4] = ""String must not be empty"";
    stringArray0[5] = ""String must not be empty"";
    stringArray0[6] = ""String must not be empty"";
    tokenQueue0.consumeToAny(stringArray0);
    tokenQueue0.chompBalanced('\""', '\""');
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test6373,"public void test6373() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("".Rw %Y-cF[9:Oy"");
    Character character0 = Character.valueOf('#');
    tokenQueue0.addFirst(character0);
    // Undeclared exception!
    try {
        tokenQueue0.consume("".Rw %Y-cF[9:Oy"");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Queue did not match expected sequence
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test6474,"public void test6474() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consume("""");
    assertEquals('Z', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test6575,"public void test6575() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue did not match expected sequence"");
    tokenQueue0.consume();
    tokenQueue0.consumeToIgnoreCase(""Queue did not match expected sequence"");
    tokenQueue0.advance();
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test6676,"public void test6676() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""String must not be empty"");
    tokenQueue0.consumeTagName();
    boolean boolean0 = tokenQueue0.consumeWhitespace();
    assertEquals(""must not be empty"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test6677,"public void test6677() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""String must not be empty"");
    tokenQueue0.consumeTagName();
    boolean boolean0 = tokenQueue0.consumeWhitespace();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test6778,"public void test6778() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    boolean boolean0 = tokenQueue0.consumeWhitespace();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test6779,"public void test6779() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    boolean boolean0 = tokenQueue0.consumeWhitespace();
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test6880,"public void test6880() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    tokenQueue0.chompBalanced('/', '/');
    tokenQueue0.consumeWord();
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test6881,"public void test6881() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    tokenQueue0.chompBalanced('/', '/');
    tokenQueue0.consumeWord();
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test6982,"public void test6982() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.chompTo("""");
    assertEquals('Z', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test7083,"public void test7083() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""<]CY\""1}kOU&tb3>#)*"");
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test7084,"public void test7084() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""<]CY\""1}kOU&tb3>#)*"");
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test7185,"public void test7185() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""FL<x48V1,UNy`}6o"");
    tokenQueue0.consumeTagName();
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertEquals(""<x48V1,UNy`}6o"", tokenQueue0.toString());
}",0,
project,0,test7186,"public void test7186() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""FL<x48V1,UNy`}6o"");
    tokenQueue0.consumeTagName();
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test7287,"public void test7287() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    tokenQueue0.chompBalanced('/', '/');
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertEquals('f', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test7288,"public void test7288() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    tokenQueue0.chompBalanced('/', '/');
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test7389,"public void test7389() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    String[] stringArray0 = new String[18];
    stringArray0[0] = """";
    tokenQueue0.consumeToAny(stringArray0);
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test7490,"public void test7490() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""String must not be empty"");
    tokenQueue0.advance();
    String[] stringArray0 = new String[7];
    stringArray0[0] = ""String must not be empty"";
    stringArray0[1] = ""String must not be empty"";
    stringArray0[2] = ""]NF"";
    stringArray0[3] = ""String must not be empty"";
    stringArray0[4] = ""String must not be empty"";
    stringArray0[5] = ""String must not be empty"";
    stringArray0[6] = ""String must not be empty"";
    tokenQueue0.consumeToAny(stringArray0);
    char[] charArray0 = new char[3];
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test7491,"public void test7491() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""String must not be empty"");
    tokenQueue0.advance();
    String[] stringArray0 = new String[7];
    stringArray0[0] = ""String must not be empty"";
    stringArray0[1] = ""String must not be empty"";
    stringArray0[2] = ""]NF"";
    stringArray0[3] = ""String must not be empty"";
    stringArray0[4] = ""String must not be empty"";
    stringArray0[5] = ""String must not be empty"";
    stringArray0[6] = ""String must not be empty"";
    tokenQueue0.consumeToAny(stringArray0);
    char[] charArray0 = new char[3];
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test7592,"public void test7592() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    tokenQueue0.chompBalanced('/', '/');
    tokenQueue0.consumeWord();
    char char0 = tokenQueue0.peek();
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test7593,"public void test7593() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    tokenQueue0.chompBalanced('/', '/');
    tokenQueue0.consumeWord();
    char char0 = tokenQueue0.peek();
    assertEquals('\u0000', char0);
}",0,assertNotNull(char0)
project,0,test7694,"public void test7694() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    char char0 = tokenQueue0.peek();
    assertEquals('Z', char0);
}",0,assertNotNull(char0)
project,0,test7795,"public void test7795() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    String string0 = tokenQueue0.toString();
    assertEquals(""ZPENtVIS-1O4V#f"", string0);
}",0,assertNotNull(string0)
project,0,test7896,"public void test7896() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    boolean boolean0 = tokenQueue0.matchesCS("""");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
