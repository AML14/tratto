focal_method,test_prefix,docstring
"public String getValue() {
    return val;
}","public void test000() throws Throwable {
    Attribute attribute0 = new Attribute(""39T(g;UY\""6=Q^Zb>0Q"", ""nowrap"");
    attribute0.setKey(""allowfullscreen"");
    boolean boolean0 = attribute0.isBooleanAttribute();
    assertEquals(""nowrap"", attribute0.getValue());
}","/**
 *     Get the attribute value.
 *     @return the attribute value
 */"
"protected boolean isBooleanAttribute() {
    return Arrays.binarySearch(booleanAttributes, key) >= 0 || val == null;
}","public void test001() throws Throwable {
    Attribute attribute0 = new Attribute(""39T(g;UY\""6=Q^Zb>0Q"", ""nowrap"");
    attribute0.setKey(""allowfullscreen"");
    boolean boolean0 = attribute0.isBooleanAttribute();
    assertTrue(boolean0);
}","/**
 * @deprecated
 */"
"protected final boolean shouldCollapseAttribute(Document.OutputSettings out) {
    return shouldCollapseAttribute(key, val, out);
}","public void test023() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""disabled"", ""disabled"");
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    boolean boolean0 = attribute0.shouldCollapseAttribute(document_OutputSettings0);
    assertTrue(boolean0);
}","/**
 * Collapsible if it's a boolean attribute and value is empty or same as name
 *
 * @param out output settings
 * @return  Returns whether collapsible or not
 */"
"protected static boolean shouldCollapseAttribute(final String key, final String val, final Document.OutputSettings out) {
    return (out.syntax() == Document.OutputSettings.Syntax.html && (val == null || ("""".equals(val) || val.equalsIgnoreCase(key)) && Attribute.isBooleanAttribute(key)));
}","public void test034() throws Throwable {
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    boolean boolean0 = Attribute.shouldCollapseAttribute((String) null, (String) null, document_OutputSettings0);
    assertTrue(boolean0);
}",""
"protected static boolean isDataAttribute(String key) {
    return key.startsWith(Attributes.dataPrefix) && key.length() > Attributes.dataPrefix.length();
}","public void test045() throws Throwable {
    boolean boolean0 = Attribute.isDataAttribute(""data-readonly"");
    assertTrue(boolean0);
}",""
"protected static boolean isBooleanAttribute(final String key) {
    return Arrays.binarySearch(booleanAttributes, key) >= 0;
}","public void test056() throws Throwable {
    boolean boolean0 = Attribute.isBooleanAttribute(""allowfullscreen"");
    assertTrue(boolean0);
}","/**
 * Checks if this attribute name is defined as a boolean attribute in HTML5
 */"
"protected static boolean isBooleanAttribute(final String key) {
    return Arrays.binarySearch(booleanAttributes, key) >= 0;
}","public void test067() throws Throwable {
    boolean boolean0 = Attribute.isBooleanAttribute(""mLGE1%D"");
    assertFalse(boolean0);
}","/**
 * Checks if this attribute name is defined as a boolean attribute in HTML5
 */"
"public String getValue() {
    return val;
}","public void test078() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""-o@]X"", (String) null, attributes0);
    String string0 = attribute0.getValue();
    assertNull(string0);
}","/**
 *     Get the attribute value.
 *     @return the attribute value
 */"
"public String getValue() {
    return val;
}","public void test089() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""xhtml"", """");
    String string0 = attribute0.getValue();
    assertEquals("""", string0);
}","/**
 *     Get the attribute value.
 *     @return the attribute value
 */"
"protected final boolean shouldCollapseAttribute(Document.OutputSettings out) {
    return shouldCollapseAttribute(key, val, out);
}","public void test0910() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""disBbleK"", ""disabled"");
    // Undeclared exception!
    try {
        attribute0.shouldCollapseAttribute((Document.OutputSettings) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Attribute"", e);
    }
}","/**
 * Collapsible if it's a boolean attribute and value is empty or same as name
 *
 * @param out output settings
 * @return  Returns whether collapsible or not
 */"
"protected static boolean shouldCollapseAttribute(final String key, final String val, final Document.OutputSettings out) {
    return (out.syntax() == Document.OutputSettings.Syntax.html && (val == null || ("""".equals(val) || val.equalsIgnoreCase(key)) && Attribute.isBooleanAttribute(key)));
}","public void test1011() throws Throwable {
    // Undeclared exception!
    try {
        Attribute.shouldCollapseAttribute(""|w2kb2{.\""W90"", ""+8>TZ"", (Document.OutputSettings) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Attribute"", e);
    }
}",""
"public String setValue(String val) {
    String oldVal = parent.get(this.key);
    if (parent != null) {
        int i = parent.indexOfKey(this.key);
        if (i != Attributes.NotFound)
            parent.vals[i] = val;
    }
    this.val = val;
    return oldVal;
}","public void test1112() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""L&1\""c"", ""5Oc?'\""YGR4\""<zYp"");
    // Undeclared exception!
    try {
        attribute0.setValue(""L&1\""c"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Attribute"", e);
    }
}","/**
 *     Set the attribute value.
 *     @param val the new attribute value; must not be null
 */"
"public String setValue(String val) {
    String oldVal = parent.get(this.key);
    if (parent != null) {
        int i = parent.indexOfKey(this.key);
        if (i != Attributes.NotFound)
            parent.vals[i] = val;
    }
    this.val = val;
    return oldVal;
}","public void test1213() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded("":N68\""K Hwz3~N )[|"", "":N68\""K Hwz3~N )[|"");
    Attribute attribute1 = Attribute.createFromEncoded(""Kutofocus"", """");
    Attributes attributes0 = new Attributes();
    attributes0.putIgnoreCase(""nohref"", (String) null);
    Attributes attributes1 = attributes0.put(attribute1);
    attributes1.put(attribute0);
    String[] stringArray0 = new String[2];
    attributes1.vals = stringArray0;
    // Undeclared exception!
    try {
        attribute0.setValue(""F|"");
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 2
        //
        verifyException(""org.jsoup.nodes.Attributes"", e);
    }
}","/**
 *     Set the attribute value.
 *     @param val the new attribute value; must not be null
 */"
"public void setKey(String key) {
    Validate.notNull(key);
    key = key.trim();
    // trimming could potentially make empty, so validate here
    Validate.notEmpty(key);
    if (parent != null) {
        int i = parent.indexOfKey(this.key);
        if (i != Attributes.NotFound)
            parent.keys[i] = key;
    }
    this.key = key;
}","public void test1314() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""L?#"", ""MAx;9kK5=$j:6P1A["");
    // Undeclared exception!
    try {
        attribute0.setKey("""");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}","/**
 *     Set the attribute key; case is preserved.
 *     @param key the new key; must not be null
 */"
"public void setKey(String key) {
    Validate.notNull(key);
    key = key.trim();
    // trimming could potentially make empty, so validate here
    Validate.notEmpty(key);
    if (parent != null) {
        int i = parent.indexOfKey(this.key);
        if (i != Attributes.NotFound)
            parent.keys[i] = key;
    }
    this.key = key;
}","public void test1415() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded("":N68\""K Hwz3~N )[|"", "":N68\""K Hwz3~N )[|"");
    Attribute attribute1 = Attribute.createFromEncoded(""Kutofocus"", """");
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.put(attribute1);
    attributes1.put(attribute0);
    String[] stringArray0 = new String[1];
    attributes1.keys = stringArray0;
    // Undeclared exception!
    try {
        attribute0.setKey("".fj\""eyBU>5"");
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 1
        //
        verifyException(""org.jsoup.nodes.Attributes"", e);
    }
}","/**
 *     Set the attribute key; case is preserved.
 *     @param key the new key; must not be null
 */"
"protected static boolean isDataAttribute(String key) {
    return key.startsWith(Attributes.dataPrefix) && key.length() > Attributes.dataPrefix.length();
}","public void test1516() throws Throwable {
    // Undeclared exception!
    try {
        Attribute.isDataAttribute((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"protected static boolean isBooleanAttribute(final String key) {
    return Arrays.binarySearch(booleanAttributes, key) >= 0;
}","public void test1617() throws Throwable {
    // Undeclared exception!
    try {
        Attribute.isBooleanAttribute((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}","/**
 * Checks if this attribute name is defined as a boolean attribute in HTML5
 */"
"protected static void html(String key, String val, Appendable accum, Document.OutputSettings out) throws IOException {
    accum.append(key);
    if (!shouldCollapseAttribute(key, val, out)) {
        accum.append(""=\"""");
        Entities.escape(accum, Attributes.checkNotNull(val), out, true, false, false);
        accum.append('""');
    }
}","public void test1718() throws Throwable {
    CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) ""compact"");
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        Attribute.html(""compact"", ""compact"", (Appendable) charBuffer0, document_OutputSettings0);
        fail(""Expecting exception: ReadOnlyBufferException"");
    } catch (ReadOnlyBufferException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.nio.CharBuffer"", e);
    }
}",""
"protected static void html(String key, String val, Appendable accum, Document.OutputSettings out) throws IOException {
    accum.append(key);
    if (!shouldCollapseAttribute(key, val, out)) {
        accum.append(""=\"""");
        Entities.escape(accum, Attributes.checkNotNull(val), out, true, false, false);
        accum.append('""');
    }
}","public void test1819() throws Throwable {
    char[] charArray0 = new char[8];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        Attribute.html(""b"", ""_q2F4ux2Eh[3_e<n1("", (Appendable) charBuffer0, document_OutputSettings0);
        fail(""Expecting exception: BufferOverflowException"");
    } catch (BufferOverflowException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.nio.Buffer"", e);
    }
}",""
"protected static void html(String key, String val, Appendable accum, Document.OutputSettings out) throws IOException {
    accum.append(key);
    if (!shouldCollapseAttribute(key, val, out)) {
        accum.append(""=\"""");
        Entities.escape(accum, Attributes.checkNotNull(val), out, true, false, false);
        accum.append('""');
    }
}","public void test1920() throws Throwable {
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        Attribute.html("""", """", (Appendable) null, document_OutputSettings0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Attribute"", e);
    }
}",""
"protected void html(Appendable accum, Document.OutputSettings out) throws IOException {
    html(key, val, accum, out);
}","public void test2021() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""?sW,9,"", ""t_IH22J_RVbg<"", attributes0);
    char[] charArray0 = new char[9];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        attribute0.html((Appendable) charBuffer0, document_OutputSettings0);
        fail(""Expecting exception: BufferOverflowException"");
    } catch (BufferOverflowException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.nio.Buffer"", e);
    }
}",""
"protected void html(Appendable accum, Document.OutputSettings out) throws IOException {
    html(key, val, accum, out);
}","public void test2122() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""No buffer left to unconsume"", ""&#xa0;"", attributes0);
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        attribute0.html((Appendable) null, document_OutputSettings0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Attribute"", e);
    }
}",""
"protected void html(Appendable accum, Document.OutputSettings out) throws IOException {
    html(key, val, accum, out);
}","public void test2223() throws Throwable {
    Attribute attribute0 = new Attribute(""cZmp&ct"", ""cZmp&ct"");
    PipedWriter pipedWriter0 = new PipedWriter();
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    try {
        attribute0.html((Appendable) pipedWriter0, document_OutputSettings0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Pipe not connected
        //
        verifyException(""java.io.PipedWriter"", e);
    }
}",""
"public static Attribute createFromEncoded(String unencodedKey, String encodedValue) {
    String value = Entities.unescape(encodedValue, true);
    // parent will get set when Put
    return new Attribute(unencodedKey, value, null);
}","public void test2324() throws Throwable {
    // Undeclared exception!
    try {
        Attribute.createFromEncoded("""", (String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}","/**
 * Create a new Attribute from an unencoded key and a HTML attribute encoded value.
 * @param unencodedKey assumes the key is not encoded, as can be only run of simple \w chars.
 * @param encodedValue HTML attribute encoded value
 * @return attribute
 */"
"public static Attribute createFromEncoded(String unencodedKey, String encodedValue) {
    String value = Entities.unescape(encodedValue, true);
    // parent will get set when Put
    return new Attribute(unencodedKey, value, null);
}","public void test2425() throws Throwable {
    // Undeclared exception!
    try {
        Attribute.createFromEncoded("""", ""data-readonly"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}","/**
 * Create a new Attribute from an unencoded key and a HTML attribute encoded value.
 * @param unencodedKey assumes the key is not encoded, as can be only run of simple \w chars.
 * @param encodedValue HTML attribute encoded value
 * @return attribute
 */"
"public Attribute(String key, String val, Attributes parent) {
    Validate.notNull(key);
    key = key.trim();
    // trimming could potentially make empty, so validate here
    Validate.notEmpty(key);
    this.key = key;
    this.val = val;
    this.parent = parent;
}","public void test2526() throws Throwable {
    Attribute attribute0 = null;
    try {
        attribute0 = new Attribute("""", (String) null, (Attributes) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}","/**
 * Create a new attribute from unencoded (raw) key and value.
 * @param key attribute key; case is preserved.
 * @param val attribute value
 * @param parent the containing Attributes (this Attribute is not automatically added to said Attributes)
 * @see #createFromEncoded
 */"
"public Attribute(String key, String value) {
    this(key, value, null);
}","public void test2627() throws Throwable {
    Attribute attribute0 = null;
    try {
        attribute0 = new Attribute((String) null, (String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}","/**
 * Create a new attribute from unencoded (raw) key and value.
 * @param key attribute key; case is preserved.
 * @param value attribute value
 * @see #createFromEncoded
 */"
"protected void html(Appendable accum, Document.OutputSettings out) throws IOException {
    html(key, val, accum, out);
}","public void test2829() throws Throwable {
    Attribute attribute0 = new Attribute(""compact"", ""compact"");
    CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) ""compact"");
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        attribute0.html((Appendable) charBuffer0, document_OutputSettings0);
        fail(""Expecting exception: ReadOnlyBufferException"");
    } catch (ReadOnlyBufferException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.nio.CharBuffer"", e);
    }
}",""
"@Override
public int hashCode() {
    // note parent not considered
    int result = key != null ? key.hashCode() : 0;
    result = 31 * result + (val != null ? val.hashCode() : 0);
    return result;
}","public void test2930() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""orable"", (String) null, attributes0);
    attribute0.hashCode();
}",""
"@Override
public int hashCode() {
    // note parent not considered
    int result = key != null ? key.hashCode() : 0;
    result = 31 * result + (val != null ? val.hashCode() : 0);
    return result;
}","public void test3031() throws Throwable {
    Attribute attribute0 = new Attribute(""compact"", ""compact"");
    attribute0.hashCode();
}",""
"@Override
public boolean equals(Object o) {
    // note parent not considered
    if (this == o)
        return true;
    if (o == null || getClass() != o.getClass())
        return false;
    Attribute attribute = (Attribute) o;
    if (key != null ? !key.equals(attribute.key) : attribute.key != null)
        return false;
    return val != null ? val.equals(attribute.val) : attribute.val == null;
}","public void test3132() throws Throwable {
    Attribute attribute0 = new Attribute(""b"", (String) null);
    Attribute attribute1 = attribute0.clone();
    boolean boolean0 = attribute1.equals(attribute0);
    assertTrue(boolean0);
}",""
"public String getValue() {
    return val;
}","public void test3233() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded("":N68\""K Hwz3~N )[|"", "":N68\""K Hwz3~N )[|"");
    Attribute attribute1 = Attribute.createFromEncoded(""Kutofocus"", """");
    boolean boolean0 = attribute1.equals(attribute0);
    assertEquals("""", attribute1.getValue());
}","/**
 *     Get the attribute value.
 *     @return the attribute value
 */"
"@Override
public boolean equals(Object o) {
    // note parent not considered
    if (this == o)
        return true;
    if (o == null || getClass() != o.getClass())
        return false;
    Attribute attribute = (Attribute) o;
    if (key != null ? !key.equals(attribute.key) : attribute.key != null)
        return false;
    return val != null ? val.equals(attribute.val) : attribute.val == null;
}","public void test3234() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded("":N68\""K Hwz3~N )[|"", "":N68\""K Hwz3~N )[|"");
    Attribute attribute1 = Attribute.createFromEncoded(""Kutofocus"", """");
    boolean boolean0 = attribute1.equals(attribute0);
    assertFalse(boolean0);
}",""
"@Override
public boolean equals(Object o) {
    // note parent not considered
    if (this == o)
        return true;
    if (o == null || getClass() != o.getClass())
        return false;
    Attribute attribute = (Attribute) o;
    if (key != null ? !key.equals(attribute.key) : attribute.key != null)
        return false;
    return val != null ? val.equals(attribute.val) : attribute.val == null;
}","public void test3335() throws Throwable {
    Attribute attribute0 = new Attribute(""compact"", ""compact"");
    Attribute attribute1 = attribute0.clone();
    boolean boolean0 = attribute1.equals(attribute0);
    assertTrue(boolean0);
}",""
"@Override
public boolean equals(Object o) {
    // note parent not considered
    if (this == o)
        return true;
    if (o == null || getClass() != o.getClass())
        return false;
    Attribute attribute = (Attribute) o;
    if (key != null ? !key.equals(attribute.key) : attribute.key != null)
        return false;
    return val != null ? val.equals(attribute.val) : attribute.val == null;
}","public void test3436() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""class"", ""class"");
    boolean boolean0 = attribute0.equals((Object) null);
    assertFalse(boolean0);
}",""
"@Override
public boolean equals(Object o) {
    // note parent not considered
    if (this == o)
        return true;
    if (o == null || getClass() != o.getClass())
        return false;
    Attribute attribute = (Attribute) o;
    if (key != null ? !key.equals(attribute.key) : attribute.key != null)
        return false;
    return val != null ? val.equals(attribute.val) : attribute.val == null;
}","public void test3537() throws Throwable {
    Attribute attribute0 = new Attribute(""compact"", ""compact"");
    boolean boolean0 = attribute0.equals(attribute0);
    assertTrue(boolean0);
}",""
"@Override
public boolean equals(Object o) {
    // note parent not considered
    if (this == o)
        return true;
    if (o == null || getClass() != o.getClass())
        return false;
    Attribute attribute = (Attribute) o;
    if (key != null ? !key.equals(attribute.key) : attribute.key != null)
        return false;
    return val != null ? val.equals(attribute.val) : attribute.val == null;
}","public void test3638() throws Throwable {
    Attribute attribute0 = new Attribute(""compact"", ""compact"");
    Object object0 = new Object();
    boolean boolean0 = attribute0.equals(object0);
    assertFalse(boolean0);
}",""
"protected boolean isBooleanAttribute() {
    return Arrays.binarySearch(booleanAttributes, key) >= 0 || val == null;
}","public void test3739() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""orable"", (String) null, attributes0);
    boolean boolean0 = attribute0.isBooleanAttribute();
    assertTrue(boolean0);
}","/**
 * @deprecated
 */"
"protected boolean isBooleanAttribute() {
    return Arrays.binarySearch(booleanAttributes, key) >= 0 || val == null;
}","public void test3840() throws Throwable {
    Attribute attribute0 = new Attribute(""T mqh5?y>?VmB\""7-"", ""T mqh5?y>?VmB\""7-"");
    boolean boolean0 = attribute0.isBooleanAttribute();
    assertFalse(boolean0);
}","/**
 * @deprecated
 */"
"public String getValue() {
    return val;
}","public void test3941() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""compact"", ""redonl"");
    boolean boolean0 = attribute0.isBooleanAttribute();
    assertEquals(""redonl"", attribute0.getValue());
}","/**
 *     Get the attribute value.
 *     @return the attribute value
 */"
"protected boolean isBooleanAttribute() {
    return Arrays.binarySearch(booleanAttributes, key) >= 0 || val == null;
}","public void test3942() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""compact"", ""redonl"");
    boolean boolean0 = attribute0.isBooleanAttribute();
    assertTrue(boolean0);
}","/**
 * @deprecated
 */"
"protected static boolean shouldCollapseAttribute(final String key, final String val, final Document.OutputSettings out) {
    return (out.syntax() == Document.OutputSettings.Syntax.html && (val == null || ("""".equals(val) || val.equalsIgnoreCase(key)) && Attribute.isBooleanAttribute(key)));
}","public void test4043() throws Throwable {
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    boolean boolean0 = Attribute.shouldCollapseAttribute("":N68\""K Hwz3~N )[|"", """", document_OutputSettings0);
    assertFalse(boolean0);
}",""
"public String html() {
    StringBuilder sb = StringUtil.borrowBuilder();
    try {
        html(sb, (new Document("""")).outputSettings());
    } catch (IOException exception) {
        throw new SerializationException(exception);
    }
    return StringUtil.releaseBuilder(sb);
}","public void test4144() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""orable"", (String) null, attributes0);
    String string0 = attribute0.html();
    assertEquals(""orable"", string0);
}","/**
 *     Get the HTML representation of this attribute; e.g. {@code href=""index.html""}.
 *     @return HTML
 */"
"protected static void html(String key, String val, Appendable accum, Document.OutputSettings out) throws IOException {
    accum.append(key);
    if (!shouldCollapseAttribute(key, val, out)) {
        accum.append(""=\"""");
        Entities.escape(accum, Attributes.checkNotNull(val), out, true, false, false);
        accum.append('""');
    }
}","public void test4245() throws Throwable {
    MockFile mockFile0 = new MockFile(""x&v1}SNSCGt,5"");
    MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0, false);
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
    Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
    Attribute.html(""T mqh5?y>?VmB\""7-"", ""T mqh5?y>?VmB\""7-"", (Appendable) mockFileWriter0, document_OutputSettings0);
    assertSame(document_OutputSettings0, document_OutputSettings1);
}",""
"protected static boolean isDataAttribute(String key) {
    return key.startsWith(Attributes.dataPrefix) && key.length() > Attributes.dataPrefix.length();
}","public void test4346() throws Throwable {
    boolean boolean0 = Attribute.isDataAttribute(""data-"");
    assertFalse(boolean0);
}",""
"public String getValue() {
    return val;
}","public void test4447() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""data-data-readonly"", ""noshade"");
    boolean boolean0 = attribute0.isDataAttribute();
    assertEquals(""noshade"", attribute0.getValue());
}","/**
 *     Get the attribute value.
 *     @return the attribute value
 */"
"protected boolean isDataAttribute() {
    return isDataAttribute(key);
}","public void test4448() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""data-data-readonly"", ""noshade"");
    boolean boolean0 = attribute0.isDataAttribute();
    assertTrue(boolean0);
}",""
"@Override
public String toString() {
    return html();
}","public void test4549() throws Throwable {
    Attribute attribute0 = new Attribute(""compact"", ""compact"");
    String string0 = attribute0.toString();
    assertEquals(""compact"", string0);
}","/**
 *     Get the string representation of this attribute, implemented as {@link #html()}.
 *     @return string
 */"
"public String getValue() {
    return val;
}","public void test4650() throws Throwable {
    Attribute attribute0 = new Attribute(""as>c"", ""as>c"");
    Attributes attributes0 = new Attributes();
    attributes0.put(attribute0);
    attribute0.setValue(""b"");
    assertEquals(""b"", attribute0.getValue());
}","/**
 *     Get the attribute value.
 *     @return the attribute value
 */"
"public String getValue() {
    return val;
}","public void test4751() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""#root"", ""#root"", attributes0);
    String string0 = attribute0.setValue(""#root"");
    assertEquals(""#root"", attribute0.getValue());
}","/**
 *     Get the attribute value.
 *     @return the attribute value
 */"
"public String setValue(String val) {
    String oldVal = parent.get(this.key);
    if (parent != null) {
        int i = parent.indexOfKey(this.key);
        if (i != Attributes.NotFound)
            parent.vals[i] = val;
    }
    this.val = val;
    return oldVal;
}","public void test4752() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""#root"", ""#root"", attributes0);
    String string0 = attribute0.setValue(""#root"");
    assertEquals("""", string0);
}","/**
 *     Set the attribute value.
 *     @param val the new attribute value; must not be null
 */"
"public String getValue() {
    return val;
}","public void test4853() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""#root"", ""#root"", attributes0);
    attribute0.setKey(""declare"");
    assertEquals(""#root"", attribute0.getValue());
}","/**
 *     Get the attribute value.
 *     @return the attribute value
 */"
"public String getKey() {
    return key;
}","public void test4954() throws Throwable {
    Attribute attribute0 = new Attribute(""as>c"", ""as>c"");
    Attributes attributes0 = new Attributes();
    attributes0.put(attribute0);
    attribute0.setKey(""eH-3TCPA>9z,F?$t.{x"");
    assertEquals(""eH-3TCPA>9z,F?$t.{x"", attribute0.getKey());
}","/**
 *     Get the attribute key.
 *     @return the attribute key
 */"
"protected final boolean shouldCollapseAttribute(Document.OutputSettings out) {
    return shouldCollapseAttribute(key, val, out);
}","public void test5055() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""disBbleK"", ""disabled"");
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    attribute0.shouldCollapseAttribute(document_OutputSettings0);
}","/**
 * Collapsible if it's a boolean attribute and value is empty or same as name
 *
 * @param out output settings
 * @return  Returns whether collapsible or not
 */"
"public String getValue() {
    return val;
}","public void test5156() throws Throwable {
    Attribute attribute0 = new Attribute(""T mqh5?y>?VmB\""7-"", ""T mqh5?y>?VmB\""7-"");
    String string0 = attribute0.getValue();
    assertEquals(""T mqh5?y>?VmB\""7-"", string0);
}","/**
 *     Get the attribute value.
 *     @return the attribute value
 */"
"protected boolean isDataAttribute() {
    return isDataAttribute(key);
}","public void test5257() throws Throwable {
    Attribute attribute0 = new Attribute(""compact"", ""compact"");
    boolean boolean0 = attribute0.isDataAttribute();
    assertFalse(boolean0);
}",""
"public String getKey() {
    return key;
}","public void test5358() throws Throwable {
    Attribute attribute0 = new Attribute(""T mqh5?y>?VmB\""7-"", ""T mqh5?y>?VmB\""7-"");
    String string0 = attribute0.getKey();
    assertEquals(""T mqh5?y>?VmB\""7-"", string0);
}","/**
 *     Get the attribute key.
 *     @return the attribute key
 */"
