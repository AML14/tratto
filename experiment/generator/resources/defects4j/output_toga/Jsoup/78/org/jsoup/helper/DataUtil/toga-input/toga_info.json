{
  "test1212" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    byte[] byteArray0 = new byte[5];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    DataUtil.load((InputStream) byteArrayInputStream0, \"\", \"--------------------------------\");\n}",
    "testName" : "test1212"
  },
  "test2323" : {
    "methodSignature" : "static String getCharsetFromContentType(String contentType)",
    "methodName" : "getCharsetFromContentType",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    String string0 = DataUtil.getCharsetFromContentType(\":77\");\n}",
    "testName" : "test2323"
  },
  "test1313" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream(51);\n    DataUtil.load((InputStream) pipedInputStream0, \"xml\", \":MeM^/wrd#,7n8{OqSe\");\n}",
    "testName" : "test1313"
  },
  "test2424" : {
    "methodSignature" : "static ByteBuffer readFileToByteBuffer(File file) throws IOException",
    "methodName" : "readFileToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"Z -GT^FIk\");\n    mockFile0.mkdirs();\n    DataUtil.readFileToByteBuffer(mockFile0);\n}",
    "testName" : "test2424"
  },
  "test1010" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    byte[] byteArray0 = new byte[4];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (-3356));\n    Parser parser0 = Parser.htmlParser();\n    DataUtil.load((InputStream) byteArrayInputStream0, \"0=0AU^P>\", \"hE.=\", parser0);\n}",
    "testName" : "test1010"
  },
  "test2121" : {
    "methodSignature" : "static String getCharsetFromContentType(String contentType)",
    "methodName" : "getCharsetFromContentType",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    String string0 = DataUtil.getCharsetFromContentType(\"charset=\");\n}",
    "testName" : "test2121"
  },
  "test3232" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"#%s\");\n    File file0 = MockFile.createTempFile(\"#%s\", \"#%s\", (File) mockFile0);\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);\n    DataUtil.load((InputStream) mockFileInputStream0, \"V\", \"6IfE:SX\");\n}",
    "testName" : "test3232"
  },
  "test1111" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    Parser parser0 = Parser.xmlParser();\n    DataUtil.load((InputStream) pipedInputStream0, \"AEp]<\", \";/LXM7,W)Po\", parser0);\n}",
    "testName" : "test1111"
  },
  "test2222" : {
    "methodSignature" : "static String getCharsetFromContentType(String contentType)",
    "methodName" : "getCharsetFromContentType",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    String string0 = DataUtil.getCharsetFromContentType((String) null);\n}",
    "testName" : "test2222"
  },
  "test3333" : {
    "methodSignature" : "static ByteBuffer readToByteBuffer(InputStream inStream) throws IOException",
    "methodName" : "readToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    DataUtil.readToByteBuffer((InputStream) null);\n}",
    "testName" : "test3333"
  },
  "test033" : {
    "methodSignature" : "public String location()",
    "methodName" : "location",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    File file0 = MockFile.createTempFile(\"Children collection to be inserted must not be null.\", \"M*dk\", (File) null);\n    Document document0 = DataUtil.load(file0, \"UTF-16\", \"UTF-16\");\n    document0.location();\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "static ByteBuffer readToByteBuffer(InputStream inStream) throws IOException",
    "methodName" : "readToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-3781), (byte) 9);\n    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);\n    DataUtil.readToByteBuffer((InputStream) bufferedInputStream0);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "static Document parseInputStream(InputStream input, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "parseInputStream",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    Parser parser0 = Parser.htmlParser();\n    DataUtil.parseInputStream(sequenceInputStream0, \"\", \"\", parser0);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "static Document parseInputStream(InputStream input, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "parseInputStream",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    File file0 = MockFile.createTempFile(\"9La{>?^%eH<$$\", \"nA3cR:)1,dx`aG&)\");\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);\n    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);\n    Parser parser0 = Parser.htmlParser();\n    DataUtil.parseInputStream(pushbackInputStream0, \"\", (String) null, parser0);\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"&nbsp;\");\n    DataUtil.load((File) mockFile0, \"{^J2{.|?W8Nmlf.>\\\"5Z\", \"{^J2{.|?W8Nmlf.>\\\"5Z\");\n}",
    "testName" : "test1616"
  },
  "test2727" : {
    "methodSignature" : "public static ByteBuffer readToByteBuffer(InputStream inStream, int maxSize) throws IOException",
    "methodName" : "readToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);\n    DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);\n    DataUtil.readToByteBuffer(dataInputStream0, (-1870));\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "static void crossStreams(final InputStream in, final OutputStream out) throws IOException",
    "methodName" : "crossStreams",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    DataUtil.crossStreams(mockFileInputStream0, pipedOutputStream0);\n}",
    "testName" : "test1717"
  },
  "test2828" : {
    "methodSignature" : "public String location()",
    "methodName" : "location",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    Document document0 = DataUtil.load((InputStream) null, \"charset=\", \"\");\n    document0.location();\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    File file0 = MockFile.createTempFile(\"charset=\", \"\");\n    DataUtil.load(file0, \"\", \"W\");\n}",
    "testName" : "test1414"
  },
  "test2525" : {
    "methodSignature" : "static ByteBuffer readFileToByteBuffer(File file) throws IOException",
    "methodName" : "readFileToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"UTF-8\");\n    DataUtil.readFileToByteBuffer(mockFile0);\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    File file0 = MockFile.createTempFile(\"UTF-32\", \";(G3~{dE,6nC?1<vv1\");\n    DataUtil.load(file0, \"r2q}-l7toMQWu.DP\", \";(G3~{dE,6nC?1<vv1\");\n}",
    "testName" : "test1515"
  },
  "test3030" : {
    "methodSignature" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    DataUtil.load((File) null, (String) null, (String) null);\n}",
    "testName" : "test3030"
  },
  "test2020" : {
    "methodSignature" : "static String mimeBoundary()",
    "methodName" : "mimeBoundary",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    String string0 = DataUtil.mimeBoundary();\n}",
    "testName" : "test2020"
  },
  "test000" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    byte[] byteArray0 = new byte[8];\n    byteArray0[0] = (byte) (-58);\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    Parser parser0 = Parser.htmlParser();\n    DataUtil.load((InputStream) byteArrayInputStream0, \"\", (String) null, parser0);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public String baseUri()",
    "methodName" : "baseUri",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Parser parser0 = Parser.htmlParser();\n    Document document0 = DataUtil.parseInputStream((InputStream) null, \"Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML\", \"Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML\", parser0);\n    document0.baseUri();\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public static ByteBuffer readToByteBuffer(InputStream inStream, int maxSize) throws IOException",
    "methodName" : "readToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    DataUtil.readToByteBuffer((InputStream) null, 2330);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "static ByteBuffer readFileToByteBuffer(File file) throws IOException",
    "methodName" : "readFileToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    DataUtil.readFileToByteBuffer((File) null);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "static Document parseInputStream(InputStream input, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "parseInputStream",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    File file0 = MockFile.createTempFile(\"--------------------------------\", \"--------------------------------\");\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);\n    Parser parser0 = Parser.xmlParser();\n    DataUtil.parseInputStream(mockFileInputStream0, \"--------------------------------\", \"--------------------------------\", parser0);\n}",
    "testName" : "test088"
  },
  "test1919" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    byte[] byteArray0 = new byte[6];\n    byteArray0[0] = (byte) 3;\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    Parser parser0 = Parser.htmlParser();\n    DataUtil.load((InputStream) byteArrayInputStream0, (String) null, (String) null, parser0);\n}",
    "testName" : "test1919"
  }
}