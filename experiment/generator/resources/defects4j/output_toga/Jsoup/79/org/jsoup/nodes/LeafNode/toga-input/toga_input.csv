focal_method,test_prefix,docstring
"public int siblingIndex() {
    return siblingIndex;
}","public void test000() throws Throwable {
    CDataNode cDataNode0 = new CDataNode(""org.jsoup.select.Evaluator$AttributeWithValueContaining"");
    cDataNode0.coreValue(""org.jsoup.select.Evaluator$AttributeWithValueContaining"");
    assertEquals(0, cDataNode0.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"public int siblingIndex() {
    return siblingIndex;
}","public void test011() throws Throwable {
    DataNode dataNode0 = new DataNode(""j{H+ a_W9%z]XXI%P!#"", ""j{H+ a_W9%z]XXI%P!#"");
    dataNode0.setSiblingIndex(930);
    Node node0 = dataNode0.removeAttr(""k9Hp$"");
    assertEquals(930, node0.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"public int siblingIndex() {
    return siblingIndex;
}","public void test022() throws Throwable {
    TextNode textNode0 = new TextNode(""l|eQs"", ""l|eQs"");
    textNode0.siblingIndex = (-1623686282);
    Node node0 = textNode0.removeAttr("""");
    assertEquals((-1623686282), node0.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"@Override
public Node removeAttr(String key) {
    ensureAttributes();
    return super.removeAttr(key);
}","public void test033() throws Throwable {
    DataNode dataNode0 = new DataNode(""%nhMf"");
    dataNode0.setParentNode(dataNode0);
    Node node0 = dataNode0.removeAttr("""");
    assertSame(dataNode0, node0);
}",""
"protected final boolean hasAttributes() {
    return value instanceof Attributes;
}","public void test044() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded("""", ""D"");
    textNode0.attributes();
    boolean boolean0 = textNode0.hasAttributes();
    assertTrue(boolean0);
}",""
"protected final boolean hasAttributes() {
    return value instanceof Attributes;
}","public void test055() throws Throwable {
    DataNode dataNode0 = new DataNode(""] nUz}YMj"");
    boolean boolean0 = dataNode0.hasAttributes();
    assertFalse(boolean0);
}",""
"@Override
public boolean hasAttr(String key) {
    ensureAttributes();
    return super.hasAttr(key);
}","public void test066() throws Throwable {
    DataNode dataNode0 = new DataNode(""]~'Pa 5!b#}cN"");
    boolean boolean0 = dataNode0.hasAttr(""#data"");
    assertTrue(boolean0);
}",""
"String coreValue() {
    return attr(nodeName());
}","public void test077() throws Throwable {
    DataNode dataNode0 = new DataNode((String) null);
    String string0 = dataNode0.coreValue();
    assertNull(string0);
}",""
"String coreValue() {
    return attr(nodeName());
}","public void test088() throws Throwable {
    TextNode textNode0 = new TextNode(""org.jsoup.nodes.LeafNode"", ""org.jsoup.nodes.LeafNode"");
    String string0 = textNode0.coreValue();
    assertEquals(""org.jsoup.nodes.LeafNode"", string0);
}",""
"@Override
public int childNodeSize() {
    return 0;
}","public void test099() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded("""", ""x_x_~"");
    int int0 = textNode0.childNodeSize();
    assertEquals(0, int0);
}",""
"@Override
public String baseUri() {
    return hasParent() ? parent().baseUri() : """";
}","public void test1010() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""?|eqs"");
    Document document0 = new Document(""?|eqs"");
    document0.doSetBaseUri((String) null);
    textNode0.parentNode = (Node) document0;
    String string0 = textNode0.baseUri();
    assertNull(string0);
}",""
"public int size() {
    return size;
}","public void test1111() throws Throwable {
    Comment comment0 = new Comment((String) null, (String) null);
    Attributes attributes0 = comment0.attributes();
    assertEquals(0, attributes0.size());
}","/**
 *     Get the number of attributes in this set.
 *     @return size
 */"
"public int siblingIndex() {
    return siblingIndex;
}","public void test1212() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""Leaf Nodes do not have child nodes."", ""Leaf Nodes do not have child nodes."");
    dataNode0.siblingIndex = 518;
    Node node0 = dataNode0.attr("""", ""W_yjSq?W{{_X=LUrWs"");
    assertEquals(518, node0.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"public boolean hasParent() {
    return parentNode != null;
}","public void test1313() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""j{H+ a_W9%z]XXI%P!#"", (String) null);
    dataNode0.siblingIndex = (-1718651772);
    Node node0 = dataNode0.attr("";9H\""$"", (String) null);
    assertFalse(node0.hasParent());
}",""
"public int siblingIndex() {
    return siblingIndex;
}","public void test1414() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""4|eqs"");
    Document document0 = Document.createShell(""4|eqs"");
    textNode0.parentNode = (Node) document0;
    Node node0 = textNode0.attr(""4|eqs"", ""4|eqs"");
    assertEquals(0, node0.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"@Override
public String attr(String key) {
    Validate.notNull(key);
    if (!hasAttributes()) {
        return key.equals(nodeName()) ? (String) value : EmptyString;
    }
    return super.attr(key);
}","public void test1515() throws Throwable {
    CDataNode cDataNode0 = new CDataNode(""bdl|eQ"");
    cDataNode0.attr(""bdl|eQ"", ""bdl|eQ"");
    String string0 = cDataNode0.attr(""bdl|eQ"");
    assertEquals(""bdl|eQ"", string0);
}",""
"@Override
public Node removeAttr(String key) {
    ensureAttributes();
    return super.removeAttr(key);
}","public void test1616() throws Throwable {
    DocumentType documentType0 = new DocumentType(""0hu"", """", """", ""pqlL:"");
    // Undeclared exception!
    try {
        documentType0.removeAttr((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",""
"@Override
public Node removeAttr(String key) {
    ensureAttributes();
    return super.removeAttr(key);
}","public void test1717() throws Throwable {
    TextNode textNode0 = new TextNode(""l|eQs"", ""l|eQs"");
    textNode0.value = (Object) textNode0;
    // Undeclared exception!
    try {
        textNode0.removeAttr(""l|eQs"");
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.jsoup.nodes.TextNode cannot be cast to java.lang.String
        //
        verifyException(""org.jsoup.nodes.LeafNode"", e);
    }
}",""
"@Override
public boolean hasAttr(String key) {
    ensureAttributes();
    return super.hasAttr(key);
}","public void test1818() throws Throwable {
    CDataNode cDataNode0 = new CDataNode(""x3[uC_^N/{u$i8{P!u"");
    // Undeclared exception!
    try {
        cDataNode0.hasAttr((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",""
"@Override
public final Attributes attributes() {
    ensureAttributes();
    return (Attributes) value;
}","public void test1919() throws Throwable {
    CDataNode cDataNode0 = new CDataNode(""\u0007!Ly5rB(0%4Yl+"");
    Document document0 = new Document(""\""cG2W(=n6O!I':}"");
    cDataNode0.value = (Object) document0;
    // Undeclared exception!
    try {
        cDataNode0.attributes();
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.jsoup.nodes.Document cannot be cast to java.lang.String
        //
        verifyException(""org.jsoup.nodes.LeafNode"", e);
    }
}",""
"@Override
public Node attr(String key, String value) {
    if (!hasAttributes() && key.equals(nodeName())) {
        this.value = value;
    } else {
        ensureAttributes();
        super.attr(key, value);
    }
    return this;
}","public void test2020() throws Throwable {
    CDataNode cDataNode0 = new CDataNode(""itemscope"");
    // Undeclared exception!
    try {
        cDataNode0.attr((String) null, """");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
    }
}",""
"@Override
public Node attr(String key, String value) {
    if (!hasAttributes() && key.equals(nodeName())) {
        this.value = value;
    } else {
        ensureAttributes();
        super.attr(key, value);
    }
    return this;
}","public void test2121() throws Throwable {
    DocumentType documentType0 = new DocumentType((String) null, ""#cdata"", ""Leaf Nodes do not have child nodes."", ""9b5ix5rlJ&m"", ""h/7)'d'w+n^-RL"");
    // Undeclared exception!
    try {
        documentType0.attr((String) null, ""JZc.,{\""s(,fS#H"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",""
"@Override
public Node attr(String key, String value) {
    if (!hasAttributes() && key.equals(nodeName())) {
        this.value = value;
    } else {
        ensureAttributes();
        super.attr(key, value);
    }
    return this;
}","public void test2222() throws Throwable {
    DataNode dataNode0 = new DataNode(""hcld\u0005evKuzjqXy"");
    ParseSettings parseSettings0 = ParseSettings.htmlDefault;
    Tag tag0 = Tag.valueOf(""hcld\u0005evKuzjqXy"", parseSettings0);
    Element element0 = new Element(tag0, ""Wot#n"");
    dataNode0.value = (Object) element0;
    // Undeclared exception!
    try {
        dataNode0.attr(""VSJh$"", (String) null);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.jsoup.nodes.Element cannot be cast to java.lang.String
        //
        verifyException(""org.jsoup.nodes.LeafNode"", e);
    }
}",""
"@Override
public String attr(String key) {
    Validate.notNull(key);
    if (!hasAttributes()) {
        return key.equals(nodeName()) ? (String) value : EmptyString;
    }
    return super.attr(key);
}","public void test2323() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""r[EHkIT]bUjnN"");
    // Undeclared exception!
    try {
        textNode0.attr((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",""
"@Override
public String absUrl(String key) {
    ensureAttributes();
    return super.absUrl(key);
}","public void test2424() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration("""", false);
    // Undeclared exception!
    try {
        xmlDeclaration0.absUrl("""");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",""
"@Override
public String absUrl(String key) {
    ensureAttributes();
    return super.absUrl(key);
}","public void test2525() throws Throwable {
    DocumentType documentType0 = new DocumentType(""1"", ""1"", ""1"", ""1"");
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""SYSTEM"", ""SYSTEM"", true);
    documentType0.value = (Object) xmlDeclaration0;
    // Undeclared exception!
    try {
        documentType0.absUrl(""PUBLIC"");
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.jsoup.nodes.XmlDeclaration cannot be cast to java.lang.String
        //
        verifyException(""org.jsoup.nodes.LeafNode"", e);
    }
}",""
"@Override
public String baseUri() {
    return hasParent() ? parent().baseUri() : """";
}","public void test2626() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""4|eqs"");
    Document document0 = Document.createShell(""4|eqs"");
    textNode0.parentNode = (Node) document0;
    String string0 = textNode0.baseUri();
    assertEquals(""4|eqs"", string0);
}",""
"@Override
public String baseUri() {
    return hasParent() ? parent().baseUri() : """";
}","public void test2727() throws Throwable {
    CDataNode cDataNode0 = new CDataNode(""Leaf Nodes do not have child nodes."");
    String string0 = cDataNode0.baseUri();
    assertEquals("""", string0);
}",""
"@Override
public String attr(String key) {
    Validate.notNull(key);
    if (!hasAttributes()) {
        return key.equals(nodeName()) ? (String) value : EmptyString;
    }
    return super.attr(key);
}","public void test2828() throws Throwable {
    DataNode dataNode0 = new DataNode(""kF"", ""kF"");
    String string0 = dataNode0.attr(""#e[xT"");
    assertEquals("""", string0);
}",""
"public boolean hasParent() {
    return parentNode != null;
}","public void test2929() throws Throwable {
    DataNode dataNode0 = new DataNode("""", """");
    dataNode0.doSetBaseUri(""org.jsoup.nodes.LeafNode"");
    assertFalse(dataNode0.hasParent());
}",""
"@Override
public String absUrl(String key) {
    ensureAttributes();
    return super.absUrl(key);
}","public void test3030() throws Throwable {
    DocumentType documentType0 = new DocumentType(""label"", ""label"", ""label"");
    String string0 = documentType0.absUrl(""PUBLIC"");
    assertEquals("""", string0);
}",""
"@Override
public boolean hasAttr(String key) {
    ensureAttributes();
    return super.hasAttr(key);
}","public void test3131() throws Throwable {
    Comment comment0 = new Comment("""", """");
    boolean boolean0 = comment0.hasAttr("""");
    assertFalse(boolean0);
}",""
"@Override
protected List<Node> ensureChildNodes() {
    throw new UnsupportedOperationException(""Leaf Nodes do not have child nodes."");
}","public void test3232() throws Throwable {
    DocumentType documentType0 = new DocumentType(""radio"", ""radio"", ""ins"", ""radio"", ""VI #L[{_-7ew"");
    // Undeclared exception!
    try {
        documentType0.ensureChildNodes();
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // Leaf Nodes do not have child nodes.
        //
        verifyException(""org.jsoup.nodes.LeafNode"", e);
    }
}",""
"String coreValue() {
    return attr(nodeName());
}","public void test3333() throws Throwable {
    DataNode dataNode0 = new DataNode("""", """");
    String string0 = dataNode0.coreValue();
    assertEquals("""", string0);
}",""
