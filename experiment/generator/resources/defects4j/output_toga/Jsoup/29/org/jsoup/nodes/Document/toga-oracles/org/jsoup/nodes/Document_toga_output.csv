project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test011,"public void test011() throws Throwable {
    Document document0 = new Document(""oHk"");
    document0.appendText(""bgsound"");
    document0.append(""t)d"");
    Document document1 = document0.normalise();
    assertEquals(""#document"", document1.nodeName());
}",0,assertNotNull(document1.nodeName())
project,0,test0712,"public void test0712() throws Throwable {
    Document document0 = Document.createShell(""CS+w+<gieb%dHh`"");
    Document document1 = document0.ownerDocument();
    document1.siblingIndex = (-797);
    Element element0 = document1.text(""CS+w+<gieb%dHh`"");
    assertEquals(""#document"", element0.nodeName());
}",0,assertNotNull(element0.nodeName())
project,0,test0813,"public void test0813() throws Throwable {
    Document document0 = new Document(""body"");
    document0.setSiblingIndex(3560);
    Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.limitedQuirks;
    Document document1 = document0.quirksMode(document_QuirksMode0);
    assertEquals(3560, document1.siblingIndex());
}",0,
project,0,test0914,"public void test0914() throws Throwable {
    Document document0 = Document.createShell(""I5@@B;[A7Q?O 5Lv5"");
    document0.setSiblingIndex((-1));
    Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.limitedQuirks;
    Document document1 = document0.quirksMode(document_QuirksMode0);
    assertEquals((-1), document1.siblingIndex());
}",0,
project,0,test1015,"public void test1015() throws Throwable {
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    Document document0 = new Document(""&:A!+.>c8Cst/sz?"");
    document0.normalise();
    document0.appendChild(document0);
    Document document1 = document0.outputSettings(document_OutputSettings0);
    assertEquals(""#document"", document1.nodeName());
}",0,assertNotNull(document1.nodeName())
project,0,test1119,"public void test1119() throws Throwable {
    Document document0 = Document.createShell(""/VKt"");
    Element element0 = document0.text(""/VKt"");
    element0.siblingIndex = (-4170);
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    Document document1 = document0.outputSettings(document_OutputSettings0);
    assertEquals(""#document"", document1.nodeName());
}",0,assertNotNull(document1.nodeName())
project,0,test1529,"public void test1529() throws Throwable {
    Document document0 = new Document(""title"");
    String string0 = document0.outerHtml();
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test1630,"public void test1630() throws Throwable {
    Document document0 = new Document(""&:A!+.>c8Cst/sz?"");
    Document document1 = document0.normalise();
    Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.noQuirks;
    Document document2 = document1.quirksMode(document_QuirksMode0);
    Document document3 = (Document) document2.appendChild(document0);
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    document2.childNodes = (List<Node>) linkedList0;
    document3.normalise();
    Document document4 = (Document) document3.text(""&:A!+.>c8Cst/sz?"");
    assertEquals(""#document"", document4.nodeName());
}",0,assertNotNull(document4.nodeName())
project,0,test1731,"public void test1731() throws Throwable {
    Document document0 = Document.createShell(""I5@@B;[A7Q?O 5Lv5"");
    document0.setSiblingIndex((-1));
    Document document1 = document0.normalise();
    assertEquals(""#document"", document1.nodeName());
}",0,assertNotNull(document1.nodeName())
project,0,test1832,"public void test1832() throws Throwable {
    Document document0 = Document.createShell(""colgroup"");
    document0.tagName(""colgroup"");
    Document document1 = document0.normalise();
    assertEquals(""#document"", document1.nodeName());
}",0,assertNotNull(document1.nodeName())
project,0,test1933,"public void test1933() throws Throwable {
    Document document0 = new Document("""");
    document0.head();
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test2034,"public void test2034() throws Throwable {
    Document document0 = Document.createShell(""base"");
    Element element0 = document0.createElement(""9C|)EX9==:<8p"");
    assertEquals(""9c|)ex9==:<8p"", element0.nodeName());
}",0,assertNotNull(element0.nodeName())
project,0,test2135,"public void test2135() throws Throwable {
    Document document0 = new Document(""jYZ9g5LV Ny"");
    document0.body();
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test2236,"public void test2236() throws Throwable {
    Document document0 = Document.createShell(""colgroup"");
    Node[] nodeArray0 = new Node[9];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    nodeArray0[8] = (Node) document0;
    document0.addChildren(nodeArray0);
    // Undeclared exception!
    document0.title(""colgroup"");
}",0,
project,0,test2337,"public void test2337() throws Throwable {
    Document document0 = new Document(""$VALUES"");
    // Undeclared exception!
    try {
        document0.title(""$VALUES"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Document"", e);
    }
}",0,
project,0,test2438,"public void test2438() throws Throwable {
    Document document0 = Document.createShell("""");
    // Undeclared exception!
    try {
        document0.title((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test2539,"public void test2539() throws Throwable {
    Document document0 = new Document(""oHk"");
    document0.appendChild(document0);
    // Undeclared exception!
    document0.title();
}",0,
project,0,test2640,"public void test2640() throws Throwable {
    Document document0 = new Document("".(<bf7E_[['"");
    // Undeclared exception!
    try {
        document0.text(""eiU"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Document"", e);
    }
}",0,
project,0,test2741,"public void test2741() throws Throwable {
    Document document0 = Document.createShell(""4cylgroup"");
    // Undeclared exception!
    try {
        document0.text((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test2842,"public void test2842() throws Throwable {
    Document document0 = new Document(""extended"");
    // Undeclared exception!
    try {
        document0.outputSettings((Document.OutputSettings) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test2943,"public void test2943() throws Throwable {
    Document document0 = Document.createShell(""body"");
    document0.childNodes = null;
    // Undeclared exception!
    try {
        document0.outerHtml();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Element"", e);
    }
}",0,
project,0,test3044,"public void test3044() throws Throwable {
    Document document0 = Document.createShell(""colgroup"");
    document0.appendChild(document0);
    // Undeclared exception!
    document0.normalise();
}",0,
project,0,test3145,"public void test3145() throws Throwable {
    Document document0 = Document.createShell(""n8B$F"");
    document0.childNodes = null;
    // Undeclared exception!
    try {
        document0.head();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Document"", e);
    }
}",0,
project,0,test3246,"public void test3246() throws Throwable {
    // Undeclared exception!
    try {
        Document.createShell((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test3347,"public void test3347() throws Throwable {
    Document document0 = new Document("""");
    // Undeclared exception!
    try {
        document0.createElement("""");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test3448,"public void test3448() throws Throwable {
    Document document0 = Document.createShell(""73aa"");
    Node[] nodeArray0 = new Node[7];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    document0.addChildren(nodeArray0);
    // Undeclared exception!
    document0.clone();
}",0,
project,0,test3549,"public void test3549() throws Throwable {
    Document document0 = null;
    try {
        document0 = new Document((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test3650,"public void test3650() throws Throwable {
    Document document0 = Document.createShell("""");
    document0.title("""");
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test3751,"public void test3751() throws Throwable {
    Document document0 = Document.createShell("""");
    Element element0 = document0.body();
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test3752,"public void test3752() throws Throwable {
    Document document0 = Document.createShell("""");
    Element element0 = document0.body();
    assertNotNull(element0);
}",0,
project,0,test3853,"public void test3853() throws Throwable {
    Document document0 = Document.createShell(""73aa"");
    String string0 = document0.nodeName();
    assertEquals(""#document"", string0);
}",0,
project,0,test3954,"public void test3954() throws Throwable {
    Document document0 = Document.createShell(""E68g,JVlDRY$bK\""z"");
    document0.head();
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test4157,"public void test4157() throws Throwable {
    Document document0 = new Document(""UTF-8"");
    Document.QuirksMode document_QuirksMode0 = document0.quirksMode();
    assertEquals(Document.QuirksMode.noQuirks, document_QuirksMode0);
}",0,
project,0,test4359,"public void test4359() throws Throwable {
    Document document0 = new Document("""");
    document0.prependText("""");
    Document document1 = document0.normalise();
    assertEquals(""#document"", document1.nodeName());
}",0,
project,0,test4460,"public void test4460() throws Throwable {
    Document document0 = Document.createShell(""/VKt"");
    document0.title(""/VKt"");
    document0.title(""/VKt"");
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test4561,"public void test4561() throws Throwable {
    Document document0 = Document.createShell(""/VKt"");
    document0.title(""/VKt"");
    document0.title();
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test4662,"public void test4662() throws Throwable {
    Document document0 = new Document(""oHk"");
    String string0 = document0.title();
    assertEquals("""", string0);
}",0,
project,0,test4763,"public void test4763() throws Throwable {
    Document document0 = new Document(""oHk"");
    Element element0 = document0.append(""t)d"");
    List<Node> list0 = document0.siblingNodes();
    element0.childNodes = list0;
    // Undeclared exception!
    try {
        document0.normalise();
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.AbstractList"", e);
    }
}",0,
project,0,test4864,"public void test4864() throws Throwable {
    Document document0 = Document.createShell(""/VKt"");
    Document document1 = (Document) document0.text(""/VKt"");
    document1.childNodes = null;
    // Undeclared exception!
    try {
        document1.title();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test4965,"public void test4965() throws Throwable {
    Document document0 = Document.createShell(""colgroup"");
    Document document1 = document0.clone();
    document1.appendChild(document0);
    document1.normalise();
    assertEquals(1, document0.siblingIndex());
}",0,
project,0,test5066,"public void test5066() throws Throwable {
    Document document0 = new Document(""body"");
    Element element0 = document0.createElement(""body"");
    assertEquals(""body"", element0.tagName());
}",0,assertNotNull(element0.tagName())
project,0,test5474,"public void test5474() throws Throwable {
    Document document0 = Document.createShell(""/VKt"");
    document0.title(""/VKt"");
    String string0 = document0.outerHtml();
    assertEquals(""<html>\n <head>\n  <title>/VKt</title>\n </head>\n <body></body>\n</html>"", string0);
}",0,assertNotNull(string0)
project,0,test5475,"public void test5475() throws Throwable {
    Document document0 = Document.createShell(""/VKt"");
    document0.title(""/VKt"");
    String string0 = document0.outerHtml();
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
