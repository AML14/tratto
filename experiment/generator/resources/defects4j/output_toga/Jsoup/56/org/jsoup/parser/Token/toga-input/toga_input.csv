focal_method,test_prefix,docstring
"String tokenType() {
    return this.getClass().getSimpleName();
}","public void test022() throws Throwable {
    Token.StartTag token_StartTag0 = new Token.StartTag();
    String string0 = token_StartTag0.tokenType();
    assertEquals(""StartTag"", string0);
}",""
"final EndTag asEndTag() {
    return (EndTag) this;
}","public void test033() throws Throwable {
    Token.EndTag token_EndTag0 = new Token.EndTag();
    Token.EndTag token_EndTag1 = token_EndTag0.asEndTag();
    assertSame(token_EndTag1, token_EndTag0);
}",""
"final Character asCharacter() {
    return (Character) this;
}","public void test044() throws Throwable {
    Token.StartTag token_StartTag0 = new Token.StartTag();
    // Undeclared exception!
    try {
        token_StartTag0.asCharacter();
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.jsoup.parser.Token$StartTag cannot be cast to org.jsoup.parser.Token$Character
        //
        verifyException(""org.jsoup.parser.Token"", e);
    }
}",""
"final StartTag asStartTag() {
    return (StartTag) this;
}","public void test055() throws Throwable {
    Token.Character token_Character0 = new Token.Character();
    // Undeclared exception!
    try {
        token_Character0.asStartTag();
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.jsoup.parser.Token$Character cannot be cast to org.jsoup.parser.Token$StartTag
        //
        verifyException(""org.jsoup.parser.Token"", e);
    }
}",""
"final Doctype asDoctype() {
    return (Doctype) this;
}","public void test066() throws Throwable {
    Token.Character token_Character0 = new Token.Character();
    // Undeclared exception!
    try {
        token_Character0.asDoctype();
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.jsoup.parser.Token$Character cannot be cast to org.jsoup.parser.Token$Doctype
        //
        verifyException(""org.jsoup.parser.Token"", e);
    }
}",""
"final Comment asComment() {
    return (Comment) this;
}","public void test077() throws Throwable {
    Token.EOF token_EOF0 = new Token.EOF();
    // Undeclared exception!
    try {
        token_EOF0.asComment();
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.jsoup.parser.Token$EOF cannot be cast to org.jsoup.parser.Token$Comment
        //
        verifyException(""org.jsoup.parser.Token"", e);
    }
}",""
"final boolean isDoctype() {
    return type == TokenType.Doctype;
}","public void test2424() throws Throwable {
    Token.Character token_Character0 = new Token.Character();
    Token token0 = token_Character0.reset();
    Token.TokenType token_TokenType0 = Token.TokenType.Doctype;
    token0.type = token_TokenType0;
    boolean boolean0 = token_Character0.isDoctype();
    assertTrue(boolean0);
}",""
"static void reset(StringBuilder sb) {
    if (sb != null) {
        sb.delete(0, sb.length());
    }
}","public void test2626() throws Throwable {
    Token.reset((StringBuilder) null);
}",""
"final boolean isDoctype() {
    return type == TokenType.Doctype;
}","public void test3939() throws Throwable {
    Token.Character token_Character0 = new Token.Character();
    boolean boolean0 = token_Character0.isDoctype();
    assertFalse(boolean0);
}",""
"final boolean isStartTag() {
    return type == TokenType.StartTag;
}","public void test4040() throws Throwable {
    Token.EndTag token_EndTag0 = new Token.EndTag();
    boolean boolean0 = token_EndTag0.isStartTag();
    assertFalse(boolean0);
}",""
"final boolean isStartTag() {
    return type == TokenType.StartTag;
}","public void test4141() throws Throwable {
    Token.StartTag token_StartTag0 = new Token.StartTag();
    boolean boolean0 = token_StartTag0.isStartTag();
    assertTrue(boolean0);
}",""
"final boolean isEndTag() {
    return type == TokenType.EndTag;
}","public void test4242() throws Throwable {
    Token.Character token_Character0 = new Token.Character();
    boolean boolean0 = token_Character0.isEndTag();
    assertFalse(boolean0);
}",""
"final boolean isEndTag() {
    return type == TokenType.EndTag;
}","public void test4343() throws Throwable {
    Token.EndTag token_EndTag0 = new Token.EndTag();
    boolean boolean0 = token_EndTag0.isEndTag();
    assertTrue(boolean0);
}",""
"final boolean isComment() {
    return type == TokenType.Comment;
}","public void test4444() throws Throwable {
    Token.Character token_Character0 = new Token.Character();
    boolean boolean0 = token_Character0.isComment();
    assertFalse(boolean0);
}",""
"final boolean isComment() {
    return type == TokenType.Comment;
}","public void test4545() throws Throwable {
    Token.Comment token_Comment0 = new Token.Comment();
    boolean boolean0 = token_Comment0.isComment();
    assertTrue(boolean0);
}",""
"final boolean isCharacter() {
    return type == TokenType.Character;
}","public void test4646() throws Throwable {
    Token.EndTag token_EndTag0 = new Token.EndTag();
    boolean boolean0 = token_EndTag0.isCharacter();
    assertFalse(boolean0);
}",""
"final boolean isCharacter() {
    return type == TokenType.Character;
}","public void test4747() throws Throwable {
    Token.EndTag token_EndTag0 = new Token.EndTag();
    Token.TokenType token_TokenType0 = Token.TokenType.Character;
    token_EndTag0.type = token_TokenType0;
    boolean boolean0 = token_EndTag0.isCharacter();
    assertTrue(boolean0);
}",""
"final boolean isEOF() {
    return type == TokenType.EOF;
}","public void test4848() throws Throwable {
    Token.Comment token_Comment0 = new Token.Comment();
    boolean boolean0 = token_Comment0.isEOF();
    assertFalse(boolean0);
}",""
"final boolean isEOF() {
    return type == TokenType.EOF;
}","public void test4949() throws Throwable {
    Token.Comment token_Comment0 = new Token.Comment();
    Token.TokenType token_TokenType0 = Token.TokenType.EOF;
    token_Comment0.type = token_TokenType0;
    boolean boolean0 = token_Comment0.isEOF();
    assertTrue(boolean0);
}",""
