project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test00,"public void test00() throws Throwable {
    DocumentType documentType0 = new DocumentType(""e8?up$s./(0_%:bHdN|"", """", ""e8?up$s./(0_%:bHdN|"", ""e8?up$s./(0_%:bHdN|"");
    StringBuilder stringBuilder0 = new StringBuilder(0);
    documentType0.outerHtmlTail(stringBuilder0, 1808, (Document.OutputSettings) null);
    assertEquals(""e8?up$s./(0_%:bHdN|"", documentType0.baseUri());
}",0,assertNotNull(documentType0.baseUri())
project,0,test11,"public void test11() throws Throwable {
    DocumentType documentType0 = new DocumentType(""*x]w,%gE4Y$_EE"", "":SDJ"", ""*x]w,%gE4Y$_EE"", ""AttributeValue_doubleQuoted"");
    CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) ""PUBLIC"", 1, 1);
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        documentType0.outerHtmlHead(charBuffer0, (-1617), document_OutputSettings0);
        fail(""Expecting exception: ReadOnlyBufferException"");
    } catch (ReadOnlyBufferException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.nio.CharBuffer"", e);
    }
}",0,
project,0,test22,"public void test22() throws Throwable {
    DocumentType documentType0 = new DocumentType(""M9@)Y_%RC6pN_I3:)"", """", """", ""M9@)Y_%RC6pN_I3:)"");
    Document.OutputSettings document_OutputSettings0 = documentType0.getOutputSettings();
    CharBuffer charBuffer0 = CharBuffer.allocate(0);
    // Undeclared exception!
    try {
        documentType0.outerHtmlHead(charBuffer0, 0, document_OutputSettings0);
        fail(""Expecting exception: BufferOverflowException"");
    } catch (BufferOverflowException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.nio.CharBuffer"", e);
    }
}",0,
project,0,test33,"public void test33() throws Throwable {
    DocumentType documentType0 = new DocumentType(""name"", ""name"", ""s"", ""LRs'Ti^7lA'`1*vz+"");
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        documentType0.outerHtmlHead((Appendable) null, 0, document_OutputSettings0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.DocumentType"", e);
    }
}",0,
project,0,test44,"public void test44() throws Throwable {
    DocumentType documentType0 = null;
    try {
        documentType0 = new DocumentType((String) null, (String) null, ""org.jsoup.select.Evaluator$AttributeWithValueContaining"", ""org.jsoup.select.Evaluator$AttributeWithValueContaining"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test55,"public void test55() throws Throwable {
    DocumentType documentType0 = new DocumentType(""e8?up$s./(0_%:bHdN|"", """", ""e8?up$s./(0_%:bHdN|"", ""e8?up$s./(0_%:bHdN|"");
    String string0 = documentType0.nodeName();
    assertEquals(""#doctype"", string0);
}",0,assertNotNull(string0)
project,0,test66,"public void test66() throws Throwable {
    DocumentType documentType0 = new DocumentType(""X1$&o9Q]63Jhm>`E,Z5"", """", ""X1$&o9Q]63Jhm>`E,Z5"", ""X1$&o9Q]63Jhm>`E,Z5"");
    String string0 = documentType0.outerHtml();
    assertEquals(""<!DOCTYPE X1$&o9Q]63Jhm>`E,Z5 \""X1$&o9Q]63Jhm>`E,Z5\"">"", string0);
}",0,
project,0,test67,"public void test67() throws Throwable {
    DocumentType documentType0 = new DocumentType(""X1$&o9Q]63Jhm>`E,Z5"", """", ""X1$&o9Q]63Jhm>`E,Z5"", ""X1$&o9Q]63Jhm>`E,Z5"");
    String string0 = documentType0.outerHtml();
    assertEquals(""#doctype"", documentType0.nodeName());
}",0,assertNotNull(documentType0.nodeName())
project,0,test78,"public void test78() throws Throwable {
    DocumentType documentType0 = new DocumentType(""FVfX22"", ""FVfX22"", ""FVfX22"", ""FVfX22"");
    String string0 = documentType0.toString();
    assertEquals(""#doctype"", documentType0.nodeName());
}",0,assertNotNull(documentType0.nodeName())
project,0,test79,"public void test79() throws Throwable {
    DocumentType documentType0 = new DocumentType(""FVfX22"", ""FVfX22"", ""FVfX22"", ""FVfX22"");
    String string0 = documentType0.toString();
    assertEquals(""<!DOCTYPE FVfX22 PUBLIC \""FVfX22\"" \""FVfX22\"">"", string0);
}",0,assertNotNull(string0)
project,0,test911,"public void test911() throws Throwable {
    DocumentType documentType0 = new DocumentType("" PUBLIC \"""", "" PUBLIC \"""", ""Zur`0X0?1G`1b ^\"""", "" PUBLIC \"""");
    PipedWriter pipedWriter0 = new PipedWriter();
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    try {
        documentType0.outerHtmlHead(pipedWriter0, 225, document_OutputSettings0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Pipe not connected
        //
        verifyException(""java.io.PipedWriter"", e);
    }
}",0,
