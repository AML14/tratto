{
  "test1212" : {
    "methodSignature" : "static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser)",
    "methodName" : "parseByteData",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Charset charset0 = Charset.defaultCharset();\n    CharBuffer charBuffer0 = CharBuffer.allocate(1457);\n    ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);\n    Parser parser0 = Parser.xmlParser();\n    DataUtil.parseByteData(byteBuffer0, \"=Fg@ryywr@HmQ^zj\", \"=Fg@ryywr@HmQ^zj\", parser0);\n}",
    "testName" : "test1212"
  },
  "test2323" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    DataUtil.load((InputStream) pipedInputStream0, \"{H$gLRs'Ti^7lA'`1\", \"{H$gLRs'Ti^7lA'`1\");\n}",
    "testName" : "test2323"
  },
  "test3434" : {
    "methodSignature" : "static String getCharsetFromContentType(String contentType)",
    "methodName" : "getCharsetFromContentType",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    String string0 = \"O\\\\uHYC<!SsdX>DIw+\";\n    String string1 = DataUtil.getCharsetFromContentType(string0);\n}",
    "testName" : "test3434"
  },
  "test1313" : {
    "methodSignature" : "static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser)",
    "methodName" : "parseByteData",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Parser parser0 = Parser.htmlParser();\n    DataUtil.parseByteData((ByteBuffer) null, \"U\\\"(.s>>e#=*>\", \"U\\\"(.s>>e#=*>\", parser0);\n}",
    "testName" : "test1313"
  },
  "test2424" : {
    "methodSignature" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    File file0 = MockFile.createTempFile(\"!Ft!bp T\", \"r\");\n    DataUtil.load(file0, \"!Ft!bp T\", \"!Ft!bp T\");\n}",
    "testName" : "test2424"
  },
  "test3535" : {
    "methodSignature" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    URI uRI0 = MockURI.aFileURI;\n    MockFile mockFile0 = new MockFile(uRI0);\n    MockFile.createTempFile(\"--------------------------------\", \"10T_G?TG]/S\", (File) mockFile0);\n    DataUtil.load((File) mockFile0, \"10T_G?TG]/S\", \"k+m5,CY cLcM(YN2E_I\");\n}",
    "testName" : "test3535"
  },
  "test1010" : {
    "methodSignature" : "static ByteBuffer readFileToByteBuffer(File file) throws IOException",
    "methodName" : "readFileToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"\");\n    DataUtil.readFileToByteBuffer(mockFile0);\n}",
    "testName" : "test1010"
  },
  "test2121" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    byte[] byteArray0 = new byte[1];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) 65, (byte) 65);\n    DataUtil.load((InputStream) byteArrayInputStream0, \"\", \"\");\n}",
    "testName" : "test2121"
  },
  "test3232" : {
    "methodSignature" : "static String getCharsetFromContentType(String contentType)",
    "methodName" : "getCharsetFromContentType",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    String string0 = DataUtil.getCharsetFromContentType(\"charset=\");\n}",
    "testName" : "test3232"
  },
  "test1111" : {
    "methodSignature" : "static ByteBuffer readFileToByteBuffer(File file) throws IOException",
    "methodName" : "readFileToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"--------------------------------\", \"--------------------------------\");\n    DataUtil.readFileToByteBuffer(mockFile0);\n}",
    "testName" : "test1111"
  },
  "test2222" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    byte[] byteArray0 = new byte[1];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-65), 65279);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);\n    DataUtil.load((InputStream) pushbackInputStream0, \"\", \"\");\n}",
    "testName" : "test2222"
  },
  "test3333" : {
    "methodSignature" : "static String getCharsetFromContentType(String contentType)",
    "methodName" : "getCharsetFromContentType",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    String string0 = DataUtil.getCharsetFromContentType((String) null);\n}",
    "testName" : "test3333"
  },
  "test4344" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4344() throws Throwable {\n    Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    DataUtil.load((InputStream) sequenceInputStream0, \"-_1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"--------------------------------\");\n}",
    "testName" : "test4344"
  },
  "test033" : {
    "methodSignature" : "static ByteBuffer readToByteBuffer(InputStream inStream, int maxSize) throws IOException",
    "methodName" : "readToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    DataUtil.readToByteBuffer((InputStream) null, 190);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "static ByteBuffer readToByteBuffer(InputStream inStream, int maxSize) throws IOException",
    "methodName" : "readToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream(59);\n    DataUtil.readToByteBuffer(pipedInputStream0, 0);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "static ByteBuffer readToByteBuffer(InputStream inStream) throws IOException",
    "methodName" : "readToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    byte[] byteArray0 = new byte[4];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), 2054);\n    DataUtil.readToByteBuffer(byteArrayInputStream0);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "static ByteBuffer readFileToByteBuffer(File file) throws IOException",
    "methodName" : "readFileToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    DataUtil.readFileToByteBuffer((File) null);\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);\n    Parser parser0 = Parser.htmlParser();\n    DataUtil.load((InputStream) dataInputStream0, \"\", \"\", parser0);\n}",
    "testName" : "test1616"
  },
  "test2727" : {
    "methodSignature" : "static void crossStreams(final InputStream in, final OutputStream out) throws IOException",
    "methodName" : "crossStreams",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    DataUtil.crossStreams((InputStream) null, (OutputStream) null);\n}",
    "testName" : "test2727"
  },
  "test3838" : {
    "methodSignature" : "public final int childNodeSize()",
    "methodName" : "childNodeSize",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3838() throws Throwable {\n    File file0 = MockFile.createTempFile(\"c.bO}Xo\", \"c.bO}Xo\");\n    Document document0 = DataUtil.load(file0, \"UTF-8\", \"UTF-8\");\n    document0.childNodeSize();\n}",
    "testName" : "test3838"
  },
  "test1717" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    byte[] byteArray0 = new byte[4];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2350), 14);\n    DataUtil.load((InputStream) byteArrayInputStream0, \"p5yKSI(cg\", \"p5yKSI(cg\", (Parser) null);\n}",
    "testName" : "test1717"
  },
  "test2828" : {
    "methodSignature" : "static void crossStreams(final InputStream in, final OutputStream out) throws IOException",
    "methodName" : "crossStreams",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream(5);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"`tgj4uH\");\n    DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);\n    DataUtil.crossStreams(pipedInputStream0, dataOutputStream0);\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);\n    Parser parser0 = Parser.htmlParser();\n    DataUtil.load((InputStream) dataInputStream0, \"http-equiv\", \"http-equiv\", parser0);\n}",
    "testName" : "test1414"
  },
  "test2525" : {
    "methodSignature" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    DataUtil.load((File) null, \"\", \"http-equiv\");\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n    doReturn(false).when(enumeration0).hasMoreElements();\n    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n    Parser parser0 = Parser.xmlParser();\n    DataUtil.load((InputStream) sequenceInputStream0, \"HA$xqe}&@\", \"+93d?}\", parser0);\n}",
    "testName" : "test1515"
  },
  "test2626" : {
    "methodSignature" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    MockFile mockFile0 = new MockFile(\"xml\", \"meter\");\n    File file0 = MockFile.createTempFile(\"meter\", (String) null, (File) mockFile0);\n    DataUtil.load(file0, \"\", \"xml\");\n}",
    "testName" : "test2626"
  },
  "test3737" : {
    "methodSignature" : "static ByteBuffer readToByteBuffer(InputStream inStream, int maxSize) throws IOException",
    "methodName" : "readToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3737() throws Throwable {\n    DataUtil.readToByteBuffer((InputStream) null, (-2049));\n}",
    "testName" : "test3737"
  },
  "test3030" : {
    "methodSignature" : "public String location()",
    "methodName" : "location",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    byte[] byteArray0 = new byte[9];\n    byteArray0[0] = (byte) (-74);\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    Parser parser0 = Parser.htmlParser();\n    Document document0 = DataUtil.load((InputStream) byteArrayInputStream0, (String) null, \"ap[=w\", parser0);\n    document0.location();\n}",
    "testName" : "test3030"
  },
  "test4243" : {
    "methodSignature" : "static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser)",
    "methodName" : "parseByteData",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4243() throws Throwable {\n    ByteBuffer byteBuffer0 = DataUtil.emptyByteBuffer();\n    Parser parser0 = Parser.xmlParser();\n    DataUtil.parseByteData(byteBuffer0, \"\", \"sui>LN.I~DnL+\", parser0);\n}",
    "testName" : "test4243"
  },
  "test2020" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    DataUtil.load((InputStream) null, \",ewW_Cekp\\u0001;<T\", \",ewW_Cekp\\u0001;<T\");\n}",
    "testName" : "test2020"
  },
  "test3131" : {
    "methodSignature" : "static String mimeBoundary()",
    "methodName" : "mimeBoundary",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    String string0 = DataUtil.mimeBoundary();\n}",
    "testName" : "test3131"
  },
  "test4142" : {
    "methodSignature" : "public static Document load(File in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4142() throws Throwable {\n    MockFile mockFile0 = new MockFile(\" E;\", \"--------------------------------\");\n    DataUtil.load((File) mockFile0, \" E;\", \"--------------------------------\");\n}",
    "testName" : "test4142"
  },
  "test4041" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4041() throws Throwable {\n    DataUtil.load((InputStream) null, \"\", \"\", (Parser) null);\n}",
    "testName" : "test4041"
  },
  "test022" : {
    "methodSignature" : "public String baseUri()",
    "methodName" : "baseUri",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    byte[] byteArray0 = new byte[9];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    Document document0 = DataUtil.load((InputStream) byteArrayInputStream0, (String) null, \"%v{<\");\n    document0.baseUri();\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "static ByteBuffer readToByteBuffer(InputStream inStream, int maxSize) throws IOException",
    "methodName" : "readToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    byte[] byteArray0 = new byte[7];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2432), (byte) 37);\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);\n    DataUtil.readToByteBuffer(pushbackInputStream0, (byte) 27);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "static ByteBuffer readToByteBuffer(InputStream inStream) throws IOException",
    "methodName" : "readToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    DataUtil.readToByteBuffer((InputStream) null);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "static ByteBuffer readToByteBuffer(InputStream inStream) throws IOException",
    "methodName" : "readToByteBuffer",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    FileDescriptor fileDescriptor0 = new FileDescriptor();\n    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n    DataUtil.readToByteBuffer(mockFileInputStream0);\n}",
    "testName" : "test088"
  },
  "test1818" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);\n    Parser parser0 = Parser.htmlParser();\n    DataUtil.load((InputStream) pushbackInputStream0, \"9T(g;UY\\\"6=Q\", (String) null, parser0);\n}",
    "testName" : "test1818"
  },
  "test2929" : {
    "methodSignature" : "public String baseUri()",
    "methodName" : "baseUri",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    byte[] byteArray0 = new byte[9];\n    byteArray0[2] = (byte) 1;\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    byteArrayInputStream0.read();\n    Parser parser0 = Parser.htmlParser();\n    Document document0 = DataUtil.load((InputStream) byteArrayInputStream0, (String) null, \"ap[=w\", parser0);\n    document0.baseUri();\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public static Document load(InputStream in, String charsetName, String baseUri) throws IOException",
    "methodName" : "load",
    "className" : "org.jsoup.helper.DataUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    byte[] byteArray0 = new byte[9];\n    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n    DataUtil.load((InputStream) byteArrayInputStream0, \"XMkJhJtHbP.1v\", \"%v{<\");\n}",
    "testName" : "test1919"
  }
}