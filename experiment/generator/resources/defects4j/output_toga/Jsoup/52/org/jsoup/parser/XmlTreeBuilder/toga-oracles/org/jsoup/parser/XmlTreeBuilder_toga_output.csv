project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test00,"public void test00() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.Doctype token_Doctype0 = new Token.Doctype();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.process(token_Doctype0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test22,"public void test22() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Document document0 = xmlTreeBuilder0.parse("" wZJ<D[x>@%c/mV"", "" wZJ<D[x>@%c/mV"");
    assertEquals(2, document0.childNodeSize());
}",0,"assertEquals(1, document0.childNodeSize())"
project,0,test23,"public void test23() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Document document0 = xmlTreeBuilder0.parse("" wZJ<D[x>@%c/mV"", "" wZJ<D[x>@%c/mV"");
    boolean boolean0 = xmlTreeBuilder0.processEndTag(""#document"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test34,"public void test34() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Document document0 = xmlTreeBuilder0.parse(""D:tHN<<wl@i/>-x(("", ""#doc,meGt"");
    assertEquals(3, document0.childNodeSize());
}",0,"assertEquals(1, document0.childNodeSize())"
project,0,test35,"public void test35() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Document document0 = xmlTreeBuilder0.parse(""D:tHN<<wl@i/>-x(("", ""#doc,meGt"");
    assertEquals(""#doc,meGt"", document0.baseUri());
}",0,
project,0,test46,"public void test46() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    xmlTreeBuilder0.parseFragment(""u.DPmaXvo'P"", ""u.DPmaXvo'P"", (ParseErrorList) null);
    Attributes attributes0 = new Attributes();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""u.DPmaXvo'P"", attributes0);
    token_StartTag1.selfClosing = true;
    token_StartTag1.nameAttr(""form"", attributes0);
    boolean boolean0 = xmlTreeBuilder0.process(token_StartTag1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test57,"public void test57() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Document document0 = xmlTreeBuilder0.parse(""<!--"", ""<!--"");
    assertEquals(""#root"", document0.tagName());
}",0,assertNotNull(document0.tagName())
project,0,test68,"public void test68() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Document document0 = xmlTreeBuilder0.parse(""<!-"", ""<!-"");
    assertFalse(document0.updateMetaCharsetElement());
}",0,assertFalse(document0.updateMetaCharsetElement())
project,0,test79,"public void test79() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    xmlTreeBuilder0.parse(""@</&DR"", ""@</&DR"");
    boolean boolean0 = xmlTreeBuilder0.processEndTag(""@</&DR"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test810,"public void test810() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Document document0 = xmlTreeBuilder0.parse(""Q+:H|<?9;"", ""Q+:H|<?9;"");
    assertEquals(2, document0.childNodeSize());
}",0,
