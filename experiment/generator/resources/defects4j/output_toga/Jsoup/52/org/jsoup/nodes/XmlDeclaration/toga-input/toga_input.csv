focal_method,test_prefix,docstring
"public String name() {
    return name;
}","public void test00() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration("""", """", true);
    String string0 = xmlDeclaration0.name();
    assertEquals("""", string0);
}","/**
 * Get the name of this declaration.
 * @return name of this declaration.
 */"
"@Override
public String toString() {
    return outerHtml();
}","public void test11() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""X>DIw+GL+x_X"", ""X>DIw+GL+x_X"", false);
    String string0 = xmlDeclaration0.toString();
    assertEquals(""<?X>DIw+GL+x_X>"", string0);
}",""
"public String nodeName() {
    return ""#declaration"";
}","public void test12() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""X>DIw+GL+x_X"", ""X>DIw+GL+x_X"", false);
    String string0 = xmlDeclaration0.toString();
    assertEquals(""#declaration"", xmlDeclaration0.nodeName());
}",""
"public String nodeName() {
    return ""#declaration"";
}","public void test23() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""xml"", ""xml"", false);
    Node node0 = xmlDeclaration0.attr(""xml"", ""xml"");
    node0.attr(""<?xml>"", ""xml"");
    String string0 = xmlDeclaration0.toString();
    assertEquals(""#declaration"", xmlDeclaration0.nodeName());
}",""
"@Override
public String toString() {
    return outerHtml();
}","public void test24() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""xml"", ""xml"", false);
    Node node0 = xmlDeclaration0.attr(""xml"", ""xml"");
    node0.attr(""<?xml>"", ""xml"");
    String string0 = xmlDeclaration0.toString();
    assertEquals(""<?xml version=\""\"" encoding=\""\"">"", string0);
}",""
"public String nodeName() {
    return ""#declaration"";
}","public void test35() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""xml"", ""xml"", true);
    String string0 = xmlDeclaration0.toString();
    assertEquals(""#declaration"", xmlDeclaration0.nodeName());
}",""
"@Override
public String toString() {
    return outerHtml();
}","public void test36() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""xml"", ""xml"", true);
    String string0 = xmlDeclaration0.toString();
    assertEquals(""<!xml>"", string0);
}",""
