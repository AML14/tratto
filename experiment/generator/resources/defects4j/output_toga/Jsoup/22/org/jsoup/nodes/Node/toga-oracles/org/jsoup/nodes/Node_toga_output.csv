project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Document document0 = new Document("">z;+@"");
    // Undeclared exception!
    try {
        document0.before((Node) document0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test011,"public void test011() throws Throwable {
    DataNode dataNode0 = new DataNode(""abs:!m%\""iczur"", ""abs:!m%\""iczur"");
    dataNode0.setBaseUri(""abs:!m%\""iczur"");
    assertEquals(0, dataNode0.siblingIndex());
}",0,
project,0,test022,"public void test022() throws Throwable {
    Document document0 = new Document(""abs:!m%\""icz9u$"");
    // Undeclared exception!
    try {
        document0.after((Node) document0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test033,"public void test033() throws Throwable {
    Document document0 = Document.createShell(""ohbMr"");
    document0.parentNode = (Node) document0;
    document0.parentNode.after(""ohbMr"");
    assertEquals(0, document0.siblingIndex());
}",0,
project,0,test044,"public void test044() throws Throwable {
    Document document0 = Document.createShell(""#text"");
    document0.parentNode = (Node) document0;
    assertEquals(0, document0.parentNode.siblingIndex());
}",0,
project,0,test045,"public void test045() throws Throwable {
    Document document0 = Document.createShell(""#text"");
    document0.parentNode = (Node) document0;
    Node node0 = document0.unwrap();
    assertEquals(0, node0.siblingIndex());
}",0,
project,0,test046,"public void test046() throws Throwable {
    Document document0 = Document.createShell(""#text"");
    document0.parentNode = (Node) document0;
    Node node0 = document0.unwrap();
    assertNotNull(node0);
}",0,
project,0,test068,"public void test068() throws Throwable {
    DataNode dataNode0 = new DataNode(""abs:m%icz9u$"", ""abs:m%icz9u$"");
    Node node0 = dataNode0.removeAttr(""abs:m%icz9u$"");
    assertEquals(0, node0.siblingIndex());
}",0,
project,0,test079,"public void test079() throws Throwable {
    TextNode textNode0 = new TextNode(""@GyjTv2s"", ""@GyjTv2s"");
    String string0 = textNode0.toString();
    assertEquals(""@GyjTv2s"", string0);
}",0,assertNotNull(string0)
project,0,test0810,"public void test0810() throws Throwable {
    Document document0 = Document.createShell(""abs:!m%\""icz9u$"");
    String string0 = document0.outerHtml();
    assertEquals(""<html>\n <head></head>\n <body></body>\n</html>"", string0);
}",0,assertNotNull(string0)
project,0,test0911,"public void test0911() throws Throwable {
    DataNode dataNode0 = new DataNode(""abs:!m%\""iczur"", ""abs:!m%\""iczur"");
    // Undeclared exception!
    try {
        dataNode0.siblingNodes();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Node"", e);
    }
}",0,
project,0,test1012,"public void test1012() throws Throwable {
    DataNode dataNode0 = new DataNode(""abs:!m%\""iczur"", ""abs:!m%\""iczur"");
    Attributes attributes0 = dataNode0.attributes();
    assertNotNull(attributes0);
}",0,assertNotNull(attributes0)
project,0,test1113,"public void test1113() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""h"", ""h"");
    String string0 = textNode0.absUrl(""abs:h"");
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test1214,"public void test1214() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""h"", ""h"");
    Node node0 = textNode0.attr(""h"", ""h"");
    String string0 = node0.absUrl(""abs:h"");
    assertEquals("""", string0);
}",0,
project,0,test1315,"public void test1315() throws Throwable {
    TextNode textNode0 = new TextNode(""h"", ""h"");
    textNode0.setParentNode(textNode0);
    // Undeclared exception!
    try {
        textNode0.before(""h"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test1416,"public void test1416() throws Throwable {
    Document document0 = new Document(""abs:!m%\""iczur"");
    // Undeclared exception!
    try {
        document0.wrap(""abs:!m%\""iczur"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test1517,"public void test1517() throws Throwable {
    Document document0 = Document.createShell(""Y"");
    Element element0 = document0.head();
    assertNotNull(element0);
}",0,
project,0,test1518,"public void test1518() throws Throwable {
    Document document0 = Document.createShell(""Y"");
    Element element0 = document0.head();
    Element element1 = element0.wrap(""Y"");
    assertEquals(0, element1.siblingIndex());
}",0,
project,0,test1519,"public void test1519() throws Throwable {
    Document document0 = Document.createShell(""Y"");
    Element element0 = document0.head();
    Element element1 = element0.wrap(""Y"");
    assertNotNull(element1);
}",0,
project,0,test1620,"public void test1620() throws Throwable {
    Document document0 = Document.createShell(""Y"");
    document0.setParentNode(document0);
    Element element0 = document0.wrap(""Y"");
    assertNull(element0);
}",0,assertNotNull(element0)
project,0,test1721,"public void test1721() throws Throwable {
    Document document0 = new Document(""txt"");
    document0.parentNode = (Node) document0;
    // Undeclared exception!
    try {
        document0.unwrap();
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test1822,"public void test1822() throws Throwable {
    Document document0 = Document.createShell(""Y"");
    Element element0 = document0.head();
    element0.setParentNode(document0);
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test1923,"public void test1923() throws Throwable {
    DataNode dataNode0 = new DataNode(""v2@S"", ""v2@S"");
    // Undeclared exception!
    try {
        dataNode0.replaceChild(dataNode0, dataNode0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test2024,"public void test2024() throws Throwable {
    Document document0 = Document.createShell(""Y"");
    Element element0 = document0.head();
    element0.replaceWith(document0);
    assertEquals(0, document0.siblingIndex());
}",0,"assertEquals(0, document0.siblingIndex())"
project,0,test2125,"public void test2125() throws Throwable {
    DataNode dataNode0 = new DataNode(""abs:!m%\""icz9u$"", ""abs:!m%\""icz9u$"");
    // Undeclared exception!
    try {
        dataNode0.removeChild(dataNode0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test2226,"public void test2226() throws Throwable {
    Document document0 = Document.createShell("">+@"");
    document0.parentNode = (Node) document0;
    Node node0 = document0.parentNode.previousSibling();
    assertNull(node0);
}",1,
project,0,test2327,"public void test2327() throws Throwable {
    DataNode dataNode0 = new DataNode(""v2@S"", ""v2@S"");
    DataNode dataNode1 = dataNode0.setWholeData(""v2@S"");
    dataNode0.setSiblingIndex(607);
    dataNode1.parentNode = (Node) dataNode0;
    // Undeclared exception!
    try {
        dataNode1.previousSibling();
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 606, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test2428,"public void test2428() throws Throwable {
    DataNode dataNode0 = new DataNode(""abs:!m%\""iczur"", ""abs:!m%\""iczur"");
    boolean boolean0 = dataNode0.equals(""#data"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2529,"public void test2529() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded("">cz@9R"", "">cz@9R"");
    boolean boolean0 = dataNode0.equals(dataNode0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2630,"public void test2630() throws Throwable {
    TextNode textNode0 = new TextNode(""succJneqq"", ""succJneqq"");
    textNode0.hashCode();
}",0,
project,0,test2731,"public void test2731() throws Throwable {
    Document document0 = Document.createShell(""lqV?8Gyj"");
    document0.parentNode = (Node) document0;
    // Undeclared exception!
    document0.parentNode.hashCode();
}",0,
project,0,test2832,"public void test2832() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration("">cz@9R"", "">cz@9R"", false);
    xmlDeclaration0.hashCode();
}",0,
project,0,test2933,"public void test2933() throws Throwable {
    Document document0 = Document.createShell(""abs:!m%iczr"");
    Element element0 = document0.prependText(""abs:!m%iczr"");
    Document document1 = document0.clone();
    assertNotSame(document1, element0);
}",0,
