focal_method,test_prefix,docstring
"public String baseUri() {
    return baseUri;
}","public void test11() throws Throwable {
    DocumentType documentType0 = new DocumentType(""?_p[gQ[p"", ""`#pMDw.`n~_g|U=[{<D"", ""name"", ""t!@`h#:}<V@U4^S"");
    StringBuilder stringBuilder0 = new StringBuilder((CharSequence) ""?_p[gQ[p"");
    documentType0.outerHtmlTail(stringBuilder0, 0, (Document.OutputSettings) null);
    assertEquals(""t!@`h#:}<V@U4^S"", documentType0.baseUri());
}","/**
 *     Get the base URI of this node.
 *     @return base URI
 */"
"@Override
void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {
    accum.append(""<!DOCTYPE html"");
    if (!StringUtil.isBlank(attr(""publicId"")))
        accum.append("" PUBLIC \"""").append(attr(""publicId"")).append(""\"""");
    if (!StringUtil.isBlank(attr(""systemId"")))
        accum.append(' ').append(attr(""systemId"")).append(""\"""");
    accum.append('>');
}","public void test22() throws Throwable {
    DocumentType documentType0 = new DocumentType(""1h"", """", ""PekqQ2W~"", ""1h"");
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        documentType0.outerHtmlHead((StringBuilder) null, 982, document_OutputSettings0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.DocumentType"", e);
    }
}",""
"// todo: quirk mode from publicId and systemId
/**
 * Create a new doctype element.
 * @param name the doctype's name
 * @param publicId the doctype's public ID
 * @param systemId the doctype's system ID
 * @param baseUri the doctype's base URI
 */
public DocumentType(String name, String publicId, String systemId, String baseUri) {
    super(baseUri);
    attr(""name"", name);
    attr(""publicId"", publicId);
    attr(""systemId"", systemId);
}","public void test33() throws Throwable {
    DocumentType documentType0 = null;
    try {
        documentType0 = new DocumentType(""(G3~{dE,6nC"", (String) null, """", ""(G3~{dE,6nC"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",""
"@Override
public String nodeName() {
    return ""#doctype"";
}","public void test44() throws Throwable {
    DocumentType documentType0 = new DocumentType("""", """", ""rho"", ""rho"");
    String string0 = documentType0.nodeName();
    assertEquals(""#doctype"", string0);
}",""
"@Override
public String nodeName() {
    return ""#doctype"";
}","public void test55() throws Throwable {
    DocumentType documentType0 = new DocumentType("""", """", """", """");
    String string0 = documentType0.toString();
    assertEquals(""#doctype"", documentType0.nodeName());
}",""
"public String toString() {
    return outerHtml();
}","public void test56() throws Throwable {
    DocumentType documentType0 = new DocumentType("""", """", """", """");
    String string0 = documentType0.toString();
    assertEquals(""<!DOCTYPE html>"", string0);
}",""
