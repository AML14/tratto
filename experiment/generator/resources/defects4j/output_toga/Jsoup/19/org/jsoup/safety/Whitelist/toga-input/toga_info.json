{
  "test1212" : {
    "methodSignature" : "public Whitelist addAttributes(String tag, String... keys)",
    "methodName" : "addAttributes",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Whitelist whitelist0 = new Whitelist();\n    String[] stringArray0 = new String[9];\n    whitelist0.addAttributes(\"'PF:vg&>96:qIxO\", stringArray0);\n}",
    "testName" : "test1212"
  },
  "test2323" : {
    "methodSignature" : "public Whitelist addProtocols(String tag, String key, String... protocols)",
    "methodName" : "addProtocols",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    Whitelist whitelist0 = Whitelist.relaxed();\n    String[] stringArray0 = new String[7];\n    whitelist0.addProtocols(\"blockquote\", \"Umacr\", stringArray0);\n}",
    "testName" : "test2323"
  },
  "test1313" : {
    "methodSignature" : "boolean isSafeAttribute(String tagName, Element el, Attribute attr)",
    "methodName" : "isSafeAttribute",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Whitelist whitelist0 = Whitelist.basicWithImages();\n    Document document0 = Document.createShell(\"$VALUES\");\n    Attribute attribute0 = new Attribute(\"2ig\", \"\");\n    boolean boolean0 = whitelist0.isSafeAttribute(\"start\", document0, attribute0);\n}",
    "testName" : "test1313"
  },
  "test2424" : {
    "methodSignature" : "public Whitelist addEnforcedAttribute(String tag, String key, String value)",
    "methodName" : "addEnforcedAttribute",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    Whitelist whitelist0 = Whitelist.relaxed();\n    Whitelist whitelist1 = whitelist0.addEnforcedAttribute(\"io|-9u4z{BPik$:\", \"io|-9u4z{BPik$:\", \"io|-9u4z{BPik$:\");\n    Whitelist whitelist2 = whitelist0.addEnforcedAttribute(\"io|-9u4z{BPik$:\", \"Congruent\", \"T{<2vT-C]5\");\n}",
    "testName" : "test2424"
  },
  "test1010" : {
    "methodSignature" : "public Whitelist addTags(String... tags)",
    "methodName" : "addTags",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Whitelist whitelist0 = new Whitelist();\n    String[] stringArray0 = new String[7];\n    whitelist0.addTags(stringArray0);\n}",
    "testName" : "test1010"
  },
  "test2121" : {
    "methodSignature" : "boolean isSafeAttribute(String tagName, Element el, Attribute attr)",
    "methodName" : "isSafeAttribute",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    Whitelist whitelist0 = Whitelist.relaxed();\n    String[] stringArray0 = new String[5];\n    stringArray0[0] = \"org.jsoup.safety.whitelist$attributevalue\";\n    stringArray0[1] = \"org.jsoup.safety.whitelist$attributevalue\";\n    stringArray0[2] = \"org.jsoup.safety.whitelist$attributevalue\";\n    stringArray0[3] = \"org.jsoup.safety.whitelist$attributevalue\";\n    stringArray0[4] = \"org.jsoup.safety.whitelist$attributevalue\";\n    whitelist0.addAttributes(\"org.jsoup.safety.whitelist$attributevalue\", stringArray0);\n    Document document0 = Document.createShell(\"\");\n    Attribute attribute0 = Attribute.createFromEncoded(\"|C-NA31w$6Dy\", \"h1\");\n    boolean boolean0 = whitelist0.isSafeAttribute(\"org.jsoup.safety.whitelist$attributevalue\", document0, attribute0);\n}",
    "testName" : "test2121"
  },
  "test1111" : {
    "methodSignature" : "public Whitelist addEnforcedAttribute(String tag, String key, String value)",
    "methodName" : "addEnforcedAttribute",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Whitelist whitelist0 = Whitelist.basicWithImages();\n    whitelist0.addEnforcedAttribute((String) null, \"h5\", \"L'$Lu?`8<U~}wARG\");\n}",
    "testName" : "test1111"
  },
  "test2222" : {
    "methodSignature" : "boolean isSafeTag(String tag)",
    "methodName" : "isSafeTag",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    Whitelist whitelist0 = Whitelist.relaxed();\n    boolean boolean0 = whitelist0.isSafeTag(\"KyJA)\");\n}",
    "testName" : "test2222"
  },
  "test066" : {
    "methodSignature" : "boolean isSafeTag(String tag)",
    "methodName" : "isSafeTag",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Whitelist whitelist0 = new Whitelist();\n    whitelist0.isSafeTag((String) null);\n}",
    "testName" : "test066"
  },
  "test077" : {
    "methodSignature" : "boolean isSafeAttribute(String tagName, Element el, Attribute attr)",
    "methodName" : "isSafeAttribute",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Whitelist whitelist0 = new Whitelist();\n    whitelist0.isSafeAttribute(\"^(}3h;}>In!+;^v(A\", (Element) null, (Attribute) null);\n}",
    "testName" : "test077"
  },
  "test088" : {
    "methodSignature" : "boolean isSafeAttribute(String tagName, Element el, Attribute attr)",
    "methodName" : "isSafeAttribute",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Whitelist whitelist0 = Whitelist.relaxed();\n    Document document0 = Document.createShell(\"\");\n    Attribute attribute0 = Attribute.createFromEncoded(\"TpiR24~u4yA)l\", \"h1\");\n    whitelist0.isSafeAttribute((String) null, document0, attribute0);\n}",
    "testName" : "test088"
  },
  "test099" : {
    "methodSignature" : "Attributes getEnforcedAttributes(String tagName)",
    "methodName" : "getEnforcedAttributes",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Whitelist whitelist0 = Whitelist.basic();\n    whitelist0.getEnforcedAttributes((String) null);\n}",
    "testName" : "test099"
  },
  "test2727" : {
    "methodSignature" : "boolean isSafeTag(String tag)",
    "methodName" : "isSafeTag",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    Whitelist whitelist0 = Whitelist.basicWithImages();\n    boolean boolean0 = whitelist0.isSafeTag(\"dl\");\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "Attributes getEnforcedAttributes(String tagName)",
    "methodName" : "getEnforcedAttributes",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    Whitelist whitelist0 = Whitelist.simpleText();\n    whitelist0.addEnforcedAttribute(\"c!58'_:^z+=\", \"sup\", \"u#hQ$_,\");\n    Attributes attributes0 = whitelist0.getEnforcedAttributes(\"c!58'_:^z+=\");\n}",
    "testName" : "test1717"
  },
  "test2828" : {
    "methodSignature" : "public Whitelist addProtocols(String tag, String key, String... protocols)",
    "methodName" : "addProtocols",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    Whitelist whitelist0 = Whitelist.basic();\n    String[] stringArray0 = new String[2];\n    stringArray0[0] = \"8J%cfbH4E/i}yUkedb\";\n    stringArray0[1] = \"table\";\n    whitelist0.addProtocols(\"8J%cfbH4E/i}yUkedb\", \"table\", stringArray0);\n    Whitelist whitelist1 = whitelist0.addProtocols(\"8J%cfbH4E/i}yUkedb\", \"table\", stringArray0);\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public Whitelist addTags(String... tags)",
    "methodName" : "addTags",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    Whitelist whitelist0 = new Whitelist();\n    String[] stringArray0 = new String[2];\n    stringArray0[0] = \"X\";\n    stringArray0[1] = \"h6\";\n    Whitelist whitelist1 = whitelist0.addTags(stringArray0);\n}",
    "testName" : "test1414"
  },
  "test2626" : {
    "methodSignature" : "public Whitelist addAttributes(String tag, String... keys)",
    "methodName" : "addAttributes",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    Whitelist whitelist0 = Whitelist.relaxed();\n    String[] stringArray0 = new String[5];\n    stringArray0[0] = \"org.jsoup.safety.whitelist$attributevalue\";\n    stringArray0[1] = \"org.jsoup.safety.whitelist$attributevalue\";\n    stringArray0[2] = \"org.jsoup.safety.whitelist$attributevalue\";\n    stringArray0[3] = \"org.jsoup.safety.whitelist$attributevalue\";\n    stringArray0[4] = \"org.jsoup.safety.whitelist$attributevalue\";\n    Whitelist whitelist1 = whitelist0.addAttributes(\"org.jsoup.safety.whitelist$attributevalue\", stringArray0);\n    Whitelist whitelist2 = whitelist1.addAttributes(\"org.jsoup.safety.whitelist$attributevalue\", stringArray0);\n}",
    "testName" : "test2626"
  },
  "test1818" : {
    "methodSignature" : "Attributes getEnforcedAttributes(String tagName)",
    "methodName" : "getEnforcedAttributes",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    Whitelist whitelist0 = Whitelist.basic();\n    Attributes attributes0 = whitelist0.getEnforcedAttributes(\"CK}XQ3Th2\");\n}",
    "testName" : "test1818"
  },
  "test2929" : {
    "methodSignature" : "public static Whitelist none()",
    "methodName" : "none",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    Whitelist whitelist0 = Whitelist.none();\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "boolean isSafeAttribute(String tagName, Element el, Attribute attr)",
    "methodName" : "isSafeAttribute",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    Whitelist whitelist0 = Whitelist.basic();\n    String[] stringArray0 = new String[7];\n    stringArray0[0] = \"h5\";\n    stringArray0[1] = \"h5\";\n    stringArray0[2] = \"h5\";\n    stringArray0[3] = \"CK}XQ3Th2\";\n    stringArray0[4] = \"h5\";\n    stringArray0[5] = \"h5\";\n    stringArray0[6] = \"h5\";\n    Whitelist whitelist1 = whitelist0.addAttributes(\"h5\", stringArray0);\n    whitelist0.addProtocols(\"h5\", \"]_zCs1k?4+h#BKv\", stringArray0);\n    Document document0 = new Document(\"(>!$A|]j=B\");\n    Attribute attribute0 = Attribute.createFromEncoded(\"h5\", \"ul\");\n    boolean boolean0 = whitelist1.isSafeAttribute(\"h5\", document0, attribute0);\n}",
    "testName" : "test1919"
  },
  "test3030" : {
    "methodSignature" : "public Whitelist preserveRelativeLinks(boolean preserve)",
    "methodName" : "preserveRelativeLinks",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    Whitelist whitelist0 = Whitelist.simpleText();\n    Whitelist whitelist1 = whitelist0.preserveRelativeLinks(true);\n}",
    "testName" : "test3030"
  },
  "test2020" : {
    "methodSignature" : "boolean isSafeAttribute(String tagName, Element el, Attribute attr)",
    "methodName" : "isSafeAttribute",
    "className" : "org.jsoup.safety.Whitelist",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    Whitelist whitelist0 = Whitelist.basic();\n    String[] stringArray0 = new String[7];\n    stringArray0[0] = \"h5\";\n    stringArray0[1] = \"h5\";\n    stringArray0[2] = \"h5\";\n    stringArray0[3] = \"CK}XQ3Th2\";\n    stringArray0[4] = \"h5\";\n    stringArray0[5] = \"h5\";\n    stringArray0[6] = \"h5\";\n    Whitelist whitelist1 = whitelist0.addAttributes(\"h5\", stringArray0);\n    Document document0 = new Document(\"(>!$A|]j=B\");\n    Attribute attribute0 = Attribute.createFromEncoded(\"h5\", \"ul\");\n    boolean boolean0 = whitelist1.isSafeAttribute(\"h5\", document0, attribute0);\n}",
    "testName" : "test2020"
  }
}