{
  "test0520" : {
    "methodSignature" : "public boolean isData()",
    "methodName" : "isData",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0520() throws Throwable {\n    Tag tag0 = Tag.valueOf(\" at index: \");\n    boolean boolean0 = tag0.isBlock();\n    tag0.isData();\n}",
    "testName" : "test0520"
  },
  "test2664" : {
    "methodSignature" : "boolean isValidParent(Tag child)",
    "methodName" : "isValidParent",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2664() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"PARAM\");\n    boolean boolean0 = tag0.isValidParent(tag0);\n}",
    "testName" : "test2664"
  },
  "test0521" : {
    "methodSignature" : "public boolean preserveWhitespace()",
    "methodName" : "preserveWhitespace",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0521() throws Throwable {\n    Tag tag0 = Tag.valueOf(\" at index: \");\n    boolean boolean0 = tag0.isBlock();\n    tag0.preserveWhitespace();\n}",
    "testName" : "test0521"
  },
  "test1335" : {
    "methodSignature" : "boolean canContain(Tag child)",
    "methodName" : "canContain",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1335() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"noscript\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.canContain(tag0);\n}",
    "testName" : "test1335"
  },
  "test0522" : {
    "methodSignature" : "public boolean isEmpty()",
    "methodName" : "isEmpty",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0522() throws Throwable {\n    Tag tag0 = Tag.valueOf(\" at index: \");\n    boolean boolean0 = tag0.isBlock();\n    tag0.isEmpty();\n}",
    "testName" : "test0522"
  },
  "test1336" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1336() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"noscript\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.canContain(tag0);\n    tag1.toString();\n}",
    "testName" : "test1336"
  },
  "test0926" : {
    "methodSignature" : "Tag getImplicitParent()",
    "methodName" : "getImplicitParent",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0926() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"style\");\n    Tag tag1 = tag0.getImplicitParent();\n}",
    "testName" : "test0926"
  },
  "test1743" : {
    "methodSignature" : "boolean canContain(Tag child)",
    "methodName" : "canContain",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1743() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"HEAD\");\n    boolean boolean0 = tag0.canContain(tag0);\n}",
    "testName" : "test1743"
  },
  "test2155" : {
    "methodSignature" : "boolean canContain(Tag child)",
    "methodName" : "canContain",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2155() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"object\");\n    Tag tag1 = Tag.valueOf(\"dd\");\n    boolean boolean0 = tag1.canContain(tag0);\n}",
    "testName" : "test2155"
  },
  "test0417" : {
    "methodSignature" : "public boolean isEmpty()",
    "methodName" : "isEmpty",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0417() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"MBc\");\n    tag0.toString();\n    tag0.isEmpty();\n}",
    "testName" : "test0417"
  },
  "test0413" : {
    "methodSignature" : "public boolean isInline()",
    "methodName" : "isInline",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0413() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"MBc\");\n    tag0.toString();\n    tag0.isInline();\n}",
    "testName" : "test0413"
  },
  "test1744" : {
    "methodSignature" : "public boolean isData()",
    "methodName" : "isData",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1744() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"HEAD\");\n    boolean boolean0 = tag0.canContain(tag0);\n    tag0.isData();\n}",
    "testName" : "test1744"
  },
  "test0414" : {
    "methodSignature" : "public boolean canContainBlock()",
    "methodName" : "canContainBlock",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0414() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"MBc\");\n    tag0.toString();\n    tag0.canContainBlock();\n}",
    "testName" : "test0414"
  },
  "test0415" : {
    "methodSignature" : "public boolean preserveWhitespace()",
    "methodName" : "preserveWhitespace",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0415() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"MBc\");\n    tag0.toString();\n    tag0.preserveWhitespace();\n}",
    "testName" : "test0415"
  },
  "test0416" : {
    "methodSignature" : "public boolean isData()",
    "methodName" : "isData",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0416() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"MBc\");\n    tag0.toString();\n    tag0.isData();\n}",
    "testName" : "test0416"
  },
  "test3080" : {
    "methodSignature" : "public boolean isData()",
    "methodName" : "isData",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3080() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"]XK\");\n    boolean boolean0 = tag0.equals(\"]XK\");\n    tag0.isData();\n}",
    "testName" : "test3080"
  },
  "test0927" : {
    "methodSignature" : "boolean canContain(Tag child)",
    "methodName" : "canContain",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0927() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"style\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.canContain(tag0);\n}",
    "testName" : "test0927"
  },
  "test0928" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0928() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"style\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.canContain(tag0);\n    tag1.toString();\n}",
    "testName" : "test0928"
  },
  "test3085" : {
    "methodSignature" : "public boolean canContainBlock()",
    "methodName" : "canContainBlock",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3085() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"]XK\");\n    boolean boolean0 = tag0.equals(\"]XK\");\n    tag0.canContainBlock();\n}",
    "testName" : "test3085"
  },
  "test3082" : {
    "methodSignature" : "public boolean isInline()",
    "methodName" : "isInline",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3082() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"]XK\");\n    boolean boolean0 = tag0.equals(\"]XK\");\n    tag0.isInline();\n}",
    "testName" : "test3082"
  },
  "test3081" : {
    "methodSignature" : "public boolean isEmpty()",
    "methodName" : "isEmpty",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3081() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"]XK\");\n    boolean boolean0 = tag0.equals(\"]XK\");\n    tag0.isEmpty();\n}",
    "testName" : "test3081"
  },
  "test3084" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3084() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"]XK\");\n    boolean boolean0 = tag0.equals(\"]XK\");\n}",
    "testName" : "test3084"
  },
  "test3083" : {
    "methodSignature" : "public boolean preserveWhitespace()",
    "methodName" : "preserveWhitespace",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3083() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"]XK\");\n    boolean boolean0 = tag0.equals(\"]XK\");\n    tag0.preserveWhitespace();\n}",
    "testName" : "test3083"
  },
  "test1234" : {
    "methodSignature" : "boolean canContain(Tag child)",
    "methodName" : "canContain",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1234() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"script\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.canContain(tag0);\n}",
    "testName" : "test1234"
  },
  "test36103" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36103() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"FORM\");\n    tag0.hashCode();\n}",
    "testName" : "test36103"
  },
  "test3499" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3499() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"link\");\n    tag0.hashCode();\n}",
    "testName" : "test3499"
  },
  "test1233" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1233() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"script\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.canContain(tag0);\n    tag1.toString();\n}",
    "testName" : "test1233"
  },
  "test2563" : {
    "methodSignature" : "Tag getImplicitParent()",
    "methodName" : "getImplicitParent",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2563() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"html\");\n    Tag tag1 = tag0.getImplicitParent();\n}",
    "testName" : "test2563"
  },
  "test0825" : {
    "methodSignature" : "boolean canContain(Tag child)",
    "methodName" : "canContain",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0825() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"base\");\n    boolean boolean0 = tag0.canContain(tag0);\n}",
    "testName" : "test0825"
  },
  "test004" : {
    "methodSignature" : "public boolean isInline()",
    "methodName" : "isInline",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test004() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"DFtik7iwk\");\n    tag0.getName();\n    tag0.isInline();\n}",
    "testName" : "test004"
  },
  "test005" : {
    "methodSignature" : "public boolean canContainBlock()",
    "methodName" : "canContainBlock",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test005() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"DFtik7iwk\");\n    tag0.getName();\n    tag0.canContainBlock();\n}",
    "testName" : "test005"
  },
  "test002" : {
    "methodSignature" : "public boolean preserveWhitespace()",
    "methodName" : "preserveWhitespace",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test002() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"DFtik7iwk\");\n    tag0.getName();\n    tag0.preserveWhitespace();\n}",
    "testName" : "test002"
  },
  "test003" : {
    "methodSignature" : "public boolean isEmpty()",
    "methodName" : "isEmpty",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test003() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"DFtik7iwk\");\n    tag0.getName();\n    tag0.isEmpty();\n}",
    "testName" : "test003"
  },
  "test1641" : {
    "methodSignature" : "boolean canContain(Tag child)",
    "methodName" : "canContain",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1641() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"title\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.canContain(tag0);\n}",
    "testName" : "test1641"
  },
  "test1642" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1642() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"title\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.canContain(tag0);\n    tag1.toString();\n}",
    "testName" : "test1642"
  },
  "test0312" : {
    "methodSignature" : "public boolean preserveWhitespace()",
    "methodName" : "preserveWhitespace",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0312() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"object\");\n    boolean boolean0 = tag0.preserveWhitespace();\n}",
    "testName" : "test0312"
  },
  "test2975" : {
    "methodSignature" : "public boolean preserveWhitespace()",
    "methodName" : "preserveWhitespace",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2975() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"n]XK\");\n    boolean boolean0 = tag0.equals((Object) null);\n    tag0.preserveWhitespace();\n}",
    "testName" : "test2975"
  },
  "test2974" : {
    "methodSignature" : "public boolean canContainBlock()",
    "methodName" : "canContainBlock",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2974() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"n]XK\");\n    boolean boolean0 = tag0.equals((Object) null);\n    tag0.canContainBlock();\n}",
    "testName" : "test2974"
  },
  "test000" : {
    "methodSignature" : "public static Tag valueOf(String tagName)",
    "methodName" : "valueOf",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"DFtik7iwk\");\n}",
    "testName" : "test000"
  },
  "test001" : {
    "methodSignature" : "public boolean isData()",
    "methodName" : "isData",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test001() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"DFtik7iwk\");\n    tag0.getName();\n    tag0.isData();\n}",
    "testName" : "test001"
  },
  "test2977" : {
    "methodSignature" : "public boolean isBlock()",
    "methodName" : "isBlock",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2977() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"n]XK\");\n    boolean boolean0 = tag0.equals((Object) null);\n    tag0.isBlock();\n}",
    "testName" : "test2977"
  },
  "test2976" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2976() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"n]XK\");\n    boolean boolean0 = tag0.equals((Object) null);\n}",
    "testName" : "test2976"
  },
  "test2979" : {
    "methodSignature" : "public boolean isData()",
    "methodName" : "isData",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2979() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"n]XK\");\n    boolean boolean0 = tag0.equals((Object) null);\n    tag0.isData();\n}",
    "testName" : "test2979"
  },
  "test2978" : {
    "methodSignature" : "public boolean isEmpty()",
    "methodName" : "isEmpty",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2978() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"n]XK\");\n    boolean boolean0 = tag0.equals((Object) null);\n    tag0.isEmpty();\n}",
    "testName" : "test2978"
  },
  "test2052" : {
    "methodSignature" : "boolean canContain(Tag child)",
    "methodName" : "canContain",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2052() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"lb\");\n    Tag tag1 = Tag.valueOf(\"dt\");\n    boolean boolean0 = tag1.canContain(tag0);\n}",
    "testName" : "test2052"
  },
  "test2051" : {
    "methodSignature" : "public boolean preserveWhitespace()",
    "methodName" : "preserveWhitespace",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2051() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"lb\");\n    Tag tag1 = Tag.valueOf(\"dt\");\n    boolean boolean0 = tag1.canContain(tag0);\n    tag0.preserveWhitespace();\n}",
    "testName" : "test2051"
  },
  "test2054" : {
    "methodSignature" : "public boolean isEmpty()",
    "methodName" : "isEmpty",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2054() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"lb\");\n    Tag tag1 = Tag.valueOf(\"dt\");\n    boolean boolean0 = tag1.canContain(tag0);\n    tag0.isEmpty();\n}",
    "testName" : "test2054"
  },
  "test2053" : {
    "methodSignature" : "public boolean isData()",
    "methodName" : "isData",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2053() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"lb\");\n    Tag tag1 = Tag.valueOf(\"dt\");\n    boolean boolean0 = tag1.canContain(tag0);\n    tag0.isData();\n}",
    "testName" : "test2053"
  },
  "test2050" : {
    "methodSignature" : "public boolean canContainBlock()",
    "methodName" : "canContainBlock",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2050() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"lb\");\n    Tag tag1 = Tag.valueOf(\"dt\");\n    boolean boolean0 = tag1.canContain(tag0);\n    tag0.canContainBlock();\n}",
    "testName" : "test2050"
  },
  "test1131" : {
    "methodSignature" : "boolean canContain(Tag child)",
    "methodName" : "canContain",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1131() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"base\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.canContain(tag0);\n}",
    "testName" : "test1131"
  },
  "test3398" : {
    "methodSignature" : "public boolean isBlock()",
    "methodName" : "isBlock",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3398() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"The validated expression is false\");\n    Tag tag1 = Tag.valueOf(\"The validated expression is false\");\n    boolean boolean0 = tag1.equals(tag0);\n    tag1.isBlock();\n}",
    "testName" : "test3398"
  },
  "test1132" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1132() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"base\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.canContain(tag0);\n    tag1.getName();\n}",
    "testName" : "test1132"
  },
  "test2462" : {
    "methodSignature" : "public boolean isData()",
    "methodName" : "isData",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2462() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"base\");\n    boolean boolean0 = tag0.isData();\n}",
    "testName" : "test2462"
  },
  "test3397" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3397() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"The validated expression is false\");\n    Tag tag1 = Tag.valueOf(\"The validated expression is false\");\n    boolean boolean0 = tag1.equals(tag0);\n}",
    "testName" : "test3397"
  },
  "test1539" : {
    "methodSignature" : "boolean canContain(Tag child)",
    "methodName" : "canContain",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1539() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"meta\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.canContain(tag0);\n}",
    "testName" : "test1539"
  },
  "test2867" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2867() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"ECP`FJm5-&\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.isValidParent(tag0);\n    tag1.equals((Object) tag0);\n}",
    "testName" : "test2867"
  },
  "test2866" : {
    "methodSignature" : "Tag getImplicitParent()",
    "methodName" : "getImplicitParent",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2866() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"ECP`FJm5-&\");\n    Tag tag1 = tag0.getImplicitParent();\n}",
    "testName" : "test2866"
  },
  "test2869" : {
    "methodSignature" : "public boolean isData()",
    "methodName" : "isData",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2869() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"ECP`FJm5-&\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.isValidParent(tag0);\n    tag0.isData();\n}",
    "testName" : "test2869"
  },
  "test0724" : {
    "methodSignature" : "boolean canContain(Tag child)",
    "methodName" : "canContain",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0724() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"link\");\n    boolean boolean0 = tag0.canContain(tag0);\n}",
    "testName" : "test0724"
  },
  "test2868" : {
    "methodSignature" : "public boolean isEmpty()",
    "methodName" : "isEmpty",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2868() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"ECP`FJm5-&\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.isValidParent(tag0);\n    tag0.isEmpty();\n}",
    "testName" : "test2868"
  },
  "test3394" : {
    "methodSignature" : "public boolean isEmpty()",
    "methodName" : "isEmpty",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3394() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"The validated expression is false\");\n    Tag tag1 = Tag.valueOf(\"The validated expression is false\");\n    boolean boolean0 = tag1.equals(tag0);\n    tag1.isEmpty();\n}",
    "testName" : "test3394"
  },
  "test3393" : {
    "methodSignature" : "public boolean preserveWhitespace()",
    "methodName" : "preserveWhitespace",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3393() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"The validated expression is false\");\n    Tag tag1 = Tag.valueOf(\"The validated expression is false\");\n    boolean boolean0 = tag1.equals(tag0);\n    tag1.preserveWhitespace();\n}",
    "testName" : "test3393"
  },
  "test3396" : {
    "methodSignature" : "public boolean canContainBlock()",
    "methodName" : "canContainBlock",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3396() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"The validated expression is false\");\n    Tag tag1 = Tag.valueOf(\"The validated expression is false\");\n    boolean boolean0 = tag1.equals(tag0);\n    tag1.canContainBlock();\n}",
    "testName" : "test3396"
  },
  "test3395" : {
    "methodSignature" : "public boolean isData()",
    "methodName" : "isData",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3395() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"The validated expression is false\");\n    Tag tag1 = Tag.valueOf(\"The validated expression is false\");\n    boolean boolean0 = tag1.equals(tag0);\n    tag1.isData();\n}",
    "testName" : "test3395"
  },
  "test0211" : {
    "methodSignature" : "public boolean isData()",
    "methodName" : "isData",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0211() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"title\");\n    boolean boolean0 = tag0.isData();\n}",
    "testName" : "test0211"
  },
  "test2357" : {
    "methodSignature" : "public boolean preserveWhitespace()",
    "methodName" : "preserveWhitespace",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2357() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"The validated collection contains an element not of type \");\n    boolean boolean0 = tag0.isInline();\n    tag0.preserveWhitespace();\n}",
    "testName" : "test2357"
  },
  "test2873" : {
    "methodSignature" : "public boolean isInline()",
    "methodName" : "isInline",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2873() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"ECP`FJm5-&\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.isValidParent(tag0);\n    tag0.isInline();\n}",
    "testName" : "test2873"
  },
  "test2359" : {
    "methodSignature" : "public boolean isInline()",
    "methodName" : "isInline",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2359() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"The validated collection contains an element not of type \");\n    boolean boolean0 = tag0.isInline();\n}",
    "testName" : "test2359"
  },
  "test2358" : {
    "methodSignature" : "public boolean canContainBlock()",
    "methodName" : "canContainBlock",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2358() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"The validated collection contains an element not of type \");\n    boolean boolean0 = tag0.isInline();\n    tag0.canContainBlock();\n}",
    "testName" : "test2358"
  },
  "test2870" : {
    "methodSignature" : "boolean isValidParent(Tag child)",
    "methodName" : "isValidParent",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2870() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"ECP`FJm5-&\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.isValidParent(tag0);\n}",
    "testName" : "test2870"
  },
  "test3288" : {
    "methodSignature" : "boolean isValidParent(Tag child)",
    "methodName" : "isValidParent",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3288() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"Te valQQhteN exreso isflse\");\n    boolean boolean0 = tag0.isValidParent(tag0);\n}",
    "testName" : "test3288"
  },
  "test3287" : {
    "methodSignature" : "public boolean isEmpty()",
    "methodName" : "isEmpty",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3287() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"Te valQQhteN exreso isflse\");\n    boolean boolean0 = tag0.isValidParent(tag0);\n    tag0.isEmpty();\n}",
    "testName" : "test3287"
  },
  "test1540" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1540() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"meta\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.canContain(tag0);\n    tag1.toString();\n}",
    "testName" : "test1540"
  },
  "test2872" : {
    "methodSignature" : "public boolean preserveWhitespace()",
    "methodName" : "preserveWhitespace",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2872() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"ECP`FJm5-&\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.isValidParent(tag0);\n    tag0.preserveWhitespace();\n}",
    "testName" : "test2872"
  },
  "test2871" : {
    "methodSignature" : "public boolean canContainBlock()",
    "methodName" : "canContainBlock",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2871() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"ECP`FJm5-&\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.isValidParent(tag0);\n    tag0.canContainBlock();\n}",
    "testName" : "test2871"
  },
  "test3289" : {
    "methodSignature" : "public boolean preserveWhitespace()",
    "methodName" : "preserveWhitespace",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3289() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"Te valQQhteN exreso isflse\");\n    boolean boolean0 = tag0.isValidParent(tag0);\n    tag0.preserveWhitespace();\n}",
    "testName" : "test3289"
  },
  "test1947" : {
    "methodSignature" : "public boolean isData()",
    "methodName" : "isData",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1947() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"dd\");\n    Tag tag1 = Tag.valueOf(\"dt\");\n    boolean boolean0 = tag1.canContain(tag0);\n    tag1.isData();\n}",
    "testName" : "test1947"
  },
  "test1948" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1948() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"dd\");\n    Tag tag1 = Tag.valueOf(\"dt\");\n    boolean boolean0 = tag1.canContain(tag0);\n    tag1.equals((Object) tag0);\n}",
    "testName" : "test1948"
  },
  "test1949" : {
    "methodSignature" : "boolean canContain(Tag child)",
    "methodName" : "canContain",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1949() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"dd\");\n    Tag tag1 = Tag.valueOf(\"dt\");\n    boolean boolean0 = tag1.canContain(tag0);\n}",
    "testName" : "test1949"
  },
  "test1029" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1029() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"dd\");\n    Tag tag1 = Tag.valueOf(\"dt\");\n    tag0.canContain(tag1);\n    tag1.equals((Object) tag0);\n}",
    "testName" : "test1029"
  },
  "test019" : {
    "methodSignature" : "public boolean preserveWhitespace()",
    "methodName" : "preserveWhitespace",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test019() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"0\");\n    boolean boolean0 = tag0.canContainBlock();\n    tag0.preserveWhitespace();\n}",
    "testName" : "test019"
  },
  "test017" : {
    "methodSignature" : "public boolean isData()",
    "methodName" : "isData",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test017() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"0\");\n    boolean boolean0 = tag0.canContainBlock();\n    tag0.isData();\n}",
    "testName" : "test017"
  },
  "test018" : {
    "methodSignature" : "public boolean canContainBlock()",
    "methodName" : "canContainBlock",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test018() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"0\");\n    boolean boolean0 = tag0.canContainBlock();\n}",
    "testName" : "test018"
  },
  "test016" : {
    "methodSignature" : "public boolean isEmpty()",
    "methodName" : "isEmpty",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test016() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"0\");\n    boolean boolean0 = tag0.canContainBlock();\n    tag0.isEmpty();\n}",
    "testName" : "test016"
  },
  "test2765" : {
    "methodSignature" : "boolean isValidParent(Tag child)",
    "methodName" : "isValidParent",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2765() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"html\");\n    boolean boolean0 = tag0.isValidParent(tag0);\n}",
    "testName" : "test2765"
  },
  "test0623" : {
    "methodSignature" : "boolean canContain(Tag child)",
    "methodName" : "canContain",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0623() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"THEAD\");\n    boolean boolean0 = tag0.canContain(tag0);\n}",
    "testName" : "test0623"
  },
  "test1437" : {
    "methodSignature" : "boolean canContain(Tag child)",
    "methodName" : "canContain",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1437() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"link\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.canContain(tag0);\n}",
    "testName" : "test1437"
  },
  "test1438" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1438() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"link\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.canContain(tag0);\n    tag1.getName();\n}",
    "testName" : "test1438"
  },
  "test2360" : {
    "methodSignature" : "public boolean isData()",
    "methodName" : "isData",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2360() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"The validated collection contains an element not of type \");\n    boolean boolean0 = tag0.isInline();\n    tag0.isData();\n}",
    "testName" : "test2360"
  },
  "test1030" : {
    "methodSignature" : "public boolean isData()",
    "methodName" : "isData",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1030() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"dd\");\n    Tag tag1 = Tag.valueOf(\"dt\");\n    tag0.canContain(tag1);\n    tag1.isData();\n}",
    "testName" : "test1030"
  },
  "test2361" : {
    "methodSignature" : "public boolean isEmpty()",
    "methodName" : "isEmpty",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2361() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"The validated collection contains an element not of type \");\n    boolean boolean0 = tag0.isInline();\n    tag0.isEmpty();\n}",
    "testName" : "test2361"
  },
  "test3291" : {
    "methodSignature" : "public boolean isBlock()",
    "methodName" : "isBlock",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3291() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"Te valQQhteN exreso isflse\");\n    boolean boolean0 = tag0.isValidParent(tag0);\n    tag0.isBlock();\n}",
    "testName" : "test3291"
  },
  "test3290" : {
    "methodSignature" : "public boolean canContainBlock()",
    "methodName" : "canContainBlock",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3290() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"Te valQQhteN exreso isflse\");\n    boolean boolean0 = tag0.isValidParent(tag0);\n    tag0.canContainBlock();\n}",
    "testName" : "test3290"
  },
  "test3292" : {
    "methodSignature" : "public boolean isData()",
    "methodName" : "isData",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3292() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"Te valQQhteN exreso isflse\");\n    boolean boolean0 = tag0.isValidParent(tag0);\n    tag0.isData();\n}",
    "testName" : "test3292"
  },
  "test35102" : {
    "methodSignature" : "public boolean isData()",
    "methodName" : "isData",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35102() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"r[zmHb.(TH\");\n    tag0.hashCode();\n    tag0.isData();\n}",
    "testName" : "test35102"
  },
  "test35101" : {
    "methodSignature" : "public boolean isInline()",
    "methodName" : "isInline",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35101() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"r[zmHb.(TH\");\n    tag0.hashCode();\n    tag0.isInline();\n}",
    "testName" : "test35101"
  },
  "test35100" : {
    "methodSignature" : "public boolean preserveWhitespace()",
    "methodName" : "preserveWhitespace",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35100() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"r[zmHb.(TH\");\n    tag0.hashCode();\n    tag0.preserveWhitespace();\n}",
    "testName" : "test35100"
  },
  "test0110" : {
    "methodSignature" : "public boolean isInline()",
    "methodName" : "isInline",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0110() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"0\");\n    boolean boolean0 = tag0.canContainBlock();\n    tag0.isInline();\n}",
    "testName" : "test0110"
  },
  "test2256" : {
    "methodSignature" : "public boolean isInline()",
    "methodName" : "isInline",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2256() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"DL\");\n    boolean boolean0 = tag0.isInline();\n}",
    "testName" : "test2256"
  },
  "test0518" : {
    "methodSignature" : "public boolean isBlock()",
    "methodName" : "isBlock",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0518() throws Throwable {\n    Tag tag0 = Tag.valueOf(\" at index: \");\n    boolean boolean0 = tag0.isBlock();\n}",
    "testName" : "test0518"
  },
  "test0519" : {
    "methodSignature" : "public boolean canContainBlock()",
    "methodName" : "canContainBlock",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0519() throws Throwable {\n    Tag tag0 = Tag.valueOf(\" at index: \");\n    boolean boolean0 = tag0.isBlock();\n    tag0.canContainBlock();\n}",
    "testName" : "test0519"
  },
  "test1845" : {
    "methodSignature" : "boolean canContain(Tag child)",
    "methodName" : "canContain",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1845() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"object\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.canContain(tag0);\n}",
    "testName" : "test1845"
  },
  "test1846" : {
    "methodSignature" : "public String getName()",
    "methodName" : "getName",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1846() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"object\");\n    Tag tag1 = tag0.getImplicitParent();\n    boolean boolean0 = tag1.canContain(tag0);\n    tag1.getName();\n}",
    "testName" : "test1846"
  },
  "test3186" : {
    "methodSignature" : "public boolean equals(Object o)",
    "methodName" : "equals",
    "className" : "org.jsoup.parser.Tag",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3186() throws Throwable {\n    Tag tag0 = Tag.valueOf(\"BR\");\n    Tag tag1 = Tag.valueOf(\"script\");\n    boolean boolean0 = tag0.equals(tag1);\n}",
    "testName" : "test3186"
  }
}