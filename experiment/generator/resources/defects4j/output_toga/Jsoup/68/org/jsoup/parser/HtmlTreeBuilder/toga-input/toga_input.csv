focal_method,test_prefix,docstring
"void replaceActiveFormattingElement(Element out, Element in) {
    replaceInQueue(formattingElements, out, in);
}","public void test0000() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""command"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(100);
    ParseSettings parseSettings0 = new ParseSettings(false, false);
    Document document0 = htmlTreeBuilder0.parse(stringReader0, "")"", parseErrorList0, parseSettings0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.replaceActiveFormattingElement((Element) null, document0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",""
"boolean inSelectScope(String targetName) {
    for (int pos = stack.size() - 1; pos >= 0; pos--) {
        Element el = stack.get(pos);
        String elName = el.nodeName();
        if (elName.equals(targetName))
            return true;
        if (// all elements except
        !inSorted(elName, TagSearchSelectScope))
            return false;
    }
    Validate.fail(""Should not be reachable"");
    return false;
}","public void test0011() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""frame"");
    Document document1 = document0.normalise();
    Elements elements0 = document1.getAllElements();
    htmlTreeBuilder0.stack = (ArrayList<Element>) elements0;
    boolean boolean0 = htmlTreeBuilder0.inSelectScope(""wbr"");
    assertFalse(boolean0);
}",""
"boolean inTableScope(String targetName) {
    return inSpecificScope(targetName, TagSearchTableScope, null);
}","public void test0023() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.inTableScope(""<63:YB&VXGUaj"");
    assertFalse(boolean0);
}",""
"void replaceOnStack(Element out, Element in) {
    replaceInQueue(stack, out, in);
}","public void test0034() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""Opw7"");
    Document document1 = document0.clone();
    Element element0 = document1.text(""body"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.replaceOnStack(document0, element0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"void insertOnStackAfter(Element after, Element in) {
    int i = stack.lastIndexOf(after);
    Validate.isTrue(i != -1);
    stack.add(i + 1, in);
}","public void test0045() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""bgsound"");
    Element element0 = document0.shallowClone();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertOnStackAfter(document0, element0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"boolean isInActiveFormattingElements(Element el) {
    return isElementInQueue(formattingElements, el);
}","public void test0057() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Element element0 = htmlTreeBuilder0.getHeadElement();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    boolean boolean0 = htmlTreeBuilder0.isInActiveFormattingElements((Element) null);
    assertTrue(boolean0);
}",""
"void insert(Token.Comment commentToken) {
    Comment comment = new Comment(commentToken.getData());
    insertNode(comment);
}","public void test0068() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Token.Comment token_Comment0 = new Token.Comment();
    htmlTreeBuilder0.insert(token_Comment0);
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"void insert(Token.Character characterToken) {
    Node node;
    // characters in script and style go in as datanodes, not text nodes
    String tagName = currentElement().tagName();
    if (tagName.equals(""script"") || tagName.equals(""style""))
        node = new DataNode(characterToken.getData());
    else
        node = new TextNode(characterToken.getData());
    // doesn't use insertNode, because we don't foster these; and will always have a stack.
    currentElement().appendChild(node);
}","public void test0079() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Token.Character token_Character0 = new Token.Character();
    htmlTreeBuilder0.insert(token_Character0);
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"@Override
public int childNodeSize() {
    return childNodes.size();
}","public void test00810() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.insert(element0);
    assertEquals(2, element0.childNodeSize());
}",""
"void transition(HtmlTreeBuilderState state) {
    this.state = state;
}","public void test00911() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.BeforeHtml;
    htmlTreeBuilder0.transition(htmlTreeBuilderState0);
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"public String location() {
    return location;
}","public void test01012() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""bgsound"");
    htmlTreeBuilder0.setHeadElement(document0);
    assertEquals(""bgsound"", document0.location());
}","/**
 * Get the URL this Document was parsed from. If the starting URL is a redirect,
 * this will return the final URL from which the document was served from.
 * @return location
 */"
"void newPendingTableCharacters() {
    pendingTableCharacters = new ArrayList<>();
}","public void test01113() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.newPendingTableCharacters();
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"void markInsertionMode() {
    originalState = state;
}","public void test01214() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.markInsertionMode();
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"void framesetOk(boolean framesetOk) {
    this.framesetOk = framesetOk;
}","public void test01315() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.framesetOk(true);
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"@Override
public int childNodeSize() {
    return childNodes.size();
}","public void test01416() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""head"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = new ParseSettings(true, false);
    Document document0 = htmlTreeBuilder0.parse(stringReader0, ""script"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.push(document0);
    assertEquals(1, document0.childNodeSize());
}",""
"void insertMarkerToFormattingElements() {
    formattingElements.add(null);
}","public void test01517() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    htmlTreeBuilder0.insertMarkerToFormattingElements();
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"public int siblingIndex() {
    return siblingIndex;
}","public void test01618() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.insertInFosterParent(element0);
    assertEquals(1, element0.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"@Override
public String baseUri() {
    return baseUri;
}","public void test01619() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.insertInFosterParent(element0);
    assertEquals("""", element0.baseUri());
}",""
"@Override
public int childNodeSize() {
    return childNodes.size();
}","public void test01620() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.insertInFosterParent(element0);
    assertEquals(1, element0.childNodeSize());
}",""
"public int siblingIndex() {
    return siblingIndex;
}","public void test01721() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""0vd[>jhEOMAh88s'"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parse(stringReader0, ""select"", parseErrorList0, parseSettings0);
    Comment comment0 = new Comment(""}NV3E"", ""CommentEndBang"");
    Attributes attributes0 = comment0.attributes();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""0vd[>jhEOMAh88s'"", attributes0);
    FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag1, false);
    assertEquals(1, formElement0.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"void clearStackToTableRowContext() {
    clearStackToContext(""tr"", ""template"");
}","public void test01822() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    htmlTreeBuilder0.clearStackToTableRowContext();
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"void clearStackToTableContext() {
    clearStackToContext(""table"");
}","public void test01923() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    htmlTreeBuilder0.clearStackToTableContext();
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"@Override
public String toString() {
    return ""TreeBuilder{"" + ""currentToken="" + currentToken + "", state="" + state + "", currentElement="" + currentElement() + '}';
}","public void test02024() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    String string0 = htmlTreeBuilder0.toString();
    assertNotNull(string0);
}",""
"HtmlTreeBuilderState state() {
    return state;
}","public void test02125() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    htmlTreeBuilder0.state();
}",""
"Element removeLastFormattingElement() {
    int size = formattingElements.size();
    if (size > 0)
        return formattingElements.remove(size - 1);
    else
        return null;
}","public void test02226() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    Element element1 = htmlTreeBuilder0.removeLastFormattingElement();
    assertNotNull(element1);
}",""
"@Override
public String baseUri() {
    return baseUri;
}","public void test02227() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    Element element1 = htmlTreeBuilder0.removeLastFormattingElement();
    assertEquals("""", element1.baseUri());
}",""
"public int siblingIndex() {
    return siblingIndex;
}","public void test02228() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    Element element1 = htmlTreeBuilder0.removeLastFormattingElement();
    assertEquals(1, element1.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"public int siblingIndex() {
    return siblingIndex;
}","public void test02329() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""#root"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    assertEquals(1, element0.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"@Override
public String baseUri() {
    return baseUri;
}","public void test02330() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""#root"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    String[] stringArray0 = new String[0];
    htmlTreeBuilder0.popStackToClose(stringArray0);
    htmlTreeBuilder0.reconstructFormattingElements();
    Element element1 = htmlTreeBuilder0.pop();
    assertEquals("""", element1.baseUri());
}",""
"@Override
public int childNodeSize() {
    return childNodes.size();
}","public void test02331() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""#root"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    String[] stringArray0 = new String[0];
    htmlTreeBuilder0.popStackToClose(stringArray0);
    htmlTreeBuilder0.reconstructFormattingElements();
    Element element1 = htmlTreeBuilder0.pop();
    assertEquals(0, element1.childNodeSize());
}",""
"public int siblingIndex() {
    return siblingIndex;
}","public void test02432() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.pop();
    assertEquals(1, element0.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"@Override
public String baseUri() {
    return baseUri;
}","public void test02433() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.pop();
    assertEquals("""", element0.baseUri());
}",""
"HtmlTreeBuilderState originalState() {
    return originalState;
}","public void test02534() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.originalState();
}",""
"boolean onStack(Element el) {
    return isElementInQueue(stack, el);
}","public void test02636() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.onStack((Element) null);
    assertFalse(boolean0);
}",""
"@Override
public String baseUri() {
    return baseUri;
}","public void test02737() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    Element element1 = htmlTreeBuilder0.lastFormattingElement();
    assertEquals("""", element1.baseUri());
}",""
"Element lastFormattingElement() {
    return formattingElements.size() > 0 ? formattingElements.get(formattingElements.size() - 1) : null;
}","public void test02738() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    Element element1 = htmlTreeBuilder0.lastFormattingElement();
    assertNotNull(element1);
}",""
"public int siblingIndex() {
    return siblingIndex;
}","public void test02739() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    Element element1 = htmlTreeBuilder0.lastFormattingElement();
    assertEquals(1, element1.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"boolean isSpecial(Element el) {
    // todo: mathml's mi, mo, mn
    // todo: svg's foreigObject, desc, title
    String name = el.nodeName();
    return inSorted(name, TagSearchSpecial);
}","public void test02840() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    boolean boolean0 = htmlTreeBuilder0.isSpecial(element0);
    assertTrue(boolean0);
}",""
"public int siblingIndex() {
    return siblingIndex;
}","public void test02841() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    boolean boolean0 = htmlTreeBuilder0.isSpecial(element0);
    assertEquals(1, element0.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"@Override
public String baseUri() {
    return baseUri;
}","public void test02842() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    boolean boolean0 = htmlTreeBuilder0.isSpecial(element0);
    assertEquals("""", element0.baseUri());
}",""
"boolean isSpecial(Element el) {
    // todo: mathml's mi, mo, mn
    // todo: svg's foreigObject, desc, title
    String name = el.nodeName();
    return inSorted(name, TagSearchSpecial);
}","public void test02943() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Element element0 = new Element("">D]{y7)^B@^JfP"");
    boolean boolean0 = htmlTreeBuilder0.isSpecial(element0);
    assertFalse(boolean0);
}",""
"boolean isInActiveFormattingElements(Element el) {
    return isElementInQueue(formattingElements, el);
}","public void test03045() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Element element0 = htmlTreeBuilder0.getHeadElement();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""#root"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.isInActiveFormattingElements(element0);
    assertFalse(boolean0);
}",""
"boolean isFragmentParsing() {
    return fragmentParsing;
}","public void test03147() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
    assertTrue(boolean0);
}",""
"boolean isFosterInserts() {
    return fosterInserts;
}","public void test03248() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    boolean boolean0 = htmlTreeBuilder0.isFosterInserts();
    assertFalse(boolean0);
}",""
"public int siblingIndex() {
    return siblingIndex;
}","public void test03349() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    assertEquals(1, element0.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"public int siblingIndex() {
    return siblingIndex;
}","public void test03350() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    String[] stringArray0 = new String[0];
    htmlTreeBuilder0.popStackToClose(stringArray0);
    htmlTreeBuilder0.reconstructFormattingElements();
    Element element1 = htmlTreeBuilder0.insertStartTag(""figcaption"");
    assertEquals(0, element1.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"@Override
public String baseUri() {
    return baseUri;
}","public void test03351() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    String[] stringArray0 = new String[0];
    htmlTreeBuilder0.popStackToClose(stringArray0);
    htmlTreeBuilder0.reconstructFormattingElements();
    Element element1 = htmlTreeBuilder0.insertStartTag(""figcaption"");
    assertEquals("""", element1.baseUri());
}",""
"public int siblingIndex() {
    return siblingIndex;
}","public void test03452() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.insertStartTag(""figcaption"");
    assertEquals(1, element0.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"@Override
public String baseUri() {
    return baseUri;
}","public void test03453() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.insertStartTag(""figcaption"");
    assertEquals("""", element0.baseUri());
}",""
"@Override
public String baseUri() {
    return baseUri;
}","public void test03554() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.insertStartTag(""on"");
    assertEquals("""", element0.baseUri());
}",""
"public int siblingIndex() {
    return siblingIndex;
}","public void test03555() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.insertStartTag(""on"");
    assertEquals(1, element0.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"public int siblingIndex() {
    return siblingIndex;
}","public void test03656() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Token.StartTag token_StartTag0 = new Token.StartTag();
    Attributes attributes0 = new Attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""{au7]/EQH*mMS"", attributes0);
    htmlTreeBuilder0.insert(token_StartTag1);
    Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
    assertEquals(0, element0.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"@Override
public String baseUri() {
    return baseUri;
}","public void test03657() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Token.StartTag token_StartTag0 = new Token.StartTag();
    Attributes attributes0 = new Attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""{au7]/EQH*mMS"", attributes0);
    htmlTreeBuilder0.insert(token_StartTag1);
    Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
    assertEquals("""", element0.baseUri());
}",""
"boolean inScope(String[] targetNames) {
    return inSpecificScope(targetNames, TagsSearchInScope, null);
}","public void test03758() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    String[] stringArray0 = new String[5];
    stringArray0[0] = ""wbr"";
    Document document0 = new Document(""frame"");
    Elements elements0 = document0.getAllElements();
    htmlTreeBuilder0.stack = (ArrayList<Element>) elements0;
    stringArray0[2] = ""wbr"";
    boolean boolean0 = htmlTreeBuilder0.inScope(stringArray0);
    assertFalse(boolean0);
}",""
"boolean removeFromStack(Element el) {
    for (int pos = stack.size() - 1; pos >= 0; pos--) {
        Element next = stack.get(pos);
        if (next == el) {
            stack.remove(pos);
            return true;
        }
    }
    return false;
}","public void test03859() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""0vd[>jhEOMAh88s'"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    Document document0 = htmlTreeBuilder0.parse(stringReader0, ""select"", parseErrorList0, parseSettings0);
    Element element0 = document0.body();
    boolean boolean0 = htmlTreeBuilder0.removeFromStack(element0);
    assertTrue(boolean0);
}",""
"boolean inScope(String targetName, String[] extras) {
    return inSpecificScope(targetName, TagsSearchInScope, extras);
    // todo: in mathml namespace: mi, mo, mn, ms, mtext annotation-xml
    // todo: in svg namespace: forignOjbect, desc, title
}","public void test03860() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""0vd[>jhEOMAh88s'"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    Document document0 = htmlTreeBuilder0.parse(stringReader0, ""select"", parseErrorList0, parseSettings0);
    Element element0 = document0.body();
    boolean boolean0 = htmlTreeBuilder0.removeFromStack(element0);
    String[] stringArray0 = new String[2];
    boolean boolean1 = htmlTreeBuilder0.inScope(""sl*oIO"", stringArray0);
    assertFalse(boolean1);
}",""
"boolean inListItemScope(String targetName) {
    return inScope(targetName, TagSearchList);
}","public void test03961() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""frame"");
    Elements elements0 = document0.getAllElements();
    htmlTreeBuilder0.stack = (ArrayList<Element>) elements0;
    htmlTreeBuilder0.inListItemScope(""a"");
}",""
"List<String> getPendingTableCharacters() {
    return pendingTableCharacters;
}","public void test04265() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    List<String> list0 = htmlTreeBuilder0.getPendingTableCharacters();
    assertNull(list0);
}",""
"public int siblingIndex() {
    return siblingIndex;
}","public void test04467() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.getHeadElement();
    assertEquals(0, element0.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"@Override
public String baseUri() {
    return baseUri;
}","public void test04468() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.getHeadElement();
    assertEquals("""", element0.baseUri());
}",""
"@Override
public int childNodeSize() {
    return childNodes.size();
}","public void test04469() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.getHeadElement();
    assertEquals(0, element0.childNodeSize());
}",""
"Element getFromStack(String elName) {
    for (int pos = stack.size() - 1; pos >= 0; pos--) {
        Element next = stack.get(pos);
        if (next.nodeName().equals(elName)) {
            return next;
        }
    }
    return null;
}","public void test04570() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""command"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(100);
    ParseSettings parseSettings0 = new ParseSettings(false, false);
    htmlTreeBuilder0.parse(stringReader0, "")"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.getFromStack(""UTF8"");
    assertNull(element0);
}",""
"public boolean hasParent() {
    return parentNode != null;
}","public void test04671() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""frameset"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(100);
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.initialiseParse(stringReader0, ""frameset"", parseErrorList0, parseSettings0);
    Document document0 = htmlTreeBuilder0.getDocument();
    assertFalse(document0.hasParent());
}",""
"@Override
public int childNodeSize() {
    return childNodes.size();
}","public void test04772() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Document document0 = htmlTreeBuilder0.getDocument();
    assertEquals(1, document0.childNodeSize());
}",""
"public String location() {
    return location;
}","public void test04773() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Document document0 = htmlTreeBuilder0.getDocument();
    assertEquals("""", document0.location());
}","/**
 * Get the URL this Document was parsed from. If the starting URL is a redirect,
 * this will return the final URL from which the document was served from.
 * @return location
 */"
"String getBaseUri() {
    return baseUri;
}","public void test04874() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""command"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(100);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parse(stringReader0, "")"", parseErrorList0, parseSettings0);
    String string0 = htmlTreeBuilder0.getBaseUri();
    assertEquals("")"", string0);
}",""
"String getBaseUri() {
    return baseUri;
}","public void test04976() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    String string0 = htmlTreeBuilder0.getBaseUri();
    assertEquals("""", string0);
}",""
"boolean framesetOk() {
    return framesetOk;
}","public void test05077() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    boolean boolean0 = htmlTreeBuilder0.framesetOk();
    assertFalse(boolean0);
}",""
"void resetInsertionMode() {
    boolean last = false;
    for (int pos = stack.size() - 1; pos >= 0; pos--) {
        Element node = stack.get(pos);
        if (pos == 0) {
            last = true;
            node = contextElement;
        }
        String name = node.nodeName();
        if (""select"".equals(name)) {
            transition(HtmlTreeBuilderState.InSelect);
            // frag
            break;
        } else if ((""td"".equals(name) || ""th"".equals(name) && !last)) {
            transition(HtmlTreeBuilderState.InCell);
            break;
        } else if (""tr"".equals(name)) {
            transition(HtmlTreeBuilderState.InRow);
            break;
        } else if (""tbody"".equals(name) || ""thead"".equals(name) || ""tfoot"".equals(name)) {
            transition(HtmlTreeBuilderState.InTableBody);
            break;
        } else if (""caption"".equals(name)) {
            transition(HtmlTreeBuilderState.InCaption);
            break;
        } else if (""colgroup"".equals(name)) {
            transition(HtmlTreeBuilderState.InColumnGroup);
            // frag
            break;
        } else if (""table"".equals(name)) {
            transition(HtmlTreeBuilderState.InTable);
            break;
        } else if (""head"".equals(name)) {
            transition(HtmlTreeBuilderState.InBody);
            // frag
            break;
        } else if (""body"".equals(name)) {
            transition(HtmlTreeBuilderState.InBody);
            break;
        } else if (""frameset"".equals(name)) {
            transition(HtmlTreeBuilderState.InFrameset);
            // frag
            break;
        } else if (""html"".equals(name)) {
            transition(HtmlTreeBuilderState.BeforeHead);
            // frag
            break;
        } else if (last) {
            transition(HtmlTreeBuilderState.InBody);
            // frag
            break;
        }
    }
}","public void test05178() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.resetInsertionMode();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"Element removeLastFormattingElement() {
    int size = formattingElements.size();
    if (size > 0)
        return formattingElements.remove(size - 1);
    else
        return null;
}","public void test05279() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.removeLastFormattingElement();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"boolean removeFromStack(Element el) {
    for (int pos = stack.size() - 1; pos >= 0; pos--) {
        Element next = stack.get(pos);
        if (next == el) {
            stack.remove(pos);
            return true;
        }
    }
    return false;
}","public void test05380() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.removeFromStack((Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"void removeFromActiveFormattingElements(Element el) {
    for (int pos = formattingElements.size() - 1; pos >= 0; pos--) {
        Element next = formattingElements.get(pos);
        if (next == el) {
            formattingElements.remove(pos);
            break;
        }
    }
}","public void test05481() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.removeFromActiveFormattingElements((Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"void reconstructFormattingElements() {
    Element last = lastFormattingElement();
    if (last == null || onStack(last))
        return;
    Element entry = last;
    int size = formattingElements.size();
    int pos = size - 1;
    boolean skip = false;
    while (true) {
        if (pos == 0) {
            // step 4. if none before, skip to 8
            skip = true;
            break;
        }
        // step 5. one earlier than entry
        entry = formattingElements.get(--pos);
        if (// step 6 - neither marker nor on stack
        entry == null || onStack(entry))
            // jump to 8, else continue back to 4
            break;
    }
    while (true) {
        if (// step 7: on later than entry
        !skip)
            entry = formattingElements.get(++pos);
        // should not occur, as we break at last element
        Validate.notNull(entry);
        // 8. create new element from element, 9 insert into current node, onto stack
        // can only skip increment from 4.
        skip = false;
        // todo: avoid fostering here?
        Element newEl = insertStartTag(entry.nodeName());
        // newEl.namespace(entry.namespace()); // todo: namespaces
        newEl.attributes().addAll(entry.attributes());
        // 10. replace entry with new entry
        formattingElements.set(pos, newEl);
        // 11
        if (// if not last entry in list, jump to 7
        pos == size - 1)
            break;
    }
}","public void test05582() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.reconstructFormattingElements();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"// active formatting elements
void pushActiveFormattingElements(Element in) {
    int numSeen = 0;
    for (int pos = formattingElements.size() - 1; pos >= 0; pos--) {
        Element el = formattingElements.get(pos);
        if (// marker
        el == null)
            break;
        if (isSameFormattingElement(in, el))
            numSeen++;
        if (numSeen == 3) {
            formattingElements.remove(pos);
            break;
        }
    }
    formattingElements.add(in);
}","public void test05683() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""title"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"boolean process(Token token, HtmlTreeBuilderState state) {
    currentToken = token;
    return state.process(token, this);
}","public void test05784() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InColumnGroup;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.process((Token) null, htmlTreeBuilderState0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"@Override
protected boolean process(Token token) {
    currentToken = token;
    return this.state.process(token, this);
}","public void test05885() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.process((Token) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"// elnames is sorted, comes from Constants
void popStackToClose(String... elNames) {
    for (int pos = stack.size() - 1; pos >= 0; pos--) {
        Element next = stack.get(pos);
        stack.remove(pos);
        if (inSorted(next.nodeName(), elNames))
            break;
    }
}","public void test05986() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    String[] stringArray0 = new String[9];
    // Undeclared exception!
    try {
        htmlTreeBuilder0.popStackToClose(stringArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"void popStackToClose(String elName) {
    for (int pos = stack.size() - 1; pos >= 0; pos--) {
        Element next = stack.get(pos);
        stack.remove(pos);
        if (next.nodeName().equals(elName))
            break;
    }
}","public void test06087() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.popStackToClose(""GP~jos>D_eJn"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"void popStackToBefore(String elName) {
    for (int pos = stack.size() - 1; pos >= 0; pos--) {
        Element next = stack.get(pos);
        if (next.nodeName().equals(elName)) {
            break;
        } else {
            stack.remove(pos);
        }
    }
}","public void test06188() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.popStackToBefore(""jz"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"Element pop() {
    int size = stack.size();
    return stack.remove(size - 1);
}","public void test06289() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.pop();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"List<Node> parseFragment(String inputFragment, Element context, String baseUri, ParseErrorList errors, ParseSettings settings) {
    // context may be null
    state = HtmlTreeBuilderState.Initial;
    initialiseParse(new StringReader(inputFragment), baseUri, errors, settings);
    contextElement = context;
    fragmentParsing = true;
    Element root = null;
    if (context != null) {
        if (// quirks setup:
        context.ownerDocument() != null)
            doc.quirksMode(context.ownerDocument().quirksMode());
        // initialise the tokeniser state:
        String contextTag = context.tagName();
        if (StringUtil.in(contextTag, ""title"", ""textarea""))
            tokeniser.transition(TokeniserState.Rcdata);
        else if (StringUtil.in(contextTag, ""iframe"", ""noembed"", ""noframes"", ""style"", ""xmp""))
            tokeniser.transition(TokeniserState.Rawtext);
        else if (contextTag.equals(""script""))
            tokeniser.transition(TokeniserState.ScriptData);
        else if (contextTag.equals((""noscript"")))
            // if scripting enabled, rawtext
            tokeniser.transition(TokeniserState.Data);
        else if (contextTag.equals(""plaintext""))
            tokeniser.transition(TokeniserState.Data);
        else
            // default
            tokeniser.transition(TokeniserState.Data);
        root = new Element(Tag.valueOf(""html"", settings), baseUri);
        doc.appendChild(root);
        stack.add(root);
        resetInsertionMode();
        // setup form element to nearest form on context (up ancestor chain). ensures form controls are associated
        // with form correctly
        Elements contextChain = context.parents();
        contextChain.add(0, context);
        for (Element parent : contextChain) {
            if (parent instanceof FormElement) {
                formElement = (FormElement) parent;
                break;
            }
        }
    }
    runParser();
    if (context != null)
        return root.childNodes();
    else
        return doc.childNodes();
}","public void test06390() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(3308);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.parseFragment((String) null, (Element) null, """", parseErrorList0, (ParseSettings) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.io.StringReader"", e);
    }
}",""
"boolean onStack(Element el) {
    return isElementInQueue(stack, el);
}","public void test06491() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""  "");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.onStack(document0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"Element lastFormattingElement() {
    return formattingElements.size() > 0 ? formattingElements.get(formattingElements.size() - 1) : null;
}","public void test06592() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.lastFormattingElement();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"Element insertStartTag(String startTagName) {
    Element el = new Element(Tag.valueOf(startTagName, settings), baseUri);
    insert(el);
    return el;
}","public void test06693() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertStartTag(""x<ZA:/<"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"Element insertStartTag(String startTagName) {
    Element el = new Element(Tag.valueOf(startTagName, settings), baseUri);
    insert(el);
    return el;
}","public void test06794() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertStartTag(""li"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",""
"void insertInFosterParent(Node in) {
    Element fosterParent;
    Element lastTable = getFromStack(""table"");
    boolean isLastTableParent = false;
    if (lastTable != null) {
        if (lastTable.parent() != null) {
            fosterParent = lastTable.parent();
            isLastTableParent = true;
        } else
            fosterParent = aboveOnStack(lastTable);
    } else {
        // no table == frag
        fosterParent = stack.get(0);
    }
    if (isLastTableParent) {
        // last table cannot be null by this point.
        Validate.notNull(lastTable);
        lastTable.before(in);
    } else
        fosterParent.appendChild(in);
}","public void test06895() throws Throwable {
    Document document0 = new Document("""");
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertInFosterParent(document0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"void insertInFosterParent(Node in) {
    Element fosterParent;
    Element lastTable = getFromStack(""table"");
    boolean isLastTableParent = false;
    if (lastTable != null) {
        if (lastTable.parent() != null) {
            fosterParent = lastTable.parent();
            isLastTableParent = true;
        } else
            fosterParent = aboveOnStack(lastTable);
    } else {
        // no table == frag
        fosterParent = stack.get(0);
    }
    if (isLastTableParent) {
        // last table cannot be null by this point.
        Validate.notNull(lastTable);
        lastTable.before(in);
    } else
        fosterParent.appendChild(in);
}","public void test06996() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Element element0 = htmlTreeBuilder0.getHeadElement();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    htmlTreeBuilder0.popStackToBefore(""select"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertInFosterParent(element0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",""
"FormElement insertForm(Token.StartTag startTag, boolean onStack) {
    Tag tag = Tag.valueOf(startTag.name(), settings);
    FormElement el = new FormElement(tag, baseUri, startTag.attributes);
    setFormElement(el);
    insertNode(el);
    if (onStack)
        stack.add(el);
    return el;
}","public void test07097() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    Attributes attributes0 = new Attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""00"", attributes0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertForm(token_StartTag1, true);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"FormElement insertForm(Token.StartTag startTag, boolean onStack) {
    Tag tag = Tag.valueOf(startTag.name(), settings);
    FormElement el = new FormElement(tag, baseUri, startTag.attributes);
    setFormElement(el);
    insertNode(el);
    if (onStack)
        stack.add(el);
    return el;
}","public void test07198() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertForm(token_StartTag0, true);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",""
"Element insertEmpty(Token.StartTag startTag) {
    Tag tag = Tag.valueOf(startTag.name(), settings);
    Element el = new Element(tag, baseUri, startTag.attributes);
    insertNode(el);
    if (startTag.isSelfClosing()) {
        if (tag.isKnownTag()) {
            if (!tag.isEmpty())
                tokeniser.error(""Tag cannot be self closing; not a void tag"");
        } else
            // unknown tag, remember this is self closing for output
            tag.setSelfClosing();
    }
    return el;
}","public void test07299() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertEmpty((Token.StartTag) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"Element insertEmpty(Token.StartTag startTag) {
    Tag tag = Tag.valueOf(startTag.name(), settings);
    Element el = new Element(tag, baseUri, startTag.attributes);
    insertNode(el);
    if (startTag.isSelfClosing()) {
        if (tag.isKnownTag()) {
            if (!tag.isEmpty())
                tokeniser.error(""Tag cannot be self closing; not a void tag"");
        } else
            // unknown tag, remember this is self closing for output
            tag.setSelfClosing();
    }
    return el;
}","public void test073100() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    CharacterReader characterReader0 = new CharacterReader("""");
    ParseErrorList parseErrorList0 = new ParseErrorList(1537, 1537);
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertEmpty(token_StartTag0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",""
"Element insert(Token.StartTag startTag) {
    // handle empty unknown tags
    // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
    if (startTag.isSelfClosing()) {
        Element el = insertEmpty(startTag);
        stack.add(el);
        // handles <script />, otherwise needs breakout steps from script data
        tokeniser.transition(TokeniserState.Data);
        // ensure we get out of whatever state we are in. emitted for yielded processing
        tokeniser.emit(emptyEnd.reset().name(el.tagName()));
        return el;
    }
    Element el = new Element(Tag.valueOf(startTag.name(), settings), baseUri, settings.normalizeAttributes(startTag.attributes));
    insert(el);
    return el;
}","public void test074101() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    CharacterReader characterReader0 = new CharacterReader(""*|beb"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(0);
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Attributes attributes0 = new Attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""h5"", attributes0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert(token_StartTag1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"Element insert(Token.StartTag startTag) {
    // handle empty unknown tags
    // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
    if (startTag.isSelfClosing()) {
        Element el = insertEmpty(startTag);
        stack.add(el);
        // handles <script />, otherwise needs breakout steps from script data
        tokeniser.transition(TokeniserState.Data);
        // ensure we get out of whatever state we are in. emitted for yielded processing
        tokeniser.emit(emptyEnd.reset().name(el.tagName()));
        return el;
    }
    Element el = new Element(Tag.valueOf(startTag.name(), settings), baseUri, settings.normalizeAttributes(startTag.attributes));
    insert(el);
    return el;
}","public void test075102() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert(token_StartTag0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",""
"void insert(Token.Comment commentToken) {
    Comment comment = new Comment(commentToken.getData());
    insertNode(comment);
}","public void test076103() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Token.Comment token_Comment0 = new Token.Comment();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert(token_Comment0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"void insert(Token.Character characterToken) {
    Node node;
    // characters in script and style go in as datanodes, not text nodes
    String tagName = currentElement().tagName();
    if (tagName.equals(""script"") || tagName.equals(""style""))
        node = new DataNode(characterToken.getData());
    else
        node = new TextNode(characterToken.getData());
    // doesn't use insertNode, because we don't foster these; and will always have a stack.
    currentElement().appendChild(node);
}","public void test077104() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Token.Character token_Character0 = new Token.Character();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert(token_Character0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"void insert(Element el) {
    insertNode(el);
    stack.add(el);
}","public void test078105() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell("";"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert(document0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"void insert(Element el) {
    insertNode(el);
    stack.add(el);
}","public void test079106() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert((Element) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",""
"@Override
protected void initialiseParse(Reader input, String baseUri, ParseErrorList errors, ParseSettings settings) {
    super.initialiseParse(input, baseUri, errors, settings);
    // this is a bit mucky. todo - probably just create new parser objects to ensure all reset.
    state = HtmlTreeBuilderState.Initial;
    originalState = null;
    baseUriSetFromDoc = false;
    headElement = null;
    formElement = null;
    contextElement = null;
    formattingElements = new ArrayList<>();
    pendingTableCharacters = new ArrayList<>();
    emptyEnd = new Token.EndTag();
    framesetOk = true;
    fosterInserts = false;
    fragmentParsing = false;
}","public void test080107() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    PipedWriter pipedWriter0 = new PipedWriter();
    PipedReader pipedReader0 = new PipedReader(pipedWriter0);
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.initialiseParse(pipedReader0, ""InCaption"", parseErrorList0, parseSettings0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",""
"boolean inSelectScope(String targetName) {
    for (int pos = stack.size() - 1; pos >= 0; pos--) {
        Element el = stack.get(pos);
        String elName = el.nodeName();
        if (elName.equals(targetName))
            return true;
        if (// all elements except
        !inSorted(elName, TagSearchSelectScope))
            return false;
    }
    Validate.fail(""Should not be reachable"");
    return false;
}","public void test081108() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inSelectScope(""p"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"Element getFromStack(String elName) {
    for (int pos = stack.size() - 1; pos >= 0; pos--) {
        Element next = stack.get(pos);
        if (next.nodeName().equals(elName)) {
            return next;
        }
    }
    return null;
}","public void test082109() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.getFromStack(""=F;IDUlNd?m>"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"Element getActiveFormattingElement(String nodeName) {
    for (int pos = formattingElements.size() - 1; pos >= 0; pos--) {
        Element next = formattingElements.get(pos);
        if (// scope marker
        next == null)
            break;
        else if (next.nodeName().equals(nodeName))
            return next;
    }
    return null;
}","public void test083110() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.getActiveFormattingElement((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"void error(HtmlTreeBuilderState state) {
    if (errors.canAddError())
        errors.add(new ParseError(reader.pos(), ""Unexpected token [%s] when in state [%s]"", currentToken.tokenType(), state));
}","public void test084111() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterFrameset;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.error(htmlTreeBuilderState0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"void clearFormattingElementsToLastMarker() {
    while (!formattingElements.isEmpty()) {
        Element el = removeLastFormattingElement();
        if (el == null)
            break;
    }
}","public void test085112() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
    }
}",""
"Element lastFormattingElement() {
    return formattingElements.size() > 0 ? formattingElements.get(formattingElements.size() - 1) : null;
}","public void test086113() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Element element0 = htmlTreeBuilder0.getHeadElement();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    Element element1 = htmlTreeBuilder0.lastFormattingElement();
    assertNull(element1);
}",""
"Element getActiveFormattingElement(String nodeName) {
    for (int pos = formattingElements.size() - 1; pos >= 0; pos--) {
        Element next = formattingElements.get(pos);
        if (// scope marker
        next == null)
            break;
        else if (next.nodeName().equals(nodeName))
            return next;
    }
    return null;
}","public void test087114() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    Element element1 = htmlTreeBuilder0.getActiveFormattingElement(""{au7]/EQH*mMS"");
    assertNull(element1);
}",""
"Element getActiveFormattingElement(String nodeName) {
    for (int pos = formattingElements.size() - 1; pos >= 0; pos--) {
        Element next = formattingElements.get(pos);
        if (// scope marker
        next == null)
            break;
        else if (next.nodeName().equals(nodeName))
            return next;
    }
    return null;
}","public void test088115() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Element element0 = htmlTreeBuilder0.getHeadElement();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    Element element1 = htmlTreeBuilder0.getActiveFormattingElement(""{au7]/EQH*mMS"");
    assertNull(element1);
}",""
"Element getActiveFormattingElement(String nodeName) {
    for (int pos = formattingElements.size() - 1; pos >= 0; pos--) {
        Element next = formattingElements.get(pos);
        if (// scope marker
        next == null)
            break;
        else if (next.nodeName().equals(nodeName))
            return next;
    }
    return null;
}","public void test089116() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.getActiveFormattingElement(""{au7]/EQH*mMS"");
    assertNull(element0);
}",""
"void removeFromActiveFormattingElements(Element el) {
    for (int pos = formattingElements.size() - 1; pos >= 0; pos--) {
        Element next = formattingElements.get(pos);
        if (next == el) {
            formattingElements.remove(pos);
            break;
        }
    }
}","public void test090117() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    htmlTreeBuilder0.removeFromActiveFormattingElements((Element) null);
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"void removeFromActiveFormattingElements(Element el) {
    for (int pos = formattingElements.size() - 1; pos >= 0; pos--) {
        Element next = formattingElements.get(pos);
        if (next == el) {
            formattingElements.remove(pos);
            break;
        }
    }
}","public void test091118() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Element element0 = htmlTreeBuilder0.getHeadElement();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    htmlTreeBuilder0.removeFromActiveFormattingElements((Element) null);
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"void removeFromActiveFormattingElements(Element el) {
    for (int pos = formattingElements.size() - 1; pos >= 0; pos--) {
        Element next = formattingElements.get(pos);
        if (next == el) {
            formattingElements.remove(pos);
            break;
        }
    }
}","public void test092119() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    htmlTreeBuilder0.removeFromActiveFormattingElements((Element) null);
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"void clearFormattingElementsToLastMarker() {
    while (!formattingElements.isEmpty()) {
        Element el = removeLastFormattingElement();
        if (el == null)
            break;
    }
}","public void test093120() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    htmlTreeBuilder0.clearFormattingElementsToLastMarker();
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"void clearFormattingElementsToLastMarker() {
    while (!formattingElements.isEmpty()) {
        Element el = removeLastFormattingElement();
        if (el == null)
            break;
    }
}","public void test094121() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Element element0 = htmlTreeBuilder0.getHeadElement();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    htmlTreeBuilder0.clearFormattingElementsToLastMarker();
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"Element removeLastFormattingElement() {
    int size = formattingElements.size();
    if (size > 0)
        return formattingElements.remove(size - 1);
    else
        return null;
}","public void test095122() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""frameset"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(100);
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.initialiseParse(stringReader0, ""frameset"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
    assertNull(element0);
}",""
"void generateImpliedEndTags(String excludeTag) {
    while ((excludeTag != null && !currentElement().nodeName().equals(excludeTag)) && inSorted(currentElement().nodeName(), TagSearchEndTags)) pop();
}","public void test096123() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    htmlTreeBuilder0.generateImpliedEndTags("""");
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}","/**
 *     11.2.5.2 Closing elements that have implied end tags<p/>
 *     When the steps below require the UA to generate implied end tags, then, while the current node is a dd element, a
 *     dt element, an li element, an option element, an optgroup element, a p element, an rp element, or an rt element,
 *     the UA must pop the current node off the stack of open elements.
 *
 *     @param excludeTag If a step requires the UA to generate implied end tags but lists an element to exclude from the
 *     process, then the UA must perform the above steps as if that element was not in the above list.
 */"
"void generateImpliedEndTags(String excludeTag) {
    while ((excludeTag != null && !currentElement().nodeName().equals(excludeTag)) && inSorted(currentElement().nodeName(), TagSearchEndTags)) pop();
}","public void test097124() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.generateImpliedEndTags("""");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}","/**
 *     11.2.5.2 Closing elements that have implied end tags<p/>
 *     When the steps below require the UA to generate implied end tags, then, while the current node is a dd element, a
 *     dt element, an li element, an option element, an optgroup element, a p element, an rp element, or an rt element,
 *     the UA must pop the current node off the stack of open elements.
 *
 *     @param excludeTag If a step requires the UA to generate implied end tags but lists an element to exclude from the
 *     process, then the UA must perform the above steps as if that element was not in the above list.
 */"
"boolean inSelectScope(String targetName) {
    for (int pos = stack.size() - 1; pos >= 0; pos--) {
        Element el = stack.get(pos);
        String elName = el.nodeName();
        if (elName.equals(targetName))
            return true;
        if (// all elements except
        !inSorted(elName, TagSearchSelectScope))
            return false;
    }
    Validate.fail(""Should not be reachable"");
    return false;
}","public void test098125() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""frame"");
    Elements elements0 = document0.getAllElements();
    htmlTreeBuilder0.stack = (ArrayList<Element>) elements0;
    boolean boolean0 = htmlTreeBuilder0.inSelectScope(""wbr"");
    assertFalse(boolean0);
}",""
"boolean inSelectScope(String targetName) {
    for (int pos = stack.size() - 1; pos >= 0; pos--) {
        Element el = stack.get(pos);
        String elName = el.nodeName();
        if (elName.equals(targetName))
            return true;
        if (// all elements except
        !inSorted(elName, TagSearchSelectScope))
            return false;
    }
    Validate.fail(""Should not be reachable"");
    return false;
}","public void test099126() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    String[] stringArray0 = new String[0];
    htmlTreeBuilder0.popStackToClose(stringArray0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inSelectScope(""section"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Should not be reachable
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",""
"boolean inScope(String targetName) {
    return inScope(targetName, null);
}","public void test100127() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.inScope("""");
    assertFalse(boolean0);
}",""
"boolean inButtonScope(String targetName) {
    return inScope(targetName, TagSearchButton);
}","public void test101128() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    htmlTreeBuilder0.inButtonScope("""");
}",""
"void resetInsertionMode() {
    boolean last = false;
    for (int pos = stack.size() - 1; pos >= 0; pos--) {
        Element node = stack.get(pos);
        if (pos == 0) {
            last = true;
            node = contextElement;
        }
        String name = node.nodeName();
        if (""select"".equals(name)) {
            transition(HtmlTreeBuilderState.InSelect);
            // frag
            break;
        } else if ((""td"".equals(name) || ""th"".equals(name) && !last)) {
            transition(HtmlTreeBuilderState.InCell);
            break;
        } else if (""tr"".equals(name)) {
            transition(HtmlTreeBuilderState.InRow);
            break;
        } else if (""tbody"".equals(name) || ""thead"".equals(name) || ""tfoot"".equals(name)) {
            transition(HtmlTreeBuilderState.InTableBody);
            break;
        } else if (""caption"".equals(name)) {
            transition(HtmlTreeBuilderState.InCaption);
            break;
        } else if (""colgroup"".equals(name)) {
            transition(HtmlTreeBuilderState.InColumnGroup);
            // frag
            break;
        } else if (""table"".equals(name)) {
            transition(HtmlTreeBuilderState.InTable);
            break;
        } else if (""head"".equals(name)) {
            transition(HtmlTreeBuilderState.InBody);
            // frag
            break;
        } else if (""body"".equals(name)) {
            transition(HtmlTreeBuilderState.InBody);
            break;
        } else if (""frameset"".equals(name)) {
            transition(HtmlTreeBuilderState.InFrameset);
            // frag
            break;
        } else if (""html"".equals(name)) {
            transition(HtmlTreeBuilderState.BeforeHead);
            // frag
            break;
        } else if (last) {
            transition(HtmlTreeBuilderState.InBody);
            // frag
            break;
        }
    }
}","public void test102129() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""ScriptDataDoubleEscapeEnd"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    htmlTreeBuilder0.resetInsertionMode();
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"@Override
public String baseUri() {
    return baseUri;
}","public void test103130() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.replaceOnStack(element0, element0);
    assertEquals("""", element0.baseUri());
}",""
"public int siblingIndex() {
    return siblingIndex;
}","public void test103131() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.replaceOnStack(element0, element0);
    assertEquals(1, element0.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"void replaceOnStack(Element out, Element in) {
    replaceInQueue(stack, out, in);
}","public void test104132() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.replaceOnStack((Element) null, (Element) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",""
"void insertOnStackAfter(Element after, Element in) {
    int i = stack.lastIndexOf(after);
    Validate.isTrue(i != -1);
    stack.add(i + 1, in);
}","public void test105133() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""bgsound"");
    Elements elements0 = document0.siblingElements();
    htmlTreeBuilder0.stack = (ArrayList<Element>) elements0;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertOnStackAfter(document0, document0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",""
"Element aboveOnStack(Element el) {
    assert onStack(el);
    for (int pos = stack.size() - 1; pos >= 0; pos--) {
        Element next = stack.get(pos);
        if (next == el) {
            return stack.get(pos - 1);
        }
    }
    return null;
}","public void test106134() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Tag tag0 = Tag.valueOf(""thead"");
    Element element0 = new Element(tag0, ""XGMY26{Sq-DXRq`"");
    ParseErrorList parseErrorList0 = new ParseErrorList(100, (-2682));
    htmlTreeBuilder0.parseFragment(""thead"", element0, ""noscript"", parseErrorList0, (ParseSettings) null);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.aboveOnStack(element0);
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"Element aboveOnStack(Element el) {
    assert onStack(el);
    for (int pos = stack.size() - 1; pos >= 0; pos--) {
        Element next = stack.get(pos);
        if (next == el) {
            return stack.get(pos - 1);
        }
    }
    return null;
}","public void test107135() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Tag tag0 = Tag.valueOf(""thead"");
    Element element0 = new Element(tag0, ""XGMY26{Sq-DXRq`"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.aboveOnStack(element0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"void clearStackToTableBodyContext() {
    clearStackToContext(""tbody"", ""tfoot"", ""thead"", ""template"");
}","public void test108136() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""bgsound"");
    Elements elements0 = document0.siblingElements();
    htmlTreeBuilder0.stack = (ArrayList<Element>) elements0;
    htmlTreeBuilder0.clearStackToTableBodyContext();
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"void resetInsertionMode() {
    boolean last = false;
    for (int pos = stack.size() - 1; pos >= 0; pos--) {
        Element node = stack.get(pos);
        if (pos == 0) {
            last = true;
            node = contextElement;
        }
        String name = node.nodeName();
        if (""select"".equals(name)) {
            transition(HtmlTreeBuilderState.InSelect);
            // frag
            break;
        } else if ((""td"".equals(name) || ""th"".equals(name) && !last)) {
            transition(HtmlTreeBuilderState.InCell);
            break;
        } else if (""tr"".equals(name)) {
            transition(HtmlTreeBuilderState.InRow);
            break;
        } else if (""tbody"".equals(name) || ""thead"".equals(name) || ""tfoot"".equals(name)) {
            transition(HtmlTreeBuilderState.InTableBody);
            break;
        } else if (""caption"".equals(name)) {
            transition(HtmlTreeBuilderState.InCaption);
            break;
        } else if (""colgroup"".equals(name)) {
            transition(HtmlTreeBuilderState.InColumnGroup);
            // frag
            break;
        } else if (""table"".equals(name)) {
            transition(HtmlTreeBuilderState.InTable);
            break;
        } else if (""head"".equals(name)) {
            transition(HtmlTreeBuilderState.InBody);
            // frag
            break;
        } else if (""body"".equals(name)) {
            transition(HtmlTreeBuilderState.InBody);
            break;
        } else if (""frameset"".equals(name)) {
            transition(HtmlTreeBuilderState.InFrameset);
            // frag
            break;
        } else if (""html"".equals(name)) {
            transition(HtmlTreeBuilderState.BeforeHead);
            // frag
            break;
        } else if (last) {
            transition(HtmlTreeBuilderState.InBody);
            // frag
            break;
        }
    }
}","public void test109137() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    String[] stringArray0 = new String[0];
    htmlTreeBuilder0.popStackToClose(stringArray0);
    htmlTreeBuilder0.resetInsertionMode();
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"Element pop() {
    int size = stack.size();
    return stack.remove(size - 1);
}","public void test110138() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    htmlTreeBuilder0.popStackToClose("""");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.pop();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public int siblingIndex() {
    return siblingIndex;
}","public void test111139() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    boolean boolean0 = htmlTreeBuilder0.removeFromStack(element0);
    assertEquals(1, element0.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"boolean removeFromStack(Element el) {
    for (int pos = stack.size() - 1; pos >= 0; pos--) {
        Element next = stack.get(pos);
        if (next == el) {
            stack.remove(pos);
            return true;
        }
    }
    return false;
}","public void test111140() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    boolean boolean0 = htmlTreeBuilder0.removeFromStack(element0);
    assertTrue(boolean0);
}",""
"@Override
public String baseUri() {
    return baseUri;
}","public void test111141() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    boolean boolean0 = htmlTreeBuilder0.removeFromStack(element0);
    Element element1 = htmlTreeBuilder0.pop();
    assertEquals("""", element1.baseUri());
}",""
"@Override
public int childNodeSize() {
    return childNodes.size();
}","public void test111142() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    boolean boolean0 = htmlTreeBuilder0.removeFromStack(element0);
    Element element1 = htmlTreeBuilder0.pop();
    assertEquals(2, element1.childNodeSize());
}",""
"boolean removeFromStack(Element el) {
    for (int pos = stack.size() - 1; pos >= 0; pos--) {
        Element next = stack.get(pos);
        if (next == el) {
            stack.remove(pos);
            return true;
        }
    }
    return false;
}","public void test112143() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""0vd[>jhEOMAh88s'"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    Document document0 = htmlTreeBuilder0.parse(stringReader0, ""select"", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
    assertFalse(boolean0);
}",""
"@Override
public int childNodeSize() {
    return childNodes.size();
}","public void test112144() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""0vd[>jhEOMAh88s'"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    Document document0 = htmlTreeBuilder0.parse(stringReader0, ""select"", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
    assertEquals(1, document0.childNodeSize());
}",""
"void insertInFosterParent(Node in) {
    Element fosterParent;
    Element lastTable = getFromStack(""table"");
    boolean isLastTableParent = false;
    if (lastTable != null) {
        if (lastTable.parent() != null) {
            fosterParent = lastTable.parent();
            isLastTableParent = true;
        } else
            fosterParent = aboveOnStack(lastTable);
    } else {
        // no table == frag
        fosterParent = stack.get(0);
    }
    if (isLastTableParent) {
        // last table cannot be null by this point.
        Validate.notNull(lastTable);
        lastTable.before(in);
    } else
        fosterParent.appendChild(in);
}","public void test113145() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Element element0 = htmlTreeBuilder0.getHeadElement();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertInFosterParent(element0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",""
"public int siblingIndex() {
    return siblingIndex;
}","public void test114146() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Comment comment0 = new Comment(""=J4<}9]G}p;^"");
    Attributes attributes0 = comment0.attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""y72vu"", attributes0);
    Element element0 = htmlTreeBuilder0.insertEmpty(token_StartTag1);
    assertEquals(1, element0.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"@Override
public String baseUri() {
    return baseUri;
}","public void test114147() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Comment comment0 = new Comment(""=J4<}9]G}p;^"");
    Attributes attributes0 = comment0.attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""y72vu"", attributes0);
    Element element0 = htmlTreeBuilder0.insertEmpty(token_StartTag1);
    assertEquals("""", element0.baseUri());
}",""
"@Override
public String baseUri() {
    return baseUri;
}","public void test116150() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.maybeSetBaseUri(element0);
    assertEquals("""", element0.baseUri());
}",""
"public int siblingIndex() {
    return siblingIndex;
}","public void test116151() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.maybeSetBaseUri(element0);
    assertEquals(1, element0.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"void maybeSetBaseUri(Element base) {
    if (// only listen to the first <base href> in parse
    baseUriSetFromDoc)
        return;
    String href = base.absUrl(""href"");
    if (href.length() != 0) {
        // ignore <base target> etc
        baseUri = href;
        baseUriSetFromDoc = true;
        // set on the doc so doc.createElement(Tag) will get updated base, and to update all descendants
        doc.setBaseUri(href);
    }
}","public void test117152() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Element element0 = htmlTreeBuilder0.getHeadElement();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.maybeSetBaseUri(element0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"public int siblingIndex() {
    return siblingIndex;
}","public void test119154() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    element0.before("""");
    assertEquals(3, element0.siblingIndex());
}","/**
 * Get the list index of this node in its node sibling list. I.e. if this is the first node
 * sibling, returns 0.
 * @return position in node sibling list
 * @see org.jsoup.nodes.Element#elementSiblingIndex()
 */"
"void clearStackToTableContext() {
    clearStackToContext(""table"");
}","public void test120155() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.clearStackToTableContext();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"boolean inTableScope(String targetName) {
    return inSpecificScope(targetName, TagSearchTableScope, null);
}","public void test121156() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inTableScope((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"@Override
protected boolean process(Token token) {
    currentToken = token;
    return this.state.process(token, this);
}","public void test122157() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Token.Comment token_Comment0 = new Token.Comment();
    boolean boolean0 = htmlTreeBuilder0.process(token_Comment0);
    assertTrue(boolean0);
}",""
"void push(Element element) {
    stack.add(element);
}","public void test123158() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""DB`-o]]Ecrdte0H^>r"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.push(document0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"void setFosterInserts(boolean fosterInserts) {
    this.fosterInserts = fosterInserts;
}","public void test124159() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.setFosterInserts(false);
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"void replaceActiveFormattingElement(Element out, Element in) {
    replaceInQueue(formattingElements, out, in);
}","public void test125160() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.replaceActiveFormattingElement((Element) null, (Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"boolean isFragmentParsing() {
    return fragmentParsing;
}","public void test126161() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
    assertFalse(boolean0);
}",""
"boolean isInActiveFormattingElements(Element el) {
    return isElementInQueue(formattingElements, el);
}","public void test127162() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.isInActiveFormattingElements((Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"String getBaseUri() {
    return baseUri;
}","public void test128163() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    String string0 = htmlTreeBuilder0.getBaseUri();
    assertNull(string0);
}",""
"boolean inScope(String targetName) {
    return inScope(targetName, null);
}","public void test129164() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inScope("""");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"Document getDocument() {
    return doc;
}","public void test130165() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.getDocument();
    assertNull(document0);
}",""
"void setPendingTableCharacters(List<String> pendingTableCharacters) {
    this.pendingTableCharacters = pendingTableCharacters;
}","public void test131166() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.setPendingTableCharacters((List<String>) null);
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"boolean inScope(String[] targetNames) {
    return inSpecificScope(targetNames, TagsSearchInScope, null);
}","public void test132167() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    String[] stringArray0 = new String[5];
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inScope(stringArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"HtmlTreeBuilderState state() {
    return state;
}","public void test133168() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.state();
}",""
"boolean inButtonScope(String targetName) {
    return inScope(targetName, TagSearchButton);
}","public void test134169() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inButtonScope("""");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"void clearStackToTableRowContext() {
    clearStackToContext(""tr"", ""template"");
}","public void test135170() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.clearStackToTableRowContext();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"FormElement getFormElement() {
    return formElement;
}","public void test136171() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    FormElement formElement0 = htmlTreeBuilder0.getFormElement();
    assertNull(formElement0);
}",""
"void insertMarkerToFormattingElements() {
    formattingElements.add(null);
}","public void test137172() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertMarkerToFormattingElements();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"void generateImpliedEndTags() {
    generateImpliedEndTags(null);
}","public void test138173() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.generateImpliedEndTags();
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"Element aboveOnStack(Element el) {
    assert onStack(el);
    for (int pos = stack.size() - 1; pos >= 0; pos--) {
        Element next = stack.get(pos);
        if (next == el) {
            return stack.get(pos - 1);
        }
    }
    return null;
}","public void test139174() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Tag tag0 = Tag.valueOf(""thead"");
    Element element0 = new Element(tag0, ""XGMY26{Sq-DXRq`"");
    ParseErrorList parseErrorList0 = new ParseErrorList(100, (-2682));
    htmlTreeBuilder0.parseFragment(""thead"", element0, ""noscript"", parseErrorList0, (ParseSettings) null);
    Element element1 = htmlTreeBuilder0.currentElement();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.aboveOnStack(element1);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"@Override
public String toString() {
    return ""TreeBuilder{"" + ""currentToken="" + currentToken + "", state="" + state + "", currentElement="" + currentElement() + '}';
}","public void test140175() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.toString();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"boolean inListItemScope(String targetName) {
    return inScope(targetName, TagSearchList);
}","public void test141176() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inListItemScope("""");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"void clearStackToTableBodyContext() {
    clearStackToContext(""tbody"", ""tfoot"", ""thead"", ""template"");
}","public void test142177() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.clearStackToTableBodyContext();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"ArrayList<Element> getStack() {
    return stack;
}","public void test143178() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
    assertNull(arrayList0);
}",""
"void setFormElement(FormElement formElement) {
    this.formElement = formElement;
}","public void test144179() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.setFormElement((FormElement) null);
    assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
}",""
"boolean isSpecial(Element el) {
    // todo: mathml's mi, mo, mn
    // todo: svg's foreigObject, desc, title
    String name = el.nodeName();
    return inSorted(name, TagSearchSpecial);
}","public void test145180() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Element element0 = htmlTreeBuilder0.getHeadElement();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.isSpecial(element0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"boolean inScope(String targetName, String[] extras) {
    return inSpecificScope(targetName, TagsSearchInScope, extras);
    // todo: in mathml namespace: mi, mo, mn, ms, mtext annotation-xml
    // todo: in svg namespace: forignOjbect, desc, title
}","public void test146181() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    String[] stringArray0 = new String[2];
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inScope(""sl*oIO"", stringArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",""
"void reconstructFormattingElements() {
    Element last = lastFormattingElement();
    if (last == null || onStack(last))
        return;
    Element entry = last;
    int size = formattingElements.size();
    int pos = size - 1;
    boolean skip = false;
    while (true) {
        if (pos == 0) {
            // step 4. if none before, skip to 8
            skip = true;
            break;
        }
        // step 5. one earlier than entry
        entry = formattingElements.get(--pos);
        if (// step 6 - neither marker nor on stack
        entry == null || onStack(entry))
            // jump to 8, else continue back to 4
            break;
    }
    while (true) {
        if (// step 7: on later than entry
        !skip)
            entry = formattingElements.get(++pos);
        // should not occur, as we break at last element
        Validate.notNull(entry);
        // 8. create new element from element, 9 insert into current node, onto stack
        // can only skip increment from 4.
        skip = false;
        // todo: avoid fostering here?
        Element newEl = insertStartTag(entry.nodeName());
        // newEl.namespace(entry.namespace()); // todo: namespaces
        newEl.attributes().addAll(entry.attributes());
        // 10. replace entry with new entry
        formattingElements.set(pos, newEl);
        // 11
        if (// if not last entry in list, jump to 7
        pos == size - 1)
            break;
    }
}","public void test147182() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""on"", (Element) null, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    htmlTreeBuilder0.reconstructFormattingElements();
}",""
"boolean process(Token token, HtmlTreeBuilderState state) {
    currentToken = token;
    return state.process(token, this);
}","public void test148183() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Token.Character token_Character0 = new Token.Character();
    token_Character0.data(""S;/I'\""N "");
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.Initial;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.process(token_Character0, htmlTreeBuilderState0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",""
