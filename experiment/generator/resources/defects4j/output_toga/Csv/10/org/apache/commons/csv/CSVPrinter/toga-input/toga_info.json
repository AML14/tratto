{
  "test1212" : {
    "methodSignature" : "public void print(final Object value) throws IOException",
    "methodName" : "print",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.DEFAULT;\n    CharBuffer charBuffer0 = CharBuffer.allocate(0);\n    CSVPrinter cSVPrinter0 = cSVFormat0.print(charBuffer0);\n    cSVPrinter0.print(cSVFormat0);\n}",
    "testName" : "test1212"
  },
  "test2324" : {
    "methodSignature" : "public void printComment(final String comment) throws IOException",
    "methodName" : "printComment",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2324() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.DEFAULT;\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\">{Dz~nER$ 3[Z~zTxip\");\n    CSVPrinter cSVPrinter0 = cSVFormat0.print(mockPrintStream0);\n    cSVPrinter0.printComment(\"\");\n}",
    "testName" : "test2324"
  },
  "test1313" : {
    "methodSignature" : "public void flush() throws IOException",
    "methodName" : "flush",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.TDF;\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"M%+A%RMx~,Ds\");\n    OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(mockFileOutputStream0);\n    outputStreamWriter0.close();\n    CSVPrinter cSVPrinter0 = cSVFormat0.print(outputStreamWriter0);\n    cSVPrinter0.flush();\n}",
    "testName" : "test1313"
  },
  "test2425" : {
    "methodSignature" : "public void printRecords(final Object[] values) throws IOException",
    "methodName" : "printRecords",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2425() throws Throwable {\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(\"/3kPo[q{N7q&\");\n    CSVFormat cSVFormat0 = CSVFormat.newFormat('j');\n    CSVFormat cSVFormat1 = cSVFormat0.withQuoteChar('\\\\');\n    CSVPrinter cSVPrinter0 = new CSVPrinter(mockPrintWriter0, cSVFormat1);\n    Object[] objectArray0 = new Object[1];\n    objectArray0[0] = (Object) mockPrintWriter0;\n    cSVPrinter0.printRecords(objectArray0);\n}",
    "testName" : "test2425"
  },
  "test2930" : {
    "methodSignature" : "public void flush() throws IOException",
    "methodName" : "flush",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2930() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.newFormat('G');\n    StringWriter stringWriter0 = new StringWriter(0);\n    CSVPrinter cSVPrinter0 = cSVFormat0.print(stringWriter0);\n    cSVPrinter0.flush();\n}",
    "testName" : "test2930"
  },
  "test1010" : {
    "methodSignature" : "public void printRecord(final Iterable<?> values) throws IOException",
    "methodName" : "printRecord",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.RFC4180;\n    StringWriter stringWriter0 = new StringWriter(1295);\n    CSVPrinter cSVPrinter0 = cSVFormat0.print(stringWriter0);\n    cSVPrinter0.printRecord((Iterable<?>) null);\n}",
    "testName" : "test1010"
  },
  "test3233" : {
    "methodSignature" : "public Appendable getOut()",
    "methodName" : "getOut",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3233() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.newFormat('$');\n    MockFileWriter mockFileWriter0 = new MockFileWriter(\"org.apache.commons.csv.CSVPrinter$1\", false);\n    CSVPrinter cSVPrinter0 = cSVFormat0.print(mockFileWriter0);\n    Appendable appendable0 = cSVPrinter0.getOut();\n}",
    "testName" : "test3233"
  },
  "test1111" : {
    "methodSignature" : "public void printComment(final String comment) throws IOException",
    "methodName" : "printComment",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1754);\n    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0, true);\n    CSVFormat cSVFormat0 = CSVFormat.MYSQL;\n    CSVFormat cSVFormat1 = cSVFormat0.withCommentStart('+');\n    CSVPrinter cSVPrinter0 = new CSVPrinter(mockPrintWriter0, cSVFormat1);\n    cSVPrinter0.printComment((String) null);\n}",
    "testName" : "test1111"
  },
  "test000" : {
    "methodSignature" : "public void print(final Object value) throws IOException",
    "methodName" : "print",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.newFormat('R');\n    CSVFormat cSVFormat1 = cSVFormat0.withEscape('d');\n    CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);\n    CSVPrinter cSVPrinter0 = cSVFormat1.print(charArrayWriter0);\n    cSVPrinter0.print(charArrayWriter0);\n}",
    "testName" : "test000"
  },
  "test011" : {
    "methodSignature" : "public void printRecords(final Object[] values) throws IOException",
    "methodName" : "printRecords",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Charset charset0 = Charset.defaultCharset();\n    ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(30);\n    CharBuffer charBuffer0 = charset0.decode(byteBuffer0);\n    CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);\n    CSVFormat cSVFormat0 = CSVFormat.DEFAULT;\n    CSVPrinter cSVPrinter0 = new CSVPrinter(charBuffer1, cSVFormat0);\n    Object[] objectArray0 = new Object[3];\n    cSVPrinter0.printRecords(objectArray0);\n}",
    "testName" : "test011"
  },
  "test022" : {
    "methodSignature" : "public void printRecords(final Object[] values) throws IOException",
    "methodName" : "printRecords",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.newFormat('5');\n    CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);\n    CSVPrinter cSVPrinter0 = cSVFormat0.print(charArrayWriter0);\n    cSVPrinter0.printRecords((Object[]) null);\n}",
    "testName" : "test022"
  },
  "test033" : {
    "methodSignature" : "public void printRecords(final Object[] values) throws IOException",
    "methodName" : "printRecords",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.TDF;\n    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"M%+A%RMx~,Ds\");\n    OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(mockFileOutputStream0);\n    CSVPrinter cSVPrinter0 = cSVFormat0.print(outputStreamWriter0);\n    cSVPrinter0.close();\n    Object[] objectArray0 = new Object[2];\n    cSVPrinter0.printRecords(objectArray0);\n}",
    "testName" : "test033"
  },
  "test044" : {
    "methodSignature" : "public void printRecords(final ResultSet resultSet) throws SQLException, IOException",
    "methodName" : "printRecords",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.DEFAULT;\n    CharArrayWriter charArrayWriter0 = new CharArrayWriter();\n    CSVPrinter cSVPrinter0 = cSVFormat0.print(charArrayWriter0);\n    ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());\n    doReturn(2876).when(resultSetMetaData0).getColumnCount();\n    ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());\n    doReturn(resultSetMetaData0).when(resultSet0).getMetaData();\n    doReturn(\"dMWn|h+[{SVr/Af{l\", \"dMWn|h+[{SVr/Af{l\", \"dMWn|h+[{SVr/Af{l\", \"\\u0085\", \"\").when(resultSet0).getString(anyInt());\n    doReturn(true).when(resultSet0).next();\n    // Undeclared exception!\n    cSVPrinter0.printRecords(resultSet0);\n}",
    "testName" : "test044"
  },
  "test055" : {
    "methodSignature" : "public void printRecords(final ResultSet resultSet) throws SQLException, IOException",
    "methodName" : "printRecords",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.TDF;\n    CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) \"$zqx9U\");\n    CSVPrinter cSVPrinter0 = cSVFormat0.print(charBuffer0);\n    cSVPrinter0.printRecords((ResultSet) null);\n}",
    "testName" : "test055"
  },
  "test066" : {
    "methodSignature" : "public void printRecords(final Iterable<?> values) throws IOException",
    "methodName" : "printRecords",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1754);\n    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0, true);\n    CSVFormat cSVFormat0 = CSVFormat.MYSQL;\n    CSVPrinter cSVPrinter0 = new CSVPrinter(mockPrintWriter0, cSVFormat0);\n    cSVPrinter0.printRecords((Iterable<?>) null);\n}",
    "testName" : "test066"
  },
  "test2728" : {
    "methodSignature" : "public void printRecords(final Object[] values) throws IOException",
    "methodName" : "printRecords",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2728() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1754);\n    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0, true);\n    CSVFormat cSVFormat0 = CSVFormat.MYSQL;\n    CSVPrinter cSVPrinter0 = new CSVPrinter(mockPrintWriter0, cSVFormat0);\n    Object[] objectArray0 = new Object[3];\n    objectArray0[0] = (Object) cSVFormat0;\n    cSVPrinter0.printRecords(objectArray0);\n}",
    "testName" : "test2728"
  },
  "test2829" : {
    "methodSignature" : "public String format(final Object... values)",
    "methodName" : "format",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2829() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.newFormat('G');\n    Object[] objectArray0 = new Object[5];\n    objectArray0[0] = (Object) cSVFormat0;\n    String string0 = cSVFormat0.format(objectArray0);\n}",
    "testName" : "test2829"
  },
  "test1414" : {
    "methodSignature" : "public CSVPrinter(final Appendable out, final CSVFormat format) throws IOException",
    "methodName" : "CSVPrinter",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(\"\\\"\");\n    CSVFormat cSVFormat0 = CSVFormat.newFormat('c');\n    CSVFormat cSVFormat1 = cSVFormat0.withCommentStart('c');\n    CSVFormat cSVFormat2 = cSVFormat1.withEscape((Character) null);\n    CSVPrinter cSVPrinter0 = null;\n    cSVPrinter0 = new CSVPrinter(mockPrintWriter0, cSVFormat2);\n}",
    "testName" : "test1414"
  },
  "test2526" : {
    "methodSignature" : "public void printRecords(final Object[] values) throws IOException",
    "methodName" : "printRecords",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2526() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.DEFAULT;\n    CSVFormat cSVFormat1 = cSVFormat0.withQuoteChar('@');\n    CharBuffer charBuffer0 = CharBuffer.allocate(101);\n    CSVPrinter cSVPrinter0 = cSVFormat1.print(charBuffer0);\n    cSVPrinter0.print(cSVFormat1);\n    Object[] objectArray0 = new Object[4];\n    objectArray0[0] = (Object) cSVFormat0;\n    cSVPrinter0.printRecords(objectArray0);\n}",
    "testName" : "test2526"
  },
  "test1515" : {
    "methodSignature" : "public void println() throws IOException",
    "methodName" : "println",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.EXCEL;\n    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(\";eI]{*%n\");\n    CSVPrinter cSVPrinter0 = cSVFormat0.print(mockPrintWriter0);\n    cSVPrinter0.println();\n}",
    "testName" : "test1515"
  },
  "test2627" : {
    "methodSignature" : "public void print(final Object value) throws IOException",
    "methodName" : "print",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2627() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.TDF;\n    Quote quote0 = Quote.NON_NUMERIC;\n    CSVFormat cSVFormat1 = cSVFormat0.withQuotePolicy(quote0);\n    CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) \"$zqx9U\");\n    CSVPrinter cSVPrinter0 = cSVFormat1.print(charBuffer0);\n    cSVPrinter0.print(cSVFormat0);\n}",
    "testName" : "test2627"
  },
  "test1819" : {
    "methodSignature" : "public void printRecords(final ResultSet resultSet) throws SQLException, IOException",
    "methodName" : "printRecords",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1819() throws Throwable {\n    CharArrayWriter charArrayWriter0 = new CharArrayWriter();\n    CSVFormat cSVFormat0 = CSVFormat.TDF;\n    CSVPrinter cSVPrinter0 = new CSVPrinter(charArrayWriter0, cSVFormat0);\n    ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());\n    doReturn(434).when(resultSetMetaData0).getColumnCount();\n    ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());\n    doReturn(resultSetMetaData0).when(resultSet0).getMetaData();\n    doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(resultSet0).getString(anyInt());\n    doReturn(true, false).when(resultSet0).next();\n    cSVPrinter0.printRecords(resultSet0);\n}",
    "testName" : "test1819"
  },
  "test3031" : {
    "methodSignature" : "public void flush() throws IOException",
    "methodName" : "flush",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3031() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.TDF;\n    CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) \"$zqx9U\");\n    CSVPrinter cSVPrinter0 = cSVFormat0.print(charBuffer0);\n    cSVPrinter0.flush();\n}",
    "testName" : "test3031"
  },
  "test3132" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3132() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.TDF;\n    char[] charArray0 = new char[4];\n    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n    CSVPrinter cSVPrinter0 = cSVFormat0.print(charBuffer0);\n    cSVPrinter0.close();\n}",
    "testName" : "test3132"
  }
}