{
  "test2225" : {
    "methodSignature" : "public void printComment(final String comment) throws IOException",
    "methodName" : "printComment",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2225() throws Throwable {\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"m-dDQ^z+5=W)v/r}4*\");\n    CSVFormat cSVFormat0 = CSVFormat.MYSQL;\n    Character character0 = Character.valueOf('>');\n    CSVFormat cSVFormat1 = cSVFormat0.withCommentMarker(character0);\n    CSVPrinter cSVPrinter0 = new CSVPrinter(mockPrintStream0, cSVFormat1);\n    cSVPrinter0.printComment(\"Delimiter=<\\t> Escape=<> RecordSeparator=<\\n> EmptyLines:ignored SkipHeaderRecord:false\");\n}",
    "testName" : "test2225"
  },
  "test2731" : {
    "methodSignature" : "public void printRecords(final ResultSet resultSet) throws SQLException, IOException",
    "methodName" : "printRecords",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2731() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0);\n    CSVFormat cSVFormat0 = CSVFormat.DEFAULT;\n    CSVPrinter cSVPrinter0 = new CSVPrinter(mockPrintStream0, cSVFormat0);\n    RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();\n    ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());\n    doReturn(rowSetMetaDataImpl0).when(resultSet0).getMetaData();\n    doReturn(false).when(resultSet0).next();\n    cSVPrinter0.printRecords(resultSet0);\n}",
    "testName" : "test2731"
  },
  "test2326" : {
    "methodSignature" : "public void printComment(final String comment) throws IOException",
    "methodName" : "printComment",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2326() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.EXCEL;\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"x_XctZ;Lm1%Yo\");\n    Character character0 = Character.valueOf('m');\n    CSVFormat cSVFormat1 = cSVFormat0.withCommentMarker(character0);\n    CSVPrinter cSVPrinter0 = new CSVPrinter(mockPrintStream0, cSVFormat1);\n    cSVPrinter0.printComment(\"Delimiter=<,> QuoteChar=<\\\"> RecordSeparator=<\\r\\n> SkipHeaderRecord:false\");\n}",
    "testName" : "test2326"
  },
  "test2832" : {
    "methodSignature" : "public void printRecords(final ResultSet resultSet) throws SQLException, IOException",
    "methodName" : "printRecords",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2832() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0);\n    CSVFormat cSVFormat0 = CSVFormat.DEFAULT;\n    CSVPrinter cSVPrinter0 = new CSVPrinter(mockPrintStream0, cSVFormat0);\n    RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();\n    ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());\n    doReturn(rowSetMetaDataImpl0).when(resultSet0).getMetaData();\n    doReturn(true, true, true, true, true).when(resultSet0).next();\n    // Undeclared exception!\n    cSVPrinter0.printRecords(resultSet0);\n}",
    "testName" : "test2832"
  },
  "test1820" : {
    "methodSignature" : "public void print(final Object value) throws IOException",
    "methodName" : "print",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1820() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.TDF;\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"x_XctZ;Lm1%Yo\");\n    CSVFormat cSVFormat1 = cSVFormat0.withNullString(\" ydzoB%YeeDd@\");\n    CSVPrinter cSVPrinter0 = cSVFormat1.print(mockPrintStream0);\n    cSVPrinter0.print((Object) null);\n}",
    "testName" : "test1820"
  },
  "test2023" : {
    "methodSignature" : "public void print(final Object value) throws IOException",
    "methodName" : "print",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2023() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0);\n    CSVFormat cSVFormat0 = CSVFormat.EXCEL;\n    CSVFormat cSVFormat1 = cSVFormat0.withNullString(\"t5\\\"rk\\\"pdWV,5B{aB6\");\n    CSVFormat cSVFormat2 = cSVFormat1.withRecordSeparator(\"t5\\\"rk\\\"pdWV,5B{aB6\");\n    CSVPrinter cSVPrinter0 = new CSVPrinter(mockPrintStream0, cSVFormat2);\n    cSVPrinter0.print((Object) null);\n}",
    "testName" : "test2023"
  },
  "test2124" : {
    "methodSignature" : "public void printComment(final String comment) throws IOException",
    "methodName" : "printComment",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2124() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.EXCEL;\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"x_XctZ;Lm1%Yo\");\n    Character character0 = Character.valueOf('m');\n    CSVFormat cSVFormat1 = cSVFormat0.withCommentMarker(character0);\n    CSVPrinter cSVPrinter0 = new CSVPrinter(mockPrintStream0, cSVFormat1);\n    cSVPrinter0.print(mockPrintStream0);\n    cSVPrinter0.printComment(\"x_XctZ;Lm1%Yo\");\n}",
    "testName" : "test2124"
  },
  "test000" : {
    "methodSignature" : "public Appendable getOut()",
    "methodName" : "getOut",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.EXCEL;\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"x_XctZ;Lm1%Yo\");\n    CSVPrinter cSVPrinter0 = new CSVPrinter(mockPrintStream0, cSVFormat0);\n    Appendable appendable0 = cSVPrinter0.getOut();\n}",
    "testName" : "test000"
  },
  "test011" : {
    "methodSignature" : "public CSVPrinter print(final Appendable out) throws IOException",
    "methodName" : "print",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.newFormat('f');\n    Object[] objectArray0 = new Object[7];\n    objectArray0[0] = (Object) cSVFormat0;\n    CSVFormat cSVFormat1 = cSVFormat0.withHeaderComments(objectArray0);\n    StringWriter stringWriter0 = new StringWriter(23);\n    StringBuffer stringBuffer0 = stringWriter0.getBuffer();\n    CSVPrinter cSVPrinter0 = cSVFormat1.print(stringBuffer0);\n}",
    "testName" : "test011"
  },
  "test1517" : {
    "methodSignature" : "public void print(final Object value) throws IOException",
    "methodName" : "print",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1517() throws Throwable {\n    MockFileWriter mockFileWriter0 = new MockFileWriter(\"sh [P#W6*\\\"H%0y-\", true);\n    CSVFormat cSVFormat0 = CSVFormat.TDF;\n    QuoteMode quoteMode0 = QuoteMode.NON_NUMERIC;\n    CSVFormat cSVFormat1 = cSVFormat0.withQuoteMode(quoteMode0);\n    CSVPrinter cSVPrinter0 = cSVFormat1.print(mockFileWriter0);\n    long[] longArray0 = new long[6];\n    cSVPrinter0.print(longArray0[5]);\n}",
    "testName" : "test1517"
  },
  "test034" : {
    "methodSignature" : "public void print(final Object value) throws IOException",
    "methodName" : "print",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0);\n    CSVFormat cSVFormat0 = CSVFormat.newFormat('q');\n    CSVFormat cSVFormat1 = cSVFormat0.withSkipHeaderRecord();\n    RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();\n    CSVFormat cSVFormat2 = cSVFormat1.withHeader((ResultSetMetaData) rowSetMetaDataImpl0);\n    CSVPrinter cSVPrinter0 = cSVFormat2.print(mockPrintStream0);\n}",
    "testName" : "test034"
  },
  "test045" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test045() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.TDF;\n    char[] charArray0 = new char[10];\n    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n    CSVPrinter cSVPrinter0 = new CSVPrinter(charBuffer0, cSVFormat0);\n    cSVPrinter0.close();\n}",
    "testName" : "test045"
  },
  "test056" : {
    "methodSignature" : "public void close() throws IOException",
    "methodName" : "close",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0);\n    CSVFormat cSVFormat0 = CSVFormat.DEFAULT;\n    CSVPrinter cSVPrinter0 = new CSVPrinter(mockPrintStream0, cSVFormat0);\n    cSVPrinter0.close();\n}",
    "testName" : "test056"
  },
  "test067" : {
    "methodSignature" : "public void flush() throws IOException",
    "methodName" : "flush",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067() throws Throwable {\n    char[] charArray0 = new char[2];\n    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n    CSVFormat cSVFormat0 = CSVFormat.EXCEL;\n    CSVPrinter cSVPrinter0 = new CSVPrinter(charBuffer0, cSVFormat0);\n    cSVPrinter0.flush();\n}",
    "testName" : "test067"
  },
  "test078" : {
    "methodSignature" : "public void flush() throws IOException",
    "methodName" : "flush",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078() throws Throwable {\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"org.apache.commons.csv.CSVPrinter$1\");\n    CSVFormat cSVFormat0 = CSVFormat.EXCEL;\n    CSVPrinter cSVPrinter0 = new CSVPrinter(mockPrintStream0, cSVFormat0);\n    cSVPrinter0.flush();\n}",
    "testName" : "test078"
  },
  "test089" : {
    "methodSignature" : "public void print(final Object value) throws IOException",
    "methodName" : "print",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089() throws Throwable {\n    CSVFormat cSVFormat0 = CSVFormat.EXCEL;\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"x_XctZ;Lm1%Yo\");\n    CSVFormat cSVFormat1 = cSVFormat0.withNullString(\"Delimiter=<,> QuoteChar=<\\\"> RecordSeparator=<\\r\\n> SkipHeaderRecord:false\");\n    CSVFormat cSVFormat2 = cSVFormat1.withIgnoreSurroundingSpaces(false);\n    CSVPrinter cSVPrinter0 = cSVFormat2.print(mockPrintStream0);\n    cSVPrinter0.print((Object) null);\n}",
    "testName" : "test089"
  },
  "test1315" : {
    "methodSignature" : "public void print(final Object value) throws IOException",
    "methodName" : "print",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1315() throws Throwable {\n    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0);\n    CSVFormat cSVFormat0 = CSVFormat.MYSQL;\n    CSVFormat cSVFormat1 = cSVFormat0.withNullString(\" ydzoB%YeeDd@\");\n    CSVPrinter cSVPrinter0 = cSVFormat1.print(mockPrintStream0);\n    cSVPrinter0.print((Object) null);\n}",
    "testName" : "test1315"
  },
  "test0910" : {
    "methodSignature" : "public void print(final Object value) throws IOException",
    "methodName" : "print",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0910() throws Throwable {\n    MockFileWriter mockFileWriter0 = new MockFileWriter(\"sh [P#W6*\\\"H%0y-\", true);\n    CSVFormat cSVFormat0 = CSVFormat.TDF;\n    QuoteMode quoteMode0 = QuoteMode.ALL;\n    CSVPrinter cSVPrinter0 = new CSVPrinter(mockFileWriter0, cSVFormat0);\n    cSVPrinter0.print(quoteMode0);\n    cSVPrinter0.print((Object) null);\n}",
    "testName" : "test0910"
  },
  "test1416" : {
    "methodSignature" : "public void print(final Object value) throws IOException",
    "methodName" : "print",
    "className" : "org.apache.commons.csv.CSVPrinter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1416() throws Throwable {\n    MockFileWriter mockFileWriter0 = new MockFileWriter(\"sh [P#W6*\\\"H%0y-\", true);\n    CSVFormat cSVFormat0 = CSVFormat.TDF;\n    QuoteMode quoteMode0 = QuoteMode.ALL;\n    CSVFormat cSVFormat1 = cSVFormat0.withQuoteMode(quoteMode0);\n    CSVPrinter cSVPrinter0 = new CSVPrinter(mockFileWriter0, cSVFormat1);\n    cSVPrinter0.print(quoteMode0);\n}",
    "testName" : "test1416"
  }
}