{
  "test121137" : {
    "methodSignature" : "public static boolean isSameDay(Date date1, Date date2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121137() throws Throwable {\n    String[] stringArray0 = new String[4];\n    stringArray0[0] = \"\";\n    Date date0 = DateUtils.parseDateStrictly(\"\", stringArray0);\n    Date date1 = DateUtils.ceiling((Object) date0, 1001);\n    boolean boolean0 = DateUtils.isSameDay(date0, date1);\n}",
    "testName" : "test121137"
  },
  "test0000" : {
    "methodSignature" : "public static boolean truncatedEquals(Date date1, Date date2, int field)",
    "methodName" : "truncatedEquals",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    String[] stringArray0 = new String[4];\n    stringArray0[0] = \"\";\n    Date date0 = DateUtils.parseDateStrictly(\"\", stringArray0);\n    Date date1 = DateUtils.ceiling((Object) date0, 0);\n    boolean boolean0 = DateUtils.truncatedEquals(date0, date1, 0);\n}",
    "testName" : "test0000"
  },
  "test07281" : {
    "methodSignature" : "public static Iterator<?> iterator(Object focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07281() throws Throwable {\n    MockDate mockDate0 = new MockDate();\n    DateUtils.iterator((Object) mockDate0, 0);\n}",
    "testName" : "test07281"
  },
  "test08899" : {
    "methodSignature" : "public static Date ceiling(Object date, int field)",
    "methodName" : "ceiling",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08899() throws Throwable {\n    Locale locale0 = Locale.GERMAN;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);\n    DateUtils.ceiling((Object) mockGregorianCalendar0, 8);\n}",
    "testName" : "test08899"
  },
  "test104116" : {
    "methodSignature" : "public static Date round(Date date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104116() throws Throwable {\n    DateUtils.round((Date) null, (-2836));\n}",
    "testName" : "test104116"
  },
  "test03642" : {
    "methodSignature" : "public static Date parseDateStrictly(String str, String... parsePatterns) throws ParseException",
    "methodName" : "parseDateStrictly",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03642() throws Throwable {\n    String[] stringArray0 = new String[4];\n    stringArray0[0] = \"QO%s&W+ZZ\";\n    DateUtils.parseDateStrictly(\"QO%s&W+ZZ\", stringArray0);\n}",
    "testName" : "test03642"
  },
  "test04450" : {
    "methodSignature" : "public static Date addMinutes(Date date, int amount)",
    "methodName" : "addMinutes",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04450() throws Throwable {\n    DateUtils.addMinutes((Date) null, 1584);\n}",
    "testName" : "test04450"
  },
  "test06473" : {
    "methodSignature" : "public static long getFragmentInMilliseconds(Date date, int fragment)",
    "methodName" : "getFragmentInMilliseconds",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06473() throws Throwable {\n    MockDate mockDate0 = new MockDate(10, 10, 10, 10, 10);\n    DateUtils.getFragmentInMilliseconds((Date) mockDate0, 10);\n}",
    "testName" : "test06473"
  },
  "test02430" : {
    "methodSignature" : "public static int truncatedCompareTo(Date date1, Date date2, int field)",
    "methodName" : "truncatedCompareTo",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02430() throws Throwable {\n    MockDate mockDate0 = new MockDate(1, 1, 0, 2940, (-2659));\n    DateUtils.truncatedCompareTo((Date) mockDate0, (Date) null, (-15));\n}",
    "testName" : "test02430"
  },
  "test02026" : {
    "methodSignature" : "public static long getFragmentInMilliseconds(Date date, int fragment)",
    "methodName" : "getFragmentInMilliseconds",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02026() throws Throwable {\n    MockDate mockDate0 = new MockDate((-1756), 2482, 1, 1891, 1);\n    long long0 = DateUtils.getFragmentInMilliseconds((Date) mockDate0, 1);\n}",
    "testName" : "test02026"
  },
  "test110123" : {
    "methodSignature" : "public static Date parseDateStrictly(String str, String... parsePatterns) throws ParseException",
    "methodName" : "parseDateStrictly",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110123() throws Throwable {\n    String[] stringArray0 = new String[6];\n    DateUtils.parseDateStrictly((String) null, stringArray0);\n}",
    "testName" : "test110123"
  },
  "test109122" : {
    "methodSignature" : "public static Date parseDate(String str, String... parsePatterns) throws ParseException",
    "methodName" : "parseDate",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109122() throws Throwable {\n    DateUtils.parseDate(\"\", (String[]) null);\n}",
    "testName" : "test109122"
  },
  "test126142" : {
    "methodSignature" : "public static boolean isSameDay(Date date1, Date date2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test126142() throws Throwable {\n    DateUtils.isSameDay((Date) null, (Date) null);\n}",
    "testName" : "test126142"
  },
  "test03238" : {
    "methodSignature" : "public static Date setHours(Date date, int amount)",
    "methodName" : "setHours",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03238() throws Throwable {\n    DateUtils.setHours((Date) null, 30);\n}",
    "testName" : "test03238"
  },
  "test097108" : {
    "methodSignature" : "public static boolean truncatedEquals(Date date1, Date date2, int field)",
    "methodName" : "truncatedEquals",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097108() throws Throwable {\n    DateUtils.truncatedEquals((Date) null, (Date) null, 0);\n}",
    "testName" : "test097108"
  },
  "test08089" : {
    "methodSignature" : "public static Iterator<Calendar> iterator(Calendar focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08089() throws Throwable {\n    ZoneInfo zoneInfo0 = (ZoneInfo) DateUtils.UTC_TIME_ZONE;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(zoneInfo0);\n    Iterator<Calendar> iterator0 = DateUtils.iterator((Calendar) mockGregorianCalendar0, 1);\n}",
    "testName" : "test08089"
  },
  "test0011" : {
    "methodSignature" : "public static Calendar round(Calendar date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-3124), 870, 0, 0, (-3124), 870);\n    DateUtils.round((Calendar) mockGregorianCalendar0, (-3124));\n}",
    "testName" : "test0011"
  },
  "test04046" : {
    "methodSignature" : "public static long getFragmentInDays(Date date, int fragment)",
    "methodName" : "getFragmentInDays",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04046() throws Throwable {\n    MockDate mockDate0 = new MockDate();\n    DateUtils.getFragmentInDays((Date) mockDate0, (-1));\n}",
    "testName" : "test04046"
  },
  "test05258" : {
    "methodSignature" : "public static Date truncate(Date date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05258() throws Throwable {\n    DateUtils.truncate((Date) null, 0);\n}",
    "testName" : "test05258"
  },
  "test06068" : {
    "methodSignature" : "public static boolean truncatedEquals(Calendar cal1, Calendar cal2, int field)",
    "methodName" : "truncatedEquals",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06068() throws Throwable {\n    Locale locale0 = new Locale(\"\", \"\");\n    Calendar calendar0 = MockCalendar.getInstance(locale0);\n    Calendar calendar1 = DateUtils.ceiling(calendar0, 0);\n    boolean boolean0 = DateUtils.truncatedEquals(calendar1, calendar0, 14);\n}",
    "testName" : "test06068"
  },
  "test02935" : {
    "methodSignature" : "public static Date setSeconds(Date date, int amount)",
    "methodName" : "setSeconds",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02935() throws Throwable {\n    DateUtils.setSeconds((Date) null, 1215);\n}",
    "testName" : "test02935"
  },
  "test130146" : {
    "methodSignature" : "public static long getFragmentInHours(Calendar calendar, int fragment)",
    "methodName" : "getFragmentInHours",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test130146() throws Throwable {\n    DateUtils dateUtils0 = new DateUtils();\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(dateUtils0.UTC_TIME_ZONE);\n    long long0 = DateUtils.getFragmentInHours((Calendar) mockGregorianCalendar0, 2);\n}",
    "testName" : "test130146"
  },
  "test03743" : {
    "methodSignature" : "public static Date parseDate(String str, String... parsePatterns) throws ParseException",
    "methodName" : "parseDate",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03743() throws Throwable {\n    String[] stringArray0 = new String[4];\n    stringArray0[0] = \"Could not iterate based on \";\n    DateUtils.parseDate(\"Could not iterate based on \", stringArray0);\n}",
    "testName" : "test03743"
  },
  "test099110" : {
    "methodSignature" : "public static Date round(Object date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099110() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();\n    DateUtils.round((Object) mockGregorianCalendar0, 1581);\n}",
    "testName" : "test099110"
  },
  "test01723" : {
    "methodSignature" : "public static long getFragmentInMinutes(Calendar calendar, int fragment)",
    "methodName" : "getFragmentInMinutes",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01723() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();\n    long long0 = DateUtils.getFragmentInMinutes((Calendar) mockGregorianCalendar0, 14);\n}",
    "testName" : "test01723"
  },
  "test04955" : {
    "methodSignature" : "public static boolean truncatedEquals(Date date1, Date date2, int field)",
    "methodName" : "truncatedEquals",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04955() throws Throwable {\n    MockDate mockDate0 = new MockDate(1448L);\n    boolean boolean0 = DateUtils.truncatedEquals((Date) mockDate0, (Date) mockDate0, 9);\n}",
    "testName" : "test04955"
  },
  "test06978" : {
    "methodSignature" : "public static long getFragmentInMinutes(Calendar calendar, int fragment)",
    "methodName" : "getFragmentInMinutes",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06978() throws Throwable {\n    DateUtils.getFragmentInMinutes((Calendar) null, 1229);\n}",
    "testName" : "test06978"
  },
  "test094105" : {
    "methodSignature" : "public static Date truncate(Object date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094105() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(1824, 1824, 1824, 1824, 1824);\n    DateUtils.truncate((Object) mockGregorianCalendar0, 1824);\n}",
    "testName" : "test094105"
  },
  "test146162" : {
    "methodSignature" : "public static Date parseDateStrictly(String str, String... parsePatterns) throws ParseException",
    "methodName" : "parseDateStrictly",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test146162() throws Throwable {\n    String[] stringArray0 = new String[4];\n    DateUtils.parseDateStrictly(\"\", stringArray0);\n}",
    "testName" : "test146162"
  },
  "test00915" : {
    "methodSignature" : "public static int truncatedCompareTo(Calendar cal1, Calendar cal2, int field)",
    "methodName" : "truncatedCompareTo",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00915() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();\n    MockGregorianCalendar mockGregorianCalendar1 = new MockGregorianCalendar(2, (-250), (-1835));\n    int int0 = DateUtils.truncatedCompareTo((Calendar) mockGregorianCalendar0, (Calendar) mockGregorianCalendar1, 12);\n}",
    "testName" : "test00915"
  },
  "test115129" : {
    "methodSignature" : "public static boolean isSameInstant(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115129() throws Throwable {\n    Calendar calendar0 = MockCalendar.getInstance();\n    DateUtils.isSameInstant(calendar0, (Calendar) null);\n}",
    "testName" : "test115129"
  },
  "test07382" : {
    "methodSignature" : "public static Iterator<?> iterator(Object focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07382() throws Throwable {\n    DateUtils.iterator((Object) null, (-4149));\n}",
    "testName" : "test07382"
  },
  "test140156" : {
    "methodSignature" : "public static long getFragmentInDays(Calendar calendar, int fragment)",
    "methodName" : "getFragmentInDays",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test140156() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1868), (-1868), 2140793667, (-2338), 0);\n    DateUtils.getFragmentInDays((Calendar) mockGregorianCalendar0, 2950);\n}",
    "testName" : "test140156"
  },
  "test0023" : {
    "methodSignature" : "public static boolean isSameInstant(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0023() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, 0);\n    mockGregorianCalendar0.setTimeInMillis(451L);\n    Calendar calendar0 = DateUtils.round((Calendar) mockGregorianCalendar0, 0);\n    DateUtils.DateIterator dateUtils_DateIterator0 = new DateUtils.DateIterator(mockGregorianCalendar0, mockGregorianCalendar0);\n    boolean boolean0 = DateUtils.isSameInstant(calendar0, (Calendar) mockGregorianCalendar0);\n}",
    "testName" : "test0023"
  },
  "test06170" : {
    "methodSignature" : "public static long getFragmentInMilliseconds(Calendar calendar, int fragment)",
    "methodName" : "getFragmentInMilliseconds",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06170() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();\n    long long0 = DateUtils.getFragmentInMilliseconds((Calendar) mockGregorianCalendar0, 14);\n}",
    "testName" : "test06170"
  },
  "test102113" : {
    "methodSignature" : "public static Calendar round(Calendar date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102113() throws Throwable {\n    DateUtils.round((Calendar) null, 1);\n}",
    "testName" : "test102113"
  },
  "test07786" : {
    "methodSignature" : "public static Iterator<Calendar> iterator(Date focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07786() throws Throwable {\n    MockDate mockDate0 = new MockDate();\n    Iterator<Calendar> iterator0 = DateUtils.iterator((Date) mockDate0, 4);\n}",
    "testName" : "test07786"
  },
  "test02531" : {
    "methodSignature" : "public static int truncatedCompareTo(Calendar cal1, Calendar cal2, int field)",
    "methodName" : "truncatedCompareTo",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02531() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    DateUtils.truncatedCompareTo((Calendar) mockGregorianCalendar0, (Calendar) mockGregorianCalendar0, (-1170));\n}",
    "testName" : "test02531"
  },
  "test04551" : {
    "methodSignature" : "public static Date addMilliseconds(Date date, int amount)",
    "methodName" : "addMilliseconds",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04551() throws Throwable {\n    DateUtils.addMilliseconds((Date) null, (-1239));\n}",
    "testName" : "test04551"
  },
  "test06574" : {
    "methodSignature" : "public static long getFragmentInSeconds(Calendar calendar, int fragment)",
    "methodName" : "getFragmentInSeconds",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06574() throws Throwable {\n    Calendar calendar0 = MockCalendar.getInstance();\n    DateUtils.getFragmentInSeconds(calendar0, 9);\n}",
    "testName" : "test06574"
  },
  "test03339" : {
    "methodSignature" : "public static Date setDays(Date date, int amount)",
    "methodName" : "setDays",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03339() throws Throwable {\n    DateUtils.setDays((Date) null, (-1429));\n}",
    "testName" : "test03339"
  },
  "test02127" : {
    "methodSignature" : "public static long getFragmentInDays(Date date, int fragment)",
    "methodName" : "getFragmentInDays",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02127() throws Throwable {\n    MockDate mockDate0 = new MockDate();\n    long long0 = DateUtils.getFragmentInDays((Date) mockDate0, 13);\n}",
    "testName" : "test02127"
  },
  "test05359" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05359() throws Throwable {\n    Calendar calendar0 = MockCalendar.getInstance();\n    boolean boolean0 = DateUtils.isSameDay(calendar0, calendar0);\n}",
    "testName" : "test05359"
  },
  "test107120" : {
    "methodSignature" : "public static Date parseDate(String str, String... parsePatterns) throws ParseException",
    "methodName" : "parseDate",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107120() throws Throwable {\n    String[] stringArray0 = new String[9];\n    stringArray0[0] = \"\";\n    DateUtils.parseDate(\"$9-u,a2M&{ w8H].w\", stringArray0);\n}",
    "testName" : "test107120"
  },
  "test08190" : {
    "methodSignature" : "public static Iterator<Calendar> iterator(Calendar focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08190() throws Throwable {\n    DateUtils.iterator((Calendar) null, 12);\n}",
    "testName" : "test08190"
  },
  "test124140" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test124140() throws Throwable {\n    DateUtils.isSameDay((Calendar) null, (Calendar) null);\n}",
    "testName" : "test124140"
  },
  "test091102" : {
    "methodSignature" : "public static Calendar ceiling(Calendar date, int field)",
    "methodName" : "ceiling",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test091102() throws Throwable {\n    DateUtils.ceiling((Calendar) null, 4119);\n}",
    "testName" : "test091102"
  },
  "test0035" : {
    "methodSignature" : "public static boolean isSameInstant(Date date1, Date date2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0035() throws Throwable {\n    String[] stringArray0 = new String[4];\n    stringArray0[0] = \"\";\n    Date date0 = DateUtils.parseDateStrictly(\"\", stringArray0);\n    Date date1 = DateUtils.ceiling((Object) date0, 0);\n    boolean boolean0 = DateUtils.isSameInstant(date0, date1);\n}",
    "testName" : "test0035"
  },
  "test118133" : {
    "methodSignature" : "public static boolean isSameInstant(Date date1, Date date2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118133() throws Throwable {\n    String[] stringArray0 = new String[4];\n    stringArray0[0] = \"\";\n    Date date0 = DateUtils.parseDateStrictly(\"\", stringArray0);\n    Date date1 = DateUtils.ceiling((Object) date0, 0);\n    boolean boolean0 = DateUtils.isSameInstant(date1, date0);\n}",
    "testName" : "test118133"
  },
  "test143159" : {
    "methodSignature" : "public static long getFragmentInSeconds(Date date, int fragment)",
    "methodName" : "getFragmentInSeconds",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test143159() throws Throwable {\n    MockDate mockDate0 = new MockDate();\n    long long0 = DateUtils.getFragmentInSeconds((Date) mockDate0, 1);\n}",
    "testName" : "test143159"
  },
  "test04147" : {
    "methodSignature" : "public static Date addYears(Date date, int amount)",
    "methodName" : "addYears",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04147() throws Throwable {\n    DateUtils.addYears((Date) null, 0);\n}",
    "testName" : "test04147"
  },
  "test105118" : {
    "methodSignature" : "public static long getFragmentInHours(Date date, int fragment)",
    "methodName" : "getFragmentInHours",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105118() throws Throwable {\n    MockDate mockDate0 = new MockDate();\n    Date date0 = DateUtils.round((Date) mockDate0, 5);\n    long long0 = DateUtils.getFragmentInHours(date0, 5);\n}",
    "testName" : "test105118"
  },
  "test02632" : {
    "methodSignature" : "public static Date truncate(Date date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02632() throws Throwable {\n    ZoneInfo zoneInfo0 = (ZoneInfo) DateUtils.UTC_TIME_ZONE;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(zoneInfo0);\n    ZonedDateTime zonedDateTime0 = mockGregorianCalendar0.toZonedDateTime();\n    GregorianCalendar gregorianCalendar0 = MockGregorianCalendar.from(zonedDateTime0);\n    Date date0 = gregorianCalendar0.getGregorianChange();\n    DateUtils.truncate(date0, 3);\n}",
    "testName" : "test02632"
  },
  "test132148" : {
    "methodSignature" : "public static boolean truncatedEquals(Calendar cal1, Calendar cal2, int field)",
    "methodName" : "truncatedEquals",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test132148() throws Throwable {\n    DateUtils dateUtils0 = new DateUtils();\n    Calendar calendar0 = MockCalendar.getInstance(dateUtils0.UTC_TIME_ZONE);\n    DateUtils.truncatedEquals((Calendar) null, calendar0, 44);\n}",
    "testName" : "test132148"
  },
  "test01824" : {
    "methodSignature" : "public static long getFragmentInMinutes(Calendar calendar, int fragment)",
    "methodName" : "getFragmentInMinutes",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01824() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(3486, 1, 1618, 1618, (-1826), 2260);\n    long long0 = DateUtils.getFragmentInMinutes((Calendar) mockGregorianCalendar0, 1);\n}",
    "testName" : "test01824"
  },
  "test05865" : {
    "methodSignature" : "public static boolean truncatedEquals(Date date1, Date date2, int field)",
    "methodName" : "truncatedEquals",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05865() throws Throwable {\n    MockDate mockDate0 = new MockDate(0, 1, 1, (-1), 1001);\n    Date date0 = DateUtils.ceiling((Date) mockDate0, 2);\n    boolean boolean0 = DateUtils.truncatedEquals(date0, (Date) mockDate0, 5);\n}",
    "testName" : "test05865"
  },
  "test129145" : {
    "methodSignature" : "public static long getFragmentInMinutes(Calendar calendar, int fragment)",
    "methodName" : "getFragmentInMinutes",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test129145() throws Throwable {\n    MockDate mockDate0 = new MockDate(0, 0, 1090, (-1), 1090, 597);\n    Calendar calendar0 = DateUtils.toCalendar(mockDate0);\n    DateUtils.getFragmentInMinutes(calendar0, (-1443));\n}",
    "testName" : "test129145"
  },
  "test03844" : {
    "methodSignature" : "public static long getFragmentInMinutes(Date date, int fragment)",
    "methodName" : "getFragmentInMinutes",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03844() throws Throwable {\n    DateUtils.getFragmentInMinutes((Date) null, 10);\n}",
    "testName" : "test03844"
  },
  "test148164" : {
    "methodSignature" : "public static long getFragmentInSeconds(Calendar calendar, int fragment)",
    "methodName" : "getFragmentInSeconds",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test148164() throws Throwable {\n    Calendar calendar0 = MockCalendar.getInstance();\n    long long0 = DateUtils.getFragmentInSeconds(calendar0, 11);\n}",
    "testName" : "test148164"
  },
  "test096107" : {
    "methodSignature" : "public static Date truncate(Object date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096107() throws Throwable {\n    MockDate mockDate0 = new MockDate(0, 0, (-1698), 0, 280000000);\n    DateUtils.truncate((Object) mockDate0, 30);\n}",
    "testName" : "test096107"
  },
  "test113126" : {
    "methodSignature" : "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameLocalTime",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113126() throws Throwable {\n    DateUtils.isSameLocalTime((Calendar) null, (Calendar) null);\n}",
    "testName" : "test113126"
  },
  "test0046" : {
    "methodSignature" : "public static boolean isSameDay(Date date1, Date date2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0046() throws Throwable {\n    String[] stringArray0 = new String[4];\n    stringArray0[0] = \"\";\n    Date date0 = DateUtils.parseDateStrictly(\"\", stringArray0);\n    Date date1 = DateUtils.ceiling(date0, 2);\n    boolean boolean0 = DateUtils.isSameDay(date0, date1);\n}",
    "testName" : "test0046"
  },
  "test119134" : {
    "methodSignature" : "public static boolean isSameInstant(Date date1, Date date2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119134() throws Throwable {\n    String[] stringArray0 = new String[4];\n    stringArray0[0] = \"\";\n    Date date0 = DateUtils.parseDateStrictly(\"\", stringArray0);\n    boolean boolean0 = DateUtils.isSameInstant(date0, date0);\n}",
    "testName" : "test119134"
  },
  "test06271" : {
    "methodSignature" : "public static long getFragmentInDays(Calendar calendar, int fragment)",
    "methodName" : "getFragmentInDays",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06271() throws Throwable {\n    DateUtils dateUtils0 = new DateUtils();\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(dateUtils0.UTC_TIME_ZONE);\n    long long0 = DateUtils.getFragmentInDays((Calendar) mockGregorianCalendar0, 13);\n}",
    "testName" : "test06271"
  },
  "test05460" : {
    "methodSignature" : "public static int truncatedCompareTo(Calendar cal1, Calendar cal2, int field)",
    "methodName" : "truncatedCompareTo",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05460() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(280000000, 1, 1, 1, (-1));\n    int int0 = DateUtils.truncatedCompareTo((Calendar) mockGregorianCalendar0, (Calendar) mockGregorianCalendar0, 5);\n}",
    "testName" : "test05460"
  },
  "test07483" : {
    "methodSignature" : "public static Iterator<?> iterator(Object focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07483() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, 0);\n    DateUtils.iterator((Object) mockGregorianCalendar0, 0);\n}",
    "testName" : "test07483"
  },
  "test142158" : {
    "methodSignature" : "public static long getFragmentInMilliseconds(Calendar calendar, int fragment)",
    "methodName" : "getFragmentInMilliseconds",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test142158() throws Throwable {\n    DateUtils dateUtils0 = new DateUtils();\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(dateUtils0.UTC_TIME_ZONE);\n    long long0 = DateUtils.getFragmentInMilliseconds((Calendar) mockGregorianCalendar0, 6);\n}",
    "testName" : "test142158"
  },
  "test08291" : {
    "methodSignature" : "public static Iterator<Calendar> iterator(Date focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08291() throws Throwable {\n    DateUtils.iterator((Date) null, 0);\n}",
    "testName" : "test08291"
  },
  "test07887" : {
    "methodSignature" : "public static Iterator<Calendar> iterator(Date focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07887() throws Throwable {\n    MockDate mockDate0 = new MockDate();\n    Iterator<Calendar> iterator0 = DateUtils.iterator((Date) mockDate0, 3);\n}",
    "testName" : "test07887"
  },
  "test04652" : {
    "methodSignature" : "public static Date addHours(Date date, int amount)",
    "methodName" : "addHours",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04652() throws Throwable {\n    DateUtils.addHours((Date) null, 5352);\n}",
    "testName" : "test04652"
  },
  "test06675" : {
    "methodSignature" : "public static long getFragmentInHours(Date date, int fragment)",
    "methodName" : "getFragmentInHours",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06675() throws Throwable {\n    MockDate mockDate0 = new MockDate();\n    long long0 = DateUtils.getFragmentInHours((Date) mockDate0, 5);\n}",
    "testName" : "test06675"
  },
  "test136152" : {
    "methodSignature" : "public static long getFragmentInMinutes(Date date, int fragment)",
    "methodName" : "getFragmentInMinutes",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test136152() throws Throwable {\n    MockDate mockDate0 = new MockDate();\n    long long0 = DateUtils.getFragmentInMinutes((Date) mockDate0, 1);\n}",
    "testName" : "test136152"
  },
  "test100111" : {
    "methodSignature" : "public static Date round(Object date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100111() throws Throwable {\n    DateUtils.round((Object) null, 10);\n}",
    "testName" : "test100111"
  },
  "test03440" : {
    "methodSignature" : "public static Date round(Date date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03440() throws Throwable {\n    MockDate mockDate0 = new MockDate(280000000, 2, 280000000, 3, 1810, 1138);\n    DateUtils.round((Date) mockDate0, 1810);\n}",
    "testName" : "test03440"
  },
  "test04248" : {
    "methodSignature" : "public static Date addWeeks(Date date, int amount)",
    "methodName" : "addWeeks",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04248() throws Throwable {\n    DateUtils.addWeeks((Date) null, 2485);\n}",
    "testName" : "test04248"
  },
  "test02228" : {
    "methodSignature" : "public static long getFragmentInDays(Calendar calendar, int fragment)",
    "methodName" : "getFragmentInDays",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02228() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, 1);\n    long long0 = DateUtils.getFragmentInDays((Calendar) mockGregorianCalendar0, 1);\n}",
    "testName" : "test02228"
  },
  "test093104" : {
    "methodSignature" : "public static Date truncate(Object date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093104() throws Throwable {\n    DateUtils.truncate((Object) \"Could not find ceiling of for type: \", 8);\n}",
    "testName" : "test093104"
  },
  "test147163" : {
    "methodSignature" : "public static long getFragmentInMilliseconds(Date date, int fragment)",
    "methodName" : "getFragmentInMilliseconds",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test147163() throws Throwable {\n    MockDate mockDate0 = new MockDate(1433, 1433, (-155), 7, 0, 0);\n    DateUtils.getFragmentInMilliseconds((Date) mockDate0, 7);\n}",
    "testName" : "test147163"
  },
  "test114128" : {
    "methodSignature" : "public static boolean isSameInstant(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test114128() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();\n    Calendar calendar0 = DateUtils.ceiling((Calendar) mockGregorianCalendar0, 12);\n    boolean boolean0 = DateUtils.isSameInstant((Calendar) mockGregorianCalendar0, calendar0);\n}",
    "testName" : "test114128"
  },
  "test116130" : {
    "methodSignature" : "public static boolean isSameInstant(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test116130() throws Throwable {\n    Calendar calendar0 = MockCalendar.getInstance();\n    boolean boolean0 = DateUtils.isSameInstant(calendar0, calendar0);\n}",
    "testName" : "test116130"
  },
  "test122138" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test122138() throws Throwable {\n    Locale locale0 = Locale.JAPAN;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);\n    MockGregorianCalendar mockGregorianCalendar1 = new MockGregorianCalendar(0, (-3412), 1);\n    boolean boolean0 = DateUtils.isSameDay((Calendar) mockGregorianCalendar0, (Calendar) mockGregorianCalendar1);\n}",
    "testName" : "test122138"
  },
  "test0059" : {
    "methodSignature" : "public static boolean isSameDay(Date date1, Date date2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0059() throws Throwable {\n    String[] stringArray0 = new String[4];\n    stringArray0[0] = \"\";\n    Date date0 = DateUtils.parseDateStrictly(\"\", stringArray0);\n    Date date1 = DateUtils.ceiling((Object) date0, 0);\n    boolean boolean0 = DateUtils.isSameDay(date0, date1);\n}",
    "testName" : "test0059"
  },
  "test103115" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103115() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, 0);\n    Calendar calendar0 = DateUtils.round((Calendar) mockGregorianCalendar0, 1);\n    boolean boolean0 = DateUtils.isSameDay(calendar0, (Calendar) mockGregorianCalendar0);\n}",
    "testName" : "test103115"
  },
  "test03036" : {
    "methodSignature" : "public static Date setMonths(Date date, int amount)",
    "methodName" : "setMonths",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03036() throws Throwable {\n    DateUtils.setMonths((Date) null, 673);\n}",
    "testName" : "test03036"
  },
  "test139155" : {
    "methodSignature" : "public static long getFragmentInDays(Date date, int fragment)",
    "methodName" : "getFragmentInDays",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test139155() throws Throwable {\n    MockDate mockDate0 = new MockDate();\n    long long0 = DateUtils.getFragmentInDays((Date) mockDate0, 2);\n}",
    "testName" : "test139155"
  },
  "test07079" : {
    "methodSignature" : "public static long getFragmentInHours(Date date, int fragment)",
    "methodName" : "getFragmentInHours",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07079() throws Throwable {\n    DateUtils.getFragmentInHours((Date) null, (-1166));\n}",
    "testName" : "test07079"
  },
  "test05056" : {
    "methodSignature" : "public static Calendar truncate(Calendar date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05056() throws Throwable {\n    DateUtils.truncate((Calendar) null, 0);\n}",
    "testName" : "test05056"
  },
  "test02733" : {
    "methodSignature" : "public static Calendar toCalendar(Date date)",
    "methodName" : "toCalendar",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02733() throws Throwable {\n    DateUtils.toCalendar((Date) null);\n}",
    "testName" : "test02733"
  },
  "test03945" : {
    "methodSignature" : "public static long getFragmentInHours(Calendar calendar, int fragment)",
    "methodName" : "getFragmentInHours",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03945() throws Throwable {\n    Locale locale0 = Locale.ITALY;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);\n    DateUtils.getFragmentInHours((Calendar) mockGregorianCalendar0, 4);\n}",
    "testName" : "test03945"
  },
  "test00712" : {
    "methodSignature" : "public static int truncatedCompareTo(Date date1, Date date2, int field)",
    "methodName" : "truncatedCompareTo",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00712() throws Throwable {\n    MockDate mockDate0 = new MockDate((-1756), 2482, 1, 1891, 1);\n    Date date0 = DateUtils.addWeeks(mockDate0, 828);\n    mockDate0.setTime(1);\n    int int0 = DateUtils.truncatedCompareTo((Date) mockDate0, date0, 1);\n}",
    "testName" : "test00712"
  },
  "test108121" : {
    "methodSignature" : "public static Date parseDate(String str, String... parsePatterns) throws ParseException",
    "methodName" : "parseDate",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108121() throws Throwable {\n    String[] stringArray0 = new String[8];\n    stringArray0[0] = \"ZZ\";\n    stringArray0[1] = \"ZZ\";\n    stringArray0[2] = \"ZZ\";\n    stringArray0[3] = \"ZZ\";\n    stringArray0[4] = \"ZZ\";\n    stringArray0[5] = \"ZZ\";\n    stringArray0[6] = \"ZZ\";\n    stringArray0[7] = \"ZZ\";\n    DateUtils.parseDate(\"ZZ\", stringArray0);\n}",
    "testName" : "test108121"
  },
  "test05967" : {
    "methodSignature" : "public static boolean truncatedEquals(Calendar cal1, Calendar cal2, int field)",
    "methodName" : "truncatedEquals",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05967() throws Throwable {\n    Calendar calendar0 = MockCalendar.getInstance();\n    boolean boolean0 = DateUtils.truncatedEquals(calendar0, calendar0, 0);\n}",
    "testName" : "test05967"
  },
  "test01925" : {
    "methodSignature" : "public static long getFragmentInMilliseconds(Date date, int fragment)",
    "methodName" : "getFragmentInMilliseconds",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01925() throws Throwable {\n    MockDate mockDate0 = new MockDate(6, 6, 6);\n    long long0 = DateUtils.getFragmentInMilliseconds((Date) mockDate0, 6);\n}",
    "testName" : "test01925"
  },
  "test098109" : {
    "methodSignature" : "public static Date round(Object date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098109() throws Throwable {\n    Object object0 = new Object();\n    DateUtils.round(object0, 111);\n}",
    "testName" : "test098109"
  },
  "test111124" : {
    "methodSignature" : "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameLocalTime",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111124() throws Throwable {\n    Locale locale0 = Locale.JAPAN;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);\n    MockGregorianCalendar mockGregorianCalendar1 = new MockGregorianCalendar(0, (-3412), 1);\n    boolean boolean0 = DateUtils.isSameLocalTime(mockGregorianCalendar0, mockGregorianCalendar1);\n}",
    "testName" : "test111124"
  },
  "test090101" : {
    "methodSignature" : "public static Date ceiling(Object date, int field)",
    "methodName" : "ceiling",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090101() throws Throwable {\n    DateUtils.ceiling((Object) null, 763);\n}",
    "testName" : "test090101"
  },
  "test117131" : {
    "methodSignature" : "public static boolean isSameInstant(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test117131() throws Throwable {\n    DateUtils.isSameInstant((Calendar) null, (Calendar) null);\n}",
    "testName" : "test117131"
  },
  "test123139" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test123139() throws Throwable {\n    ZoneInfo zoneInfo0 = (ZoneInfo) DateUtils.UTC_TIME_ZONE;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(zoneInfo0);\n    DateUtils.isSameDay((Calendar) mockGregorianCalendar0, (Calendar) null);\n}",
    "testName" : "test123139"
  },
  "test06372" : {
    "methodSignature" : "public static long getFragmentInMinutes(Date date, int fragment)",
    "methodName" : "getFragmentInMinutes",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06372() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, 0);\n    Date date0 = mockGregorianCalendar0.getGregorianChange();\n    long long0 = DateUtils.getFragmentInMinutes(date0, 12);\n}",
    "testName" : "test06372"
  },
  "test07180" : {
    "methodSignature" : "public static Iterator<?> iterator(Object focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07180() throws Throwable {\n    Object object0 = new Object();\n    DateUtils.iterator(object0, 0);\n}",
    "testName" : "test07180"
  },
  "test106119" : {
    "methodSignature" : "public static Date setMilliseconds(Date date, int amount)",
    "methodName" : "setMilliseconds",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106119() throws Throwable {\n    DateUtils.setMilliseconds((Date) null, 1);\n}",
    "testName" : "test106119"
  },
  "test03541" : {
    "methodSignature" : "public static Date parseDateStrictly(String str, String... parsePatterns) throws ParseException",
    "methodName" : "parseDateStrictly",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03541() throws Throwable {\n    String[] stringArray0 = new String[0];\n    DateUtils.parseDateStrictly(\"8\", stringArray0);\n}",
    "testName" : "test03541"
  },
  "test08798" : {
    "methodSignature" : "public static Date ceiling(Date date, int field)",
    "methodName" : "ceiling",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08798() throws Throwable {\n    ZoneInfo zoneInfo0 = (ZoneInfo) DateUtils.UTC_TIME_ZONE;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(zoneInfo0);\n    ZonedDateTime zonedDateTime0 = mockGregorianCalendar0.toZonedDateTime();\n    GregorianCalendar gregorianCalendar0 = MockGregorianCalendar.from(zonedDateTime0);\n    Date date0 = gregorianCalendar0.getGregorianChange();\n    DateUtils.ceiling(date0, (-608));\n}",
    "testName" : "test08798"
  },
  "test04753" : {
    "methodSignature" : "public static Date addDays(Date date, int amount)",
    "methodName" : "addDays",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04753() throws Throwable {\n    DateUtils.addDays((Date) null, (-1));\n}",
    "testName" : "test04753"
  },
  "test06776" : {
    "methodSignature" : "public static long getFragmentInMilliseconds(Calendar calendar, int fragment)",
    "methodName" : "getFragmentInMilliseconds",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06776() throws Throwable {\n    DateUtils dateUtils0 = new DateUtils();\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(dateUtils0.UTC_TIME_ZONE);\n    DateUtils.getFragmentInMilliseconds((Calendar) mockGregorianCalendar0, 4);\n}",
    "testName" : "test06776"
  },
  "test138154" : {
    "methodSignature" : "public static Date addMonths(Date date, int amount)",
    "methodName" : "addMonths",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test138154() throws Throwable {\n    DateUtils.addMonths((Date) null, 0);\n}",
    "testName" : "test138154"
  },
  "test05561" : {
    "methodSignature" : "public static int truncatedCompareTo(Date date1, Date date2, int field)",
    "methodName" : "truncatedCompareTo",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05561() throws Throwable {\n    MockDate mockDate0 = new MockDate((-1756), 2482, 1, 1891, 1);\n    int int0 = DateUtils.truncatedCompareTo((Date) mockDate0, (Date) mockDate0, 1);\n}",
    "testName" : "test05561"
  },
  "test07584" : {
    "methodSignature" : "public static Iterator<Calendar> iterator(Date focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07584() throws Throwable {\n    MockDate mockDate0 = new MockDate(0, 0, 0);\n    Iterator<Calendar> iterator0 = DateUtils.iterator((Date) mockDate0, 4);\n}",
    "testName" : "test07584"
  },
  "test03137" : {
    "methodSignature" : "public static Date setMinutes(Date date, int amount)",
    "methodName" : "setMinutes",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03137() throws Throwable {\n    DateUtils.setMinutes((Date) null, (-2516));\n}",
    "testName" : "test03137"
  },
  "test02329" : {
    "methodSignature" : "public static Date addMonths(Date date, int amount)",
    "methodName" : "addMonths",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02329() throws Throwable {\n    Instant instant0 = MockInstant.ofEpochSecond(1L);\n    Date date0 = Date.from(instant0);\n    Date date1 = DateUtils.addMonths(date0, 0);\n}",
    "testName" : "test02329"
  },
  "test04349" : {
    "methodSignature" : "public static Date addSeconds(Date date, int amount)",
    "methodName" : "addSeconds",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04349() throws Throwable {\n    DateUtils.addSeconds((Date) null, 0);\n}",
    "testName" : "test04349"
  },
  "test095106" : {
    "methodSignature" : "public static Date truncate(Object date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095106() throws Throwable {\n    DateUtils.truncate((Object) null, 3598);\n}",
    "testName" : "test095106"
  },
  "test112125" : {
    "methodSignature" : "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameLocalTime",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112125() throws Throwable {\n    Locale locale0 = Locale.JAPAN;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);\n    boolean boolean0 = DateUtils.isSameLocalTime(mockGregorianCalendar0, mockGregorianCalendar0);\n}",
    "testName" : "test112125"
  },
  "test120135" : {
    "methodSignature" : "public static boolean isSameInstant(Date date1, Date date2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test120135() throws Throwable {\n    DateUtils.isSameInstant((Date) null, (Date) null);\n}",
    "testName" : "test120135"
  },
  "test089100" : {
    "methodSignature" : "public static Date ceiling(Object date, int field)",
    "methodName" : "ceiling",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089100() throws Throwable {\n    Object object0 = new Object();\n    DateUtils.ceiling(object0, 0);\n}",
    "testName" : "test089100"
  },
  "test101112" : {
    "methodSignature" : "public static Date round(Object date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101112() throws Throwable {\n    MockDate mockDate0 = new MockDate();\n    DateUtils.round((Object) mockDate0, 3);\n}",
    "testName" : "test101112"
  },
  "test01622" : {
    "methodSignature" : "public static long getFragmentInSeconds(Date date, int fragment)",
    "methodName" : "getFragmentInSeconds",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01622() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(12, 12, 12);\n    Date date0 = mockGregorianCalendar0.getGregorianChange();\n    long long0 = DateUtils.getFragmentInSeconds(date0, 12);\n}",
    "testName" : "test01622"
  },
  "test04854" : {
    "methodSignature" : "public static Iterator<Calendar> iterator(Calendar focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04854() throws Throwable {\n    DateUtils dateUtils0 = new DateUtils();\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(dateUtils0.UTC_TIME_ZONE);\n    DateUtils.iterator((Calendar) mockGregorianCalendar0, 1001);\n}",
    "testName" : "test04854"
  },
  "test06877" : {
    "methodSignature" : "public static long getFragmentInSeconds(Date date, int fragment)",
    "methodName" : "getFragmentInSeconds",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06877() throws Throwable {\n    MockDate mockDate0 = new MockDate(403L);\n    DateUtils.getFragmentInSeconds((Date) mockDate0, 3);\n}",
    "testName" : "test06877"
  },
  "test02834" : {
    "methodSignature" : "public static Date setYears(Date date, int amount)",
    "methodName" : "setYears",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02834() throws Throwable {\n    DateUtils.setYears((Date) null, 1);\n}",
    "testName" : "test02834"
  },
  "test092103" : {
    "methodSignature" : "public static Date ceiling(Date date, int field)",
    "methodName" : "ceiling",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092103() throws Throwable {\n    DateUtils.ceiling((Date) null, 723);\n}",
    "testName" : "test092103"
  },
  "test00813" : {
    "methodSignature" : "public static int truncatedCompareTo(Date date1, Date date2, int field)",
    "methodName" : "truncatedCompareTo",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00813() throws Throwable {\n    MockDate mockDate0 = new MockDate((-1756), 2482, 1, 1891, 1);\n    Date date0 = DateUtils.addWeeks(mockDate0, 828);\n    int int0 = DateUtils.truncatedCompareTo((Date) mockDate0, date0, 1);\n}",
    "testName" : "test00813"
  },
  "test125141" : {
    "methodSignature" : "public static boolean isSameDay(Date date1, Date date2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang3.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test125141() throws Throwable {\n    String[] stringArray0 = new String[4];\n    stringArray0[0] = \"\";\n    Date date0 = DateUtils.parseDateStrictly(\"\", stringArray0);\n    boolean boolean0 = DateUtils.isSameDay(date0, date0);\n}",
    "testName" : "test125141"
  }
}