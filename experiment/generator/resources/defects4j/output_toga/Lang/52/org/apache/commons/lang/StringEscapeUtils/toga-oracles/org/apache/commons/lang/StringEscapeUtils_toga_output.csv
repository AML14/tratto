project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test011,"public void test011() throws Throwable {
    String string0 = StringEscapeUtils.escapeJava("".-I{75.|SH5's["");
    assertEquals("".-I{75.|SH5's["", string0);
}",0,
project,0,test022,"public void test022() throws Throwable {
    String string0 = StringEscapeUtils.unescapeJavaScript(""wd?%"");
    assertEquals(""wd?%"", string0);
}",0,
project,0,test066,"public void test066() throws Throwable {
    String string0 = ""\\u000"";
    String string1 = StringEscapeUtils.unescapeXml(string0);
    assertEquals(""\\u000"", string1);
}",0,assertNotNull(string1)
project,0,test077,"public void test077() throws Throwable {
    String string0 = StringEscapeUtils.unescapeJavaScript("""");
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test088,"public void test088() throws Throwable {
    String string0 = StringEscapeUtils.unescapeJava("""");
    assertEquals("""", string0);
}",0,
project,0,test099,"public void test099() throws Throwable {
    String string0 = StringEscapeUtils.unescapeHtml("""");
    assertEquals("""", string0);
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    String string0 = StringEscapeUtils.escapeXml("""");
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test1111,"public void test1111() throws Throwable {
    String string0 = ""\\u0"";
    String string1 = StringEscapeUtils.escapeSql(string0);
    assertEquals(""\\u0"", string1);
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    String string0 = StringEscapeUtils.escapeJavaScript("""");
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test1313,"public void test1313() throws Throwable {
    String string0 = StringEscapeUtils.escapeJava("""");
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test1414,"public void test1414() throws Throwable {
    String string0 = StringEscapeUtils.escapeHtml("""");
    assertEquals("""", string0);
}",0,
project,0,test1515,"public void test1515() throws Throwable {
    String string0 = ""Q+3q\\u==+CQ{"";
    // Undeclared exception!
    try {
        StringEscapeUtils.unescapeJavaScript(string0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // Unable to parse unicode value: ==+C
        //
        verifyException(""org.apache.commons.lang.StringEscapeUtils"", e);
    }
}",0,
project,0,test1616,"public void test1616() throws Throwable {
    String string0 = ""Q+3q\\u==+CQ{"";
    StringWriter stringWriter0 = new StringWriter(0);
    // Undeclared exception!
    try {
        StringEscapeUtils.unescapeJavaScript((Writer) stringWriter0, string0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // Unable to parse unicode value: ==+C
        //
        verifyException(""org.apache.commons.lang.StringEscapeUtils"", e);
    }
}",0,
project,0,test1717,"public void test1717() throws Throwable {
    // Undeclared exception!
    try {
        StringEscapeUtils.unescapeJavaScript((Writer) null, ""*FCz*8fg$85vkSW56N("");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Writer must not be null
        //
        verifyException(""org.apache.commons.lang.StringEscapeUtils"", e);
    }
}",0,
project,0,test1818,"public void test1818() throws Throwable {
    // Undeclared exception!
    try {
        StringEscapeUtils.escapeJavaScript((Writer) null, ""8206"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Writer must not be null
        //
        verifyException(""org.apache.commons.lang.StringEscapeUtils"", e);
    }
}",0,
project,0,test2121,"public void test2121() throws Throwable {
    StringWriter stringWriter0 = new StringWriter(16);
    String string0 = ""j\\uoH=lX@"";
    // Undeclared exception!
    try {
        StringEscapeUtils.unescapeJava((Writer) stringWriter0, string0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // Unable to parse unicode value: oH=l
        //
        verifyException(""org.apache.commons.lang.StringEscapeUtils"", e);
    }
}",0,
project,0,test2222,"public void test2222() throws Throwable {
    String string0 = StringEscapeUtils.unescapeJava((String) null);
    assertNull(string0);
}",0,
project,0,test2323,"public void test2323() throws Throwable {
    String string0 = ""\\u0"";
    String string1 = StringEscapeUtils.escapeJavaScript(string0);
    assertEquals(""\\\\u0"", string1);
}",0,assertNotNull(string1)
project,0,test2424,"public void test2424() throws Throwable {
    String string0 = StringEscapeUtils.escapeSql((String) null);
    assertNull(string0);
}",0,
project,0,test2525,"public void test2525() throws Throwable {
    String string0 = StringEscapeUtils.escapeSql("""");
    assertEquals("""", string0);
}",0,
project,0,test2626,"public void test2626() throws Throwable {
    String string0 = StringEscapeUtils.unescapeXml((String) null);
    assertNull(string0);
}",0,
project,0,test2727,"public void test2727() throws Throwable {
    String string0 = StringEscapeUtils.unescapeXml("""");
    assertEquals("""", string0);
}",0,
project,0,test2929,"public void test2929() throws Throwable {
    // Undeclared exception!
    try {
        StringEscapeUtils.unescapeXml((Writer) null, ""pEQwj"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Writer must not be null.
        //
        verifyException(""org.apache.commons.lang.StringEscapeUtils"", e);
    }
}",0,
project,0,test3131,"public void test3131() throws Throwable {
    String string0 = StringEscapeUtils.escapeXml((String) null);
    assertNull(string0);
}",0,
project,0,test3232,"public void test3232() throws Throwable {
    String string0 = StringEscapeUtils.escapeXml(""Mw:U@A~]A\""+'T=k<DH"");
    assertEquals(""Mw:U@A~]A&quot;+&apos;T=k&lt;DH"", string0);
}",0,assertNotNull(string0)
project,0,test3434,"public void test3434() throws Throwable {
    // Undeclared exception!
    try {
        StringEscapeUtils.escapeXml((Writer) null, ""org.apache.commons.lang.StringEscapeUtils"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Writer must not be null.
        //
        verifyException(""org.apache.commons.lang.StringEscapeUtils"", e);
    }
}",0,
project,0,test3737,"public void test3737() throws Throwable {
    // Undeclared exception!
    try {
        StringEscapeUtils.unescapeHtml((Writer) null, ""sigma"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Writer must not be null.
        //
        verifyException(""org.apache.commons.lang.StringEscapeUtils"", e);
    }
}",1,
project,0,test3838,"public void test3838() throws Throwable {
    String string0 = StringEscapeUtils.unescapeHtml((String) null);
    assertNull(string0);
}",0,
project,0,test3939,"public void test3939() throws Throwable {
    String string0 = StringEscapeUtils.unescapeHtml(""m?a4"");
    assertEquals(""m?a4"", string0);
}",0,
project,0,test4142,"public void test4142() throws Throwable {
    // Undeclared exception!
    try {
        StringEscapeUtils.escapeHtml((Writer) null, """");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Writer must not be null.
        //
        verifyException(""org.apache.commons.lang.StringEscapeUtils"", e);
    }
}",1,
project,0,test4243,"public void test4243() throws Throwable {
    String string0 = StringEscapeUtils.escapeHtml((String) null);
    assertNull(string0);
}",0,
project,0,test4344,"public void test4344() throws Throwable {
    String string0 = StringEscapeUtils.escapeHtml(""!eMgGmVz"");
    assertNotNull(string0);
}",0,
project,0,test4446,"public void test4446() throws Throwable {
    String string0 = StringEscapeUtils.unescapeJava(""5'{GEwz?V]A[/hbiDW"");
    assertEquals(""5'{GEwz?V]A[/hbiDW"", string0);
}",0,
project,0,test4547,"public void test4547() throws Throwable {
    String string0 = StringEscapeUtils.unescapeJava(""Mw:U@A~]A\\\""+'T=k<DH"");
    assertEquals(""Mw:U@A~]A\""+'T=k<DH"", string0);
}",0,assertNotNull(string0)
project,0,test4648,"public void test4648() throws Throwable {
    String string0 = ""Q+3q\\u==+CQ{"";
    // Undeclared exception!
    try {
        StringEscapeUtils.unescapeJava(string0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // Unable to parse unicode value: ==+C
        //
        verifyException(""org.apache.commons.lang.StringEscapeUtils"", e);
    }
}",0,
project,0,test4850,"public void test4850() throws Throwable {
    // Undeclared exception!
    try {
        StringEscapeUtils.unescapeJava((Writer) null, (String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Writer must not be null
        //
        verifyException(""org.apache.commons.lang.StringEscapeUtils"", e);
    }
}",0,
project,0,test4951,"public void test4951() throws Throwable {
    String string0 = StringEscapeUtils.escapeJava(""S\ra"");
    assertEquals(""S\\ra"", string0);
}",0,assertNotNull(string0)
project,0,test5052,"public void test5052() throws Throwable {
    // Undeclared exception!
    try {
        StringEscapeUtils.escapeJava((Writer) null, """");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Writer must not be null
        //
        verifyException(""org.apache.commons.lang.StringEscapeUtils"", e);
    }
}",0,
project,0,test5153,"public void test5153() throws Throwable {
    String string0 = StringEscapeUtils.escapeJavaScript(""Axn(5sbLt,J'}"");
    assertEquals(""Axn(5sbLt,J\\'}"", string0);
}",0,
project,0,test5355,"public void test5355() throws Throwable {
    String string0 = StringEscapeUtils.escapeJava((String) null);
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test5456,"public void test5456() throws Throwable {
    StringEscapeUtils stringEscapeUtils0 = new StringEscapeUtils();
}",0,
project,0,test5658,"public void test5658() throws Throwable {
    String string0 = StringEscapeUtils.escapeJavaScript((String) null);
    String string1 = StringEscapeUtils.unescapeJavaScript(string0);
    assertNull(string1);
}",0,assertNotNull(string1)
