{
  "test1212" : {
    "methodSignature" : "public static List<Class<?>> getAllInterfaces(Class<?> cls)",
    "methodName" : "getAllInterfaces",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Byte byte0 = new Byte((byte) 104);\n    Byte.toUnsignedInt((byte) (-7));\n    ClassUtils.getShortCanonicalName((Object) byte0, \"[]\");\n    ClassUtils.getShortCanonicalName((Object) \"X2T+@,f`tEZ{O7]i/yT\", \"Byte\");\n    Class<Short>[] classArray0 = (Class<Short>[]) Array.newInstance(Class.class, 2);\n    Class<Short> class0 = Short.class;\n    classArray0[0] = class0;\n    Class<Short> class1 = Short.class;\n    classArray0[1] = class1;\n    ClassUtils.wrappersToPrimitives(classArray0);\n    ClassUtils.toClass(classArray0);\n    ClassUtils.isInnerClass(class0);\n    ClassUtils.getAllInterfaces(class0);\n}",
    "testName" : "test1212"
  },
  "test4646" : {
    "methodSignature" : "public static String getShortClassName(String className)",
    "methodName" : "getShortClassName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4646() throws Throwable {\n    Class<Boolean> class0 = Boolean.class;\n    ClassUtils.getPackageCanonicalName(class0);\n    ClassUtils.getShortCanonicalName((Object) \"java.lang\", \"java.ext.dirs\");\n    ClassUtils.getShortClassName(\"java.ext.dirs\");\n}",
    "testName" : "test4646"
  },
  "test3434" : {
    "methodSignature" : "public static String getPackageCanonicalName(Class<?> cls)",
    "methodName" : "getPackageCanonicalName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    Class<Double>[] classArray0 = (Class<Double>[]) Array.newInstance(Class.class, 0);\n    ClassUtils.isAssignable(classArray0, classArray0);\n    ClassUtils.getPackageCanonicalName(\"user.region\");\n    Class<?>[] classArray1 = ClassUtils.primitivesToWrappers(classArray0);\n    Class<Boolean> class0 = Boolean.class;\n    Class<String> class1 = String.class;\n    ClassUtils.isAssignable(class0, class1, true);\n    ClassUtils.toClass(classArray1);\n    Class<Byte> class2 = Byte.class;\n    ClassUtils.getPackageCanonicalName(class2);\n}",
    "testName" : "test3434"
  },
  "test6868" : {
    "methodSignature" : "public static String getShortCanonicalName(String canonicalName)",
    "methodName" : "getShortCanonicalName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6868() throws Throwable {\n    Class<Double> class0 = Double.class;\n    ClassUtils.getPackageName(class0);\n    ClassUtils.getPackageName(class0);\n    ClassUtils classUtils0 = new ClassUtils();\n    Class<Double>[] classArray0 = (Class<Double>[]) Array.newInstance(Class.class, 3);\n    Class<Double> class1 = Double.class;\n    classArray0[0] = class1;\n    classArray0[1] = class0;\n    classArray0[2] = class0;\n    ClassUtils.isAssignable(classArray0, classArray0);\n    Byte byte0 = new Byte((byte) (-48));\n    ClassUtils.getPackageCanonicalName((Object) byte0, \"java.lang\");\n    Class<Double> class2 = Double.TYPE;\n    ClassUtils.primitiveToWrapper(class2);\n    ClassUtils.getShortCanonicalName((Object) class2, \"$\");\n    Class<Boolean> class3 = Boolean.class;\n    ClassUtils.getAllSuperclasses(class3);\n    Class<?>[] classArray1 = ClassUtils.wrappersToPrimitives(classArray0);\n    ClassUtils.isAssignable(classArray1, classArray0, true);\n    ClassUtils.getShortCanonicalName(\"[IvWC:-J\");\n}",
    "testName" : "test6868"
  },
  "test5656" : {
    "methodSignature" : "public static String getShortClassName(String className)",
    "methodName" : "getShortClassName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5656() throws Throwable {\n    Class<Character>[] classArray0 = (Class<Character>[]) Array.newInstance(Class.class, 8);\n    Class<Character> class0 = Character.class;\n    classArray0[0] = class0;\n    Class<Character> class1 = Character.class;\n    classArray0[1] = class1;\n    Class<Character> class2 = Character.class;\n    classArray0[2] = class2;\n    Class<Character> class3 = Character.class;\n    classArray0[3] = class3;\n    Class<Character> class4 = Character.class;\n    classArray0[4] = class4;\n    Class<Character> class5 = Character.class;\n    classArray0[5] = class5;\n    Class<Character> class6 = Character.class;\n    classArray0[6] = class6;\n    Class<Character> class7 = Character.class;\n    classArray0[7] = class7;\n    ClassUtils.primitivesToWrappers(classArray0);\n    Class<String> class8 = String.class;\n    ClassUtils.getAllInterfaces(class8);\n    ClassUtils classUtils0 = new ClassUtils();\n    ClassUtils.isAssignable(classArray0, classArray0);\n    Class<Object> class9 = Object.class;\n    ClassUtils.getAllSuperclasses(class9);\n    Class<Object> class10 = Object.class;\n    ClassUtils.isInnerClass(class10);\n    ClassUtils.getShortClassName(\"\");\n}",
    "testName" : "test5656"
  },
  "test7878" : {
    "methodSignature" : "public static String getShortClassName(Class<?> cls)",
    "methodName" : "getShortClassName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7878() throws Throwable {\n    Class<Short>[] classArray0 = (Class<Short>[]) Array.newInstance(Class.class, 0);\n    ClassUtils.wrappersToPrimitives(classArray0);\n    Boolean boolean0 = Boolean.valueOf(\"k2?\");\n    ClassUtils.getPackageName((Object) boolean0, \"MAn5ru\");\n    Class<Character> class0 = Character.class;\n    ClassUtils.getShortClassName(class0);\n}",
    "testName" : "test7878"
  },
  "test3232" : {
    "methodSignature" : "public static String getPackageCanonicalName(String canonicalName)",
    "methodName" : "getPackageCanonicalName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    Class<Object> class0 = Object.class;\n    String string0 = ClassUtils.getPackageCanonicalName(class0);\n    ClassUtils.getClass((ClassLoader) null, \"java.lang\");\n    ClassUtils.getPackageCanonicalName(string0);\n}",
    "testName" : "test3232"
  },
  "test6666" : {
    "methodSignature" : "public static String getShortCanonicalName(String canonicalName)",
    "methodName" : "getShortCanonicalName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6666() throws Throwable {\n    Class<Double> class0 = Double.class;\n    ClassUtils.getPackageName(class0);\n    ClassUtils.getPackageName(class0);\n    ClassUtils classUtils0 = new ClassUtils();\n    LinkedList<String> linkedList0 = new LinkedList<String>();\n    linkedList0.add(\"java.lang\");\n    ClassUtils.convertClassNamesToClasses(linkedList0);\n    Class<Double>[] classArray0 = (Class<Double>[]) Array.newInstance(Class.class, 3);\n    Class<Double> class1 = Double.class;\n    classArray0[0] = class1;\n    classArray0[1] = class0;\n    classArray0[2] = class0;\n    ClassUtils.isAssignable(classArray0, classArray0);\n    Byte byte0 = new Byte((byte) (-48));\n    ClassUtils.getPackageCanonicalName((Object) byte0, \"java.lang\");\n    Class<Double> class2 = Double.class;\n    ClassUtils.primitiveToWrapper(class2);\n    ClassUtils.getShortCanonicalName((Object) class2, \"$\");\n    Class<Boolean> class3 = Boolean.class;\n    ClassUtils.getAllSuperclasses(class3);\n    Class<?>[] classArray1 = ClassUtils.wrappersToPrimitives(classArray0);\n    ClassUtils.isAssignable(classArray1, classArray0, false);\n    ClassUtils.getShortCanonicalName(\"[IvWC:-J\");\n}",
    "testName" : "test6666"
  },
  "test7676" : {
    "methodSignature" : "public static String getShortClassName(Object object, String valueIfNull)",
    "methodName" : "getShortClassName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7676() throws Throwable {\n    Class<Float> class0 = Float.TYPE;\n    ClassUtils.getPackageCanonicalName((Object) class0, \"', has a length less than 2\");\n    ClassUtils.getShortCanonicalName(\"java.lang\");\n    ClassUtils.isAssignable(class0, class0);\n    Class<Boolean> class1 = Boolean.class;\n    Class<Object> class2 = Object.class;\n    ClassUtils.getPackageName(class2);\n    ClassUtils.isAssignable(class1, class0, true);\n    ClassUtils.getShortClassName((Object) class2, \")EwTIK69F*ws[\");\n}",
    "testName" : "test7676"
  },
  "test033" : {
    "methodSignature" : "public static String getPackageCanonicalName(Object object, String valueIfNull)",
    "methodName" : "getPackageCanonicalName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ClassUtils.wrapperToPrimitive(class0);\n    Object object0 = new Object();\n    Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 0);\n    ClassUtils.primitivesToWrappers(classArray0);\n    ClassUtils.getAllSuperclasses((Class<?>) null);\n    ClassUtils.getPackageCanonicalName((Class<?>) null);\n    ClassUtils.getShortClassName((Object) null, \"Windows 9\");\n    ClassLoader.getSystemClassLoader();\n    Class<Integer> class1 = Integer.class;\n    ClassUtils.primitiveToWrapper(class1);\n    Class<Integer> class2 = Integer.class;\n    ClassUtils.wrapperToPrimitive(class2);\n    Class<Double> class3 = Double.class;\n    ClassUtils.getShortClassName(class3);\n    ClassUtils.getPackageCanonicalName((Object) null, \"\");\n}",
    "testName" : "test033"
  },
  "test077" : {
    "methodSignature" : "public static Class<?> primitiveToWrapper(Class<?> cls)",
    "methodName" : "primitiveToWrapper",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Class<Short>[] classArray0 = (Class<Short>[]) Array.newInstance(Class.class, 3);\n    Class<Short> class0 = Short.class;\n    classArray0[0] = class0;\n    Class<Short> class1 = Short.class;\n    classArray0[1] = class1;\n    Class<Short> class2 = Short.class;\n    classArray0[2] = class2;\n    ClassUtils.wrappersToPrimitives((Class<?>[]) null);\n    ClassUtils.primitivesToWrappers(classArray0);\n    ClassUtils.getPackageCanonicalName(\"H#SP\\\"<<\\\"O6D3V\");\n    ClassUtils.primitivesToWrappers((Class<?>[]) null);\n    ClassUtils.getAllInterfaces(class0);\n    ClassUtils.convertClassNamesToClasses((List<String>) null);\n    ClassUtils.wrappersToPrimitives(classArray0);\n    Class<String> class3 = String.class;\n    ClassUtils.primitiveToWrapper(class3);\n}",
    "testName" : "test077"
  },
  "test1616" : {
    "methodSignature" : "public static String getPackageCanonicalName(String canonicalName)",
    "methodName" : "getPackageCanonicalName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    Class<Float> class0 = Float.class;\n    Class<String> class1 = String.class;\n    ClassUtils.isAssignable(class0, class1);\n    ClassUtils.getPackageCanonicalName((String) null);\n}",
    "testName" : "test1616"
  },
  "test3838" : {
    "methodSignature" : "public static String getShortClassName(String className)",
    "methodName" : "getShortClassName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3838() throws Throwable {\n    Class<Double> class0 = Double.class;\n    ClassUtils.primitiveToWrapper(class0);\n    Class<Float>[] classArray0 = (Class<Float>[]) Array.newInstance(Class.class, 4);\n    Class<Float> class1 = Float.class;\n    classArray0[0] = class1;\n    Class<Float> class2 = Float.class;\n    classArray0[1] = class2;\n    Class<Float> class3 = Float.class;\n    classArray0[2] = class3;\n    Class<Float> class4 = Float.class;\n    classArray0[3] = class4;\n    ClassUtils.isAssignable(classArray0, classArray0, true);\n    Class<Short>[] classArray1 = (Class<Short>[]) Array.newInstance(Class.class, 0);\n    ClassUtils.isAssignable(classArray0, classArray1, true);\n    ClassUtils.getShortClassName(\"5#EFG\");\n}",
    "testName" : "test3838"
  },
  "test2828" : {
    "methodSignature" : "public static boolean isAssignable(Class<?> cls, Class<?> toClass)",
    "methodName" : "isAssignable",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    Class<Character> class0 = Character.class;\n    ClassUtils.getPackageCanonicalName(class0);\n    ClassUtils.isAssignable(class0, class0);\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public static String getPackageName(Object object, String valueIfNull)",
    "methodName" : "getPackageName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    ClassUtils classUtils0 = new ClassUtils();\n    ClassUtils.getPackageName((Object) classUtils0, \"Lz+O_j{lD'oz@1\");\n}",
    "testName" : "test1414"
  },
  "test4848" : {
    "methodSignature" : "public static String getShortClassName(String className)",
    "methodName" : "getShortClassName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4848() throws Throwable {\n    Object[] objectArray0 = new Object[4];\n    Object object0 = new Object();\n    objectArray0[0] = object0;\n    Object object1 = new Object();\n    objectArray0[1] = object1;\n    Object object2 = new Object();\n    objectArray0[2] = object2;\n    Object object3 = new Object();\n    objectArray0[3] = object3;\n    Class<?>[] classArray0 = ClassUtils.toClass(objectArray0);\n    Class<Boolean> class0 = Boolean.class;\n    ClassUtils.getAllSuperclasses(class0);\n    Class<?>[] classArray1 = ClassUtils.toClass(classArray0);\n    ClassUtils.getShortClassName(\"ENlz#w5Z\");\n    ClassUtils.getPublicMethod(class0, (String) null, classArray1);\n    String string0 = \"\";\n    ClassUtils.getShortClassName(string0);\n}",
    "testName" : "test4848"
  },
  "test3636" : {
    "methodSignature" : "public static String getShortCanonicalName(String canonicalName)",
    "methodName" : "getShortCanonicalName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3636() throws Throwable {\n    ClassUtils.getShortClassName(\"]{?}\");\n    Class<Double> class0 = Double.class;\n    ClassUtils.isAssignable(class0, class0, true);\n    ClassUtils.getShortCanonicalName(\"]{?}\");\n}",
    "testName" : "test3636"
  },
  "test2626" : {
    "methodSignature" : "public static boolean isAssignable(Class<?>[] classArray, Class<?>[] toClassArray, boolean autoboxing)",
    "methodName" : "isAssignable",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    ClassUtils.toClass((Object[]) null);\n    ClassUtils.isAssignable((Class<?>[]) null, (Class<?>[]) null, false);\n}",
    "testName" : "test2626"
  },
  "test6060" : {
    "methodSignature" : "public static String getShortCanonicalName(String canonicalName)",
    "methodName" : "getShortCanonicalName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6060() throws Throwable {\n    Class<Byte>[] classArray0 = (Class<Byte>[]) Array.newInstance(Class.class, 6);\n    Class<Byte> class0 = Byte.class;\n    classArray0[0] = class0;\n    Class<Byte> class1 = Byte.class;\n    classArray0[1] = class1;\n    Class<Byte> class2 = Byte.class;\n    classArray0[2] = class2;\n    Class<Byte> class3 = Byte.class;\n    classArray0[3] = class3;\n    Class<Byte> class4 = Byte.class;\n    classArray0[4] = class4;\n    Class<Byte> class5 = Byte.class;\n    classArray0[5] = class5;\n    ClassUtils.isAssignable(classArray0, classArray0, true);\n    Class<Long> class6 = Long.class;\n    ClassUtils.isAssignable(class0, class6);\n    Class<ClassUtils> class7 = ClassUtils.class;\n    ClassUtils.isAssignable(class0, class7);\n    ClassUtils.getAllSuperclasses(class0);\n    String string0 = null;\n    ClassUtils.getShortClassName((String) null);\n    ClassUtils.isInnerClass(class2);\n    ClassUtils.getClass(\"\", true);\n    String string1 = \"]$;)\";\n    ClassUtils.getShortCanonicalName(string1);\n}",
    "testName" : "test6060"
  },
  "test7070" : {
    "methodSignature" : "public static String getShortClassName(String className)",
    "methodName" : "getShortClassName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7070() throws Throwable {\n    Class<Short>[] classArray0 = (Class<Short>[]) Array.newInstance(Class.class, 3);\n    Class<Short> class0 = Short.class;\n    classArray0[0] = class0;\n    Class<Short> class1 = Short.class;\n    classArray0[1] = class1;\n    Class<Short> class2 = Short.class;\n    classArray0[2] = class2;\n    Class<?>[] classArray1 = ClassUtils.wrappersToPrimitives(classArray0);\n    Object object0 = new Object();\n    ClassUtils.getShortCanonicalName(object0, \"long\");\n    ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n    classLoader0.getParent();\n    Class<?> class3 = ClassUtils.getClass(classLoader0, \"long\", true);\n    classLoader0.setClassAssertionStatus(\"long\", false);\n    Class<Object> class4 = Object.class;\n    ClassUtils.isAssignable(class3, class4, false);\n    ClassUtils.primitivesToWrappers(classArray0);\n    ClassUtils.getPackageCanonicalName(\"H#SP\\\"<<\\\"O6D3V\");\n    ClassUtils.getAllInterfaces(class3);\n    List<Class<?>> list0 = ClassUtils.getAllSuperclasses(class3);\n    ClassUtils.primitivesToWrappers(classArray1);\n    ClassUtils.getAllInterfaces(class0);\n    Class<Double> class5 = Double.class;\n    ClassUtils.getAllInterfaces(class5);\n    ClassUtils.getClass(classLoader0, \"long\");\n    ClassUtils.convertClassesToClassNames(list0);\n    ClassUtils.getShortClassName(\"<rG8,Zq\");\n}",
    "testName" : "test7070"
  },
  "test8080" : {
    "methodSignature" : "public static List<String> convertClassesToClassNames(List<Class<?>> classes)",
    "methodName" : "convertClassesToClassNames",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8080() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ClassUtils.wrapperToPrimitive(class0);\n    Object object0 = new Object();\n    Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 0);\n    ClassUtils.primitivesToWrappers(classArray0);\n    ClassUtils.getAllSuperclasses((Class<?>) null);\n    ClassUtils.getPackageCanonicalName((Class<?>) null);\n    ClassUtils.getShortClassName((Object) null, \"Windows 9\");\n    ClassLoader.getSystemClassLoader();\n    Class<Integer> class1 = Integer.class;\n    ClassUtils.primitiveToWrapper(class1);\n    Class<Integer> class2 = Integer.class;\n    ClassUtils.wrapperToPrimitive(class2);\n    ClassUtils.convertClassesToClassNames((List<Class<?>>) null);\n}",
    "testName" : "test8080"
  },
  "test4242" : {
    "methodSignature" : "public static List<Class<?>> getAllSuperclasses(Class<?> cls)",
    "methodName" : "getAllSuperclasses",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4242() throws Throwable {\n    ClassUtils classUtils0 = new ClassUtils();\n    ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n    ClassUtils.getClass(classLoader0, (String) null, true);\n    Class<Double> class0 = Double.class;\n    ClassUtils.getAllSuperclasses(class0);\n}",
    "testName" : "test4242"
  },
  "test3030" : {
    "methodSignature" : "public static Class<?> getClass(String className) throws ClassNotFoundException",
    "methodName" : "getClass",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    ClassUtils.getShortCanonicalName(\"[\");\n    Object[] objectArray0 = new Object[5];\n    objectArray0[0] = (Object) \"[]\";\n    objectArray0[1] = (Object) \"[]\";\n    objectArray0[2] = (Object) \"[]\";\n    objectArray0[3] = (Object) \"[\";\n    objectArray0[4] = (Object) \"[\";\n    ClassUtils.toClass(objectArray0);\n    Float float0 = new Float(3.912323F);\n    ClassUtils.getPackageName((Object) float0, (String) null);\n    ClassUtils.getClass(\"', has a length less than 2\");\n}",
    "testName" : "test3030"
  },
  "test6464" : {
    "methodSignature" : "public static Class<?>[] toClass(Object[] array)",
    "methodName" : "toClass",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6464() throws Throwable {\n    Object object0 = new Object();\n    Object[] objectArray0 = new Object[8];\n    objectArray0[3] = object0;\n    objectArray0[4] = object0;\n    objectArray0[7] = object0;\n    ClassUtils.toClass(objectArray0);\n}",
    "testName" : "test6464"
  },
  "test5252" : {
    "methodSignature" : "public static String getPackageCanonicalName(String canonicalName)",
    "methodName" : "getPackageCanonicalName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5252() throws Throwable {\n    Class<Byte> class0 = Byte.TYPE;\n    ClassUtils.getPackageName((Object) class0, \"&gHsATfMT<)UJA \");\n    Class<Long> class1 = Long.TYPE;\n    ClassUtils.getPackageName((Object) class1, \"&gHsATfMT<)UJA \");\n    ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n    classLoader0.clearAssertionStatus();\n    ClassLoader classLoader1 = classLoader0.getParent();\n    classLoader0.setPackageAssertionStatus(\"\", true);\n    ClassUtils.getClass(classLoader1, \"byte\", false);\n    Class<String> class2 = String.class;\n    ClassUtils.isAssignable(class0, class2);\n    ClassUtils.getPackageCanonicalName(\"S\");\n}",
    "testName" : "test5252"
  },
  "test2020" : {
    "methodSignature" : "public static Class<?>[] primitivesToWrappers(Class<?>[] classes)",
    "methodName" : "primitivesToWrappers",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    Class<Integer> class0 = Integer.class;\n    ClassUtils.getShortCanonicalName(class0);\n    Class<Character>[] classArray0 = (Class<Character>[]) Array.newInstance(Class.class, 4);\n    Class<Character> class1 = Character.class;\n    classArray0[0] = class1;\n    Class<Character> class2 = Character.class;\n    classArray0[1] = class2;\n    Class<Character> class3 = Character.class;\n    classArray0[2] = class3;\n    Class<Character> class4 = Character.class;\n    classArray0[3] = class4;\n    ClassUtils.primitivesToWrappers(classArray0);\n}",
    "testName" : "test2020"
  },
  "test7474" : {
    "methodSignature" : "public static String getShortCanonicalName(String canonicalName)",
    "methodName" : "getShortCanonicalName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7474() throws Throwable {\n    Class<Byte>[] classArray0 = (Class<Byte>[]) Array.newInstance(Class.class, 6);\n    Class<Byte> class0 = Byte.class;\n    Class<Byte> class1 = Byte.class;\n    classArray0[1] = class1;\n    Class<Byte> class2 = Byte.class;\n    classArray0[2] = class2;\n    Class<Byte> class3 = Byte.class;\n    classArray0[3] = class3;\n    Class<Byte> class4 = Byte.class;\n    classArray0[4] = class4;\n    Class<Byte> class5 = Byte.class;\n    classArray0[5] = class5;\n    ClassUtils.isAssignable(classArray0, classArray0, true);\n    Class<Long> class6 = Long.class;\n    ClassUtils.isAssignable(class0, class6);\n    Class<ClassUtils> class7 = ClassUtils.class;\n    ClassUtils.isAssignable(classArray0[0], class7);\n    ClassUtils.getAllSuperclasses(class0);\n    String string0 = null;\n    ClassUtils.getShortClassName((String) null);\n    ClassUtils.isInnerClass(class2);\n    ClassUtils.getClass(\"\", true);\n    String string1 = \"]$;)\";\n    ClassUtils.getShortCanonicalName(string1);\n}",
    "testName" : "test7474"
  },
  "test4040" : {
    "methodSignature" : "public static String getPackageName(String className)",
    "methodName" : "getPackageName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4040() throws Throwable {\n    Class<Integer> class0 = Integer.class;\n    ClassUtils.getAllSuperclasses(class0);\n    ClassUtils.getPackageName(\"q0U!|^\");\n}",
    "testName" : "test4040"
  },
  "test6262" : {
    "methodSignature" : "public static String getShortCanonicalName(String canonicalName)",
    "methodName" : "getShortCanonicalName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6262() throws Throwable {\n    Class<Float> class0 = Float.TYPE;\n    ClassUtils.getShortClassName(class0);\n    ClassUtils.isInnerClass(class0);\n    ClassUtils.getShortCanonicalName((Class<?>) null);\n    ClassUtils.getShortCanonicalName(\":50>3?9\");\n}",
    "testName" : "test6262"
  },
  "test5050" : {
    "methodSignature" : "public static String getPackageCanonicalName(Class<?> cls)",
    "methodName" : "getPackageCanonicalName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5050() throws Throwable {\n    Integer integer0 = new Integer((-1));\n    Integer.toUnsignedString(48);\n    ClassUtils.getPackageName((Object) integer0, \"\");\n    ClassUtils classUtils0 = new ClassUtils();\n    ClassUtils.getPackageCanonicalName((Object) null, \"java.awt.headless\");\n    Class<Long> class0 = Long.class;\n    ClassUtils.isInnerClass(class0);\n    ClassUtils.getPackageCanonicalName(class0);\n}",
    "testName" : "test5050"
  },
  "test7272" : {
    "methodSignature" : "public static Class<?> getClass(ClassLoader classLoader, String className, boolean initialize) throws ClassNotFoundException",
    "methodName" : "getClass",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7272() throws Throwable {\n    Class<Integer> class0 = Integer.TYPE;\n    ClassUtils.isInnerClass(class0);\n    Class<Double> class1 = Double.TYPE;\n    ClassUtils.isInnerClass(class1);\n    ClassUtils.getPackageName(\"byte\");\n    ClassUtils.isAssignable(class1, class0, true);\n    ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n    classLoader0.getParent();\n    classLoader0.setClassAssertionStatus((String) null, true);\n    ClassUtils.getClass(classLoader0, \"\", true);\n}",
    "testName" : "test7272"
  },
  "test022" : {
    "methodSignature" : "public static Class<?> wrapperToPrimitive(Class<?> cls)",
    "methodName" : "wrapperToPrimitive",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Class<Byte>[] classArray0 = (Class<Byte>[]) Array.newInstance(Class.class, 6);\n    Class<Byte> class0 = Byte.class;\n    classArray0[0] = class0;\n    Class<Byte> class1 = Byte.class;\n    Class<Byte> class2 = Byte.class;\n    classArray0[3] = class2;\n    Class<Byte> class3 = Byte.class;\n    classArray0[5] = class3;\n    ClassUtils.isAssignable(classArray0, classArray0, true);\n    Class<Long> class4 = Long.TYPE;\n    ClassUtils.isAssignable(classArray0[1], class4);\n    Class<ClassUtils> class5 = ClassUtils.class;\n    ClassUtils.isAssignable(class0, class5);\n    ClassUtils.getAllSuperclasses(classArray0[1]);\n    String string0 = null;\n    ClassUtils.isInnerClass(class1);\n    ClassUtils.getShortCanonicalName(\"]$;)\");\n    ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n    ClassLoader classLoader1 = classLoader0.getParent();\n    classLoader0.setDefaultAssertionStatus(true);\n    Class<?> class6 = ClassUtils.getClass(classLoader1, \"]$;)\");\n    ClassUtils.getAllSuperclasses(class6);\n    ClassUtils.getPackageCanonicalName(string0);\n    ClassUtils.getShortClassName(string0);\n    Class<Object> class7 = Object.class;\n    ClassUtils.wrapperToPrimitive(class7);\n}",
    "testName" : "test022"
  },
  "test066" : {
    "methodSignature" : "public static String getPackageName(String className)",
    "methodName" : "getPackageName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    LinkedList<String> linkedList0 = new LinkedList<String>();\n    linkedList0.add(\"Ua\");\n    linkedList0.set(0, \"java.vm.specification.name\");\n    linkedList0.add(\"Ua\");\n    linkedList0.add(\"Ua\");\n    List<Class<?>> list0 = ClassUtils.convertClassNamesToClasses(linkedList0);\n    Object[] objectArray0 = new Object[2];\n    Object object0 = new Object();\n    objectArray0[0] = object0;\n    linkedList0.clone();\n    objectArray0[1] = (Object) \"Ua\";\n    Class<?>[] classArray0 = ClassUtils.toClass(objectArray0);\n    ClassUtils.getShortCanonicalName(\"Ua\");\n    Class<Short> class0 = Short.class;\n    linkedList0.add(\"java.vm.specification.name\");\n    Class<?> class1 = ClassUtils.primitiveToWrapper(class0);\n    ClassUtils.convertClassesToClassNames(list0);\n    linkedList0.add(\"Ua\");\n    Class<Long> class2 = Long.class;\n    Class<Byte> class3 = Byte.TYPE;\n    ClassUtils.isAssignable(class2, class3, true);\n    ClassUtils.isAssignable(classArray0, classArray0, true);\n    Class<Object> class4 = Object.class;\n    ClassUtils.isAssignable(class1, class4);\n    Class<String> class5 = String.class;\n    ClassUtils.isInnerClass(class5);\n    ClassUtils.getShortClassName((Class<?>) null);\n    ClassUtils.getPackageName(\"I\");\n}",
    "testName" : "test066"
  },
  "test1818" : {
    "methodSignature" : "public static String getPackageCanonicalName(String canonicalName)",
    "methodName" : "getPackageCanonicalName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    Class<Byte> class0 = Byte.class;\n    ClassUtils.isAssignable(class0, class0, false);\n    Class<Short>[] classArray0 = (Class<Short>[]) Array.newInstance(Class.class, 0);\n    ClassUtils.primitivesToWrappers(classArray0);\n    ClassUtils.getPackageCanonicalName((Object) class0, \";O=/!]h\");\n    ClassUtils.getPackageCanonicalName(\";O=/!]h\");\n}",
    "testName" : "test1818"
  },
  "test5757" : {
    "methodSignature" : "public static boolean isAssignable(Class<?>[] classArray, Class<?>[] toClassArray, boolean autoboxing)",
    "methodName" : "isAssignable",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5757() throws Throwable {\n    Character character0 = new Character('3');\n    Character.highSurrogate(3);\n    Character.lowSurrogate(3);\n    ClassUtils.getShortClassName((Object) character0, \"\");\n    ClassUtils.getPackageName((Object) null, \"B\");\n    Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 6);\n    Class<String> class0 = String.class;\n    classArray0[0] = class0;\n    Class<String> class1 = String.class;\n    classArray0[1] = class1;\n    Class<String> class2 = String.class;\n    classArray0[2] = class2;\n    Class<String> class3 = String.class;\n    classArray0[3] = class3;\n    Class<String> class4 = String.class;\n    classArray0[4] = class4;\n    Class<String> class5 = String.class;\n    classArray0[5] = class5;\n    ClassUtils.isAssignable(classArray0, classArray0, true);\n}",
    "testName" : "test5757"
  },
  "test7979" : {
    "methodSignature" : "public static Class<?> getClass(ClassLoader classLoader, String className) throws ClassNotFoundException",
    "methodName" : "getClass",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7979() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ClassUtils.wrapperToPrimitive(class0);\n    Class<Object> class1 = Object.class;\n    ClassUtils.isInnerClass(class1);\n    ClassUtils.getShortCanonicalName((Class<?>) null);\n    ClassUtils.isInnerClass((Class<?>) null);\n    ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n    ClassUtils.getClass(classLoader0, \"\");\n}",
    "testName" : "test7979"
  },
  "test1313" : {
    "methodSignature" : "public static Method getPublicMethod(Class<?> cls, String methodName, Class<?>[] parameterTypes) throws SecurityException, NoSuchMethodException",
    "methodName" : "getPublicMethod",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Class<Double> class0 = Double.class;\n    Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 2);\n    Class<String> class1 = String.class;\n    classArray0[0] = class1;\n    Class<String> class2 = String.class;\n    classArray0[1] = class2;\n    ClassUtils.getPublicMethod(class0, \"%\", classArray0);\n}",
    "testName" : "test1313"
  },
  "test4545" : {
    "methodSignature" : "public static String getPackageName(Object object, String valueIfNull)",
    "methodName" : "getPackageName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4545() throws Throwable {\n    ClassUtils.getPackageName((Object) \"eu\", \";&uT dnc\");\n    Class<Short> class0 = Short.class;\n    ClassUtils.getAllSuperclasses(class0);\n    List<Class<?>> list0 = ClassUtils.getAllSuperclasses(class0);\n    ClassUtils.getPackageName(\";&uT dnc\");\n    Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 1);\n    Class<Integer> class1 = Integer.class;\n    classArray0[0] = class1;\n    ClassUtils.isAssignable(classArray0, classArray0);\n    ClassUtils.getShortClassName(\"fd~=8m\");\n    ClassUtils classUtils0 = new ClassUtils();\n    Class<Double> class2 = Double.class;\n    Class<Boolean> class3 = Boolean.class;\n    ClassUtils.isAssignable(class2, class3, false);\n    ClassUtils.convertClassesToClassNames(list0);\n    ClassUtils.getAllSuperclasses(class0);\n    Byte byte0 = new Byte((byte) 0);\n    ClassUtils.getPackageName((Object) byte0, \"eu\");\n}",
    "testName" : "test4545"
  },
  "test3535" : {
    "methodSignature" : "public static String getPackageName(Object object, String valueIfNull)",
    "methodName" : "getPackageName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    Float float0 = new Float(1579.2F);\n    ClassUtils.getShortClassName((Object) float0, \"J\");\n    Class<Character> class0 = Character.class;\n    ClassUtils.getShortClassName(class0);\n    ClassUtils.getPackageName((Object) class0, \"o E;9F@*T\");\n}",
    "testName" : "test3535"
  },
  "test5555" : {
    "methodSignature" : "public static boolean isAssignable(Class<?>[] classArray, Class<?>[] toClassArray)",
    "methodName" : "isAssignable",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5555() throws Throwable {\n    ClassUtils classUtils0 = new ClassUtils();\n    Character character0 = Character.valueOf('9');\n    Character.lowSurrogate(228);\n    ClassUtils.getShortClassName((Object) character0, \";\");\n    Boolean boolean0 = new Boolean(false);\n    Boolean.getBoolean(\"!\");\n    ClassUtils.getPackageName((Object) boolean0, \"double\");\n    ClassUtils.getPackageName((Object) classUtils0, \".\");\n    Class<Short> class0 = Short.class;\n    ClassUtils.wrapperToPrimitive(class0);\n    Class<?> class1 = ClassUtils.getClass(\"double\");\n    ClassUtils.getShortClassName(\"NmYS($&ki{sz7UeHgw6\");\n    ClassUtils.getPackageName(class1);\n    ClassUtils.getShortClassName(\"org.apache.commons.lang\");\n    List<Class<?>> list0 = ClassUtils.getAllSuperclasses(class0);\n    ClassUtils.getPackageName((Object) list0, \"$\");\n    Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 4);\n    Class<String> class2 = String.class;\n    classArray0[0] = class2;\n    Class<String> class3 = String.class;\n    classArray0[1] = class3;\n    Class<String> class4 = String.class;\n    classArray0[2] = class4;\n    Class<String> class5 = String.class;\n    classArray0[3] = class5;\n    Class<Object>[] classArray1 = (Class<Object>[]) Array.newInstance(Class.class, 5);\n    Class<Object> class6 = Object.class;\n    classArray1[0] = class6;\n    Class<Object> class7 = Object.class;\n    classArray1[1] = class7;\n    Class<Object> class8 = Object.class;\n    classArray1[2] = class8;\n    Class<Object> class9 = Object.class;\n    classArray1[3] = class9;\n    Class<Object> class10 = Object.class;\n    classArray1[4] = class10;\n    ClassUtils.isAssignable(classArray0, classArray1);\n}",
    "testName" : "test5555"
  },
  "test2121" : {
    "methodSignature" : "public static Method getPublicMethod(Class<?> cls, String methodName, Class<?>[] parameterTypes) throws SecurityException, NoSuchMethodException",
    "methodName" : "getPublicMethod",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ClassUtils.getPackageName(class0);\n    Class<Double> class1 = Double.class;\n    Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 0);\n    ClassUtils.getPublicMethod(class1, \"java.lang\", classArray0);\n}",
    "testName" : "test2121"
  },
  "test1111" : {
    "methodSignature" : "public static String getPackageCanonicalName(String canonicalName)",
    "methodName" : "getPackageCanonicalName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Class<Byte>[] classArray0 = (Class<Byte>[]) Array.newInstance(Class.class, 1);\n    Class<Byte> class0 = Byte.TYPE;\n    classArray0[0] = class0;\n    ClassUtils.isAssignable(classArray0, classArray0, true);\n    ClassUtils.getShortCanonicalName(\"LINUX\");\n    ClassUtils.isAssignable(classArray0, classArray0, true);\n    ClassUtils.getShortCanonicalName((Object) class0, \"LINUX\");\n    List<Class<?>> list0 = ClassUtils.getAllSuperclasses(class0);\n    ClassUtils.getPackageCanonicalName(\"char\");\n    Class<Object>[] classArray1 = (Class<Object>[]) Array.newInstance(Class.class, 3);\n    Class<Object> class1 = Object.class;\n    classArray1[0] = class1;\n    Class<Object> class2 = Object.class;\n    classArray1[1] = class2;\n    Class<Object> class3 = Object.class;\n    classArray1[2] = class3;\n    ClassUtils.isAssignable(classArray0, classArray1, true);\n    String string0 = ClassUtils.getShortCanonicalName((Object) list0, \"[java.lang.Float\");\n    ClassUtils.getShortCanonicalName((Object) class1, \"char\");\n    Class<Character> class4 = Character.class;\n    Class<Short> class5 = Short.class;\n    ClassUtils.isAssignable(class4, class5, true);\n    ClassUtils.isAssignable(classArray1, classArray1, true);\n    ClassUtils.getShortCanonicalName(class5);\n    Long long0 = new Long((-1779L));\n    String string1 = \"[H#SP\\\"<<\\\"O6D3V\";\n    ClassUtils.getShortClassName((Object) long0, \"[H#SP\\\"<<\\\"O6D3V\");\n    ClassUtils.getClass(\"'bmrz{'p6)Kn q#X\", true);\n    ClassUtils.toClass(classArray1);\n    ClassUtils.getShortClassName(string1);\n    ClassUtils.getPackageCanonicalName(string0);\n}",
    "testName" : "test1111"
  },
  "test3333" : {
    "methodSignature" : "public static String getPackageName(Class<?> cls)",
    "methodName" : "getPackageName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    ClassUtils classUtils0 = new ClassUtils();\n    ClassUtils.getShortClassName((Object) classUtils0, \"$\");\n    Class<Double> class0 = Double.class;\n    ClassUtils.getPackageName(class0);\n}",
    "testName" : "test3333"
  },
  "test6565" : {
    "methodSignature" : "public static Class<?> getClass(String className, boolean initialize) throws ClassNotFoundException",
    "methodName" : "getClass",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6565() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ClassUtils.getShortClassName(class0);\n    ClassUtils.primitivesToWrappers((Class<?>[]) null);\n    ClassUtils.getShortClassName(\"\");\n    ClassUtils.primitivesToWrappers((Class<?>[]) null);\n    ClassUtils.wrappersToPrimitives((Class<?>[]) null);\n    ClassUtils.getClass((String) null, false);\n}",
    "testName" : "test6565"
  },
  "test011" : {
    "methodSignature" : "public static String getPackageCanonicalName(Class<?> cls)",
    "methodName" : "getPackageCanonicalName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    ClassUtils classUtils0 = new ClassUtils();\n    LinkedList<String> linkedList0 = new LinkedList<String>();\n    linkedList0.pollLast();\n    ClassUtils.convertClassNamesToClasses(linkedList0);\n    Class<Long> class0 = Long.class;\n    Class<String> class1 = String.class;\n    boolean boolean0 = true;\n    Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 5);\n    classArray0[0] = class1;\n    classArray0[1] = class1;\n    classArray0[2] = class1;\n    Class<String> class2 = String.class;\n    classArray0[3] = class2;\n    classArray0[4] = class1;\n    Predicate<Object> predicate0 = Predicate.isEqual((Object) null);\n    Predicate<Object> predicate1 = predicate0.and(predicate0);\n    Predicate<Object> predicate2 = predicate1.or(predicate0);\n    Predicate<Object> predicate3 = predicate2.negate();\n    linkedList0.removeIf(predicate3);\n    ClassUtils.convertClassNamesToClasses(linkedList0);\n    ClassUtils.isAssignable(classArray0, classArray0);\n    ClassUtils.isAssignable(class0, class1, true);\n    ClassUtils.getShortCanonicalName(\"$\");\n    ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n    ClassUtils.getClass(classLoader0, \";\", true);\n    Class<ClassUtils> class3 = ClassUtils.class;\n    ClassUtils.getPackageCanonicalName(class3);\n}",
    "testName" : "test011"
  },
  "test099" : {
    "methodSignature" : "public static Class<?> getClass(String className) throws ClassNotFoundException",
    "methodName" : "getClass",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    ClassUtils.getShortCanonicalName(\"[\");\n    ClassUtils.getClass(\"', has a length less than 2\");\n}",
    "testName" : "test099"
  },
  "test2727" : {
    "methodSignature" : "public static boolean isAssignable(Class<?> cls, Class<?> toClass, boolean autoboxing)",
    "methodName" : "isAssignable",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 1);\n    Class<String> class0 = String.class;\n    classArray0[0] = class0;\n    Class<?>[] classArray1 = ClassUtils.primitivesToWrappers(classArray0);\n    Class<Object> class1 = Object.class;\n    ClassUtils.getPackageName(class1);\n    Class<?>[] classArray2 = ClassUtils.wrappersToPrimitives(classArray1);\n    ClassUtils.isAssignable(classArray2, classArray2, true);\n    ClassUtils.getPackageName(\"java.lang\");\n    Class<Integer> class2 = Integer.class;\n    Class<Character> class3 = Character.class;\n    ClassUtils.isAssignable(class2, class3, false);\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "public static String getShortClassName(Class<?> cls)",
    "methodName" : "getShortClassName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    Class<?> class0 = ClassUtils.getClass(\"QrF>JH`\");\n    ClassUtils.getShortClassName(class0);\n}",
    "testName" : "test1717"
  },
  "test4949" : {
    "methodSignature" : "public static Class<?>[] wrappersToPrimitives(Class<?>[] classes)",
    "methodName" : "wrappersToPrimitives",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4949() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ClassUtils.getShortClassName(class0);\n    ClassUtils.primitivesToWrappers((Class<?>[]) null);\n    ClassUtils.isAssignable((Class<?>[]) null, (Class<?>[]) null, true);\n    ClassUtils.getShortClassName(\"\");\n    ClassUtils.primitivesToWrappers((Class<?>[]) null);\n    ClassUtils.wrappersToPrimitives((Class<?>[]) null);\n}",
    "testName" : "test4949"
  },
  "test3939" : {
    "methodSignature" : "public static Class<?> wrapperToPrimitive(Class<?> cls)",
    "methodName" : "wrapperToPrimitive",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3939() throws Throwable {\n    Object object0 = new Object();\n    ClassUtils.getPackageCanonicalName(object0, \"org.apache.commons.lang.ClassUtils\");\n    LinkedList<String> linkedList0 = new LinkedList<String>();\n    List<String> list0 = linkedList0.subList(0, 0);\n    ClassUtils.convertClassNamesToClasses(list0);\n    Class<?> class0 = ClassUtils.getClass((String) null);\n    ClassUtils.wrapperToPrimitive(class0);\n}",
    "testName" : "test3939"
  },
  "test5959" : {
    "methodSignature" : "public static boolean isInnerClass(Class<?> cls)",
    "methodName" : "isInnerClass",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5959() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ClassUtils.getPackageName(class0);\n    ClassUtils.getShortCanonicalName((Object) \"java.lang\", \"java.lang\");\n    Class<String> class1 = String.class;\n    ClassUtils.getShortClassName(class1);\n    ClassUtils.getShortCanonicalName((String) null);\n    Class<Double> class2 = Double.class;\n    ClassUtils.isAssignable(class2, class2, false);\n    Class<Boolean>[] classArray0 = (Class<Boolean>[]) Array.newInstance(Class.class, 7);\n    Class<Boolean> class3 = Boolean.class;\n    classArray0[0] = class3;\n    Class<Boolean> class4 = Boolean.class;\n    classArray0[1] = class4;\n    Class<Boolean> class5 = Boolean.class;\n    classArray0[2] = class5;\n    Class<Boolean> class6 = Boolean.class;\n    classArray0[3] = class6;\n    Class<Boolean> class7 = Boolean.class;\n    classArray0[4] = class7;\n    Class<Boolean> class8 = Boolean.class;\n    classArray0[5] = class8;\n    Class<Boolean> class9 = Boolean.class;\n    classArray0[6] = class9;\n    ClassUtils.wrappersToPrimitives(classArray0);\n    Class<Long> class10 = Long.class;\n    ClassUtils.primitiveToWrapper(class10);\n    ClassUtils.isInnerClass(class7);\n}",
    "testName" : "test5959"
  },
  "test2525" : {
    "methodSignature" : "public static Class<?> getClass(ClassLoader classLoader, String className) throws ClassNotFoundException",
    "methodName" : "getClass",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    Class<String> class0 = String.class;\n    ClassUtils.getShortClassName(class0);\n    ClassUtils.getShortCanonicalName(class0);\n    Class<ClassUtils> class1 = ClassUtils.class;\n    ClassUtils.getAllInterfaces(class1);\n    ClassUtils.getPackageCanonicalName(class1);\n    Class<Long> class2 = Long.class;\n    ClassUtils.getPackageName(class2);\n    Class<Float> class3 = Float.class;\n    ClassUtils.wrapperToPrimitive(class3);\n    ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n    ClassUtils.getClass(classLoader0, \"org.apache.commons.lang\");\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public static boolean isAssignable(Class<?> cls, Class<?> toClass, boolean autoboxing)",
    "methodName" : "isAssignable",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    ClassUtils.isAssignable((Class<?>[]) null, (Class<?>[]) null, true);\n    ClassUtils.getPackageName(\"-:_V0F`3B~Za`#m<!\");\n    ClassUtils.getShortClassName(\"\");\n    ClassUtils.getShortCanonicalName(\"org.apache.commons.lang.builder.ToStringStyle$MultiLineToStringStyle\");\n    Integer integer0 = new Integer(2343);\n    Integer.toUnsignedString((-4785));\n    Integer.getInteger(\"org.apache.commons.lang.builder.ToStringStyle$MultiLineToStringStyle\");\n    ClassUtils.getShortCanonicalName((Object) integer0, \"\");\n    Class<Float> class0 = Float.class;\n    Class<Float> class1 = Float.class;\n    ClassUtils.isAssignable(class0, class1, true);\n}",
    "testName" : "test1515"
  },
  "test4747" : {
    "methodSignature" : "public static String getPackageName(Object object, String valueIfNull)",
    "methodName" : "getPackageName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4747() throws Throwable {\n    ClassUtils.isAssignable((Class<?>[]) null, (Class<?>[]) null, false);\n    Byte byte0 = new Byte((byte) 5);\n    Byte.toUnsignedInt((byte) 5);\n    Byte.compare((byte) 5, (byte) 5);\n    Byte.compare((byte) 5, (byte) (-1));\n    ClassUtils.getPackageCanonicalName((Object) byte0, \"pyCu!\");\n    LinkedList<String> linkedList0 = new LinkedList<String>();\n    linkedList0.add(\"pyCu!\");\n    linkedList0.removeLast();\n    ClassUtils.convertClassNamesToClasses(linkedList0);\n    ClassUtils.getShortCanonicalName(\"9.kY)aq|X\\\"\");\n    linkedList0.add((String) null);\n    ClassUtils.isAssignable((Class<?>[]) null, (Class<?>[]) null);\n    Class<Long> class0 = Long.class;\n    String string0 = ClassUtils.getPackageName(class0);\n    linkedList0.poll();\n    Class<Double> class1 = Double.TYPE;\n    ClassUtils.getShortClassName((Object) class1, \"pyCu!\");\n    ClassUtils.getPackageCanonicalName(\"java.lang\");\n    ClassUtils.convertClassNamesToClasses(linkedList0);\n    Class<String> class2 = String.class;\n    ClassUtils.isAssignable(class1, class2, true);\n    ClassUtils.getClass(\"Class\");\n    ClassUtils.getPackageName(string0);\n    Object object0 = new Object();\n    String string1 = \"', is neither of type Map.Entry nor an Array\";\n    ClassUtils.getPackageName(object0, string1);\n}",
    "testName" : "test4747"
  },
  "test3737" : {
    "methodSignature" : "public static String getShortCanonicalName(Class<?> cls)",
    "methodName" : "getShortCanonicalName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3737() throws Throwable {\n    Class<Object> class0 = Object.class;\n    Class<Short> class1 = Short.class;\n    ClassUtils.isAssignable(class0, class1);\n    ClassUtils.getPackageCanonicalName((Object) class0, \"\");\n    Class<Short> class2 = Short.class;\n    Class<?> class3 = ClassUtils.wrapperToPrimitive(class2);\n    ClassUtils.isAssignable(class3, class1, false);\n    ClassUtils.getShortCanonicalName(class0);\n}",
    "testName" : "test3737"
  },
  "test6969" : {
    "methodSignature" : "public static Class<?> getClass(ClassLoader classLoader, String className) throws ClassNotFoundException",
    "methodName" : "getClass",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6969() throws Throwable {\n    ClassUtils.toClass((Object[]) null);\n    boolean boolean0 = new Boolean(false);\n    ClassUtils.getPackageCanonicalName((String) null);\n    ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n    classLoader0.setPackageAssertionStatus(\"Z1NJriX\", false);\n    ClassUtils.getClass(classLoader0, (String) null);\n}",
    "testName" : "test6969"
  },
  "test7171" : {
    "methodSignature" : "public static boolean isAssignable(Class<?>[] classArray, Class<?>[] toClassArray, boolean autoboxing)",
    "methodName" : "isAssignable",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7171() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ClassUtils.wrapperToPrimitive(class0);\n    ClassUtils.getShortClassName(\"EMW\");\n    ClassUtils.primitiveToWrapper((Class<?>) null);\n    Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 5);\n    Class<String> class1 = String.class;\n    classArray0[0] = class1;\n    Class<String> class2 = String.class;\n    classArray0[1] = class2;\n    Class<String> class3 = String.class;\n    classArray0[2] = class3;\n    Class<String> class4 = String.class;\n    classArray0[3] = class4;\n    Class<String> class5 = String.class;\n    classArray0[4] = class5;\n    ClassUtils.isAssignable(classArray0, classArray0, false);\n}",
    "testName" : "test7171"
  },
  "test5353" : {
    "methodSignature" : "public static String getPackageName(Object object, String valueIfNull)",
    "methodName" : "getPackageName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5353() throws Throwable {\n    ClassUtils.getPackageName(\",wS\");\n    Class<Boolean> class0 = Boolean.class;\n    ClassUtils.getShortClassName(class0);\n    ClassUtils classUtils0 = new ClassUtils();\n    Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 6);\n    Class<String> class1 = String.class;\n    classArray0[0] = class1;\n    Class<String> class2 = String.class;\n    classArray0[1] = class2;\n    Class<String> class3 = String.class;\n    classArray0[2] = class3;\n    Class<String> class4 = String.class;\n    classArray0[3] = class4;\n    Class<String> class5 = String.class;\n    classArray0[4] = class5;\n    Class<String> class6 = String.class;\n    classArray0[5] = class6;\n    Class<Character>[] classArray1 = (Class<Character>[]) Array.newInstance(Class.class, 2);\n    Class<Character> class7 = Character.class;\n    classArray1[0] = class7;\n    Class<Character> class8 = Character.class;\n    classArray1[1] = class8;\n    ClassUtils.isAssignable(classArray0, classArray1);\n    ClassUtils.getPackageName((Object) classUtils0, (String) null);\n}",
    "testName" : "test5353"
  },
  "test7575" : {
    "methodSignature" : "public static Class<?> primitiveToWrapper(Class<?> cls)",
    "methodName" : "primitiveToWrapper",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7575() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ClassUtils.wrapperToPrimitive(class0);\n    Object object0 = new Object();\n    Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 0);\n    ClassUtils.getAllSuperclasses((Class<?>) null);\n    ClassUtils.getPackageName((Class<?>) null);\n    ClassLoader.getSystemClassLoader();\n    ClassUtils.getAllSuperclasses(class0);\n    Class<Integer> class1 = Integer.class;\n    ClassUtils.primitiveToWrapper(class1);\n}",
    "testName" : "test7575"
  },
  "test6363" : {
    "methodSignature" : "public static Class<?> wrapperToPrimitive(Class<?> cls)",
    "methodName" : "wrapperToPrimitive",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6363() throws Throwable {\n    Class<Short> class0 = Short.class;\n    Class<Long> class1 = Long.TYPE;\n    ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n    ClassLoader classLoader1 = classLoader0.getParent();\n    classLoader1.setPackageAssertionStatus(\"0Fl;Q-3Y\", false);\n    Class<Double> class2 = Double.class;\n    List<Class<?>> list0 = ClassUtils.getAllInterfaces(class2);\n    ClassUtils.getPackageName((Object) list0, \"\");\n    ClassUtils.getShortCanonicalName(class0);\n    ClassUtils.getPackageCanonicalName(\"\");\n    Class<Long> class3 = Long.class;\n    ClassUtils.isInnerClass(class3);\n    classLoader1.clearAssertionStatus();\n    List<String> list1 = ClassUtils.convertClassesToClassNames(list0);\n    ClassUtils.convertClassNamesToClasses(list1);\n    Integer integer0 = new Integer(64);\n    ClassUtils.getShortClassName((Object) integer0, \"J\");\n    classLoader1.setPackageAssertionStatus(\"0Fl;Q-3Y\", false);\n    ClassUtils.getClass(classLoader0, \"\", true);\n    Class<Object> class4 = Object.class;\n    ClassUtils.wrapperToPrimitive(class4);\n}",
    "testName" : "test6363"
  },
  "test3131" : {
    "methodSignature" : "public static Class<?> getClass(ClassLoader classLoader, String className) throws ClassNotFoundException",
    "methodName" : "getClass",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    ClassUtils classUtils0 = new ClassUtils();\n    ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n    ClassUtils.getClass(classLoader0, \".\");\n}",
    "testName" : "test3131"
  },
  "test5151" : {
    "methodSignature" : "public static Class<?> primitiveToWrapper(Class<?> cls)",
    "methodName" : "primitiveToWrapper",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5151() throws Throwable {\n    Class<Object> class0 = Object.class;\n    ClassUtils.wrapperToPrimitive(class0);\n    Object object0 = new Object();\n    ClassUtils.getShortClassName(object0, \"java.awt.printerjob\");\n    Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 0);\n    ClassUtils.primitivesToWrappers(classArray0);\n    ClassUtils.getAllSuperclasses((Class<?>) null);\n    ClassUtils.getPackageCanonicalName((Class<?>) null);\n    ClassUtils.getPackageCanonicalName((Object) \"java.awt.printerjob\", \"eX5A[>%C8Kn=k]\");\n    ClassUtils.getShortClassName((Object) null, \"Windows 9\");\n    ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n    ClassUtils.getClass(classLoader0, \"java.lang\");\n    Class<Integer> class1 = Integer.class;\n    ClassUtils.primitiveToWrapper(class1);\n}",
    "testName" : "test5151"
  },
  "test7373" : {
    "methodSignature" : "public static boolean isAssignable(Class<?> cls, Class<?> toClass, boolean autoboxing)",
    "methodName" : "isAssignable",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7373() throws Throwable {\n    Class<Short> class0 = Short.class;\n    ClassUtils.getAllInterfaces((Class<?>) null);\n    ClassUtils.getPackageCanonicalName(\"@<E\");\n    ClassUtils.getShortCanonicalName(class0);\n    Class<Long> class1 = Long.class;\n    Class<Integer> class2 = Integer.class;\n    ClassUtils.isAssignable(class1, class2, false);\n    ClassUtils.getShortCanonicalName(\"Short\");\n    Class<String> class3 = String.class;\n    ClassUtils.primitiveToWrapper(class3);\n    ClassUtils.getPackageCanonicalName(class0);\n    Class<Object> class4 = Object.class;\n    ClassUtils.isInnerClass(class4);\n    ClassUtils.getPackageName(\"@<E\");\n    Object[] objectArray0 = new Object[3];\n    objectArray0[0] = (Object) \"\";\n    objectArray0[1] = (Object) \"\";\n    ClassUtils.getShortClassName(\"5.@N4S\");\n    objectArray0[2] = (Object) null;\n    ClassUtils.toClass(objectArray0);\n    Class<ClassUtils> class5 = ClassUtils.class;\n    boolean boolean0 = true;\n    ClassUtils.isAssignable(class5, class5, boolean0);\n}",
    "testName" : "test7373"
  },
  "test6161" : {
    "methodSignature" : "public static Class<?> getClass(ClassLoader classLoader, String className, boolean initialize) throws ClassNotFoundException",
    "methodName" : "getClass",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6161() throws Throwable {\n    ClassUtils classUtils0 = new ClassUtils();\n    Class<Object> class0 = Object.class;\n    List<Class<?>> list0 = ClassUtils.getAllSuperclasses(class0);\n    ClassUtils.getPackageCanonicalName((Object) classUtils0, \"$\");\n    Class<String> class1 = String.class;\n    boolean boolean0 = true;\n    List<String> list1 = ClassUtils.convertClassesToClassNames(list0);\n    ClassUtils.convertClassNamesToClasses(list1);\n    ClassLoader classLoader0 = null;\n    ClassUtils.getClass((ClassLoader) null, \".\", true);\n}",
    "testName" : "test6161"
  },
  "test000" : {
    "methodSignature" : "public static String getPackageName(Class<?> cls)",
    "methodName" : "getPackageName",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n    classLoader0.clearAssertionStatus();\n    Class<?> class0 = ClassUtils.getClass(classLoader0, \"short\", false);\n    Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 7);\n    Class<Integer> class1 = Integer.class;\n    classArray0[0] = class1;\n    Class<Integer> class2 = Integer.class;\n    classArray0[4] = class2;\n    Class<Integer> class3 = Integer.class;\n    classArray0[2] = class3;\n    Class<Integer> class4 = Integer.class;\n    classArray0[3] = class4;\n    Class<Integer> class5 = Integer.class;\n    classArray0[4] = class5;\n    Class<Integer> class6 = Integer.class;\n    classArray0[5] = class6;\n    Class<Integer> class7 = Integer.class;\n    classArray0[6] = class7;\n    ClassUtils.wrappersToPrimitives(classArray0);\n    Class<Byte> class8 = Byte.class;\n    ClassUtils.getPackageCanonicalName(class8);\n    ClassUtils.getPackageName(\"4B9o\");\n    ClassUtils.getShortClassName((Object) class1, \"\");\n    Class<Object>[] classArray1 = (Class<Object>[]) Array.newInstance(Class.class, 9);\n    ClassUtils.isAssignable(classArray1, classArray1);\n    ClassUtils.getShortClassName((Object) \"\", \"|\");\n    ClassUtils.getPackageCanonicalName((Object) class0, \"java.lang\");\n    ClassUtils.getPackageName(class1);\n}",
    "testName" : "test000"
  },
  "test088" : {
    "methodSignature" : "public static List<Class<?>> getAllInterfaces(Class<?> cls)",
    "methodName" : "getAllInterfaces",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Class<Short>[] classArray0 = (Class<Short>[]) Array.newInstance(Class.class, 3);\n    Class<Short> class0 = Short.class;\n    Class<Short> class1 = Short.class;\n    classArray0[1] = class1;\n    Class<Short> class2 = Short.class;\n    classArray0[2] = class2;\n    Class<?>[] classArray1 = ClassUtils.wrappersToPrimitives(classArray0);\n    Object object0 = new Object();\n    ClassUtils.getShortCanonicalName(object0, \"long\");\n    ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n    classLoader0.getParent();\n    Class<?> class3 = ClassUtils.getClass(classLoader0, \"long\", true);\n    classLoader0.setClassAssertionStatus(\"long\", false);\n    Class<Object> class4 = Object.class;\n    ClassUtils.isAssignable(class3, class4, true);\n    ClassUtils.primitivesToWrappers(classArray0);\n    ClassUtils.getPackageCanonicalName(\"H#SP\\\"<<\\\"O6D3V\");\n    ClassUtils.getAllInterfaces(class3);\n    ClassUtils.getAllSuperclasses(class3);\n    ClassUtils.primitivesToWrappers(classArray1);\n    ClassUtils.getAllInterfaces(class0);\n}",
    "testName" : "test088"
  },
  "test2929" : {
    "methodSignature" : "public static Class<?> getClass(ClassLoader classLoader, String className) throws ClassNotFoundException",
    "methodName" : "getClass",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();\n    ClassUtils.getClass(classLoader0, \"q,*d\");\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public static List<Class<?>> getAllInterfaces(Class<?> cls)",
    "methodName" : "getAllInterfaces",
    "className" : "org.apache.commons.lang.ClassUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    Class<Float> class0 = Float.class;\n    ClassUtils.getShortClassName(class0);\n    ClassUtils.isInnerClass(class0);\n    ClassUtils.getShortCanonicalName(class0);\n    ClassUtils.getShortCanonicalName(\":50>3?9\");\n    ClassUtils.getAllInterfaces(class0);\n}",
    "testName" : "test1919"
  }
}