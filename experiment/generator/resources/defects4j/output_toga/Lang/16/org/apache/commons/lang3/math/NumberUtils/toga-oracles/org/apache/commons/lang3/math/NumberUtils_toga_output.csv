project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber(""-0~U0@mxt"");
    assertFalse(boolean0);
}",0,
project,0,test0011,"public void test0011() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber("" [.L+LrZZh"");
    assertFalse(boolean0);
}",0,
project,0,test0022,"public void test0022() throws Throwable {
    byte byte0 = NumberUtils.max((byte) 0, (byte) (-14), (byte) (-14));
    assertEquals((byte) 0, byte0);
}",0,
project,0,test0033,"public void test0033() throws Throwable {
    int int0 = NumberUtils.max(1388, (int) (byte) 39, 100);
    assertEquals(1388, int0);
}",0,"assertEquals(0, int0)"
project,0,test0044,"public void test0044() throws Throwable {
    byte byte0 = NumberUtils.min((byte) 0, (byte) 36, (byte) 28);
    assertEquals((byte) 0, byte0);
}",0,
project,0,test0055,"public void test0055() throws Throwable {
    short short0 = NumberUtils.min((short) 0, (short) 86, (short) 86);
    assertEquals((short) 0, short0);
}",0,
project,0,test0066,"public void test0066() throws Throwable {
    short[] shortArray0 = new short[9];
    shortArray0[1] = (short) 4112;
    short short0 = NumberUtils.max(shortArray0);
    assertEquals((short) 4112, short0);
}",1,
project,0,test0077,"public void test0077() throws Throwable {
    long[] longArray0 = new long[8];
    longArray0[1] = (-1534L);
    long long0 = NumberUtils.max(longArray0);
    assertEquals(0L, long0);
}",0,"assertEquals(1, long0)"
project,0,test0088,"public void test0088() throws Throwable {
    try {
        NumberUtils.createNumber(""%.J^M#DI@yl\""o^"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // %.J^M#DI@yl\""o^ is not a valid number.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",0,
project,0,test0099,"public void test0099() throws Throwable {
    try {
        NumberUtils.createNumber(""b"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // b is not a valid number.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",0,
project,0,test01010,"public void test01010() throws Throwable {
    short short0 = NumberUtils.toShort(""%.J^M#DI@yl\""o^"", (short) 0);
    assertEquals((short) 0, short0);
}",0,
project,0,test01111,"public void test01111() throws Throwable {
    long long0 = NumberUtils.toLong(""kxuF%msTz5kUs"", 0L);
    assertEquals(0L, long0);
}",1,
project,0,test01212,"public void test01212() throws Throwable {
    long long0 = NumberUtils.toLong(""5"");
    assertEquals(5L, long0);
}",0,"assertEquals(1, long0)"
project,0,test01313,"public void test01313() throws Throwable {
    NumberUtils numberUtils0 = new NumberUtils();
    int int0 = NumberUtils.toInt(""-s?Nb;k="", (int) numberUtils0.SHORT_MINUS_ONE);
    assertEquals((-1), int0);
}",1,
project,0,test01414,"public void test01414() throws Throwable {
    int int0 = NumberUtils.toInt(""7"");
    assertEquals(7, int0);
}",0,"assertEquals(0, int0)"
project,0,test01515,"public void test01515() throws Throwable {
    float float0 = NumberUtils.toFloat("">^(D`^eJPu@"", (-3172.517F));
    assertEquals((-3172.517F), float0, 0.01F);
}",1,
project,0,test01616,"public void test01616() throws Throwable {
    float float0 = NumberUtils.toFloat(""1"");
    assertEquals(1.0F, float0, 0.01F);
}",0,
project,0,test01717,"public void test01717() throws Throwable {
    double double0 = NumberUtils.toDouble(""ks{,-}\""jpGIED/"", 0.0);
    assertEquals(0.0, double0, 0.01);
}",1,
project,0,test01818,"public void test01818() throws Throwable {
    double double0 = NumberUtils.toDouble("":/C}"", (-2437.57933038));
    assertEquals((-2437.57933038), double0, 0.01);
}",1,
project,0,test01919,"public void test01919() throws Throwable {
    double double0 = NumberUtils.toDouble(""7"");
    assertEquals(7.0, double0, 0.01);
}",0,
project,0,test02020,"public void test02020() throws Throwable {
    byte byte0 = NumberUtils.toByte(""w[I"", (byte) 64);
    assertEquals((byte) 64, byte0);
}",0,
project,0,test02121,"public void test02121() throws Throwable {
    byte byte0 = NumberUtils.toByte(""3"");
    assertEquals((byte) 3, byte0);
}",0,assertNotNull(byte0)
project,0,test02222,"public void test02222() throws Throwable {
    short[] shortArray0 = new short[8];
    shortArray0[0] = (short) 5;
    shortArray0[1] = (short) 5;
    shortArray0[2] = (short) 5;
    shortArray0[3] = (short) 5;
    shortArray0[4] = (short) 5;
    shortArray0[5] = (short) 5;
    shortArray0[6] = (short) 5;
    shortArray0[7] = (short) 5;
    short short0 = NumberUtils.min(shortArray0);
    assertEquals((short) 5, short0);
}",0,"assertEquals(shortArray0, short0)"
project,0,test02323,"public void test02323() throws Throwable {
    NumberUtils numberUtils0 = new NumberUtils();
    short[] shortArray0 = new short[4];
    shortArray0[0] = (short) (byte) numberUtils0.BYTE_MINUS_ONE;
    short short0 = NumberUtils.min(shortArray0);
    assertEquals((short) (-1), short0);
}",0,"assertEquals(shortArray0, short0)"
project,0,test02424,"public void test02424() throws Throwable {
    long[] longArray0 = new long[3];
    longArray0[0] = (long) (byte) 39;
    longArray0[1] = (long) 39;
    longArray0[2] = (long) (byte) 39;
    long long0 = NumberUtils.min(longArray0);
    assertEquals(39L, long0);
}",0,"assertEquals(1, long0)"
project,0,test02525,"public void test02525() throws Throwable {
    int[] intArray0 = new int[9];
    intArray0[0] = 10;
    intArray0[1] = 70;
    intArray0[2] = 2;
    intArray0[3] = 2531;
    intArray0[4] = 3;
    intArray0[5] = 100;
    intArray0[6] = 1593;
    intArray0[7] = 13;
    intArray0[8] = 5;
    int int0 = NumberUtils.min(intArray0);
    assertEquals(2, int0);
}",1,
project,0,test02626,"public void test02626() throws Throwable {
    int[] intArray0 = new int[7];
    intArray0[0] = (int) (byte) (-79);
    int int0 = NumberUtils.min(intArray0);
    assertEquals((-79), int0);
}",0,"assertEquals(1, int0)"
project,0,test02727,"public void test02727() throws Throwable {
    float[] floatArray0 = new float[2];
    floatArray0[0] = 2178.5F;
    floatArray0[1] = 1.0F;
    float float0 = NumberUtils.min(floatArray0);
    assertEquals(1.0F, float0, 0.01F);
}",0,
project,0,test02828,"public void test02828() throws Throwable {
    float[] floatArray0 = new float[8];
    floatArray0[4] = (-722.978F);
    float float0 = NumberUtils.min(floatArray0);
    assertEquals((-722.978F), float0, 0.01F);
}",1,
project,0,test02929,"public void test02929() throws Throwable {
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = (double) 969L;
    double double0 = NumberUtils.min(doubleArray0);
    assertEquals(969.0, double0, 0.01);
}",0,
project,0,test03030,"public void test03030() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byteArray0[0] = (byte) 69;
    byte byte0 = NumberUtils.min(byteArray0);
    assertEquals((byte) 69, byte0);
}",0,"assertEquals(byteArray0, byte0)"
project,0,test03131,"public void test03131() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byteArray0[3] = (byte) (-55);
    byte byte0 = NumberUtils.min(byteArray0);
    assertEquals((byte) (-55), byte0);
}",0,"assertEquals(byteArray0, byte0)"
project,0,test03232,"public void test03232() throws Throwable {
    short short0 = NumberUtils.min((short) (byte) 0, (short) (byte) 0, (short) 563);
    assertEquals((short) 0, short0);
}",0,
project,0,test03333,"public void test03333() throws Throwable {
    long long0 = NumberUtils.min(1204L, 1204L, 1204L);
    assertEquals(1204L, long0);
}",0,"assertEquals(0, long0)"
project,0,test03434,"public void test03434() throws Throwable {
    long long0 = NumberUtils.min(0L, 42L, (-5670L));
    assertEquals((-5670L), long0);
}",0,"assertEquals(0, long0)"
project,0,test03535,"public void test03535() throws Throwable {
    int int0 = NumberUtils.min(0, 0, 1191);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test03636,"public void test03636() throws Throwable {
    int int0 = NumberUtils.min(830, 1951, 1951);
    assertEquals(830, int0);
}",0,"assertEquals(0, int0)"
project,0,test03737,"public void test03737() throws Throwable {
    float float0 = NumberUtils.min(1349.4127F, 1349.4127F, 1349.4127F);
    assertEquals(1349.4127F, float0, 0.01F);
}",0,
project,0,test03838,"public void test03838() throws Throwable {
    float float0 = NumberUtils.min((-1827.8975F), (-1827.8975F), (-2771.039F));
    assertEquals((-2771.039F), float0, 0.01F);
}",0,
project,0,test03939,"public void test03939() throws Throwable {
    double double0 = NumberUtils.min((double) 1.0F, (double) 1.0F, (double) 1.0F);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test04040,"public void test04040() throws Throwable {
    double double0 = NumberUtils.min(1831.9964283, (-234.46364), 1831.9964283);
    assertEquals((-234.46364), double0, 0.01);
}",0,
project,0,test04141,"public void test04141() throws Throwable {
    byte byte0 = NumberUtils.min((byte) 0, (byte) 36, (byte) 0);
    assertEquals((byte) 0, byte0);
}",0,
project,0,test04242,"public void test04242() throws Throwable {
    byte byte0 = NumberUtils.min((byte) 39, (byte) 39, (byte) 39);
    assertEquals((byte) 39, byte0);
}",0,
project,0,test04343,"public void test04343() throws Throwable {
    short[] shortArray0 = new short[1];
    shortArray0[0] = (short) (-635);
    short short0 = NumberUtils.max(shortArray0);
    assertEquals((short) (-635), short0);
}",1,
project,0,test04444,"public void test04444() throws Throwable {
    long[] longArray0 = new long[1];
    longArray0[0] = (long) (short) 120;
    long long0 = NumberUtils.max(longArray0);
    assertEquals(120L, long0);
}",0,"assertEquals(1, long0)"
project,0,test04545,"public void test04545() throws Throwable {
    long[] longArray0 = new long[2];
    longArray0[0] = (long) (short) (-560);
    longArray0[1] = (long) (short) (-1);
    long long0 = NumberUtils.max(longArray0);
    assertEquals((-1L), long0);
}",0,"assertEquals(1, long0)"
project,0,test04646,"public void test04646() throws Throwable {
    int[] intArray0 = new int[3];
    intArray0[0] = (int) (byte) (-82);
    intArray0[1] = (int) (byte) (-82);
    intArray0[2] = (int) (byte) (-82);
    int int0 = NumberUtils.max(intArray0);
    assertEquals((-82), int0);
}",1,
project,0,test04747,"public void test04747() throws Throwable {
    float[] floatArray0 = new float[2];
    floatArray0[0] = (-1.0F);
    floatArray0[1] = (-1.0F);
    float float0 = NumberUtils.max(floatArray0);
    assertEquals((-1.0F), float0, 0.01F);
}",1,
project,0,test04848,"public void test04848() throws Throwable {
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = (double) (short) (-925);
    doubleArray0[1] = (-1.0);
    double double0 = NumberUtils.max(doubleArray0);
    assertEquals((-1.0), double0, 0.01);
}",1,
project,0,test04949,"public void test04949() throws Throwable {
    byte[] byteArray0 = new byte[9];
    byteArray0[0] = (byte) (-93);
    byteArray0[1] = (byte) (-93);
    byteArray0[2] = (byte) (-93);
    byteArray0[3] = (byte) (-93);
    byteArray0[4] = (byte) (-93);
    byteArray0[5] = (byte) (-93);
    byteArray0[6] = (byte) (-56);
    byteArray0[7] = (byte) (-93);
    byteArray0[8] = (byte) (-93);
    byte byte0 = NumberUtils.max(byteArray0);
    assertEquals((byte) (-56), byte0);
}",0,"assertEquals(byteArray0, byte0)"
project,0,test05050,"public void test05050() throws Throwable {
    short short0 = NumberUtils.max((short) 0, (short) 0, (short) 0);
    assertEquals((short) 0, short0);
}",0,
project,0,test05151,"public void test05151() throws Throwable {
    short short0 = NumberUtils.max((short) (-1235), (short) (-1235), (short) (-1235));
    assertEquals((short) (-1235), short0);
}",0,assertNotNull(short0)
project,0,test05252,"public void test05252() throws Throwable {
    long long0 = NumberUtils.max((-193L), (-193L), 0L);
    assertEquals(0L, long0);
}",0,"assertEquals(1, long0)"
project,0,test05353,"public void test05353() throws Throwable {
    long long0 = NumberUtils.max((-1718L), (-1023L), (-1718L));
    assertEquals((-1023L), long0);
}",1,
project,0,test05454,"public void test05454() throws Throwable {
    int int0 = NumberUtils.max(0, 0, 0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test05555,"public void test05555() throws Throwable {
    float float0 = NumberUtils.max(0.0F, 0.0F, (-3004.806F));
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test05656,"public void test05656() throws Throwable {
    float float0 = NumberUtils.max((-1.0F), (-1.0F), (-1.0F));
    assertEquals((-1.0F), float0, 0.01F);
}",0,
project,0,test05757,"public void test05757() throws Throwable {
    double double0 = NumberUtils.max((-84.9169040138), (double) (byte) 0, (double) (byte) 0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test05858,"public void test05858() throws Throwable {
    double double0 = NumberUtils.max((double) (-1483L), (-5807.7), (-5807.7));
    assertEquals((-1483.0), double0, 0.01);
}",0,
project,0,test05959,"public void test05959() throws Throwable {
    byte byte0 = NumberUtils.max((byte) (-90), (byte) (-90), (byte) (-93));
    assertEquals((byte) (-90), byte0);
}",0,assertNotNull(byte0)
project,0,test06060,"public void test06060() throws Throwable {
    Number number0 = NumberUtils.createNumber(""9"");
    assertEquals(9, number0);
}",0,
project,0,test06162,"public void test06162() throws Throwable {
    Long long0 = NumberUtils.createLong(""3"");
    assertEquals(3L, (long) long0);
}",1,
project,0,test06263,"public void test06263() throws Throwable {
    Long long0 = NumberUtils.createLong(""-8"");
    assertEquals((-8L), (long) long0);
}",1,
project,0,test06364,"public void test06364() throws Throwable {
    Integer integer0 = NumberUtils.createInteger(""7"");
    assertEquals(7, (int) integer0);
}",1,
project,0,test06465,"public void test06465() throws Throwable {
    Float float0 = NumberUtils.createFloat(""8"");
    assertEquals(8.0F, (float) float0, 0.01F);
}",0,
project,0,test06768,"public void test06768() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.createDouble("";21W$eQ>{"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
    }
}",1,
project,0,test06869,"public void test06869() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.createBigDecimal(""1m`JpWR"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",1,
project,0,test06970,"public void test06970() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.createBigInteger(""Dg`1U"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // For input string: \""Dg`1U\""
        //
        verifyException(""java.lang.NumberFormatException"", e);
    }
}",0,
project,0,test07071,"public void test07071() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.createLong(""&}j>4?g+\""<"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // For input string: \""&}j>4?g+\""<\""
        //
        verifyException(""java.lang.NumberFormatException"", e);
    }
}",1,
project,0,test07172,"public void test07172() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.createInteger(""]DK6"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // For input string: \""]DK6\""
        //
        verifyException(""java.lang.NumberFormatException"", e);
    }
}",1,
project,0,test07273,"public void test07273() throws Throwable {
    Double double0 = NumberUtils.createDouble(""7"");
    assertEquals(7.0, (double) double0, 0.01);
}",1,
project,0,test07374,"public void test07374() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.createFloat(""org.apache.commons.lang3.math.NumberUtils"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
    }
}",0,
project,0,test07475,"public void test07475() throws Throwable {
    short short0 = NumberUtils.toShort(""aW+na=fT}2ru86SS1"", (short) (byte) (-114));
    assertEquals((short) (-114), short0);
}",0,
project,0,test07576,"public void test07576() throws Throwable {
    byte byte0 = NumberUtils.toByte(""sun.text.Normalizer is not available"", (byte) 0);
    assertEquals((byte) 0, byte0);
}",1,
project,0,test07677,"public void test07677() throws Throwable {
    byte byte0 = NumberUtils.toByte((String) null, (byte) (-79));
    assertEquals((byte) (-79), byte0);
}",0,
project,0,test07778,"public void test07778() throws Throwable {
    double double0 = NumberUtils.toDouble((String) null, (double) (short) 32);
    assertEquals(32.0, double0, 0.01);
}",0,
project,0,test07879,"public void test07879() throws Throwable {
    float float0 = NumberUtils.toFloat((String) null, 354.7F);
    assertEquals(354.7F, float0, 0.01F);
}",0,
project,0,test07980,"public void test07980() throws Throwable {
    float float0 = NumberUtils.toFloat(""Strings must not be null"", (float) (byte) 0);
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test08081,"public void test08081() throws Throwable {
    long long0 = NumberUtils.toLong(""The stripAccents(CharSequence) method requires at least Java 1.6 or a Sun JVM"", (-617L));
    assertEquals((-617L), long0);
}",1,
project,0,test08182,"public void test08182() throws Throwable {
    int int0 = NumberUtils.toInt(""decmose"", (int) (byte) 0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test08283,"public void test08283() throws Throwable {
    int int0 = NumberUtils.toInt((String) null, 714);
    assertEquals(714, int0);
}",1,
project,0,test08384,"public void test08384() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber(""F"");
    assertFalse(boolean0);
}",0,
project,0,test08485,"public void test08485() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber(""."");
    assertFalse(boolean0);
}",0,
project,0,test08586,"public void test08586() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber(""3"");
    assertTrue(boolean0);
}",0,
project,0,test08687,"public void test08687() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber(""--ylQ=9"");
    assertFalse(boolean0);
}",0,
project,0,test08788,"public void test08788() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber(""0xlh#f>4#vhZfZxN"");
    assertFalse(boolean0);
}",0,
project,0,test08889,"public void test08889() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber(""0xb"");
    assertTrue(boolean0);
}",0,
project,0,test08990,"public void test08990() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber(""-0x"");
    assertFalse(boolean0);
}",0,
project,0,test09091,"public void test09091() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber(""-0="");
    assertFalse(boolean0);
}",0,
project,0,test09192,"public void test09192() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber(""Threshold must not be negative"");
    assertFalse(boolean0);
}",0,
project,0,test09293,"public void test09293() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber("""");
    assertFalse(boolean0);
}",0,
project,0,test09394,"public void test09394() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber(""0x-0xThe Array must not be null"");
    assertFalse(boolean0);
}",0,
project,0,test09495,"public void test09495() throws Throwable {
    boolean boolean0 = NumberUtils.isDigits(""0xStrings must not be null"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test09596,"public void test09596() throws Throwable {
    boolean boolean0 = NumberUtils.isDigits((String) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test09697,"public void test09697() throws Throwable {
    byte byte0 = NumberUtils.max((byte) 0, (byte) 0, (byte) 4);
    assertEquals((byte) 4, byte0);
}",0,
project,0,test09798,"public void test09798() throws Throwable {
    byte byte0 = NumberUtils.max((byte) 0, (byte) 23, (byte) 23);
    assertEquals((byte) 23, byte0);
}",0,
project,0,test09899,"public void test09899() throws Throwable {
    short short0 = NumberUtils.max((short) 45, (short) 0, (short) 102);
    assertEquals((short) 102, short0);
}",0,
project,0,test099100,"public void test099100() throws Throwable {
    short short0 = NumberUtils.max((short) 120, (short) 2022, (short) 0);
    assertEquals((short) 2022, short0);
}",0,assertNotNull(short0)
project,0,test100101,"public void test100101() throws Throwable {
    int int0 = NumberUtils.max((int) (byte) (-32), 0, 920);
    assertEquals(920, int0);
}",0,"assertEquals(0, int0)"
project,0,test101102,"public void test101102() throws Throwable {
    int int0 = NumberUtils.max((-3045), (-3045), (-3045));
    assertEquals((-3045), int0);
}",0,"assertEquals(0, int0)"
project,0,test102103,"public void test102103() throws Throwable {
    long long0 = NumberUtils.max((-2083L), (long) 0, 14L);
    assertEquals(14L, long0);
}",1,
project,0,test103104,"public void test103104() throws Throwable {
    NumberUtils numberUtils0 = new NumberUtils();
    long long0 = NumberUtils.max((long) numberUtils0.SHORT_ONE, 0L, (long) numberUtils0.BYTE_ONE);
    assertEquals(1L, long0);
}",0,"assertEquals(1, long0)"
project,0,test104105,"public void test104105() throws Throwable {
    byte byte0 = NumberUtils.min((byte) 86, (byte) 46, (byte) (-107));
    assertEquals((byte) (-107), byte0);
}",0,
project,0,test105106,"public void test105106() throws Throwable {
    short short0 = NumberUtils.min((short) 5543, (short) 5543, (short) (-3091));
    assertEquals((short) (-3091), short0);
}",0,
project,0,test106107,"public void test106107() throws Throwable {
    short short0 = NumberUtils.min((short) 977, (short) (-925), (short) 977);
    assertEquals((short) (-925), short0);
}",0,
project,0,test107108,"public void test107108() throws Throwable {
    short short0 = NumberUtils.min((short) 5, (short) 5, (short) 5);
    assertEquals((short) 5, short0);
}",0,assertNotNull(short0)
project,0,test108109,"public void test108109() throws Throwable {
    int int0 = NumberUtils.min(0, (-2303), (-2303));
    assertEquals((-2303), int0);
}",0,"assertEquals(0, int0)"
project,0,test109110,"public void test109110() throws Throwable {
    int int0 = NumberUtils.min(224, 224, (-3045));
    assertEquals((-3045), int0);
}",0,"assertEquals(0, int0)"
project,0,test110111,"public void test110111() throws Throwable {
    long long0 = NumberUtils.min(969L, 969L, 0L);
    assertEquals(0L, long0);
}",0,"assertEquals(0, long0)"
project,0,test111112,"public void test111112() throws Throwable {
    long long0 = NumberUtils.min((long) (byte) 36, (long) (byte) 0, (long) (byte) 0);
    assertEquals(0L, long0);
}",0,"assertEquals(1, long0)"
project,0,test112113,"public void test112113() throws Throwable {
    long long0 = NumberUtils.min(0L, 1L, (long) (short) 2022);
    assertEquals(0L, long0);
}",0,"assertEquals(1, long0)"
project,0,test113114,"public void test113114() throws Throwable {
    float[] floatArray0 = new float[9];
    floatArray0[3] = (float) 224;
    float float0 = NumberUtils.max(floatArray0);
    assertEquals(224.0F, float0, 0.01F);
}",1,
project,0,test114115,"public void test114115() throws Throwable {
    float[] floatArray0 = new float[5];
    floatArray0[2] = Float.NaN;
    float float0 = NumberUtils.max(floatArray0);
    assertEquals(Float.NaN, float0, 0.01F);
}",1,
project,0,test115116,"public void test115116() throws Throwable {
    float[] floatArray0 = new float[0];
    // Undeclared exception!
    try {
        NumberUtils.max(floatArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",1,
project,0,test116117,"public void test116117() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.max((float[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",1,
project,0,test117118,"public void test117118() throws Throwable {
    float[] floatArray0 = new float[5];
    float float0 = NumberUtils.max(floatArray0);
    assertEquals(0.0F, float0, 0.01F);
}",1,
project,0,test118119,"public void test118119() throws Throwable {
    double[] doubleArray0 = new double[9];
    doubleArray0[3] = 1213.0;
    double double0 = NumberUtils.max(doubleArray0);
    assertEquals(1213.0, double0, 0.01);
}",1,
project,0,test119120,"public void test119120() throws Throwable {
    double[] doubleArray0 = new double[4];
    doubleArray0[1] = Double.NaN;
    double double0 = NumberUtils.max(doubleArray0);
    assertEquals(Double.NaN, double0, 0.01);
}",1,
project,0,test120121,"public void test120121() throws Throwable {
    double[] doubleArray0 = new double[0];
    // Undeclared exception!
    try {
        NumberUtils.max(doubleArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",1,
project,0,test121122,"public void test121122() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.max((double[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",1,
project,0,test122123,"public void test122123() throws Throwable {
    double[] doubleArray0 = new double[3];
    double double0 = NumberUtils.max(doubleArray0);
    assertEquals(0.0, double0, 0.01);
}",1,
project,0,test123124,"public void test123124() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[4] = (byte) 118;
    byte byte0 = NumberUtils.max(byteArray0);
    assertEquals((byte) 118, byte0);
}",0,
project,0,test124125,"public void test124125() throws Throwable {
    byte[] byteArray0 = new byte[0];
    // Undeclared exception!
    try {
        NumberUtils.max(byteArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",1,
project,0,test125126,"public void test125126() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.max((byte[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",1,
project,0,test126127,"public void test126127() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byte byte0 = NumberUtils.max(byteArray0);
    assertEquals((byte) 0, byte0);
}",1,
project,0,test127128,"public void test127128() throws Throwable {
    short[] shortArray0 = new short[3];
    shortArray0[2] = (short) (byte) 118;
    short short0 = NumberUtils.max(shortArray0);
    assertEquals((short) 118, short0);
}",0,"assertEquals(shortArray0, short0)"
project,0,test128129,"public void test128129() throws Throwable {
    short[] shortArray0 = new short[3];
    short short0 = NumberUtils.max(shortArray0);
    assertEquals((short) 0, short0);
}",1,
project,0,test129130,"public void test129130() throws Throwable {
    short[] shortArray0 = new short[0];
    // Undeclared exception!
    try {
        NumberUtils.max(shortArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",1,
project,0,test130131,"public void test130131() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.max((short[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",1,
project,0,test131132,"public void test131132() throws Throwable {
    int[] intArray0 = new int[8];
    intArray0[3] = 1488;
    int int0 = NumberUtils.max(intArray0);
    assertEquals(1488, int0);
}",1,
project,0,test132133,"public void test132133() throws Throwable {
    int[] intArray0 = new int[0];
    // Undeclared exception!
    try {
        NumberUtils.max(intArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",1,
project,0,test133134,"public void test133134() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.max((int[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",1,
project,0,test134135,"public void test134135() throws Throwable {
    int[] intArray0 = new int[8];
    int int0 = NumberUtils.max(intArray0);
    assertEquals(0, int0);
}",1,
project,0,test135136,"public void test135136() throws Throwable {
    long[] longArray0 = new long[0];
    // Undeclared exception!
    try {
        NumberUtils.max(longArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",0,
project,0,test136137,"public void test136137() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.max((long[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",0,
project,0,test137138,"public void test137138() throws Throwable {
    float[] floatArray0 = new float[2];
    floatArray0[1] = Float.NaN;
    float float0 = NumberUtils.min(floatArray0);
    assertEquals(Float.NaN, float0, 0.01F);
}",1,
project,0,test138139,"public void test138139() throws Throwable {
    float[] floatArray0 = new float[0];
    // Undeclared exception!
    try {
        NumberUtils.min(floatArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",1,
project,0,test139140,"public void test139140() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.min((float[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",1,
project,0,test140141,"public void test140141() throws Throwable {
    float[] floatArray0 = new float[5];
    float float0 = NumberUtils.min(floatArray0);
    assertEquals(0.0F, float0, 0.01F);
}",1,
project,0,test141142,"public void test141142() throws Throwable {
    double[] doubleArray0 = new double[8];
    doubleArray0[2] = (-230.3166676145615);
    double double0 = NumberUtils.min(doubleArray0);
    assertEquals((-230.3166676145615), double0, 0.01);
}",1,
project,0,test142143,"public void test142143() throws Throwable {
    double[] doubleArray0 = new double[7];
    doubleArray0[2] = Double.NaN;
    double double0 = NumberUtils.min(doubleArray0);
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test143144,"public void test143144() throws Throwable {
    double[] doubleArray0 = new double[7];
    double double0 = NumberUtils.min(doubleArray0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test144145,"public void test144145() throws Throwable {
    double[] doubleArray0 = new double[0];
    // Undeclared exception!
    try {
        NumberUtils.min(doubleArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",0,
project,0,test145146,"public void test145146() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.min((double[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",1,
project,0,test146147,"public void test146147() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byteArray0[0] = (byte) 102;
    byte byte0 = NumberUtils.min(byteArray0);
    assertEquals((byte) 0, byte0);
}",0,
project,0,test147148,"public void test147148() throws Throwable {
    byte[] byteArray0 = new byte[0];
    // Undeclared exception!
    try {
        NumberUtils.min(byteArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",0,
project,0,test148149,"public void test148149() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.min((byte[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",0,
project,0,test149150,"public void test149150() throws Throwable {
    short[] shortArray0 = new short[4];
    shortArray0[0] = (short) 119;
    short short0 = NumberUtils.min(shortArray0);
    assertEquals((short) 0, short0);
}",0,"assertEquals(shortArray0, short0)"
project,0,test150151,"public void test150151() throws Throwable {
    short[] shortArray0 = new short[0];
    // Undeclared exception!
    try {
        NumberUtils.min(shortArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",0,
project,0,test151152,"public void test151152() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.min((short[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",1,
project,0,test152153,"public void test152153() throws Throwable {
    int[] intArray0 = new int[8];
    intArray0[0] = 64;
    int int0 = NumberUtils.min(intArray0);
    assertEquals(0, int0);
}",1,
project,0,test153154,"public void test153154() throws Throwable {
    int[] intArray0 = new int[0];
    // Undeclared exception!
    try {
        NumberUtils.min(intArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",1,
project,0,test154155,"public void test154155() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.min((int[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",1,
project,0,test155156,"public void test155156() throws Throwable {
    long[] longArray0 = new long[4];
    longArray0[2] = (-365L);
    long long0 = NumberUtils.min(longArray0);
    assertEquals((-365L), long0);
}",1,
project,0,test156157,"public void test156157() throws Throwable {
    long[] longArray0 = new long[0];
    // Undeclared exception!
    try {
        NumberUtils.min(longArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",1,
project,0,test157158,"public void test157158() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.min((long[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",1,
project,0,test158159,"public void test158159() throws Throwable {
    long[] longArray0 = new long[4];
    long long0 = NumberUtils.min(longArray0);
    assertEquals(0L, long0);
}",1,
project,0,test159160,"public void test159160() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.createBigDecimal("""");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // A blank string is not a valid number
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",1,
project,0,test160161,"public void test160161() throws Throwable {
    BigDecimal bigDecimal0 = NumberUtils.createBigDecimal((String) null);
    assertNull(bigDecimal0);
}",1,
project,0,test161162,"public void test161162() throws Throwable {
    BigInteger bigInteger0 = NumberUtils.createBigInteger((String) null);
    assertNull(bigInteger0);
}",0,
project,0,test162163,"public void test162163() throws Throwable {
    Long long0 = NumberUtils.createLong((String) null);
    assertNull(long0);
}",1,
project,0,test163164,"public void test163164() throws Throwable {
    Integer integer0 = NumberUtils.createInteger((String) null);
    assertNull(integer0);
}",1,
project,0,test164165,"public void test164165() throws Throwable {
    Double double0 = NumberUtils.createDouble((String) null);
    assertNull(double0);
}",1,
project,0,test165166,"public void test165166() throws Throwable {
    Float float0 = NumberUtils.createFloat((String) null);
    assertNull(float0);
}",0,assertNotNull(float0)
project,0,test166167,"public void test166167() throws Throwable {
    try {
        NumberUtils.createNumber(""Minimum abbreviation width with offset is 7"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",0,
project,0,test167168,"public void test167168() throws Throwable {
    try {
        NumberUtils.createNumber(""The Array must not be null"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // The Array must not be null is not a valid number.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",0,
project,0,test168169,"public void test168169() throws Throwable {
    try {
        NumberUtils.createNumber(""aF`URqvf"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // aF`URqvf is not a valid number.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",0,
project,0,test169170,"public void test169170() throws Throwable {
    try {
        NumberUtils.createNumber("".,NH[{~R}rt|d"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // .,NH[{~R}rt|d is not a valid number.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",0,
project,0,test170171,"public void test170171() throws Throwable {
    try {
        NumberUtils.createNumber(""NFD"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // NFD is not a valid number.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",0,
project,0,test171172,"public void test171172() throws Throwable {
    try {
        NumberUtils.createNumber(""The"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // The is not a valid number.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",0,
project,0,test172173,"public void test172173() throws Throwable {
    try {
        NumberUtils.createNumber(""[0"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // For input string: \""[0\""
        //
        verifyException(""java.lang.NumberFormatException"", e);
    }
}",0,
project,0,test173174,"public void test173174() throws Throwable {
    try {
        NumberUtils.createNumber(""sE^G%G<e"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // sE^G%G<e is not a valid number.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",1,
project,0,test174175,"public void test174175() throws Throwable {
    try {
        NumberUtils.createNumber(""Array cannot be empty."");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // Array cannot be empty. is not a valid number.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",0,
project,0,test175176,"public void test175176() throws Throwable {
    try {
        NumberUtils.createNumber(""sun.text.Normalizer is not available"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // sun.text.Normalizer is not available is not a valid number.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",0,
project,0,test176177,"public void test176177() throws Throwable {
    try {
        NumberUtils.createNumber(""."");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",0,
project,0,test177178,"public void test177178() throws Throwable {
    try {
        NumberUtils.createNumber(""-0x-0xC0cbIrmFf9*<)@5pL"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // Sign character in wrong position
        //
        verifyException(""java.lang.Integer"", e);
    }
}",0,
project,0,test178179,"public void test178179() throws Throwable {
    try {
        NumberUtils.createNumber(""0xw[I"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // For input string: \""w[I\""
        //
        verifyException(""java.lang.NumberFormatException"", e);
    }
}",1,
project,0,test179180,"public void test179180() throws Throwable {
    Number number0 = NumberUtils.createNumber(""--Strings must not be null"");
    assertNull(number0);
}",0,
project,0,test180181,"public void test180181() throws Throwable {
    try {
        NumberUtils.createNumber("""");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // A blank string is not a valid number
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",0,
project,0,test181182,"public void test181182() throws Throwable {
    Number number0 = NumberUtils.createNumber((String) null);
    assertNull(number0);
}",0,
project,0,test182183,"public void test182183() throws Throwable {
    try {
        NumberUtils.createNumber(""C0cbIrmFf9*<)@5pL"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // C0cbIrmFf9*<)@5pL is not a valid number.
        //
        verifyException(""org.apache.commons.lang3.math.NumberUtils"", e);
    }
}",0,
project,0,test183184,"public void test183184() throws Throwable {
    short short0 = NumberUtils.toShort((String) null, (short) 2022);
    assertEquals((short) 2022, short0);
}",0,
project,0,test184185,"public void test184185() throws Throwable {
    byte byte0 = NumberUtils.toByte((String) null);
    assertEquals((byte) 0, byte0);
}",0,assertNotNull(byte0)
project,0,test185186,"public void test185186() throws Throwable {
    double double0 = NumberUtils.toDouble((String) null);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test186187,"public void test186187() throws Throwable {
    float float0 = NumberUtils.toFloat(""8uE"");
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test187188,"public void test187188() throws Throwable {
    long long0 = NumberUtils.toLong((String) null, 138L);
    assertEquals(138L, long0);
}",1,
project,0,test188189,"public void test188189() throws Throwable {
    int int0 = NumberUtils.toInt((String) null);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test189190,"public void test189190() throws Throwable {
    short short0 = NumberUtils.toShort("""");
    assertEquals((short) 0, short0);
}",0,
project,0,test190191,"public void test190191() throws Throwable {
    long long0 = NumberUtils.toLong("""");
    assertEquals(0L, long0);
}",0,"assertEquals(0, long0)"
project,0,test191192,"public void test191192() throws Throwable {
    double double0 = NumberUtils.max((-84.9169040138), (double) (byte) 28, (double) (byte) 28);
    assertEquals(28.0, double0, 0.01);
}",0,
project,0,test192193,"public void test192193() throws Throwable {
    double double0 = NumberUtils.min((double) 2022, 0.0, 1378.49288319921);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test193194,"public void test193194() throws Throwable {
    float float0 = NumberUtils.min((float) 0, 350.17447F, (float) (byte) 0);
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test194195,"public void test194195() throws Throwable {
    float float0 = NumberUtils.max((-1478.0F), 27.7482F, (float) (byte) 1);
    assertEquals(27.7482F, float0, 0.01F);
}",0,
