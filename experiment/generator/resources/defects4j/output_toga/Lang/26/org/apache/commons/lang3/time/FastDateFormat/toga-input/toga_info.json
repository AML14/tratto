{
  "test0244" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0244() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n}",
    "testName" : "test0244"
  },
  "test13326" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13326() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n    MockDate mockDate0 = new MockDate((-2848), 1, 284, (-2305), (-2305), 1916);\n    String string0 = fastDateFormat0.format((Date) mockDate0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test13326"
  },
  "test41911" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test41911() throws Throwable {\n    Locale locale0 = Locale.ENGLISH;\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test41911"
  },
  "test41910" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test41910() throws Throwable {\n    Locale locale0 = Locale.ENGLISH;\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test41910"
  },
  "test13329" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13329() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n    MockDate mockDate0 = new MockDate((-2848), 1, 284, (-2305), (-2305), 1916);\n    String string0 = fastDateFormat0.format((Date) mockDate0);\n    mockDate0.toString();\n}",
    "testName" : "test13329"
  },
  "test13327" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13327() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n    MockDate mockDate0 = new MockDate((-2848), 1, 284, (-2305), (-2305), 1916);\n    String string0 = fastDateFormat0.format((Date) mockDate0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test13327"
  },
  "test13328" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13328() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n    MockDate mockDate0 = new MockDate((-2848), 1, 284, (-2305), (-2305), 1916);\n    String string0 = fastDateFormat0.format((Date) mockDate0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test13328"
  },
  "test511599" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test511599() throws Throwable {\n    String string0 = \"\";\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ROOT;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(2, timeZone0, locale0);\n    FastDateFormat.getInstance(\"CjY3mZ!-QI }(r\", timeZone0);\n}",
    "testName" : "test511599"
  },
  "test511597" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test511597() throws Throwable {\n    String string0 = \"\";\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ROOT;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(2, timeZone0, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test511597"
  },
  "test0127" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0127() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"6\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test0127"
  },
  "test0248" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0248() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test0248"
  },
  "test0128" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0128() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"6\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test0128"
  },
  "test0249" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0249() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test0249"
  },
  "test0129" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0129() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"6\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test0129"
  },
  "test821904" : {
    "methodSignature" : "public String format(Calendar calendar)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test821904() throws Throwable {\n    Locale locale0 = new Locale(\"T{X#,(0\", \"T{X#,(0\", \"T{X#,(0\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, locale0);\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1), \"oI\\\"g!s`4Dh3d9\");\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0);\n    String string0 = fastDateFormat0.format((Calendar) mockGregorianCalendar0);\n}",
    "testName" : "test821904"
  },
  "test621684" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test621684() throws Throwable {\n    Locale locale0 = Locale.ROOT;\n    FastDateFormat.getInstance(\"-b>/gir%,\", locale0);\n}",
    "testName" : "test621684"
  },
  "test511596" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test511596() throws Throwable {\n    String string0 = \"\";\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ROOT;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(2, timeZone0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test511596"
  },
  "test511595" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test511595() throws Throwable {\n    String string0 = \"\";\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ROOT;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(2, timeZone0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test511595"
  },
  "test501317" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501317() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test501317"
  },
  "test501316" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501316() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test501316"
  },
  "test501319" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501319() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    fastDateFormat0.equals((Object) fastDateFormat1);\n}",
    "testName" : "test501319"
  },
  "test501555" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501555() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    MockDate mockDate1 = new MockDate(0, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"E\");\n    StringBuffer stringBuffer1 = stringBuffer0.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(1);\n    StringBuffer stringBuffer2 = decimalFormat0.format((-1837L), stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer3 = fastDateFormat2.format((Date) mockDate1, stringBuffer2);\n    Object object1 = fastDateFormat2.parseObject(\"I+iH4\", parsePosition0);\n    fastDateFormat2.getPattern();\n}",
    "testName" : "test501555"
  },
  "test19432" : {
    "methodSignature" : "public static FastDateFormat getTimeInstance(int style, TimeZone timeZone)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test19432() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat.getTimeInstance(1390, timeZone0);\n}",
    "testName" : "test19432"
  },
  "test501554" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501554() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    MockDate mockDate1 = new MockDate(0, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"E\");\n    StringBuffer stringBuffer1 = stringBuffer0.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(1);\n    StringBuffer stringBuffer2 = decimalFormat0.format((-1837L), stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer3 = fastDateFormat2.format((Date) mockDate1, stringBuffer2);\n    Object object1 = fastDateFormat2.parseObject(\"I+iH4\", parsePosition0);\n    fastDateFormat2.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test501554"
  },
  "test501315" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501315() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test501315"
  },
  "test521603" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test521603() throws Throwable {\n    ZoneId zoneId0 = ZoneId.systemDefault();\n    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);\n    FastDateFormat.getInstance(\"u%F=Jb{Fk6<5bi1LAQ\", timeZone0);\n}",
    "testName" : "test521603"
  },
  "test561629" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test561629() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.US;\n    FastDateFormat.getInstance(\"<null>\", timeZone0, locale0);\n}",
    "testName" : "test561629"
  },
  "test501556" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501556() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    MockDate mockDate1 = new MockDate(0, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"E\");\n    StringBuffer stringBuffer1 = stringBuffer0.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(1);\n    StringBuffer stringBuffer2 = decimalFormat0.format((-1837L), stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer3 = fastDateFormat2.format((Date) mockDate1, stringBuffer2);\n    Object object1 = fastDateFormat2.parseObject(\"I+iH4\", parsePosition0);\n    fastDateFormat2.getMaxLengthEstimate();\n}",
    "testName" : "test501556"
  },
  "test0256" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0256() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    int[] intArray0 = new int[7];\n    String string0 = fastDateFormat0.parseToken(\"Urk}#\", intArray0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test0256"
  },
  "test0257" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0257() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    int[] intArray0 = new int[7];\n    String string0 = fastDateFormat0.parseToken(\"Urk}#\", intArray0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test0257"
  },
  "test501300" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501300() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    fastDateFormat2.equals((Object) fastDateFormat0);\n}",
    "testName" : "test501300"
  },
  "test0258" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0258() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    int[] intArray0 = new int[7];\n    String string0 = fastDateFormat0.parseToken(\"Urk}#\", intArray0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test0258"
  },
  "test0131" : {
    "methodSignature" : "protected void init()",
    "methodName" : "init",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0131() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"6\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);\n    fastDateFormat0.init();\n}",
    "testName" : "test0131"
  },
  "test0252" : {
    "methodSignature" : "protected String parseToken(String pattern, int[] indexRef)",
    "methodName" : "parseToken",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0252() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    int[] intArray0 = new int[7];\n    String string0 = fastDateFormat0.parseToken(\"Urk}#\", intArray0);\n}",
    "testName" : "test0252"
  },
  "test05135" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05135() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, (TimeZone) null, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test05135"
  },
  "test29486" : {
    "methodSignature" : "public static FastDateFormat getTimeInstance(int style)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test29486() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(1);\n}",
    "testName" : "test29486"
  },
  "test05134" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05134() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, (TimeZone) null, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test05134"
  },
  "test05133" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05133() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, (TimeZone) null, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test05133"
  },
  "test511584" : {
    "methodSignature" : "public static synchronized FastDateFormat getDateInstance(int style, TimeZone timeZone, Locale locale)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test511584() throws Throwable {\n    String string0 = \"\";\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ROOT;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(2, timeZone0, locale0);\n}",
    "testName" : "test511584"
  },
  "test461107" : {
    "methodSignature" : "public static synchronized FastDateFormat getTimeInstance(int style, TimeZone timeZone, Locale locale)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461107() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n}",
    "testName" : "test461107"
  },
  "test901916" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, TimeZone timeZone)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test901916() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);\n    char[] charArray0 = new char[4];\n    charArray0[0] = '^';\n    charArray0[1] = 'j';\n    charArray0[2] = '|';\n    charArray0[3] = 'Q';\n    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2178);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(0);\n    fastDateFormat0.equals(fastDateFormat1);\n    FastDateFormat.getDateTimeInstance(0, 1);\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat.getDateInstance((-2650), timeZone0);\n}",
    "testName" : "test901916"
  },
  "test41909" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test41909() throws Throwable {\n    Locale locale0 = Locale.ENGLISH;\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test41909"
  },
  "test501305" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501305() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n}",
    "testName" : "test501305"
  },
  "test0370" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0370() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n}",
    "testName" : "test0370"
  },
  "test0250" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0250() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test0250"
  },
  "test501544" : {
    "methodSignature" : "public Object parseObject(String source, ParsePosition pos)",
    "methodName" : "parseObject",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501544() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    MockDate mockDate1 = new MockDate(0, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"E\");\n    StringBuffer stringBuffer1 = stringBuffer0.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(1);\n    StringBuffer stringBuffer2 = decimalFormat0.format((-1837L), stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer3 = fastDateFormat2.format((Date) mockDate1, stringBuffer2);\n    Object object1 = fastDateFormat2.parseObject(\"I+iH4\", parsePosition0);\n}",
    "testName" : "test501544"
  },
  "test29491" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test29491() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(1);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test29491"
  },
  "test29490" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test29490() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(1);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test29490"
  },
  "test501410" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501410() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    fastDateFormat2.equals((Object) fastDateFormat3);\n}",
    "testName" : "test501410"
  },
  "test0141" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0141() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"6\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);\n    fastDateFormat0.init();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test0141"
  },
  "test0142" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0142() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"6\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);\n    fastDateFormat0.init();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test0142"
  },
  "test0384" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0384() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    boolean boolean0 = fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test0384"
  },
  "test0143" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0143() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"6\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);\n    fastDateFormat0.init();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test0143"
  },
  "test29492" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test29492() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(1);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test29492"
  },
  "test29499" : {
    "methodSignature" : "public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test29499() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(1);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(1, (-2571), 1713, 1604, 1, (-1));\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    fastDateFormat0.format((Object) mockGregorianCalendar0, (StringBuffer) null, fieldPosition0);\n}",
    "testName" : "test29499"
  },
  "test45976" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test45976() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getInstance(\"\", locale0);\n}",
    "testName" : "test45976"
  },
  "test20433" : {
    "methodSignature" : "public static FastDateFormat getTimeInstance(int style, Locale locale)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test20433() throws Throwable {\n    FastDateFormat.getTimeInstance(518, (Locale) null);\n}",
    "testName" : "test20433"
  },
  "test25452" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, Locale locale)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test25452() throws Throwable {\n    Locale locale0 = Locale.CHINESE;\n    FastDateFormat.getDateInstance(122, locale0);\n}",
    "testName" : "test25452"
  },
  "test05123" : {
    "methodSignature" : "public static synchronized FastDateFormat getTimeInstance(int style, TimeZone timeZone, Locale locale)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05123() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, (TimeZone) null, locale0);\n}",
    "testName" : "test05123"
  },
  "test491201" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test491201() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test491201"
  },
  "test491200" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test491200() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test491200"
  },
  "test891915" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test891915() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    fastDateFormat0.getPattern();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test891915"
  },
  "test0380" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0380() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test0380"
  },
  "test0381" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0381() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test0381"
  },
  "test501418" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501418() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    MockDate mockDate1 = new MockDate(0, 1, 2, 3, (-888), 0);\n    mockDate1.equals((Object) mockDate0);\n}",
    "testName" : "test501418"
  },
  "test0382" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0382() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test0382"
  },
  "test12261" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12261() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n}",
    "testName" : "test12261"
  },
  "test501412" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501412() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    fastDateFormat2.equals((Object) fastDateFormat0);\n}",
    "testName" : "test501412"
  },
  "test761898" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test761898() throws Throwable {\n    FastDateFormat.getInstance((String) null);\n}",
    "testName" : "test761898"
  },
  "test501411" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501411() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    fastDateFormat2.equals((Object) fastDateFormat1);\n}",
    "testName" : "test501411"
  },
  "test12266" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12266() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test12266"
  },
  "test12268" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12268() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test12268"
  },
  "test12267" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12267() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test12267"
  },
  "test38877" : {
    "methodSignature" : "public static synchronized FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, TimeZone timeZone, Locale locale)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test38877() throws Throwable {\n    Locale locale0 = Locale.CHINESE;\n    FastDateFormat.getDateTimeInstance(801, 2210, (TimeZone) null, locale0);\n}",
    "testName" : "test38877"
  },
  "test0394" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0394() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    boolean boolean0 = fastDateFormat0.getTimeZoneOverridesCalendar();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test0394"
  },
  "test721825" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test721825() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n    fastDateFormat1.getPattern();\n}",
    "testName" : "test721825"
  },
  "test0395" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0395() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    boolean boolean0 = fastDateFormat0.getTimeZoneOverridesCalendar();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test0395"
  },
  "test0396" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0396() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    boolean boolean0 = fastDateFormat0.getTimeZoneOverridesCalendar();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test0396"
  },
  "test721828" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test721828() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n    fastDateFormat1.equals((Object) fastDateFormat0);\n}",
    "testName" : "test721828"
  },
  "test721827" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test721827() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n    fastDateFormat1.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test721827"
  },
  "test721826" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test721826() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n    fastDateFormat1.getMaxLengthEstimate();\n}",
    "testName" : "test721826"
  },
  "test32548" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test32548() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    fastDateFormat0.hashCode();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test32548"
  },
  "test461123" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461123() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n    fastDateFormat1.getMaxLengthEstimate();\n}",
    "testName" : "test461123"
  },
  "test501405" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501405() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    fastDateFormat2.getMaxLengthEstimate();\n}",
    "testName" : "test501405"
  },
  "test501526" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501526() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    MockDate mockDate1 = new MockDate(0, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"E\");\n    StringBuffer stringBuffer1 = stringBuffer0.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(1);\n    StringBuffer stringBuffer2 = decimalFormat0.format((-1837L), stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer3 = fastDateFormat2.format((Date) mockDate1, stringBuffer2);\n    fastDateFormat2.equals((Object) fastDateFormat3);\n}",
    "testName" : "test501526"
  },
  "test461122" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461122() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n    fastDateFormat1.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test461122"
  },
  "test501404" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501404() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    fastDateFormat2.getPattern();\n}",
    "testName" : "test501404"
  },
  "test32547" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test32547() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    fastDateFormat0.hashCode();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test32547"
  },
  "test461125" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461125() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n    fastDateFormat1.equals((Object) fastDateFormat0);\n}",
    "testName" : "test461125"
  },
  "test501528" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501528() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    MockDate mockDate1 = new MockDate(0, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"E\");\n    StringBuffer stringBuffer1 = stringBuffer0.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(1);\n    StringBuffer stringBuffer2 = decimalFormat0.format((-1837L), stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer3 = fastDateFormat2.format((Date) mockDate1, stringBuffer2);\n    fastDateFormat2.equals((Object) fastDateFormat0);\n}",
    "testName" : "test501528"
  },
  "test32546" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test32546() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    fastDateFormat0.hashCode();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test32546"
  },
  "test461124" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461124() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n    fastDateFormat1.getPattern();\n}",
    "testName" : "test461124"
  },
  "test501527" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501527() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    MockDate mockDate1 = new MockDate(0, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"E\");\n    StringBuffer stringBuffer1 = stringBuffer0.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(1);\n    StringBuffer stringBuffer2 = decimalFormat0.format((-1837L), stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer3 = fastDateFormat2.format((Date) mockDate1, stringBuffer2);\n    fastDateFormat2.equals((Object) fastDateFormat1);\n}",
    "testName" : "test501527"
  },
  "test501522" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501522() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    MockDate mockDate1 = new MockDate(0, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"E\");\n    StringBuffer stringBuffer1 = stringBuffer0.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(1);\n    StringBuffer stringBuffer2 = decimalFormat0.format((-1837L), stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer3 = fastDateFormat2.format((Date) mockDate1, stringBuffer2);\n    fastDateFormat2.getPattern();\n}",
    "testName" : "test501522"
  },
  "test12274" : {
    "methodSignature" : "public StringBuffer format(Date date, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12274() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n}",
    "testName" : "test12274"
  },
  "test501521" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501521() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    MockDate mockDate1 = new MockDate(0, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"E\");\n    StringBuffer stringBuffer1 = stringBuffer0.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(1);\n    StringBuffer stringBuffer2 = decimalFormat0.format((-1837L), stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer3 = fastDateFormat2.format((Date) mockDate1, stringBuffer2);\n    fastDateFormat2.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test501521"
  },
  "test501403" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501403() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    fastDateFormat2.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test501403"
  },
  "test501524" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501524() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    MockDate mockDate1 = new MockDate(0, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"E\");\n    StringBuffer stringBuffer1 = stringBuffer0.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(1);\n    StringBuffer stringBuffer2 = decimalFormat0.format((-1837L), stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer3 = fastDateFormat2.format((Date) mockDate1, stringBuffer2);\n    mockDate1.equals((Object) mockDate0);\n}",
    "testName" : "test501524"
  },
  "test14332" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14332() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n}",
    "testName" : "test14332"
  },
  "test32542" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test32542() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    fastDateFormat0.hashCode();\n}",
    "testName" : "test32542"
  },
  "test501523" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501523() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    MockDate mockDate1 = new MockDate(0, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"E\");\n    StringBuffer stringBuffer1 = stringBuffer0.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(1);\n    StringBuffer stringBuffer2 = decimalFormat0.format((-1837L), stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer3 = fastDateFormat2.format((Date) mockDate1, stringBuffer2);\n    fastDateFormat2.getMaxLengthEstimate();\n}",
    "testName" : "test501523"
  },
  "test12279" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12279() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test12279"
  },
  "test14337" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14337() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test14337"
  },
  "test14338" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14338() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test14338"
  },
  "test14336" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14336() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test14336"
  },
  "test851910" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test851910() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    String string0 = fastDateFormat0.toString();\n}",
    "testName" : "test851910"
  },
  "test851911" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test851911() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    String string0 = fastDateFormat0.toString();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test851911"
  },
  "test551619" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test551619() throws Throwable {\n    FastDateFormat.getInstance(\"@H(d*8qNRb\\u0001$;g;eW\");\n}",
    "testName" : "test551619"
  },
  "test711732" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test711732() throws Throwable {\n    ZoneId zoneId0 = ZoneId.systemDefault();\n    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);\n    FastDateFormat.getInstance(\"#%F=JFk6A5Dbi1LAQ\", timeZone0);\n}",
    "testName" : "test711732"
  },
  "test12280" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12280() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test12280"
  },
  "test12282" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12282() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    mockDate0.toString();\n}",
    "testName" : "test12282"
  },
  "test12281" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12281() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test12281"
  },
  "test39880" : {
    "methodSignature" : "public static synchronized FastDateFormat getTimeInstance(int style, TimeZone timeZone, Locale locale)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39880() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"org.apache.commons.lang3.time.FastDateFormat$TimeZoneDisplayKey\");\n    FastDateFormat.getTimeInstance((-978), timeZone0, (Locale) null);\n}",
    "testName" : "test39880"
  },
  "test461097" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461097() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test461097"
  },
  "test14345" : {
    "methodSignature" : "public TimeZone getTimeZone()",
    "methodName" : "getTimeZone",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14345() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\");\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n}",
    "testName" : "test14345"
  },
  "test461099" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461099() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test461099"
  },
  "test461098" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461098() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test461098"
  },
  "test721887" : {
    "methodSignature" : "public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test721887() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(0, locale1);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);\n    fastDateFormat0.format((Object) mockSimpleDateFormat0, stringBuffer1, fieldPosition0);\n}",
    "testName" : "test721887"
  },
  "test07195" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07195() throws Throwable {\n    Locale locale0 = Locale.US;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (TimeZone) null, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test07195"
  },
  "test07194" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07194() throws Throwable {\n    Locale locale0 = Locale.US;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (TimeZone) null, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test07194"
  },
  "test07193" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07193() throws Throwable {\n    Locale locale0 = Locale.US;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (TimeZone) null, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test07193"
  },
  "test42913" : {
    "methodSignature" : "public static synchronized FastDateFormat getDateInstance(int style, TimeZone timeZone, Locale locale)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test42913() throws Throwable {\n    FastDateFormat.getDateInstance(65, (TimeZone) null, (Locale) null);\n}",
    "testName" : "test42913"
  },
  "test45987" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test45987() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getInstance(\"\", locale0);\n    fastDateFormat1.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test45987"
  },
  "test45986" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test45986() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getInstance(\"\", locale0);\n    fastDateFormat1.getPattern();\n}",
    "testName" : "test45986"
  },
  "test45989" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test45989() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getInstance(\"\", locale0);\n    fastDateFormat1.equals((Object) fastDateFormat0);\n}",
    "testName" : "test45989"
  },
  "test21434" : {
    "methodSignature" : "public static FastDateFormat getTimeInstance(int style)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test21434() throws Throwable {\n    FastDateFormat.getTimeInstance((-438));\n}",
    "testName" : "test21434"
  },
  "test45988" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test45988() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getInstance(\"\", locale0);\n    fastDateFormat1.getMaxLengthEstimate();\n}",
    "testName" : "test45988"
  },
  "test811903" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test811903() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    Locale locale0 = Locale.JAPANESE;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n    boolean boolean0 = fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test811903"
  },
  "test26453" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test26453() throws Throwable {\n    FastDateFormat.getDateInstance(1559);\n}",
    "testName" : "test26453"
  },
  "test45992" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test45992() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getInstance(\"\", locale0);\n    boolean boolean0 = fastDateFormat0.equals(fastDateFormat1);\n}",
    "testName" : "test45992"
  },
  "test14355" : {
    "methodSignature" : "public String format(Calendar calendar)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14355() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\");\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    Calendar calendar0 = MockCalendar.getInstance(timeZone0);\n    String string0 = fastDateFormat0.format(calendar0);\n}",
    "testName" : "test14355"
  },
  "test14354" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14354() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\");\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    Calendar calendar0 = MockCalendar.getInstance(timeZone0);\n}",
    "testName" : "test14354"
  },
  "test14359" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14359() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\");\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    Calendar calendar0 = MockCalendar.getInstance(timeZone0);\n    String string0 = fastDateFormat0.format(calendar0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test14359"
  },
  "test771899" : {
    "methodSignature" : "public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test771899() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"org.apache.commons.lang3.time.FastDateFormat$UnpaddedMonthField\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, (TimeZone) simpleTimeZone0);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, 0, 3, (-49), 0);\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    StringBuffer stringBuffer0 = new StringBuffer(\"7t2Z)Umk`.3en(twdW3\");\n    mockGregorianCalendar0.setFirstDayOfWeek(1693);\n    StringBuffer stringBuffer1 = stringBuffer0.insert(0, \"org.apache.commons.lang3.time.FastDateFormat$TwentyFourHourField\");\n    StringBuffer stringBuffer2 = fastDateFormat0.applyRules(mockGregorianCalendar0, stringBuffer0);\n    Locale locale0 = Locale.CHINESE;\n    locale0.getScript();\n    Locale.forLanguageTag(\"\");\n    FastDateFormat.getDateInstance(0, locale0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(0, locale0);\n    locale0.getDisplayCountry();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(0, 3, (TimeZone) simpleTimeZone0, locale0);\n    fastDateFormat2.applyRules(mockGregorianCalendar0, stringBuffer2);\n    StringBuffer stringBuffer3 = fastDateFormat0.format((-2903L), stringBuffer1);\n    fastDateFormat1.applyRules(mockGregorianCalendar0, stringBuffer3);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    fastDateFormat1.format((Object) stringBuffer0, stringBuffer0, fieldPosition0);\n}",
    "testName" : "test771899"
  },
  "test40888" : {
    "methodSignature" : "public static synchronized FastDateFormat getTimeInstance(int style, TimeZone timeZone, Locale locale)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test40888() throws Throwable {\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat.getTimeInstance(2883, (TimeZone) null, locale0);\n}",
    "testName" : "test40888"
  },
  "test43916" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, TimeZone timeZone)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test43916() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(3, timeZone0);\n}",
    "testName" : "test43916"
  },
  "test501297" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501297() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    fastDateFormat2.getMaxLengthEstimate();\n}",
    "testName" : "test501297"
  },
  "test721875" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test721875() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(0, locale1);\n    fastDateFormat2.getMaxLengthEstimate();\n}",
    "testName" : "test721875"
  },
  "test721874" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test721874() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(0, locale1);\n    fastDateFormat2.getPattern();\n}",
    "testName" : "test721874"
  },
  "test501299" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501299() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    fastDateFormat2.equals((Object) fastDateFormat1);\n}",
    "testName" : "test501299"
  },
  "test721873" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test721873() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(0, locale1);\n    fastDateFormat2.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test721873"
  },
  "test07183" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07183() throws Throwable {\n    Locale locale0 = Locale.US;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (TimeZone) null, locale0);\n}",
    "testName" : "test07183"
  },
  "test501296" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501296() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    fastDateFormat2.getPattern();\n}",
    "testName" : "test501296"
  },
  "test721878" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test721878() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(0, locale1);\n    fastDateFormat2.equals((Object) fastDateFormat0);\n}",
    "testName" : "test721878"
  },
  "test501295" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501295() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    fastDateFormat2.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test501295"
  },
  "test721877" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test721877() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(0, locale1);\n    fastDateFormat2.equals((Object) fastDateFormat1);\n}",
    "testName" : "test721877"
  },
  "test791901" : {
    "methodSignature" : "public String format(long millis)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test791901() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, (Locale) null);\n    String string0 = fastDateFormat0.format(0L);\n}",
    "testName" : "test791901"
  },
  "test04114" : {
    "methodSignature" : "static synchronized String getTimeZoneDisplay(TimeZone tz, boolean daylight, int style, Locale locale)",
    "methodName" : "getTimeZoneDisplay",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04114() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = FastDateFormat.getTimeZoneDisplay(timeZone0, false, 1, locale0);\n}",
    "testName" : "test04114"
  },
  "test731888" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test731888() throws Throwable {\n    FastDateFormat.getInstance(\"9GIgE-\");\n}",
    "testName" : "test731888"
  },
  "test14360" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14360() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\");\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    Calendar calendar0 = MockCalendar.getInstance(timeZone0);\n    String string0 = fastDateFormat0.format(calendar0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test14360"
  },
  "test14361" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14361() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\");\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    Calendar calendar0 = MockCalendar.getInstance(timeZone0);\n    String string0 = fastDateFormat0.format(calendar0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test14361"
  },
  "test33561" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33561() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    fastDateFormat0.hashCode();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test33561"
  },
  "test491199" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test491199() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test491199"
  },
  "test33562" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33562() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    fastDateFormat0.hashCode();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test33562"
  },
  "test721863" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, Locale locale)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test721863() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(0, locale1);\n}",
    "testName" : "test721863"
  },
  "test491194" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, TimeZone timeZone)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test491194() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n}",
    "testName" : "test491194"
  },
  "test501285" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, Locale locale)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501285() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n}",
    "testName" : "test501285"
  },
  "test0117" : {
    "methodSignature" : "public static FastDateFormat getTimeInstance(int style, Locale locale)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0117() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"6\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);\n}",
    "testName" : "test0117"
  },
  "test35619" : {
    "methodSignature" : "public StringBuffer format(Calendar calendar, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35619() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);\n    char[] charArray0 = new char[4];\n    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);\n}",
    "testName" : "test35619"
  },
  "test17403" : {
    "methodSignature" : "protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "FastDateFormat",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test17403() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, \"\");\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", simpleTimeZone0, locale0);\n}",
    "testName" : "test17403"
  },
  "test33557" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33557() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    fastDateFormat0.hashCode();\n}",
    "testName" : "test33557"
  },
  "test631685" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test631685() throws Throwable {\n    FastDateFormat.getInstance(\"3(Wd<XHT\", (TimeZone) null, (Locale) null);\n}",
    "testName" : "test631685"
  },
  "test09221" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09221() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (TimeZone) null);\n}",
    "testName" : "test09221"
  },
  "test701728" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test701728() throws Throwable {\n    Locale locale0 = Locale.CHINA;\n    FastDateFormat.getInstance(\"[#K.lmr7[\", locale0);\n}",
    "testName" : "test701728"
  },
  "test43933" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test43933() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);\n    String string0 = fastDateFormat0.format((Date) mockDate0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test43933"
  },
  "test501393" : {
    "methodSignature" : "public Object parseObject(String source, ParsePosition pos)",
    "methodName" : "parseObject",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501393() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n}",
    "testName" : "test501393"
  },
  "test43934" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test43934() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);\n    String string0 = fastDateFormat0.format((Date) mockDate0);\n    mockDate0.toString();\n}",
    "testName" : "test43934"
  },
  "test09227" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09227() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (TimeZone) null);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test09227"
  },
  "test43931" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test43931() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);\n    String string0 = fastDateFormat0.format((Date) mockDate0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test43931"
  },
  "test451002" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451002() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getInstance(\"\", locale0);\n    boolean boolean0 = fastDateFormat0.equals(fastDateFormat1);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test451002"
  },
  "test22435" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, TimeZone timeZone)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22435() throws Throwable {\n    FastDateFormat.getDateTimeInstance(276, 276, (TimeZone) null);\n}",
    "testName" : "test22435"
  },
  "test43932" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test43932() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);\n    String string0 = fastDateFormat0.format((Date) mockDate0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test43932"
  },
  "test451003" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451003() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getInstance(\"\", locale0);\n    boolean boolean0 = fastDateFormat0.equals(fastDateFormat1);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test451003"
  },
  "test09225" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09225() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (TimeZone) null);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test09225"
  },
  "test09226" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09226() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (TimeZone) null);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test09226"
  },
  "test451001" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451001() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getInstance(\"\", locale0);\n    boolean boolean0 = fastDateFormat0.equals(fastDateFormat1);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test451001"
  },
  "test27454" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27454() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n}",
    "testName" : "test27454"
  },
  "test641692" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test641692() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat.getInstance(\":Uhxdjbv\", (TimeZone) simpleTimeZone0);\n}",
    "testName" : "test641692"
  },
  "test35629" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35629() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);\n    char[] charArray0 = new char[4];\n    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);\n    mockGregorianCalendar0.toString();\n}",
    "testName" : "test35629"
  },
  "test541618" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test541618() throws Throwable {\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    FastDateFormat.getInstance(\"`r`JjOw\", timeZone0);\n}",
    "testName" : "test541618"
  },
  "test691720" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test691720() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat.getInstance(\".L$D&HvPb\", timeZone0, locale0);\n}",
    "testName" : "test691720"
  },
  "test541617" : {
    "methodSignature" : "public TimeZone getTimeZone()",
    "methodName" : "getTimeZone",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test541617() throws Throwable {\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n}",
    "testName" : "test541617"
  },
  "test35625" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35625() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);\n    char[] charArray0 = new char[4];\n    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test35625"
  },
  "test35624" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35624() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);\n    char[] charArray0 = new char[4];\n    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test35624"
  },
  "test13299" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13299() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n}",
    "testName" : "test13299"
  },
  "test35623" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35623() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);\n    char[] charArray0 = new char[4];\n    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test35623"
  },
  "test461053" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461053() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test461053"
  },
  "test33563" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33563() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    fastDateFormat0.hashCode();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test33563"
  },
  "test36831" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36831() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    Long long0 = new Long(1L);\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) \"GMT\");\n    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);\n    mockGregorianCalendar0.toString();\n}",
    "testName" : "test36831"
  },
  "test461055" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461055() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test461055"
  },
  "test461054" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461054() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test461054"
  },
  "test17419" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test17419() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, \"\");\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", simpleTimeZone0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test17419"
  },
  "test43926" : {
    "methodSignature" : "public String format(Date date)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test43926() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);\n    String string0 = fastDateFormat0.format((Date) mockDate0);\n}",
    "testName" : "test43926"
  },
  "test501264" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501264() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    fastDateFormat1.equals((Object) fastDateFormat0);\n}",
    "testName" : "test501264"
  },
  "test881914" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test881914() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(3, (TimeZone) null);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test881914"
  },
  "test43922" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test43922() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(3, timeZone0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test43922"
  },
  "test501261" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501261() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    fastDateFormat1.getPattern();\n}",
    "testName" : "test501261"
  },
  "test27460" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27460() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test27460"
  },
  "test43923" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test43923() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(3, timeZone0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test43923"
  },
  "test501263" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501263() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    fastDateFormat1.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test501263"
  },
  "test17418" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test17418() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, \"\");\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", simpleTimeZone0, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test17418"
  },
  "test501262" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501262() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    fastDateFormat1.getMaxLengthEstimate();\n}",
    "testName" : "test501262"
  },
  "test501380" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501380() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    fastDateFormat3.equals((Object) fastDateFormat1);\n}",
    "testName" : "test501380"
  },
  "test27462" : {
    "methodSignature" : "public String format(Date date)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27462() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    fastDateFormat0.format((Date) null);\n}",
    "testName" : "test27462"
  },
  "test43921" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test43921() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(3, timeZone0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test43921"
  },
  "test30506" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test30506() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test30506"
  },
  "test27458" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27458() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test27458"
  },
  "test27459" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27459() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test27459"
  },
  "test30508" : {
    "methodSignature" : "public StringBuffer format(long millis, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test30508() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    fastDateFormat0.format(1L, (StringBuffer) null);\n}",
    "testName" : "test30508"
  },
  "test30505" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test30505() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test30505"
  },
  "test30504" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test30504() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test30504"
  },
  "test17422" : {
    "methodSignature" : "public Object parseObject(String source, ParsePosition pos)",
    "methodName" : "parseObject",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test17422() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, \"\");\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", simpleTimeZone0, locale0);\n    fastDateFormat0.parseObject(\"2;Og@Nt\", (ParsePosition) null);\n}",
    "testName" : "test17422"
  },
  "test36848" : {
    "methodSignature" : "public static synchronized FastDateFormat getDateInstance(int style, TimeZone timeZone, Locale locale)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36848() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    Long long0 = new Long(1L);\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) \"GMT\");\n    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(2, timeZone0, locale0);\n}",
    "testName" : "test36848"
  },
  "test461067" : {
    "methodSignature" : "public StringBuffer format(long millis, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461067() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n}",
    "testName" : "test461067"
  },
  "test591661" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test591661() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(408, \"\");\n    Locale locale0 = new Locale(\"\");\n    FastDateFormat.getInstance(\"];fP>%Q\\\"w\", (TimeZone) simpleTimeZone0, locale0);\n}",
    "testName" : "test591661"
  },
  "test30500" : {
    "methodSignature" : "public static FastDateFormat getInstance()",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test30500() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n}",
    "testName" : "test30500"
  },
  "test17420" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test17420() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, \"\");\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", simpleTimeZone0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test17420"
  },
  "test801902" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test801902() throws Throwable {\n    FastDateFormat.getInstance(\"\\\"\\\"v!j.#\");\n}",
    "testName" : "test801902"
  },
  "test06173" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06173() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test06173"
  },
  "test501375" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501375() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    fastDateFormat3.getMaxLengthEstimate();\n}",
    "testName" : "test501375"
  },
  "test06172" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06172() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test06172"
  },
  "test501374" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501374() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    fastDateFormat3.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test501374"
  },
  "test501377" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501377() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    timeZone0.equals((Object) timeZone1);\n}",
    "testName" : "test501377"
  },
  "test06174" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06174() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test06174"
  },
  "test41898" : {
    "methodSignature" : "public static synchronized FastDateFormat getDateInstance(int style, TimeZone timeZone, Locale locale)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test41898() throws Throwable {\n    Locale locale0 = Locale.ENGLISH;\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0, locale0);\n}",
    "testName" : "test41898"
  },
  "test501376" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501376() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    mockDate0.toString();\n}",
    "testName" : "test501376"
  },
  "test501250" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501250() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test501250"
  },
  "test10237" : {
    "methodSignature" : "public TimeZone getTimeZone()",
    "methodName" : "getTimeZone",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test10237() throws Throwable {\n    DateFormatSymbols dateFormatSymbols0 = new DateFormatSymbols();\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"@,0\", dateFormatSymbols0);\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n}",
    "testName" : "test10237"
  },
  "test10238" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test10238() throws Throwable {\n    DateFormatSymbols dateFormatSymbols0 = new DateFormatSymbols();\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"@,0\", dateFormatSymbols0);\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"@,0\", timeZone0);\n}",
    "testName" : "test10238"
  },
  "test501373" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501373() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    fastDateFormat3.getPattern();\n}",
    "testName" : "test501373"
  },
  "test501251" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501251() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test501251"
  },
  "test009" : {
    "methodSignature" : "static synchronized String getTimeZoneDisplay(TimeZone tz, boolean daylight, int style, Locale locale)",
    "methodName" : "getTimeZoneDisplay",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test009() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.CHINA;\n    FastDateFormat.getTimeZoneDisplay(timeZone0, true, (-1745), locale0);\n}",
    "testName" : "test009"
  },
  "test461078" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461078() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test461078"
  },
  "test501379" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501379() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    fastDateFormat3.equals((Object) fastDateFormat2);\n}",
    "testName" : "test501379"
  },
  "test36854" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36854() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    Long long0 = new Long(1L);\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) \"GMT\");\n    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(2, timeZone0, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test36854"
  },
  "test501257" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501257() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n}",
    "testName" : "test501257"
  },
  "test501378" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501378() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    fastDateFormat3.equals((Object) fastDateFormat0);\n}",
    "testName" : "test501378"
  },
  "test36853" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36853() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    Long long0 = new Long(1L);\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) \"GMT\");\n    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(2, timeZone0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test36853"
  },
  "test461077" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461077() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test461077"
  },
  "test36852" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36852() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    Long long0 = new Long(1L);\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) \"GMT\");\n    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(2, timeZone0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test36852"
  },
  "test461076" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461076() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test461076"
  },
  "test06161" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06161() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test06161"
  },
  "test501487" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501487() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    MockDate mockDate1 = new MockDate(0, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"E\");\n    StringBuffer stringBuffer1 = stringBuffer0.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(1);\n    StringBuffer stringBuffer2 = decimalFormat0.format((-1837L), stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer3 = fastDateFormat2.format((Date) mockDate1, stringBuffer2);\n    mockDate1.toString();\n}",
    "testName" : "test501487"
  },
  "test34572" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34572() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    boolean boolean0 = fastDateFormat0.equals(fastDateFormat0);\n}",
    "testName" : "test34572"
  },
  "test10247" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test10247() throws Throwable {\n    DateFormatSymbols dateFormatSymbols0 = new DateFormatSymbols();\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"@,0\", dateFormatSymbols0);\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"@,0\", timeZone0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test10247"
  },
  "test501360" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501360() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    fastDateFormat3.equals((Object) fastDateFormat2);\n}",
    "testName" : "test501360"
  },
  "test10248" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test10248() throws Throwable {\n    DateFormatSymbols dateFormatSymbols0 = new DateFormatSymbols();\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"@,0\", dateFormatSymbols0);\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"@,0\", timeZone0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test10248"
  },
  "test34570" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34570() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test34570"
  },
  "test10249" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test10249() throws Throwable {\n    DateFormatSymbols dateFormatSymbols0 = new DateFormatSymbols();\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"@,0\", dateFormatSymbols0);\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"@,0\", timeZone0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test10249"
  },
  "test501483" : {
    "methodSignature" : "public StringBuffer format(Date date, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501483() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    MockDate mockDate1 = new MockDate(0, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"E\");\n    StringBuffer stringBuffer1 = stringBuffer0.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(1);\n    StringBuffer stringBuffer2 = decimalFormat0.format((-1837L), stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer3 = fastDateFormat2.format((Date) mockDate1, stringBuffer2);\n}",
    "testName" : "test501483"
  },
  "test501361" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501361() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    fastDateFormat3.equals((Object) fastDateFormat1);\n}",
    "testName" : "test501361"
  },
  "test08219" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08219() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"6/1/10\", timeZone0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test08219"
  },
  "test15380" : {
    "methodSignature" : "protected String parseToken(String pattern, int[] indexRef)",
    "methodName" : "parseToken",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test15380() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    int[] intArray0 = new int[5];\n    fastDateFormat0.parseToken(\"\", intArray0);\n}",
    "testName" : "test15380"
  },
  "test34568" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34568() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test34568"
  },
  "test841908" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test841908() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test841908"
  },
  "test34569" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34569() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test34569"
  },
  "test841909" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test841909() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test841909"
  },
  "test501368" : {
    "methodSignature" : "public String format(Date date)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501368() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n}",
    "testName" : "test501368"
  },
  "test741896" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test741896() throws Throwable {\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat.getInstance(\"z}FWDo.\", (TimeZone) null, locale0);\n}",
    "testName" : "test741896"
  },
  "test34564" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34564() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n}",
    "testName" : "test34564"
  },
  "test461088" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461088() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    fastDateFormat0.hashCode();\n}",
    "testName" : "test461088"
  },
  "test501249" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501249() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test501249"
  },
  "test721810" : {
    "methodSignature" : "public static synchronized FastDateFormat getTimeInstance(int style, TimeZone timeZone, Locale locale)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test721810() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n}",
    "testName" : "test721810"
  },
  "test501355" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501355() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    fastDateFormat3.getPattern();\n}",
    "testName" : "test501355"
  },
  "test501350" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, TimeZone timeZone)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501350() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n}",
    "testName" : "test501350"
  },
  "test06159" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06159() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test06159"
  },
  "test08217" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08217() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"6/1/10\", timeZone0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test08217"
  },
  "test471175" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test471175() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    Long long0 = new Long(1951L);\n    boolean boolean0 = fastDateFormat0.equals(long0);\n}",
    "testName" : "test471175"
  },
  "test06158" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06158() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test06158"
  },
  "test08218" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08218() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"6/1/10\", timeZone0, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test08218"
  },
  "test44944" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44944() throws Throwable {\n    Locale locale0 = Locale.ENGLISH;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n}",
    "testName" : "test44944"
  },
  "test681710" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test681710() throws Throwable {\n    Locale locale0 = Locale.JAPANESE;\n    FastDateFormat.getInstance(\"Nl\", (TimeZone) null, locale0);\n}",
    "testName" : "test681710"
  },
  "test471179" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test471179() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    Long long0 = new Long(1951L);\n    boolean boolean0 = fastDateFormat0.equals(long0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test471179"
  },
  "test831905" : {
    "methodSignature" : "public static FastDateFormat getInstance()",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test831905() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getInstance();\n}",
    "testName" : "test831905"
  },
  "test831906" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test831906() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getInstance();\n    fastDateFormat1.getMaxLengthEstimate();\n}",
    "testName" : "test831906"
  },
  "test06157" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06157() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test06157"
  },
  "test661701" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test661701() throws Throwable {\n    Locale locale0 = Locale.FRENCH;\n    FastDateFormat.getInstance(\"w$RV7HWI \", locale0);\n}",
    "testName" : "test661701"
  },
  "test23443" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, Locale locale)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test23443() throws Throwable {\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat.getDateTimeInstance((-750), (-750), locale0);\n}",
    "testName" : "test23443"
  },
  "test491219" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test491219() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    Long long0 = new Long(1L);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Object) long0, stringBuffer0, fieldPosition0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test491219"
  },
  "test501239" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501239() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n}",
    "testName" : "test501239"
  },
  "test34577" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34577() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    boolean boolean0 = fastDateFormat0.equals(fastDateFormat0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test34577"
  },
  "test501357" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501357() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    fastDateFormat3.getMaxLengthEstimate();\n}",
    "testName" : "test501357"
  },
  "test34578" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34578() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    boolean boolean0 = fastDateFormat0.equals(fastDateFormat0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test34578"
  },
  "test501356" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501356() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    fastDateFormat3.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test501356"
  },
  "test501359" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501359() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    fastDateFormat3.equals((Object) fastDateFormat0);\n}",
    "testName" : "test501359"
  },
  "test34576" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34576() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    boolean boolean0 = fastDateFormat0.equals(fastDateFormat0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test34576"
  },
  "test501358" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501358() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    timeZone0.equals((Object) timeZone1);\n}",
    "testName" : "test501358"
  },
  "test501342" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501342() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    fastDateFormat0.equals((Object) fastDateFormat1);\n}",
    "testName" : "test501342"
  },
  "test611676" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test611676() throws Throwable {\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    FastDateFormat.getInstance(\"cu+&Tf&53r^xfe!*`l@\", timeZone0);\n}",
    "testName" : "test611676"
  },
  "test501344" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501344() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    timeZone1.equals((Object) timeZone0);\n}",
    "testName" : "test501344"
  },
  "test531611" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test531611() throws Throwable {\n    Locale locale0 = Locale.ITALIAN;\n    FastDateFormat.getInstance(\"htC+iAsdS2#%*>BG\", (TimeZone) null, locale0);\n}",
    "testName" : "test531611"
  },
  "test501343" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501343() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    fastDateFormat0.equals((Object) fastDateFormat2);\n}",
    "testName" : "test501343"
  },
  "test18429" : {
    "methodSignature" : "static synchronized String getTimeZoneDisplay(TimeZone tz, boolean daylight, int style, Locale locale)",
    "methodName" : "getTimeZoneDisplay",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test18429() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3673, \"\");\n    FastDateFormat.getTimeZoneDisplay(simpleTimeZone0, true, 3673, (Locale) null);\n}",
    "testName" : "test18429"
  },
  "test28470" : {
    "methodSignature" : "protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "FastDateFormat",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test28470() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"9]Y~%Db~VyH\", (TimeZone) null, locale0);\n}",
    "testName" : "test28470"
  },
  "test08206" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08206() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"6/1/10\", timeZone0, locale0);\n}",
    "testName" : "test08206"
  },
  "test491218" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test491218() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    Long long0 = new Long(1L);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Object) long0, stringBuffer0, fieldPosition0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test491218"
  },
  "test491217" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test491217() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    Long long0 = new Long(1L);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Object) long0, stringBuffer0, fieldPosition0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test491217"
  },
  "test06146" : {
    "methodSignature" : "public static synchronized FastDateFormat getTimeInstance(int style, TimeZone timeZone, Locale locale)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06146() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);\n}",
    "testName" : "test06146"
  },
  "test491212" : {
    "methodSignature" : "public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test491212() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    Long long0 = new Long(1L);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Object) long0, stringBuffer0, fieldPosition0);\n}",
    "testName" : "test491212"
  },
  "test571639" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test571639() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat.getInstance(\"iWKU+]K\\\"-?:et/0,\", timeZone0, locale0);\n}",
    "testName" : "test571639"
  },
  "test31518" : {
    "methodSignature" : "protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "FastDateFormat",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test31518() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"org.apache.commons.lang3.time.FastDateFormat$TimeZoneDisplayKey\");\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n}",
    "testName" : "test31518"
  },
  "test471181" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test471181() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    Long long0 = new Long(1951L);\n    boolean boolean0 = fastDateFormat0.equals(long0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test471181"
  },
  "test871913" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test871913() throws Throwable {\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\");\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    fastDateFormat0.getLocale();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test871913"
  },
  "test471180" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test471180() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    Long long0 = new Long(1951L);\n    boolean boolean0 = fastDateFormat0.equals(long0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test471180"
  },
  "test461024" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, TimeZone timeZone)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461024() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n}",
    "testName" : "test461024"
  },
  "test651693" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test651693() throws Throwable {\n    FastDateFormat.getInstance(\"FTo'rGr4$NMLbEI2U\\\"\");\n}",
    "testName" : "test651693"
  },
  "test581647" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test581647() throws Throwable {\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat.getInstance(\"gl#+/t~.LgR_d%q\", locale0);\n}",
    "testName" : "test581647"
  },
  "test28482" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test28482() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"9]Y~%Db~VyH\", (TimeZone) null, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test28482"
  },
  "test28480" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test28480() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"9]Y~%Db~VyH\", (TimeZone) null, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test28480"
  },
  "test501571" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501571() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    MockDate mockDate1 = new MockDate(0, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"E\");\n    StringBuffer stringBuffer1 = stringBuffer0.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(1);\n    StringBuffer stringBuffer2 = decimalFormat0.format((-1837L), stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer3 = fastDateFormat2.format((Date) mockDate1, stringBuffer2);\n    Object object1 = fastDateFormat2.parseObject(\"I+iH4\", parsePosition0);\n    TimeZone timeZone2 = TimeZone.getTimeZone(\"Greenwich Mean Time\");\n    timeZone2.equals((Object) timeZone1);\n}",
    "testName" : "test501571"
  },
  "test28481" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test28481() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"9]Y~%Db~VyH\", (TimeZone) null, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test28481"
  },
  "test501570" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501570() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    MockDate mockDate1 = new MockDate(0, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"E\");\n    StringBuffer stringBuffer1 = stringBuffer0.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(1);\n    StringBuffer stringBuffer2 = decimalFormat0.format((-1837L), stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer3 = fastDateFormat2.format((Date) mockDate1, stringBuffer2);\n    Object object1 = fastDateFormat2.parseObject(\"I+iH4\", parsePosition0);\n    TimeZone timeZone2 = TimeZone.getTimeZone(\"Greenwich Mean Time\");\n    timeZone2.equals((Object) timeZone0);\n}",
    "testName" : "test501570"
  },
  "test28485" : {
    "methodSignature" : "public StringBuffer format(Calendar calendar, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test28485() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"9]Y~%Db~VyH\", (TimeZone) null, locale0);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(1, 1, 0, 0, 3);\n    fastDateFormat0.format((Calendar) mockGregorianCalendar0, (StringBuffer) null);\n}",
    "testName" : "test28485"
  },
  "test31529" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test31529() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"org.apache.commons.lang3.time.FastDateFormat$TimeZoneDisplayKey\");\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test31529"
  },
  "test16381" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16381() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(1);\n}",
    "testName" : "test16381"
  },
  "test601669" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test601669() throws Throwable {\n    Locale locale0 = Locale.FRANCE;\n    FastDateFormat.getInstance(\">WK6e]DBk\", locale0);\n}",
    "testName" : "test601669"
  },
  "test16387" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16387() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(1);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test16387"
  },
  "test461035" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461035() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test461035"
  },
  "test501339" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501339() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test501339"
  },
  "test16386" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16386() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(1);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test16386"
  },
  "test461034" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461034() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test461034"
  },
  "test501338" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501338() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test501338"
  },
  "test16385" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16385() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(1);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test16385"
  },
  "test13310" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13310() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test13310"
  },
  "test11251" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, TimeZone timeZone)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11251() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) null);\n}",
    "testName" : "test11251"
  },
  "test13311" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13311() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test13311"
  },
  "test16389" : {
    "methodSignature" : "protected String parseToken(String pattern, int[] indexRef)",
    "methodName" : "parseToken",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16389() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(1);\n    int[] intArray0 = new int[4];\n    fastDateFormat0.parseToken((String) null, intArray0);\n}",
    "testName" : "test16389"
  },
  "test461033" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461033() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test461033"
  },
  "test501337" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501337() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test501337"
  },
  "test11256" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11256() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) null);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test11256"
  },
  "test501320" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501320() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    fastDateFormat0.equals((Object) fastDateFormat2);\n}",
    "testName" : "test501320"
  },
  "test501562" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501562() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    MockDate mockDate1 = new MockDate(0, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"E\");\n    StringBuffer stringBuffer1 = stringBuffer0.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(1);\n    StringBuffer stringBuffer2 = decimalFormat0.format((-1837L), stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer3 = fastDateFormat2.format((Date) mockDate1, stringBuffer2);\n    Object object1 = fastDateFormat2.parseObject(\"I+iH4\", parsePosition0);\n    fastDateFormat2.equals((Object) fastDateFormat1);\n}",
    "testName" : "test501562"
  },
  "test11255" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11255() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) null);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test11255"
  },
  "test13315" : {
    "methodSignature" : "public String format(Date date)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13315() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n    MockDate mockDate0 = new MockDate((-2848), 1, 284, (-2305), (-2305), 1916);\n    String string0 = fastDateFormat0.format((Date) mockDate0);\n}",
    "testName" : "test13315"
  },
  "test501561" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501561() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    MockDate mockDate1 = new MockDate(0, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"E\");\n    StringBuffer stringBuffer1 = stringBuffer0.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(1);\n    StringBuffer stringBuffer2 = decimalFormat0.format((-1837L), stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer3 = fastDateFormat2.format((Date) mockDate1, stringBuffer2);\n    Object object1 = fastDateFormat2.parseObject(\"I+iH4\", parsePosition0);\n    fastDateFormat2.equals((Object) fastDateFormat3);\n}",
    "testName" : "test501561"
  },
  "test13312" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13312() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test13312"
  },
  "test11257" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11257() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) null);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test11257"
  },
  "test501563" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501563() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(3, timeZone0);\n    MockDate mockDate0 = new MockDate(3, 71, 1, 4, 648);\n    String string2 = fastDateFormat3.format((Date) mockDate0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat2.parseObject(\"\", parsePosition0);\n    MockDate mockDate1 = new MockDate(0, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"E\");\n    StringBuffer stringBuffer1 = stringBuffer0.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(1);\n    StringBuffer stringBuffer2 = decimalFormat0.format((-1837L), stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer3 = fastDateFormat2.format((Date) mockDate1, stringBuffer2);\n    Object object1 = fastDateFormat2.parseObject(\"I+iH4\", parsePosition0);\n    fastDateFormat2.equals((Object) fastDateFormat0);\n}",
    "testName" : "test501563"
  },
  "test37869" : {
    "methodSignature" : "public static synchronized FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, TimeZone timeZone, Locale locale)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test37869() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat.getDateTimeInstance(0, (-1548), (TimeZone) simpleTimeZone0, (Locale) null);\n}",
    "testName" : "test37869"
  },
  "test44956" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44956() throws Throwable {\n    Locale locale0 = Locale.ENGLISH;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test44956"
  },
  "test751897" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test751897() throws Throwable {\n    FastDateFormat.getInstance(\"ZzBMHX.Xs,:pO[wVvQ\");\n}",
    "testName" : "test751897"
  },
  "test44955" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44955() throws Throwable {\n    Locale locale0 = Locale.ENGLISH;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test44955"
  },
  "test451013" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451013() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getInstance(\"\", locale0);\n    boolean boolean0 = fastDateFormat0.equals(fastDateFormat1);\n    fastDateFormat0.equals((Object) fastDateFormat1);\n}",
    "testName" : "test451013"
  },
  "test44954" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44954() throws Throwable {\n    Locale locale0 = Locale.ENGLISH;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test44954"
  },
  "test451014" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451014() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getInstance(\"\", locale0);\n    boolean boolean0 = fastDateFormat0.equals(fastDateFormat1);\n    fastDateFormat1.equals((Object) fastDateFormat0);\n}",
    "testName" : "test451014"
  },
  "test451011" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451011() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getInstance(\"\", locale0);\n    boolean boolean0 = fastDateFormat0.equals(fastDateFormat1);\n    fastDateFormat1.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test451011"
  },
  "test451012" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451012() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getInstance(\"\", locale0);\n    boolean boolean0 = fastDateFormat0.equals(fastDateFormat1);\n    fastDateFormat1.getMaxLengthEstimate();\n}",
    "testName" : "test451012"
  },
  "test451010" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451010() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getInstance(\"\", locale0);\n    boolean boolean0 = fastDateFormat0.equals(fastDateFormat1);\n    fastDateFormat1.getPattern();\n}",
    "testName" : "test451010"
  },
  "test24444" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test24444() throws Throwable {\n    FastDateFormat.getDateTimeInstance(11, 3);\n}",
    "testName" : "test24444"
  },
  "test31533" : {
    "methodSignature" : "public String format(long millis)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test31533() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"org.apache.commons.lang3.time.FastDateFormat$TimeZoneDisplayKey\");\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    fastDateFormat0.format(0L);\n}",
    "testName" : "test31533"
  },
  "test501327" : {
    "methodSignature" : "public TimeZone getTimeZone()",
    "methodName" : "getTimeZone",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501327() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"E\", locale0);\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(1);\n    String string0 = timeZone0.getDisplayName(locale0);\n    Locale locale1 = Locale.forLanguageTag(\"E\");\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n}",
    "testName" : "test501327"
  },
  "test31531" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test31531() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"org.apache.commons.lang3.time.FastDateFormat$TimeZoneDisplayKey\");\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test31531"
  },
  "test461044" : {
    "methodSignature" : "public Object parseObject(String source, ParsePosition pos)",
    "methodName" : "parseObject",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461044() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n}",
    "testName" : "test461044"
  },
  "test31530" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test31530() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"org.apache.commons.lang3.time.FastDateFormat$TimeZoneDisplayKey\");\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test31530"
  },
  "test461164" : {
    "methodSignature" : "public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461164() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(48L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);\n    fastDateFormat0.format((Object) mockSimpleDateFormat0, stringBuffer1, fieldPosition0);\n}",
    "testName" : "test461164"
  },
  "test671702" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test671702() throws Throwable {\n    FastDateFormat.getInstance(\"sP`u+I ,=U*\");\n}",
    "testName" : "test671702"
  }
}