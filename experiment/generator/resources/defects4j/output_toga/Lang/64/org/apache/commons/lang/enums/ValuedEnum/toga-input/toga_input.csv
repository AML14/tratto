focal_method,test_prefix,docstring
"protected static Enum getEnum(Class enumClass, int value) {
    if (enumClass == null) {
        throw new IllegalArgumentException(""The Enum Class must not be null"");
    }
    List list = Enum.getEnumList(enumClass);
    for (Iterator it = list.iterator(); it.hasNext(); ) {
        ValuedEnum enumeration = (ValuedEnum) it.next();
        if (enumeration.getValue() == value) {
            return enumeration;
        }
    }
    return null;
}","public void test00() throws Throwable {
    // Undeclared exception!
    try {
        ValuedEnum.getEnum((Class) null, (-38));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Enum Class must not be null
        //
        verifyException(""org.apache.commons.lang.enums.ValuedEnum"", e);
    }
}","/**
 * <p>Gets an <code>Enum</code> object by class and value.</p>
 *
 * <p>This method loops through the list of <code>Enum</code>,
 * thus if there are many <code>Enum</code>s this will be
 * slow.</p>
 *
 * @param enumClass  the class of the <code>Enum</code> to get
 * @param value  the value of the <code>Enum</code> to get
 * @return the enum object, or null if the enum does not exist
 * @throws IllegalArgumentException if the enum class is <code>null</code>
 */"
"protected static Enum getEnum(Class enumClass, int value) {
    if (enumClass == null) {
        throw new IllegalArgumentException(""The Enum Class must not be null"");
    }
    List list = Enum.getEnumList(enumClass);
    for (Iterator it = list.iterator(); it.hasNext(); ) {
        ValuedEnum enumeration = (ValuedEnum) it.next();
        if (enumeration.getValue() == value) {
            return enumeration;
        }
    }
    return null;
}","public void test11() throws Throwable {
    Class<Object> class0 = Object.class;
    // Undeclared exception!
    try {
        ValuedEnum.getEnum(class0, (-1));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Class must be a subclass of Enum
        //
        verifyException(""org.apache.commons.lang.enums.Enum"", e);
    }
}","/**
 * <p>Gets an <code>Enum</code> object by class and value.</p>
 *
 * <p>This method loops through the list of <code>Enum</code>,
 * thus if there are many <code>Enum</code>s this will be
 * slow.</p>
 *
 * @param enumClass  the class of the <code>Enum</code> to get
 * @param value  the value of the <code>Enum</code> to get
 * @return the enum object, or null if the enum does not exist
 * @throws IllegalArgumentException if the enum class is <code>null</code>
 */"
