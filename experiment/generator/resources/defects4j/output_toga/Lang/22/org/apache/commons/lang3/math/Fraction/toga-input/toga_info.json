{
  "test059100" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test059100() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = Fraction.getFraction(\"1/1\");\n    int int0 = fraction0.compareTo(fraction1);\n    fraction1.equals((Object) fraction0);\n}",
    "testName" : "test059100"
  },
  "test084143" : {
    "methodSignature" : "public static Fraction getFraction(String str)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test084143() throws Throwable {\n    Fraction.getFraction(\">NLE6w.\");\n}",
    "testName" : "test084143"
  },
  "test0000" : {
    "methodSignature" : "public int compareTo(Fraction other)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    Fraction fraction1 = Fraction.ONE_HALF;\n    int int0 = fraction0.compareTo(fraction1);\n}",
    "testName" : "test0000"
  },
  "test02032" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02032() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    Fraction fraction1 = fraction0.add(fraction0);\n    Fraction fraction2 = fraction1.invert();\n    fraction1.doubleValue();\n}",
    "testName" : "test02032"
  },
  "test02031" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02031() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    Fraction fraction1 = fraction0.add(fraction0);\n    Fraction fraction2 = fraction1.invert();\n    fraction2.getNumerator();\n}",
    "testName" : "test02031"
  },
  "test04575" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04575() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    Fraction fraction1 = fraction0.ZERO.multiplyBy(fraction0);\n    fraction1.getNumerator();\n}",
    "testName" : "test04575"
  },
  "test03762" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03762() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = fraction0.ZERO.abs();\n    fraction1.longValue();\n}",
    "testName" : "test03762"
  },
  "test02543" : {
    "methodSignature" : "public int getProperNumerator()",
    "methodName" : "getProperNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02543() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.invert();\n    int int0 = fraction1.getProperNumerator();\n}",
    "testName" : "test02543"
  },
  "test076127" : {
    "methodSignature" : "public Fraction pow(int power)",
    "methodName" : "pow",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076127() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-3579.91434));\n    fraction0.THREE_FIFTHS.pow(Integer.MIN_VALUE);\n}",
    "testName" : "test076127"
  },
  "test03357" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03357() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = fraction0.negate();\n    float float0 = fraction1.floatValue();\n}",
    "testName" : "test03357"
  },
  "test05899" : {
    "methodSignature" : "public int compareTo(Fraction other)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05899() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    Fraction fraction1 = Fraction.ONE_HALF;\n    int int0 = fraction0.compareTo(fraction1);\n}",
    "testName" : "test05899"
  },
  "test089150" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089150() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(0, 2506);\n    Fraction fraction1 = fraction0.ONE_THIRD.invert();\n    Fraction fraction2 = fraction1.multiplyBy(fraction0);\n    fraction1.floatValue();\n}",
    "testName" : "test089150"
  },
  "test01218" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01218() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.ZERO.pow(4);\n    fraction1.doubleValue();\n}",
    "testName" : "test01218"
  },
  "test02949" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02949() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(\"-1\");\n    fraction0.getDenominator();\n}",
    "testName" : "test02949"
  },
  "test090151" : {
    "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090151() throws Throwable {\n    Fraction.getReducedFraction(0, 0);\n}",
    "testName" : "test090151"
  },
  "test059101" : {
    "methodSignature" : "public int compareTo(Fraction other)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test059101() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = Fraction.getFraction(\"1/1\");\n    int int0 = fraction0.compareTo(fraction1);\n}",
    "testName" : "test059101"
  },
  "test062104" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test062104() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    fraction0.FOUR_FIFTHS.hashCode();\n    fraction0.getDenominator();\n}",
    "testName" : "test062104"
  },
  "test05493" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05493() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-77), 4);\n    String string0 = fraction0.toProperString();\n    fraction0.getNumerator();\n}",
    "testName" : "test05493"
  },
  "test0011" : {
    "methodSignature" : "public int compareTo(Fraction other)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_FIFTH;\n    Fraction fraction1 = Fraction.ZERO;\n    int int0 = fraction1.compareTo(fraction0);\n}",
    "testName" : "test0011"
  },
  "test062105" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test062105() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    fraction0.FOUR_FIFTHS.hashCode();\n    fraction0.getNumerator();\n}",
    "testName" : "test062105"
  },
  "test04167" : {
    "methodSignature" : "public Fraction multiplyBy(Fraction fraction)",
    "methodName" : "multiplyBy",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04167() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(2.147483647E9);\n    fraction0.multiplyBy(fraction0);\n}",
    "testName" : "test04167"
  },
  "test067113" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067113() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-77), 4);\n    Fraction fraction1 = fraction0.ZERO.divideBy(fraction0);\n    fraction1.doubleValue();\n}",
    "testName" : "test067113"
  },
  "test067114" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067114() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-77), 4);\n    Fraction fraction1 = fraction0.ZERO.divideBy(fraction0);\n    fraction0.floatValue();\n}",
    "testName" : "test067114"
  },
  "test100164" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100164() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    double double0 = fraction0.doubleValue();\n}",
    "testName" : "test100164"
  },
  "test067115" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067115() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-77), 4);\n    Fraction fraction1 = fraction0.ZERO.divideBy(fraction0);\n    fraction0.getDenominator();\n}",
    "testName" : "test067115"
  },
  "test02542" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02542() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.invert();\n    int int0 = fraction1.getProperNumerator();\n    fraction1.doubleValue();\n}",
    "testName" : "test02542"
  },
  "test02541" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02541() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.invert();\n    int int0 = fraction1.getProperNumerator();\n    fraction1.getNumerator();\n}",
    "testName" : "test02541"
  },
  "test05494" : {
    "methodSignature" : "public String toProperString()",
    "methodName" : "toProperString",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05494() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-77), 4);\n    String string0 = fraction0.toProperString();\n}",
    "testName" : "test05494"
  },
  "test087146" : {
    "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test087146() throws Throwable {\n    Fraction.getReducedFraction(Integer.MIN_VALUE, (-1698));\n}",
    "testName" : "test087146"
  },
  "test00510" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00510() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(25, 25);\n    Fraction fraction1 = fraction0.reduce();\n    fraction1.getNumerator();\n}",
    "testName" : "test00510"
  },
  "test03863" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03863() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(2.147483647E9);\n    Fraction fraction1 = fraction0.abs();\n    fraction0.doubleValue();\n}",
    "testName" : "test03863"
  },
  "test03864" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03864() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(2.147483647E9);\n    Fraction fraction1 = fraction0.abs();\n    fraction1.doubleValue();\n}",
    "testName" : "test03864"
  },
  "test00914" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00914() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = Fraction.getFraction(4188.5);\n    Fraction fraction2 = fraction1.subtract(fraction0);\n    fraction2.floatValue();\n}",
    "testName" : "test00914"
  },
  "test01727" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01727() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = Fraction.getFraction((-811.22));\n    Fraction fraction2 = fraction1.multiplyBy(fraction0);\n    fraction1.intValue();\n}",
    "testName" : "test01727"
  },
  "test01726" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01726() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = Fraction.getFraction((-811.22));\n    Fraction fraction2 = fraction1.multiplyBy(fraction0);\n    fraction2.doubleValue();\n}",
    "testName" : "test01726"
  },
  "test095157" : {
    "methodSignature" : "public String toProperString()",
    "methodName" : "toProperString",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095157() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-1), 0, 3);\n    String string0 = fraction0.toProperString();\n}",
    "testName" : "test095157"
  },
  "test095156" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095156() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-1), 0, 3);\n    String string0 = fraction0.toProperString();\n    fraction0.getDenominator();\n}",
    "testName" : "test095156"
  },
  "test071121" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test071121() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    Fraction fraction1 = fraction0.ZERO.subtract(fraction0);\n    fraction1.floatValue();\n}",
    "testName" : "test071121"
  },
  "test0024" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0024() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-3579.9143379));\n    fraction0.hashCode();\n    fraction0.hashCode();\n    fraction0.getNumerator();\n}",
    "testName" : "test0024"
  },
  "test05083" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05083() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(718, 718);\n    int int0 = fraction0.getNumerator();\n}",
    "testName" : "test05083"
  },
  "test0022" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0022() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-3579.9143379));\n    fraction0.hashCode();\n    fraction0.hashCode();\n    fraction0.getDenominator();\n}",
    "testName" : "test0022"
  },
  "test05082" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05082() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(718, 718);\n    int int0 = fraction0.getNumerator();\n    fraction0.floatValue();\n}",
    "testName" : "test05082"
  },
  "test063106" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test063106() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_FIFTH;\n    Fraction fraction1 = fraction0.TWO_THIRDS.reduce();\n    fraction0.equals(fraction1);\n    fraction1.getNumerator();\n}",
    "testName" : "test063106"
  },
  "test0023" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0023() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-3579.9143379));\n    fraction0.hashCode();\n    fraction0.hashCode();\n    fraction0.doubleValue();\n}",
    "testName" : "test0023"
  },
  "test063107" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test063107() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_FIFTH;\n    Fraction fraction1 = fraction0.TWO_THIRDS.reduce();\n    fraction0.equals(fraction1);\n    fraction1.getDenominator();\n}",
    "testName" : "test063107"
  },
  "test081136" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081136() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = Fraction.getFraction((-1), 0, 3);\n    Fraction fraction2 = fraction0.pow(0);\n    Fraction fraction3 = fraction2.add(fraction1);\n    Fraction fraction4 = fraction3.reduce();\n    fraction4.equals((Object) fraction2);\n}",
    "testName" : "test081136"
  },
  "test103169" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103169() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = Fraction.TWO_THIRDS;\n    Fraction fraction2 = Fraction.THREE_QUARTERS;\n    Fraction fraction3 = Fraction.getReducedFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);\n    int int0 = fraction1.compareTo(fraction3);\n    Fraction fraction4 = Fraction.getFraction((-2145), 34);\n    Fraction fraction5 = fraction0.ONE_FIFTH.multiplyBy(fraction1);\n    fraction5.doubleValue();\n}",
    "testName" : "test103169"
  },
  "test081135" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081135() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = Fraction.getFraction((-1), 0, 3);\n    Fraction fraction2 = fraction0.pow(0);\n    Fraction fraction3 = fraction2.add(fraction1);\n    Fraction fraction4 = fraction3.reduce();\n    fraction3.getDenominator();\n}",
    "testName" : "test081135"
  },
  "test097160" : {
    "methodSignature" : "public static Fraction getFraction(int numerator, int denominator)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097160() throws Throwable {\n    Fraction.getFraction(Integer.MIN_VALUE, (-1140));\n}",
    "testName" : "test097160"
  },
  "test068116" : {
    "methodSignature" : "public Fraction multiplyBy(Fraction fraction)",
    "methodName" : "multiplyBy",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068116() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_FIFTH;\n    fraction0.multiplyBy((Fraction) null);\n}",
    "testName" : "test068116"
  },
  "test081138" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081138() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = Fraction.getFraction((-1), 0, 3);\n    Fraction fraction2 = fraction0.pow(0);\n    Fraction fraction3 = fraction2.add(fraction1);\n    Fraction fraction4 = fraction3.reduce();\n    fraction4.floatValue();\n}",
    "testName" : "test081138"
  },
  "test103167" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103167() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = Fraction.TWO_THIRDS;\n    Fraction fraction2 = Fraction.THREE_QUARTERS;\n    Fraction fraction3 = Fraction.getReducedFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);\n    int int0 = fraction1.compareTo(fraction3);\n    fraction3.getNumerator();\n}",
    "testName" : "test103167"
  },
  "test04676" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04676() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = Fraction.getFraction(1094, 1094, 1094);\n    Fraction fraction2 = fraction0.TWO_FIFTHS.multiplyBy(fraction1);\n    Fraction fraction3 = fraction2.subtract(fraction0);\n    fraction3.getNumerator();\n}",
    "testName" : "test04676"
  },
  "test081137" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081137() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = Fraction.getFraction((-1), 0, 3);\n    Fraction fraction2 = fraction0.pow(0);\n    Fraction fraction3 = fraction2.add(fraction1);\n    Fraction fraction4 = fraction3.reduce();\n    fraction4.getDenominator();\n}",
    "testName" : "test081137"
  },
  "test103168" : {
    "methodSignature" : "public int compareTo(Fraction other)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103168() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = Fraction.TWO_THIRDS;\n    Fraction fraction2 = Fraction.THREE_QUARTERS;\n    Fraction fraction3 = Fraction.getReducedFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);\n    int int0 = fraction1.compareTo(fraction3);\n}",
    "testName" : "test103168"
  },
  "test01321" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01321() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((double) (-1));\n    Fraction fraction1 = fraction0.pow(3);\n    fraction0.getDenominator();\n}",
    "testName" : "test01321"
  },
  "test01320" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01320() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((double) (-1));\n    Fraction fraction1 = fraction0.pow(3);\n    fraction1.floatValue();\n}",
    "testName" : "test01320"
  },
  "test02133" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02133() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    int int0 = fraction0.intValue();\n}",
    "testName" : "test02133"
  },
  "test086145" : {
    "methodSignature" : "public static Fraction getFraction(double value)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test086145() throws Throwable {\n    Fraction.getFraction(1.7976931348623157E308);\n}",
    "testName" : "test086145"
  },
  "test02644" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02644() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    int int0 = fraction0.getNumerator();\n}",
    "testName" : "test02644"
  },
  "test078129" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078129() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-77), 4);\n    Fraction fraction1 = fraction0.abs();\n    fraction0.floatValue();\n}",
    "testName" : "test078129"
  },
  "test03458" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03458() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(0, (-249));\n    double double0 = fraction0.doubleValue();\n    fraction0.getDenominator();\n}",
    "testName" : "test03458"
  },
  "test03459" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03459() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(0, (-249));\n    double double0 = fraction0.doubleValue();\n}",
    "testName" : "test03459"
  },
  "test01319" : {
    "methodSignature" : "public Fraction pow(int power)",
    "methodName" : "pow",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01319() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((double) (-1));\n    Fraction fraction1 = fraction0.pow(3);\n}",
    "testName" : "test01319"
  },
  "test092153" : {
    "methodSignature" : "public static Fraction getFraction(int whole, int numerator, int denominator)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092153() throws Throwable {\n    Fraction.getFraction(Integer.MIN_VALUE, 47, 47);\n}",
    "testName" : "test092153"
  },
  "test070120" : {
    "methodSignature" : "public Fraction subtract(Fraction fraction)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test070120() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    Fraction fraction1 = Fraction.ZERO;\n    Fraction fraction2 = fraction0.subtract(fraction1);\n}",
    "testName" : "test070120"
  },
  "test0035" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0035() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    Fraction fraction1 = Fraction.ONE_HALF;\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction1.getNumerator();\n}",
    "testName" : "test0035"
  },
  "test0036" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0036() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    Fraction fraction1 = Fraction.ONE_HALF;\n    boolean boolean0 = fraction0.equals(fraction1);\n}",
    "testName" : "test0036"
  },
  "test060102" : {
    "methodSignature" : "public int compareTo(Fraction other)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test060102() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = Fraction.ONE_QUARTER;\n    int int0 = fraction0.compareTo(fraction1);\n}",
    "testName" : "test060102"
  },
  "test03051" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03051() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(0, 0, 10000);\n    fraction0.getDenominator();\n}",
    "testName" : "test03051"
  },
  "test081140" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081140() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = Fraction.getFraction((-1), 0, 3);\n    Fraction fraction2 = fraction0.pow(0);\n    Fraction fraction3 = fraction2.add(fraction1);\n    Fraction fraction4 = fraction3.reduce();\n    fraction4.equals((Object) fraction3);\n}",
    "testName" : "test081140"
  },
  "test078130" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078130() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-77), 4);\n    Fraction fraction1 = fraction0.abs();\n    fraction1.doubleValue();\n}",
    "testName" : "test078130"
  },
  "test04268" : {
    "methodSignature" : "public int compareTo(Fraction other)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04268() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-1081), 2152, 2152);\n    fraction0.compareTo((Fraction) null);\n}",
    "testName" : "test04268"
  },
  "test03052" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03052() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(0, 0, 10000);\n    fraction0.floatValue();\n}",
    "testName" : "test03052"
  },
  "test089149" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089149() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(0, 2506);\n    Fraction fraction1 = fraction0.ONE_THIRD.invert();\n    Fraction fraction2 = fraction1.multiplyBy(fraction0);\n    fraction1.getDenominator();\n}",
    "testName" : "test089149"
  },
  "test05595" : {
    "methodSignature" : "public static Fraction getFraction(int whole, int numerator, int denominator)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05595() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(0, 664);\n    fraction0.toProperString();\n    Fraction.getFraction(664, 0, 0);\n}",
    "testName" : "test05595"
  },
  "test065111" : {
    "methodSignature" : "public Fraction divideBy(Fraction fraction)",
    "methodName" : "divideBy",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test065111() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(0, 2506);\n    fraction0.divideBy(fraction0);\n}",
    "testName" : "test065111"
  },
  "test089148" : {
    "methodSignature" : "public Fraction multiplyBy(Fraction fraction)",
    "methodName" : "multiplyBy",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089148() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(0, 2506);\n    Fraction fraction1 = fraction0.ONE_THIRD.invert();\n    Fraction fraction2 = fraction1.multiplyBy(fraction0);\n}",
    "testName" : "test089148"
  },
  "test103172" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103172() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = Fraction.TWO_THIRDS;\n    Fraction fraction2 = Fraction.THREE_QUARTERS;\n    Fraction fraction3 = Fraction.getReducedFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);\n    int int0 = fraction1.compareTo(fraction3);\n    Fraction fraction4 = Fraction.getFraction((-2145), 34);\n    Fraction fraction5 = fraction0.ONE_FIFTH.multiplyBy(fraction1);\n    Fraction fraction6 = Fraction.TWO_THIRDS;\n    fraction0.ONE_THIRD.hashCode();\n    Fraction fraction7 = fraction1.TWO_THIRDS.add(fraction0);\n    Fraction fraction8 = Fraction.getFraction((-199.6492926809913));\n    Fraction fraction9 = fraction7.TWO_QUARTERS.subtract(fraction1);\n    fraction7.doubleValue();\n}",
    "testName" : "test103172"
  },
  "test01423" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01423() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(1218, 3);\n    Fraction fraction1 = fraction0.pow(3);\n    fraction1.getNumerator();\n}",
    "testName" : "test01423"
  },
  "test073124" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test073124() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    fraction0.add((Fraction) null);\n}",
    "testName" : "test073124"
  },
  "test01422" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01422() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(1218, 3);\n    Fraction fraction1 = fraction0.pow(3);\n    fraction0.floatValue();\n}",
    "testName" : "test01422"
  },
  "test02236" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02236() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-472.68686588506665));\n    int int0 = fraction0.intValue();\n    fraction0.getDenominator();\n}",
    "testName" : "test02236"
  },
  "test103170" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103170() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = Fraction.TWO_THIRDS;\n    Fraction fraction2 = Fraction.THREE_QUARTERS;\n    Fraction fraction3 = Fraction.getReducedFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);\n    int int0 = fraction1.compareTo(fraction3);\n    Fraction fraction4 = Fraction.getFraction((-2145), 34);\n    Fraction fraction5 = fraction0.ONE_FIFTH.multiplyBy(fraction1);\n    Fraction fraction6 = Fraction.TWO_THIRDS;\n    fraction0.ONE_THIRD.hashCode();\n    Fraction fraction7 = fraction1.TWO_THIRDS.add(fraction0);\n    Fraction fraction8 = Fraction.getFraction((-199.6492926809913));\n    fraction8.doubleValue();\n}",
    "testName" : "test103170"
  },
  "test02235" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02235() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-472.68686588506665));\n    int int0 = fraction0.intValue();\n    fraction0.doubleValue();\n}",
    "testName" : "test02235"
  },
  "test103171" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103171() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = Fraction.TWO_THIRDS;\n    Fraction fraction2 = Fraction.THREE_QUARTERS;\n    Fraction fraction3 = Fraction.getReducedFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);\n    int int0 = fraction1.compareTo(fraction3);\n    Fraction fraction4 = Fraction.getFraction((-2145), 34);\n    Fraction fraction5 = fraction0.ONE_FIFTH.multiplyBy(fraction1);\n    Fraction fraction6 = Fraction.TWO_THIRDS;\n    fraction0.ONE_THIRD.hashCode();\n    Fraction fraction7 = fraction1.TWO_THIRDS.add(fraction0);\n    Fraction fraction8 = Fraction.getFraction((-199.6492926809913));\n    Fraction fraction9 = fraction7.TWO_QUARTERS.subtract(fraction1);\n    fraction9.floatValue();\n}",
    "testName" : "test103171"
  },
  "test04777" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04777() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.TWO_THIRDS.divideBy(fraction0);\n    fraction1.doubleValue();\n}",
    "testName" : "test04777"
  },
  "test081139" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081139() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = Fraction.getFraction((-1), 0, 3);\n    Fraction fraction2 = fraction0.pow(0);\n    Fraction fraction3 = fraction2.add(fraction1);\n    Fraction fraction4 = fraction3.reduce();\n    fraction0.equals((Object) fraction1);\n}",
    "testName" : "test081139"
  },
  "test00611" : {
    "methodSignature" : "public static Fraction getFraction(String str)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00611() throws Throwable {\n    Fraction.getFraction(\" Hwz3~N\");\n}",
    "testName" : "test00611"
  },
  "test04778" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04778() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.TWO_THIRDS.divideBy(fraction0);\n    fraction1.getDenominator();\n}",
    "testName" : "test04778"
  },
  "test103174" : {
    "methodSignature" : "public int getProperNumerator()",
    "methodName" : "getProperNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103174() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = Fraction.TWO_THIRDS;\n    Fraction fraction2 = Fraction.THREE_QUARTERS;\n    Fraction fraction3 = Fraction.getReducedFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);\n    int int0 = fraction1.compareTo(fraction3);\n    Fraction fraction4 = Fraction.getFraction((-2145), 34);\n    Fraction fraction5 = fraction0.ONE_FIFTH.multiplyBy(fraction1);\n    Fraction fraction6 = Fraction.TWO_THIRDS;\n    fraction0.ONE_THIRD.hashCode();\n    Fraction fraction7 = fraction1.TWO_THIRDS.add(fraction0);\n    Fraction fraction8 = Fraction.getFraction((-199.6492926809913));\n    Fraction fraction9 = fraction7.TWO_QUARTERS.subtract(fraction1);\n    int int1 = fraction4.getProperNumerator();\n}",
    "testName" : "test103174"
  },
  "test03965" : {
    "methodSignature" : "public Fraction subtract(Fraction fraction)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03965() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    fraction0.FOUR_FIFTHS.subtract((Fraction) null);\n}",
    "testName" : "test03965"
  },
  "test01828" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01828() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    long long0 = fraction0.longValue();\n}",
    "testName" : "test01828"
  },
  "test0047" : {
    "methodSignature" : "public Fraction subtract(Fraction fraction)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0047() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(Integer.MAX_VALUE, Integer.MAX_VALUE);\n    fraction0.ONE_QUARTER.subtract(fraction0);\n}",
    "testName" : "test0047"
  },
  "test05185" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05185() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-77), 4);\n    int int0 = fraction0.getProperWhole();\n    fraction0.doubleValue();\n}",
    "testName" : "test05185"
  },
  "test061103" : {
    "methodSignature" : "public int compareTo(Fraction other)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test061103() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    int int0 = fraction0.compareTo(fraction0);\n}",
    "testName" : "test061103"
  },
  "test05184" : {
    "methodSignature" : "public int getProperWhole()",
    "methodName" : "getProperWhole",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05184() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-77), 4);\n    int int0 = fraction0.getProperWhole();\n}",
    "testName" : "test05184"
  },
  "test101165" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101165() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    long long0 = fraction0.longValue();\n}",
    "testName" : "test101165"
  },
  "test02234" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02234() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-472.68686588506665));\n    int int0 = fraction0.intValue();\n}",
    "testName" : "test02234"
  },
  "test05186" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05186() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-77), 4);\n    int int0 = fraction0.getProperWhole();\n    fraction0.getNumerator();\n}",
    "testName" : "test05186"
  },
  "test03560" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03560() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    Fraction fraction1 = fraction0.THREE_QUARTERS.negate();\n    double double0 = fraction1.doubleValue();\n}",
    "testName" : "test03560"
  },
  "test066112" : {
    "methodSignature" : "public Fraction divideBy(Fraction fraction)",
    "methodName" : "divideBy",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066112() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    fraction0.THREE_FIFTHS.divideBy((Fraction) null);\n}",
    "testName" : "test066112"
  },
  "test088147" : {
    "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088147() throws Throwable {\n    Fraction.getReducedFraction((-3399), Integer.MIN_VALUE);\n}",
    "testName" : "test088147"
  },
  "test01930" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01930() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-4909), 0, 286);\n    long long0 = fraction0.longValue();\n}",
    "testName" : "test01930"
  },
  "test072122" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test072122() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-77), 4);\n    Fraction fraction1 = fraction0.ZERO.add(fraction0);\n    fraction1.getNumerator();\n}",
    "testName" : "test072122"
  },
  "test072123" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test072123() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-77), 4);\n    Fraction fraction1 = fraction0.ZERO.add(fraction0);\n    fraction1.doubleValue();\n}",
    "testName" : "test072123"
  },
  "test01015" : {
    "methodSignature" : "public Fraction reduce()",
    "methodName" : "reduce",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01015() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.reduce();\n}",
    "testName" : "test01015"
  },
  "test04369" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04369() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = Fraction.getFraction(2144467519, 277);\n    fraction0.add(fraction1);\n}",
    "testName" : "test04369"
  },
  "test02746" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02746() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = fraction0.negate();\n    int int0 = fraction1.getNumerator();\n    fraction1.doubleValue();\n}",
    "testName" : "test02746"
  },
  "test02745" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02745() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = fraction0.negate();\n    int int0 = fraction1.getNumerator();\n}",
    "testName" : "test02745"
  },
  "test099163" : {
    "methodSignature" : "public static Fraction getFraction(int numerator, int denominator)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099163() throws Throwable {\n    Fraction.getFraction(0, 0);\n}",
    "testName" : "test099163"
  },
  "test094155" : {
    "methodSignature" : "public static Fraction getFraction(int whole, int numerator, int denominator)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094155() throws Throwable {\n    Fraction.getFraction(25, (-4144), (-4));\n}",
    "testName" : "test094155"
  },
  "test083142" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test083142() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(\"1 2/13\");\n    fraction0.doubleValue();\n}",
    "testName" : "test083142"
  },
  "test0058" : {
    "methodSignature" : "public int getProperNumerator()",
    "methodName" : "getProperNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0058() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(25, 25);\n    Fraction fraction1 = fraction0.reduce();\n    fraction1.getProperNumerator();\n}",
    "testName" : "test0058"
  },
  "test0059" : {
    "methodSignature" : "public int getProperWhole()",
    "methodName" : "getProperWhole",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0059() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(25, 25);\n    Fraction fraction1 = fraction0.reduce();\n    fraction0.getProperWhole();\n}",
    "testName" : "test0059"
  },
  "test05290" : {
    "methodSignature" : "public String toProperString()",
    "methodName" : "toProperString",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05290() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.invert();\n    String string0 = fraction1.toProperString();\n}",
    "testName" : "test05290"
  },
  "test05697" : {
    "methodSignature" : "public String toProperString()",
    "methodName" : "toProperString",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05697() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_FIFTH;\n    Fraction fraction1 = Fraction.getReducedFraction(0, 664);\n    String string0 = fraction1.toProperString();\n}",
    "testName" : "test05697"
  },
  "test05696" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05696() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_FIFTH;\n    Fraction fraction1 = Fraction.getReducedFraction(0, 664);\n    String string0 = fraction1.toProperString();\n    fraction1.getDenominator();\n}",
    "testName" : "test05696"
  },
  "test03153" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03153() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(0, 1);\n    fraction0.floatValue();\n}",
    "testName" : "test03153"
  },
  "test04880" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04880() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.pow(3878);\n    fraction1.intValue();\n}",
    "testName" : "test04880"
  },
  "test03154" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03154() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(0, 1);\n    fraction0.getDenominator();\n}",
    "testName" : "test03154"
  },
  "test02337" : {
    "methodSignature" : "public int getProperWhole()",
    "methodName" : "getProperWhole",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02337() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_FIFTH;\n    int int0 = fraction0.getProperWhole();\n}",
    "testName" : "test02337"
  },
  "test04879" : {
    "methodSignature" : "public Fraction pow(int power)",
    "methodName" : "pow",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04879() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.pow(3878);\n}",
    "testName" : "test04879"
  },
  "test075126" : {
    "methodSignature" : "public Fraction divideBy(Fraction fraction)",
    "methodName" : "divideBy",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test075126() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_FIFTHS;\n    Fraction fraction1 = Fraction.getReducedFraction(586, Integer.MIN_VALUE);\n    fraction0.divideBy(fraction1);\n}",
    "testName" : "test075126"
  },
  "test00712" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00712() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(0.0);\n    fraction0.doubleValue();\n}",
    "testName" : "test00712"
  },
  "test01524" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01524() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    Fraction fraction1 = fraction0.negate();\n    fraction1.equals((Object) fraction0);\n}",
    "testName" : "test01524"
  },
  "test091152" : {
    "methodSignature" : "public static Fraction getFraction(int whole, int numerator, int denominator)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test091152() throws Throwable {\n    Fraction.getFraction(Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE);\n}",
    "testName" : "test091152"
  },
  "test01929" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01929() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-4909), 0, 286);\n    long long0 = fraction0.longValue();\n    fraction0.getNumerator();\n}",
    "testName" : "test01929"
  },
  "test04470" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04470() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = Fraction.getFraction(\"1/5\");\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction1.equals((Object) fraction0);\n}",
    "testName" : "test04470"
  },
  "test079131" : {
    "methodSignature" : "public Fraction invert()",
    "methodName" : "invert",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079131() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    fraction0.invert();\n}",
    "testName" : "test079131"
  },
  "test03661" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03661() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = fraction0.THREE_FIFTHS.negate();\n    Fraction fraction2 = fraction1.divideBy(fraction0);\n    fraction2.doubleValue();\n}",
    "testName" : "test03661"
  },
  "test05289" : {
    "methodSignature" : "public int getProperWhole()",
    "methodName" : "getProperWhole",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05289() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.invert();\n    String string0 = fraction1.toProperString();\n    fraction0.getProperWhole();\n}",
    "testName" : "test05289"
  },
  "test04471" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04471() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = Fraction.getFraction(\"1/5\");\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction0.getDenominator();\n}",
    "testName" : "test04471"
  },
  "test04472" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04472() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = Fraction.getFraction(\"1/5\");\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction1.doubleValue();\n}",
    "testName" : "test04472"
  },
  "test04473" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04473() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = Fraction.getFraction(\"1/5\");\n    boolean boolean0 = fraction0.equals(fraction1);\n}",
    "testName" : "test04473"
  },
  "test05288" : {
    "methodSignature" : "public int getProperNumerator()",
    "methodName" : "getProperNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05288() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.invert();\n    String string0 = fraction1.toProperString();\n    fraction0.getProperNumerator();\n}",
    "testName" : "test05288"
  },
  "test04474" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04474() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = Fraction.getFraction(\"1/5\");\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction1.getNumerator();\n}",
    "testName" : "test04474"
  },
  "test05287" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05287() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.invert();\n    String string0 = fraction1.toProperString();\n    fraction1.getDenominator();\n}",
    "testName" : "test05287"
  },
  "test01116" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01116() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-870.279420099903));\n    Fraction fraction1 = fraction0.reduce();\n    fraction1.floatValue();\n}",
    "testName" : "test01116"
  },
  "test074125" : {
    "methodSignature" : "public Fraction pow(int power)",
    "methodName" : "pow",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test074125() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    fraction0.THREE_FIFTHS.pow(103);\n}",
    "testName" : "test074125"
  },
  "test02847" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02847() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(\"0\");\n    fraction0.getDenominator();\n}",
    "testName" : "test02847"
  },
  "test01117" : {
    "methodSignature" : "public Fraction reduce()",
    "methodName" : "reduce",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01117() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-870.279420099903));\n    Fraction fraction1 = fraction0.reduce();\n}",
    "testName" : "test01117"
  },
  "test104175" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104175() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_FIFTH;\n    int int0 = fraction0.intValue();\n}",
    "testName" : "test104175"
  },
  "test02848" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02848() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(\"0\");\n    fraction0.floatValue();\n}",
    "testName" : "test02848"
  },
  "test096159" : {
    "methodSignature" : "public static Fraction getFraction(int numerator, int denominator)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096159() throws Throwable {\n    Fraction.getFraction(9440, Integer.MIN_VALUE);\n}",
    "testName" : "test096159"
  },
  "test05392" : {
    "methodSignature" : "public String toProperString()",
    "methodName" : "toProperString",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05392() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_FIFTH;\n    String string0 = fraction0.toProperString();\n}",
    "testName" : "test05392"
  },
  "test085144" : {
    "methodSignature" : "public static Fraction getFraction(String str)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test085144() throws Throwable {\n    Fraction.getFraction((String) null);\n}",
    "testName" : "test085144"
  },
  "test064109" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test064109() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(0, 2506);\n    Object object0 = new Object();\n    boolean boolean0 = fraction0.equals(object0);\n    fraction0.getDenominator();\n}",
    "testName" : "test064109"
  },
  "test064108" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test064108() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(0, 2506);\n    Object object0 = new Object();\n    boolean boolean0 = fraction0.equals(object0);\n}",
    "testName" : "test064108"
  },
  "test04981" : {
    "methodSignature" : "public Fraction pow(int power)",
    "methodName" : "pow",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04981() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = fraction0.pow(1);\n}",
    "testName" : "test04981"
  },
  "test098161" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098161() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(1, (-165));\n    fraction0.getNumerator();\n}",
    "testName" : "test098161"
  },
  "test03255" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03255() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(0, 2456);\n    float float0 = fraction0.floatValue();\n    fraction0.getDenominator();\n}",
    "testName" : "test03255"
  },
  "test080134" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test080134() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-1.0));\n    Fraction fraction1 = fraction0.invert();\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction0.doubleValue();\n}",
    "testName" : "test080134"
  },
  "test03256" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03256() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(0, 2456);\n    float float0 = fraction0.floatValue();\n}",
    "testName" : "test03256"
  },
  "test05798" : {
    "methodSignature" : "public static Fraction getFraction(int whole, int numerator, int denominator)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05798() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-1.0));\n    Fraction fraction1 = Fraction.getFraction(2, 2);\n    Fraction fraction2 = fraction1.invert();\n    Fraction fraction3 = fraction2.ONE.negate();\n    Fraction fraction4 = Fraction.FOUR_FIFTHS;\n    Fraction fraction5 = fraction2.ONE.multiplyBy(fraction0);\n    Fraction fraction6 = fraction3.ONE_FIFTH.divideBy(fraction2);\n    Fraction.getReducedFraction(2, 2);\n    fraction3.TWO_THIRDS.toString();\n    fraction3.TWO_THIRDS.subtract(fraction1);\n    fraction1.equals(fraction2);\n    fraction1.multiplyBy(fraction0);\n    Fraction fraction7 = Fraction.getFraction(2, 2);\n    Fraction fraction8 = Fraction.getFraction(\"2/3\");\n    fraction8.ONE_HALF.abs();\n    fraction1.toProperString();\n    Fraction fraction9 = Fraction.ONE;\n    fraction7.ONE_HALF.abs();\n    fraction0.subtract(fraction1);\n    Fraction fraction10 = fraction3.add(fraction7);\n    fraction5.getDenominator();\n    fraction10.toString();\n    fraction6.getDenominator();\n    Fraction.getFraction((-2544), (-2544), 2153);\n}",
    "testName" : "test05798"
  },
  "test069118" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test069118() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-3579.9143379));\n    Fraction fraction1 = Fraction.getFraction((-1727.3956));\n    Fraction fraction2 = fraction0.ONE_HALF.subtract(fraction1);\n    fraction2.getNumerator();\n}",
    "testName" : "test069118"
  },
  "test102166" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102166() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    float float0 = fraction0.floatValue();\n}",
    "testName" : "test102166"
  },
  "test069117" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test069117() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-3579.9143379));\n    Fraction fraction1 = Fraction.getFraction((-1727.3956));\n    Fraction fraction2 = fraction0.ONE_HALF.subtract(fraction1);\n    fraction0.getDenominator();\n}",
    "testName" : "test069117"
  },
  "test04066" : {
    "methodSignature" : "public Fraction subtract(Fraction fraction)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04066() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-3579.914338));\n    Fraction fraction1 = Fraction.getFraction((-1140), (-2147483593));\n    fraction0.subtract(fraction1);\n}",
    "testName" : "test04066"
  },
  "test080133" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test080133() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-1.0));\n    Fraction fraction1 = fraction0.invert();\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction1.getDenominator();\n}",
    "testName" : "test080133"
  },
  "test02440" : {
    "methodSignature" : "public int getProperWhole()",
    "methodName" : "getProperWhole",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02440() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(718, 718);\n    int int0 = fraction0.getProperWhole();\n}",
    "testName" : "test02440"
  },
  "test080132" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test080132() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-1.0));\n    Fraction fraction1 = fraction0.invert();\n    boolean boolean0 = fraction0.equals(fraction1);\n}",
    "testName" : "test080132"
  },
  "test02950" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02950() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(\"-1\");\n    fraction0.doubleValue();\n}",
    "testName" : "test02950"
  },
  "test077128" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077128() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.pow((-13));\n    fraction1.longValue();\n}",
    "testName" : "test077128"
  },
  "test01625" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01625() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.negate();\n    fraction1.negate();\n    fraction1.floatValue();\n}",
    "testName" : "test01625"
  },
  "test02439" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02439() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(718, 718);\n    int int0 = fraction0.getProperWhole();\n    fraction0.doubleValue();\n}",
    "testName" : "test02439"
  },
  "test02438" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02438() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(718, 718);\n    int int0 = fraction0.getProperWhole();\n    fraction0.getNumerator();\n}",
    "testName" : "test02438"
  },
  "test098162" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098162() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(1, (-165));\n    fraction0.doubleValue();\n}",
    "testName" : "test098162"
  },
  "test00813" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00813() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_FIFTHS;\n    Fraction fraction1 = fraction0.subtract(fraction0);\n    fraction1.getDenominator();\n}",
    "testName" : "test00813"
  },
  "test093154" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang3.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093154() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(0, 105, 2506);\n    fraction0.floatValue();\n}",
    "testName" : "test093154"
  }
}