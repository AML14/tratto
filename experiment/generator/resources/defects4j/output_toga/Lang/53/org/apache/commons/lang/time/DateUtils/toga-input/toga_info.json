{
  "test1014" : {
    "methodSignature" : "public static Date truncate(Object date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1014() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();\n    mockGregorianCalendar0.setTimeZone((TimeZone) null);\n    DateUtils.truncate((Object) mockGregorianCalendar0, 421);\n}",
    "testName" : "test1014"
  },
  "test3236" : {
    "methodSignature" : "public static Iterator iterator(Object focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3236() throws Throwable {\n    MockDate mockDate0 = new MockDate((-2355), (-2355), (-2355), (-2355), (-2355));\n    DateUtils.iterator((Object) mockDate0, (-2355));\n}",
    "testName" : "test3236"
  },
  "test5458" : {
    "methodSignature" : "public static Date truncate(Date date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5458() throws Throwable {\n    DateUtils.truncate((Date) null, 1205);\n}",
    "testName" : "test5458"
  },
  "test2226" : {
    "methodSignature" : "public static Date addHours(Date date, int amount)",
    "methodName" : "addHours",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2226() throws Throwable {\n    DateUtils.addHours((Date) null, 0);\n}",
    "testName" : "test2226"
  },
  "test6469" : {
    "methodSignature" : "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameLocalTime",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6469() throws Throwable {\n    Calendar calendar0 = MockCalendar.getInstance();\n    Calendar calendar1 = MockCalendar.getInstance();\n    DateUtils.DateIterator dateUtils_DateIterator0 = new DateUtils.DateIterator(calendar0, calendar0);\n    boolean boolean0 = DateUtils.isSameLocalTime(calendar1, calendar0);\n}",
    "testName" : "test6469"
  },
  "test5256" : {
    "methodSignature" : "public static Date truncate(Object date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5256() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    DateUtils.truncate((Object) timeZone0, 0);\n}",
    "testName" : "test5256"
  },
  "test2024" : {
    "methodSignature" : "public static Date addMonths(Date date, int amount)",
    "methodName" : "addMonths",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2024() throws Throwable {\n    DateUtils.addMonths((Date) null, 0);\n}",
    "testName" : "test2024"
  },
  "test1418" : {
    "methodSignature" : "public static Date parseDate(String str, String[] parsePatterns) throws ParseException",
    "methodName" : "parseDate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1418() throws Throwable {\n    String[] stringArray0 = new String[6];\n    stringArray0[0] = \"GMT\";\n    DateUtils.parseDate(\"GMT\", stringArray0);\n}",
    "testName" : "test1418"
  },
  "test034" : {
    "methodSignature" : "public static boolean isSameInstant(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(7, 0, 7, (-432), (-432), (-432));\n    ZoneInfo zoneInfo0 = (ZoneInfo) DateUtils.UTC_TIME_ZONE;\n    MockGregorianCalendar mockGregorianCalendar1 = new MockGregorianCalendar(zoneInfo0);\n    boolean boolean0 = DateUtils.isSameInstant((Calendar) mockGregorianCalendar0, (Calendar) mockGregorianCalendar1);\n}",
    "testName" : "test034"
  },
  "test1216" : {
    "methodSignature" : "public static Calendar round(Calendar date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1216() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();\n    mockGregorianCalendar0.setTimeZone((TimeZone) null);\n    DateUtils.round((Calendar) mockGregorianCalendar0, 0);\n}",
    "testName" : "test1216"
  },
  "test3438" : {
    "methodSignature" : "public static Iterator iterator(Date focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3438() throws Throwable {\n    MockDate mockDate0 = new MockDate();\n    Iterator iterator0 = DateUtils.iterator((Date) mockDate0, 4);\n}",
    "testName" : "test3438"
  },
  "test2428" : {
    "methodSignature" : "public static Iterator iterator(Calendar focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2428() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();\n    DateUtils.iterator((Calendar) mockGregorianCalendar0, 1055);\n}",
    "testName" : "test2428"
  },
  "test96103" : {
    "methodSignature" : "public DateUtils()",
    "methodName" : "DateUtils",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test96103() throws Throwable {\n    DateUtils dateUtils0 = new DateUtils();\n}",
    "testName" : "test96103"
  },
  "test069" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test069() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    Calendar calendar0 = MockCalendar.getInstance(locale0);\n    Calendar calendar1 = DateUtils.truncate(calendar0, 0);\n    boolean boolean0 = DateUtils.isSameDay(calendar0, calendar1);\n}",
    "testName" : "test069"
  },
  "test4044" : {
    "methodSignature" : "public static Iterator iterator(Date focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4044() throws Throwable {\n    DateUtils.iterator((Date) null, 948);\n}",
    "testName" : "test4044"
  },
  "test6266" : {
    "methodSignature" : "public static Date parseDate(String str, String[] parsePatterns) throws ParseException",
    "methodName" : "parseDate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6266() throws Throwable {\n    DateUtils.parseDate(\"\", (String[]) null);\n}",
    "testName" : "test6266"
  },
  "test7278" : {
    "methodSignature" : "public static boolean isSameInstant(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7278() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1138), 956, 956, 956, (-572), 956);\n    boolean boolean0 = DateUtils.isSameInstant((Calendar) mockGregorianCalendar0, (Calendar) mockGregorianCalendar0);\n}",
    "testName" : "test7278"
  },
  "test5054" : {
    "methodSignature" : "public static Date truncate(Object date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5054() throws Throwable {\n    MockDate mockDate0 = new MockDate((-1), 2147481971, (-3416), (-1), 2147481971, 1489);\n    DateUtils.truncate((Object) mockDate0, 1489);\n}",
    "testName" : "test5054"
  },
  "test8289" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8289() throws Throwable {\n    DateUtils.isSameDay((Calendar) null, (Calendar) null);\n}",
    "testName" : "test8289"
  },
  "test6064" : {
    "methodSignature" : "public static Date parseDate(String str, String[] parsePatterns) throws ParseException",
    "methodName" : "parseDate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6064() throws Throwable {\n    String[] stringArray0 = new String[6];\n    stringArray0[0] = \"\";\n    DateUtils.parseDate(\"^+GjO-b( Y\", stringArray0);\n}",
    "testName" : "test6064"
  },
  "test7076" : {
    "methodSignature" : "public static boolean isSameInstant(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7076() throws Throwable {\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    Calendar calendar0 = MockCalendar.getInstance(locale0);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(1, 1, 1, 1, 1);\n    boolean boolean0 = DateUtils.isSameInstant(calendar0, (Calendar) mockGregorianCalendar0);\n}",
    "testName" : "test7076"
  },
  "test8087" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8087() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1138), 956, 956, 956, (-572), 956);\n    MockGregorianCalendar mockGregorianCalendar1 = new MockGregorianCalendar();\n    boolean boolean0 = DateUtils.isSameDay((Calendar) mockGregorianCalendar0, (Calendar) mockGregorianCalendar1);\n}",
    "testName" : "test8087"
  },
  "test3842" : {
    "methodSignature" : "public static Iterator iterator(Date focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3842() throws Throwable {\n    MockDate mockDate0 = new MockDate((-5236), 1027, 0, (-400), 1027);\n    DateUtils.iterator((Date) mockDate0, 146134526);\n}",
    "testName" : "test3842"
  },
  "test1620" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1620() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-145), 4868, 869);\n    mockGregorianCalendar0.setLenient(false);\n    DateUtils.isSameDay((Calendar) mockGregorianCalendar0, (Calendar) mockGregorianCalendar0);\n}",
    "testName" : "test1620"
  },
  "test2832" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2832() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-145), 4868, 869);\n    boolean boolean0 = DateUtils.isSameDay((Calendar) mockGregorianCalendar0, (Calendar) mockGregorianCalendar0);\n}",
    "testName" : "test2832"
  },
  "test2630" : {
    "methodSignature" : "public static Date add(Date date, int calendarField, int amount)",
    "methodName" : "add",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2630() throws Throwable {\n    DateUtils.add((Date) null, 2091, 2091);\n}",
    "testName" : "test2630"
  },
  "test6874" : {
    "methodSignature" : "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameLocalTime",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6874() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();\n    DateUtils.isSameLocalTime(mockGregorianCalendar0, (Calendar) null);\n}",
    "testName" : "test6874"
  },
  "test5862" : {
    "methodSignature" : "public static Date round(Date date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5862() throws Throwable {\n    DateUtils.round((Date) null, 1);\n}",
    "testName" : "test5862"
  },
  "test7885" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7885() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();\n    Calendar calendar0 = DateUtils.truncate((Calendar) mockGregorianCalendar0, 1);\n    boolean boolean0 = DateUtils.isSameDay((Calendar) mockGregorianCalendar0, calendar0);\n}",
    "testName" : "test7885"
  },
  "test023" : {
    "methodSignature" : "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameLocalTime",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test023() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();\n    Calendar calendar0 = DateUtils.truncate((Calendar) mockGregorianCalendar0, 1);\n    boolean boolean0 = DateUtils.isSameLocalTime(calendar0, mockGregorianCalendar0);\n}",
    "testName" : "test023"
  },
  "test1822" : {
    "methodSignature" : "public static Date addWeeks(Date date, int amount)",
    "methodName" : "addWeeks",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1822() throws Throwable {\n    DateUtils.addWeeks((Date) null, 149);\n}",
    "testName" : "test1822"
  },
  "test0811" : {
    "methodSignature" : "public static boolean isSameDay(Date date1, Date date2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0811() throws Throwable {\n    MockDate mockDate0 = new MockDate((-2355), (-2355), (-2355), (-2355), (-2355));\n    Date date0 = DateUtils.addMinutes(mockDate0, (-2355));\n    boolean boolean0 = DateUtils.isSameDay((Date) mockDate0, date0);\n}",
    "testName" : "test0811"
  },
  "test7480" : {
    "methodSignature" : "public static boolean isSameInstant(Date date1, Date date2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7480() throws Throwable {\n    MockDate mockDate0 = new MockDate((-2355), (-2355), (-2355), (-2355), (-2355));\n    MockDate mockDate1 = new MockDate((-2355), (-2355), (-2355));\n    boolean boolean0 = DateUtils.isSameInstant((Date) mockDate0, (Date) mockDate1);\n}",
    "testName" : "test7480"
  },
  "test8491" : {
    "methodSignature" : "public static boolean isSameDay(Date date1, Date date2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8491() throws Throwable {\n    MockDate mockDate0 = new MockDate(1001, 1001, 1001, 4194, 1001, 45);\n    DateUtils.isSameDay((Date) mockDate0, (Date) null);\n}",
    "testName" : "test8491"
  },
  "test8895" : {
    "methodSignature" : "public static Iterator iterator(Calendar focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8895() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(320, 320, (-2971), 320, 1231);\n    Iterator iterator0 = DateUtils.iterator((Calendar) mockGregorianCalendar0, 1);\n}",
    "testName" : "test8895"
  },
  "test6672" : {
    "methodSignature" : "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameLocalTime",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6672() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();\n    Calendar calendar0 = DateUtils.truncate((Calendar) mockGregorianCalendar0, 1);\n    MockGregorianCalendar mockGregorianCalendar1 = new MockGregorianCalendar(3519, 9, 3519, 576, 1, (-1));\n    boolean boolean0 = DateUtils.isSameLocalTime(mockGregorianCalendar1, calendar0);\n}",
    "testName" : "test6672"
  },
  "test5660" : {
    "methodSignature" : "public static Date round(Object date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5660() throws Throwable {\n    DateUtils.round((Object) null, (-1078));\n}",
    "testName" : "test5660"
  },
  "test7682" : {
    "methodSignature" : "public static boolean isSameInstant(Date date1, Date date2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7682() throws Throwable {\n    MockDate mockDate0 = new MockDate();\n    DateUtils.isSameInstant((Date) mockDate0, (Date) null);\n}",
    "testName" : "test7682"
  },
  "test5559" : {
    "methodSignature" : "public static Date round(Object date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5559() throws Throwable {\n    DateUtils.round((Object) \"<i\", (-718));\n}",
    "testName" : "test5559"
  },
  "test2125" : {
    "methodSignature" : "public static Date addMilliseconds(Date date, int amount)",
    "methodName" : "addMilliseconds",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2125() throws Throwable {\n    DateUtils.addMilliseconds((Date) null, 1000);\n}",
    "testName" : "test2125"
  },
  "test1115" : {
    "methodSignature" : "public static Date round(Date date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1115() throws Throwable {\n    MockDate mockDate0 = new MockDate(280000000, (-1), (-1), 0, 280000000, 689);\n    DateUtils.round((Date) mockDate0, 280000000);\n}",
    "testName" : "test1115"
  },
  "test3337" : {
    "methodSignature" : "public static Iterator iterator(Object focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3337() throws Throwable {\n    DateUtils.iterator((Object) null, 0);\n}",
    "testName" : "test3337"
  },
  "test5357" : {
    "methodSignature" : "public static Calendar truncate(Calendar date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5357() throws Throwable {\n    DateUtils.truncate((Calendar) null, 1524);\n}",
    "testName" : "test5357"
  },
  "test4145" : {
    "methodSignature" : "public static Iterator iterator(Date focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4145() throws Throwable {\n    MockDate mockDate0 = new MockDate((-1), 629, 629, 629, 2036, 2036);\n    Iterator iterator0 = DateUtils.iterator((Date) mockDate0, 1);\n}",
    "testName" : "test4145"
  },
  "test6367" : {
    "methodSignature" : "public static Date parseDate(String str, String[] parsePatterns) throws ParseException",
    "methodName" : "parseDate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6367() throws Throwable {\n    String[] stringArray0 = new String[4];\n    DateUtils.parseDate((String) null, stringArray0);\n}",
    "testName" : "test6367"
  },
  "test3135" : {
    "methodSignature" : "public static Iterator iterator(Object focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3135() throws Throwable {\n    DateUtils.iterator((Object) \"Unable to parse the date: \", 7);\n}",
    "testName" : "test3135"
  },
  "test7379" : {
    "methodSignature" : "public static boolean isSameInstant(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7379() throws Throwable {\n    DateUtils.isSameInstant((Calendar) null, (Calendar) null);\n}",
    "testName" : "test7379"
  },
  "test011" : {
    "methodSignature" : "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameLocalTime",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Locale locale0 = Locale.KOREA;\n    Calendar calendar0 = MockCalendar.getInstance(locale0);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);\n    boolean boolean0 = DateUtils.isSameLocalTime(calendar0, mockGregorianCalendar0);\n}",
    "testName" : "test011"
  },
  "test056" : {
    "methodSignature" : "public static boolean isSameDay(Date date1, Date date2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056() throws Throwable {\n    MockDate mockDate0 = new MockDate();\n    Date date0 = DateUtils.addHours(mockDate0, 1001);\n    boolean boolean0 = DateUtils.isSameDay((Date) mockDate0, date0);\n}",
    "testName" : "test056"
  },
  "test1519" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1519() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();\n    mockGregorianCalendar0.setTimeZone((TimeZone) null);\n    DateUtils.isSameDay((Calendar) mockGregorianCalendar0, (Calendar) mockGregorianCalendar0);\n}",
    "testName" : "test1519"
  },
  "test2327" : {
    "methodSignature" : "public static Date addDays(Date date, int amount)",
    "methodName" : "addDays",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2327() throws Throwable {\n    DateUtils.addDays((Date) null, 2028);\n}",
    "testName" : "test2327"
  },
  "test1317" : {
    "methodSignature" : "public static Calendar round(Calendar date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1317() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-196), \"gQ{\\\"z\");\n    Locale locale0 = Locale.FRANCE;\n    Calendar calendar0 = MockCalendar.getInstance((TimeZone) simpleTimeZone0, locale0);\n    calendar0.set(0, (-432));\n    DateUtils.round(calendar0, (-196));\n}",
    "testName" : "test1317"
  },
  "test3539" : {
    "methodSignature" : "public static Iterator iterator(Date focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3539() throws Throwable {\n    MockDate mockDate0 = new MockDate((-2355), (-2355), (-2355), (-2355), (-2355));\n    Iterator iterator0 = DateUtils.iterator((Date) mockDate0, 6);\n}",
    "testName" : "test3539"
  },
  "test5155" : {
    "methodSignature" : "public static Date truncate(Object date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5155() throws Throwable {\n    DateUtils.truncate((Object) null, 887);\n}",
    "testName" : "test5155"
  },
  "test6165" : {
    "methodSignature" : "public static Date parseDate(String str, String[] parsePatterns) throws ParseException",
    "methodName" : "parseDate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6165() throws Throwable {\n    String[] stringArray0 = new String[3];\n    stringArray0[0] = \"y6:%K HE$`~]w\";\n    stringArray0[1] = \"y6:%K HE$`~]w\";\n    stringArray0[2] = \"y6:%K HE$`~]w\";\n    DateUtils.parseDate(\"y6:%K HE$`~]w\", stringArray0);\n}",
    "testName" : "test6165"
  },
  "test7177" : {
    "methodSignature" : "public static boolean isSameInstant(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7177() throws Throwable {\n    Calendar calendar0 = MockCalendar.getInstance();\n    DateUtils.isSameInstant(calendar0, (Calendar) null);\n}",
    "testName" : "test7177"
  },
  "test8188" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8188() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.UK;\n    Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);\n    DateUtils.isSameDay(calendar0, (Calendar) null);\n}",
    "testName" : "test8188"
  },
  "test2731" : {
    "methodSignature" : "public static Date add(Date date, int calendarField, int amount)",
    "methodName" : "add",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2731() throws Throwable {\n    MockDate mockDate0 = new MockDate((-1081), (-1081), 6, (-745), 5226, 6);\n    DateUtils.add(mockDate0, (-348), (-348));\n}",
    "testName" : "test2731"
  },
  "test3943" : {
    "methodSignature" : "public static Iterator iterator(Calendar focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3943() throws Throwable {\n    DateUtils.iterator((Calendar) null, 1860);\n}",
    "testName" : "test3943"
  },
  "test1721" : {
    "methodSignature" : "public static Date addYears(Date date, int amount)",
    "methodName" : "addYears",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1721() throws Throwable {\n    DateUtils.addYears((Date) null, 0);\n}",
    "testName" : "test1721"
  },
  "test4953" : {
    "methodSignature" : "public static Date truncate(Date date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4953() throws Throwable {\n    MockDate mockDate0 = new MockDate(280000000, (-1), (-1), 0, 280000000, 689);\n    DateUtils.truncate((Date) mockDate0, (-1448));\n}",
    "testName" : "test4953"
  },
  "test6975" : {
    "methodSignature" : "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameLocalTime",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6975() throws Throwable {\n    DateUtils.isSameLocalTime((Calendar) null, (Calendar) null);\n}",
    "testName" : "test6975"
  },
  "test7986" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7986() throws Throwable {\n    ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();\n    GregorianCalendar gregorianCalendar0 = MockGregorianCalendar.from(zonedDateTime0);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(15, 1205, 146139496);\n    boolean boolean0 = DateUtils.isSameDay((Calendar) gregorianCalendar0, (Calendar) mockGregorianCalendar0);\n}",
    "testName" : "test7986"
  },
  "test4751" : {
    "methodSignature" : "public static Date round(Object date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4751() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(2147482605, 0, 0, 2147482605, 2147482605);\n    DateUtils.round((Object) mockGregorianCalendar0, 2147482605);\n}",
    "testName" : "test4751"
  },
  "test000" : {
    "methodSignature" : "public static Iterator iterator(Object focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-584), (-584), 982, (-1138), (-584), 982);\n    DateUtils.iterator((Object) mockGregorianCalendar0, 982);\n}",
    "testName" : "test000"
  },
  "test045" : {
    "methodSignature" : "public static boolean isSameInstant(Date date1, Date date2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test045() throws Throwable {\n    MockDate mockDate0 = new MockDate();\n    MockDate mockDate1 = new MockDate((-2355), (-2355), (-2355));\n    boolean boolean0 = DateUtils.isSameInstant((Date) mockDate0, (Date) mockDate1);\n}",
    "testName" : "test045"
  },
  "test1923" : {
    "methodSignature" : "public static Date addSeconds(Date date, int amount)",
    "methodName" : "addSeconds",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1923() throws Throwable {\n    DateUtils.addSeconds((Date) null, (-15));\n}",
    "testName" : "test1923"
  },
  "test8390" : {
    "methodSignature" : "public static boolean isSameDay(Date date1, Date date2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8390() throws Throwable {\n    MockDate mockDate0 = new MockDate((-5236), 1027, 0, (-400), 1027);\n    boolean boolean0 = DateUtils.isSameDay((Date) mockDate0, (Date) mockDate0);\n}",
    "testName" : "test8390"
  },
  "test95102" : {
    "methodSignature" : "public static Date addMinutes(Date date, int amount)",
    "methodName" : "addMinutes",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test95102() throws Throwable {\n    DateUtils.addMinutes((Date) null, 0);\n}",
    "testName" : "test95102"
  },
  "test6773" : {
    "methodSignature" : "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameLocalTime",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6773() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-145), 4868, 869);\n    Locale locale0 = Locale.forLanguageTag(\"^rqI1d` Z\\\"])yE3\\\"#~\");\n    MockGregorianCalendar mockGregorianCalendar1 = new MockGregorianCalendar(locale0);\n    boolean boolean0 = DateUtils.isSameLocalTime(mockGregorianCalendar1, mockGregorianCalendar0);\n}",
    "testName" : "test6773"
  },
  "test5761" : {
    "methodSignature" : "public static Calendar round(Calendar date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5761() throws Throwable {\n    DateUtils.round((Calendar) null, 0);\n}",
    "testName" : "test5761"
  },
  "test7783" : {
    "methodSignature" : "public static boolean isSameInstant(Date date1, Date date2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7783() throws Throwable {\n    DateUtils.isSameInstant((Date) null, (Date) null);\n}",
    "testName" : "test7783"
  },
  "test7581" : {
    "methodSignature" : "public static boolean isSameInstant(Date date1, Date date2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7581() throws Throwable {\n    MockDate mockDate0 = new MockDate();\n    boolean boolean0 = DateUtils.isSameInstant((Date) mockDate0, (Date) mockDate0);\n}",
    "testName" : "test7581"
  },
  "test8592" : {
    "methodSignature" : "public static boolean isSameDay(Date date1, Date date2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8592() throws Throwable {\n    DateUtils.isSameDay((Date) null, (Date) null);\n}",
    "testName" : "test8592"
  }
}