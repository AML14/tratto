{
  "test0002" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0002() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(869, 869);\n    Fraction fraction1 = Fraction.getFraction(869, 1283);\n    int int0 = fraction0.compareTo(fraction1);\n    fraction0.intValue();\n}",
    "testName" : "test0002"
  },
  "test062114" : {
    "methodSignature" : "public int compareTo(Object object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test062114() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    int int0 = fraction0.compareTo(fraction0);\n}",
    "testName" : "test062114"
  },
  "test081151" : {
    "methodSignature" : "public Fraction multiplyBy(Fraction fraction)",
    "methodName" : "multiplyBy",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081151() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-222751), (-4526));\n    Fraction fraction1 = Fraction.getFraction(903031, (-4526));\n    fraction1.multiplyBy(fraction0);\n}",
    "testName" : "test081151"
  },
  "test067129" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067129() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    boolean boolean0 = fraction0.equals(\"YoWv<\");\n}",
    "testName" : "test067129"
  },
  "test0000" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(869, 869);\n    Fraction fraction1 = Fraction.getFraction(869, 1283);\n    int int0 = fraction0.compareTo(fraction1);\n    fraction1.getNumerator();\n}",
    "testName" : "test0000"
  },
  "test0001" : {
    "methodSignature" : "public int compareTo(Object object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0001() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(869, 869);\n    Fraction fraction1 = Fraction.getFraction(869, 1283);\n    int int0 = fraction0.compareTo(fraction1);\n}",
    "testName" : "test0001"
  },
  "test102177" : {
    "methodSignature" : "public static Fraction getFraction(int whole, int numerator, int denominator)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102177() throws Throwable {\n    Fraction.getFraction(2819, 2819, 0);\n}",
    "testName" : "test102177"
  },
  "test02149" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02149() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    int int0 = fraction0.intValue();\n}",
    "testName" : "test02149"
  },
  "test073138" : {
    "methodSignature" : "public int getProperWhole()",
    "methodName" : "getProperWhole",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test073138() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    Fraction fraction1 = fraction0.divideBy(fraction0);\n    fraction0.getProperWhole();\n}",
    "testName" : "test073138"
  },
  "test073139" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test073139() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    Fraction fraction1 = fraction0.divideBy(fraction0);\n    int int0 = fraction1.getProperWhole();\n    fraction1.getDenominator();\n}",
    "testName" : "test073139"
  },
  "test03876" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03876() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.TWO_QUARTERS.invert();\n    Fraction fraction2 = fraction0.subtract(fraction1);\n    Fraction fraction3 = fraction0.add(fraction2);\n    fraction3.getDenominator();\n}",
    "testName" : "test03876"
  },
  "test03877" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03877() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.TWO_QUARTERS.invert();\n    Fraction fraction2 = fraction0.subtract(fraction1);\n    Fraction fraction3 = fraction0.add(fraction2);\n    fraction3.getNumerator();\n}",
    "testName" : "test03877"
  },
  "test01739" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01739() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-1.0));\n    Fraction fraction1 = fraction0.ONE_THIRD.invert();\n    Fraction fraction2 = fraction1.subtract(fraction0);\n    Fraction fraction3 = fraction0.ONE_THIRD.multiplyBy(fraction2);\n    fraction2.floatValue();\n}",
    "testName" : "test01739"
  },
  "test00923" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00923() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    Fraction fraction1 = fraction0.ZERO.pow(599);\n    fraction1.intValue();\n}",
    "testName" : "test00923"
  },
  "test107183" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107183() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    double double0 = fraction0.doubleValue();\n}",
    "testName" : "test107183"
  },
  "test078148" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078148() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-3.042271021842216));\n    Fraction fraction1 = fraction0.ZERO.subtract(fraction0);\n    fraction1.doubleValue();\n}",
    "testName" : "test078148"
  },
  "test078147" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078147() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-3.042271021842216));\n    Fraction fraction1 = fraction0.ZERO.subtract(fraction0);\n    fraction0.getNumerator();\n}",
    "testName" : "test078147"
  },
  "test095169" : {
    "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095169() throws Throwable {\n    Fraction.getReducedFraction((-2275), Integer.MIN_VALUE);\n}",
    "testName" : "test095169"
  },
  "test0013" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0013() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = Fraction.ONE_FIFTH;\n    boolean boolean0 = fraction1.equals(fraction0);\n}",
    "testName" : "test0013"
  },
  "test0014" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0014() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = Fraction.ONE_FIFTH;\n    boolean boolean0 = fraction1.equals(fraction0);\n    fraction0.equals((Object) fraction1);\n}",
    "testName" : "test0014"
  },
  "test04281" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04281() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-1100), (-2));\n    Fraction fraction1 = fraction0.multiplyBy(fraction0);\n    Fraction fraction2 = fraction1.abs();\n    fraction1.getNumerator();\n}",
    "testName" : "test04281"
  },
  "test084154" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test084154() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    Fraction fraction1 = fraction0.TWO_THIRDS.pow(0);\n    fraction1.floatValue();\n}",
    "testName" : "test084154"
  },
  "test0015" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0015() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = Fraction.ONE_FIFTH;\n    boolean boolean0 = fraction1.equals(fraction0);\n    fraction1.getDenominator();\n}",
    "testName" : "test0015"
  },
  "test04282" : {
    "methodSignature" : "public Fraction abs()",
    "methodName" : "abs",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04282() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-1100), (-2));\n    Fraction fraction1 = fraction0.multiplyBy(fraction0);\n    Fraction fraction2 = fraction1.abs();\n}",
    "testName" : "test04282"
  },
  "test0016" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0016() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = Fraction.ONE_FIFTH;\n    boolean boolean0 = fraction1.equals(fraction0);\n    fraction1.getNumerator();\n}",
    "testName" : "test0016"
  },
  "test04283" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04283() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-1100), (-2));\n    Fraction fraction1 = fraction0.multiplyBy(fraction0);\n    Fraction fraction2 = fraction1.abs();\n    fraction0.getDenominator();\n}",
    "testName" : "test04283"
  },
  "test05091" : {
    "methodSignature" : "public int getProperWhole()",
    "methodName" : "getProperWhole",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05091() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_FIFTHS;\n    int int0 = fraction0.getProperWhole();\n}",
    "testName" : "test05091"
  },
  "test05499" : {
    "methodSignature" : "public String toProperString()",
    "methodName" : "toProperString",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05499() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-1.0));\n    String string0 = fraction0.toProperString();\n}",
    "testName" : "test05499"
  },
  "test064120" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test064120() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    fraction0.getDenominator();\n    String string0 = fraction0.FOUR_FIFTHS.toProperString();\n    Fraction fraction1 = Fraction.TWO_THIRDS;\n    Fraction fraction2 = fraction0.FOUR_FIFTHS.subtract(fraction1);\n    Fraction fraction3 = Fraction.getReducedFraction((-1), (-3569));\n    fraction3.doubleValue();\n}",
    "testName" : "test064120"
  },
  "test05498" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05498() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-1.0));\n    String string0 = fraction0.toProperString();\n    fraction0.getDenominator();\n}",
    "testName" : "test05498"
  },
  "test04687" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04687() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_FIFTH;\n    fraction0.add((Fraction) null);\n}",
    "testName" : "test04687"
  },
  "test03470" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03470() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    Fraction fraction1 = fraction0.negate();\n    float float0 = fraction1.floatValue();\n}",
    "testName" : "test03470"
  },
  "test069134" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test069134() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(869, 869);\n    Fraction fraction1 = Fraction.getFraction(869, 869, 1283);\n    boolean boolean0 = fraction0.equals(fraction1);\n}",
    "testName" : "test069134"
  },
  "test069133" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test069133() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(869, 869);\n    Fraction fraction1 = Fraction.getFraction(869, 869, 1283);\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction0.getNumerator();\n}",
    "testName" : "test069133"
  },
  "test01330" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01330() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(947.9);\n    Fraction fraction1 = fraction0.negate();\n    fraction1.doubleValue();\n}",
    "testName" : "test01330"
  },
  "test064121" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test064121() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    fraction0.getDenominator();\n    String string0 = fraction0.FOUR_FIFTHS.toProperString();\n    Fraction fraction1 = Fraction.TWO_THIRDS;\n    Fraction fraction2 = fraction0.FOUR_FIFTHS.subtract(fraction1);\n    Fraction fraction3 = Fraction.getReducedFraction((-1), (-3569));\n    Fraction fraction4 = Fraction.ONE_QUARTER;\n    fraction1.hashCode();\n    fraction1.getNumerator();\n}",
    "testName" : "test064121"
  },
  "test01842" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01842() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.TWO_QUARTERS.divideBy(fraction0);\n    long long0 = fraction1.longValue();\n    fraction1.getDenominator();\n}",
    "testName" : "test01842"
  },
  "test02656" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02656() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-2590), 25);\n    int int0 = fraction0.getNumerator();\n    fraction0.getDenominator();\n}",
    "testName" : "test02656"
  },
  "test01841" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01841() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.TWO_QUARTERS.divideBy(fraction0);\n    long long0 = fraction1.longValue();\n    fraction1.floatValue();\n}",
    "testName" : "test01841"
  },
  "test069132" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test069132() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(869, 869);\n    Fraction fraction1 = Fraction.getFraction(869, 869, 1283);\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction1.floatValue();\n}",
    "testName" : "test069132"
  },
  "test069131" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test069131() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(869, 869);\n    Fraction fraction1 = Fraction.getFraction(869, 869, 1283);\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction0.doubleValue();\n}",
    "testName" : "test069131"
  },
  "test056107" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056107() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    int int0 = fraction0.getDenominator();\n    fraction0.FOUR_FIFTHS.toProperString();\n    Fraction fraction1 = Fraction.TWO_THIRDS;\n    Fraction fraction2 = fraction0.FOUR_FIFTHS.subtract(fraction1);\n    Fraction fraction3 = Fraction.getReducedFraction((-1), (-3569));\n    Fraction fraction4 = Fraction.ONE_QUARTER;\n    fraction2.ZERO.toProperString();\n    fraction2.getDenominator();\n}",
    "testName" : "test056107"
  },
  "test089161" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089161() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(\"3\");\n    fraction0.doubleValue();\n}",
    "testName" : "test089161"
  },
  "test056106" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056106() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    int int0 = fraction0.getDenominator();\n    fraction0.FOUR_FIFTHS.toProperString();\n    Fraction fraction1 = Fraction.TWO_THIRDS;\n    Fraction fraction2 = fraction0.FOUR_FIFTHS.subtract(fraction1);\n    Fraction fraction3 = Fraction.getReducedFraction((-1), (-3569));\n    Fraction fraction4 = Fraction.ONE_QUARTER;\n    fraction2.ZERO.toProperString();\n    fraction2.floatValue();\n}",
    "testName" : "test056106"
  },
  "test097172" : {
    "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097172() throws Throwable {\n    Fraction.getReducedFraction((-1717986917), 0);\n}",
    "testName" : "test097172"
  },
  "test01843" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01843() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.TWO_QUARTERS.divideBy(fraction0);\n    long long0 = fraction1.longValue();\n}",
    "testName" : "test01843"
  },
  "test02657" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02657() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-2590), 25);\n    int int0 = fraction0.getNumerator();\n}",
    "testName" : "test02657"
  },
  "test089162" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089162() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(\"3\");\n    fraction0.getNumerator();\n}",
    "testName" : "test089162"
  },
  "test00516" : {
    "methodSignature" : "public static Fraction getFraction(String str)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00516() throws Throwable {\n    Fraction.getFraction(\" bOeg1/`gL<|%d\");\n}",
    "testName" : "test00516"
  },
  "test056105" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056105() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    int int0 = fraction0.getDenominator();\n    fraction0.FOUR_FIFTHS.toProperString();\n    Fraction fraction1 = Fraction.TWO_THIRDS;\n    Fraction fraction2 = fraction0.FOUR_FIFTHS.subtract(fraction1);\n    Fraction fraction3 = Fraction.getReducedFraction((-1), (-3569));\n    fraction3.floatValue();\n}",
    "testName" : "test056105"
  },
  "test056104" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056104() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    int int0 = fraction0.getDenominator();\n}",
    "testName" : "test056104"
  },
  "test073140" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test073140() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    Fraction fraction1 = fraction0.divideBy(fraction0);\n    int int0 = fraction1.getProperWhole();\n    fraction1.getNumerator();\n}",
    "testName" : "test073140"
  },
  "test073141" : {
    "methodSignature" : "public int getProperWhole()",
    "methodName" : "getProperWhole",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test073141() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    Fraction fraction1 = fraction0.divideBy(fraction0);\n    int int0 = fraction1.getProperWhole();\n}",
    "testName" : "test073141"
  },
  "test092166" : {
    "methodSignature" : "public static Fraction getFraction(String str)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092166() throws Throwable {\n    Fraction.getFraction((String) null);\n}",
    "testName" : "test092166"
  },
  "test083153" : {
    "methodSignature" : "public Fraction pow(int power)",
    "methodName" : "pow",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test083153() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    fraction0.pow(407);\n}",
    "testName" : "test083153"
  },
  "test111190" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111190() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-2590), 17);\n    String string0 = fraction0.toProperString();\n    fraction0.getDenominator();\n}",
    "testName" : "test111190"
  },
  "test0027" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0027() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.ONE_THIRD.invert();\n    boolean boolean0 = fraction1.equals(fraction0);\n    fraction1.getDenominator();\n}",
    "testName" : "test0027"
  },
  "test060112" : {
    "methodSignature" : "public int compareTo(Object object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test060112() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = Fraction.TWO_QUARTERS;\n    int int0 = fraction1.compareTo(fraction0);\n}",
    "testName" : "test060112"
  },
  "test02251" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02251() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(285, 285);\n    int int0 = fraction0.intValue();\n    fraction0.getNumerator();\n}",
    "testName" : "test02251"
  },
  "test100175" : {
    "methodSignature" : "public static Fraction getFraction(int whole, int numerator, int denominator)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100175() throws Throwable {\n    Fraction.getFraction((-2), (-2), 982);\n}",
    "testName" : "test100175"
  },
  "test02250" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02250() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(285, 285);\n    int int0 = fraction0.intValue();\n}",
    "testName" : "test02250"
  },
  "test0028" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0028() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.ONE_THIRD.invert();\n    boolean boolean0 = fraction1.equals(fraction0);\n}",
    "testName" : "test0028"
  },
  "test03063" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03063() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(0, 0, 2268);\n    fraction0.floatValue();\n}",
    "testName" : "test03063"
  },
  "test0029" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0029() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.ONE_THIRD.invert();\n    boolean boolean0 = fraction1.equals(fraction0);\n    fraction1.getNumerator();\n}",
    "testName" : "test0029"
  },
  "test03064" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03064() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(0, 0, 2268);\n    fraction0.getDenominator();\n}",
    "testName" : "test03064"
  },
  "test065124" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test065124() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(0.0);\n    Fraction fraction1 = fraction0.negate();\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction1.getNumerator();\n}",
    "testName" : "test065124"
  },
  "test065123" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test065123() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(0.0);\n    Fraction fraction1 = fraction0.negate();\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction0.getDenominator();\n}",
    "testName" : "test065123"
  },
  "test065122" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test065122() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(0.0);\n    Fraction fraction1 = fraction0.negate();\n    boolean boolean0 = fraction0.equals(fraction1);\n}",
    "testName" : "test065122"
  },
  "test01434" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01434() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = Fraction.TWO_FIFTHS;\n    Fraction fraction2 = fraction0.THREE_FIFTHS.add(fraction1);\n    Fraction fraction3 = fraction2.negate();\n    fraction3.longValue();\n}",
    "testName" : "test01434"
  },
  "test03978" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03978() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = Fraction.getFraction(3481.7902348955795);\n    Fraction fraction2 = fraction0.add(fraction1);\n    fraction2.doubleValue();\n}",
    "testName" : "test03978"
  },
  "test01433" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01433() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = Fraction.TWO_FIFTHS;\n    Fraction fraction2 = fraction0.THREE_FIFTHS.add(fraction1);\n    Fraction fraction3 = fraction2.negate();\n    fraction2.intValue();\n}",
    "testName" : "test01433"
  },
  "test01432" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01432() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = Fraction.TWO_FIFTHS;\n    Fraction fraction2 = fraction0.THREE_FIFTHS.add(fraction1);\n    Fraction fraction3 = fraction2.negate();\n    fraction3.getDenominator();\n}",
    "testName" : "test01432"
  },
  "test088160" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088160() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(1416, 1416);\n    Fraction fraction1 = fraction0.reduce();\n    fraction0.getNumerator();\n}",
    "testName" : "test088160"
  },
  "test04788" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04788() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_FIFTHS;\n    Fraction fraction1 = fraction0.ZERO.multiplyBy(fraction0);\n    fraction1.getNumerator();\n}",
    "testName" : "test04788"
  },
  "test057108" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test057108() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_FIFTHS;\n    Fraction fraction1 = Fraction.ONE_FIFTH;\n    String string0 = fraction1.ZERO.toString();\n}",
    "testName" : "test057108"
  },
  "test105180" : {
    "methodSignature" : "public static Fraction getFraction(int numerator, int denominator)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105180() throws Throwable {\n    Fraction.getFraction(1161, 0);\n}",
    "testName" : "test105180"
  },
  "test059111" : {
    "methodSignature" : "public int compareTo(Object object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test059111() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    Fraction fraction1 = Fraction.ONE_QUARTER;\n    int int0 = fraction0.compareTo(fraction1);\n}",
    "testName" : "test059111"
  },
  "test05192" : {
    "methodSignature" : "public int getProperNumerator()",
    "methodName" : "getProperNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05192() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    int int0 = fraction0.getProperNumerator();\n}",
    "testName" : "test05192"
  },
  "test103178" : {
    "methodSignature" : "public static Fraction getFraction(int numerator, int denominator)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103178() throws Throwable {\n    Fraction.getFraction(144, Integer.MIN_VALUE);\n}",
    "testName" : "test103178"
  },
  "test04384" : {
    "methodSignature" : "public Fraction subtract(Fraction fraction)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04384() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(225.75775);\n    Fraction fraction1 = fraction0.invert();\n    fraction0.subtract(fraction1);\n}",
    "testName" : "test04384"
  },
  "test02760" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02760() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(\"0\");\n    Fraction fraction1 = fraction0.reduce();\n    fraction1.floatValue();\n}",
    "testName" : "test02760"
  },
  "test03571" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03571() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    double double0 = fraction0.doubleValue();\n}",
    "testName" : "test03571"
  },
  "test086156" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test086156() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.THREE_FIFTHS.add(fraction0);\n    Fraction fraction2 = fraction0.subtract(fraction1);\n    Fraction fraction3 = fraction2.abs();\n    fraction2.getNumerator();\n}",
    "testName" : "test086156"
  },
  "test086157" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test086157() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.THREE_FIFTHS.add(fraction0);\n    Fraction fraction2 = fraction0.subtract(fraction1);\n    Fraction fraction3 = fraction2.abs();\n    fraction3.floatValue();\n}",
    "testName" : "test086157"
  },
  "test01026" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01026() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-1), (-3569));\n    Fraction fraction1 = fraction0.pow((-1));\n    fraction1.getDenominator();\n}",
    "testName" : "test01026"
  },
  "test01025" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01025() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-1), (-3569));\n    Fraction fraction1 = fraction0.pow((-1));\n    fraction1.intValue();\n}",
    "testName" : "test01025"
  },
  "test01945" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01945() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-1.0));\n    long long0 = fraction0.longValue();\n}",
    "testName" : "test01945"
  },
  "test02759" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02759() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(\"0\");\n    Fraction fraction1 = fraction0.reduce();\n    fraction1.getDenominator();\n}",
    "testName" : "test02759"
  },
  "test01944" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01944() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-1.0));\n    long long0 = fraction0.longValue();\n    fraction0.getDenominator();\n}",
    "testName" : "test01944"
  },
  "test02758" : {
    "methodSignature" : "public Fraction reduce()",
    "methodName" : "reduce",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02758() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(\"0\");\n    Fraction fraction1 = fraction0.reduce();\n}",
    "testName" : "test02758"
  },
  "test108186" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108186() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-3.042271021842216));\n    int int0 = fraction0.intValue();\n    fraction0.doubleValue();\n}",
    "testName" : "test108186"
  },
  "test099174" : {
    "methodSignature" : "public static Fraction getFraction(int whole, int numerator, int denominator)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099174() throws Throwable {\n    Fraction.getFraction((-2263), 2146066167, 1514);\n}",
    "testName" : "test099174"
  },
  "test00617" : {
    "methodSignature" : "public static Fraction getFraction(String str)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00617() throws Throwable {\n    Fraction.getFraction(\".t]<n_;@6|p>,'\\\"p`6^\");\n}",
    "testName" : "test00617"
  },
  "test108185" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108185() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-3.042271021842216));\n    int int0 = fraction0.intValue();\n    fraction0.getDenominator();\n}",
    "testName" : "test108185"
  },
  "test070135" : {
    "methodSignature" : "public Fraction divideBy(Fraction fraction)",
    "methodName" : "divideBy",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test070135() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = Fraction.ZERO;\n    fraction0.divideBy(fraction1);\n}",
    "testName" : "test070135"
  },
  "test108184" : {
    "methodSignature" : "public int intValue()",
    "methodName" : "intValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108184() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-3.042271021842216));\n    int int0 = fraction0.intValue();\n}",
    "testName" : "test108184"
  },
  "test111189" : {
    "methodSignature" : "public String toProperString()",
    "methodName" : "toProperString",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111189() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-2590), 17);\n    String string0 = fraction0.toProperString();\n}",
    "testName" : "test111189"
  },
  "test075143" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test075143() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = Fraction.getFraction((-2983.168584589799));\n    Fraction fraction2 = fraction0.divideBy(fraction1);\n    fraction1.add(fraction2);\n}",
    "testName" : "test075143"
  },
  "test094168" : {
    "methodSignature" : "public static Fraction getReducedFraction(int numerator, int denominator)",
    "methodName" : "getReducedFraction",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094168() throws Throwable {\n    Fraction.getReducedFraction(Integer.MIN_VALUE, (-1658));\n}",
    "testName" : "test094168"
  },
  "test085155" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test085155() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = fraction0.THREE_FIFTHS.abs();\n    fraction1.floatValue();\n}",
    "testName" : "test085155"
  },
  "test03166" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03166() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(2024, 0, 31);\n    fraction0.getDenominator();\n}",
    "testName" : "test03166"
  },
  "test096170" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096170() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);\n    fraction0.floatValue();\n}",
    "testName" : "test096170"
  },
  "test01024" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01024() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction((-1), (-3569));\n    Fraction fraction1 = fraction0.pow((-1));\n    fraction0.getNumerator();\n}",
    "testName" : "test01024"
  },
  "test00210" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00210() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.ONE_THIRD.invert();\n    boolean boolean0 = fraction1.equals(fraction0);\n    fraction0.equals((Object) fraction1);\n}",
    "testName" : "test00210"
  },
  "test02353" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02353() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(\"-1\");\n    int int0 = fraction0.getProperWhole();\n    fraction0.getDenominator();\n}",
    "testName" : "test02353"
  },
  "test02352" : {
    "methodSignature" : "public int getProperWhole()",
    "methodName" : "getProperWhole",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02352() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(\"-1\");\n    int int0 = fraction0.getProperWhole();\n}",
    "testName" : "test02352"
  },
  "test03165" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03165() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(2024, 0, 31);\n    fraction0.getNumerator();\n}",
    "testName" : "test03165"
  },
  "test00720" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00720() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(1145, (-1));\n    Fraction fraction1 = fraction0.reduce();\n    fraction1.getDenominator();\n}",
    "testName" : "test00720"
  },
  "test068130" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068130() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_THIRDS;\n    boolean boolean0 = fraction0.equals(fraction0);\n}",
    "testName" : "test068130"
  },
  "test01536" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01536() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_FIFTHS;\n    Fraction fraction1 = Fraction.getFraction((-2254.0));\n    Fraction fraction2 = fraction0.FOUR_FIFTHS.multiplyBy(fraction1);\n    fraction2.floatValue();\n}",
    "testName" : "test01536"
  },
  "test096171" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096171() throws Throwable {\n    Fraction fraction0 = Fraction.getReducedFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);\n    fraction0.getNumerator();\n}",
    "testName" : "test096171"
  },
  "test01535" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01535() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_FIFTHS;\n    Fraction fraction1 = Fraction.getFraction((-2254.0));\n    Fraction fraction2 = fraction0.FOUR_FIFTHS.multiplyBy(fraction1);\n    fraction1.getDenominator();\n}",
    "testName" : "test01535"
  },
  "test04889" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04889() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.THREE_QUARTERS.pow(4);\n    fraction1.floatValue();\n}",
    "testName" : "test04889"
  },
  "test055102" : {
    "methodSignature" : "public String toProperString()",
    "methodName" : "toProperString",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055102() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(869, 869);\n    String string0 = fraction0.toProperString();\n}",
    "testName" : "test055102"
  },
  "test055101" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055101() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(869, 869);\n    String string0 = fraction0.toProperString();\n    fraction0.getDenominator();\n}",
    "testName" : "test055101"
  },
  "test091165" : {
    "methodSignature" : "public static Fraction getFraction(String str)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test091165() throws Throwable {\n    Fraction.getFraction(\"U\\\"(.s>>e#=*>\");\n}",
    "testName" : "test091165"
  },
  "test074142" : {
    "methodSignature" : "public Fraction multiplyBy(Fraction fraction)",
    "methodName" : "multiplyBy",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test074142() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(947.9);\n    fraction0.THREE_FIFTHS.multiplyBy((Fraction) null);\n}",
    "testName" : "test074142"
  },
  "test05293" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05293() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    int int0 = fraction0.getNumerator();\n}",
    "testName" : "test05293"
  },
  "test063115" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test063115() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(869, 869);\n    Fraction fraction1 = Fraction.getFraction(869, 869, 1283);\n    int int0 = fraction0.compareTo(fraction1);\n    fraction1.doubleValue();\n}",
    "testName" : "test063115"
  },
  "test063116" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test063116() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(869, 869);\n    Fraction fraction1 = Fraction.getFraction(869, 869, 1283);\n    int int0 = fraction0.compareTo(fraction1);\n    fraction0.floatValue();\n}",
    "testName" : "test063116"
  },
  "test080150" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test080150() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(2.147483647E9);\n    fraction0.ONE.add(fraction0);\n}",
    "testName" : "test080150"
  },
  "test063117" : {
    "methodSignature" : "public int compareTo(Object object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test063117() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(869, 869);\n    Fraction fraction1 = Fraction.getFraction(869, 869, 1283);\n    int int0 = fraction0.compareTo(fraction1);\n}",
    "testName" : "test063117"
  },
  "test03672" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03672() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = fraction0.THREE_FIFTHS.negate();\n    double double0 = fraction1.doubleValue();\n}",
    "testName" : "test03672"
  },
  "test101176" : {
    "methodSignature" : "public static Fraction getFraction(int whole, int numerator, int denominator)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101176() throws Throwable {\n    Fraction.getFraction((-2590), 2268, (-1));\n}",
    "testName" : "test101176"
  },
  "test02861" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02861() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(\"-103 3/5\");\n    fraction0.floatValue();\n}",
    "testName" : "test02861"
  },
  "test088159" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088159() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(1416, 1416);\n    Fraction fraction1 = fraction0.reduce();\n    fraction1.getNumerator();\n}",
    "testName" : "test088159"
  },
  "test04485" : {
    "methodSignature" : "public int compareTo(Object object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04485() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_QUARTERS;\n    fraction0.compareTo((Object) null);\n}",
    "testName" : "test04485"
  },
  "test00312" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00312() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(Integer.MAX_VALUE, Integer.MAX_VALUE);\n    Fraction fraction1 = fraction0.pow(Integer.MAX_VALUE);\n    fraction1.getDenominator();\n}",
    "testName" : "test00312"
  },
  "test01127" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01127() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-2461.523167961));\n    Fraction fraction1 = fraction0.negate();\n    fraction0.getNumerator();\n}",
    "testName" : "test01127"
  },
  "test00313" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00313() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(Integer.MAX_VALUE, Integer.MAX_VALUE);\n    Fraction fraction1 = fraction0.pow(Integer.MAX_VALUE);\n    fraction0.getNumerator();\n}",
    "testName" : "test00313"
  },
  "test00311" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00311() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(Integer.MAX_VALUE, Integer.MAX_VALUE);\n    Fraction fraction1 = fraction0.pow(Integer.MAX_VALUE);\n    fraction0.getDenominator();\n}",
    "testName" : "test00311"
  },
  "test072137" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test072137() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    Fraction fraction1 = fraction0.ONE.multiplyBy(fraction0);\n    fraction1.floatValue();\n}",
    "testName" : "test072137"
  },
  "test00314" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00314() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(Integer.MAX_VALUE, Integer.MAX_VALUE);\n    Fraction fraction1 = fraction0.pow(Integer.MAX_VALUE);\n    fraction1.floatValue();\n}",
    "testName" : "test00314"
  },
  "test01128" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01128() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-2461.523167961));\n    Fraction fraction1 = fraction0.negate();\n    fraction1.doubleValue();\n}",
    "testName" : "test01128"
  },
  "test106181" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106181() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.subtract(fraction0);\n    fraction1.getDenominator();\n}",
    "testName" : "test106181"
  },
  "test106182" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106182() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = fraction0.subtract(fraction0);\n    fraction1.doubleValue();\n}",
    "testName" : "test106182"
  },
  "test00718" : {
    "methodSignature" : "public Fraction reduce()",
    "methodName" : "reduce",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00718() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(1145, (-1));\n    Fraction fraction1 = fraction0.reduce();\n}",
    "testName" : "test00718"
  },
  "test00719" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00719() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(1145, (-1));\n    Fraction fraction1 = fraction0.reduce();\n    fraction1.doubleValue();\n}",
    "testName" : "test00719"
  },
  "test077146" : {
    "methodSignature" : "public Fraction add(Fraction fraction)",
    "methodName" : "add",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077146() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    Fraction fraction1 = fraction0.add(fraction0);\n}",
    "testName" : "test077146"
  },
  "test058110" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test058110() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    fraction0.ZERO.toString();\n    fraction0.getNumerator();\n}",
    "testName" : "test058110"
  },
  "test064119" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test064119() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    fraction0.getDenominator();\n    String string0 = fraction0.FOUR_FIFTHS.toProperString();\n    Fraction fraction1 = Fraction.TWO_THIRDS;\n    Fraction fraction2 = fraction0.FOUR_FIFTHS.subtract(fraction1);\n    fraction2.floatValue();\n}",
    "testName" : "test064119"
  },
  "test064118" : {
    "methodSignature" : "public String toProperString()",
    "methodName" : "toProperString",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test064118() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    fraction0.getDenominator();\n    String string0 = fraction0.FOUR_FIFTHS.toProperString();\n}",
    "testName" : "test064118"
  },
  "test03267" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03267() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(0, 25);\n    fraction0.doubleValue();\n}",
    "testName" : "test03267"
  },
  "test03268" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03268() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(0, 25);\n    fraction0.getDenominator();\n}",
    "testName" : "test03268"
  },
  "test104179" : {
    "methodSignature" : "public static Fraction getFraction(int numerator, int denominator)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104179() throws Throwable {\n    Fraction.getFraction(Integer.MIN_VALUE, Integer.MIN_VALUE);\n}",
    "testName" : "test104179"
  },
  "test02454" : {
    "methodSignature" : "public int getProperNumerator()",
    "methodName" : "getProperNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02454() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    int int0 = fraction0.getProperNumerator();\n}",
    "testName" : "test02454"
  },
  "test04990" : {
    "methodSignature" : "public Fraction invert()",
    "methodName" : "invert",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04990() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(4039, 4039);\n    fraction0.ZERO.invert();\n}",
    "testName" : "test04990"
  },
  "test087158" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test087158() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = fraction0.THREE_FIFTHS.reduce();\n    fraction1.getDenominator();\n}",
    "testName" : "test087158"
  },
  "test02962" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02962() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-114), 4, 4);\n    fraction0.floatValue();\n}",
    "testName" : "test02962"
  },
  "test02048" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02048() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-2440.08978));\n    Fraction fraction1 = fraction0.TWO_THIRDS.divideBy(fraction0);\n    Fraction fraction2 = fraction1.invert();\n    fraction1.doubleValue();\n}",
    "testName" : "test02048"
  },
  "test00822" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00822() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-78.0502075079038));\n    Fraction fraction1 = fraction0.pow(1);\n    fraction1.doubleValue();\n}",
    "testName" : "test00822"
  },
  "test01637" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01637() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = fraction0.ONE_FIFTH.negate();\n    Fraction fraction2 = fraction0.multiplyBy(fraction1);\n    fraction2.floatValue();\n}",
    "testName" : "test01637"
  },
  "test03775" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03775() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(869, 869);\n    Fraction fraction1 = Fraction.getFraction(869, 869, 1283);\n    Fraction fraction2 = fraction0.subtract(fraction1);\n    Fraction fraction3 = fraction1.divideBy(fraction2);\n    fraction2.doubleValue();\n}",
    "testName" : "test03775"
  },
  "test110188" : {
    "methodSignature" : "public long longValue()",
    "methodName" : "longValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110188() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    long long0 = fraction0.longValue();\n}",
    "testName" : "test110188"
  },
  "test109187" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109187() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    float float0 = fraction0.floatValue();\n}",
    "testName" : "test109187"
  },
  "test00821" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00821() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-78.0502075079038));\n    Fraction fraction1 = fraction0.pow(1);\n    fraction1.getNumerator();\n}",
    "testName" : "test00821"
  },
  "test098173" : {
    "methodSignature" : "public static Fraction getFraction(int whole, int numerator, int denominator)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098173() throws Throwable {\n    Fraction.getFraction(134217728, 65, 5254);\n}",
    "testName" : "test098173"
  },
  "test01638" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01638() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = fraction0.ONE_FIFTH.negate();\n    Fraction fraction2 = fraction0.multiplyBy(fraction1);\n    fraction1.floatValue();\n}",
    "testName" : "test01638"
  },
  "test071136" : {
    "methodSignature" : "public Fraction divideBy(Fraction fraction)",
    "methodName" : "divideBy",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test071136() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_THIRD;\n    fraction0.divideBy((Fraction) null);\n}",
    "testName" : "test071136"
  },
  "test076144" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076144() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = Fraction.getReducedFraction(0, (-2590));\n    Fraction fraction2 = fraction0.ONE_THIRD.add(fraction1);\n    fraction1.getDenominator();\n}",
    "testName" : "test076144"
  },
  "test093167" : {
    "methodSignature" : "public static Fraction getFraction(double value)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093167() throws Throwable {\n    Fraction.getFraction(1.7976931348623157E308);\n}",
    "testName" : "test093167"
  },
  "test076145" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076145() throws Throwable {\n    Fraction fraction0 = Fraction.FOUR_FIFTHS;\n    Fraction fraction1 = Fraction.getReducedFraction(0, (-2590));\n    Fraction fraction2 = fraction0.ONE_THIRD.add(fraction1);\n    fraction2.doubleValue();\n}",
    "testName" : "test076145"
  },
  "test082152" : {
    "methodSignature" : "public Fraction pow(int power)",
    "methodName" : "pow",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test082152() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    fraction0.TWO_THIRDS.pow(Integer.MIN_VALUE);\n}",
    "testName" : "test082152"
  },
  "test05394" : {
    "methodSignature" : "public String toProperString()",
    "methodName" : "toProperString",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05394() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    Fraction fraction1 = Fraction.ONE_QUARTER;\n    Fraction fraction2 = fraction0.divideBy(fraction1);\n    String string0 = fraction2.toProperString();\n}",
    "testName" : "test05394"
  },
  "test066128" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066128() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = Fraction.ONE_FIFTH;\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction1.getDenominator();\n}",
    "testName" : "test066128"
  },
  "test061113" : {
    "methodSignature" : "public int compareTo(Object object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test061113() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    Fraction fraction1 = Fraction.ONE;\n    int int0 = fraction0.compareTo(fraction1);\n}",
    "testName" : "test061113"
  },
  "test066127" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066127() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = Fraction.ONE_FIFTH;\n    boolean boolean0 = fraction0.equals(fraction1);\n}",
    "testName" : "test066127"
  },
  "test04180" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04180() throws Throwable {\n    Fraction fraction0 = Fraction.ONE;\n    Fraction fraction1 = fraction0.abs();\n    fraction1.doubleValue();\n}",
    "testName" : "test04180"
  },
  "test04586" : {
    "methodSignature" : "public int compareTo(Object object)",
    "methodName" : "compareTo",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04586() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    fraction0.compareTo(\"q&bBD1O}\");\n}",
    "testName" : "test04586"
  },
  "test03773" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03773() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(869, 869);\n    Fraction fraction1 = Fraction.getFraction(869, 869, 1283);\n    Fraction fraction2 = fraction0.subtract(fraction1);\n    Fraction fraction3 = fraction1.divideBy(fraction2);\n    fraction3.doubleValue();\n}",
    "testName" : "test03773"
  },
  "test03774" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03774() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(869, 869);\n    Fraction fraction1 = Fraction.getFraction(869, 869, 1283);\n    Fraction fraction2 = fraction0.subtract(fraction1);\n    Fraction fraction3 = fraction1.divideBy(fraction2);\n    fraction3.getNumerator();\n}",
    "testName" : "test03774"
  },
  "test02047" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02047() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-2440.08978));\n    Fraction fraction1 = fraction0.TWO_THIRDS.divideBy(fraction0);\n    Fraction fraction2 = fraction1.invert();\n    fraction2.getDenominator();\n}",
    "testName" : "test02047"
  },
  "test05396" : {
    "methodSignature" : "public int getProperNumerator()",
    "methodName" : "getProperNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05396() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    Fraction fraction1 = Fraction.ONE_QUARTER;\n    Fraction fraction2 = fraction0.divideBy(fraction1);\n    String string0 = fraction2.toProperString();\n    fraction1.getProperNumerator();\n}",
    "testName" : "test05396"
  },
  "test066126" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066126() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = Fraction.ONE_FIFTH;\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction1.getNumerator();\n}",
    "testName" : "test066126"
  },
  "test02046" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02046() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-2440.08978));\n    Fraction fraction1 = fraction0.TWO_THIRDS.divideBy(fraction0);\n    Fraction fraction2 = fraction1.invert();\n    fraction0.getNumerator();\n}",
    "testName" : "test02046"
  },
  "test05395" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05395() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    Fraction fraction1 = Fraction.ONE_QUARTER;\n    Fraction fraction2 = fraction0.divideBy(fraction1);\n    String string0 = fraction2.toProperString();\n    fraction2.getDenominator();\n}",
    "testName" : "test05395"
  },
  "test066125" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066125() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_QUARTER;\n    Fraction fraction1 = Fraction.ONE_FIFTH;\n    boolean boolean0 = fraction0.equals(fraction1);\n    fraction1.equals((Object) fraction0);\n}",
    "testName" : "test066125"
  },
  "test05397" : {
    "methodSignature" : "public int getProperWhole()",
    "methodName" : "getProperWhole",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05397() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    Fraction fraction1 = Fraction.ONE_QUARTER;\n    Fraction fraction2 = fraction0.divideBy(fraction1);\n    String string0 = fraction2.toProperString();\n    fraction1.getProperWhole();\n}",
    "testName" : "test05397"
  },
  "test02555" : {
    "methodSignature" : "public int getNumerator()",
    "methodName" : "getNumerator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02555() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    int int0 = fraction0.getNumerator();\n}",
    "testName" : "test02555"
  },
  "test01740" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01740() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction((-1.0));\n    Fraction fraction1 = fraction0.ONE_THIRD.invert();\n    Fraction fraction2 = fraction1.subtract(fraction0);\n    Fraction fraction3 = fraction0.ONE_THIRD.multiplyBy(fraction2);\n    fraction3.doubleValue();\n}",
    "testName" : "test01740"
  },
  "test00415" : {
    "methodSignature" : "public static Fraction getFraction(String str)",
    "methodName" : "getFraction",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00415() throws Throwable {\n    Fraction.getFraction(\"/;cJnC\");\n}",
    "testName" : "test00415"
  },
  "test01229" : {
    "methodSignature" : "public double doubleValue()",
    "methodName" : "doubleValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01229() throws Throwable {\n    Fraction fraction0 = Fraction.TWO_FIFTHS;\n    Fraction fraction1 = fraction0.TWO_FIFTHS.negate();\n    fraction1.negate();\n    fraction1.doubleValue();\n}",
    "testName" : "test01229"
  },
  "test03369" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03369() throws Throwable {\n    Fraction fraction0 = Fraction.ZERO;\n    float float0 = fraction0.floatValue();\n}",
    "testName" : "test03369"
  },
  "test058109" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test058109() throws Throwable {\n    Fraction fraction0 = Fraction.THREE_QUARTERS;\n    fraction0.ZERO.toString();\n    fraction0.getDenominator();\n}",
    "testName" : "test058109"
  },
  "test090164" : {
    "methodSignature" : "public int getDenominator()",
    "methodName" : "getDenominator",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090164() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(\"4/5\");\n    fraction0.getDenominator();\n}",
    "testName" : "test090164"
  },
  "test090163" : {
    "methodSignature" : "public float floatValue()",
    "methodName" : "floatValue",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090163() throws Throwable {\n    Fraction fraction0 = Fraction.getFraction(\"4/5\");\n    fraction0.floatValue();\n}",
    "testName" : "test090163"
  },
  "test079149" : {
    "methodSignature" : "public Fraction subtract(Fraction fraction)",
    "methodName" : "subtract",
    "className" : "org.apache.commons.lang.math.Fraction",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079149() throws Throwable {\n    Fraction fraction0 = Fraction.ONE_HALF;\n    fraction0.subtract((Fraction) null);\n}",
    "testName" : "test079149"
  }
}