{
  "test1212" : {
    "methodSignature" : "public static <T extends Serializable> T clone(T object)",
    "methodName" : "clone",
    "className" : "org.apache.commons.lang3.SerializationUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Integer integer0 = SerializationUtils.clone((Integer) null);\n}",
    "testName" : "test1212"
  },
  "test1313" : {
    "methodSignature" : "public static void serialize(Serializable obj, OutputStream outputStream)",
    "methodName" : "serialize",
    "className" : "org.apache.commons.lang3.SerializationUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    SerializationUtils serializationUtils0 = new SerializationUtils();\n    Object[] objectArray0 = new Object[16];\n    objectArray0[2] = (Object) serializationUtils0;\n    File file0 = MockFile.createTempFile(\"7Lky+ g.rE6v,k\", \"7Lky+ g.rE6v,k\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(file0);\n    SerializationUtils.serialize((Serializable) objectArray0, (OutputStream) mockPrintStream0);\n}",
    "testName" : "test1313"
  },
  "test1010" : {
    "methodSignature" : "public static void serialize(Serializable obj, OutputStream outputStream)",
    "methodName" : "serialize",
    "className" : "org.apache.commons.lang3.SerializationUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    SerializationUtils.serialize((Serializable) null, (OutputStream) pipedOutputStream0);\n}",
    "testName" : "test1010"
  },
  "test1111" : {
    "methodSignature" : "public static void serialize(Serializable obj, OutputStream outputStream)",
    "methodName" : "serialize",
    "className" : "org.apache.commons.lang3.SerializationUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;\n    SerializationUtils.serialize((Serializable) locale_FilteringMode0, (OutputStream) null);\n}",
    "testName" : "test1111"
  },
  "test000" : {
    "methodSignature" : "public static void serialize(Serializable obj, OutputStream outputStream)",
    "methodName" : "serialize",
    "className" : "org.apache.commons.lang3.SerializationUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(pipedOutputStream0, 1982);\n    SerializationUtils.serialize((Serializable) (byte) 117, (OutputStream) bufferedOutputStream0);\n}",
    "testName" : "test000"
  },
  "test011" : {
    "methodSignature" : "public static Object deserialize(byte[] objectData)",
    "methodName" : "deserialize",
    "className" : "org.apache.commons.lang3.SerializationUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    byte[] byteArray0 = SerializationUtils.serialize((Serializable) null);\n    Object object0 = SerializationUtils.deserialize(byteArray0);\n}",
    "testName" : "test011"
  },
  "test022" : {
    "methodSignature" : "public static byte[] serialize(Serializable obj)",
    "methodName" : "serialize",
    "className" : "org.apache.commons.lang3.SerializationUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Certificate[] certificateArray0 = new Certificate[8];\n    UnresolvedPermission unresolvedPermission0 = new UnresolvedPermission(\"W(\", \"org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream\", \"W(\", certificateArray0);\n    SerializationUtils.serialize((Serializable) unresolvedPermission0);\n}",
    "testName" : "test022"
  },
  "test033" : {
    "methodSignature" : "public static Object deserialize(byte[] objectData)",
    "methodName" : "deserialize",
    "className" : "org.apache.commons.lang3.SerializationUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    byte[] byteArray0 = new byte[1];\n    SerializationUtils.deserialize(byteArray0);\n}",
    "testName" : "test033"
  },
  "test044" : {
    "methodSignature" : "public static Object deserialize(InputStream inputStream)",
    "methodName" : "deserialize",
    "className" : "org.apache.commons.lang3.SerializationUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);\n    SerializationUtils.deserialize((InputStream) bufferedInputStream0);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public static Object deserialize(byte[] objectData)",
    "methodName" : "deserialize",
    "className" : "org.apache.commons.lang3.SerializationUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    SerializationUtils.deserialize((byte[]) null);\n}",
    "testName" : "test066"
  },
  "test077" : {
    "methodSignature" : "public static Object deserialize(InputStream inputStream)",
    "methodName" : "deserialize",
    "className" : "org.apache.commons.lang3.SerializationUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);\n    SerializationUtils.deserialize((InputStream) dataInputStream0);\n}",
    "testName" : "test077"
  },
  "test088" : {
    "methodSignature" : "public static Object deserialize(InputStream inputStream)",
    "methodName" : "deserialize",
    "className" : "org.apache.commons.lang3.SerializationUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    SerializationUtils.deserialize((InputStream) null);\n}",
    "testName" : "test088"
  },
  "test1414" : {
    "methodSignature" : "public static <T extends Serializable> T clone(T object)",
    "methodName" : "clone",
    "className" : "org.apache.commons.lang3.SerializationUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    Integer integer0 = new Integer((-1));\n    Integer integer1 = SerializationUtils.clone(integer0);\n}",
    "testName" : "test1414"
  }
}