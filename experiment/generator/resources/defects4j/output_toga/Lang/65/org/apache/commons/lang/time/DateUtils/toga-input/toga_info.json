{
  "test2226" : {
    "methodSignature" : "public static Date add(Date date, int calendarField, int amount)",
    "methodName" : "add",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2226() throws Throwable {\n    MockDate mockDate0 = new MockDate((-1081), (-1081), 0, (-745), 5226, 0);\n    DateUtils.add(mockDate0, (-348), (-348));\n}",
    "testName" : "test2226"
  },
  "test5459" : {
    "methodSignature" : "public static Date truncate(Date date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5459() throws Throwable {\n    DateUtils.truncate((Date) null, 4);\n}",
    "testName" : "test5459"
  },
  "test4246" : {
    "methodSignature" : "public static Iterator iterator(Date focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4246() throws Throwable {\n    DateUtils.iterator((Date) null, (-1));\n}",
    "testName" : "test4246"
  },
  "test6469" : {
    "methodSignature" : "public static Date parseDate(String str, String[] parsePatterns) throws ParseException",
    "methodName" : "parseDate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6469() throws Throwable {\n    DateUtils.parseDate(\"cy} ^()rN'LRm\", (String[]) null);\n}",
    "testName" : "test6469"
  },
  "test3034" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3034() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(2337, 2337, 2337, 2337, 2337);\n    MockGregorianCalendar mockGregorianCalendar1 = new MockGregorianCalendar(2337, 2337, 2337, 0, 0, 0);\n    boolean boolean0 = DateUtils.isSameDay((Calendar) mockGregorianCalendar1, (Calendar) mockGregorianCalendar0);\n}",
    "testName" : "test3034"
  },
  "test2024" : {
    "methodSignature" : "public static Date addHours(Date date, int amount)",
    "methodName" : "addHours",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2024() throws Throwable {\n    DateUtils.addHours((Date) null, 0);\n}",
    "testName" : "test2024"
  },
  "test5257" : {
    "methodSignature" : "public static Date truncate(Object date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5257() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(4084, \"\");\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0);\n    DateUtils.truncate((Object) mockGregorianCalendar0, 4084);\n}",
    "testName" : "test5257"
  },
  "test033" : {
    "methodSignature" : "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameLocalTime",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.UK;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0, locale0);\n    MockGregorianCalendar mockGregorianCalendar1 = new MockGregorianCalendar();\n    boolean boolean0 = DateUtils.isSameLocalTime(mockGregorianCalendar0, mockGregorianCalendar1);\n}",
    "testName" : "test033"
  },
  "test1418" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1418() throws Throwable {\n    Locale locale0 = Locale.TAIWAN;\n    Calendar calendar0 = MockCalendar.getInstance(locale0);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1767), (-1767), (-1767), 889, (-912));\n    mockGregorianCalendar0.setLenient(false);\n    DateUtils.isSameDay(calendar0, (Calendar) mockGregorianCalendar0);\n}",
    "testName" : "test1418"
  },
  "test1216" : {
    "methodSignature" : "public static Calendar round(Calendar date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1216() throws Throwable {\n    Locale locale0 = Locale.CANADA_FRENCH;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);\n    mockGregorianCalendar0.set(0, 305);\n    DateUtils.round((Calendar) mockGregorianCalendar0, 0);\n}",
    "testName" : "test1216"
  },
  "test3438" : {
    "methodSignature" : "public static Iterator iterator(Object focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3438() throws Throwable {\n    DateUtils.iterator((Object) null, 0);\n}",
    "testName" : "test3438"
  },
  "test068" : {
    "methodSignature" : "public static boolean isSameInstant(Date date1, Date date2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068() throws Throwable {\n    String[] stringArray0 = new String[8];\n    stringArray0[0] = \"\";\n    Date date0 = DateUtils.parseDate(\"\", stringArray0);\n    Locale locale0 = new Locale(\"\", \"\");\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);\n    Date date1 = mockGregorianCalendar0.getGregorianChange();\n    boolean boolean0 = DateUtils.isSameInstant(date0, date1);\n}",
    "testName" : "test068"
  },
  "test4044" : {
    "methodSignature" : "public static Iterator iterator(Object focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4044() throws Throwable {\n    MockDate mockDate0 = new MockDate((-2840), (-2840), 0);\n    Iterator iterator0 = DateUtils.iterator((Object) mockDate0, 1);\n}",
    "testName" : "test4044"
  },
  "test6267" : {
    "methodSignature" : "public static Date addMinutes(Date date, int amount)",
    "methodName" : "addMinutes",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6267() throws Throwable {\n    DateUtils.addMinutes((Date) null, 0);\n}",
    "testName" : "test6267"
  },
  "test7077" : {
    "methodSignature" : "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameLocalTime",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7077() throws Throwable {\n    DateUtils.isSameLocalTime((Calendar) null, (Calendar) null);\n}",
    "testName" : "test7077"
  },
  "test6065" : {
    "methodSignature" : "public static Calendar round(Calendar date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6065() throws Throwable {\n    DateUtils.round((Calendar) null, 0);\n}",
    "testName" : "test6065"
  },
  "test3842" : {
    "methodSignature" : "public static Iterator iterator(Calendar focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3842() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ROOT;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0, locale0);\n    Iterator iterator0 = DateUtils.iterator((Calendar) mockGregorianCalendar0, 3);\n}",
    "testName" : "test3842"
  },
  "test1620" : {
    "methodSignature" : "public static Date addWeeks(Date date, int amount)",
    "methodName" : "addWeeks",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1620() throws Throwable {\n    DateUtils.addWeeks((Date) null, 149);\n}",
    "testName" : "test1620"
  },
  "test4853" : {
    "methodSignature" : "public static Date truncate(Date date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4853() throws Throwable {\n    MockDate mockDate0 = new MockDate(280000000, (-2548), 280000000);\n    DateUtils.truncate((Date) mockDate0, 1398);\n}",
    "testName" : "test4853"
  },
  "test3640" : {
    "methodSignature" : "public static Iterator iterator(Date focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3640() throws Throwable {\n    MockDate mockDate0 = new MockDate((-988), (-988), (-988));\n    Iterator iterator0 = DateUtils.iterator((Date) mockDate0, 6);\n}",
    "testName" : "test3640"
  },
  "test5863" : {
    "methodSignature" : "public static Date round(Object date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5863() throws Throwable {\n    DateUtils.round((Object) null, 54);\n}",
    "testName" : "test5863"
  },
  "test6875" : {
    "methodSignature" : "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameLocalTime",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6875() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.UK;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0, locale0);\n    Calendar calendar0 = DateUtils.round((Calendar) mockGregorianCalendar0, 11);\n    boolean boolean0 = DateUtils.isSameLocalTime(mockGregorianCalendar0, calendar0);\n}",
    "testName" : "test6875"
  },
  "test7887" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7887() throws Throwable {\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    Calendar calendar0 = MockCalendar.getInstance(locale0);\n    Calendar calendar1 = DateUtils.round(calendar0, 0);\n    boolean boolean0 = DateUtils.isSameDay(calendar1, calendar0);\n}",
    "testName" : "test7887"
  },
  "test8899" : {
    "methodSignature" : "public static boolean isSameInstant(Date date1, Date date2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8899() throws Throwable {\n    MockDate mockDate0 = new MockDate(1898, 2774, 1898);\n    Date date0 = DateUtils.addHours(mockDate0, 1898);\n    boolean boolean0 = DateUtils.isSameInstant((Date) mockDate0, date0);\n}",
    "testName" : "test8899"
  },
  "test022" : {
    "methodSignature" : "public static Date parseDate(String str, String[] parsePatterns) throws ParseException",
    "methodName" : "parseDate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    String[] stringArray0 = new String[4];\n    stringArray0[0] = \"y >\";\n    stringArray0[1] = \"\";\n    DateUtils.parseDate(\"y >\", stringArray0);\n}",
    "testName" : "test022"
  },
  "test1822" : {
    "methodSignature" : "public static Date addMonths(Date date, int amount)",
    "methodName" : "addMonths",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1822() throws Throwable {\n    DateUtils.addMonths((Date) null, 0);\n}",
    "testName" : "test1822"
  },
  "test0811" : {
    "methodSignature" : "public static boolean isSameDay(Date date1, Date date2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0811() throws Throwable {\n    MockDate mockDate0 = new MockDate((-2840), (-2840), 0);\n    MockDate mockDate1 = new MockDate((-988), (-988), (-988));\n    boolean boolean0 = DateUtils.isSameDay((Date) mockDate1, (Date) mockDate0);\n}",
    "testName" : "test0811"
  },
  "test7280" : {
    "methodSignature" : "public static boolean isSameInstant(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7280() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Calendar calendar0 = MockCalendar.getInstance(timeZone0);\n    DateUtils.isSameInstant(calendar0, (Calendar) null);\n}",
    "testName" : "test7280"
  },
  "test8292" : {
    "methodSignature" : "public static boolean isSameDay(Date date1, Date date2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8292() throws Throwable {\n    MockDate mockDate0 = new MockDate();\n    DateUtils.isSameDay((Date) mockDate0, (Date) null);\n}",
    "testName" : "test8292"
  },
  "test057" : {
    "methodSignature" : "public static boolean isSameInstant(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test057() throws Throwable {\n    Locale locale0 = Locale.CANADA_FRENCH;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);\n    Calendar calendar0 = DateUtils.truncate((Calendar) mockGregorianCalendar0, 9);\n    mockGregorianCalendar0.setTimeInMillis(9);\n    boolean boolean0 = DateUtils.isSameInstant(calendar0, (Calendar) mockGregorianCalendar0);\n}",
    "testName" : "test057"
  },
  "test8090" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8090() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, 0, 0, 0);\n    DateUtils.isSameDay((Calendar) mockGregorianCalendar0, (Calendar) null);\n}",
    "testName" : "test8090"
  },
  "test5661" : {
    "methodSignature" : "public static Date round(Object date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5661() throws Throwable {\n    DateUtils.round((Object) \"GMT\", 0);\n}",
    "testName" : "test5661"
  },
  "test7684" : {
    "methodSignature" : "public static boolean isSameInstant(Date date1, Date date2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7684() throws Throwable {\n    MockDate mockDate0 = new MockDate(1898, 2774, 1898);\n    boolean boolean0 = DateUtils.isSameInstant((Date) mockDate0, (Date) mockDate0);\n}",
    "testName" : "test7684"
  },
  "test6671" : {
    "methodSignature" : "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameLocalTime",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6671() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ROOT;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0, locale0);\n    mockGregorianCalendar0.roll(3, true);\n    MockGregorianCalendar mockGregorianCalendar1 = new MockGregorianCalendar(timeZone0, locale0);\n    boolean boolean0 = DateUtils.isSameLocalTime(mockGregorianCalendar1, mockGregorianCalendar0);\n}",
    "testName" : "test6671"
  },
  "test7482" : {
    "methodSignature" : "public static boolean isSameInstant(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7482() throws Throwable {\n    DateUtils.isSameInstant((Calendar) null, (Calendar) null);\n}",
    "testName" : "test7482"
  },
  "test8494" : {
    "methodSignature" : "public static boolean isSameDay(Date date1, Date date2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8494() throws Throwable {\n    DateUtils.isSameDay((Date) null, (Date) null);\n}",
    "testName" : "test8494"
  },
  "test2125" : {
    "methodSignature" : "public static Date addDays(Date date, int amount)",
    "methodName" : "addDays",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2125() throws Throwable {\n    DateUtils.addDays((Date) null, 2028);\n}",
    "testName" : "test2125"
  },
  "test1115" : {
    "methodSignature" : "public static Date truncate(Object date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1115() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(4084, 4084, 4084, 4084, 4084, 4084);\n    mockGregorianCalendar0.setLenient(false);\n    DateUtils.truncate((Object) mockGregorianCalendar0, 4084);\n}",
    "testName" : "test1115"
  },
  "test3337" : {
    "methodSignature" : "public static Iterator iterator(Object focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3337() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(1990, (-1306), 1990);\n    DateUtils.iterator((Object) mockGregorianCalendar0, (-1306));\n}",
    "testName" : "test3337"
  },
  "test5358" : {
    "methodSignature" : "public static Calendar truncate(Calendar date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5358() throws Throwable {\n    DateUtils.truncate((Calendar) null, 1707);\n}",
    "testName" : "test5358"
  },
  "test4145" : {
    "methodSignature" : "public static Iterator iterator(Calendar focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4145() throws Throwable {\n    DateUtils.iterator((Calendar) null, 4);\n}",
    "testName" : "test4145"
  },
  "test6368" : {
    "methodSignature" : "public static Date parseDate(String str, String[] parsePatterns) throws ParseException",
    "methodName" : "parseDate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6368() throws Throwable {\n    String[] stringArray0 = new String[2];\n    stringArray0[0] = \"y6:%K HE$`~w\";\n    stringArray0[1] = \"y6:%K HE$`~w\";\n    DateUtils.parseDate(\"y6:%K HE$`~w\", stringArray0);\n}",
    "testName" : "test6368"
  },
  "test2529" : {
    "methodSignature" : "public static Iterator iterator(Calendar focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2529() throws Throwable {\n    Locale locale0 = Locale.CHINA;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);\n    DateUtils.iterator((Calendar) mockGregorianCalendar0, 4085);\n}",
    "testName" : "test2529"
  },
  "test1519" : {
    "methodSignature" : "public static Date addYears(Date date, int amount)",
    "methodName" : "addYears",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1519() throws Throwable {\n    DateUtils.addYears((Date) null, 0);\n}",
    "testName" : "test1519"
  },
  "test1317" : {
    "methodSignature" : "public static Date parseDate(String str, String[] parsePatterns) throws ParseException",
    "methodName" : "parseDate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1317() throws Throwable {\n    String[] stringArray0 = new String[4];\n    stringArray0[0] = \"a-w:_'P#fU2u2;R\";\n    DateUtils.parseDate(\"\", stringArray0);\n}",
    "testName" : "test1317"
  },
  "test3539" : {
    "methodSignature" : "public static Iterator iterator(Date focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3539() throws Throwable {\n    MockDate mockDate0 = new MockDate(1990, 1990, 1990, 1990, 1990);\n    Iterator iterator0 = DateUtils.iterator((Date) mockDate0, 4);\n}",
    "testName" : "test3539"
  },
  "test5156" : {
    "methodSignature" : "public static Date truncate(Object date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5156() throws Throwable {\n    DateUtils.truncate((Object) null, 887);\n}",
    "testName" : "test5156"
  },
  "test7179" : {
    "methodSignature" : "public static boolean isSameInstant(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7179() throws Throwable {\n    Locale locale0 = Locale.CANADA_FRENCH;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);\n    Calendar calendar0 = DateUtils.truncate((Calendar) mockGregorianCalendar0, 9);\n    boolean boolean0 = DateUtils.isSameInstant(calendar0, (Calendar) mockGregorianCalendar0);\n}",
    "testName" : "test7179"
  },
  "test94105" : {
    "methodSignature" : "public static boolean isSameDay(Date date1, Date date2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test94105() throws Throwable {\n    MockDate mockDate0 = new MockDate((-1360L));\n    Date date0 = DateUtils.addWeeks(mockDate0, 19);\n    Date date1 = DateUtils.addMinutes(mockDate0, 19);\n    boolean boolean0 = DateUtils.isSameDay(date0, date1);\n}",
    "testName" : "test94105"
  },
  "test6166" : {
    "methodSignature" : "public static Date round(Date date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6166() throws Throwable {\n    DateUtils.round((Date) null, 1177);\n}",
    "testName" : "test6166"
  },
  "test2731" : {
    "methodSignature" : "public static Date add(Date date, int calendarField, int amount)",
    "methodName" : "add",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2731() throws Throwable {\n    DateUtils.add((Date) null, 2091, 2091);\n}",
    "testName" : "test2731"
  },
  "test4954" : {
    "methodSignature" : "public static Date truncate(Object date, int field)",
    "methodName" : "truncate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4954() throws Throwable {\n    Locale locale0 = Locale.ROOT;\n    DateUtils.truncate((Object) locale0, (-838));\n}",
    "testName" : "test4954"
  },
  "test7989" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7989() throws Throwable {\n    Locale locale0 = Locale.JAPANESE;\n    Calendar calendar0 = MockCalendar.getInstance(locale0);\n    Calendar calendar1 = DateUtils.round(calendar0, 0);\n    calendar1.set(0, 0, (-1), 1821, 0);\n    boolean boolean0 = DateUtils.isSameDay(calendar1, calendar0);\n}",
    "testName" : "test7989"
  },
  "test1721" : {
    "methodSignature" : "public static Date addSeconds(Date date, int amount)",
    "methodName" : "addSeconds",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1721() throws Throwable {\n    DateUtils.addSeconds((Date) null, 6);\n}",
    "testName" : "test1721"
  },
  "test6976" : {
    "methodSignature" : "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameLocalTime",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6976() throws Throwable {\n    Locale locale0 = Locale.CHINA;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);\n    DateUtils.isSameLocalTime(mockGregorianCalendar0, (Calendar) null);\n}",
    "testName" : "test6976"
  },
  "test3741" : {
    "methodSignature" : "public static Iterator iterator(Date focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3741() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(1990, (-1306), 1990);\n    Date date0 = mockGregorianCalendar0.getGregorianChange();\n    Iterator iterator0 = DateUtils.iterator(date0, 4);\n}",
    "testName" : "test3741"
  },
  "test5762" : {
    "methodSignature" : "public static Date round(Object date, int field)",
    "methodName" : "round",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5762() throws Throwable {\n    MockDate mockDate0 = new MockDate();\n    DateUtils.round((Object) mockDate0, 2542);\n}",
    "testName" : "test5762"
  },
  "test000" : {
    "methodSignature" : "public static Iterator iterator(Object focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    MockDate mockDate0 = new MockDate(3576, 3576, 3576, 3576, (-282));\n    DateUtils.iterator((Object) mockDate0, 3576);\n}",
    "testName" : "test000"
  },
  "test045" : {
    "methodSignature" : "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameLocalTime",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test045() throws Throwable {\n    Locale locale0 = Locale.CANADA_FRENCH;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);\n    Calendar calendar0 = DateUtils.truncate((Calendar) mockGregorianCalendar0, 9);\n    boolean boolean0 = DateUtils.isSameLocalTime(calendar0, mockGregorianCalendar0);\n}",
    "testName" : "test045"
  },
  "test0710" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0710() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    Calendar calendar0 = MockCalendar.getInstance(locale0);\n    Calendar calendar1 = DateUtils.truncate(calendar0, 0);\n    boolean boolean0 = DateUtils.isSameDay(calendar0, calendar1);\n}",
    "testName" : "test0710"
  },
  "test2933" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2933() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.UK;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0, locale0);\n    boolean boolean0 = DateUtils.isSameDay((Calendar) mockGregorianCalendar0, (Calendar) mockGregorianCalendar0);\n}",
    "testName" : "test2933"
  },
  "test1923" : {
    "methodSignature" : "public static Date addMilliseconds(Date date, int amount)",
    "methodName" : "addMilliseconds",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1923() throws Throwable {\n    DateUtils.addMilliseconds((Date) null, 1000);\n}",
    "testName" : "test1923"
  },
  "test7381" : {
    "methodSignature" : "public static boolean isSameInstant(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7381() throws Throwable {\n    ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(19);\n    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);\n    Calendar calendar0 = MockCalendar.getInstance(timeZone0);\n    boolean boolean0 = DateUtils.isSameInstant(calendar0, calendar0);\n}",
    "testName" : "test7381"
  },
  "test8393" : {
    "methodSignature" : "public static boolean isSameDay(Date date1, Date date2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8393() throws Throwable {\n    MockDate mockDate0 = new MockDate((-1360L));\n    boolean boolean0 = DateUtils.isSameDay((Date) mockDate0, (Date) mockDate0);\n}",
    "testName" : "test8393"
  },
  "test8191" : {
    "methodSignature" : "public static boolean isSameDay(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameDay",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test8191() throws Throwable {\n    DateUtils.isSameDay((Calendar) null, (Calendar) null);\n}",
    "testName" : "test8191"
  },
  "test6773" : {
    "methodSignature" : "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2)",
    "methodName" : "isSameLocalTime",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6773() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(3, 1969, 1969, (-1), (-105));\n    Calendar calendar0 = DateUtils.truncate((Calendar) mockGregorianCalendar0, 0);\n    boolean boolean0 = DateUtils.isSameLocalTime(calendar0, mockGregorianCalendar0);\n}",
    "testName" : "test6773"
  },
  "test7785" : {
    "methodSignature" : "public static boolean isSameInstant(Date date1, Date date2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7785() throws Throwable {\n    DateUtils.isSameInstant((Date) null, (Date) null);\n}",
    "testName" : "test7785"
  },
  "test95108" : {
    "methodSignature" : "public static Iterator iterator(Object focus, int rangeStyle)",
    "methodName" : "iterator",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test95108() throws Throwable {\n    DateUtils dateUtils0 = new DateUtils();\n    DateUtils.iterator((Object) dateUtils0, 0);\n}",
    "testName" : "test95108"
  },
  "test7583" : {
    "methodSignature" : "public static boolean isSameInstant(Date date1, Date date2)",
    "methodName" : "isSameInstant",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test7583() throws Throwable {\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(1990, (-1306), 1990);\n    Date date0 = mockGregorianCalendar0.getGregorianChange();\n    DateUtils.isSameInstant(date0, (Date) null);\n}",
    "testName" : "test7583"
  },
  "test6570" : {
    "methodSignature" : "public static Date parseDate(String str, String[] parsePatterns) throws ParseException",
    "methodName" : "parseDate",
    "className" : "org.apache.commons.lang.time.DateUtils",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test6570() throws Throwable {\n    String[] stringArray0 = new String[4];\n    DateUtils.parseDate((String) null, stringArray0);\n}",
    "testName" : "test6570"
  }
}