{
  "test46809" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46809() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    String string0 = locale0.getScript();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 0, timeZone0, locale0);\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getTimeInstance(2, locale0);\n    fastDateFormat2.getMaxLengthEstimate();\n}",
    "testName" : "test46809"
  },
  "test741100" : {
    "methodSignature" : "protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "FastDateFormat",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test741100() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = null;\n    fastDateFormat0 = new FastDateFormat(\"M|BT^1J4O~QX\", timeZone0, locale0);\n}",
    "testName" : "test741100"
  },
  "test0361" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0361() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"H,'-ra^I)\", (TimeZone) null);\n}",
    "testName" : "test0361"
  },
  "test46801" : {
    "methodSignature" : "public static FastDateFormat getTimeInstance(int style, Locale locale)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46801() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    String string0 = locale0.getScript();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 0, timeZone0, locale0);\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getTimeInstance(2, locale0);\n}",
    "testName" : "test46801"
  },
  "test601044" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test601044() throws Throwable {\n    FastDateFormat.getInstance(\"U Pf@n!++9`AT0]l?\");\n}",
    "testName" : "test601044"
  },
  "test20410" : {
    "methodSignature" : "public static FastDateFormat getTimeInstance(int style, Locale locale)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test20410() throws Throwable {\n    Locale locale0 = Locale.ITALIAN;\n    FastDateFormat.getTimeInstance(137, locale0);\n}",
    "testName" : "test20410"
  },
  "test0480" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0480() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"|\", locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test0480"
  },
  "test0360" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0360() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"H,'-ra^I)\", (TimeZone) null);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test0360"
  },
  "test0481" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0481() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"|\", locale0);\n}",
    "testName" : "test0481"
  },
  "test821108" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test821108() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    fastDateFormat0.hashCode();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test821108"
  },
  "test39601" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39601() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(3, timeZone0);\n    boolean boolean0 = fastDateFormat1.equals(fastDateFormat0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test39601"
  },
  "test0252" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0252() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-237), \"}63CIv2\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test0252"
  },
  "test0253" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0253() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-237), \"}63CIv2\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test0253"
  },
  "test0254" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0254() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-237), \"}63CIv2\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale0);\n}",
    "testName" : "test0254"
  },
  "test06100" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06100() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, \"z@9R#W8%Q&dA}l\\\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(2, (TimeZone) simpleTimeZone0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test06100"
  },
  "test06102" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, TimeZone timeZone)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06102() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, \"z@9R#W8%Q&dA}l\\\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(2, (TimeZone) simpleTimeZone0);\n}",
    "testName" : "test06102"
  },
  "test06101" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06101() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2, \"z@9R#W8%Q&dA}l\\\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(2, (TimeZone) simpleTimeZone0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test06101"
  },
  "test25435" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test25435() throws Throwable {\n    FastDateFormat.getInstance((String) null);\n}",
    "testName" : "test25435"
  },
  "test641062" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test641062() throws Throwable {\n    FastDateFormat.getInstance(\"11:59:59 PM\");\n}",
    "testName" : "test641062"
  },
  "test901119" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test901119() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"2014\\uB144 2\\uC6D4 14\\uC77C \\uAE08\\uC694\\uC77C\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"2014\\uB144 2\\uC6D4 14\\uC77C \\uAE08\\uC694\\uC77C\", timeZone0, locale0);\n}",
    "testName" : "test901119"
  },
  "test49990" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test49990() throws Throwable {\n    Locale locale0 = new Locale(\"rbcKCO;btHtobV3tIOd\");\n    FastDateFormat.getInstance(\"rbcKCO;btHtobV3tIOd\", (TimeZone) null, locale0);\n}",
    "testName" : "test49990"
  },
  "test10190" : {
    "methodSignature" : "public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test10190() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    StringBuffer stringBuffer0 = new StringBuffer();\n    Locale locale0 = Locale.TAIWAN;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Object) mockGregorianCalendar0, stringBuffer0, fieldPosition0);\n}",
    "testName" : "test10190"
  },
  "test10192" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test10192() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    StringBuffer stringBuffer0 = new StringBuffer();\n    Locale locale0 = Locale.TAIWAN;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Object) mockGregorianCalendar0, stringBuffer0, fieldPosition0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test10192"
  },
  "test10193" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test10193() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    StringBuffer stringBuffer0 = new StringBuffer();\n    Locale locale0 = Locale.TAIWAN;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Object) mockGregorianCalendar0, stringBuffer0, fieldPosition0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test10193"
  },
  "test12253" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12253() throws Throwable {\n    Locale locale0 = Locale.FRANCE;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test12253"
  },
  "test17385" : {
    "methodSignature" : "static String getTimeZoneDisplay(TimeZone tz, boolean daylight, int style, Locale locale)",
    "methodName" : "getTimeZoneDisplay",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test17385() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat.getTimeZoneDisplay((TimeZone) null, false, 0, locale0);\n}",
    "testName" : "test17385"
  },
  "test681083" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test681083() throws Throwable {\n    Locale locale0 = Locale.JAPANESE;\n    FastDateFormat.getInstance(\"4Ki^Y$-|AR[0?\\\"0\", locale0);\n}",
    "testName" : "test681083"
  },
  "test12252" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12252() throws Throwable {\n    Locale locale0 = Locale.FRANCE;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test12252"
  },
  "test12254" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12254() throws Throwable {\n    Locale locale0 = Locale.FRANCE;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n}",
    "testName" : "test12254"
  },
  "test39614" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39614() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(3, timeZone0);\n    boolean boolean0 = fastDateFormat1.equals(fastDateFormat0);\n    fastDateFormat0.equals((Object) fastDateFormat1);\n}",
    "testName" : "test39614"
  },
  "test12259" : {
    "methodSignature" : "public String format(long millis)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12259() throws Throwable {\n    Locale locale0 = Locale.FRANCE;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    String string0 = fastDateFormat0.format(1L);\n}",
    "testName" : "test12259"
  },
  "test47919" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47919() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test47919"
  },
  "test39615" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39615() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(3, timeZone0);\n    boolean boolean0 = fastDateFormat1.equals(fastDateFormat0);\n    fastDateFormat1.equals((Object) fastDateFormat0);\n}",
    "testName" : "test39615"
  },
  "test09162" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09162() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    String string0 = fastDateFormat0.format((Calendar) null);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test09162"
  },
  "test46827" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46827() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    String string0 = locale0.getScript();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 0, timeZone0, locale0);\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getTimeInstance(2, locale0);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getInstance();\n    fastDateFormat3.equals((Object) fastDateFormat0);\n}",
    "testName" : "test46827"
  },
  "test45737" : {
    "methodSignature" : "protected String parseToken(String pattern, int[] indexRef)",
    "methodName" : "parseToken",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test45737() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    int[] intArray0 = new int[9];\n    String string0 = fastDateFormat0.parseToken(\"United Kingdom\", intArray0);\n}",
    "testName" : "test45737"
  },
  "test46829" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46829() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    String string0 = locale0.getScript();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 0, timeZone0, locale0);\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getTimeInstance(2, locale0);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getInstance();\n    fastDateFormat3.equals((Object) fastDateFormat1);\n}",
    "testName" : "test46829"
  },
  "test911120" : {
    "methodSignature" : "public String format(Date date)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test911120() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"1/1/70 12:00 AM\");\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(3, 1, timeZone0, locale0);\n    MockDate mockDate0 = new MockDate();\n    String string0 = fastDateFormat0.format((Date) mockDate0);\n}",
    "testName" : "test911120"
  },
  "test09161" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09161() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    String string0 = fastDateFormat0.format((Calendar) null);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test09161"
  },
  "test46828" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46828() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    String string0 = locale0.getScript();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 0, timeZone0, locale0);\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getTimeInstance(2, locale0);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getInstance();\n    fastDateFormat3.equals((Object) fastDateFormat2);\n}",
    "testName" : "test46828"
  },
  "test46822" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46822() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    String string0 = locale0.getScript();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 0, timeZone0, locale0);\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getTimeInstance(2, locale0);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getInstance();\n    fastDateFormat3.getPattern();\n}",
    "testName" : "test46822"
  },
  "test46821" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46821() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    String string0 = locale0.getScript();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 0, timeZone0, locale0);\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getTimeInstance(2, locale0);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getInstance();\n    fastDateFormat3.getMaxLengthEstimate();\n}",
    "testName" : "test46821"
  },
  "test781104" : {
    "methodSignature" : "public String format(Calendar calendar)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test781104() throws Throwable {\n    Locale locale0 = Locale.JAPANESE;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(2, 3536, 42);\n    String string0 = fastDateFormat0.format((Calendar) mockGregorianCalendar0);\n}",
    "testName" : "test781104"
  },
  "test891118" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test891118() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    String string0 = fastDateFormat0.getPattern();\n}",
    "testName" : "test891118"
  },
  "test30476" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, Locale locale)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test30476() throws Throwable {\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat.getDateInstance(92, locale0);\n}",
    "testName" : "test30476"
  },
  "test12266" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12266() throws Throwable {\n    Locale locale0 = Locale.FRANCE;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    String string0 = fastDateFormat0.format(1L);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test12266"
  },
  "test551024" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test551024() throws Throwable {\n    Locale locale0 = Locale.US;\n    FastDateFormat.getInstance(\">fSxx\", (TimeZone) null, locale0);\n}",
    "testName" : "test551024"
  },
  "test12267" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12267() throws Throwable {\n    Locale locale0 = Locale.FRANCE;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    String string0 = fastDateFormat0.format(1L);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test12267"
  },
  "test39602" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39602() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(3, timeZone0);\n    boolean boolean0 = fastDateFormat1.equals(fastDateFormat0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test39602"
  },
  "test09153" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09153() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test09153"
  },
  "test39605" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39605() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(3, timeZone0);\n    boolean boolean0 = fastDateFormat1.equals(fastDateFormat0);\n    fastDateFormat1.getPattern();\n}",
    "testName" : "test39605"
  },
  "test09154" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09154() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n}",
    "testName" : "test09154"
  },
  "test39604" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39604() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(3, timeZone0);\n    boolean boolean0 = fastDateFormat1.equals(fastDateFormat0);\n    fastDateFormat1.getMaxLengthEstimate();\n}",
    "testName" : "test39604"
  },
  "test46816" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46816() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    String string0 = locale0.getScript();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 0, timeZone0, locale0);\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getTimeInstance(2, locale0);\n    fastDateFormat2.equals((Object) fastDateFormat1);\n}",
    "testName" : "test46816"
  },
  "test09152" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09152() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test09152"
  },
  "test46815" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46815() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    String string0 = locale0.getScript();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 0, timeZone0, locale0);\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getTimeInstance(2, locale0);\n    fastDateFormat2.equals((Object) fastDateFormat0);\n}",
    "testName" : "test46815"
  },
  "test14328" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14328() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test14328"
  },
  "test46818" : {
    "methodSignature" : "public static FastDateFormat getInstance()",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46818() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    String string0 = locale0.getScript();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 0, timeZone0, locale0);\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getTimeInstance(2, locale0);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getInstance();\n}",
    "testName" : "test46818"
  },
  "test14329" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14329() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test14329"
  },
  "test47902" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47902() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test47902"
  },
  "test47901" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47901() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test47901"
  },
  "test09159" : {
    "methodSignature" : "public String format(Calendar calendar)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09159() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    String string0 = fastDateFormat0.format((Calendar) null);\n}",
    "testName" : "test09159"
  },
  "test21411" : {
    "methodSignature" : "public static FastDateFormat getTimeInstance(int style)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test21411() throws Throwable {\n    FastDateFormat.getTimeInstance(1437);\n}",
    "testName" : "test21411"
  },
  "test46810" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46810() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    String string0 = locale0.getScript();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 0, timeZone0, locale0);\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getTimeInstance(2, locale0);\n    fastDateFormat2.getPattern();\n}",
    "testName" : "test46810"
  },
  "test50998" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test50998() throws Throwable {\n    Locale locale0 = Locale.CANADA_FRENCH;\n    FastDateFormat.getInstance(\"3zq\", locale0);\n}",
    "testName" : "test50998"
  },
  "test14330" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14330() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n}",
    "testName" : "test14330"
  },
  "test37553" : {
    "methodSignature" : "protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "FastDateFormat",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test37553() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = null;\n    fastDateFormat0 = new FastDateFormat(\"kzU*z\", timeZone0, (Locale) null);\n}",
    "testName" : "test37553"
  },
  "test40625" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test40625() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    boolean boolean0 = fastDateFormat0.equals(fastDateFormat0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test40625"
  },
  "test40624" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test40624() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    boolean boolean0 = fastDateFormat0.equals(fastDateFormat0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test40624"
  },
  "test14335" : {
    "methodSignature" : "protected String parseToken(String pattern, int[] indexRef)",
    "methodName" : "parseToken",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14335() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    int[] intArray0 = new int[4];\n    fastDateFormat0.parseToken(\"\", intArray0);\n}",
    "testName" : "test14335"
  },
  "test40623" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test40623() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    boolean boolean0 = fastDateFormat0.equals(fastDateFormat0);\n}",
    "testName" : "test40623"
  },
  "test651063" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test651063() throws Throwable {\n    FastDateFormat.getInstance(\"Ohs\", (Locale) null);\n}",
    "testName" : "test651063"
  },
  "test47933" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, TimeZone timeZone)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47933() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(1, 0, timeZone1);\n}",
    "testName" : "test47933"
  },
  "test47931" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47931() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    fastDateFormat1.equals((Object) fastDateFormat0);\n}",
    "testName" : "test47931"
  },
  "test751101" : {
    "methodSignature" : "public String format(long millis)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test751101() throws Throwable {\n    Locale locale0 = Locale.JAPANESE;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);\n    String string0 = fastDateFormat0.format((long) 42);\n}",
    "testName" : "test751101"
  },
  "test43697" : {
    "methodSignature" : "public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test43697() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    ParsePosition parsePosition0 = new ParsePosition(3);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"WoF\");\n    FieldPosition fieldPosition0 = new FieldPosition(0);\n    fastDateFormat0.format((Object) parsePosition0, stringBuffer0, fieldPosition0);\n}",
    "testName" : "test43697"
  },
  "test541016" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test541016() throws Throwable {\n    FastDateFormat.getInstance(\"giapponese\");\n}",
    "testName" : "test541016"
  },
  "test51999" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test51999() throws Throwable {\n    FastDateFormat.getInstance(\"(mplnD\");\n}",
    "testName" : "test51999"
  },
  "test671075" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test671075() throws Throwable {\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat.getInstance(\"LNFm7E%BIjN\", locale0);\n}",
    "testName" : "test671075"
  },
  "test721098" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test721098() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"FastDateFormat[h:mm a]\");\n    Locale locale0 = Locale.FRANCE;\n    FastDateFormat.getInstance(\"FastDateFormat[h:mm a]\", timeZone0, locale0);\n}",
    "testName" : "test721098"
  },
  "test33520" : {
    "methodSignature" : "public String format(Date date)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33520() throws Throwable {\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    fastDateFormat0.format((Date) null);\n}",
    "testName" : "test33520"
  },
  "test47922" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47922() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    fastDateFormat1.getPattern();\n}",
    "testName" : "test47922"
  },
  "test581033" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test581033() throws Throwable {\n    FastDateFormat.getInstance(\"Wednesday, April 16, 0346 4:01:00 PM\");\n}",
    "testName" : "test581033"
  },
  "test811107" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test811107() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    Long long0 = new Long(1333L);\n    boolean boolean0 = fastDateFormat0.equals(long0);\n}",
    "testName" : "test811107"
  },
  "test45741" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test45741() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    int[] intArray0 = new int[9];\n    String string0 = fastDateFormat0.parseToken(\"United Kingdom\", intArray0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test45741"
  },
  "test47920" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47920() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test47920"
  },
  "test45740" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test45740() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    int[] intArray0 = new int[9];\n    String string0 = fastDateFormat0.parseToken(\"United Kingdom\", intArray0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test45740"
  },
  "test47921" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47921() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    fastDateFormat1.getMaxLengthEstimate();\n}",
    "testName" : "test47921"
  },
  "test18395" : {
    "methodSignature" : "public static FastDateFormat getTimeInstance(int style, TimeZone timeZone, Locale locale)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test18395() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat.getTimeInstance(1342, timeZone0, locale0);\n}",
    "testName" : "test18395"
  },
  "test26449" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, TimeZone timeZone, Locale locale)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test26449() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(1314, \"No date time pattern for locale: \");\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat.getDateTimeInstance(3, 830, (TimeZone) simpleTimeZone0, locale0);\n}",
    "testName" : "test26449"
  },
  "test31477" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test31477() throws Throwable {\n    FastDateFormat.getDateInstance(3153);\n}",
    "testName" : "test31477"
  },
  "test38568" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test38568() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    MockDate mockDate0 = new MockDate((-2233), 2, 0);\n    StringBuffer stringBuffer0 = new StringBuffer();\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test38568"
  },
  "test0586" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0586() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"h:mm a\");\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test0586"
  },
  "test38569" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test38569() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    MockDate mockDate0 = new MockDate((-2233), 2, 0);\n    StringBuffer stringBuffer0 = new StringBuffer();\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    mockDate0.toString();\n}",
    "testName" : "test38569"
  },
  "test0587" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0587() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"h:mm a\");\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test0587"
  },
  "test0588" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0588() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"h:mm a\");\n}",
    "testName" : "test0588"
  },
  "test22419" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22419() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"xc)7)F1UEw)DV[lb\");\n    FastDateFormat.getInstance((String) null, (TimeZone) null, locale0);\n}",
    "testName" : "test22419"
  },
  "test47959" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47959() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(1, 0, timeZone1);\n    fastDateFormat0.equals((Object) fastDateFormat1);\n}",
    "testName" : "test47959"
  },
  "test791105" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test791105() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"2014\\uB144 2\\uC6D4 14\\uC77C \\uAE08\\uC694\\uC77C\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test791105"
  },
  "test47960" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47960() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(1, 0, timeZone1);\n    fastDateFormat2.equals((Object) fastDateFormat0);\n}",
    "testName" : "test47960"
  },
  "test47961" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47961() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(1, 0, timeZone1);\n    fastDateFormat2.equals((Object) fastDateFormat1);\n}",
    "testName" : "test47961"
  },
  "test08143" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08143() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    MockDate mockDate0 = new MockDate((-845), 1, 2605, 2605, 13, 1);\n    String string0 = fastDateFormat0.format((Date) mockDate0);\n    mockDate0.toString();\n}",
    "testName" : "test08143"
  },
  "test08141" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08141() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    MockDate mockDate0 = new MockDate((-845), 1, 2605, 2605, 13, 1);\n    String string0 = fastDateFormat0.format((Date) mockDate0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test08141"
  },
  "test08142" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08142() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    MockDate mockDate0 = new MockDate((-845), 1, 2605, 2605, 13, 1);\n    String string0 = fastDateFormat0.format((Date) mockDate0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test08142"
  },
  "test10202" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test10202() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    StringBuffer stringBuffer0 = new StringBuffer();\n    Locale locale0 = Locale.TAIWAN;\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Object) mockGregorianCalendar0, stringBuffer0, fieldPosition0);\n    mockGregorianCalendar0.toString();\n}",
    "testName" : "test10202"
  },
  "test08140" : {
    "methodSignature" : "public String format(Date date)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08140() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    MockDate mockDate0 = new MockDate((-845), 1, 2605, 2605, 13, 1);\n    String string0 = fastDateFormat0.format((Date) mockDate0);\n}",
    "testName" : "test08140"
  },
  "test47949" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47949() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(1, 0, timeZone1);\n    fastDateFormat2.getMaxLengthEstimate();\n}",
    "testName" : "test47949"
  },
  "test47946" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47946() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(1, 0, timeZone1);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test47946"
  },
  "test47947" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47947() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(1, 0, timeZone1);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test47947"
  },
  "test0479" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0479() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"|\", locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test0479"
  },
  "test731099" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test731099() throws Throwable {\n    FastDateFormat.getInstance(\"`yEj]PggJm<c[*}8F\");\n}",
    "testName" : "test731099"
  },
  "test0359" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0359() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"H,'-ra^I)\", (TimeZone) null);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test0359"
  },
  "test0119" : {
    "methodSignature" : "static String getTimeZoneDisplay(TimeZone tz, boolean daylight, int style, Locale locale)",
    "methodName" : "getTimeZoneDisplay",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0119() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"a3i%lC&UrL#\\\"u8FX\");\n    Locale locale0 = Locale.ENGLISH;\n    String string0 = FastDateFormat.getTimeZoneDisplay(timeZone0, true, 0, locale0);\n}",
    "testName" : "test0119"
  },
  "test47950" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47950() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(1, 0, timeZone1);\n    fastDateFormat2.getPattern();\n}",
    "testName" : "test47950"
  },
  "test591043" : {
    "methodSignature" : "protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "FastDateFormat",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test591043() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.JAPANESE;\n    FastDateFormat fastDateFormat0 = null;\n    fastDateFormat0 = new FastDateFormat(\".H)`V\", timeZone0, locale0);\n}",
    "testName" : "test591043"
  },
  "test611052" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test611052() throws Throwable {\n    Locale locale0 = Locale.UK;\n    FastDateFormat.getInstance(\"%TKcuHDi?gj>n\", locale0);\n}",
    "testName" : "test611052"
  },
  "test13288" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13288() throws Throwable {\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n}",
    "testName" : "test13288"
  },
  "test38565" : {
    "methodSignature" : "public StringBuffer format(Date date, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test38565() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    MockDate mockDate0 = new MockDate((-2233), 2, 0);\n    StringBuffer stringBuffer0 = new StringBuffer();\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n}",
    "testName" : "test38565"
  },
  "test13286" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13286() throws Throwable {\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test13286"
  },
  "test13287" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13287() throws Throwable {\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test13287"
  },
  "test38567" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test38567() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    MockDate mockDate0 = new MockDate((-2233), 2, 0);\n    StringBuffer stringBuffer0 = new StringBuffer();\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test38567"
  },
  "test08132" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08132() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test08132"
  },
  "test08133" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08133() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test08133"
  },
  "test15349" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test15349() throws Throwable {\n    Locale locale0 = Locale.JAPANESE;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test15349"
  },
  "test661067" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test661067() throws Throwable {\n    ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(0);\n    TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);\n    FastDateFormat.getInstance(\"No date time pattern for locale: \", timeZone0, (Locale) null);\n}",
    "testName" : "test661067"
  },
  "test47979" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47979() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(1, 0, timeZone1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getTimeInstance(2, locale0);\n    fastDateFormat3.equals((Object) fastDateFormat1);\n}",
    "testName" : "test47979"
  },
  "test841111" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test841111() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test841111"
  },
  "test47978" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47978() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(1, 0, timeZone1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getTimeInstance(2, locale0);\n    fastDateFormat3.equals((Object) fastDateFormat2);\n}",
    "testName" : "test47978"
  },
  "test27457" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, Locale locale)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27457() throws Throwable {\n    Locale locale0 = Locale.ITALIAN;\n    FastDateFormat.getDateTimeInstance(6, 6, locale0);\n}",
    "testName" : "test27457"
  },
  "test08134" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08134() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n}",
    "testName" : "test08134"
  },
  "test47973" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47973() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(1, 0, timeZone1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getTimeInstance(2, locale0);\n    fastDateFormat3.getPattern();\n}",
    "testName" : "test47973"
  },
  "test46771" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46771() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    String string0 = locale0.getScript();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 0, timeZone0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test46771"
  },
  "test47982" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, TimeZone timeZone)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47982() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(1, 0, timeZone1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getTimeInstance(2, locale0);\n    FastDateFormat.getDateTimeInstance((-5153), 0, timeZone1);\n}",
    "testName" : "test47982"
  },
  "test47862" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47862() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n}",
    "testName" : "test47862"
  },
  "test46773" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, TimeZone timeZone, Locale locale)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46773() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    String string0 = locale0.getScript();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 0, timeZone0, locale0);\n}",
    "testName" : "test46773"
  },
  "test47980" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47980() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(1, 0, timeZone1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getTimeInstance(2, locale0);\n    fastDateFormat3.equals((Object) fastDateFormat0);\n}",
    "testName" : "test47980"
  },
  "test46772" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46772() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    String string0 = locale0.getScript();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 0, timeZone0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test46772"
  },
  "test15351" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, Locale locale)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test15351() throws Throwable {\n    Locale locale0 = Locale.JAPANESE;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);\n}",
    "testName" : "test15351"
  },
  "test15350" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test15350() throws Throwable {\n    Locale locale0 = Locale.JAPANESE;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test15350"
  },
  "test15356" : {
    "methodSignature" : "protected String parseToken(String pattern, int[] indexRef)",
    "methodName" : "parseToken",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test15356() throws Throwable {\n    Locale locale0 = Locale.JAPANESE;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);\n    int[] intArray0 = new int[2];\n    fastDateFormat0.parseToken((String) null, intArray0);\n}",
    "testName" : "test15356"
  },
  "test13297" : {
    "methodSignature" : "public static FastDateFormat getInstance()",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13297() throws Throwable {\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    Calendar calendar0 = MockCalendar.getInstance();\n}",
    "testName" : "test13297"
  },
  "test34531" : {
    "methodSignature" : "public StringBuffer format(Calendar calendar, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34531() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"G(XT\");\n    fastDateFormat0.format((Calendar) null, stringBuffer0);\n}",
    "testName" : "test34531"
  },
  "test32493" : {
    "methodSignature" : "public static FastDateFormat getTimeInstance(int style, Locale locale)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test32493() throws Throwable {\n    Locale locale0 = Locale.ENGLISH;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);\n}",
    "testName" : "test32493"
  },
  "test32492" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test32492() throws Throwable {\n    Locale locale0 = Locale.ENGLISH;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test32492"
  },
  "test531015" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test531015() throws Throwable {\n    Locale locale0 = Locale.FRENCH;\n    FastDateFormat.getInstance(\";Ml6wz\", locale0);\n}",
    "testName" : "test531015"
  },
  "test881117" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test881117() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    ParsePosition parsePosition0 = new ParsePosition((-503));\n    fastDateFormat0.parseObject(\"1/1/70 12:00 AM\", parsePosition0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test881117"
  },
  "test32491" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test32491() throws Throwable {\n    Locale locale0 = Locale.ENGLISH;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test32491"
  },
  "test47849" : {
    "methodSignature" : "protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "FastDateFormat",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47849() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n}",
    "testName" : "test47849"
  },
  "test47847" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47847() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test47847"
  },
  "test47848" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47848() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test47848"
  },
  "test711088" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test711088() throws Throwable {\n    FastDateFormat.getInstance(\"G(XT\");\n}",
    "testName" : "test711088"
  },
  "test47963" : {
    "methodSignature" : "public static FastDateFormat getTimeInstance(int style, Locale locale)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47963() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(1, 0, timeZone1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getTimeInstance(2, locale0);\n}",
    "testName" : "test47963"
  },
  "test47972" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47972() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(1, 0, timeZone1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getTimeInstance(2, locale0);\n    fastDateFormat3.getMaxLengthEstimate();\n}",
    "testName" : "test47972"
  },
  "test761102" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test761102() throws Throwable {\n    Locale locale0 = Locale.JAPANESE;\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"#,]@?B>:d+4\", 1, 0, 2, 0, 3, 2, 3, 2, 2);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(3, (TimeZone) simpleTimeZone0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test761102"
  },
  "test801106" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, TimeZone timeZone)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test801106() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-900), \"\");\n    FastDateFormat.getDateInstance(1745, (TimeZone) simpleTimeZone0);\n}",
    "testName" : "test801106"
  },
  "test571032" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test571032() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(1, \"HbP.1v0?>bzM\", 1, 1, 0, 1, 0, 0, 0, 956);\n    FastDateFormat.getInstance(\"HbP.1v0?>bzM\", (TimeZone) simpleTimeZone0);\n}",
    "testName" : "test571032"
  },
  "test46789" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46789() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    String string0 = locale0.getScript();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 0, timeZone0, locale0);\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    fastDateFormat1.getPattern();\n}",
    "testName" : "test46789"
  },
  "test47878" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47878() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test47878"
  },
  "test46788" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46788() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    String string0 = locale0.getScript();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 0, timeZone0, locale0);\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test46788"
  },
  "test46787" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46787() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    String string0 = locale0.getScript();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 0, timeZone0, locale0);\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test46787"
  },
  "test009" : {
    "methodSignature" : "static String getTimeZoneDisplay(TimeZone tz, boolean daylight, int style, Locale locale)",
    "methodName" : "getTimeZoneDisplay",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test009() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"a3i%lC&UrL#\\\"u8FX\");\n    Locale locale0 = Locale.ENGLISH;\n    FastDateFormat.getTimeZoneDisplay(timeZone0, true, (-13), locale0);\n}",
    "testName" : "test009"
  },
  "test23426" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test23426() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"dy{;4>3.*\");\n    FastDateFormat.getInstance((String) null, (TimeZone) simpleTimeZone0);\n}",
    "testName" : "test23426"
  },
  "test46790" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46790() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    String string0 = locale0.getScript();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 0, timeZone0, locale0);\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    fastDateFormat1.getMaxLengthEstimate();\n}",
    "testName" : "test46790"
  },
  "test39588" : {
    "methodSignature" : "public static FastDateFormat getTimeInstance(int style, TimeZone timeZone)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39588() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(3, timeZone0);\n}",
    "testName" : "test39588"
  },
  "test32499" : {
    "methodSignature" : "public StringBuffer format(Date date, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test32499() throws Throwable {\n    Locale locale0 = Locale.ENGLISH;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);\n    MockDate mockDate0 = new MockDate(0, 0, (-892), (-1777), 0);\n    fastDateFormat0.format((Date) mockDate0, (StringBuffer) null);\n}",
    "testName" : "test32499"
  },
  "test41645" : {
    "methodSignature" : "public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test41645() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    StringBuffer stringBuffer0 = new StringBuffer(2);\n    FieldPosition fieldPosition0 = new FieldPosition(3);\n    fastDateFormat0.format((Object) null, stringBuffer0, fieldPosition0);\n}",
    "testName" : "test41645"
  },
  "test28458" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test28458() throws Throwable {\n    FastDateFormat.getDateTimeInstance((-761), (-761));\n}",
    "testName" : "test28458"
  },
  "test47870" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47870() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test47870"
  },
  "test47871" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47871() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test47871"
  },
  "test621053" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test621053() throws Throwable {\n    FastDateFormat.getInstance(\"s:dSe.[_\");\n}",
    "testName" : "test621053"
  },
  "test35539" : {
    "methodSignature" : "public StringBuffer format(long millis, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35539() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    fastDateFormat0.format((long) 43, (StringBuffer) null);\n}",
    "testName" : "test35539"
  },
  "test07121" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07121() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    StringBuffer stringBuffer0 = new StringBuffer();\n    MockDate mockDate0 = new MockDate(2, 90, 3, 58, 1, 2623);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test07121"
  },
  "test07120" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07120() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    StringBuffer stringBuffer0 = new StringBuffer();\n    MockDate mockDate0 = new MockDate(2, 90, 3, 58, 1, 2623);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test07120"
  },
  "test11226" : {
    "methodSignature" : "public StringBuffer format(long millis, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11226() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    StringBuffer stringBuffer0 = new StringBuffer();\n    StringBuffer stringBuffer1 = fastDateFormat0.format(0L, stringBuffer0);\n}",
    "testName" : "test11226"
  },
  "test11229" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11229() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    StringBuffer stringBuffer0 = new StringBuffer();\n    StringBuffer stringBuffer1 = fastDateFormat0.format(0L, stringBuffer0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test11229"
  },
  "test11228" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11228() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    StringBuffer stringBuffer0 = new StringBuffer();\n    StringBuffer stringBuffer1 = fastDateFormat0.format(0L, stringBuffer0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test11228"
  },
  "test07124" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07124() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    StringBuffer stringBuffer0 = new StringBuffer();\n    MockDate mockDate0 = new MockDate(2, 90, 3, 58, 1, 2623);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    mockDate0.toString();\n}",
    "testName" : "test07124"
  },
  "test691086" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test691086() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"No date time pattern for locale: \");\n    FastDateFormat.getInstance(\"JS@oDv3U,B \", timeZone0);\n}",
    "testName" : "test691086"
  },
  "test561025" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test561025() throws Throwable {\n    FastDateFormat.getInstance(\"c{Di8!]]p>|\");\n}",
    "testName" : "test561025"
  },
  "test521007" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test521007() throws Throwable {\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat.getInstance(\"org.apache.commons.lang3.time.FastDateFormat$TimeZoneNumberRule\", locale0);\n}",
    "testName" : "test521007"
  },
  "test701087" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test701087() throws Throwable {\n    FastDateFormat.getInstance(\"I\");\n}",
    "testName" : "test701087"
  },
  "test631061" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test631061() throws Throwable {\n    Locale locale0 = Locale.TAIWAN;\n    FastDateFormat.getInstance(\"Run?r}#/T=HiSX/:5\", locale0);\n}",
    "testName" : "test631061"
  },
  "test07118" : {
    "methodSignature" : "public StringBuffer format(Date date, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07118() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    StringBuffer stringBuffer0 = new StringBuffer();\n    MockDate mockDate0 = new MockDate(2, 90, 3, 58, 1, 2623);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n}",
    "testName" : "test07118"
  },
  "test47887" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47887() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test47887"
  },
  "test771103" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test771103() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test771103"
  },
  "test46799" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46799() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    String string0 = locale0.getScript();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 0, timeZone0, locale0);\n    FastDateFormat fastDateFormat1 = (FastDateFormat) fastDateFormat0.clone();\n    fastDateFormat1.equals((Object) fastDateFormat0);\n}",
    "testName" : "test46799"
  },
  "test47886" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47886() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test47886"
  },
  "test48983" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test48983() throws Throwable {\n    FastDateFormat.getInstance(\"2vUxJS?<+8SQ/ZS\");\n}",
    "testName" : "test48983"
  },
  "test47892" : {
    "methodSignature" : "public TimeZone getTimeZone()",
    "methodName" : "getTimeZone",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test47892() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", timeZone0, locale0);\n    String string0 = locale0.getScript();\n    String string1 = fastDateFormat0.toString();\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n}",
    "testName" : "test47892"
  },
  "test07109" : {
    "methodSignature" : "public static FastDateFormat getInstance()",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07109() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n}",
    "testName" : "test07109"
  },
  "test16372" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, Locale locale)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16372() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, locale0);\n}",
    "testName" : "test16372"
  },
  "test39591" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39591() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(3, timeZone0);\n    fastDateFormat1.getPattern();\n}",
    "testName" : "test39591"
  },
  "test07108" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07108() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test07108"
  },
  "test16371" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16371() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test16371"
  },
  "test39590" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39590() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(3, timeZone0);\n    fastDateFormat1.getMaxLengthEstimate();\n}",
    "testName" : "test39590"
  },
  "test16370" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16370() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test16370"
  },
  "test19402" : {
    "methodSignature" : "public static FastDateFormat getTimeInstance(int style, TimeZone timeZone)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test19402() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(2598, \"pl$GK}pCq!vdu)CCY]\");\n    FastDateFormat.getTimeInstance(15, (TimeZone) simpleTimeZone0);\n}",
    "testName" : "test19402"
  },
  "test39596" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39596() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(3, timeZone0);\n    fastDateFormat1.equals((Object) fastDateFormat0);\n}",
    "testName" : "test39596"
  },
  "test871115" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test871115() throws Throwable {\n    Locale locale0 = Locale.JAPANESE;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);\n    fastDateFormat0.getLocale();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test871115"
  },
  "test39598" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39598() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(3, timeZone0);\n    boolean boolean0 = fastDateFormat1.equals(fastDateFormat0);\n}",
    "testName" : "test39598"
  },
  "test16377" : {
    "methodSignature" : "protected String parseToken(String pattern, int[] indexRef)",
    "methodName" : "parseToken",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16377() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, locale0);\n    int[] intArray0 = new int[0];\n    fastDateFormat0.parseToken(\"\", intArray0);\n}",
    "testName" : "test16377"
  },
  "test13304" : {
    "methodSignature" : "protected StringBuffer applyRules(Calendar calendar, StringBuffer buf)",
    "methodName" : "applyRules",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13304() throws Throwable {\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    Calendar calendar0 = MockCalendar.getInstance();\n    StringWriter stringWriter0 = new StringWriter(87);\n    StringBuffer stringBuffer0 = stringWriter0.getBuffer();\n    StringBuffer stringBuffer1 = fastDateFormat0.applyRules(calendar0, stringBuffer0);\n}",
    "testName" : "test13304"
  },
  "test42664" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test42664() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    Long long0 = new Long(0);\n    StringBuffer stringBuffer0 = new StringBuffer();\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 1084);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Object) long0, stringBuffer0, fieldPosition0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test42664"
  },
  "test42665" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test42665() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    Long long0 = new Long(0);\n    StringBuffer stringBuffer0 = new StringBuffer();\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 1084);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Object) long0, stringBuffer0, fieldPosition0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test42665"
  },
  "test07107" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07107() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test07107"
  },
  "test42662" : {
    "methodSignature" : "public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test42662() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    Long long0 = new Long(0);\n    StringBuffer stringBuffer0 = new StringBuffer();\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 1084);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Object) long0, stringBuffer0, fieldPosition0);\n}",
    "testName" : "test42662"
  },
  "test24434" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test24434() throws Throwable {\n    Locale locale0 = Locale.ENGLISH;\n    FastDateFormat.getInstance((String) null, locale0);\n}",
    "testName" : "test24434"
  },
  "test13312" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13312() throws Throwable {\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    Calendar calendar0 = MockCalendar.getInstance();\n    StringWriter stringWriter0 = new StringWriter(87);\n    StringBuffer stringBuffer0 = stringWriter0.getBuffer();\n    StringBuffer stringBuffer1 = fastDateFormat0.applyRules(calendar0, stringBuffer0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test13312"
  },
  "test13313" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13313() throws Throwable {\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    Calendar calendar0 = MockCalendar.getInstance();\n    StringWriter stringWriter0 = new StringWriter(87);\n    StringBuffer stringBuffer0 = stringWriter0.getBuffer();\n    StringBuffer stringBuffer1 = fastDateFormat0.applyRules(calendar0, stringBuffer0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test13313"
  },
  "test36550" : {
    "methodSignature" : "protected StringBuffer applyRules(Calendar calendar, StringBuffer buf)",
    "methodName" : "applyRules",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36550() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    StringBuffer stringBuffer0 = new StringBuffer();\n    fastDateFormat0.applyRules((Calendar) null, stringBuffer0);\n}",
    "testName" : "test36550"
  },
  "test44715" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44715() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    MockDate mockDate0 = new MockDate();\n    StringBuffer stringBuffer0 = new StringBuffer(97);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Object) mockDate0, stringBuffer0, fieldPosition0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test44715"
  },
  "test44717" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44717() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    MockDate mockDate0 = new MockDate();\n    StringBuffer stringBuffer0 = new StringBuffer(97);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Object) mockDate0, stringBuffer0, fieldPosition0);\n    mockDate0.toString();\n}",
    "testName" : "test44717"
  },
  "test44716" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44716() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    MockDate mockDate0 = new MockDate();\n    StringBuffer stringBuffer0 = new StringBuffer(97);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Object) mockDate0, stringBuffer0, fieldPosition0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test44716"
  },
  "test44713" : {
    "methodSignature" : "public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44713() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    MockDate mockDate0 = new MockDate();\n    StringBuffer stringBuffer0 = new StringBuffer(97);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Object) mockDate0, stringBuffer0, fieldPosition0);\n}",
    "testName" : "test44713"
  },
  "test29468" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, TimeZone timeZone, Locale locale)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test29468() throws Throwable {\n    Locale locale0 = Locale.FRANCE;\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"pattern must not be null\");\n    FastDateFormat.getDateInstance(1270, timeZone0, locale0);\n}",
    "testName" : "test29468"
  }
}