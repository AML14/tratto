project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber(""org.apache.commons.lang.math.NumberUtils"");
    assertFalse(boolean0);
}",0,
project,0,test0011,"public void test0011() throws Throwable {
    byte byte0 = NumberUtils.max((byte) (-57), (byte) 114, (byte) 0);
    assertEquals((byte) 114, byte0);
}",0,assertNotNull(byte0)
project,0,test0022,"public void test0022() throws Throwable {
    byte byte0 = NumberUtils.max((byte) 76, (byte) 76, (byte) 76);
    assertEquals((byte) 76, byte0);
}",0,assertNotNull(byte0)
project,0,test0033,"public void test0033() throws Throwable {
    long long0 = NumberUtils.max(1361L, (-1691L), 855L);
    assertEquals(1361L, long0);
}",0,"assertEquals(0, long0)"
project,0,test0044,"public void test0044() throws Throwable {
    byte byte0 = NumberUtils.min((byte) 0, (byte) 12, (byte) 12);
    assertEquals((byte) 0, byte0);
}",0,assertNotNull(byte0)
project,0,test0055,"public void test0055() throws Throwable {
    int int0 = NumberUtils.min(48, 48, (-2114));
    assertEquals((-2114), int0);
}",0,"assertEquals(0, int0)"
project,0,test0066,"public void test0066() throws Throwable {
    long long0 = NumberUtils.min((-4091L), 0L, 0L);
    assertEquals((-4091L), long0);
}",0,"assertEquals(1, long0)"
project,0,test0077,"public void test0077() throws Throwable {
    double[] doubleArray0 = new double[4];
    doubleArray0[1] = 4595.92841572;
    double double0 = NumberUtils.max(doubleArray0);
    assertEquals(4595.92841572, double0, 0.01);
}",1,
project,0,test0088,"public void test0088() throws Throwable {
    int[] intArray0 = new int[4];
    intArray0[0] = (int) (short) 1283;
    int int0 = NumberUtils.max(intArray0);
    assertEquals(1283, int0);
}",0,"assertEquals(1, int0)"
project,0,test0099,"public void test0099() throws Throwable {
    byte[] byteArray0 = new byte[2];
    byteArray0[0] = (byte) (-63);
    byte byte0 = NumberUtils.min(byteArray0);
    assertEquals((byte) (-63), byte0);
}",0,
project,0,test01010,"public void test01010() throws Throwable {
    double[] doubleArray0 = new double[7];
    double[] doubleArray1 = new double[8];
    boolean boolean0 = NumberUtils.equals(doubleArray0, doubleArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01111,"public void test01111() throws Throwable {
    float[] floatArray0 = new float[2];
    float[] floatArray1 = new float[7];
    boolean boolean0 = NumberUtils.equals(floatArray0, floatArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01212,"public void test01212() throws Throwable {
    long[] longArray0 = new long[6];
    long[] longArray1 = new long[1];
    boolean boolean0 = NumberUtils.equals(longArray0, longArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01313,"public void test01313() throws Throwable {
    int[] intArray0 = new int[14];
    int[] intArray1 = new int[9];
    boolean boolean0 = NumberUtils.equals(intArray0, intArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01414,"public void test01414() throws Throwable {
    short[] shortArray0 = new short[2];
    short[] shortArray1 = new short[2];
    shortArray1[0] = (short) (-2494);
    boolean boolean0 = NumberUtils.equals(shortArray0, shortArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01515,"public void test01515() throws Throwable {
    short[] shortArray0 = new short[8];
    short[] shortArray1 = new short[2];
    boolean boolean0 = NumberUtils.equals(shortArray0, shortArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01616,"public void test01616() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byte[] byteArray1 = new byte[0];
    boolean boolean0 = NumberUtils.equals(byteArray0, byteArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01717,"public void test01717() throws Throwable {
    try {
        NumberUtils.createNumber(""MEA*+9/"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // MEA*+9/ is not a valid number.
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",0,
project,0,test01818,"public void test01818() throws Throwable {
    long long0 = NumberUtils.toLong("""", 0L);
    assertEquals(0L, long0);
}",1,
project,0,test01919,"public void test01919() throws Throwable {
    long long0 = NumberUtils.toLong((String) null, (long) (short) 1098);
    assertEquals(1098L, long0);
}",0,"assertEquals(1, long0)"
project,0,test02020,"public void test02020() throws Throwable {
    int int0 = NumberUtils.toInt("""", 0);
    assertEquals(0, int0);
}",1,
project,0,test02121,"public void test02121() throws Throwable {
    int int0 = NumberUtils.toInt(""Array cannot be empty."", (-2080));
    assertEquals((-2080), int0);
}",0,"assertEquals(0, int0)"
project,0,test02222,"public void test02222() throws Throwable {
    float float0 = NumberUtils.toFloat("""", 0.0F);
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test02323,"public void test02323() throws Throwable {
    float float0 = NumberUtils.toFloat("""", 198.0F);
    assertEquals(198.0F, float0, 0.01F);
}",0,
project,0,test02424,"public void test02424() throws Throwable {
    float float0 = NumberUtils.toFloat(""4F"");
    assertEquals(4.0F, float0, 0.01F);
}",0,
project,0,test02525,"public void test02525() throws Throwable {
    double double0 = NumberUtils.toDouble("""", (-1.0));
    assertEquals((-1.0), double0, 0.01);
}",1,
project,0,test02626,"public void test02626() throws Throwable {
    int int0 = NumberUtils.stringToInt(""4|M"", 0);
    assertEquals(0, int0);
}",1,
project,0,test02727,"public void test02727() throws Throwable {
    int int0 = NumberUtils.stringToInt("""", 2485);
    assertEquals(2485, int0);
}",1,
project,0,test02828,"public void test02828() throws Throwable {
    short[] shortArray0 = new short[4];
    shortArray0[0] = (short) 3726;
    shortArray0[1] = (short) 3726;
    shortArray0[2] = (short) 3726;
    shortArray0[3] = (short) 3726;
    short short0 = NumberUtils.min(shortArray0);
    assertEquals((short) 3726, short0);
}",0,"assertEquals(shortArray0, short0)"
project,0,test02929,"public void test02929() throws Throwable {
    long[] longArray0 = new long[2];
    longArray0[0] = 1L;
    longArray0[1] = 1L;
    long long0 = NumberUtils.min(longArray0);
    assertEquals(1L, long0);
}",0,"assertEquals(1, long0)"
project,0,test03030,"public void test03030() throws Throwable {
    long[] longArray0 = new long[3];
    longArray0[1] = (long) (short) (-1);
    long long0 = NumberUtils.min(longArray0);
    assertEquals((-1L), long0);
}",0,"assertEquals(1, long0)"
project,0,test03131,"public void test03131() throws Throwable {
    int[] intArray0 = new int[1];
    intArray0[0] = 4427;
    int int0 = NumberUtils.min(intArray0);
    assertEquals(4427, int0);
}",1,
project,0,test03232,"public void test03232() throws Throwable {
    float[] floatArray0 = new float[1];
    floatArray0[0] = (float) (byte) 100;
    float float0 = NumberUtils.min(floatArray0);
    assertEquals(100.0F, float0, 0.01F);
}",1,
project,0,test03333,"public void test03333() throws Throwable {
    double[] doubleArray0 = new double[3];
    doubleArray0[0] = (double) (byte) 64;
    doubleArray0[1] = (double) (byte) 64;
    doubleArray0[2] = (double) (byte) 7;
    double double0 = NumberUtils.min(doubleArray0);
    assertEquals(7.0, double0, 0.01);
}",0,
project,0,test03434,"public void test03434() throws Throwable {
    NumberUtils numberUtils0 = new NumberUtils();
    double[] doubleArray0 = new double[2];
    doubleArray0[0] = (double) (float) numberUtils0.FLOAT_MINUS_ONE;
    double double0 = NumberUtils.min(doubleArray0);
    assertEquals((-1.0), double0, 0.01);
}",0,
project,0,test03535,"public void test03535() throws Throwable {
    NumberUtils numberUtils0 = new NumberUtils();
    byte[] byteArray0 = new byte[1];
    byteArray0[0] = (byte) numberUtils0.BYTE_ONE;
    byte byte0 = NumberUtils.min(byteArray0);
    assertEquals((byte) 1, byte0);
}",0,"assertEquals(byteArray0, byte0)"
project,0,test03636,"public void test03636() throws Throwable {
    short short0 = NumberUtils.min((short) 0, (short) 0, (short) 0);
    assertEquals((short) 0, short0);
}",0,
project,0,test03737,"public void test03737() throws Throwable {
    long long0 = NumberUtils.min(395L, 395L, 1L);
    assertEquals(1L, long0);
}",0,"assertEquals(1, long0)"
project,0,test03838,"public void test03838() throws Throwable {
    int int0 = NumberUtils.min(1, 2802, 1);
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test03939,"public void test03939() throws Throwable {
    NumberUtils numberUtils0 = new NumberUtils();
    float float0 = NumberUtils.min(0.0F, 0.0F, (float) numberUtils0.SHORT_ZERO);
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test04040,"public void test04040() throws Throwable {
    float float0 = NumberUtils.min(831.4773F, 831.4773F, 831.4773F);
    assertEquals(831.4773F, float0, 0.01F);
}",0,
project,0,test04141,"public void test04141() throws Throwable {
    double double0 = NumberUtils.min(0.0, 0.0, 0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test04242,"public void test04242() throws Throwable {
    double double0 = NumberUtils.min(1226.7274182748, 2134.6329, (double) 773.0F);
    assertEquals(773.0, double0, 0.01);
}",0,
project,0,test04343,"public void test04343() throws Throwable {
    byte byte0 = NumberUtils.min((byte) 30, (byte) 30, (byte) 30);
    assertEquals((byte) 30, byte0);
}",0,
project,0,test04444,"public void test04444() throws Throwable {
    short[] shortArray0 = new short[6];
    shortArray0[0] = (short) (-3883);
    shortArray0[1] = (short) (-3141);
    shortArray0[2] = (short) (-2326);
    shortArray0[3] = (short) (-257);
    shortArray0[4] = (short) (-1978);
    shortArray0[5] = (short) (-2011);
    short short0 = NumberUtils.max(shortArray0);
    assertEquals((short) (-257), short0);
}",1,
project,0,test04545,"public void test04545() throws Throwable {
    long[] longArray0 = new long[6];
    longArray0[0] = (long) (short) (-1978);
    longArray0[1] = (long) (short) (-2011);
    longArray0[2] = (long) (short) (-3883);
    longArray0[3] = (long) (short) (-257);
    longArray0[4] = (long) (short) (-3883);
    longArray0[5] = (long) (short) (-257);
    long long0 = NumberUtils.max(longArray0);
    assertEquals((-257L), long0);
}",1,
project,0,test04646,"public void test04646() throws Throwable {
    int[] intArray0 = new int[1];
    intArray0[0] = (-12);
    int int0 = NumberUtils.max(intArray0);
    assertEquals((-12), int0);
}",1,
project,0,test04747,"public void test04747() throws Throwable {
    float[] floatArray0 = new float[3];
    floatArray0[1] = (float) 1;
    float float0 = NumberUtils.max(floatArray0);
    assertEquals(1.0F, float0, 0.01F);
}",1,
project,0,test04848,"public void test04848() throws Throwable {
    float[] floatArray0 = new float[1];
    floatArray0[0] = (float) (byte) (-80);
    float float0 = NumberUtils.max(floatArray0);
    assertEquals((-80.0F), float0, 0.01F);
}",1,
project,0,test04949,"public void test04949() throws Throwable {
    double[] doubleArray0 = new double[1];
    doubleArray0[0] = (double) (-3471);
    double double0 = NumberUtils.max(doubleArray0);
    assertEquals((-3471.0), double0, 0.01);
}",1,
project,0,test05050,"public void test05050() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byteArray0[0] = (byte) (-50);
    byte byte0 = NumberUtils.max(byteArray0);
    assertEquals((byte) (-50), byte0);
}",1,
project,0,test05151,"public void test05151() throws Throwable {
    short short0 = NumberUtils.max((short) (-2774), (short) (-2774), (short) (-2774));
    assertEquals((short) (-2774), short0);
}",0,assertNotNull(short0)
project,0,test05252,"public void test05252() throws Throwable {
    long long0 = NumberUtils.max((-4008L), 0L, (-1180L));
    assertEquals(0L, long0);
}",1,
project,0,test05353,"public void test05353() throws Throwable {
    int int0 = NumberUtils.max((-3556), (-3556), (-3556));
    assertEquals((-3556), int0);
}",0,"assertEquals(0, int0)"
project,0,test05454,"public void test05454() throws Throwable {
    float float0 = NumberUtils.max((-1.0F), 0.0F, (float) 0L);
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test05555,"public void test05555() throws Throwable {
    float float0 = NumberUtils.max((-1682.44F), (-1682.44F), (-1729.969F));
    assertEquals((-1682.44F), float0, 0.01F);
}",0,
project,0,test05656,"public void test05656() throws Throwable {
    double double0 = NumberUtils.max(0.0, 1.0, (double) (byte) 0);
    assertEquals(1.0, double0, 0.01);
}",0,
project,0,test05757,"public void test05757() throws Throwable {
    double double0 = NumberUtils.max((-529.2504864833994), (-529.2504864833994), (-529.2504864833994));
    assertEquals((-529.2504864833994), double0, 0.01);
}",0,
project,0,test05858,"public void test05858() throws Throwable {
    byte byte0 = NumberUtils.max((byte) (-61), (byte) 0, (byte) 0);
    assertEquals((byte) 0, byte0);
}",0,
project,0,test05959,"public void test05959() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.createFloat("" is not a valid number."");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
    }
}",0,
project,0,test06060,"public void test06060() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.createBigDecimal(""-0x#!E/s"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",1,
project,0,test06161,"public void test06161() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.createBigInteger("""");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // Zero length BigInteger
        //
        verifyException(""java.math.BigInteger"", e);
    }
}",0,
project,0,test06262,"public void test06262() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.createLong("".lmr7[."");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // For input string: \"".lmr7[.\""
        //
        verifyException(""java.lang.NumberFormatException"", e);
    }
}",1,
project,0,test06363,"public void test06363() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.createInteger(""A+zgl$t`R' ls4dh"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // For input string: \""A+zgl$t`R' ls4dh\""
        //
        verifyException(""java.lang.NumberFormatException"", e);
    }
}",1,
project,0,test06464,"public void test06464() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.createDouble("""");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
    }
}",1,
project,0,test06565,"public void test06565() throws Throwable {
    Float float0 = NumberUtils.createFloat(""+4d"");
    assertEquals(4.0F, (float) float0, 0.01F);
}",0,
project,0,test06666,"public void test06666() throws Throwable {
    double double0 = NumberUtils.toDouble((String) null, (double) 975);
    assertEquals(975.0, double0, 0.01);
}",0,
project,0,test06767,"public void test06767() throws Throwable {
    double double0 = NumberUtils.toDouble(""qq/|,I(O`@"", (double) 0);
    assertEquals(0.0, double0, 0.01);
}",1,
project,0,test06868,"public void test06868() throws Throwable {
    float float0 = NumberUtils.toFloat("""", (-1.0F));
    assertEquals((-1.0F), float0, 0.01F);
}",0,
project,0,test06969,"public void test06969() throws Throwable {
    float float0 = NumberUtils.toFloat((String) null, (-1.0F));
    assertEquals((-1.0F), float0, 0.01F);
}",0,
project,0,test07070,"public void test07070() throws Throwable {
    long long0 = NumberUtils.toLong((String) null, (-1044L));
    assertEquals((-1044L), long0);
}",0,"assertEquals(0, long0)"
project,0,test07171,"public void test07171() throws Throwable {
    int int0 = NumberUtils.toInt((String) null, 1);
    assertEquals(1, int0);
}",1,
project,0,test07272,"public void test07272() throws Throwable {
    int int0 = NumberUtils.toInt((String) null);
    assertEquals(0, int0);
}",0,
project,0,test07373,"public void test07373() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber("" "");
    assertFalse(boolean0);
}",0,
project,0,test07474,"public void test07474() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber(""--ZZt{hQ=!9La{>?^%"");
    assertFalse(boolean0);
}",0,
project,0,test07575,"public void test07575() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber(""..."");
    assertFalse(boolean0);
}",0,
project,0,test07676,"public void test07676() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber(""-0xCannot pad a negative amount: "");
    assertFalse(boolean0);
}",0,
project,0,test07777,"public void test07777() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber(""0x4MJ+93"");
    assertFalse(boolean0);
}",0,
project,0,test07878,"public void test07878() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber(""-0Ix..."");
    assertFalse(boolean0);
}",0,
project,0,test07979,"public void test07979() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber(""Z"");
    assertFalse(boolean0);
}",0,
project,0,test08080,"public void test08080() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber(""+d"");
    assertFalse(boolean0);
}",0,
project,0,test08181,"public void test08181() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber((String) null);
    assertFalse(boolean0);
}",0,
project,0,test08282,"public void test08282() throws Throwable {
    boolean boolean0 = NumberUtils.isNumber(""-0xe*Hy$w=. (/a8'Bi)"");
    assertFalse(boolean0);
}",0,
project,0,test08383,"public void test08383() throws Throwable {
    boolean boolean0 = NumberUtils.isDigits(""4^Fa,j1x"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test08484,"public void test08484() throws Throwable {
    boolean boolean0 = NumberUtils.isDigits("""");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test08585,"public void test08585() throws Throwable {
    int int0 = NumberUtils.compare((float) 1L, (float) 1L);
    assertEquals(0, int0);
}",0,
project,0,test08686,"public void test08686() throws Throwable {
    int int0 = NumberUtils.compare((-1.0F), 0.0F);
    assertEquals((-1), int0);
}",0,
project,0,test08787,"public void test08787() throws Throwable {
    int int0 = NumberUtils.compare(2189.0F, (-3505.066F));
    assertEquals(1, int0);
}",0,
project,0,test08888,"public void test08888() throws Throwable {
    int int0 = NumberUtils.compare(2384.6, (-1.0));
    assertEquals(1, int0);
}",0,
project,0,test08989,"public void test08989() throws Throwable {
    int int0 = NumberUtils.compare((double) 0.0F, (double) 2485);
    assertEquals((-1), int0);
}",1,
project,0,test09090,"public void test09090() throws Throwable {
    int int0 = NumberUtils.compare((-1.0), (-1.0));
    assertEquals(0, int0);
}",1,
project,0,test09191,"public void test09191() throws Throwable {
    byte byte0 = NumberUtils.max((byte) (-56), (byte) 0, (byte) 70);
    assertEquals((byte) 70, byte0);
}",0,
project,0,test09292,"public void test09292() throws Throwable {
    byte byte0 = NumberUtils.max((byte) (-1), (byte) (-100), (byte) (-1));
    assertEquals((byte) (-1), byte0);
}",0,
project,0,test09393,"public void test09393() throws Throwable {
    short short0 = NumberUtils.max((short) (byte) 47, (short) (byte) 47, (short) 347);
    assertEquals((short) 347, short0);
}",0,
project,0,test09494,"public void test09494() throws Throwable {
    short short0 = NumberUtils.max((short) (byte) (-100), (short) 0, (short) (-4501));
    assertEquals((short) 0, short0);
}",0,
project,0,test09595,"public void test09595() throws Throwable {
    short short0 = NumberUtils.max((short) 2033, (short) 0, (short) (-4501));
    assertEquals((short) 2033, short0);
}",0,
project,0,test09696,"public void test09696() throws Throwable {
    int int0 = NumberUtils.max((-63), (-798), 1);
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test09797,"public void test09797() throws Throwable {
    int int0 = NumberUtils.max((int) (byte) (-1), 1732, (int) (byte) (-100));
    assertEquals(1732, int0);
}",0,"assertEquals(0, int0)"
project,0,test09898,"public void test09898() throws Throwable {
    int int0 = NumberUtils.max(0, 0, 0);
    assertEquals(0, int0);
}",0,
project,0,test09999,"public void test09999() throws Throwable {
    long long0 = NumberUtils.max((-2602L), 968L, 968L);
    assertEquals(968L, long0);
}",1,
project,0,test100100,"public void test100100() throws Throwable {
    long long0 = NumberUtils.max((-3319L), (-3319L), (-987L));
    assertEquals((-987L), long0);
}",0,"assertEquals(0, long0)"
project,0,test101101,"public void test101101() throws Throwable {
    byte byte0 = NumberUtils.min((byte) 0, (byte) 0, (byte) (-30));
    assertEquals((byte) (-30), byte0);
}",0,
project,0,test102102,"public void test102102() throws Throwable {
    byte byte0 = NumberUtils.min((byte) 115, (byte) 0, (byte) 0);
    assertEquals((byte) 0, byte0);
}",0,assertNotNull(byte0)
project,0,test103103,"public void test103103() throws Throwable {
    short short0 = NumberUtils.min((short) 57, (short) 3187, (short) 1);
    assertEquals((short) 1, short0);
}",0,
project,0,test104104,"public void test104104() throws Throwable {
    short short0 = NumberUtils.min((short) 100, (short) (-127), (short) 119);
    assertEquals((short) (-127), short0);
}",0,
project,0,test105105,"public void test105105() throws Throwable {
    int int0 = NumberUtils.min(261, (-1377), (-3085));
    assertEquals((-3085), int0);
}",0,"assertEquals(0, int0)"
project,0,test106106,"public void test106106() throws Throwable {
    int int0 = NumberUtils.min(2485, 0, 2485);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test107107,"public void test107107() throws Throwable {
    long long0 = NumberUtils.min(3013L, 0L, (long) 0);
    assertEquals(0L, long0);
}",0,"assertEquals(0, long0)"
project,0,test108108,"public void test108108() throws Throwable {
    float[] floatArray0 = new float[5];
    floatArray0[0] = (-2799.361F);
    float float0 = NumberUtils.max(floatArray0);
    assertEquals(0.0F, float0, 0.01F);
}",1,
project,0,test109109,"public void test109109() throws Throwable {
    float[] floatArray0 = new float[0];
    // Undeclared exception!
    try {
        NumberUtils.max(floatArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",1,
project,0,test110110,"public void test110110() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.max((float[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",1,
project,0,test111111,"public void test111111() throws Throwable {
    double[] doubleArray0 = new double[4];
    doubleArray0[0] = (-284.2640756396245);
    double double0 = NumberUtils.max(doubleArray0);
    assertEquals(0.0, double0, 0.01);
}",1,
project,0,test112112,"public void test112112() throws Throwable {
    double[] doubleArray0 = new double[0];
    // Undeclared exception!
    try {
        NumberUtils.max(doubleArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",1,
project,0,test113113,"public void test113113() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.max((double[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",1,
project,0,test114114,"public void test114114() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[1] = (byte) 108;
    byte byte0 = NumberUtils.max(byteArray0);
    assertEquals((byte) 108, byte0);
}",0,"assertEquals(byteArray0, byte0)"
project,0,test115115,"public void test115115() throws Throwable {
    byte[] byteArray0 = new byte[0];
    // Undeclared exception!
    try {
        NumberUtils.max(byteArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",1,
project,0,test116116,"public void test116116() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.max((byte[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",1,
project,0,test117117,"public void test117117() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byte byte0 = NumberUtils.max(byteArray0);
    assertEquals((byte) 0, byte0);
}",1,
project,0,test118118,"public void test118118() throws Throwable {
    short[] shortArray0 = new short[9];
    shortArray0[1] = (short) 1052;
    short short0 = NumberUtils.max(shortArray0);
    assertEquals((short) 1052, short0);
}",1,
project,0,test119119,"public void test119119() throws Throwable {
    short[] shortArray0 = new short[0];
    // Undeclared exception!
    try {
        NumberUtils.max(shortArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",1,
project,0,test120120,"public void test120120() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.max((short[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",1,
project,0,test121121,"public void test121121() throws Throwable {
    short[] shortArray0 = new short[4];
    short short0 = NumberUtils.max(shortArray0);
    assertEquals((short) 0, short0);
}",1,
project,0,test122122,"public void test122122() throws Throwable {
    int[] intArray0 = new int[4];
    intArray0[3] = (int) (short) 3726;
    int int0 = NumberUtils.max(intArray0);
    assertEquals(3726, int0);
}",1,
project,0,test123123,"public void test123123() throws Throwable {
    int[] intArray0 = new int[0];
    // Undeclared exception!
    try {
        NumberUtils.max(intArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",1,
project,0,test124124,"public void test124124() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.max((int[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",1,
project,0,test125125,"public void test125125() throws Throwable {
    int[] intArray0 = new int[6];
    int int0 = NumberUtils.max(intArray0);
    assertEquals(0, int0);
}",1,
project,0,test126126,"public void test126126() throws Throwable {
    long[] longArray0 = new long[2];
    longArray0[1] = (long) (short) 3726;
    long long0 = NumberUtils.max(longArray0);
    assertEquals(3726L, long0);
}",0,"assertEquals(1, long0)"
project,0,test127127,"public void test127127() throws Throwable {
    long[] longArray0 = new long[0];
    // Undeclared exception!
    try {
        NumberUtils.max(longArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",0,
project,0,test128128,"public void test128128() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.max((long[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",0,
project,0,test129129,"public void test129129() throws Throwable {
    long[] longArray0 = new long[2];
    long long0 = NumberUtils.max(longArray0);
    assertEquals(0L, long0);
}",1,
project,0,test130130,"public void test130130() throws Throwable {
    float[] floatArray0 = new float[8];
    floatArray0[1] = (float) (short) (-1133);
    float float0 = NumberUtils.min(floatArray0);
    assertEquals((-1133.0F), float0, 0.01F);
}",1,
project,0,test131131,"public void test131131() throws Throwable {
    float[] floatArray0 = new float[0];
    // Undeclared exception!
    try {
        NumberUtils.min(floatArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",1,
project,0,test132132,"public void test132132() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.min((float[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",1,
project,0,test133133,"public void test133133() throws Throwable {
    float[] floatArray0 = new float[8];
    float float0 = NumberUtils.min(floatArray0);
    assertEquals(0.0F, float0, 0.01F);
}",1,
project,0,test134134,"public void test134134() throws Throwable {
    double[] doubleArray0 = new double[3];
    doubleArray0[0] = (double) (byte) 64;
    double double0 = NumberUtils.min(doubleArray0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test135135,"public void test135135() throws Throwable {
    double[] doubleArray0 = new double[0];
    // Undeclared exception!
    try {
        NumberUtils.min(doubleArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",0,
project,0,test136136,"public void test136136() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.min((double[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",1,
project,0,test137137,"public void test137137() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[4] = (byte) (-99);
    byte byte0 = NumberUtils.min(byteArray0);
    assertEquals((byte) (-99), byte0);
}",0,
project,0,test138138,"public void test138138() throws Throwable {
    byte[] byteArray0 = new byte[0];
    // Undeclared exception!
    try {
        NumberUtils.min(byteArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",0,
project,0,test139139,"public void test139139() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.min((byte[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",0,
project,0,test140140,"public void test140140() throws Throwable {
    byte[] byteArray0 = new byte[6];
    byte byte0 = NumberUtils.min(byteArray0);
    assertEquals((byte) 0, byte0);
}",0,"assertEquals(byteArray0, byte0)"
project,0,test141141,"public void test141141() throws Throwable {
    short[] shortArray0 = new short[7];
    shortArray0[4] = (short) (byte) (-100);
    short short0 = NumberUtils.min(shortArray0);
    assertEquals((short) (-100), short0);
}",1,
project,0,test142142,"public void test142142() throws Throwable {
    short[] shortArray0 = new short[0];
    // Undeclared exception!
    try {
        NumberUtils.min(shortArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",0,
project,0,test143143,"public void test143143() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.min((short[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",1,
project,0,test144144,"public void test144144() throws Throwable {
    short[] shortArray0 = new short[2];
    short short0 = NumberUtils.min(shortArray0);
    assertEquals((short) 0, short0);
}",0,
project,0,test145145,"public void test145145() throws Throwable {
    int[] intArray0 = new int[8];
    intArray0[1] = (-2258);
    int int0 = NumberUtils.min(intArray0);
    assertEquals((-2258), int0);
}",1,
project,0,test146146,"public void test146146() throws Throwable {
    int[] intArray0 = new int[0];
    // Undeclared exception!
    try {
        NumberUtils.min(intArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",1,
project,0,test147147,"public void test147147() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.min((int[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",1,
project,0,test148148,"public void test148148() throws Throwable {
    int[] intArray0 = new int[6];
    int int0 = NumberUtils.min(intArray0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test149149,"public void test149149() throws Throwable {
    long[] longArray0 = new long[3];
    longArray0[0] = 382L;
    long long0 = NumberUtils.min(longArray0);
    assertEquals(0L, long0);
}",0,"assertEquals(0, long0)"
project,0,test150150,"public void test150150() throws Throwable {
    long[] longArray0 = new long[0];
    // Undeclared exception!
    try {
        NumberUtils.min(longArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Array cannot be empty.
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",1,
project,0,test151151,"public void test151151() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.min((long[]) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // The Array must not be null
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",1,
project,0,test152152,"public void test152152() throws Throwable {
    double[] doubleArray0 = new double[6];
    boolean boolean0 = NumberUtils.equals(doubleArray0, (double[]) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test153153,"public void test153153() throws Throwable {
    double[] doubleArray0 = new double[3];
    boolean boolean0 = NumberUtils.equals(doubleArray0, doubleArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test154154,"public void test154154() throws Throwable {
    double[] doubleArray0 = new double[4];
    double[] doubleArray1 = new double[3];
    boolean boolean0 = NumberUtils.equals(doubleArray0, doubleArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test155155,"public void test155155() throws Throwable {
    float[] floatArray0 = new float[0];
    boolean boolean0 = NumberUtils.equals(floatArray0, (float[]) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test156156,"public void test156156() throws Throwable {
    float[] floatArray0 = new float[3];
    boolean boolean0 = NumberUtils.equals((float[]) null, floatArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test157157,"public void test157157() throws Throwable {
    float[] floatArray0 = new float[0];
    boolean boolean0 = NumberUtils.equals(floatArray0, floatArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test158158,"public void test158158() throws Throwable {
    float[] floatArray0 = new float[6];
    float[] floatArray1 = new float[4];
    boolean boolean0 = NumberUtils.equals(floatArray0, floatArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test159159,"public void test159159() throws Throwable {
    long[] longArray0 = new long[1];
    long[] longArray1 = new long[1];
    longArray1[0] = 577L;
    boolean boolean0 = NumberUtils.equals(longArray0, longArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test160160,"public void test160160() throws Throwable {
    long[] longArray0 = new long[0];
    long[] longArray1 = new long[1];
    boolean boolean0 = NumberUtils.equals(longArray0, longArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test161161,"public void test161161() throws Throwable {
    long[] longArray0 = new long[4];
    boolean boolean0 = NumberUtils.equals(longArray0, (long[]) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test162162,"public void test162162() throws Throwable {
    long[] longArray0 = new long[1];
    boolean boolean0 = NumberUtils.equals((long[]) null, longArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test163163,"public void test163163() throws Throwable {
    long[] longArray0 = new long[0];
    boolean boolean0 = NumberUtils.equals(longArray0, longArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test164164,"public void test164164() throws Throwable {
    long[] longArray0 = new long[1];
    long[] longArray1 = new long[1];
    boolean boolean0 = NumberUtils.equals(longArray0, longArray1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test165165,"public void test165165() throws Throwable {
    int[] intArray0 = new int[6];
    boolean boolean0 = NumberUtils.equals((int[]) null, intArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test166166,"public void test166166() throws Throwable {
    int[] intArray0 = new int[0];
    boolean boolean0 = NumberUtils.equals(intArray0, intArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test167167,"public void test167167() throws Throwable {
    int[] intArray0 = new int[1];
    int[] intArray1 = new int[9];
    boolean boolean0 = NumberUtils.equals(intArray0, intArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test168168,"public void test168168() throws Throwable {
    short[] shortArray0 = new short[2];
    shortArray0[0] = (short) (-1422);
    short[] shortArray1 = new short[2];
    boolean boolean0 = NumberUtils.equals(shortArray0, shortArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test169169,"public void test169169() throws Throwable {
    short[] shortArray0 = new short[1];
    short[] shortArray1 = new short[2];
    boolean boolean0 = NumberUtils.equals(shortArray0, shortArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test170170,"public void test170170() throws Throwable {
    short[] shortArray0 = new short[4];
    boolean boolean0 = NumberUtils.equals(shortArray0, shortArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test171171,"public void test171171() throws Throwable {
    short[] shortArray0 = new short[2];
    short[] shortArray1 = new short[2];
    boolean boolean0 = NumberUtils.equals(shortArray0, shortArray1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test172172,"public void test172172() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byte[] byteArray1 = new byte[4];
    boolean boolean0 = NumberUtils.equals(byteArray0, byteArray1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test173173,"public void test173173() throws Throwable {
    byte[] byteArray0 = new byte[1];
    boolean boolean0 = NumberUtils.equals((byte[]) null, byteArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test174174,"public void test174174() throws Throwable {
    byte[] byteArray0 = new byte[6];
    boolean boolean0 = NumberUtils.equals(byteArray0, byteArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test175175,"public void test175175() throws Throwable {
    byte[] byteArray0 = new byte[0];
    boolean boolean0 = NumberUtils.equals(byteArray0, (byte[]) null);
    assertFalse(boolean0);
}",0,assertFalse(boolean0)
project,0,test176176,"public void test176176() throws Throwable {
    // Undeclared exception!
    try {
        NumberUtils.createBigDecimal("""");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // A blank string is not a valid number
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",1,
project,0,test177177,"public void test177177() throws Throwable {
    BigDecimal bigDecimal0 = NumberUtils.createBigDecimal((String) null);
    assertNull(bigDecimal0);
}",1,
project,0,test178178,"public void test178178() throws Throwable {
    BigInteger bigInteger0 = NumberUtils.createBigInteger((String) null);
    assertNull(bigInteger0);
}",0,
project,0,test179179,"public void test179179() throws Throwable {
    Long long0 = NumberUtils.createLong((String) null);
    assertNull(long0);
}",1,
project,0,test180180,"public void test180180() throws Throwable {
    Integer integer0 = NumberUtils.createInteger((String) null);
    assertNull(integer0);
}",1,
project,0,test181181,"public void test181181() throws Throwable {
    Double double0 = NumberUtils.createDouble((String) null);
    assertNull(double0);
}",1,
project,0,test182182,"public void test182182() throws Throwable {
    Float float0 = NumberUtils.createFloat((String) null);
    assertNull(float0);
}",0,
project,0,test183183,"public void test183183() throws Throwable {
    try {
        NumberUtils.createNumber(""Mj+93"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // Illegal embedded sign character
        //
        verifyException(""java.math.BigInteger"", e);
    }
}",0,
project,0,test184184,"public void test184184() throws Throwable {
    try {
        NumberUtils.createNumber(""The Array must not be null"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // The Array must not be null is not a valid number.
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",0,
project,0,test185185,"public void test185185() throws Throwable {
    try {
        NumberUtils.createNumber(""*V0t]wvkVd"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // *V0t]wvkVd is not a valid number.
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",0,
project,0,test186186,"public void test186186() throws Throwable {
    try {
        NumberUtils.createNumber(""9pA.)p?p+9F"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // 9pA.)p?p+9F is not a valid number.
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",0,
project,0,test187187,"public void test187187() throws Throwable {
    try {
        NumberUtils.createNumber(""{RQD"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // {RQD is not a valid number.
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",0,
project,0,test188188,"public void test188188() throws Throwable {
    try {
        NumberUtils.createNumber(""if!=ck%xy[ZeQwm6"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.math.BigDecimal"", e);
    }
}",0,
project,0,test189189,"public void test189189() throws Throwable {
    try {
        NumberUtils.createNumber(""#!E/s"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // #!E/s is not a valid number.
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",0,
project,0,test190190,"public void test190190() throws Throwable {
    try {
        NumberUtils.createNumber(""..."");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // ... is not a valid number.
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",0,
project,0,test191191,"public void test191191() throws Throwable {
    try {
        NumberUtils.createNumber(""e*Hy$w=. (/a8'Bi)"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // e*Hy$w=. (/a8'Bi) is not a valid number.
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",0,
project,0,test192192,"public void test192192() throws Throwable {
    try {
        NumberUtils.createNumber(""-0x..."");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // For input string: \""-...\""
        //
        verifyException(""java.lang.NumberFormatException"", e);
    }
}",0,
project,0,test193193,"public void test193193() throws Throwable {
    try {
        NumberUtils.createNumber(""0xfL8t2\""|YP[c%Sx;|]"");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // For input string: \""fL8t2\""|YP[c%Sx;|]\""
        //
        verifyException(""java.lang.NumberFormatException"", e);
    }
}",0,
project,0,test194194,"public void test194194() throws Throwable {
    Number number0 = NumberUtils.createNumber(""--{D5s`pD"");
    assertNull(number0);
}",0,
project,0,test195195,"public void test195195() throws Throwable {
    try {
        NumberUtils.createNumber("""");
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
        //
        // A blank string is not a valid number
        //
        verifyException(""org.apache.commons.lang.math.NumberUtils"", e);
    }
}",0,
project,0,test196196,"public void test196196() throws Throwable {
    Number number0 = NumberUtils.createNumber((String) null);
    assertNull(number0);
}",0,
project,0,test197197,"public void test197197() throws Throwable {
    double double0 = NumberUtils.toDouble((String) null);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test198198,"public void test198198() throws Throwable {
    float float0 = NumberUtils.toFloat((String) null);
    assertEquals(0.0F, float0, 0.01F);
}",0,
project,0,test199199,"public void test199199() throws Throwable {
    long long0 = NumberUtils.toLong((String) null);
    assertEquals(0L, long0);
}",0,"assertEquals(0, long0)"
project,0,test200200,"public void test200200() throws Throwable {
    float float0 = NumberUtils.max(0.0F, 2918.4F, (float) (byte) 0);
    assertEquals(2918.4F, float0, 0.01F);
}",0,
project,0,test201201,"public void test201201() throws Throwable {
    double double0 = NumberUtils.max(0.0, 0.0, 0.0);
    assertEquals(0.0, double0, 0.01);
}",0,
project,0,test202202,"public void test202202() throws Throwable {
    double double0 = NumberUtils.min((-69.8402412), 0.0, (double) 0.0F);
    assertEquals((-69.8402412), double0, 0.01);
}",0,
project,0,test203203,"public void test203203() throws Throwable {
    float float0 = NumberUtils.min((-2799.361F), (float) 0L, (float) 0);
    assertEquals((-2799.361F), float0, 0.01F);
}",0,
project,0,test204204,"public void test204204() throws Throwable {
    int int0 = NumberUtils.stringToInt(""[/\""OXmo\"""", (-63));
    assertEquals((-63), int0);
}",1,
project,0,test205205,"public void test205205() throws Throwable {
    int int0 = NumberUtils.stringToInt((String) null);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
